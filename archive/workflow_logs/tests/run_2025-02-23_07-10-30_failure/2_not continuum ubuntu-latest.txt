2025-02-25T14:06:08.8833624Z Requested labels: ubuntu-latest
2025-02-25T14:06:08.8833993Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2984/merge
2025-02-25T14:06:08.8834138Z Waiting for a runner to pick up this job...
2025-02-25T14:06:09.1362386Z Job is waiting for a hosted runner to come online.
2025-02-25T14:06:12.7399312Z Job is about to start running on the hosted runner: GitHub Actions 23 (hosted)
2025-02-25T14:06:14.5463772Z Current runner version: '2.322.0'
2025-02-25T14:06:14.5490132Z ##[group]Operating System
2025-02-25T14:06:14.5491225Z Ubuntu
2025-02-25T14:06:14.5491860Z 24.04.1
2025-02-25T14:06:14.5492397Z LTS
2025-02-25T14:06:14.5492870Z ##[endgroup]
2025-02-25T14:06:14.5493503Z ##[group]Runner Image
2025-02-25T14:06:14.5494107Z Image: ubuntu-24.04
2025-02-25T14:06:14.5494656Z Version: 20250209.1.0
2025-02-25T14:06:14.5495884Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250209.1/images/ubuntu/Ubuntu2404-Readme.md
2025-02-25T14:06:14.5497474Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250209.1
2025-02-25T14:06:14.5498438Z ##[endgroup]
2025-02-25T14:06:14.5499090Z ##[group]Runner Image Provisioner
2025-02-25T14:06:14.5499745Z 2.0.422.1
2025-02-25T14:06:14.5500311Z ##[endgroup]
2025-02-25T14:06:14.5503042Z ##[group]GITHUB_TOKEN Permissions
2025-02-25T14:06:14.5505206Z Actions: read
2025-02-25T14:06:14.5506104Z Attestations: read
2025-02-25T14:06:14.5506834Z Checks: read
2025-02-25T14:06:14.5507341Z Contents: read
2025-02-25T14:06:14.5507904Z Deployments: read
2025-02-25T14:06:14.5508512Z Discussions: read
2025-02-25T14:06:14.5509061Z Issues: read
2025-02-25T14:06:14.5509588Z Metadata: read
2025-02-25T14:06:14.5510153Z Packages: read
2025-02-25T14:06:14.5510921Z Pages: read
2025-02-25T14:06:14.5511455Z PullRequests: read
2025-02-25T14:06:14.5512114Z RepositoryProjects: read
2025-02-25T14:06:14.5512742Z SecurityEvents: read
2025-02-25T14:06:14.5513258Z Statuses: read
2025-02-25T14:06:14.5513863Z ##[endgroup]
2025-02-25T14:06:14.5517118Z Secret source: None
2025-02-25T14:06:14.5517961Z Prepare workflow directory
2025-02-25T14:06:14.6150479Z Prepare all required actions
2025-02-25T14:06:14.6187651Z Getting action download info
2025-02-25T14:06:14.7779797Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-02-25T14:06:14.8607141Z Download action repository 'actions/upload-artifact@v4' (SHA:4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1)
2025-02-25T14:06:15.2163450Z Complete job name: not continuum ubuntu-latest 
2025-02-25T14:06:15.2822869Z ##[group]Run actions/checkout@v4
2025-02-25T14:06:15.2823708Z with:
2025-02-25T14:06:15.2824126Z   repository: tardis-sn/tardis
2025-02-25T14:06:15.2824773Z   token: ***
2025-02-25T14:06:15.2825183Z   ssh-strict: true
2025-02-25T14:06:15.2825589Z   ssh-user: git
2025-02-25T14:06:15.2826015Z   persist-credentials: true
2025-02-25T14:06:15.2826478Z   clean: true
2025-02-25T14:06:15.2826907Z   sparse-checkout-cone-mode: true
2025-02-25T14:06:15.2827412Z   fetch-depth: 1
2025-02-25T14:06:15.2827817Z   fetch-tags: false
2025-02-25T14:06:15.2828240Z   show-progress: true
2025-02-25T14:06:15.2828657Z   lfs: false
2025-02-25T14:06:15.2829044Z   submodules: false
2025-02-25T14:06:15.2829478Z   set-safe-directory: true
2025-02-25T14:06:15.2830110Z env:
2025-02-25T14:06:15.2830490Z   CACHE_NUMBER: 0
2025-02-25T14:06:15.2831851Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:15.2833181Z   CODECOV_TOKEN: 
2025-02-25T14:06:15.2833588Z ##[endgroup]
2025-02-25T14:06:15.4760098Z Syncing repository: tardis-sn/tardis
2025-02-25T14:06:15.4762748Z ##[group]Getting Git version info
2025-02-25T14:06:15.4764189Z Working directory is '/home/runner/work/tardis/tardis'
2025-02-25T14:06:15.4765943Z [command]/usr/bin/git version
2025-02-25T14:06:15.4829091Z git version 2.48.1
2025-02-25T14:06:15.4857847Z ##[endgroup]
2025-02-25T14:06:15.4871657Z Temporarily overriding HOME='/home/runner/work/_temp/c25734e3-1a8a-4429-9dc7-6210737a0e66' before making global git config changes
2025-02-25T14:06:15.4873278Z Adding repository directory to the temporary git global config as a safe directory
2025-02-25T14:06:15.4877539Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-25T14:06:15.4915226Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-02-25T14:06:15.4919718Z ##[group]Initializing the repository
2025-02-25T14:06:15.4924715Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-02-25T14:06:15.4992111Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-25T14:06:15.4993514Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-25T14:06:15.4994475Z hint: of your new repositories, which will suppress this warning, call:
2025-02-25T14:06:15.4995176Z hint:
2025-02-25T14:06:15.4995804Z hint: 	git config --global init.defaultBranch <name>
2025-02-25T14:06:15.4996841Z hint:
2025-02-25T14:06:15.4997437Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-25T14:06:15.4998958Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-25T14:06:15.5000472Z hint:
2025-02-25T14:06:15.5001510Z hint: 	git branch -m <name>
2025-02-25T14:06:15.5002905Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-02-25T14:06:15.5010173Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-02-25T14:06:15.5042452Z ##[endgroup]
2025-02-25T14:06:15.5043679Z ##[group]Disabling automatic garbage collection
2025-02-25T14:06:15.5047446Z [command]/usr/bin/git config --local gc.auto 0
2025-02-25T14:06:15.5076441Z ##[endgroup]
2025-02-25T14:06:15.5077708Z ##[group]Setting up auth
2025-02-25T14:06:15.5083949Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-25T14:06:15.5114953Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-25T14:06:15.5425779Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-25T14:06:15.5471484Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-25T14:06:15.5726487Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-25T14:06:15.5769275Z ##[endgroup]
2025-02-25T14:06:15.5770852Z ##[group]Fetching the repository
2025-02-25T14:06:15.5780144Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +61f03c0469c607a92e885b3bb4d7530de32a4623:refs/remotes/pull/2984/merge
2025-02-25T14:06:16.6692143Z From https://github.com/tardis-sn/tardis
2025-02-25T14:06:16.6694549Z  * [new ref]         61f03c0469c607a92e885b3bb4d7530de32a4623 -> pull/2984/merge
2025-02-25T14:06:16.6717679Z ##[endgroup]
2025-02-25T14:06:16.6718839Z ##[group]Determining the checkout info
2025-02-25T14:06:16.6720366Z ##[endgroup]
2025-02-25T14:06:16.6725232Z [command]/usr/bin/git sparse-checkout disable
2025-02-25T14:06:16.6765856Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-25T14:06:16.6795761Z ##[group]Checking out the ref
2025-02-25T14:06:16.6800360Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2984/merge
2025-02-25T14:06:16.8824430Z Note: switching to 'refs/remotes/pull/2984/merge'.
2025-02-25T14:06:16.8827684Z 
2025-02-25T14:06:16.8828496Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-25T14:06:16.8830436Z changes and commit them, and you can discard any commits you make in this
2025-02-25T14:06:16.8832549Z state without impacting any branches by switching back to a branch.
2025-02-25T14:06:16.8833761Z 
2025-02-25T14:06:16.8834503Z If you want to create a new branch to retain commits you create, you may
2025-02-25T14:06:16.8836217Z do so (now or later) by using -c with the switch command. Example:
2025-02-25T14:06:16.8837143Z 
2025-02-25T14:06:16.8837516Z   git switch -c <new-branch-name>
2025-02-25T14:06:16.8838166Z 
2025-02-25T14:06:16.8838552Z Or undo this operation with:
2025-02-25T14:06:16.8839133Z 
2025-02-25T14:06:16.8839959Z   git switch -
2025-02-25T14:06:16.8840484Z 
2025-02-25T14:06:16.8841455Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-25T14:06:16.8842585Z 
2025-02-25T14:06:16.8843784Z HEAD is now at 61f03c0 Merge f9c2f1cbedead5258cd9ebfa075033ba4db91302 into 6e790c66049717c1a7df370212bf7063c85b7fdd
2025-02-25T14:06:16.8852287Z ##[endgroup]
2025-02-25T14:06:16.8903986Z [command]/usr/bin/git log -1 --format=%H
2025-02-25T14:06:16.8929578Z 61f03c0469c607a92e885b3bb4d7530de32a4623
2025-02-25T14:06:16.9300692Z Prepare all required actions
2025-02-25T14:06:16.9301768Z Getting action download info
2025-02-25T14:06:17.0641731Z Download action repository 'actions/cache@v4' (SHA:0c907a75c2c80ebcb7f088228285e798b750cf8f)
2025-02-25T14:06:17.3888310Z ##[group]Run ./.github/actions/setup_lfs
2025-02-25T14:06:17.3889224Z with:
2025-02-25T14:06:17.3890071Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-02-25T14:06:17.3891289Z   atom-data-sparse: false
2025-02-25T14:06:17.3892147Z env:
2025-02-25T14:06:17.3892861Z   CACHE_NUMBER: 0
2025-02-25T14:06:17.3894174Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:17.3895519Z   CODECOV_TOKEN: 
2025-02-25T14:06:17.3896248Z ##[endgroup]
2025-02-25T14:06:17.4073722Z ##[group]Run actions/checkout@v4
2025-02-25T14:06:17.4074531Z with:
2025-02-25T14:06:17.4075293Z   repository: tardis-sn/tardis-regression-data
2025-02-25T14:06:17.4076215Z   path: tardis-regression-data
2025-02-25T14:06:17.4076998Z   lfs: false
2025-02-25T14:06:17.4077871Z   token: ***
2025-02-25T14:06:17.4078577Z   ssh-strict: true
2025-02-25T14:06:17.4079283Z   ssh-user: git
2025-02-25T14:06:17.4080003Z   persist-credentials: true
2025-02-25T14:06:17.4080909Z   clean: true
2025-02-25T14:06:17.4081647Z   sparse-checkout-cone-mode: true
2025-02-25T14:06:17.4082417Z   fetch-depth: 1
2025-02-25T14:06:17.4083122Z   fetch-tags: false
2025-02-25T14:06:17.4083884Z   show-progress: true
2025-02-25T14:06:17.4084655Z   submodules: false
2025-02-25T14:06:17.4085385Z   set-safe-directory: true
2025-02-25T14:06:17.4086123Z env:
2025-02-25T14:06:17.4086804Z   CACHE_NUMBER: 0
2025-02-25T14:06:17.4088118Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:17.4089419Z   CODECOV_TOKEN: 
2025-02-25T14:06:17.4090149Z ##[endgroup]
2025-02-25T14:06:17.5069158Z Syncing repository: tardis-sn/tardis-regression-data
2025-02-25T14:06:17.5076134Z ##[group]Getting Git version info
2025-02-25T14:06:17.5077291Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-02-25T14:06:17.5123370Z [command]/usr/bin/git version
2025-02-25T14:06:17.5162750Z git version 2.48.1
2025-02-25T14:06:17.5188834Z ##[endgroup]
2025-02-25T14:06:17.5200725Z Temporarily overriding HOME='/home/runner/work/_temp/d133e43f-73ce-419b-b0aa-ddafa2bd564b' before making global git config changes
2025-02-25T14:06:17.5202493Z Adding repository directory to the temporary git global config as a safe directory
2025-02-25T14:06:17.5206413Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-25T14:06:17.5239670Z ##[group]Initializing the repository
2025-02-25T14:06:17.5245915Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-25T14:06:17.5283817Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-25T14:06:17.5285787Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-25T14:06:17.5287086Z hint: of your new repositories, which will suppress this warning, call:
2025-02-25T14:06:17.5288054Z hint:
2025-02-25T14:06:17.5288891Z hint: 	git config --global init.defaultBranch <name>
2025-02-25T14:06:17.5289835Z hint:
2025-02-25T14:06:17.5291233Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-25T14:06:17.5292716Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-25T14:06:17.5293683Z hint:
2025-02-25T14:06:17.5294464Z hint: 	git branch -m <name>
2025-02-25T14:06:17.5295932Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-02-25T14:06:17.5298303Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-02-25T14:06:17.5328541Z ##[endgroup]
2025-02-25T14:06:17.5330475Z ##[group]Disabling automatic garbage collection
2025-02-25T14:06:17.5332460Z [command]/usr/bin/git config --local gc.auto 0
2025-02-25T14:06:17.5361034Z ##[endgroup]
2025-02-25T14:06:17.5362224Z ##[group]Setting up auth
2025-02-25T14:06:17.5366705Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-25T14:06:17.5396750Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-25T14:06:17.5625072Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-25T14:06:17.5662452Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-25T14:06:17.5892401Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-25T14:06:17.5931467Z ##[endgroup]
2025-02-25T14:06:17.5933654Z ##[group]Determining the default branch
2025-02-25T14:06:17.5935332Z Retrieving the default branch name
2025-02-25T14:06:17.8221904Z Default branch 'main'
2025-02-25T14:06:17.8224630Z ##[endgroup]
2025-02-25T14:06:17.8226531Z ##[group]Fetching the repository
2025-02-25T14:06:17.8233125Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-02-25T14:06:18.1039009Z From https://github.com/tardis-sn/tardis-regression-data
2025-02-25T14:06:18.1041694Z  * [new branch]      main       -> origin/main
2025-02-25T14:06:18.1069205Z ##[endgroup]
2025-02-25T14:06:18.1071426Z ##[group]Determining the checkout info
2025-02-25T14:06:18.1073398Z ##[endgroup]
2025-02-25T14:06:18.1077556Z [command]/usr/bin/git sparse-checkout disable
2025-02-25T14:06:18.1119928Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-25T14:06:18.1150266Z ##[group]Checking out the ref
2025-02-25T14:06:18.1155888Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-02-25T14:06:18.9400206Z Switched to a new branch 'main'
2025-02-25T14:06:18.9401458Z branch 'main' set up to track 'origin/main'.
2025-02-25T14:06:18.9743539Z ##[endgroup]
2025-02-25T14:06:18.9786692Z [command]/usr/bin/git log -1 --format=%H
2025-02-25T14:06:18.9811939Z b2fdf418ac1a3631f8c3d2a5f392b6ebfa09ba0b
2025-02-25T14:06:18.9970497Z ##[group]Run if [ "false" == "true" ]; then
2025-02-25T14:06:18.9971692Z [36;1mif [ "false" == "true" ]; then[0m
2025-02-25T14:06:18.9972078Z [36;1m  echo "Using atom data sparse checkout"[0m
2025-02-25T14:06:18.9972562Z [36;1m  echo "atom_data/kurucz_cd23_chianti_H_He.h5" > .lfs-files-list[0m
2025-02-25T14:06:18.9972984Z [36;1melse[0m
2025-02-25T14:06:18.9973264Z [36;1m  echo "Using full repository checkout"[0m
2025-02-25T14:06:18.9973748Z [36;1m  git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list[0m
2025-02-25T14:06:18.9974149Z [36;1mfi[0m
2025-02-25T14:06:19.0140711Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-25T14:06:19.0141183Z env:
2025-02-25T14:06:19.0141432Z   CACHE_NUMBER: 0
2025-02-25T14:06:19.0142318Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:19.0143281Z   CODECOV_TOKEN: 
2025-02-25T14:06:19.0143800Z ##[endgroup]
2025-02-25T14:06:19.0247147Z Using full repository checkout
2025-02-25T14:06:19.1755909Z ##[group]Run actions/cache/restore@v4
2025-02-25T14:06:19.1756337Z with:
2025-02-25T14:06:19.1756663Z   path: tardis-regression-data/.git/lfs
2025-02-25T14:06:19.1757757Z   key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-25T14:06:19.1758801Z   fail-on-cache-miss: true
2025-02-25T14:06:19.1759381Z   enableCrossOsArchive: false
2025-02-25T14:06:19.1759728Z   lookup-only: false
2025-02-25T14:06:19.1760025Z env:
2025-02-25T14:06:19.1792323Z   CACHE_NUMBER: 0
2025-02-25T14:06:19.1793091Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:19.1793871Z   CODECOV_TOKEN: 
2025-02-25T14:06:19.1794093Z ##[endgroup]
2025-02-25T14:06:19.4390196Z Cache hit for: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-25T14:06:20.4917905Z Received 209715200 of 2160718086 (9.7%), 200.0 MBs/sec
2025-02-25T14:06:21.5112212Z Received 444596224 of 2160718086 (20.6%), 210.2 MBs/sec
2025-02-25T14:06:22.5089560Z Received 671088640 of 2160718086 (31.1%), 212.1 MBs/sec
2025-02-25T14:06:23.5160463Z Received 918552576 of 2160718086 (42.5%), 217.7 MBs/sec
2025-02-25T14:06:24.5171081Z Received 1140850688 of 2160718086 (52.8%), 216.6 MBs/sec
2025-02-25T14:06:25.5165919Z Received 1342177280 of 2160718086 (62.1%), 212.4 MBs/sec
2025-02-25T14:06:26.5177761Z Received 1598029824 of 2160718086 (74.0%), 216.9 MBs/sec
2025-02-25T14:06:27.5202190Z Received 1816133632 of 2160718086 (84.1%), 215.7 MBs/sec
2025-02-25T14:06:28.5212803Z Received 2071986176 of 2160718086 (95.9%), 218.9 MBs/sec
2025-02-25T14:06:28.9900492Z Received 2160718086 of 2160718086 (100.0%), 217.0 MBs/sec
2025-02-25T14:06:28.9904600Z Cache Size: ~2061 MB (2160718086 B)
2025-02-25T14:06:29.0037623Z [command]/usr/bin/tar -xf /home/runner/work/_temp/fa3be3d4-2e2e-4194-b9df-c7cd7b4dfb0b/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-25T14:06:39.5014274Z Cache restored successfully
2025-02-25T14:06:39.8941934Z Cache restored from key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-25T14:06:39.9096083Z ##[group]Run git lfs checkout
2025-02-25T14:06:39.9096484Z [36;1mgit lfs checkout[0m
2025-02-25T14:06:39.9153622Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-25T14:06:39.9154120Z env:
2025-02-25T14:06:39.9154381Z   CACHE_NUMBER: 0
2025-02-25T14:06:39.9155347Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:06:39.9156381Z   CODECOV_TOKEN: 
2025-02-25T14:06:39.9156667Z ##[endgroup]
2025-02-25T14:07:00.2583342Z Checking out LFS objects: 100% (204/204), 5.7 GB | 260 MB/s, done.
2025-02-25T14:07:04.0216063Z Prepare all required actions
2025-02-25T14:07:04.0216459Z Getting action download info
2025-02-25T14:07:04.1484193Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-02-25T14:07:04.4606756Z ##[group]Run ./.github/actions/setup_env
2025-02-25T14:07:04.4607041Z with:
2025-02-25T14:07:04.4607234Z   os-label: linux-64
2025-02-25T14:07:04.4607430Z env:
2025-02-25T14:07:04.4607612Z   CACHE_NUMBER: 0
2025-02-25T14:07:04.4608227Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:04.4608876Z   CODECOV_TOKEN: 
2025-02-25T14:07:04.4609057Z ##[endgroup]
2025-02-25T14:07:04.4631190Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-02-25T14:07:04.4631688Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-02-25T14:07:04.4632487Z [36;1mecho "file_hash=tardis-conda-env-linux-64-${file_hash}-v1" >> "${GITHUB_OUTPUT}"[0m
2025-02-25T14:07:04.4692937Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-25T14:07:04.4693317Z env:
2025-02-25T14:07:04.4693529Z   CACHE_NUMBER: 0
2025-02-25T14:07:04.4694271Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:04.4695040Z   CODECOV_TOKEN: 
2025-02-25T14:07:04.4695274Z ##[endgroup]
2025-02-25T14:07:04.5062875Z ##[group]Run mamba-org/setup-micromamba@v1
2025-02-25T14:07:04.5063202Z with:
2025-02-25T14:07:04.5063447Z   environment-file: conda-linux-64.lock
2025-02-25T14:07:04.5064094Z   cache-environment-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-25T14:07:04.5065034Z   cache-downloads-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-25T14:07:04.5065675Z   environment-name: tardis
2025-02-25T14:07:04.5065925Z   cache-environment: true
2025-02-25T14:07:04.5066178Z   cache-downloads: true
2025-02-25T14:07:04.5066412Z env:
2025-02-25T14:07:04.5066607Z   CACHE_NUMBER: 0
2025-02-25T14:07:04.5067302Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:04.5068038Z   CODECOV_TOKEN: 
2025-02-25T14:07:04.5068257Z ##[endgroup]
2025-02-25T14:07:04.6469265Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:04.6479585Z ##[group]Install micromamba
2025-02-25T14:07:04.9154714Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:04.9155470Z ##[endgroup]
2025-02-25T14:07:04.9156522Z Adding conda-forge to condarc channels ...
2025-02-25T14:07:04.9167580Z ##[group]Initialize micromamba for bash.
2025-02-25T14:07:04.9184680Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:04.9309755Z Modifying RC file "/home/runner/.bashrc"
2025-02-25T14:07:04.9311159Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-02-25T14:07:04.9312284Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-02-25T14:07:04.9313086Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-02-25T14:07:04.9313539Z 
2025-02-25T14:07:04.9313678Z # >>> mamba initialize >>>
2025-02-25T14:07:04.9314267Z # !! Contents within this block are managed by 'mamba init' !!
2025-02-25T14:07:04.9315041Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-02-25T14:07:04.9315784Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-02-25T14:07:04.9316731Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-02-25T14:07:04.9317494Z if [ $? -eq 0 ]; then
2025-02-25T14:07:04.9318112Z     eval "$__mamba_setup"
2025-02-25T14:07:04.9318400Z else
2025-02-25T14:07:04.9318763Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-02-25T14:07:04.9319207Z fi
2025-02-25T14:07:04.9319431Z unset __mamba_setup
2025-02-25T14:07:04.9319715Z # <<< mamba initialize <<<
2025-02-25T14:07:04.9319899Z 
2025-02-25T14:07:04.9331560Z Moving mamba initialize block to .bash_profile
2025-02-25T14:07:04.9341953Z ##[endgroup]
2025-02-25T14:07:04.9343224Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-02-25T14:07:06.0677241Z Received 272629760 of 356815776 (76.4%), 259.2 MBs/sec
2025-02-25T14:07:06.3222164Z Cache Size: ~340 MB (356815776 B)
2025-02-25T14:07:06.3266378Z [command]/usr/bin/tar -xf /home/runner/work/_temp/17e512d0-61e0-468a-88c6-e93b4e8dedf5/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-25T14:07:06.8204815Z Cache restored successfully
2025-02-25T14:07:06.8972148Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64`
2025-02-25T14:07:06.8974251Z ##[endgroup]
2025-02-25T14:07:06.8986068Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-02-25T14:07:07.0680870Z Received 356815776 of 356815776 (100.0%), 169.9 MBs/sec
2025-02-25T14:07:07.9792362Z Received 310378496 of 444032293 (69.9%), 296.0 MBs/sec
2025-02-25T14:07:08.4807671Z Cache Size: ~423 MB (444032293 B)
2025-02-25T14:07:08.4871503Z [command]/usr/bin/tar -xf /home/runner/work/_temp/3b0d1a9d-9e8f-439e-821e-1655a4aaa2f2/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-25T14:07:08.9803141Z Received 444032293 of 444032293 (100.0%), 211.6 MBs/sec
2025-02-25T14:07:13.7135690Z Cache restored successfully
2025-02-25T14:07:13.8164087Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-02-25T14:07:13.8167216Z ##[endgroup]
2025-02-25T14:07:13.8167748Z Adding environment tardis to auto-activate bash ...
2025-02-25T14:07:13.8177703Z Generating micromamba run shell.
2025-02-25T14:07:13.8187296Z ##[endgroup]
2025-02-25T14:07:13.8193787Z Set environment variables.
2025-02-25T14:07:13.8198050Z ##[group]micromamba info
2025-02-25T14:07:13.8201831Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-02-25T14:07:13.8459574Z 
2025-02-25T14:07:13.8460055Z        libmamba version : 1.5.10
2025-02-25T14:07:13.8460980Z      micromamba version : 1.5.10
2025-02-25T14:07:13.8462196Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-02-25T14:07:13.8463363Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-02-25T14:07:13.8464556Z        envs directories : /home/runner/micromamba/envs
2025-02-25T14:07:13.8465393Z           package cache : /home/runner/micromamba/pkgs
2025-02-25T14:07:13.8465939Z                           /home/runner/.mamba/pkgs
2025-02-25T14:07:13.8466428Z             environment : tardis
2025-02-25T14:07:13.8466945Z            env location : /home/runner/micromamba/envs/tardis
2025-02-25T14:07:13.8467562Z       user config files : /home/runner/.mambarc
2025-02-25T14:07:13.8468390Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:13.8469082Z        virtual packages : __unix=0=0
2025-02-25T14:07:13.8469549Z                           __linux=6.8.0=0
2025-02-25T14:07:13.8469966Z                           __glibc=2.39=0
2025-02-25T14:07:13.8470386Z                           __archspec=1=x86_64_v3
2025-02-25T14:07:13.8471151Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-02-25T14:07:13.8471767Z                           https://conda.anaconda.org/conda-forge/noarch
2025-02-25T14:07:13.8472615Z        base environment : /home/runner/micromamba
2025-02-25T14:07:13.8473082Z                platform : linux-64
2025-02-25T14:07:13.8478348Z ##[endgroup]
2025-02-25T14:07:13.8479267Z ##[group]micromamba list
2025-02-25T14:07:13.8481039Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-02-25T14:07:14.2473653Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-02-25T14:07:14.2495104Z 
2025-02-25T14:07:14.2495400Z   Name                           Version              Build                    Channel    
2025-02-25T14:07:14.2496473Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-02-25T14:07:14.2497102Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-02-25T14:07:14.2497731Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-02-25T14:07:14.2498400Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2499520Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2500171Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2501056Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-02-25T14:07:14.2501795Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2502427Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-02-25T14:07:14.2503141Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2503931Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2504664Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2505313Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2505926Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-02-25T14:07:14.2506545Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-02-25T14:07:14.2507189Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2507868Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-02-25T14:07:14.2508562Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2509226Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-02-25T14:07:14.2509865Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2510682Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2511330Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-02-25T14:07:14.2511887Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-02-25T14:07:14.2512565Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-02-25T14:07:14.2513258Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-02-25T14:07:14.2514037Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-02-25T14:07:14.2514889Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-02-25T14:07:14.2515712Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-02-25T14:07:14.2516468Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-02-25T14:07:14.2517442Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2518067Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-02-25T14:07:14.2518854Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2519531Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-02-25T14:07:14.2520156Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2520948Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2521563Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2522194Z   commonmark                     0.9.1                py_0                     conda-forge
2025-02-25T14:07:14.2522871Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-02-25T14:07:14.2523684Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-02-25T14:07:14.2524305Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2524944Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-02-25T14:07:14.2525535Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-02-25T14:07:14.2526078Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2526589Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2527014Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-02-25T14:07:14.2527410Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2527824Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2528242Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-02-25T14:07:14.2528652Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2529022Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-02-25T14:07:14.2529433Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-02-25T14:07:14.2529886Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-02-25T14:07:14.2530685Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-02-25T14:07:14.2531446Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-02-25T14:07:14.2531880Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-02-25T14:07:14.2532312Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-02-25T14:07:14.2532740Z   fonts-conda-forge              1                    0                        conda-forge
2025-02-25T14:07:14.2533146Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-02-25T14:07:14.2533660Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2534253Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-02-25T14:07:14.2534817Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-02-25T14:07:14.2535404Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2536015Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-02-25T14:07:14.2536941Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-02-25T14:07:14.2537629Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-02-25T14:07:14.2538226Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-02-25T14:07:14.2538800Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-02-25T14:07:14.2539448Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-02-25T14:07:14.2540067Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-02-25T14:07:14.2540667Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-02-25T14:07:14.2541033Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-02-25T14:07:14.2541371Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2542304Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2542852Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-02-25T14:07:14.2543482Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-02-25T14:07:14.2544112Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-02-25T14:07:14.2544563Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-02-25T14:07:14.2544930Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2545706Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2546400Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2547090Z   icu                            73.2                 h59595ed_0               conda-forge
2025-02-25T14:07:14.2547475Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2547838Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2548259Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-02-25T14:07:14.2548691Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-02-25T14:07:14.2549121Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2549532Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2549911Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-02-25T14:07:14.2550277Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-02-25T14:07:14.2550908Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2551340Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2551736Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2552117Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2552460Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2552803Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2553162Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-02-25T14:07:14.2553542Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2554178Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2554705Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2555154Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2555548Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2555954Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-02-25T14:07:14.2556345Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2556758Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2557193Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2557620Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2558231Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2558664Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2559093Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2559490Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-02-25T14:07:14.2559862Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-02-25T14:07:14.2560222Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-02-25T14:07:14.2560750Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-02-25T14:07:14.2561117Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-02-25T14:07:14.2561494Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-02-25T14:07:14.2561851Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-02-25T14:07:14.2562196Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-02-25T14:07:14.2562562Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-02-25T14:07:14.2562959Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2563369Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2563765Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2564153Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-02-25T14:07:14.2564523Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-02-25T14:07:14.2564908Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-02-25T14:07:14.2565311Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-02-25T14:07:14.2565687Z   libev                          4.33                 hd590300_2               conda-forge
2025-02-25T14:07:14.2566047Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-02-25T14:07:14.2566416Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-02-25T14:07:14.2566788Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-02-25T14:07:14.2567254Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-02-25T14:07:14.2567634Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-02-25T14:07:14.2568303Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-02-25T14:07:14.2569045Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-02-25T14:07:14.2569738Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-02-25T14:07:14.2570113Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-02-25T14:07:14.2570494Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-02-25T14:07:14.2571151Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-02-25T14:07:14.2571550Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-02-25T14:07:14.2571945Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-02-25T14:07:14.2572325Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-02-25T14:07:14.2573201Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-02-25T14:07:14.2573606Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-02-25T14:07:14.2573979Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-02-25T14:07:14.2574362Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-02-25T14:07:14.2574753Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-02-25T14:07:14.2575135Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-02-25T14:07:14.2575546Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-02-25T14:07:14.2575968Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-02-25T14:07:14.2576346Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-02-25T14:07:14.2576740Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-02-25T14:07:14.2577135Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-02-25T14:07:14.2577516Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-02-25T14:07:14.2577898Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-02-25T14:07:14.2578266Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-02-25T14:07:14.2578657Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-02-25T14:07:14.2579013Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-02-25T14:07:14.2579390Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-02-25T14:07:14.2579775Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-02-25T14:07:14.2580128Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-02-25T14:07:14.2580468Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-02-25T14:07:14.2581031Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-02-25T14:07:14.2581446Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-02-25T14:07:14.2581877Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2582283Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2582635Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-02-25T14:07:14.2583108Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-02-25T14:07:14.2583464Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2583824Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-02-25T14:07:14.2584210Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-02-25T14:07:14.2584607Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2584983Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2585360Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-02-25T14:07:14.2585752Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2586167Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-02-25T14:07:14.2586697Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2587065Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2587437Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-02-25T14:07:14.2587813Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2588206Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2588566Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-02-25T14:07:14.2588936Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2589340Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2589726Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-02-25T14:07:14.2590113Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-02-25T14:07:14.2590482Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-02-25T14:07:14.2591125Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2591503Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-02-25T14:07:14.2591880Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-02-25T14:07:14.2592257Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2592650Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2593026Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-02-25T14:07:14.2593429Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-02-25T14:07:14.2593816Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2594204Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-02-25T14:07:14.2594553Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2594926Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2595289Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2595650Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-02-25T14:07:14.2596010Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2596414Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-02-25T14:07:14.2596939Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-02-25T14:07:14.2597305Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2597660Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-02-25T14:07:14.2598068Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2598503Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2598887Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2599250Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2599650Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2600212Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-02-25T14:07:14.2600935Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-02-25T14:07:14.2601523Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-02-25T14:07:14.2602057Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-02-25T14:07:14.2602450Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2602838Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2603219Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-02-25T14:07:14.2603626Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-02-25T14:07:14.2604026Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2604411Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-02-25T14:07:14.2604786Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2605169Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-02-25T14:07:14.2605558Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2605928Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-02-25T14:07:14.2606285Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-02-25T14:07:14.2606651Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2607033Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2607486Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2607927Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2608363Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2608788Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-02-25T14:07:14.2609203Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2609680Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2610172Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2610744Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2611160Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-02-25T14:07:14.2611798Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2612178Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-02-25T14:07:14.2612550Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-02-25T14:07:14.2612918Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-02-25T14:07:14.2613338Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2613755Z   readline                       8.2                  h8228510_1               conda-forge
2025-02-25T14:07:14.2614157Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2614579Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2615161Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2615606Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2616064Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-02-25T14:07:14.2616485Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-02-25T14:07:14.2616866Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-02-25T14:07:14.2617236Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-02-25T14:07:14.2617641Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-02-25T14:07:14.2618053Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2618486Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2618939Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-02-25T14:07:14.2619344Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-02-25T14:07:14.2619736Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2620147Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-02-25T14:07:14.2620705Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2621156Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2621592Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2621991Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2622415Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2622878Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-02-25T14:07:14.2623330Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2623783Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2624258Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2624718Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-02-25T14:07:14.2625189Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-02-25T14:07:14.2625689Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2626187Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2626827Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2627329Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2627832Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2628315Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2628803Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2629328Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2629815Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2630216Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-02-25T14:07:14.2630742Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2631280Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2631688Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-02-25T14:07:14.2632093Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2632471Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-02-25T14:07:14.2632833Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2633211Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2633591Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-02-25T14:07:14.2633971Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2634380Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2634789Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-02-25T14:07:14.2635262Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2635752Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-02-25T14:07:14.2636214Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-02-25T14:07:14.2636655Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2637064Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-02-25T14:07:14.2637474Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2637889Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2638300Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2638715Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2639138Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-02-25T14:07:14.2639595Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2640016Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-02-25T14:07:14.2640455Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2641007Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-02-25T14:07:14.2641418Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-02-25T14:07:14.2641946Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-02-25T14:07:14.2642355Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-02-25T14:07:14.2642761Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-02-25T14:07:14.2643172Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-02-25T14:07:14.2643602Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-02-25T14:07:14.2644029Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-02-25T14:07:14.2644492Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-02-25T14:07:14.2644935Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-02-25T14:07:14.2645351Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-02-25T14:07:14.2645868Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-02-25T14:07:14.2646227Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-02-25T14:07:14.2646605Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-02-25T14:07:14.2646977Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-02-25T14:07:14.2647341Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-02-25T14:07:14.2647710Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-02-25T14:07:14.2648068Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-02-25T14:07:14.2648713Z ##[endgroup]
2025-02-25T14:07:14.2736516Z ##[group]Run pip install -e . --user
2025-02-25T14:07:14.2736942Z [36;1mpip install -e . --user[0m
2025-02-25T14:07:14.2799640Z shell: /usr/bin/bash -l {0}
2025-02-25T14:07:14.2799987Z env:
2025-02-25T14:07:14.2800242Z   CACHE_NUMBER: 0
2025-02-25T14:07:14.2801306Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:14.2802269Z   CODECOV_TOKEN: 
2025-02-25T14:07:14.2802587Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-25T14:07:14.2803022Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:14.2803524Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:14.2803966Z ##[endgroup]
2025-02-25T14:07:14.9379981Z Obtaining file:///home/runner/work/tardis/tardis
2025-02-25T14:07:14.9417538Z   Installing build dependencies: started
2025-02-25T14:07:17.7313275Z   Installing build dependencies: finished with status 'done'
2025-02-25T14:07:17.7319558Z   Checking if build backend supports build_editable: started
2025-02-25T14:07:17.8543584Z   Checking if build backend supports build_editable: finished with status 'done'
2025-02-25T14:07:17.8550711Z   Getting requirements to build editable: started
2025-02-25T14:07:18.3504885Z   Getting requirements to build editable: finished with status 'done'
2025-02-25T14:07:18.3514410Z   Preparing editable metadata (pyproject.toml): started
2025-02-25T14:07:18.8232209Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-02-25T14:07:18.8824733Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-02-25T14:07:18.9215369Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-02-25T14:07:18.9224657Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-02-25T14:07:18.9235204Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-02-25T14:07:18.9243365Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-02-25T14:07:18.9252885Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-02-25T14:07:18.9339880Z Building wheels for collected packages: tardis
2025-02-25T14:07:18.9348557Z   Building editable for tardis (pyproject.toml): started
2025-02-25T14:07:19.7063416Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-02-25T14:07:19.7070190Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8879 sha256=39daf92c84848501ce29e2d79cca77e6d89b9e7bd5c7d61cfc298b2d6ebe1cca
2025-02-25T14:07:19.7072331Z   Stored in directory: /tmp/pip-ephem-wheel-cache-upc_8nh_/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-02-25T14:07:19.7102197Z Successfully built tardis
2025-02-25T14:07:20.4777221Z Installing collected packages: tardis
2025-02-25T14:07:20.4881115Z Successfully installed tardis-0.0.0
2025-02-25T14:07:20.7052141Z ##[group]Run pip install qgridnext
2025-02-25T14:07:20.7052561Z [36;1mpip install qgridnext[0m
2025-02-25T14:07:20.7112949Z shell: /usr/bin/bash -l {0}
2025-02-25T14:07:20.7113288Z env:
2025-02-25T14:07:20.7113552Z   CACHE_NUMBER: 0
2025-02-25T14:07:20.7114454Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:20.7115414Z   CODECOV_TOKEN: 
2025-02-25T14:07:20.7115739Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-25T14:07:20.7116189Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:20.7116724Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:20.7117176Z ##[endgroup]
2025-02-25T14:07:21.3591831Z Collecting qgridnext
2025-02-25T14:07:21.3876010Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-02-25T14:07:21.3961714Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-02-25T14:07:21.3970039Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-02-25T14:07:21.3978919Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-02-25T14:07:21.3988657Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-02-25T14:07:21.4073834Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-25T14:07:21.4082154Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-02-25T14:07:21.4094426Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-02-25T14:07:21.4112388Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-02-25T14:07:21.4126356Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-02-25T14:07:21.4563872Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-02-25T14:07:21.4577446Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-25T14:07:21.4585122Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-25T14:07:21.4894862Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-02-25T14:07:21.4908783Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-02-25T14:07:21.4916948Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-02-25T14:07:21.4927538Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-02-25T14:07:21.4936212Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-02-25T14:07:21.4945850Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-02-25T14:07:21.4964341Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-02-25T14:07:21.5010682Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-02-25T14:07:21.5066337Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-02-25T14:07:21.5252822Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-02-25T14:07:21.5396262Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-02-25T14:07:21.5409059Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-02-25T14:07:21.5424116Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-25T14:07:21.5434107Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-02-25T14:07:21.5442195Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-02-25T14:07:21.5471190Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-02-25T14:07:21.5499726Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-02-25T14:07:21.5635843Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-02-25T14:07:21.5645100Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-02-25T14:07:21.5652110Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-25T14:07:21.5985031Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-02-25T14:07:21.5996154Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-02-25T14:07:21.6007076Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-02-25T14:07:21.6017384Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-02-25T14:07:21.6028842Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-02-25T14:07:21.6039961Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-25T14:07:21.6051172Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-02-25T14:07:21.6064622Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-02-25T14:07:21.6075011Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-02-25T14:07:21.6084261Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-02-25T14:07:21.6094098Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-02-25T14:07:21.6102458Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-02-25T14:07:21.6113105Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-02-25T14:07:21.6137398Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-02-25T14:07:21.6139689Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-25T14:07:21.6152041Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-02-25T14:07:21.6429600Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-02-25T14:07:21.6440712Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-02-25T14:07:21.6452125Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-02-25T14:07:21.6465868Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-02-25T14:07:21.6491292Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-02-25T14:07:21.6675985Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-02-25T14:07:21.6702459Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-02-25T14:07:21.6712797Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-02-25T14:07:21.6730850Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-02-25T14:07:21.7077062Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-02-25T14:07:21.7085981Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-02-25T14:07:21.7174783Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-02-25T14:07:21.7342576Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-02-25T14:07:21.7356637Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-02-25T14:07:21.7432860Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-02-25T14:07:21.7612911Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-02-25T14:07:21.7633437Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-02-25T14:07:21.7647958Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-02-25T14:07:21.7709153Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-02-25T14:07:21.7898818Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-02-25T14:07:21.7908449Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-02-25T14:07:21.7916410Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-02-25T14:07:21.7924059Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-25T14:07:21.8183122Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-25T14:07:21.8329281Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-02-25T14:07:21.8337226Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-02-25T14:07:21.8347488Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-25T14:07:21.8355907Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-02-25T14:07:21.8771835Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-02-25T14:07:21.8789813Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-02-25T14:07:21.8803619Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-02-25T14:07:21.8817089Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-02-25T14:07:21.8827956Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-02-25T14:07:21.8840312Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-25T14:07:21.8856522Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-02-25T14:07:21.8865982Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-25T14:07:21.8979294Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-02-25T14:07:21.9280028Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-02-25T14:07:21.9293402Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-02-25T14:07:22.0055760Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-02-25T14:07:22.0617284Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-02-25T14:07:22.0634021Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-02-25T14:07:22.0647128Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-02-25T14:07:22.0663543Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-25T14:07:22.0677173Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-02-25T14:07:22.1671875Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-02-25T14:07:22.1768599Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-02-25T14:07:22.2287355Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-02-25T14:07:22.2775789Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-25T14:07:22.3072883Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-02-25T14:07:22.3376154Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-02-25T14:07:22.3729178Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 38.6 MB/s eta 0:00:00
2025-02-25T14:07:23.1597985Z Installing collected packages: qgridnext
2025-02-25T14:07:23.2347480Z Successfully installed qgridnext-2.0.4
2025-02-25T14:07:23.4175237Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-25T14:07:23.4176917Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-25T14:07:23.4233591Z shell: /usr/bin/bash -l {0}
2025-02-25T14:07:23.4233920Z env:
2025-02-25T14:07:23.4234167Z   CACHE_NUMBER: 0
2025-02-25T14:07:23.4235050Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:23.4235978Z   CODECOV_TOKEN: 
2025-02-25T14:07:23.4236292Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-25T14:07:23.4236726Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:23.4237263Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:23.4237704Z ##[endgroup]
2025-02-25T14:07:32.0493124Z ============================= test session starts ==============================
2025-02-25T14:07:32.0494329Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-25T14:07:32.0495322Z rootdir: /home/runner/work/tardis/tardis
2025-02-25T14:07:32.0496110Z configfile: pyproject.toml
2025-02-25T14:07:32.0497085Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-25T14:07:32.0498007Z collected 1796 items / 2 deselected / 1794 selected
2025-02-25T14:07:32.0498392Z 
2025-02-25T14:07:37.2065715Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-25T14:07:40.2288012Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-25T14:07:41.8356857Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-25T14:07:43.7637893Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-25T14:07:43.7728913Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-25T14:07:45.0489049Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-25T14:07:45.3922587Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-25T14:07:45.3938702Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-25T14:07:48.8787293Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-25T14:07:48.8911979Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-25T14:07:48.9180792Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-25T14:08:30.8110686Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-25T14:08:30.8260892Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-25T14:08:30.8369514Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-25T14:08:30.8667125Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-25T14:08:30.8871749Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-25T14:08:31.1863416Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-25T14:08:31.6010968Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-25T14:08:31.6204847Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-25T14:08:31.8131356Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-25T14:08:31.8197844Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-25T14:09:31.7695687Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-25T14:09:32.7768742Z ............                                                             [ 10%]
2025-02-25T14:09:35.8722824Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-25T14:09:35.9221137Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-25T14:09:37.3487051Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-25T14:09:38.8494954Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-25T14:09:41.2637417Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-25T14:09:44.2695368Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-25T14:10:35.3062508Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-25T14:10:48.4915468Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-25T14:10:50.2012190Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-25T14:10:53.6876199Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-25T14:10:56.0707970Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-25T14:10:59.6369713Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-25T14:11:03.1991099Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-25T14:11:04.5037322Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-25T14:11:08.9418145Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-25T14:11:12.4609108Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-25T14:11:16.3089161Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-25T14:11:18.9435226Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-25T14:11:22.4225028Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-25T14:11:26.2863788Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-25T14:11:26.9429443Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-25T14:11:27.1788357Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-25T14:11:27.1903605Z ......                                                                   [ 62%]
2025-02-25T14:11:27.3467266Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-25T14:13:53.0311873Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-25T14:13:53.0343370Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-25T14:14:18.2007455Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-25T14:14:31.7529482Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-25T14:14:32.5033303Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-25T14:14:41.6266041Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-25T14:14:41.6478473Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-25T14:14:42.1549809Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-25T14:14:42.1622818Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-25T14:14:44.7653017Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-25T14:14:44.7844159Z ..........                                                               [ 69%]
2025-02-25T14:14:44.9576181Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-25T14:14:44.9911182Z .........                                                                [ 72%]
2025-02-25T14:15:04.7297467Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-25T14:16:10.5742775Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-25T14:17:38.1755271Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-25T14:17:38.2482421Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-25T14:17:41.8747597Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-25T14:17:49.6753326Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-25T14:17:49.9217285Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-25T14:17:49.9397890Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-25T14:17:49.9826114Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-25T14:17:59.2015352Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-25T14:17:59.2085851Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-25T14:18:05.8535367Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-25T14:18:06.3617420Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-25T14:18:07.4640998Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-25T14:18:07.6006622Z XX.........                                                              [ 84%]
2025-02-25T14:18:07.6324653Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-25T14:18:07.9747612Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-25T14:18:08.4026445Z .....                                                                    [ 85%]
2025-02-25T14:18:45.1281757Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-25T14:18:45.1574848Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-25T14:18:45.1608175Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-25T14:18:47.7078208Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-25T14:18:47.7268404Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-25T14:18:51.2944103Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-25T14:18:51.2946042Z                                                                          [ 86%]
2025-02-25T14:18:52.0978852Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-25T14:18:53.4681172Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-25T14:18:55.7709341Z ......                                                                   [ 88%]
2025-02-25T14:19:01.3121369Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-25T14:19:04.5518736Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-25T14:19:07.4370264Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-25T14:19:14.4666983Z ....                                                                     [ 92%]
2025-02-25T14:19:21.0720992Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-25T14:19:30.8748210Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-25T14:19:31.3256341Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-25T14:19:31.3985221Z ....                                                                     [ 96%]
2025-02-25T14:19:32.4928951Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-25T14:19:33.1563455Z ..................                                                       [ 98%]
2025-02-25T14:20:38.0086946Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-25T14:20:45.5293523Z ......                                                                   [100%]
2025-02-25T14:20:45.5295011Z 
2025-02-25T14:20:45.5295872Z =================================== FAILURES ===================================
2025-02-25T14:20:45.5297271Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-25T14:20:45.5297828Z 
2025-02-25T14:20:45.5298079Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-25T14:20:45.5298755Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-25T14:20:45.5299291Z 
2025-02-25T14:20:45.5299575Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5300211Z         if err_msg is None:
2025-02-25T14:20:45.5301085Z             if left.shape != right.shape:
2025-02-25T14:20:45.5301676Z                 raise_assert_detail(
2025-02-25T14:20:45.5302320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5303015Z                 )
2025-02-25T14:20:45.5303434Z     
2025-02-25T14:20:45.5303798Z             diff = 0
2025-02-25T14:20:45.5304432Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5304978Z                 # count up differences
2025-02-25T14:20:45.5305648Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5306327Z                     diff += 1
2025-02-25T14:20:45.5306751Z     
2025-02-25T14:20:45.5307187Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5307766Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5308471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5309283Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5309795Z E           
2025-02-25T14:20:45.5310295Z E           numpy array values are different (0.09581 %)
2025-02-25T14:20:45.5311568Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:20:45.5314005Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:20:45.5315000Z 
2025-02-25T14:20:45.5315512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5316047Z 
2025-02-25T14:20:45.5316344Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5316683Z 
2025-02-25T14:20:45.5317034Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f8a146771a0>
2025-02-25T14:20:45.5317907Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a143513a0>
2025-02-25T14:20:45.5318408Z 
2025-02-25T14:20:45.5318565Z     def test_calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5318989Z         nb_simulation_verysimple, regression_data
2025-02-25T14:20:45.5319474Z     ):
2025-02-25T14:20:45.5319824Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:20:45.5320273Z     
2025-02-25T14:20:45.5320811Z         actual = calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5321234Z             legacy_plasma.lines,
2025-02-25T14:20:45.5321917Z             legacy_plasma.level_number_density,
2025-02-25T14:20:45.5322348Z             legacy_plasma.time_explosion,
2025-02-25T14:20:45.5322835Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:20:45.5323264Z         )
2025-02-25T14:20:45.5323638Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.5324149Z >       pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5324401Z 
2025-02-25T14:20:45.5324605Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-25T14:20:45.5325055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5325585Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5326009Z     ???
2025-02-25T14:20:45.5326347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5326637Z 
2025-02-25T14:20:45.5326742Z >   ???
2025-02-25T14:20:45.5327085Z E   AssertionError: MultiIndex level [0] are different
2025-02-25T14:20:45.5327525Z E   
2025-02-25T14:20:45.5327867Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:20:45.5328362Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.5328774Z E          ...
2025-02-25T14:20:45.5329068Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.5329505Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.5329945Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.5330300Z E          ...
2025-02-25T14:20:45.5331027Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.5331769Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.5332348Z E   At positional index 54, first diff: 14 != 12
2025-02-25T14:20:45.5332803Z 
2025-02-25T14:20:45.5332997Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5333648Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.5334511Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.5335448Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.5336392Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.5336676Z 
2025-02-25T14:20:45.5336680Z 
2025-02-25T14:20:45.5336991Z Packets:                                                                                   4020/? [00:11<00:00, 33476.46it/s][A
2025-02-25T14:20:45.5337234Z 
2025-02-25T14:20:45.5337596Z Packets:                                                                                   4021/? [00:12<00:00, 233.55it/s]  [A
2025-02-25T14:20:45.5338263Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:03,  3.01s/it]
2025-02-25T14:20:45.5338606Z 
2025-02-25T14:20:45.5338862Z Packets:                                                                                   4030/? [00:12<00:00, 233.55it/s][A
2025-02-25T14:20:45.5339438Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.5340310Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.5341492Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-25T14:20:45.5341770Z 
2025-02-25T14:20:45.5342081Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f8a146771a0>
2025-02-25T14:20:45.5342759Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a14351670>
2025-02-25T14:20:45.5343193Z 
2025-02-25T14:20:45.5343487Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-25T14:20:45.5343991Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:20:45.5344534Z     
2025-02-25T14:20:45.5344873Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5345254Z             legacy_plasma.lines,
2025-02-25T14:20:45.5345678Z             legacy_plasma.level_number_density,
2025-02-25T14:20:45.5346058Z             legacy_plasma.time_explosion,
2025-02-25T14:20:45.5346437Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:20:45.5346883Z         )
2025-02-25T14:20:45.5347198Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-25T14:20:45.5347641Z         expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.5348030Z >       npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.5348257Z 
2025-02-25T14:20:45.5348422Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-25T14:20:45.5348881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5349149Z 
2025-02-25T14:20:45.5349467Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef6e6480>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5350259Z        [1., 1., .....,
2025-02-25T14:20:45.5350921Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5351491Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5351866Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:20:45.5352479Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.5352887Z 
2025-02-25T14:20:45.5353027Z     @wraps(func)
2025-02-25T14:20:45.5353345Z     def inner(*args, **kwds):
2025-02-25T14:20:45.5353704Z         with self._recreate_cm():
2025-02-25T14:20:45.5354037Z >           return func(*args, **kwds)
2025-02-25T14:20:45.5354432Z E           AssertionError: 
2025-02-25T14:20:45.5354779Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.5355112Z E           
2025-02-25T14:20:45.5355495Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.5355875Z E           Max absolute difference: 0.99984222
2025-02-25T14:20:45.5356283Z E           Max relative difference: 6337.12154973
2025-02-25T14:20:45.5356664Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5357187Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5357585Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.5357941Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5358383Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5358745Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.5358938Z 
2025-02-25T14:20:45.5359252Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.5359909Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-25T14:20:45.5360225Z 
2025-02-25T14:20:45.5360774Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-25T14:20:45.5361966Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f89ef177cb0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f89d943a6c0>, 'electron')]
2025-02-25T14:20:45.5363244Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f8a14908f50>
2025-02-25T14:20:45.5363955Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1490adb0>
2025-02-25T14:20:45.5364364Z 
2025-02-25T14:20:45.5364528Z     def test_rate_matrix_solver(
2025-02-25T14:20:45.5364933Z         new_chianti_atomic_dataset_si,
2025-02-25T14:20:45.5365258Z         rate_solver_list,
2025-02-25T14:20:45.5365640Z         collisional_simulation_state,
2025-02-25T14:20:45.5365995Z         regression_data,
2025-02-25T14:20:45.5366310Z     ):
2025-02-25T14:20:45.5366615Z         rate_matrix_solver = RateMatrix(
2025-02-25T14:20:45.5367140Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-25T14:20:45.5367452Z         )
2025-02-25T14:20:45.5367615Z     
2025-02-25T14:20:45.5367831Z         rad_field = DilutePlanckianRadiationField(
2025-02-25T14:20:45.5368142Z             collisional_simulation_state.t_radiative,
2025-02-25T14:20:45.5368512Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-25T14:20:45.5368966Z         )
2025-02-25T14:20:45.5369494Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-25T14:20:45.5370075Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-25T14:20:45.5370390Z         )
2025-02-25T14:20:45.5370738Z     
2025-02-25T14:20:45.5370982Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-25T14:20:45.5371277Z     
2025-02-25T14:20:45.5371486Z >       expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.5371696Z 
2025-02-25T14:20:45.5371841Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-25T14:20:45.5372186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5372551Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-25T14:20:45.5372905Z     return pd.read_hdf(self.fpath, key=key)
2025-02-25T14:20:45.5373358Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-25T14:20:45.5373799Z     return store.select(
2025-02-25T14:20:45.5374176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-25T14:20:45.5374603Z     return it.get_result()
2025-02-25T14:20:45.5375004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-25T14:20:45.5375475Z     results = self.func(self.start, self.stop, where)
2025-02-25T14:20:45.5375912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-25T14:20:45.5376416Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-25T14:20:45.5376942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-25T14:20:45.5377602Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-25T14:20:45.5378119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-25T14:20:45.5378553Z     ret = node[0][start:stop]
2025-02-25T14:20:45.5378949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-25T14:20:45.5379382Z     return self.read(start, stop, step)[0]
2025-02-25T14:20:45.5379796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-25T14:20:45.5380246Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-25T14:20:45.5380776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5381056Z 
2025-02-25T14:20:45.5381152Z self = ObjectAtom()
2025-02-25T14:20:45.5381404Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-25T14:20:45.5381616Z 
2025-02-25T14:20:45.5381714Z     def fromarray(self, array):
2025-02-25T14:20:45.5381998Z         # We have to check for an empty array because of a possible
2025-02-25T14:20:45.5382352Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-25T14:20:45.5382654Z         # record when in fact it is empty.
2025-02-25T14:20:45.5382904Z         if array.size == 0:
2025-02-25T14:20:45.5383115Z             return None
2025-02-25T14:20:45.5383342Z >       return pickle.loads(array.tobytes())
2025-02-25T14:20:45.5383674Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:20:45.5383918Z 
2025-02-25T14:20:45.5384186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-25T14:20:45.5384711Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.5385388Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.5386106Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.5386701Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.5387431Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.5388786Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-25T14:20:45.5389200Z 
2025-02-25T14:20:45.5389334Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5389919Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5390466Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5391310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5391886Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5392415Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5392791Z err_msg = None
2025-02-25T14:20:45.5392904Z 
2025-02-25T14:20:45.5393023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5393293Z         if err_msg is None:
2025-02-25T14:20:45.5393522Z             if left.shape != right.shape:
2025-02-25T14:20:45.5393777Z                 raise_assert_detail(
2025-02-25T14:20:45.5394085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5394388Z                 )
2025-02-25T14:20:45.5394567Z     
2025-02-25T14:20:45.5394730Z             diff = 0
2025-02-25T14:20:45.5394965Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5395243Z                 # count up differences
2025-02-25T14:20:45.5395585Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5396118Z                     diff += 1
2025-02-25T14:20:45.5396322Z     
2025-02-25T14:20:45.5396498Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5396800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5397202Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5397565Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5397826Z E           
2025-02-25T14:20:45.5398040Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5398502Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5399105Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5399456Z 
2025-02-25T14:20:45.5399759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5400147Z 
2025-02-25T14:20:45.5400312Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5400758Z 
2025-02-25T14:20:45.5400990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900dd0>
2025-02-25T14:20:45.5401466Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5401912Z attr = 'lines'
2025-02-25T14:20:45.5402024Z 
2025-02-25T14:20:45.5402172Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5402506Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5402785Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5403000Z         try:
2025-02-25T14:20:45.5403241Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5403539Z         except KeyError:
2025-02-25T14:20:45.5403804Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5404085Z     
2025-02-25T14:20:45.5404265Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5404519Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5404784Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5405079Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5405376Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5405626Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5405909Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5406172Z             else:
2025-02-25T14:20:45.5406384Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5406663Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5406848Z 
2025-02-25T14:20:45.5406977Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5407292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5407633Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5408134Z     ???
2025-02-25T14:20:45.5408482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5408835Z 
2025-02-25T14:20:45.5408949Z >   ???
2025-02-25T14:20:45.5409310Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5409775Z E   
2025-02-25T14:20:45.5410147Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5410833Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5411283Z E          ...
2025-02-25T14:20:45.5411674Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5411987Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5412324Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5412592Z E          ...
2025-02-25T14:20:45.5412786Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5413080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5413393Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5413575Z 
2025-02-25T14:20:45.5413675Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5414042Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-25T14:20:45.5414340Z 
2025-02-25T14:20:45.5414573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c902990>
2025-02-25T14:20:45.5415043Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5415390Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5415549Z 
2025-02-25T14:20:45.5415688Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5416019Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5416299Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5416516Z         try:
2025-02-25T14:20:45.5416762Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5417072Z         except KeyError:
2025-02-25T14:20:45.5417340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5417666Z     
2025-02-25T14:20:45.5417848Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5418098Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5418359Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5418781Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5419088Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5419329Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5419610Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5419808Z 
2025-02-25T14:20:45.5419931Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5420250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5420453Z 
2025-02-25T14:20:45.5420904Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5421225Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5421503Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5421783Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5422080Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5422396Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5422662Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5422939Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5423173Z err_msg = None
2025-02-25T14:20:45.5423279Z 
2025-02-25T14:20:45.5423395Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5423665Z         if err_msg is None:
2025-02-25T14:20:45.5423896Z             if left.shape != right.shape:
2025-02-25T14:20:45.5424150Z                 raise_assert_detail(
2025-02-25T14:20:45.5424454Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5424755Z                 )
2025-02-25T14:20:45.5424933Z     
2025-02-25T14:20:45.5425096Z             diff = 0
2025-02-25T14:20:45.5425331Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5425615Z                 # count up differences
2025-02-25T14:20:45.5425968Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5426536Z                     diff += 1
2025-02-25T14:20:45.5426882Z     
2025-02-25T14:20:45.5427355Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5427663Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5428049Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5428413Z E           AssertionError: Series are different
2025-02-25T14:20:45.5428669Z E           
2025-02-25T14:20:45.5428874Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5429436Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5430220Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5431167Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5431579Z 
2025-02-25T14:20:45.5432015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5432616Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-25T14:20:45.5432926Z 
2025-02-25T14:20:45.5433151Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9022d0>
2025-02-25T14:20:45.5433631Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5433968Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5434133Z 
2025-02-25T14:20:45.5434273Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5434606Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5434889Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5435115Z         try:
2025-02-25T14:20:45.5435360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5435662Z         except KeyError:
2025-02-25T14:20:45.5435931Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5436219Z     
2025-02-25T14:20:45.5436405Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5436652Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5436911Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5437217Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5437517Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5437761Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5438042Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5438240Z 
2025-02-25T14:20:45.5438365Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5438681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5438886Z 
2025-02-25T14:20:45.5439019Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5439326Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5439605Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5439878Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5440174Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5440804Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5441077Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5441345Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5441576Z err_msg = None
2025-02-25T14:20:45.5441683Z 
2025-02-25T14:20:45.5441799Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5442065Z         if err_msg is None:
2025-02-25T14:20:45.5442299Z             if left.shape != right.shape:
2025-02-25T14:20:45.5442548Z                 raise_assert_detail(
2025-02-25T14:20:45.5442848Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5443148Z                 )
2025-02-25T14:20:45.5443328Z     
2025-02-25T14:20:45.5443498Z             diff = 0
2025-02-25T14:20:45.5443741Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5444024Z                 # count up differences
2025-02-25T14:20:45.5444375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5444710Z                     diff += 1
2025-02-25T14:20:45.5444931Z     
2025-02-25T14:20:45.5445247Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5445757Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5446427Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5447045Z E           AssertionError: Series are different
2025-02-25T14:20:45.5447472Z E           
2025-02-25T14:20:45.5447809Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5448953Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5449801Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5450850Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5451324Z 
2025-02-25T14:20:45.5451630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5452237Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-25T14:20:45.5452515Z 
2025-02-25T14:20:45.5452642Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5452986Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5453306Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5453621Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5453971Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5454276Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5454662Z err_msg = None
2025-02-25T14:20:45.5454772Z 
2025-02-25T14:20:45.5454886Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5455153Z         if err_msg is None:
2025-02-25T14:20:45.5455383Z             if left.shape != right.shape:
2025-02-25T14:20:45.5455638Z                 raise_assert_detail(
2025-02-25T14:20:45.5455938Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5456240Z                 )
2025-02-25T14:20:45.5456416Z     
2025-02-25T14:20:45.5456588Z             diff = 0
2025-02-25T14:20:45.5456821Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5457100Z                 # count up differences
2025-02-25T14:20:45.5457434Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5457776Z                     diff += 1
2025-02-25T14:20:45.5457982Z     
2025-02-25T14:20:45.5458163Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5458482Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5458872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5459239Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5459503Z E           
2025-02-25T14:20:45.5459715Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5460168Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5461115Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5461476Z 
2025-02-25T14:20:45.5461779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5462167Z 
2025-02-25T14:20:45.5462341Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5462593Z 
2025-02-25T14:20:45.5462818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9025d0>
2025-02-25T14:20:45.5463322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>, attr = 'nu'
2025-02-25T14:20:45.5463605Z 
2025-02-25T14:20:45.5463749Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5464254Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5464747Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5465117Z         try:
2025-02-25T14:20:45.5465522Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5466044Z         except KeyError:
2025-02-25T14:20:45.5466495Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5466984Z     
2025-02-25T14:20:45.5467288Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5467550Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5467815Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5468115Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5468419Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5468664Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5468941Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5469131Z 
2025-02-25T14:20:45.5469263Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5469582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5469923Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5470353Z     ???
2025-02-25T14:20:45.5470678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5470883Z 
2025-02-25T14:20:45.5470951Z >   ???
2025-02-25T14:20:45.5471167Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5471438Z E   
2025-02-25T14:20:45.5471656Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5471974Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5472237Z E          ...
2025-02-25T14:20:45.5472427Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5472724Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5473047Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5473324Z E          ...
2025-02-25T14:20:45.5473515Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5473808Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5474125Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5474305Z 
2025-02-25T14:20:45.5474401Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5474762Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-25T14:20:45.5475046Z 
2025-02-25T14:20:45.5475180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5475526Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5475842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5476146Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5476615Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5476922Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5477169Z err_msg = None
2025-02-25T14:20:45.5477285Z 
2025-02-25T14:20:45.5477398Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5477666Z         if err_msg is None:
2025-02-25T14:20:45.5477894Z             if left.shape != right.shape:
2025-02-25T14:20:45.5478148Z                 raise_assert_detail(
2025-02-25T14:20:45.5478450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5478748Z                 )
2025-02-25T14:20:45.5478924Z     
2025-02-25T14:20:45.5479091Z             diff = 0
2025-02-25T14:20:45.5479318Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5479596Z                 # count up differences
2025-02-25T14:20:45.5479927Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5480270Z                     diff += 1
2025-02-25T14:20:45.5480483Z     
2025-02-25T14:20:45.5480766Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5481078Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5481472Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5481839Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5482099Z E           
2025-02-25T14:20:45.5482357Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5483226Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5483965Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5484452Z 
2025-02-25T14:20:45.5484758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5485148Z 
2025-02-25T14:20:45.5485315Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5485572Z 
2025-02-25T14:20:45.5485794Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9024b0>
2025-02-25T14:20:45.5486269Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5486604Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5486729Z 
2025-02-25T14:20:45.5486873Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5487213Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5487494Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5487711Z         try:
2025-02-25T14:20:45.5487957Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5488266Z         except KeyError:
2025-02-25T14:20:45.5488534Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5488823Z     
2025-02-25T14:20:45.5489006Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5489249Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5489507Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5489805Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5490103Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5490345Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5490758Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5490953Z 
2025-02-25T14:20:45.5491077Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5491557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5511635Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5512251Z     ???
2025-02-25T14:20:45.5512624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5512983Z 
2025-02-25T14:20:45.5513125Z >   ???
2025-02-25T14:20:45.5513527Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5514027Z E   
2025-02-25T14:20:45.5514424Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5515018Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5515440Z E          ...
2025-02-25T14:20:45.5515659Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5516001Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5516359Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5516667Z E          ...
2025-02-25T14:20:45.5516897Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5517261Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5517620Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5517822Z 
2025-02-25T14:20:45.5517942Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5518327Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-25T14:20:45.5518619Z 
2025-02-25T14:20:45.5518785Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5519156Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5519515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5519861Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5520239Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5520697Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5521168Z err_msg = None
2025-02-25T14:20:45.5521309Z 
2025-02-25T14:20:45.5521429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5521746Z         if err_msg is None:
2025-02-25T14:20:45.5522009Z             if left.shape != right.shape:
2025-02-25T14:20:45.5522297Z                 raise_assert_detail(
2025-02-25T14:20:45.5522636Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5522957Z                 )
2025-02-25T14:20:45.5523166Z     
2025-02-25T14:20:45.5523365Z             diff = 0
2025-02-25T14:20:45.5523625Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5523927Z                 # count up differences
2025-02-25T14:20:45.5524292Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5524667Z                     diff += 1
2025-02-25T14:20:45.5524906Z     
2025-02-25T14:20:45.5525105Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5525439Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5525883Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5526281Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5526565Z E           
2025-02-25T14:20:45.5526810Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5527296Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5528056Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5528431Z 
2025-02-25T14:20:45.5528976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5529705Z 
2025-02-25T14:20:45.5529998Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5530383Z 
2025-02-25T14:20:45.5530809Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900110>
2025-02-25T14:20:45.5531358Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>, attr = 'f_lu'
2025-02-25T14:20:45.5531653Z 
2025-02-25T14:20:45.5531813Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5532172Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5532496Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5532745Z         try:
2025-02-25T14:20:45.5533017Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5533358Z         except KeyError:
2025-02-25T14:20:45.5533658Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5533971Z     
2025-02-25T14:20:45.5534196Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5534476Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5534767Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5535096Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5535424Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5535700Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5536028Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5536230Z 
2025-02-25T14:20:45.5536377Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5536756Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5537131Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5537626Z     ???
2025-02-25T14:20:45.5537852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5538062Z 
2025-02-25T14:20:45.5538158Z >   ???
2025-02-25T14:20:45.5538406Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5538715Z E   
2025-02-25T14:20:45.5538957Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5539305Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5539595Z E          ...
2025-02-25T14:20:45.5539822Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5540151Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5540658Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5541013Z E          ...
2025-02-25T14:20:45.5541244Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5541574Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5541941Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5542132Z 
2025-02-25T14:20:45.5542257Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5542627Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-25T14:20:45.5542921Z 
2025-02-25T14:20:45.5543057Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5543418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5543738Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5544078Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5544588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5544923Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5545203Z err_msg = None
2025-02-25T14:20:45.5545330Z 
2025-02-25T14:20:45.5545451Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5545741Z         if err_msg is None:
2025-02-25T14:20:45.5546019Z             if left.shape != right.shape:
2025-02-25T14:20:45.5546296Z                 raise_assert_detail(
2025-02-25T14:20:45.5546619Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5546962Z                 )
2025-02-25T14:20:45.5547168Z     
2025-02-25T14:20:45.5547360Z             diff = 0
2025-02-25T14:20:45.5547626Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5548037Z                 # count up differences
2025-02-25T14:20:45.5548653Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5549256Z                     diff += 1
2025-02-25T14:20:45.5549560Z     
2025-02-25T14:20:45.5549771Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5550113Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5550613Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5551006Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5551292Z E           
2025-02-25T14:20:45.5551529Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5552049Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5552673Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5553175Z 
2025-02-25T14:20:45.5553504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5553913Z 
2025-02-25T14:20:45.5554087Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5554368Z 
2025-02-25T14:20:45.5554592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c901eb0>
2025-02-25T14:20:45.5555078Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5555406Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5555545Z 
2025-02-25T14:20:45.5555704Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5556061Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5556361Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5556601Z         try:
2025-02-25T14:20:45.5556866Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5557205Z         except KeyError:
2025-02-25T14:20:45.5557495Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5557805Z     
2025-02-25T14:20:45.5558018Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5558295Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5558594Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5558920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5559235Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5559503Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5559798Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5560079Z             else:
2025-02-25T14:20:45.5560438Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5560847Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5561036Z 
2025-02-25T14:20:45.5561189Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5561521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5561869Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5562170Z     ???
2025-02-25T14:20:45.5562379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5562591Z 
2025-02-25T14:20:45.5562662Z >   ???
2025-02-25T14:20:45.5562898Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5563183Z E   
2025-02-25T14:20:45.5563423Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5563773Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5564057Z E          ...
2025-02-25T14:20:45.5564267Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5564574Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5564914Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5565197Z E          ...
2025-02-25T14:20:45.5565410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5565712Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5566039Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5566239Z 
2025-02-25T14:20:45.5566336Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5566709Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-25T14:20:45.5567031Z 
2025-02-25T14:20:45.5567280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5567939Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5568521Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5569108Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5569674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5570014Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5570285Z err_msg = None
2025-02-25T14:20:45.5570398Z 
2025-02-25T14:20:45.5570646Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5570958Z         if err_msg is None:
2025-02-25T14:20:45.5571232Z             if left.shape != right.shape:
2025-02-25T14:20:45.5571518Z                 raise_assert_detail(
2025-02-25T14:20:45.5571849Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5572167Z                 )
2025-02-25T14:20:45.5572364Z     
2025-02-25T14:20:45.5572553Z             diff = 0
2025-02-25T14:20:45.5572815Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5573122Z                 # count up differences
2025-02-25T14:20:45.5573487Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5573856Z                     diff += 1
2025-02-25T14:20:45.5574096Z     
2025-02-25T14:20:45.5574296Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5574635Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5575057Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5575444Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5575735Z E           
2025-02-25T14:20:45.5575973Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5576589Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5577295Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5577659Z 
2025-02-25T14:20:45.5577970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5578375Z 
2025-02-25T14:20:45.5578565Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5578822Z 
2025-02-25T14:20:45.5579375Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c901370>
2025-02-25T14:20:45.5579874Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5580230Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5580359Z 
2025-02-25T14:20:45.5580680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5581099Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5581415Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5581654Z         try:
2025-02-25T14:20:45.5581917Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5582242Z         except KeyError:
2025-02-25T14:20:45.5582529Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5582832Z     
2025-02-25T14:20:45.5583033Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5583301Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5583584Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5583915Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5584260Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5584540Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5584834Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5585296Z             else:
2025-02-25T14:20:45.5585681Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5586190Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5586521Z 
2025-02-25T14:20:45.5586758Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5587339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5587956Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5588493Z     ???
2025-02-25T14:20:45.5588870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5589225Z 
2025-02-25T14:20:45.5589343Z >   ???
2025-02-25T14:20:45.5589628Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5589912Z E   
2025-02-25T14:20:45.5590160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5590501Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5590925Z E          ...
2025-02-25T14:20:45.5591141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5591460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5591814Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5592107Z E          ...
2025-02-25T14:20:45.5592314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5592622Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5592953Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5593140Z 
2025-02-25T14:20:45.5593255Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5593626Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-25T14:20:45.5593930Z 
2025-02-25T14:20:45.5594216Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5594593Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5594941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5595270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5595643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5595973Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5596233Z err_msg = None
2025-02-25T14:20:45.5596347Z 
2025-02-25T14:20:45.5596482Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5596780Z         if err_msg is None:
2025-02-25T14:20:45.5597037Z             if left.shape != right.shape:
2025-02-25T14:20:45.5597318Z                 raise_assert_detail(
2025-02-25T14:20:45.5597660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5597987Z                 )
2025-02-25T14:20:45.5598186Z     
2025-02-25T14:20:45.5598376Z             diff = 0
2025-02-25T14:20:45.5598634Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5598967Z                 # count up differences
2025-02-25T14:20:45.5599323Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5599681Z                     diff += 1
2025-02-25T14:20:45.5599918Z     
2025-02-25T14:20:45.5600113Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5600445Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5600980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5601372Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5601663Z E           
2025-02-25T14:20:45.5601904Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5602385Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5603174Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5603543Z 
2025-02-25T14:20:45.5603854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5604258Z 
2025-02-25T14:20:45.5604433Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5604713Z 
2025-02-25T14:20:45.5605003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900710>
2025-02-25T14:20:45.5605865Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5606450Z attr = 'j_blues'
2025-02-25T14:20:45.5606649Z 
2025-02-25T14:20:45.5606908Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5607508Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5608020Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5608302Z         try:
2025-02-25T14:20:45.5608569Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5608908Z         except KeyError:
2025-02-25T14:20:45.5609200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5609511Z     
2025-02-25T14:20:45.5609719Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5609987Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5610414Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5610867Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5611201Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5611467Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5611790Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5612079Z             else:
2025-02-25T14:20:45.5612309Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5612607Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5612805Z 
2025-02-25T14:20:45.5612951Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5613302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5613674Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5614002Z     ???
2025-02-25T14:20:45.5614242Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5614464Z 
2025-02-25T14:20:45.5614538Z >   ???
2025-02-25T14:20:45.5614783Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5615090Z E   
2025-02-25T14:20:45.5615331Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5615676Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5615959Z E          ...
2025-02-25T14:20:45.5616187Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5616495Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5616837Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5617136Z E          ...
2025-02-25T14:20:45.5617342Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5617657Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5617974Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5618161Z 
2025-02-25T14:20:45.5618285Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5618645Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-25T14:20:45.5619075Z 
2025-02-25T14:20:45.5619212Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5619645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5619974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5620296Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5620861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5621213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5621493Z err_msg = None
2025-02-25T14:20:45.5621608Z 
2025-02-25T14:20:45.5621745Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5622054Z         if err_msg is None:
2025-02-25T14:20:45.5622305Z             if left.shape != right.shape:
2025-02-25T14:20:45.5622582Z                 raise_assert_detail(
2025-02-25T14:20:45.5622923Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5623234Z                 )
2025-02-25T14:20:45.5623420Z     
2025-02-25T14:20:45.5623599Z             diff = 0
2025-02-25T14:20:45.5623890Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5624402Z                 # count up differences
2025-02-25T14:20:45.5624992Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5625381Z                     diff += 1
2025-02-25T14:20:45.5625613Z     
2025-02-25T14:20:45.5625822Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5626146Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5626719Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5627128Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5627406Z E           
2025-02-25T14:20:45.5627650Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5628122Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5628738Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5629098Z 
2025-02-25T14:20:45.5629415Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5629817Z 
2025-02-25T14:20:45.5629988Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5630263Z 
2025-02-25T14:20:45.5630494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93bb60>
2025-02-25T14:20:45.5631124Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5631468Z attr = 'lines'
2025-02-25T14:20:45.5631589Z 
2025-02-25T14:20:45.5631754Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5632115Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5632425Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5632657Z         try:
2025-02-25T14:20:45.5632911Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5633248Z         except KeyError:
2025-02-25T14:20:45.5633561Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5633876Z     
2025-02-25T14:20:45.5634080Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5634359Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5634774Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5635106Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5635433Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5635686Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5635966Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5636240Z             else:
2025-02-25T14:20:45.5636444Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5636752Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5636948Z 
2025-02-25T14:20:45.5637096Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5637434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5637819Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5638145Z     ???
2025-02-25T14:20:45.5638371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5638632Z 
2025-02-25T14:20:45.5638719Z >   ???
2025-02-25T14:20:45.5638961Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5639258Z E   
2025-02-25T14:20:45.5639511Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5639846Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5640137Z E          ...
2025-02-25T14:20:45.5640346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5640757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5641110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5641419Z E          ...
2025-02-25T14:20:45.5641773Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5642098Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5642437Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5642639Z 
2025-02-25T14:20:45.5642765Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5643350Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-25T14:20:45.5643869Z 
2025-02-25T14:20:45.5644224Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939a90>
2025-02-25T14:20:45.5644755Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5645139Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5645324Z 
2025-02-25T14:20:45.5645472Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5645832Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5646143Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5646388Z         try:
2025-02-25T14:20:45.5646673Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5647016Z         except KeyError:
2025-02-25T14:20:45.5647321Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5647636Z     
2025-02-25T14:20:45.5647830Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5648092Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5648374Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5648711Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5649030Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5649290Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5649598Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5649812Z 
2025-02-25T14:20:45.5649939Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5650277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5650498Z 
2025-02-25T14:20:45.5650755Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5651068Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5651494Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5651784Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5652152Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5652488Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5652780Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5653085Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5653341Z err_msg = None
2025-02-25T14:20:45.5653452Z 
2025-02-25T14:20:45.5653583Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5653865Z         if err_msg is None:
2025-02-25T14:20:45.5654117Z             if left.shape != right.shape:
2025-02-25T14:20:45.5654430Z                 raise_assert_detail(
2025-02-25T14:20:45.5654755Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5655087Z                 )
2025-02-25T14:20:45.5655295Z     
2025-02-25T14:20:45.5655478Z             diff = 0
2025-02-25T14:20:45.5655738Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5656051Z                 # count up differences
2025-02-25T14:20:45.5656403Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5656780Z                     diff += 1
2025-02-25T14:20:45.5657018Z     
2025-02-25T14:20:45.5657222Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5657552Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5657966Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5658348Z E           AssertionError: Series are different
2025-02-25T14:20:45.5658742Z E           
2025-02-25T14:20:45.5658970Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5659552Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5660368Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5661360Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5661790Z 
2025-02-25T14:20:45.5662119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5663106Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-25T14:20:45.5663508Z 
2025-02-25T14:20:45.5663753Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93b140>
2025-02-25T14:20:45.5664253Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5664603Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5664773Z 
2025-02-25T14:20:45.5664933Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5665283Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5665582Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5665968Z         try:
2025-02-25T14:20:45.5666230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5666562Z         except KeyError:
2025-02-25T14:20:45.5666844Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5667151Z     
2025-02-25T14:20:45.5667346Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5667610Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5667892Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5668209Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5668527Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5668788Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5669081Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5669299Z 
2025-02-25T14:20:45.5669448Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5669787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5670009Z 
2025-02-25T14:20:45.5670147Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5670469Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5670871Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5671177Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5671487Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5671813Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5672089Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5672371Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5672609Z err_msg = None
2025-02-25T14:20:45.5672900Z 
2025-02-25T14:20:45.5673038Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5673340Z         if err_msg is None:
2025-02-25T14:20:45.5673611Z             if left.shape != right.shape:
2025-02-25T14:20:45.5673892Z                 raise_assert_detail(
2025-02-25T14:20:45.5674220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5674514Z                 )
2025-02-25T14:20:45.5674694Z     
2025-02-25T14:20:45.5674868Z             diff = 0
2025-02-25T14:20:45.5675119Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5675433Z                 # count up differences
2025-02-25T14:20:45.5675791Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5676166Z                     diff += 1
2025-02-25T14:20:45.5676427Z     
2025-02-25T14:20:45.5676629Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5676967Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5677390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5677791Z E           AssertionError: Series are different
2025-02-25T14:20:45.5678073Z E           
2025-02-25T14:20:45.5678317Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5678907Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5679780Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5681471Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5681944Z 
2025-02-25T14:20:45.5682274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5682885Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-25T14:20:45.5683178Z 
2025-02-25T14:20:45.5683330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5683703Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5684065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5684417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5684810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5685148Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5685430Z err_msg = None
2025-02-25T14:20:45.5685548Z 
2025-02-25T14:20:45.5685680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5685984Z         if err_msg is None:
2025-02-25T14:20:45.5686242Z             if left.shape != right.shape:
2025-02-25T14:20:45.5686538Z                 raise_assert_detail(
2025-02-25T14:20:45.5687067Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5687412Z                 )
2025-02-25T14:20:45.5687622Z     
2025-02-25T14:20:45.5687823Z             diff = 0
2025-02-25T14:20:45.5688085Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5688387Z                 # count up differences
2025-02-25T14:20:45.5688748Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5689098Z                     diff += 1
2025-02-25T14:20:45.5689326Z     
2025-02-25T14:20:45.5689517Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5689839Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5690266Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5690844Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5691131Z E           
2025-02-25T14:20:45.5691369Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5691814Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5692453Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5692813Z 
2025-02-25T14:20:45.5693121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5693531Z 
2025-02-25T14:20:45.5693710Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5693979Z 
2025-02-25T14:20:45.5694220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9390d0>
2025-02-25T14:20:45.5694883Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>, attr = 'nu'
2025-02-25T14:20:45.5695171Z 
2025-02-25T14:20:45.5695326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5695674Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5695974Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5696214Z         try:
2025-02-25T14:20:45.5696481Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5696805Z         except KeyError:
2025-02-25T14:20:45.5697095Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5697397Z     
2025-02-25T14:20:45.5697592Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5697861Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5698146Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5698464Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5698786Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5699086Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5699598Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5699949Z 
2025-02-25T14:20:45.5700179Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5700743Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5701111Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5701430Z     ???
2025-02-25T14:20:45.5701650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5701848Z 
2025-02-25T14:20:45.5701939Z >   ???
2025-02-25T14:20:45.5702182Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5702475Z E   
2025-02-25T14:20:45.5702864Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5703209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5703496Z E          ...
2025-02-25T14:20:45.5703721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5704043Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5704397Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5704679Z E          ...
2025-02-25T14:20:45.5704895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5705229Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5705560Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5705750Z 
2025-02-25T14:20:45.5705856Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5706216Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-25T14:20:45.5706501Z 
2025-02-25T14:20:45.5706658Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5707018Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5707357Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5707695Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5708059Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5708381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5708659Z err_msg = None
2025-02-25T14:20:45.5708784Z 
2025-02-25T14:20:45.5708897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5709194Z         if err_msg is None:
2025-02-25T14:20:45.5709453Z             if left.shape != right.shape:
2025-02-25T14:20:45.5709733Z                 raise_assert_detail(
2025-02-25T14:20:45.5710058Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5710384Z                 )
2025-02-25T14:20:45.5710459Z     
2025-02-25T14:20:45.5710650Z             diff = 0
2025-02-25T14:20:45.5710908Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5711006Z                 # count up differences
2025-02-25T14:20:45.5711177Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5711262Z                     diff += 1
2025-02-25T14:20:45.5711334Z     
2025-02-25T14:20:45.5711448Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5711602Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5711773Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5711909Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5711985Z E           
2025-02-25T14:20:45.5712129Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5712412Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5712705Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5712712Z 
2025-02-25T14:20:45.5713041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5713045Z 
2025-02-25T14:20:45.5713220Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5713336Z 
2025-02-25T14:20:45.5713583Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939550>
2025-02-25T14:20:45.5713761Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5713865Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5713871Z 
2025-02-25T14:20:45.5714028Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5714145Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5714249Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5714329Z         try:
2025-02-25T14:20:45.5714490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5714579Z         except KeyError:
2025-02-25T14:20:45.5714732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5714812Z     
2025-02-25T14:20:45.5714918Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5715016Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5715133Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5715285Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5715384Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5715497Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5715612Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5715622Z 
2025-02-25T14:20:45.5715772Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5715900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5716067Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5716143Z     ???
2025-02-25T14:20:45.5716271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5716275Z 
2025-02-25T14:20:45.5716373Z >   ???
2025-02-25T14:20:45.5716507Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5716597Z E   
2025-02-25T14:20:45.5716740Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5716877Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5717052Z E          ...
2025-02-25T14:20:45.5717165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5717301Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5717435Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5717516Z E          ...
2025-02-25T14:20:45.5717635Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5717783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5717896Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5717900Z 
2025-02-25T14:20:45.5718019Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5718216Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-25T14:20:45.5718220Z 
2025-02-25T14:20:45.5718387Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5718526Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5718710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5718948Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5719194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5719380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5719513Z err_msg = None
2025-02-25T14:20:45.5719519Z 
2025-02-25T14:20:45.5719713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5719806Z         if err_msg is None:
2025-02-25T14:20:45.5719927Z             if left.shape != right.shape:
2025-02-25T14:20:45.5720020Z                 raise_assert_detail(
2025-02-25T14:20:45.5720294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5720374Z                 )
2025-02-25T14:20:45.5720468Z     
2025-02-25T14:20:45.5720652Z             diff = 0
2025-02-25T14:20:45.5720801Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5720919Z                 # count up differences
2025-02-25T14:20:45.5721097Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5721192Z                     diff += 1
2025-02-25T14:20:45.5721266Z     
2025-02-25T14:20:45.5721375Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5721519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5721705Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5721827Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5721927Z E           
2025-02-25T14:20:45.5722053Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5722342Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5722631Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5722636Z 
2025-02-25T14:20:45.5722944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5722961Z 
2025-02-25T14:20:45.5723140Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5723144Z 
2025-02-25T14:20:45.5723387Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939280>
2025-02-25T14:20:45.5723746Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>, attr = 'f_lu'
2025-02-25T14:20:45.5723750Z 
2025-02-25T14:20:45.5723906Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5724026Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5724131Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5724204Z         try:
2025-02-25T14:20:45.5724365Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5724475Z         except KeyError:
2025-02-25T14:20:45.5724616Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5724706Z     
2025-02-25T14:20:45.5724801Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5724915Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5725019Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5725173Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5725261Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5725376Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5725498Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5725502Z 
2025-02-25T14:20:45.5725642Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5725771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5725926Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5726027Z     ???
2025-02-25T14:20:45.5726145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5726149Z 
2025-02-25T14:20:45.5726238Z >   ???
2025-02-25T14:20:45.5726365Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5726448Z E   
2025-02-25T14:20:45.5726707Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5726853Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5726945Z E          ...
2025-02-25T14:20:45.5727057Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5727215Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5727333Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5727423Z E          ...
2025-02-25T14:20:45.5727515Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5727666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5727778Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5727782Z 
2025-02-25T14:20:45.5727899Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5728101Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-25T14:20:45.5728105Z 
2025-02-25T14:20:45.5728261Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5728412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5728524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5728684Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5728813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5728926Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5729006Z err_msg = None
2025-02-25T14:20:45.5729010Z 
2025-02-25T14:20:45.5729141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5729232Z         if err_msg is None:
2025-02-25T14:20:45.5729363Z             if left.shape != right.shape:
2025-02-25T14:20:45.5729468Z                 raise_assert_detail(
2025-02-25T14:20:45.5729630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5729716Z                 )
2025-02-25T14:20:45.5729796Z     
2025-02-25T14:20:45.5729984Z             diff = 0
2025-02-25T14:20:45.5730101Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5730215Z                 # count up differences
2025-02-25T14:20:45.5730397Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5730592Z                     diff += 1
2025-02-25T14:20:45.5730677Z     
2025-02-25T14:20:45.5730792Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5730954Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5731128Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5731261Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5731341Z E           
2025-02-25T14:20:45.5731489Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5731762Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5732068Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5732073Z 
2025-02-25T14:20:45.5732401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5732406Z 
2025-02-25T14:20:45.5732701Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5732707Z 
2025-02-25T14:20:45.5732962Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9385f0>
2025-02-25T14:20:45.5733138Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5733233Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5733237Z 
2025-02-25T14:20:45.5733388Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5733506Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5733610Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5733685Z         try:
2025-02-25T14:20:45.5733841Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5733930Z         except KeyError:
2025-02-25T14:20:45.5734082Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5734157Z     
2025-02-25T14:20:45.5734266Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5734363Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5734484Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5734668Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5734781Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5734899Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5735017Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5735199Z             else:
2025-02-25T14:20:45.5735330Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5735458Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5735462Z 
2025-02-25T14:20:45.5735599Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5735740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5735889Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5735982Z     ???
2025-02-25T14:20:45.5736126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5736130Z 
2025-02-25T14:20:45.5736207Z >   ???
2025-02-25T14:20:45.5736360Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5736565Z E   
2025-02-25T14:20:45.5754010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5754245Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5754370Z E          ...
2025-02-25T14:20:45.5754532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5754759Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5754956Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5755072Z E          ...
2025-02-25T14:20:45.5755216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5755424Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5755606Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5755614Z 
2025-02-25T14:20:45.5755782Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5756159Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-25T14:20:45.5756177Z 
2025-02-25T14:20:45.5756403Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5756621Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5756784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5756979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5757107Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5757202Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5757279Z err_msg = None
2025-02-25T14:20:45.5757284Z 
2025-02-25T14:20:45.5757400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5757667Z         if err_msg is None:
2025-02-25T14:20:45.5757773Z             if left.shape != right.shape:
2025-02-25T14:20:45.5757855Z                 raise_assert_detail(
2025-02-25T14:20:45.5758021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5758089Z                 )
2025-02-25T14:20:45.5758156Z     
2025-02-25T14:20:45.5758225Z             diff = 0
2025-02-25T14:20:45.5758339Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5758426Z                 # count up differences
2025-02-25T14:20:45.5758600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5758675Z                     diff += 1
2025-02-25T14:20:45.5758743Z     
2025-02-25T14:20:45.5758829Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5758965Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5759152Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5759264Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5759334Z E           
2025-02-25T14:20:45.5759454Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5759728Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5759999Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5760005Z 
2025-02-25T14:20:45.5760343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5760347Z 
2025-02-25T14:20:45.5760786Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5760792Z 
2025-02-25T14:20:45.5761024Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a8d0>
2025-02-25T14:20:45.5761195Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5761273Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5761280Z 
2025-02-25T14:20:45.5761419Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5761541Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5761628Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5761698Z         try:
2025-02-25T14:20:45.5761837Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5761916Z         except KeyError:
2025-02-25T14:20:45.5762062Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5762128Z     
2025-02-25T14:20:45.5762212Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5762312Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5762402Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5762536Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5762621Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5762708Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5762815Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5762884Z             else:
2025-02-25T14:20:45.5762980Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5763084Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5763089Z 
2025-02-25T14:20:45.5763218Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5763457Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5763618Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5763707Z     ???
2025-02-25T14:20:45.5763835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5763839Z 
2025-02-25T14:20:45.5763926Z >   ???
2025-02-25T14:20:45.5764063Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5764152Z E   
2025-02-25T14:20:45.5764286Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5764418Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5764496Z E          ...
2025-02-25T14:20:45.5764603Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5764739Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5764871Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5764963Z E          ...
2025-02-25T14:20:45.5765077Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5765224Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5765335Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5765345Z 
2025-02-25T14:20:45.5765456Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5765657Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-25T14:20:45.5765661Z 
2025-02-25T14:20:45.5765812Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5765956Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5766085Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5766243Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5766374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5766528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5766633Z err_msg = None
2025-02-25T14:20:45.5766637Z 
2025-02-25T14:20:45.5766940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5767032Z         if err_msg is None:
2025-02-25T14:20:45.5767152Z             if left.shape != right.shape:
2025-02-25T14:20:45.5767248Z                 raise_assert_detail(
2025-02-25T14:20:45.5767421Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5767517Z                 )
2025-02-25T14:20:45.5767592Z     
2025-02-25T14:20:45.5767687Z             diff = 0
2025-02-25T14:20:45.5767809Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5767921Z                 # count up differences
2025-02-25T14:20:45.5768100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5768193Z                     diff += 1
2025-02-25T14:20:45.5768271Z     
2025-02-25T14:20:45.5768396Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5768538Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5768742Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5768863Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5768971Z E           
2025-02-25T14:20:45.5769114Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5769380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5769769Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5769781Z 
2025-02-25T14:20:45.5770119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5770124Z 
2025-02-25T14:20:45.5770309Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5770313Z 
2025-02-25T14:20:45.5770655Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a780>
2025-02-25T14:20:45.5770830Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5770911Z attr = 'j_blues'
2025-02-25T14:20:45.5770915Z 
2025-02-25T14:20:45.5771070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5771206Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5771305Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5771407Z         try:
2025-02-25T14:20:45.5771558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5771658Z         except KeyError:
2025-02-25T14:20:45.5771813Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5771904Z     
2025-02-25T14:20:45.5772000Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5772110Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5772204Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5772357Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5772451Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5772562Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5772693Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5772768Z             else:
2025-02-25T14:20:45.5772887Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5773011Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5773016Z 
2025-02-25T14:20:45.5773163Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5773442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5773609Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5773689Z     ???
2025-02-25T14:20:45.5773819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5773823Z 
2025-02-25T14:20:45.5773918Z >   ???
2025-02-25T14:20:45.5774054Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5774139Z E   
2025-02-25T14:20:45.5774279Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5774410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5774484Z E          ...
2025-02-25T14:20:45.5774588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5774724Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5774852Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5774929Z E          ...
2025-02-25T14:20:45.5775050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5775193Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5775309Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5775313Z 
2025-02-25T14:20:45.5775412Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5775656Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-25T14:20:45.5775663Z 
2025-02-25T14:20:45.5775888Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5776115Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5776306Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5776770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5776912Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5777028Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5777115Z err_msg = None
2025-02-25T14:20:45.5777119Z 
2025-02-25T14:20:45.5777252Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5777343Z         if err_msg is None:
2025-02-25T14:20:45.5777463Z             if left.shape != right.shape:
2025-02-25T14:20:45.5777557Z                 raise_assert_detail(
2025-02-25T14:20:45.5777723Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5777799Z                 )
2025-02-25T14:20:45.5777882Z     
2025-02-25T14:20:45.5777975Z             diff = 0
2025-02-25T14:20:45.5778093Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5778213Z                 # count up differences
2025-02-25T14:20:45.5778396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5778500Z                     diff += 1
2025-02-25T14:20:45.5778587Z     
2025-02-25T14:20:45.5778695Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5778839Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5779024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5779145Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5779235Z E           
2025-02-25T14:20:45.5779365Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5779641Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5779926Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5780031Z 
2025-02-25T14:20:45.5780345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5780367Z 
2025-02-25T14:20:45.5780734Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5780742Z 
2025-02-25T14:20:45.5781015Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939e80>
2025-02-25T14:20:45.5781187Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5781280Z attr = 'lines'
2025-02-25T14:20:45.5781284Z 
2025-02-25T14:20:45.5781436Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5781574Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5781673Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5781763Z         try:
2025-02-25T14:20:45.5781918Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5782004Z         except KeyError:
2025-02-25T14:20:45.5782162Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5782234Z     
2025-02-25T14:20:45.5782344Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5782444Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5782559Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5782695Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5782806Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5782899Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5783164Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5783243Z             else:
2025-02-25T14:20:45.5783358Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5783495Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5783499Z 
2025-02-25T14:20:45.5783628Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5783755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5783911Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5784001Z     ???
2025-02-25T14:20:45.5784115Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5784119Z 
2025-02-25T14:20:45.5784209Z >   ???
2025-02-25T14:20:45.5784338Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5784434Z E   
2025-02-25T14:20:45.5784577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5784700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5784796Z E          ...
2025-02-25T14:20:45.5784891Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5785056Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5785175Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5785262Z E          ...
2025-02-25T14:20:45.5785350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5785492Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5785600Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5785604Z 
2025-02-25T14:20:45.5785713Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5785946Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-25T14:20:45.5785950Z 
2025-02-25T14:20:45.5786182Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a3f0>
2025-02-25T14:20:45.5786387Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5786486Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5786490Z 
2025-02-25T14:20:45.5786774Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5786895Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5787002Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5787071Z         try:
2025-02-25T14:20:45.5787229Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5787314Z         except KeyError:
2025-02-25T14:20:45.5787456Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5787534Z     
2025-02-25T14:20:45.5787623Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5787726Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5787819Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5787965Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5788060Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5788163Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5788280Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5788311Z 
2025-02-25T14:20:45.5788440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5788566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5788570Z 
2025-02-25T14:20:45.5788711Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5788816Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5788931Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5789026Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5789166Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5789262Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5789477Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5789565Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5789670Z err_msg = None
2025-02-25T14:20:45.5789674Z 
2025-02-25T14:20:45.5789785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5789882Z         if err_msg is None:
2025-02-25T14:20:45.5789979Z             if left.shape != right.shape:
2025-02-25T14:20:45.5790083Z                 raise_assert_detail(
2025-02-25T14:20:45.5790229Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5790314Z                 )
2025-02-25T14:20:45.5790384Z     
2025-02-25T14:20:45.5790477Z             diff = 0
2025-02-25T14:20:45.5790695Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5790806Z                 # count up differences
2025-02-25T14:20:45.5790975Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5791062Z                     diff += 1
2025-02-25T14:20:45.5791128Z     
2025-02-25T14:20:45.5791215Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5791373Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5791548Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5791664Z E           AssertionError: Series are different
2025-02-25T14:20:45.5791740Z E           
2025-02-25T14:20:45.5791866Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5792257Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5792604Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5793090Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5793096Z 
2025-02-25T14:20:45.5793419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5793641Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-25T14:20:45.5793645Z 
2025-02-25T14:20:45.5793882Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939be0>
2025-02-25T14:20:45.5794113Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5794298Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5794304Z 
2025-02-25T14:20:45.5794559Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5794758Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5794925Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5795051Z         try:
2025-02-25T14:20:45.5795308Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5795402Z         except KeyError:
2025-02-25T14:20:45.5795556Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5795627Z     
2025-02-25T14:20:45.5795732Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5795965Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5796071Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5796205Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5796308Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5796407Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5796517Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5796521Z 
2025-02-25T14:20:45.5796658Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5796774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5796778Z 
2025-02-25T14:20:45.5796929Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5797016Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5797138Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5797235Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5797381Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5797492Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5797599Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5797687Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5797773Z err_msg = None
2025-02-25T14:20:45.5797777Z 
2025-02-25T14:20:45.5797902Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5797987Z         if err_msg is None:
2025-02-25T14:20:45.5798089Z             if left.shape != right.shape:
2025-02-25T14:20:45.5798180Z                 raise_assert_detail(
2025-02-25T14:20:45.5798338Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5798424Z                 )
2025-02-25T14:20:45.5798498Z     
2025-02-25T14:20:45.5798584Z             diff = 0
2025-02-25T14:20:45.5798710Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5798818Z                 # count up differences
2025-02-25T14:20:45.5799006Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5799217Z                     diff += 1
2025-02-25T14:20:45.5799300Z     
2025-02-25T14:20:45.5799391Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5799540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5799713Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5799832Z E           AssertionError: Series are different
2025-02-25T14:20:45.5799911Z E           
2025-02-25T14:20:45.5800014Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5800399Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5800891Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5801409Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5801415Z 
2025-02-25T14:20:45.5801744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5801926Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-25T14:20:45.5801939Z 
2025-02-25T14:20:45.5802066Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5802202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5802300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5802450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5802572Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5802683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5802758Z err_msg = None
2025-02-25T14:20:45.5802762Z 
2025-02-25T14:20:45.5802890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5802980Z         if err_msg is None:
2025-02-25T14:20:45.5803078Z             if left.shape != right.shape:
2025-02-25T14:20:45.5803178Z                 raise_assert_detail(
2025-02-25T14:20:45.5803322Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5803399Z                 )
2025-02-25T14:20:45.5803470Z     
2025-02-25T14:20:45.5803555Z             diff = 0
2025-02-25T14:20:45.5803663Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5803762Z                 # count up differences
2025-02-25T14:20:45.5803930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5804021Z                     diff += 1
2025-02-25T14:20:45.5804091Z     
2025-02-25T14:20:45.5804197Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5804343Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5804646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5804768Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5804843Z E           
2025-02-25T14:20:45.5804966Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5805231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5805507Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5805520Z 
2025-02-25T14:20:45.5805821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5805825Z 
2025-02-25T14:20:45.5805989Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5805993Z 
2025-02-25T14:20:45.5806225Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939d90>
2025-02-25T14:20:45.5806423Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>, attr = 'nu'
2025-02-25T14:20:45.5806435Z 
2025-02-25T14:20:45.5806572Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5806697Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5806781Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5806949Z         try:
2025-02-25T14:20:45.5807083Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5807172Z         except KeyError:
2025-02-25T14:20:45.5807315Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5807395Z     
2025-02-25T14:20:45.5807485Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5807585Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5807673Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5807807Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5807898Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5807988Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5808108Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5808113Z 
2025-02-25T14:20:45.5808235Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5808367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5808519Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5808591Z     ???
2025-02-25T14:20:45.5808701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5808705Z 
2025-02-25T14:20:45.5808780Z >   ???
2025-02-25T14:20:45.5808924Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5809001Z E   
2025-02-25T14:20:45.5809155Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5809271Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5809357Z E          ...
2025-02-25T14:20:45.5809445Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5809591Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5809710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5809790Z E          ...
2025-02-25T14:20:45.5809884Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5810023Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5810147Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5810252Z 
2025-02-25T14:20:45.5810355Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5810670Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-25T14:20:45.5810675Z 
2025-02-25T14:20:45.5810803Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5810954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5811053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5811198Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5811340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5811444Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5811543Z err_msg = None
2025-02-25T14:20:45.5811547Z 
2025-02-25T14:20:45.5811667Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5811765Z         if err_msg is None:
2025-02-25T14:20:45.5811864Z             if left.shape != right.shape:
2025-02-25T14:20:45.5811968Z                 raise_assert_detail(
2025-02-25T14:20:45.5812115Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5812197Z                 )
2025-02-25T14:20:45.5812273Z     
2025-02-25T14:20:45.5812366Z             diff = 0
2025-02-25T14:20:45.5812491Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5812583Z                 # count up differences
2025-02-25T14:20:45.5812766Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5812849Z                     diff += 1
2025-02-25T14:20:45.5813003Z     
2025-02-25T14:20:45.5813336Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5813591Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5813898Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5814107Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5814222Z E           
2025-02-25T14:20:45.5814355Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5814641Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5814914Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5814922Z 
2025-02-25T14:20:45.5815241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5815245Z 
2025-02-25T14:20:45.5815433Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5815437Z 
2025-02-25T14:20:45.5815662Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a5d0>
2025-02-25T14:20:45.5815854Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5815940Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5815944Z 
2025-02-25T14:20:45.5816096Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5816222Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5816328Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5816418Z         try:
2025-02-25T14:20:45.5816574Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5816676Z         except KeyError:
2025-02-25T14:20:45.5816951Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5817025Z     
2025-02-25T14:20:45.5817112Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5817222Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5817318Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5817464Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5817552Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5817662Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5817779Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5817784Z 
2025-02-25T14:20:45.5817926Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5818064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5818214Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5818312Z     ???
2025-02-25T14:20:45.5818438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5818442Z 
2025-02-25T14:20:45.5818526Z >   ???
2025-02-25T14:20:45.5818664Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5818752Z E   
2025-02-25T14:20:45.5818882Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5819006Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5819084Z E          ...
2025-02-25T14:20:45.5819184Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5819330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5819449Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5819543Z E          ...
2025-02-25T14:20:45.5819726Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5819870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5819987Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5819992Z 
2025-02-25T14:20:45.5820099Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5820308Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-25T14:20:45.5820312Z 
2025-02-25T14:20:45.5820469Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5820816Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5820924Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5821074Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5821210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5821320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5821398Z err_msg = None
2025-02-25T14:20:45.5821403Z 
2025-02-25T14:20:45.5821557Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5821651Z         if err_msg is None:
2025-02-25T14:20:45.5821776Z             if left.shape != right.shape:
2025-02-25T14:20:45.5821882Z                 raise_assert_detail(
2025-02-25T14:20:45.5822029Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5822117Z                 )
2025-02-25T14:20:45.5822189Z     
2025-02-25T14:20:45.5822285Z             diff = 0
2025-02-25T14:20:45.5822414Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5822516Z                 # count up differences
2025-02-25T14:20:45.5822691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5822785Z                     diff += 1
2025-02-25T14:20:45.5822863Z     
2025-02-25T14:20:45.5822971Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5823131Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5823499Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5823635Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5823711Z E           
2025-02-25T14:20:45.5823839Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5824098Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5824379Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5824387Z 
2025-02-25T14:20:45.5824706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5824710Z 
2025-02-25T14:20:45.5824887Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5824891Z 
2025-02-25T14:20:45.5825142Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a4b0>
2025-02-25T14:20:45.5825347Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>, attr = 'f_lu'
2025-02-25T14:20:45.5825351Z 
2025-02-25T14:20:45.5825503Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5825637Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5825726Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5825934Z         try:
2025-02-25T14:20:45.5826079Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5826181Z         except KeyError:
2025-02-25T14:20:45.5826332Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5826409Z     
2025-02-25T14:20:45.5826503Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5826623Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5826738Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5826884Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5826985Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5827084Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5827214Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5827218Z 
2025-02-25T14:20:45.5827348Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5827480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5827628Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5827711Z     ???
2025-02-25T14:20:45.5827825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5827830Z 
2025-02-25T14:20:45.5827916Z >   ???
2025-02-25T14:20:45.5828059Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5828129Z E   
2025-02-25T14:20:45.5828276Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5828389Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5828478Z E          ...
2025-02-25T14:20:45.5828566Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5828710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5828827Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5828913Z E          ...
2025-02-25T14:20:45.5829005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5829143Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5829251Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5829362Z 
2025-02-25T14:20:45.5829460Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5829674Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-25T14:20:45.5829678Z 
2025-02-25T14:20:45.5829806Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5829946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5830049Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5830191Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5830315Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5830428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5830629Z err_msg = None
2025-02-25T14:20:45.5830633Z 
2025-02-25T14:20:45.5830755Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5830856Z         if err_msg is None:
2025-02-25T14:20:45.5830954Z             if left.shape != right.shape:
2025-02-25T14:20:45.5831060Z                 raise_assert_detail(
2025-02-25T14:20:45.5831205Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5831294Z                 )
2025-02-25T14:20:45.5831374Z     
2025-02-25T14:20:45.5831477Z             diff = 0
2025-02-25T14:20:45.5831592Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5831704Z                 # count up differences
2025-02-25T14:20:45.5831891Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5831976Z                     diff += 1
2025-02-25T14:20:45.5832209Z     
2025-02-25T14:20:45.5832308Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5832472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5832666Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5832794Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5832869Z E           
2025-02-25T14:20:45.5833007Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5833292Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5833567Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5833581Z 
2025-02-25T14:20:45.5833915Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5833919Z 
2025-02-25T14:20:45.5834097Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5834115Z 
2025-02-25T14:20:45.5834343Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939250>
2025-02-25T14:20:45.5834531Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5834616Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5834621Z 
2025-02-25T14:20:45.5834774Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5834895Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5835008Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5835084Z         try:
2025-02-25T14:20:45.5835236Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5835467Z         except KeyError:
2025-02-25T14:20:45.5835619Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5835696Z     
2025-02-25T14:20:45.5835793Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5835905Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5835996Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5836141Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5836233Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5836340Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5836454Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5836539Z             else:
2025-02-25T14:20:45.5836642Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5836782Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5836786Z 
2025-02-25T14:20:45.5836940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5837071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5837231Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5837308Z     ???
2025-02-25T14:20:45.5837440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5837445Z 
2025-02-25T14:20:45.5837518Z >   ???
2025-02-25T14:20:45.5837663Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5837735Z E   
2025-02-25T14:20:45.5837881Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5837999Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5838092Z E          ...
2025-02-25T14:20:45.5838197Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5838556Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5838781Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5838914Z E          ...
2025-02-25T14:20:45.5839078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5839300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5839496Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5839503Z 
2025-02-25T14:20:45.5839657Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5840019Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-25T14:20:45.5840025Z 
2025-02-25T14:20:45.5840258Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5840484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5840814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5841051Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5841278Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5841444Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5841592Z err_msg = None
2025-02-25T14:20:45.5841598Z 
2025-02-25T14:20:45.5841808Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5841947Z         if err_msg is None:
2025-02-25T14:20:45.5842122Z             if left.shape != right.shape:
2025-02-25T14:20:45.5842274Z                 raise_assert_detail(
2025-02-25T14:20:45.5842492Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5842569Z                 )
2025-02-25T14:20:45.5842651Z     
2025-02-25T14:20:45.5842731Z             diff = 0
2025-02-25T14:20:45.5842861Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5842967Z                 # count up differences
2025-02-25T14:20:45.5843157Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5843389Z                     diff += 1
2025-02-25T14:20:45.5843477Z     
2025-02-25T14:20:45.5843583Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5843725Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5843914Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5844033Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5844124Z E           
2025-02-25T14:20:45.5844243Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5844530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5844804Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5844816Z 
2025-02-25T14:20:45.5845133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5845137Z 
2025-02-25T14:20:45.5845324Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5845328Z 
2025-02-25T14:20:45.5845556Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939010>
2025-02-25T14:20:45.5845751Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5845848Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5845982Z 
2025-02-25T14:20:45.5846126Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5846255Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5846351Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5846435Z         try:
2025-02-25T14:20:45.5846573Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5846672Z         except KeyError:
2025-02-25T14:20:45.5846818Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5846897Z     
2025-02-25T14:20:45.5846986Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5847084Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5847176Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5847308Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5847401Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5847489Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5847624Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5847696Z             else:
2025-02-25T14:20:45.5847801Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5847917Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5847922Z 
2025-02-25T14:20:45.5848057Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5848175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5848332Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5848417Z     ???
2025-02-25T14:20:45.5848531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5848535Z 
2025-02-25T14:20:45.5848624Z >   ???
2025-02-25T14:20:45.5848758Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5848838Z E   
2025-02-25T14:20:45.5848970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5849108Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5849185Z E          ...
2025-02-25T14:20:45.5849291Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5849531Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5849654Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5849744Z E          ...
2025-02-25T14:20:45.5849839Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5849980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5850089Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5850093Z 
2025-02-25T14:20:45.5850192Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5850390Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-25T14:20:45.5850393Z 
2025-02-25T14:20:45.5850719Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5850872Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5850965Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5851103Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5851222Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5851326Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5851408Z err_msg = None
2025-02-25T14:20:45.5851412Z 
2025-02-25T14:20:45.5851531Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5851615Z         if err_msg is None:
2025-02-25T14:20:45.5851728Z             if left.shape != right.shape:
2025-02-25T14:20:45.5851812Z                 raise_assert_detail(
2025-02-25T14:20:45.5851967Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5852211Z                 )
2025-02-25T14:20:45.5852286Z     
2025-02-25T14:20:45.5852374Z             diff = 0
2025-02-25T14:20:45.5852489Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5852608Z                 # count up differences
2025-02-25T14:20:45.5852781Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5852877Z                     diff += 1
2025-02-25T14:20:45.5852948Z     
2025-02-25T14:20:45.5853053Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5853195Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5853383Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5853511Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5853587Z E           
2025-02-25T14:20:45.5853708Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5853978Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5854258Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5854263Z 
2025-02-25T14:20:45.5854573Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5854578Z 
2025-02-25T14:20:45.5854749Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5854753Z 
2025-02-25T14:20:45.5855003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c938ce0>
2025-02-25T14:20:45.5855165Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5855382Z attr = 'j_blues'
2025-02-25T14:20:45.5855386Z 
2025-02-25T14:20:45.5855520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5855650Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5855749Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5855821Z         try:
2025-02-25T14:20:45.5855969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5856053Z         except KeyError:
2025-02-25T14:20:45.5856210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5856280Z     
2025-02-25T14:20:45.5856381Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5856473Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5856572Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5856711Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5856810Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5856917Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5857032Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5857115Z             else:
2025-02-25T14:20:45.5857212Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5857330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5857334Z 
2025-02-25T14:20:45.5857463Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5857634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5857892Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5858029Z     ???
2025-02-25T14:20:45.5858221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5858240Z 
2025-02-25T14:20:45.5858479Z >   ???
2025-02-25T14:20:45.5858717Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5858834Z E   
2025-02-25T14:20:45.5858977Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5859093Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5859169Z E          ...
2025-02-25T14:20:45.5859264Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5859402Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5859519Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5859604Z E          ...
2025-02-25T14:20:45.5859691Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5859826Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5859939Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5859943Z 
2025-02-25T14:20:45.5860037Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5860263Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-25T14:20:45.5860267Z 
2025-02-25T14:20:45.5860398Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5860714Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5860842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5860987Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5861118Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5861215Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5861302Z err_msg = None
2025-02-25T14:20:45.5861306Z 
2025-02-25T14:20:45.5861421Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5861513Z         if err_msg is None:
2025-02-25T14:20:45.5861617Z             if left.shape != right.shape:
2025-02-25T14:20:45.5861711Z                 raise_assert_detail(
2025-02-25T14:20:45.5861858Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5862077Z                 )
2025-02-25T14:20:45.5862146Z     
2025-02-25T14:20:45.5862230Z             diff = 0
2025-02-25T14:20:45.5862358Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5862447Z                 # count up differences
2025-02-25T14:20:45.5862639Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5862722Z                     diff += 1
2025-02-25T14:20:45.5862800Z     
2025-02-25T14:20:45.5862891Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5863043Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5863217Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5863355Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5863430Z E           
2025-02-25T14:20:45.5863554Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5863834Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5864102Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5864111Z 
2025-02-25T14:20:45.5864548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5864553Z 
2025-02-25T14:20:45.5864726Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5864739Z 
2025-02-25T14:20:45.5864965Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922c00>
2025-02-25T14:20:45.5865145Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5865225Z attr = 'lines'
2025-02-25T14:20:45.5865229Z 
2025-02-25T14:20:45.5865381Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5865498Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5865595Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5865675Z         try:
2025-02-25T14:20:45.5865824Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5865920Z         except KeyError:
2025-02-25T14:20:45.5866058Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5866138Z     
2025-02-25T14:20:45.5866237Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5866347Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5866445Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5866598Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5866690Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5866797Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5866906Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5866996Z             else:
2025-02-25T14:20:45.5867089Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5867211Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5867215Z 
2025-02-25T14:20:45.5867399Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5867517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5867686Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5867758Z     ???
2025-02-25T14:20:45.5867879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5867986Z 
2025-02-25T14:20:45.5868056Z >   ???
2025-02-25T14:20:45.5868194Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5868267Z E   
2025-02-25T14:20:45.5868410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5868531Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5868603Z E          ...
2025-02-25T14:20:45.5868702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5868837Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5868967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5869042Z E          ...
2025-02-25T14:20:45.5869142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5869274Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5869391Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5869395Z 
2025-02-25T14:20:45.5869492Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5869732Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-25T14:20:45.5869736Z 
2025-02-25T14:20:45.5870277Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c923170>
2025-02-25T14:20:45.5870447Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5870651Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5870656Z 
2025-02-25T14:20:45.5870792Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5870914Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5870998Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5871077Z         try:
2025-02-25T14:20:45.5871223Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5871451Z         except KeyError:
2025-02-25T14:20:45.5871605Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5871673Z     
2025-02-25T14:20:45.5871778Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5871874Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5871972Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5872103Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5872198Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5872286Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5872409Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5872413Z 
2025-02-25T14:20:45.5872578Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5872700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5872704Z 
2025-02-25T14:20:45.5872862Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5872952Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5873070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5873155Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5873299Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5873378Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5873490Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5873587Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5873665Z err_msg = None
2025-02-25T14:20:45.5873668Z 
2025-02-25T14:20:45.5873789Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5873868Z         if err_msg is None:
2025-02-25T14:20:45.5873978Z             if left.shape != right.shape:
2025-02-25T14:20:45.5874064Z                 raise_assert_detail(
2025-02-25T14:20:45.5874235Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5874307Z                 )
2025-02-25T14:20:45.5874391Z     
2025-02-25T14:20:45.5874605Z             diff = 0
2025-02-25T14:20:45.5874732Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5874836Z                 # count up differences
2025-02-25T14:20:45.5875015Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5875109Z                     diff += 1
2025-02-25T14:20:45.5875181Z     
2025-02-25T14:20:45.5875279Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5875415Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5875600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5875718Z E           AssertionError: Series are different
2025-02-25T14:20:45.5875805Z E           
2025-02-25T14:20:45.5875920Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5876319Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5876665Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5877377Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5877402Z 
2025-02-25T14:20:45.5877942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5878360Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-25T14:20:45.5878366Z 
2025-02-25T14:20:45.5878752Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9230b0>
2025-02-25T14:20:45.5879059Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5879225Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5879231Z 
2025-02-25T14:20:45.5879463Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5879682Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5879828Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5879967Z         try:
2025-02-25T14:20:45.5880209Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5880379Z         except KeyError:
2025-02-25T14:20:45.5880659Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5880753Z     
2025-02-25T14:20:45.5880843Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5880953Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5881056Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5881198Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5881307Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5881405Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5881527Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5881531Z 
2025-02-25T14:20:45.5881672Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5881790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5881794Z 
2025-02-25T14:20:45.5882067Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5882154Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5882261Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5882343Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5882492Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5882578Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5882695Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5882773Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5882860Z err_msg = None
2025-02-25T14:20:45.5882865Z 
2025-02-25T14:20:45.5882982Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5883074Z         if err_msg is None:
2025-02-25T14:20:45.5883184Z             if left.shape != right.shape:
2025-02-25T14:20:45.5883285Z                 raise_assert_detail(
2025-02-25T14:20:45.5883446Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5883524Z                 )
2025-02-25T14:20:45.5883609Z     
2025-02-25T14:20:45.5883693Z             diff = 0
2025-02-25T14:20:45.5883827Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5883914Z                 # count up differences
2025-02-25T14:20:45.5884093Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5884172Z                     diff += 1
2025-02-25T14:20:45.5884268Z     
2025-02-25T14:20:45.5884358Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5884504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5884820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5884931Z E           AssertionError: Series are different
2025-02-25T14:20:45.5885020Z E           
2025-02-25T14:20:45.5885128Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5885520Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5885924Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5886308Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5886313Z 
2025-02-25T14:20:45.5886630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5886839Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-25T14:20:45.5886843Z 
2025-02-25T14:20:45.5886977Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5887121Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5887311Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5887459Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5887583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5887696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5887789Z err_msg = None
2025-02-25T14:20:45.5887793Z 
2025-02-25T14:20:45.5887902Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5888003Z         if err_msg is None:
2025-02-25T14:20:45.5888104Z             if left.shape != right.shape:
2025-02-25T14:20:45.5888204Z                 raise_assert_detail(
2025-02-25T14:20:45.5888352Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5888442Z                 )
2025-02-25T14:20:45.5888518Z     
2025-02-25T14:20:45.5888608Z             diff = 0
2025-02-25T14:20:45.5888721Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5888826Z                 # count up differences
2025-02-25T14:20:45.5888996Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5889085Z                     diff += 1
2025-02-25T14:20:45.5889169Z     
2025-02-25T14:20:45.5889256Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5889406Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5889583Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5889705Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5889777Z E           
2025-02-25T14:20:45.5889899Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5890263Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5890647Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5890653Z 
2025-02-25T14:20:45.5890972Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5890976Z 
2025-02-25T14:20:45.5891160Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5891164Z 
2025-02-25T14:20:45.5891408Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c923fb0>
2025-02-25T14:20:45.5891616Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>, attr = 'nu'
2025-02-25T14:20:45.5891624Z 
2025-02-25T14:20:45.5891771Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5891897Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5891983Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5892087Z         try:
2025-02-25T14:20:45.5892232Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5892321Z         except KeyError:
2025-02-25T14:20:45.5892463Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5892547Z     
2025-02-25T14:20:45.5892640Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5892742Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5892840Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5892981Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5893080Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5893172Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5893456Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5893460Z 
2025-02-25T14:20:45.5893592Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5893717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5893869Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5893937Z     ???
2025-02-25T14:20:45.5894062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5894066Z 
2025-02-25T14:20:45.5894135Z >   ???
2025-02-25T14:20:45.5894272Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5894343Z E   
2025-02-25T14:20:45.5894483Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5894603Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5894687Z E          ...
2025-02-25T14:20:45.5894782Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5894931Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5895045Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5895132Z E          ...
2025-02-25T14:20:45.5895232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5895357Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5895480Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5895485Z 
2025-02-25T14:20:45.5895575Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5895862Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-25T14:20:45.5895868Z 
2025-02-25T14:20:45.5896095Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5896520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5896696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5896937Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5897112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5897210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5897298Z err_msg = None
2025-02-25T14:20:45.5897302Z 
2025-02-25T14:20:45.5897414Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5897511Z         if err_msg is None:
2025-02-25T14:20:45.5897621Z             if left.shape != right.shape:
2025-02-25T14:20:45.5897734Z                 raise_assert_detail(
2025-02-25T14:20:45.5897873Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5897949Z                 )
2025-02-25T14:20:45.5898033Z     
2025-02-25T14:20:45.5898108Z             diff = 0
2025-02-25T14:20:45.5898234Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5898334Z                 # count up differences
2025-02-25T14:20:45.5898515Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5898594Z                     diff += 1
2025-02-25T14:20:45.5898673Z     
2025-02-25T14:20:45.5898767Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5898914Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5899084Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5899210Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5899295Z E           
2025-02-25T14:20:45.5899409Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5899691Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5900052Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5900058Z 
2025-02-25T14:20:45.5900368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5900373Z 
2025-02-25T14:20:45.5900780Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5900786Z 
2025-02-25T14:20:45.5901054Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922450>
2025-02-25T14:20:45.5901234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5901322Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5901326Z 
2025-02-25T14:20:45.5901478Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5901592Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5901695Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5901776Z         try:
2025-02-25T14:20:45.5901918Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5902014Z         except KeyError:
2025-02-25T14:20:45.5902157Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5902236Z     
2025-02-25T14:20:45.5902323Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5902427Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5902518Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5902798Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5902894Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5903007Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5903129Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5903133Z 
2025-02-25T14:20:45.5903259Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5903396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5903548Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5903631Z     ???
2025-02-25T14:20:45.5903746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5903750Z 
2025-02-25T14:20:45.5903833Z >   ???
2025-02-25T14:20:45.5903966Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5904048Z E   
2025-02-25T14:20:45.5904183Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5904317Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5904407Z E          ...
2025-02-25T14:20:45.5904502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5904648Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5904767Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5904851Z E          ...
2025-02-25T14:20:45.5904944Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5905081Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5905186Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5905190Z 
2025-02-25T14:20:45.5905310Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5905523Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-25T14:20:45.5905527Z 
2025-02-25T14:20:45.5905667Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5905815Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5906047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5906194Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5906327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5906430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5906505Z err_msg = None
2025-02-25T14:20:45.5906518Z 
2025-02-25T14:20:45.5906625Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5906714Z         if err_msg is None:
2025-02-25T14:20:45.5906809Z             if left.shape != right.shape:
2025-02-25T14:20:45.5906912Z                 raise_assert_detail(
2025-02-25T14:20:45.5907066Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5907152Z                 )
2025-02-25T14:20:45.5907225Z     
2025-02-25T14:20:45.5907320Z             diff = 0
2025-02-25T14:20:45.5907455Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5907557Z                 # count up differences
2025-02-25T14:20:45.5907734Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5907825Z                     diff += 1
2025-02-25T14:20:45.5907906Z     
2025-02-25T14:20:45.5908001Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5908150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5908324Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5908456Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5908529Z E           
2025-02-25T14:20:45.5908661Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5909018Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5909305Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5909311Z 
2025-02-25T14:20:45.5909629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5909634Z 
2025-02-25T14:20:45.5909809Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5909813Z 
2025-02-25T14:20:45.5910054Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9233e0>
2025-02-25T14:20:45.5910272Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>, attr = 'f_lu'
2025-02-25T14:20:45.5910279Z 
2025-02-25T14:20:45.5910419Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5910644Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5910732Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5910820Z         try:
2025-02-25T14:20:45.5910965Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5911058Z         except KeyError:
2025-02-25T14:20:45.5911198Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5911283Z     
2025-02-25T14:20:45.5911376Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5911489Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5911595Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5911733Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5911832Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5911924Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5912175Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5912179Z 
2025-02-25T14:20:45.5912306Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5912438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5912590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5912673Z     ???
2025-02-25T14:20:45.5912781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5912792Z 
2025-02-25T14:20:45.5912863Z >   ???
2025-02-25T14:20:45.5912989Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5913052Z E   
2025-02-25T14:20:45.5913195Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5913319Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5913410Z E          ...
2025-02-25T14:20:45.5913505Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5913665Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5913784Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5913875Z E          ...
2025-02-25T14:20:45.5913963Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5914100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5914218Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5914222Z 
2025-02-25T14:20:45.5914315Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5914570Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-25T14:20:45.5914577Z 
2025-02-25T14:20:45.5914977Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5915215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5915400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5915643Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5915871Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5916037Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5916179Z err_msg = None
2025-02-25T14:20:45.5916185Z 
2025-02-25T14:20:45.5916367Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5916518Z         if err_msg is None:
2025-02-25T14:20:45.5916681Z             if left.shape != right.shape:
2025-02-25T14:20:45.5916841Z                 raise_assert_detail(
2025-02-25T14:20:45.5917084Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5917230Z                 )
2025-02-25T14:20:45.5917350Z     
2025-02-25T14:20:45.5917492Z             diff = 0
2025-02-25T14:20:45.5917706Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5917807Z                 # count up differences
2025-02-25T14:20:45.5917992Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5918079Z                     diff += 1
2025-02-25T14:20:45.5918169Z     
2025-02-25T14:20:45.5918269Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5918420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5918592Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5918722Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5918797Z E           
2025-02-25T14:20:45.5918924Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5919210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5919594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5919599Z 
2025-02-25T14:20:45.5919909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5919912Z 
2025-02-25T14:20:45.5920096Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5920100Z 
2025-02-25T14:20:45.5920330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921130>
2025-02-25T14:20:45.5920610Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5920707Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5920711Z 
2025-02-25T14:20:45.5920871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5920988Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5921094Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5921168Z         try:
2025-02-25T14:20:45.5921327Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5921421Z         except KeyError:
2025-02-25T14:20:45.5921568Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5921653Z     
2025-02-25T14:20:45.5921743Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5921853Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5921952Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5922234Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5922325Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5922434Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5922549Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5922636Z             else:
2025-02-25T14:20:45.5922739Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5922848Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5922853Z 
2025-02-25T14:20:45.5922992Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5923109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5923272Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5923342Z     ???
2025-02-25T14:20:45.5923461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5923464Z 
2025-02-25T14:20:45.5923542Z >   ???
2025-02-25T14:20:45.5923683Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5923766Z E   
2025-02-25T14:20:45.5923907Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5924032Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5924106Z E          ...
2025-02-25T14:20:45.5924203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5924333Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5924455Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5924536Z E          ...
2025-02-25T14:20:45.5924632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5924761Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5924881Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5924885Z 
2025-02-25T14:20:45.5924988Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5925204Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-25T14:20:45.5925208Z 
2025-02-25T14:20:45.5925343Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5925605Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5925715Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5925844Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5925978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5926077Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5926164Z err_msg = None
2025-02-25T14:20:45.5926168Z 
2025-02-25T14:20:45.5926287Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5926370Z         if err_msg is None:
2025-02-25T14:20:45.5926481Z             if left.shape != right.shape:
2025-02-25T14:20:45.5926570Z                 raise_assert_detail(
2025-02-25T14:20:45.5926725Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5926806Z                 )
2025-02-25T14:20:45.5926887Z     
2025-02-25T14:20:45.5926963Z             diff = 0
2025-02-25T14:20:45.5927082Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5927174Z                 # count up differences
2025-02-25T14:20:45.5927355Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5927435Z                     diff += 1
2025-02-25T14:20:45.5927505Z     
2025-02-25T14:20:45.5927596Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5927731Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5927915Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5928119Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5928202Z E           
2025-02-25T14:20:45.5928317Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5928599Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5928877Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5928882Z 
2025-02-25T14:20:45.5929188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5929193Z 
2025-02-25T14:20:45.5929373Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5929380Z 
2025-02-25T14:20:45.5929613Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920e00>
2025-02-25T14:20:45.5929779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5929871Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5929875Z 
2025-02-25T14:20:45.5930012Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5930141Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5930232Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5930316Z         try:
2025-02-25T14:20:45.5930458Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5930740Z         except KeyError:
2025-02-25T14:20:45.5930972Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5931063Z     
2025-02-25T14:20:45.5931161Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5931256Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5931494Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5931628Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5931726Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5931815Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5931932Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5932006Z             else:
2025-02-25T14:20:45.5932115Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5932228Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5932232Z 
2025-02-25T14:20:45.5932368Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5932496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5932650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5932801Z     ???
2025-02-25T14:20:45.5933003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5933019Z 
2025-02-25T14:20:45.5933152Z >   ???
2025-02-25T14:20:45.5933367Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5933498Z E   
2025-02-25T14:20:45.5933721Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5933925Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5934060Z E          ...
2025-02-25T14:20:45.5934209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5934439Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5934634Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5934776Z E          ...
2025-02-25T14:20:45.5934928Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5935339Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5935527Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5935534Z 
2025-02-25T14:20:45.5935704Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5936001Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-25T14:20:45.5936016Z 
2025-02-25T14:20:45.5936152Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5936286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5936381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5936521Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5936645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5936749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5936853Z err_msg = None
2025-02-25T14:20:45.5936856Z 
2025-02-25T14:20:45.5947389Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5947506Z         if err_msg is None:
2025-02-25T14:20:45.5947613Z             if left.shape != right.shape:
2025-02-25T14:20:45.5947704Z                 raise_assert_detail(
2025-02-25T14:20:45.5947869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5947946Z                 )
2025-02-25T14:20:45.5948013Z     
2025-02-25T14:20:45.5948088Z             diff = 0
2025-02-25T14:20:45.5948211Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5948312Z                 # count up differences
2025-02-25T14:20:45.5948493Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5948572Z                     diff += 1
2025-02-25T14:20:45.5948636Z     
2025-02-25T14:20:45.5948737Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5948885Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5949059Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5949365Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5949443Z E           
2025-02-25T14:20:45.5949564Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5949842Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5950129Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5950136Z 
2025-02-25T14:20:45.5950473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5950478Z 
2025-02-25T14:20:45.5950786Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5950791Z 
2025-02-25T14:20:45.5951030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920f80>
2025-02-25T14:20:45.5951200Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5951280Z attr = 'j_blues'
2025-02-25T14:20:45.5951284Z 
2025-02-25T14:20:45.5951431Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5951552Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5951641Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5951712Z         try:
2025-02-25T14:20:45.5952049Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5952132Z         except KeyError:
2025-02-25T14:20:45.5952277Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5952416Z     
2025-02-25T14:20:45.5952588Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5952746Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5952899Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5953125Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5953273Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5953430Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5953624Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5953710Z             else:
2025-02-25T14:20:45.5953809Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5953935Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5953940Z 
2025-02-25T14:20:45.5954081Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5954209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5954369Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5954460Z     ???
2025-02-25T14:20:45.5954582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5954587Z 
2025-02-25T14:20:45.5954659Z >   ???
2025-02-25T14:20:45.5954805Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5954873Z E   
2025-02-25T14:20:45.5955016Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5955127Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5955217Z E          ...
2025-02-25T14:20:45.5955307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5955457Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5955574Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5955660Z E          ...
2025-02-25T14:20:45.5955760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5956028Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5956147Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5956151Z 
2025-02-25T14:20:45.5956248Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5956534Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-25T14:20:45.5956538Z 
2025-02-25T14:20:45.5956673Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5956824Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5956941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5957088Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5957230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5957330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5957423Z err_msg = None
2025-02-25T14:20:45.5957427Z 
2025-02-25T14:20:45.5957549Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5957643Z         if err_msg is None:
2025-02-25T14:20:45.5957749Z             if left.shape != right.shape:
2025-02-25T14:20:45.5957852Z                 raise_assert_detail(
2025-02-25T14:20:45.5957999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5958086Z                 )
2025-02-25T14:20:45.5958170Z     
2025-02-25T14:20:45.5958246Z             diff = 0
2025-02-25T14:20:45.5958378Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5958467Z                 # count up differences
2025-02-25T14:20:45.5958744Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5958826Z                     diff += 1
2025-02-25T14:20:45.5958919Z     
2025-02-25T14:20:45.5959011Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5959168Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5959345Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5959479Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5959569Z E           
2025-02-25T14:20:45.5959690Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5959970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5960240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5960251Z 
2025-02-25T14:20:45.5960689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5960694Z 
2025-02-25T14:20:45.5960864Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5960868Z 
2025-02-25T14:20:45.5961103Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921d90>
2025-02-25T14:20:45.5961288Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5961365Z attr = 'lines'
2025-02-25T14:20:45.5961370Z 
2025-02-25T14:20:45.5961533Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5961658Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5961745Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5961958Z         try:
2025-02-25T14:20:45.5962101Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5962194Z         except KeyError:
2025-02-25T14:20:45.5962336Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5962429Z     
2025-02-25T14:20:45.5962520Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5962626Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5962715Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5962859Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5962949Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5963053Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5963174Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5963255Z             else:
2025-02-25T14:20:45.5963362Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5963472Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5963482Z 
2025-02-25T14:20:45.5963623Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5963740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5963904Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5963977Z     ???
2025-02-25T14:20:45.5964104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5964108Z 
2025-02-25T14:20:45.5964193Z >   ???
2025-02-25T14:20:45.5964325Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5964408Z E   
2025-02-25T14:20:45.5964535Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5964654Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5964851Z E          ...
2025-02-25T14:20:45.5964966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5965101Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5965224Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5965293Z E          ...
2025-02-25T14:20:45.5965384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5965517Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5965621Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5965625Z 
2025-02-25T14:20:45.5965717Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5966016Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-25T14:20:45.5966021Z 
2025-02-25T14:20:45.5966248Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920c50>
2025-02-25T14:20:45.5966422Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5966527Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5966531Z 
2025-02-25T14:20:45.5966667Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5966804Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5966910Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5966984Z         try:
2025-02-25T14:20:45.5967136Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5967220Z         except KeyError:
2025-02-25T14:20:45.5967368Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5967448Z     
2025-02-25T14:20:45.5967545Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5967639Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5967747Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5967876Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5967980Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5968084Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5968191Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5968287Z 
2025-02-25T14:20:45.5968430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5968544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5968548Z 
2025-02-25T14:20:45.5968695Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5968782Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5968903Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5968989Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5969136Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5969227Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5969338Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5969431Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5969518Z err_msg = None
2025-02-25T14:20:45.5969522Z 
2025-02-25T14:20:45.5969656Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5969740Z         if err_msg is None:
2025-02-25T14:20:45.5969847Z             if left.shape != right.shape:
2025-02-25T14:20:45.5969941Z                 raise_assert_detail(
2025-02-25T14:20:45.5970102Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5970188Z                 )
2025-02-25T14:20:45.5970261Z     
2025-02-25T14:20:45.5970355Z             diff = 0
2025-02-25T14:20:45.5970473Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5970676Z                 # count up differences
2025-02-25T14:20:45.5970846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5971073Z                     diff += 1
2025-02-25T14:20:45.5971143Z     
2025-02-25T14:20:45.5971233Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5971422Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5971747Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5971932Z E           AssertionError: Series are different
2025-02-25T14:20:45.5972068Z E           
2025-02-25T14:20:45.5972254Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5972789Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5973151Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5973509Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5973514Z 
2025-02-25T14:20:45.5973828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5974149Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-25T14:20:45.5974153Z 
2025-02-25T14:20:45.5974380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9209b0>
2025-02-25T14:20:45.5974704Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5974808Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5974813Z 
2025-02-25T14:20:45.5974950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5975084Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5975175Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5975263Z         try:
2025-02-25T14:20:45.5975406Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5975495Z         except KeyError:
2025-02-25T14:20:45.5975629Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5975704Z     
2025-02-25T14:20:45.5975791Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5975894Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5975989Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5976127Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5976223Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5976316Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5976434Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5976438Z 
2025-02-25T14:20:45.5976565Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5976694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5976698Z 
2025-02-25T14:20:45.5976834Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5976924Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5977038Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5977221Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5977368Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5977453Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5977565Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5977639Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5977725Z err_msg = None
2025-02-25T14:20:45.5977729Z 
2025-02-25T14:20:45.5977840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5977935Z         if err_msg is None:
2025-02-25T14:20:45.5978044Z             if left.shape != right.shape:
2025-02-25T14:20:45.5978134Z                 raise_assert_detail(
2025-02-25T14:20:45.5978290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5978362Z                 )
2025-02-25T14:20:45.5978440Z     
2025-02-25T14:20:45.5978512Z             diff = 0
2025-02-25T14:20:45.5978636Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5978728Z                 # count up differences
2025-02-25T14:20:45.5978908Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5978988Z                     diff += 1
2025-02-25T14:20:45.5979074Z     
2025-02-25T14:20:45.5979164Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5979313Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5979497Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5979603Z E           AssertionError: Series are different
2025-02-25T14:20:45.5979682Z E           
2025-02-25T14:20:45.5979787Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5980173Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5980888Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5981284Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5981289Z 
2025-02-25T14:20:45.5981619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5981872Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-25T14:20:45.5981876Z 
2025-02-25T14:20:45.5982001Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5982133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5982230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5982364Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5982491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5982744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5982837Z err_msg = None
2025-02-25T14:20:45.5982841Z 
2025-02-25T14:20:45.5982962Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5983052Z         if err_msg is None:
2025-02-25T14:20:45.5983149Z             if left.shape != right.shape:
2025-02-25T14:20:45.5983242Z                 raise_assert_detail(
2025-02-25T14:20:45.5983386Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5983461Z                 )
2025-02-25T14:20:45.5983526Z     
2025-02-25T14:20:45.5983604Z             diff = 0
2025-02-25T14:20:45.5983714Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5983802Z                 # count up differences
2025-02-25T14:20:45.5983975Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5984050Z                     diff += 1
2025-02-25T14:20:45.5984127Z     
2025-02-25T14:20:45.5984213Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5984350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5984523Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5984650Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5984724Z E           
2025-02-25T14:20:45.5984848Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5985119Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5985398Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5985526Z 
2025-02-25T14:20:45.5985849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5985853Z 
2025-02-25T14:20:45.5986026Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5986030Z 
2025-02-25T14:20:45.5986268Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9210d0>
2025-02-25T14:20:45.5986479Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>, attr = 'nu'
2025-02-25T14:20:45.5986484Z 
2025-02-25T14:20:45.5986621Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5986745Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5986829Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5986918Z         try:
2025-02-25T14:20:45.5987064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5987153Z         except KeyError:
2025-02-25T14:20:45.5987299Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5987377Z     
2025-02-25T14:20:45.5987476Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5987573Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5987669Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5987798Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5987895Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5987991Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5988112Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5988116Z 
2025-02-25T14:20:45.5988246Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5988460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5988615Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5988700Z     ???
2025-02-25T14:20:45.5988826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5988830Z 
2025-02-25T14:20:45.5988900Z >   ???
2025-02-25T14:20:45.5989037Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5989109Z E   
2025-02-25T14:20:45.5989240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5989367Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5989440Z E          ...
2025-02-25T14:20:45.5989541Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5989671Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5989798Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5989886Z E          ...
2025-02-25T14:20:45.5989977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5990112Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5990220Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5990227Z 
2025-02-25T14:20:45.5990335Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5990891Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-25T14:20:45.5990900Z 
2025-02-25T14:20:45.5991133Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5991349Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5991524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5991766Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5991967Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5992074Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5992153Z err_msg = None
2025-02-25T14:20:45.5992302Z 
2025-02-25T14:20:45.5992428Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5992517Z         if err_msg is None:
2025-02-25T14:20:45.5992623Z             if left.shape != right.shape:
2025-02-25T14:20:45.5992710Z                 raise_assert_detail(
2025-02-25T14:20:45.5992869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5992955Z                 )
2025-02-25T14:20:45.5993024Z     
2025-02-25T14:20:45.5993111Z             diff = 0
2025-02-25T14:20:45.5993224Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5993329Z                 # count up differences
2025-02-25T14:20:45.5993503Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5993590Z                     diff += 1
2025-02-25T14:20:45.5993669Z     
2025-02-25T14:20:45.5993776Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5993914Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5994098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5994221Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5994294Z E           
2025-02-25T14:20:45.5994412Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5994671Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5995060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5995072Z 
2025-02-25T14:20:45.5995397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5995401Z 
2025-02-25T14:20:45.5995577Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5995582Z 
2025-02-25T14:20:45.5995816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922fc0>
2025-02-25T14:20:45.5995987Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5996085Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5996090Z 
2025-02-25T14:20:45.5996227Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5996353Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5996456Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5996529Z         try:
2025-02-25T14:20:45.5996683Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5996781Z         except KeyError:
2025-02-25T14:20:45.5996928Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5996999Z     
2025-02-25T14:20:45.5997102Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5997194Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5997286Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5997413Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5997508Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5997606Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5997715Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5997720Z 
2025-02-25T14:20:45.5997848Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5997965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5998116Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5998296Z     ???
2025-02-25T14:20:45.5998414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5998418Z 
2025-02-25T14:20:45.5998486Z >   ???
2025-02-25T14:20:45.5998619Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5998690Z E   
2025-02-25T14:20:45.5998824Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5998939Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5999008Z E          ...
2025-02-25T14:20:45.5999104Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5999232Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5999354Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5999428Z E          ...
2025-02-25T14:20:45.5999532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5999659Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5999786Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5999790Z 
2025-02-25T14:20:45.5999892Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6000134Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-25T14:20:45.6000138Z 
2025-02-25T14:20:45.6000283Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6000411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6000688Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6000839Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6001109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6001211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6001300Z err_msg = None
2025-02-25T14:20:45.6001313Z 
2025-02-25T14:20:45.6001438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6001522Z         if err_msg is None:
2025-02-25T14:20:45.6001632Z             if left.shape != right.shape:
2025-02-25T14:20:45.6001721Z                 raise_assert_detail(
2025-02-25T14:20:45.6001876Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6001949Z                 )
2025-02-25T14:20:45.6002033Z     
2025-02-25T14:20:45.6002108Z             diff = 0
2025-02-25T14:20:45.6002235Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6002327Z                 # count up differences
2025-02-25T14:20:45.6002510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6002611Z                     diff += 1
2025-02-25T14:20:45.6002681Z     
2025-02-25T14:20:45.6002780Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6002921Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6003104Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6003216Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6003303Z E           
2025-02-25T14:20:45.6003416Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6003686Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6003958Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6004080Z 
2025-02-25T14:20:45.6004383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6004387Z 
2025-02-25T14:20:45.6004561Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6004564Z 
2025-02-25T14:20:45.6004790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921e80>
2025-02-25T14:20:45.6004993Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>, attr = 'f_lu'
2025-02-25T14:20:45.6004997Z 
2025-02-25T14:20:45.6005139Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6005253Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6005348Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6005416Z         try:
2025-02-25T14:20:45.6005558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6005643Z         except KeyError:
2025-02-25T14:20:45.6005781Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6005848Z     
2025-02-25T14:20:45.6005939Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6006035Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6006123Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6006259Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6006343Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6006439Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6006547Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6006551Z 
2025-02-25T14:20:45.6006681Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6006877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6007036Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6007111Z     ???
2025-02-25T14:20:45.6007228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6007232Z 
2025-02-25T14:20:45.6007313Z >   ???
2025-02-25T14:20:45.6007439Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6007517Z E   
2025-02-25T14:20:45.6007646Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6007767Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6007842Z E          ...
2025-02-25T14:20:45.6007942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6008071Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6008250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6008387Z E          ...
2025-02-25T14:20:45.6008544Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6008748Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6008921Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6008928Z 
2025-02-25T14:20:45.6009076Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6009529Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-25T14:20:45.6009537Z 
2025-02-25T14:20:45.6009762Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6009973Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6010148Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6010351Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6010695Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6010867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6011004Z err_msg = None
2025-02-25T14:20:45.6011199Z 
2025-02-25T14:20:45.6011410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6011494Z         if err_msg is None:
2025-02-25T14:20:45.6011643Z             if left.shape != right.shape:
2025-02-25T14:20:45.6011794Z                 raise_assert_detail(
2025-02-25T14:20:45.6012043Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6012184Z                 )
2025-02-25T14:20:45.6012304Z     
2025-02-25T14:20:45.6012436Z             diff = 0
2025-02-25T14:20:45.6012606Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6012756Z                 # count up differences
2025-02-25T14:20:45.6013057Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6013218Z                     diff += 1
2025-02-25T14:20:45.6013325Z     
2025-02-25T14:20:45.6013481Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6013713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6014024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6014217Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6014336Z E           
2025-02-25T14:20:45.6014531Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6015002Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6015679Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6015696Z 
2025-02-25T14:20:45.6016065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6016069Z 
2025-02-25T14:20:45.6016239Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6016243Z 
2025-02-25T14:20:45.6016473Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9229c0>
2025-02-25T14:20:45.6016643Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6016732Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6016736Z 
2025-02-25T14:20:45.6016873Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6017003Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6017094Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6017164Z         try:
2025-02-25T14:20:45.6017313Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6017400Z         except KeyError:
2025-02-25T14:20:45.6017545Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6017611Z     
2025-02-25T14:20:45.6017708Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6017800Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6017895Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6018027Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6018119Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6018209Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6018327Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6018403Z             else:
2025-02-25T14:20:45.6018503Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6018616Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6018620Z 
2025-02-25T14:20:45.6018746Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6018963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6019113Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6019197Z     ???
2025-02-25T14:20:45.6019309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6019313Z 
2025-02-25T14:20:45.6019392Z >   ???
2025-02-25T14:20:45.6019532Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6019603Z E   
2025-02-25T14:20:45.6019744Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6019856Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6019938Z E          ...
2025-02-25T14:20:45.6020032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6020179Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6020290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6020382Z E          ...
2025-02-25T14:20:45.6020467Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6020828Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6020952Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6020956Z 
2025-02-25T14:20:45.6021054Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6021335Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-25T14:20:45.6021339Z 
2025-02-25T14:20:45.6021474Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6021621Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6021851Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6022004Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6022142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6022232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6022313Z err_msg = None
2025-02-25T14:20:45.6022317Z 
2025-02-25T14:20:45.6022428Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6022514Z         if err_msg is None:
2025-02-25T14:20:45.6022609Z             if left.shape != right.shape:
2025-02-25T14:20:45.6022699Z                 raise_assert_detail(
2025-02-25T14:20:45.6022843Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6022919Z                 )
2025-02-25T14:20:45.6022987Z     
2025-02-25T14:20:45.6023066Z             diff = 0
2025-02-25T14:20:45.6023192Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6023280Z                 # count up differences
2025-02-25T14:20:45.6023457Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6023540Z                     diff += 1
2025-02-25T14:20:45.6023615Z     
2025-02-25T14:20:45.6023702Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6023847Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6024015Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6024137Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6024207Z E           
2025-02-25T14:20:45.6024322Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6024598Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6025006Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6025011Z 
2025-02-25T14:20:45.6025324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6025328Z 
2025-02-25T14:20:45.6025502Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6025506Z 
2025-02-25T14:20:45.6025738Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9228d0>
2025-02-25T14:20:45.6025915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6025993Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6025997Z 
2025-02-25T14:20:45.6026137Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6026257Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6026346Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6026418Z         try:
2025-02-25T14:20:45.6026567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6026653Z         except KeyError:
2025-02-25T14:20:45.6026792Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6026865Z     
2025-02-25T14:20:45.6026951Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6027046Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6027135Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6027271Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6027359Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6027538Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6027650Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6027733Z             else:
2025-02-25T14:20:45.6027827Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6027937Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6027941Z 
2025-02-25T14:20:45.6028078Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6028267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6028511Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6028631Z     ???
2025-02-25T14:20:45.6028821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6028827Z 
2025-02-25T14:20:45.6028938Z >   ???
2025-02-25T14:20:45.6029156Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6029268Z E   
2025-02-25T14:20:45.6029500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6029621Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6029699Z E          ...
2025-02-25T14:20:45.6029789Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6029917Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6030038Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6030106Z E          ...
2025-02-25T14:20:45.6030200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6030325Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6030433Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6030437Z 
2025-02-25T14:20:45.6030696Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6030965Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-25T14:20:45.6030970Z 
2025-02-25T14:20:45.6031107Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6031234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6031614Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6031752Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6031882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6031976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6032056Z err_msg = None
2025-02-25T14:20:45.6032060Z 
2025-02-25T14:20:45.6032175Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6032255Z         if err_msg is None:
2025-02-25T14:20:45.6032358Z             if left.shape != right.shape:
2025-02-25T14:20:45.6032440Z                 raise_assert_detail(
2025-02-25T14:20:45.6032594Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6032664Z                 )
2025-02-25T14:20:45.6032736Z     
2025-02-25T14:20:45.6032819Z             diff = 0
2025-02-25T14:20:45.6032933Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6033020Z                 # count up differences
2025-02-25T14:20:45.6033201Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6033283Z                     diff += 1
2025-02-25T14:20:45.6033352Z     
2025-02-25T14:20:45.6033446Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6033585Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6033761Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6033869Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6033944Z E           
2025-02-25T14:20:45.6034174Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6034444Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6034715Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6034720Z 
2025-02-25T14:20:45.6035024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6035029Z 
2025-02-25T14:20:45.6035204Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6035208Z 
2025-02-25T14:20:45.6035440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920950>
2025-02-25T14:20:45.6035622Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6035701Z attr = 'j_blues'
2025-02-25T14:20:45.6035705Z 
2025-02-25T14:20:45.6035846Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6035969Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6036055Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6036133Z         try:
2025-02-25T14:20:45.6036275Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6036362Z         except KeyError:
2025-02-25T14:20:45.6036498Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6036569Z     
2025-02-25T14:20:45.6036655Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6036755Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6036860Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6036990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6037174Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6037263Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6037377Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6037447Z             else:
2025-02-25T14:20:45.6037547Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6037654Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6037658Z 
2025-02-25T14:20:45.6037787Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6037909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6038055Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6038135Z     ???
2025-02-25T14:20:45.6038246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6038250Z 
2025-02-25T14:20:45.6038329Z >   ???
2025-02-25T14:20:45.6038453Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6038543Z E   
2025-02-25T14:20:45.6038673Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6038795Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6038869Z E          ...
2025-02-25T14:20:45.6038967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6039108Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6039220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6039298Z E          ...
2025-02-25T14:20:45.6039380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6039507Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6039609Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6039613Z 
2025-02-25T14:20:45.6039798Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6040007Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-25T14:20:45.6040016Z 
2025-02-25T14:20:45.6040155Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6040290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6040390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6040692Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6040819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6040926Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6041004Z err_msg = None
2025-02-25T14:20:45.6041008Z 
2025-02-25T14:20:45.6041127Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6041220Z         if err_msg is None:
2025-02-25T14:20:45.6041324Z             if left.shape != right.shape:
2025-02-25T14:20:45.6041410Z                 raise_assert_detail(
2025-02-25T14:20:45.6041558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6041639Z                 )
2025-02-25T14:20:45.6041707Z     
2025-02-25T14:20:45.6041787Z             diff = 0
2025-02-25T14:20:45.6041899Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6041990Z                 # count up differences
2025-02-25T14:20:45.6042161Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6042245Z                     diff += 1
2025-02-25T14:20:45.6042316Z     
2025-02-25T14:20:45.6042410Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6042544Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6042726Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6042842Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6042910Z E           
2025-02-25T14:20:45.6043154Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6043411Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6043680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6043685Z 
2025-02-25T14:20:45.6043993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6043997Z 
2025-02-25T14:20:45.6044176Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6044180Z 
2025-02-25T14:20:45.6044407Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7020>
2025-02-25T14:20:45.6044571Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6044650Z attr = 'lines'
2025-02-25T14:20:45.6044653Z 
2025-02-25T14:20:45.6044793Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6044905Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6044992Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6045063Z         try:
2025-02-25T14:20:45.6045207Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6045286Z         except KeyError:
2025-02-25T14:20:45.6045569Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6045638Z     
2025-02-25T14:20:45.6045731Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6045830Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6045923Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6046056Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6046150Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6046247Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6046354Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6046434Z             else:
2025-02-25T14:20:45.6046528Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6046638Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6046642Z 
2025-02-25T14:20:45.6046765Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6046887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6047028Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6047102Z     ???
2025-02-25T14:20:45.6047217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6047221Z 
2025-02-25T14:20:45.6047308Z >   ???
2025-02-25T14:20:45.6047545Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6047665Z E   
2025-02-25T14:20:45.6047888Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6048069Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6048198Z E          ...
2025-02-25T14:20:45.6048345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6048570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6048759Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6048883Z E          ...
2025-02-25T14:20:45.6049043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6049253Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6049431Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6049564Z 
2025-02-25T14:20:45.6049718Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6050167Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-25T14:20:45.6050174Z 
2025-02-25T14:20:45.6050668Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e5c40>
2025-02-25T14:20:45.6050853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6050943Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6050952Z 
2025-02-25T14:20:45.6051087Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6051206Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6051287Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6051364Z         try:
2025-02-25T14:20:45.6051512Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6051597Z         except KeyError:
2025-02-25T14:20:45.6051732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6051812Z     
2025-02-25T14:20:45.6051897Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6051992Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6052107Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6052245Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6052336Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6052423Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6052535Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6052539Z 
2025-02-25T14:20:45.6052663Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6052781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6052918Z 
2025-02-25T14:20:45.6053056Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6053150Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6053269Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6053362Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6053512Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6053597Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6053714Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6053794Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6053881Z err_msg = None
2025-02-25T14:20:45.6053885Z 
2025-02-25T14:20:45.6053996Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6054085Z         if err_msg is None:
2025-02-25T14:20:45.6054178Z             if left.shape != right.shape:
2025-02-25T14:20:45.6054274Z                 raise_assert_detail(
2025-02-25T14:20:45.6054433Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6054511Z                 )
2025-02-25T14:20:45.6054592Z     
2025-02-25T14:20:45.6054668Z             diff = 0
2025-02-25T14:20:45.6054788Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6054874Z                 # count up differences
2025-02-25T14:20:45.6055052Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6055131Z                     diff += 1
2025-02-25T14:20:45.6055207Z     
2025-02-25T14:20:45.6055293Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6055442Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6055614Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6055729Z E           AssertionError: Series are different
2025-02-25T14:20:45.6055804Z E           
2025-02-25T14:20:45.6055903Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6056291Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6056760Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6057108Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6057119Z 
2025-02-25T14:20:45.6057433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6057686Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-25T14:20:45.6057690Z 
2025-02-25T14:20:45.6057919Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e5f10>
2025-02-25T14:20:45.6058091Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6058184Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6058188Z 
2025-02-25T14:20:45.6058411Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6058527Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6058618Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6058697Z         try:
2025-02-25T14:20:45.6058839Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6058916Z         except KeyError:
2025-02-25T14:20:45.6059056Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6059121Z     
2025-02-25T14:20:45.6059214Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6059314Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6059401Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6059542Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6059627Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6059722Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6059834Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6059838Z 
2025-02-25T14:20:45.6059967Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6060078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6060089Z 
2025-02-25T14:20:45.6060226Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6060312Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6060416Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6060498Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6060831Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6060924Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6061024Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6061109Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6061189Z err_msg = None
2025-02-25T14:20:45.6061193Z 
2025-02-25T14:20:45.6061309Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6061397Z         if err_msg is None:
2025-02-25T14:20:45.6061616Z             if left.shape != right.shape:
2025-02-25T14:20:45.6061705Z                 raise_assert_detail(
2025-02-25T14:20:45.6061847Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6061920Z                 )
2025-02-25T14:20:45.6061984Z     
2025-02-25T14:20:45.6062060Z             diff = 0
2025-02-25T14:20:45.6062170Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6062259Z                 # count up differences
2025-02-25T14:20:45.6062423Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6062506Z                     diff += 1
2025-02-25T14:20:45.6062573Z     
2025-02-25T14:20:45.6062664Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6062807Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6062975Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6063091Z E           AssertionError: Series are different
2025-02-25T14:20:45.6063160Z E           
2025-02-25T14:20:45.6063265Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6063637Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6064131Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6064523Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6064528Z 
2025-02-25T14:20:45.6064837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6065042Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-25T14:20:45.6065046Z 
2025-02-25T14:20:45.6065180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6065306Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6065416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6065547Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6065673Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6065771Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6065845Z err_msg = None
2025-02-25T14:20:45.6065849Z 
2025-02-25T14:20:45.6065961Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6066040Z         if err_msg is None:
2025-02-25T14:20:45.6066175Z             if left.shape != right.shape:
2025-02-25T14:20:45.6066321Z                 raise_assert_detail(
2025-02-25T14:20:45.6066577Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6066694Z                 )
2025-02-25T14:20:45.6066942Z     
2025-02-25T14:20:45.6067067Z             diff = 0
2025-02-25T14:20:45.6067255Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6067406Z                 # count up differences
2025-02-25T14:20:45.6067692Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6067824Z                     diff += 1
2025-02-25T14:20:45.6067940Z     
2025-02-25T14:20:45.6068094Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6068314Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6068615Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6068800Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6068925Z E           
2025-02-25T14:20:45.6069120Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6069497Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6069777Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6069782Z 
2025-02-25T14:20:45.6070084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6070088Z 
2025-02-25T14:20:45.6070367Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6070372Z 
2025-02-25T14:20:45.6070795Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6690>
2025-02-25T14:20:45.6071006Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>, attr = 'nu'
2025-02-25T14:20:45.6071010Z 
2025-02-25T14:20:45.6071150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6071262Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6071348Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6071418Z         try:
2025-02-25T14:20:45.6071560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6071640Z         except KeyError:
2025-02-25T14:20:45.6071783Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6071856Z     
2025-02-25T14:20:45.6071942Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6072041Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6072135Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6072267Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6072356Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6072450Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6072556Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6072560Z 
2025-02-25T14:20:45.6072687Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6072800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6072949Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6073027Z     ???
2025-02-25T14:20:45.6073133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6073138Z 
2025-02-25T14:20:45.6073214Z >   ???
2025-02-25T14:20:45.6073336Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6073407Z E   
2025-02-25T14:20:45.6073537Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6073652Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6073856Z E          ...
2025-02-25T14:20:45.6073947Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6074075Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6074189Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6074264Z E          ...
2025-02-25T14:20:45.6074346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6074473Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6074574Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6074579Z 
2025-02-25T14:20:45.6074673Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6074893Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-25T14:20:45.6074898Z 
2025-02-25T14:20:45.6075032Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6075159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6075269Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6075403Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6075525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6075622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6075696Z err_msg = None
2025-02-25T14:20:45.6075700Z 
2025-02-25T14:20:45.6075817Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6075898Z         if err_msg is None:
2025-02-25T14:20:45.6075999Z             if left.shape != right.shape:
2025-02-25T14:20:45.6076081Z                 raise_assert_detail(
2025-02-25T14:20:45.6076346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6076425Z                 )
2025-02-25T14:20:45.6076494Z     
2025-02-25T14:20:45.6076574Z             diff = 0
2025-02-25T14:20:45.6076685Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6076778Z                 # count up differences
2025-02-25T14:20:45.6076944Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6077026Z                     diff += 1
2025-02-25T14:20:45.6077092Z     
2025-02-25T14:20:45.6077184Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6077323Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6077495Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6077614Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6077686Z E           
2025-02-25T14:20:45.6077813Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6078072Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6078343Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6078348Z 
2025-02-25T14:20:45.6078656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6078660Z 
2025-02-25T14:20:45.6078836Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6078840Z 
2025-02-25T14:20:45.6079068Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7aa0>
2025-02-25T14:20:45.6079322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6079413Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6079418Z 
2025-02-25T14:20:45.6079555Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6079679Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6079772Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6079849Z         try:
2025-02-25T14:20:45.6080005Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6080088Z         except KeyError:
2025-02-25T14:20:45.6080240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6080309Z     
2025-02-25T14:20:45.6080405Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6080662Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6080800Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6080938Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6081042Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6081140Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6081254Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6081259Z 
2025-02-25T14:20:45.6081392Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6081505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6081664Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6081734Z     ???
2025-02-25T14:20:45.6081860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6081864Z 
2025-02-25T14:20:45.6081933Z >   ???
2025-02-25T14:20:45.6082071Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6082265Z E   
2025-02-25T14:20:45.6082411Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6082537Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6082619Z E          ...
2025-02-25T14:20:45.6082718Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6082850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6082974Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6083049Z E          ...
2025-02-25T14:20:45.6083145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6083271Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6083388Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6083392Z 
2025-02-25T14:20:45.6083498Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6083706Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-25T14:20:45.6083716Z 
2025-02-25T14:20:45.6083856Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6083997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6084179Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6084421Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6084653Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6084812Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6084955Z err_msg = None
2025-02-25T14:20:45.6084961Z 
2025-02-25T14:20:45.6085151Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6085282Z         if err_msg is None:
2025-02-25T14:20:45.6085386Z             if left.shape != right.shape:
2025-02-25T14:20:45.6085473Z                 raise_assert_detail(
2025-02-25T14:20:45.6085630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6085699Z                 )
2025-02-25T14:20:45.6085909Z     
2025-02-25T14:20:45.6085983Z             diff = 0
2025-02-25T14:20:45.6086099Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6086186Z                 # count up differences
2025-02-25T14:20:45.6086363Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6086447Z                     diff += 1
2025-02-25T14:20:45.6086516Z     
2025-02-25T14:20:45.6086611Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6086748Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6086923Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6087037Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6087122Z E           
2025-02-25T14:20:45.6087239Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6087515Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6087802Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6087807Z 
2025-02-25T14:20:45.6088115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6088119Z 
2025-02-25T14:20:45.6088392Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6088397Z 
2025-02-25T14:20:45.6088638Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7ad0>
2025-02-25T14:20:45.6088855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>, attr = 'f_lu'
2025-02-25T14:20:45.6088859Z 
2025-02-25T14:20:45.6089011Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6089136Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6089230Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6089304Z         try:
2025-02-25T14:20:45.6089451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6089541Z         except KeyError:
2025-02-25T14:20:45.6089695Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6089763Z     
2025-02-25T14:20:45.6089863Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6089976Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6090070Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6090218Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6090312Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6090416Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6090644Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6090648Z 
2025-02-25T14:20:45.6090792Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6090903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6091061Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6091136Z     ???
2025-02-25T14:20:45.6091248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6091254Z 
2025-02-25T14:20:45.6091333Z >   ???
2025-02-25T14:20:45.6091461Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6091547Z E   
2025-02-25T14:20:45.6091674Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6091792Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6092037Z E          ...
2025-02-25T14:20:45.6092135Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6092268Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6092396Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6092468Z E          ...
2025-02-25T14:20:45.6092550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6092680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6092787Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6092791Z 
2025-02-25T14:20:45.6092891Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6093108Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-25T14:20:45.6093111Z 
2025-02-25T14:20:45.6093245Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6093375Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6093481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6093620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6093742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6093839Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6093915Z err_msg = None
2025-02-25T14:20:45.6093919Z 
2025-02-25T14:20:45.6094033Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6094112Z         if err_msg is None:
2025-02-25T14:20:45.6094213Z             if left.shape != right.shape:
2025-02-25T14:20:45.6094297Z                 raise_assert_detail(
2025-02-25T14:20:45.6094565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6094646Z                 )
2025-02-25T14:20:45.6094722Z     
2025-02-25T14:20:45.6094805Z             diff = 0
2025-02-25T14:20:45.6094916Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6095009Z                 # count up differences
2025-02-25T14:20:45.6095178Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6095266Z                     diff += 1
2025-02-25T14:20:45.6095333Z     
2025-02-25T14:20:45.6095431Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6095567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6095742Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6095852Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6095931Z E           
2025-02-25T14:20:45.6096054Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6096312Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6096578Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6096583Z 
2025-02-25T14:20:45.6096894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6096898Z 
2025-02-25T14:20:45.6097067Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6097072Z 
2025-02-25T14:20:45.6097303Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7c20>
2025-02-25T14:20:45.6097569Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6097659Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6097663Z 
2025-02-25T14:20:45.6097802Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6097927Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6098021Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6098100Z         try:
2025-02-25T14:20:45.6098250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6098334Z         except KeyError:
2025-02-25T14:20:45.6098485Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6098555Z     
2025-02-25T14:20:45.6098655Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6098758Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6098854Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6098984Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6099089Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6099179Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6099304Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6099385Z             else:
2025-02-25T14:20:45.6099482Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6099598Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6099602Z 
2025-02-25T14:20:45.6099731Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6099858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6100002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6100078Z     ???
2025-02-25T14:20:45.6100276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6100283Z 
2025-02-25T14:20:45.6100358Z >   ???
2025-02-25T14:20:45.6100491Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6100777Z E   
2025-02-25T14:20:45.6100915Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6101024Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6101104Z E          ...
2025-02-25T14:20:45.6101188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6101323Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6101437Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6101523Z E          ...
2025-02-25T14:20:45.6101608Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6101747Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6101862Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6101873Z 
2025-02-25T14:20:45.6101965Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6102198Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-25T14:20:45.6102210Z 
2025-02-25T14:20:45.6102339Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6102475Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6102577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6102831Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6103062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6103220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6103354Z err_msg = None
2025-02-25T14:20:45.6103360Z 
2025-02-25T14:20:45.6103550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6103695Z         if err_msg is None:
2025-02-25T14:20:45.6103856Z             if left.shape != right.shape:
2025-02-25T14:20:45.6104090Z                 raise_assert_detail(
2025-02-25T14:20:45.6104238Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6104316Z                 )
2025-02-25T14:20:45.6104387Z     
2025-02-25T14:20:45.6104464Z             diff = 0
2025-02-25T14:20:45.6104575Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6104667Z                 # count up differences
2025-02-25T14:20:45.6104846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6104927Z                     diff += 1
2025-02-25T14:20:45.6105011Z     
2025-02-25T14:20:45.6105103Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6105252Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6105430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6105555Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6105637Z E           
2025-02-25T14:20:45.6105760Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6106035Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6106294Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6106417Z 
2025-02-25T14:20:45.6106737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6106748Z 
2025-02-25T14:20:45.6106925Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6106928Z 
2025-02-25T14:20:45.6107152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6e40>
2025-02-25T14:20:45.6107325Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6107406Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6107410Z 
2025-02-25T14:20:45.6107561Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6107679Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6107775Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6107850Z         try:
2025-02-25T14:20:45.6108001Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6108100Z         except KeyError:
2025-02-25T14:20:45.6108238Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6108320Z     
2025-02-25T14:20:45.6108408Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6108517Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6108607Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6108757Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6108846Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6108943Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6109049Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6109129Z             else:
2025-02-25T14:20:45.6109226Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6109339Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6109342Z 
2025-02-25T14:20:45.6109473Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6109589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6109738Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6109901Z     ???
2025-02-25T14:20:45.6110018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6110023Z 
2025-02-25T14:20:45.6110092Z >   ???
2025-02-25T14:20:45.6110222Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6110296Z E   
2025-02-25T14:20:45.6110440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6110671Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6110747Z E          ...
2025-02-25T14:20:45.6110842Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6110973Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6111098Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6111172Z E          ...
2025-02-25T14:20:45.6111274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6111398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6111516Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6111520Z 
2025-02-25T14:20:45.6111609Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6111818Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-25T14:20:45.6111822Z 
2025-02-25T14:20:45.6111961Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6112093Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6112203Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6112334Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6112587Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6112687Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6112776Z err_msg = None
2025-02-25T14:20:45.6112786Z 
2025-02-25T14:20:45.6112908Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6112991Z         if err_msg is None:
2025-02-25T14:20:45.6113103Z             if left.shape != right.shape:
2025-02-25T14:20:45.6113191Z                 raise_assert_detail(
2025-02-25T14:20:45.6113341Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6113421Z                 )
2025-02-25T14:20:45.6113506Z     
2025-02-25T14:20:45.6113581Z             diff = 0
2025-02-25T14:20:45.6113712Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6113807Z                 # count up differences
2025-02-25T14:20:45.6114000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6114092Z                     diff += 1
2025-02-25T14:20:45.6114176Z     
2025-02-25T14:20:45.6114276Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6114419Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6114614Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6114733Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6114818Z E           
2025-02-25T14:20:45.6114931Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6115203Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6115485Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6115629Z 
2025-02-25T14:20:45.6115934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6115939Z 
2025-02-25T14:20:45.6116121Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6116125Z 
2025-02-25T14:20:45.6116351Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6d20>
2025-02-25T14:20:45.6116530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6116617Z attr = 'j_blues'
2025-02-25T14:20:45.6116621Z 
2025-02-25T14:20:45.6116762Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6116891Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6116988Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6117078Z         try:
2025-02-25T14:20:45.6117221Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6117321Z         except KeyError:
2025-02-25T14:20:45.6117461Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6117542Z     
2025-02-25T14:20:45.6117631Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6117738Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6117840Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6117975Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6118073Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6118164Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6118290Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6118365Z             else:
2025-02-25T14:20:45.6118475Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6118674Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6118679Z 
2025-02-25T14:20:45.6118820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6118950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6119105Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6119195Z     ???
2025-02-25T14:20:45.6119308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6119312Z 
2025-02-25T14:20:45.6119393Z >   ???
2025-02-25T14:20:45.6119517Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6119595Z E   
2025-02-25T14:20:45.6119725Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6119847Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6119925Z E          ...
2025-02-25T14:20:45.6120025Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6120181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6120300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6120393Z E          ...
2025-02-25T14:20:45.6120482Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6120724Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6120828Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6120832Z 
2025-02-25T14:20:45.6120937Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6121150Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-25T14:20:45.6121153Z 
2025-02-25T14:20:45.6121386Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6121622Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6121790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6122035Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6122245Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6122563Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6122640Z err_msg = None
2025-02-25T14:20:45.6122644Z 
2025-02-25T14:20:45.6122763Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6122851Z         if err_msg is None:
2025-02-25T14:20:45.6122953Z             if left.shape != right.shape:
2025-02-25T14:20:45.6123055Z                 raise_assert_detail(
2025-02-25T14:20:45.6123209Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6123288Z                 )
2025-02-25T14:20:45.6123355Z     
2025-02-25T14:20:45.6123437Z             diff = 0
2025-02-25T14:20:45.6123553Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6123656Z                 # count up differences
2025-02-25T14:20:45.6123827Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6123924Z                     diff += 1
2025-02-25T14:20:45.6123993Z     
2025-02-25T14:20:45.6124092Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6124232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6124418Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6124544Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6124618Z E           
2025-02-25T14:20:45.6124747Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6125134Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6125411Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6125421Z 
2025-02-25T14:20:45.6125744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6125748Z 
2025-02-25T14:20:45.6125923Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6125927Z 
2025-02-25T14:20:45.6126161Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7dd0>
2025-02-25T14:20:45.6126336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6126428Z attr = 'lines'
2025-02-25T14:20:45.6126432Z 
2025-02-25T14:20:45.6126579Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6126698Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6126793Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6180646Z         try:
2025-02-25T14:20:45.6180956Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6181088Z         except KeyError:
2025-02-25T14:20:45.6181296Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6181398Z     
2025-02-25T14:20:45.6181534Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6181704Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6181870Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6182116Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6182258Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6182430Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6182625Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6182743Z             else:
2025-02-25T14:20:45.6183152Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6183269Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6183277Z 
2025-02-25T14:20:45.6183415Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6183538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6183702Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6183776Z     ???
2025-02-25T14:20:45.6183901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6183905Z 
2025-02-25T14:20:45.6183979Z >   ???
2025-02-25T14:20:45.6184185Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6184316Z E   
2025-02-25T14:20:45.6184540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6184739Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6184862Z E          ...
2025-02-25T14:20:45.6185021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6185240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6185366Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6185439Z E          ...
2025-02-25T14:20:45.6185537Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6185668Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6185787Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6185792Z 
2025-02-25T14:20:45.6185898Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6186177Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-25T14:20:45.6186181Z 
2025-02-25T14:20:45.6186573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e4110>
2025-02-25T14:20:45.6186759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6186860Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6186871Z 
2025-02-25T14:20:45.6187019Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6187153Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6187248Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6187326Z         try:
2025-02-25T14:20:45.6187488Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6187576Z         except KeyError:
2025-02-25T14:20:45.6187732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6187806Z     
2025-02-25T14:20:45.6187903Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6188002Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6188106Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6188283Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6188444Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6188585Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6188796Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6188803Z 
2025-02-25T14:20:45.6189028Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6189222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6189229Z 
2025-02-25T14:20:45.6189467Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6189607Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6189782Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6189871Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6190026Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6190130Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6190242Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6190445Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6190713Z err_msg = None
2025-02-25T14:20:45.6190721Z 
2025-02-25T14:20:45.6190880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6190969Z         if err_msg is None:
2025-02-25T14:20:45.6191076Z             if left.shape != right.shape:
2025-02-25T14:20:45.6191167Z                 raise_assert_detail(
2025-02-25T14:20:45.6191332Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6191410Z                 )
2025-02-25T14:20:45.6191497Z     
2025-02-25T14:20:45.6191591Z             diff = 0
2025-02-25T14:20:45.6191710Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6191818Z                 # count up differences
2025-02-25T14:20:45.6192007Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6192105Z                     diff += 1
2025-02-25T14:20:45.6192180Z     
2025-02-25T14:20:45.6192297Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6192444Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6192640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6192752Z E           AssertionError: Series are different
2025-02-25T14:20:45.6192840Z E           
2025-02-25T14:20:45.6192960Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6193505Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6193891Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6194271Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6194277Z 
2025-02-25T14:20:45.6194616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6194900Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-25T14:20:45.6194909Z 
2025-02-25T14:20:45.6195144Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e41d0>
2025-02-25T14:20:45.6195332Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6195431Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6195435Z 
2025-02-25T14:20:45.6195581Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6195709Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6195799Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6195886Z         try:
2025-02-25T14:20:45.6196033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6196126Z         except KeyError:
2025-02-25T14:20:45.6196268Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6196344Z     
2025-02-25T14:20:45.6196438Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6196538Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6196632Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6196890Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6196983Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6197073Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6197194Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6197199Z 
2025-02-25T14:20:45.6197326Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6197449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6197453Z 
2025-02-25T14:20:45.6197587Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6197679Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6197801Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6197882Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6198029Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6198116Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6198225Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6198303Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6198386Z err_msg = None
2025-02-25T14:20:45.6198390Z 
2025-02-25T14:20:45.6198498Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6198586Z         if err_msg is None:
2025-02-25T14:20:45.6198683Z             if left.shape != right.shape:
2025-02-25T14:20:45.6198781Z                 raise_assert_detail(
2025-02-25T14:20:45.6198937Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6199009Z                 )
2025-02-25T14:20:45.6199091Z     
2025-02-25T14:20:45.6199286Z             diff = 0
2025-02-25T14:20:45.6199415Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6199508Z                 # count up differences
2025-02-25T14:20:45.6199696Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6199778Z                     diff += 1
2025-02-25T14:20:45.6199861Z     
2025-02-25T14:20:45.6199948Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6200094Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6200279Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6200388Z E           AssertionError: Series are different
2025-02-25T14:20:45.6200472Z E           
2025-02-25T14:20:45.6200683Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6201079Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6201470Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6201846Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6201972Z 
2025-02-25T14:20:45.6202306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6202523Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-25T14:20:45.6202527Z 
2025-02-25T14:20:45.6202655Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6202793Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6202944Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6203188Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6203411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6203576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6203710Z err_msg = None
2025-02-25T14:20:45.6203725Z 
2025-02-25T14:20:45.6203906Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6204053Z         if err_msg is None:
2025-02-25T14:20:45.6204168Z             if left.shape != right.shape:
2025-02-25T14:20:45.6204267Z                 raise_assert_detail(
2025-02-25T14:20:45.6204416Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6204496Z                 )
2025-02-25T14:20:45.6204565Z     
2025-02-25T14:20:45.6204646Z             diff = 0
2025-02-25T14:20:45.6204759Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6204857Z                 # count up differences
2025-02-25T14:20:45.6205028Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6205282Z                     diff += 1
2025-02-25T14:20:45.6205365Z     
2025-02-25T14:20:45.6205458Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6205611Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6205781Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6205907Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6205980Z E           
2025-02-25T14:20:45.6206101Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6206366Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6206641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6206648Z 
2025-02-25T14:20:45.6206965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6206969Z 
2025-02-25T14:20:45.6207137Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6207141Z 
2025-02-25T14:20:45.6207372Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5c70>
2025-02-25T14:20:45.6207574Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>, attr = 'nu'
2025-02-25T14:20:45.6207579Z 
2025-02-25T14:20:45.6207715Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6207834Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6207923Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6207999Z         try:
2025-02-25T14:20:45.6208145Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6208324Z         except KeyError:
2025-02-25T14:20:45.6208465Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6208542Z     
2025-02-25T14:20:45.6208632Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6208734Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6208828Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6208962Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6209051Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6209138Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6209254Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6209258Z 
2025-02-25T14:20:45.6209385Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6209509Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6209656Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6209740Z     ???
2025-02-25T14:20:45.6209857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6209861Z 
2025-02-25T14:20:45.6209928Z >   ???
2025-02-25T14:20:45.6210062Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6210132Z E   
2025-02-25T14:20:45.6210265Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6210379Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6210459Z E          ...
2025-02-25T14:20:45.6210668Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6210809Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6210920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6211120Z E          ...
2025-02-25T14:20:45.6211215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6211340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6211461Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6211466Z 
2025-02-25T14:20:45.6211556Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6211797Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-25T14:20:45.6211801Z 
2025-02-25T14:20:45.6211929Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6212070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6212170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6212317Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6212457Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6212551Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6212636Z err_msg = None
2025-02-25T14:20:45.6212643Z 
2025-02-25T14:20:45.6212756Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6212847Z         if err_msg is None:
2025-02-25T14:20:45.6212949Z             if left.shape != right.shape:
2025-02-25T14:20:45.6213044Z                 raise_assert_detail(
2025-02-25T14:20:45.6213192Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6213271Z                 )
2025-02-25T14:20:45.6213345Z     
2025-02-25T14:20:45.6213419Z             diff = 0
2025-02-25T14:20:45.6213538Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6213628Z                 # count up differences
2025-02-25T14:20:45.6213807Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6213889Z                     diff += 1
2025-02-25T14:20:45.6213968Z     
2025-02-25T14:20:45.6214059Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6214206Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6214498Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6214620Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6214690Z E           
2025-02-25T14:20:45.6214810Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6215086Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6215354Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6215364Z 
2025-02-25T14:20:45.6215683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6215687Z 
2025-02-25T14:20:45.6215864Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6215868Z 
2025-02-25T14:20:45.6216093Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5d30>
2025-02-25T14:20:45.6216267Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6216348Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6216352Z 
2025-02-25T14:20:45.6216502Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6216706Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6216801Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6216881Z         try:
2025-02-25T14:20:45.6217026Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6217127Z         except KeyError:
2025-02-25T14:20:45.6217264Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6217342Z     
2025-02-25T14:20:45.6217430Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6217530Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6217622Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6217760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6217844Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6217940Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6218046Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6218057Z 
2025-02-25T14:20:45.6218183Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6218308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6218454Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6218530Z     ???
2025-02-25T14:20:45.6218637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6218642Z 
2025-02-25T14:20:45.6218718Z >   ???
2025-02-25T14:20:45.6218845Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6218919Z E   
2025-02-25T14:20:45.6219046Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6219163Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6219242Z E          ...
2025-02-25T14:20:45.6219330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6219472Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6219593Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6219681Z E          ...
2025-02-25T14:20:45.6219771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6219904Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6220106Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6220110Z 
2025-02-25T14:20:45.6220209Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6220420Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-25T14:20:45.6220433Z 
2025-02-25T14:20:45.6220667Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6220815Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6220916Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6221059Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6221196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6221299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6221381Z err_msg = None
2025-02-25T14:20:45.6221385Z 
2025-02-25T14:20:45.6221506Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6222055Z         if err_msg is None:
2025-02-25T14:20:45.6222220Z             if left.shape != right.shape:
2025-02-25T14:20:45.6222380Z                 raise_assert_detail(
2025-02-25T14:20:45.6222624Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6222756Z                 )
2025-02-25T14:20:45.6222871Z     
2025-02-25T14:20:45.6223000Z             diff = 0
2025-02-25T14:20:45.6223188Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6223359Z                 # count up differences
2025-02-25T14:20:45.6223657Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6223996Z                     diff += 1
2025-02-25T14:20:45.6224127Z     
2025-02-25T14:20:45.6224278Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6224522Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6224814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6225008Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6225135Z E           
2025-02-25T14:20:45.6225330Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6225731Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6226007Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6226016Z 
2025-02-25T14:20:45.6226336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6226340Z 
2025-02-25T14:20:45.6226511Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6226514Z 
2025-02-25T14:20:45.6226745Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5df0>
2025-02-25T14:20:45.6226964Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>, attr = 'f_lu'
2025-02-25T14:20:45.6226967Z 
2025-02-25T14:20:45.6227105Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6227224Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6227317Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6227395Z         try:
2025-02-25T14:20:45.6227538Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6227751Z         except KeyError:
2025-02-25T14:20:45.6227890Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6227962Z     
2025-02-25T14:20:45.6228052Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6228150Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6228241Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6228371Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6228466Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6228554Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6228669Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6228673Z 
2025-02-25T14:20:45.6228801Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6228931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6229083Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6229169Z     ???
2025-02-25T14:20:45.6229284Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6229288Z 
2025-02-25T14:20:45.6229356Z >   ???
2025-02-25T14:20:45.6229484Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6229551Z E   
2025-02-25T14:20:45.6229682Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6229792Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6229872Z E          ...
2025-02-25T14:20:45.6229959Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6230094Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6230206Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6230376Z E          ...
2025-02-25T14:20:45.6230473Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6230913Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6231034Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6231038Z 
2025-02-25T14:20:45.6231129Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6231352Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-25T14:20:45.6231356Z 
2025-02-25T14:20:45.6231484Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6231619Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6231715Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6231849Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6231987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6232077Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6232161Z err_msg = None
2025-02-25T14:20:45.6232165Z 
2025-02-25T14:20:45.6232273Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6232358Z         if err_msg is None:
2025-02-25T14:20:45.6232457Z             if left.shape != right.shape:
2025-02-25T14:20:45.6232546Z                 raise_assert_detail(
2025-02-25T14:20:45.6232689Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6232768Z                 )
2025-02-25T14:20:45.6232845Z     
2025-02-25T14:20:45.6232915Z             diff = 0
2025-02-25T14:20:45.6233031Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6233120Z                 # count up differences
2025-02-25T14:20:45.6233294Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6233381Z                     diff += 1
2025-02-25T14:20:45.6233452Z     
2025-02-25T14:20:45.6233542Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6233820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6233988Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6234108Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6234176Z E           
2025-02-25T14:20:45.6234291Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6234557Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6234825Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6234837Z 
2025-02-25T14:20:45.6235142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6235147Z 
2025-02-25T14:20:45.6235319Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6235323Z 
2025-02-25T14:20:45.6235544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e65d0>
2025-02-25T14:20:45.6235714Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6235794Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6235798Z 
2025-02-25T14:20:45.6235937Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6236166Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6236258Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6236332Z         try:
2025-02-25T14:20:45.6236473Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6236564Z         except KeyError:
2025-02-25T14:20:45.6236699Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6236772Z     
2025-02-25T14:20:45.6236860Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6236960Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6237050Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6237184Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6237268Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6237361Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6237471Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6237558Z             else:
2025-02-25T14:20:45.6237662Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6237768Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6237772Z 
2025-02-25T14:20:45.6237906Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6238018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6238170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6238238Z     ???
2025-02-25T14:20:45.6238353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6238357Z 
2025-02-25T14:20:45.6238424Z >   ???
2025-02-25T14:20:45.6238561Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6238634Z E   
2025-02-25T14:20:45.6238758Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6238873Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6238944Z E          ...
2025-02-25T14:20:45.6239043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6239171Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6239287Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6239456Z E          ...
2025-02-25T14:20:45.6239551Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6239672Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6239781Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6239785Z 
2025-02-25T14:20:45.6239878Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6240094Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-25T14:20:45.6240098Z 
2025-02-25T14:20:45.6240224Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6240349Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6240452Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6240703Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6240842Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6240938Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6241016Z err_msg = None
2025-02-25T14:20:45.6241020Z 
2025-02-25T14:20:45.6241131Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6241211Z         if err_msg is None:
2025-02-25T14:20:45.6241312Z             if left.shape != right.shape:
2025-02-25T14:20:45.6241406Z                 raise_assert_detail(
2025-02-25T14:20:45.6241665Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6241787Z                 )
2025-02-25T14:20:45.6241909Z     
2025-02-25T14:20:45.6242029Z             diff = 0
2025-02-25T14:20:45.6242397Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6242547Z                 # count up differences
2025-02-25T14:20:45.6242847Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6242990Z                     diff += 1
2025-02-25T14:20:45.6243105Z     
2025-02-25T14:20:45.6243255Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6243479Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6243779Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6243964Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6244089Z E           
2025-02-25T14:20:45.6244277Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6244769Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6245061Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6245066Z 
2025-02-25T14:20:45.6245372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6245376Z 
2025-02-25T14:20:45.6245554Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6245558Z 
2025-02-25T14:20:45.6245781Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e66c0>
2025-02-25T14:20:45.6245948Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6246034Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6246039Z 
2025-02-25T14:20:45.6246174Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6246439Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6246523Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6246598Z         try:
2025-02-25T14:20:45.6246737Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6246822Z         except KeyError:
2025-02-25T14:20:45.6246958Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6247029Z     
2025-02-25T14:20:45.6247122Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6247216Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6247307Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6247435Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6247525Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6247620Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6247733Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6247813Z             else:
2025-02-25T14:20:45.6247913Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6248016Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6248026Z 
2025-02-25T14:20:45.6248152Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6248266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6248407Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6248478Z     ???
2025-02-25T14:20:45.6248586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6248590Z 
2025-02-25T14:20:45.6248662Z >   ???
2025-02-25T14:20:45.6248786Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6248857Z E   
2025-02-25T14:20:45.6249075Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6249195Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6249275Z E          ...
2025-02-25T14:20:45.6249361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6249496Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6249603Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6249678Z E          ...
2025-02-25T14:20:45.6249761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6249883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6249988Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6249991Z 
2025-02-25T14:20:45.6250084Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6250290Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-25T14:20:45.6250299Z 
2025-02-25T14:20:45.6250434Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6250676Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6250778Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6250912Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6251035Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6251130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6251205Z err_msg = None
2025-02-25T14:20:45.6251209Z 
2025-02-25T14:20:45.6251319Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6251404Z         if err_msg is None:
2025-02-25T14:20:45.6251497Z             if left.shape != right.shape:
2025-02-25T14:20:45.6251585Z                 raise_assert_detail(
2025-02-25T14:20:45.6251735Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6251809Z                 )
2025-02-25T14:20:45.6251875Z     
2025-02-25T14:20:45.6252113Z             diff = 0
2025-02-25T14:20:45.6252225Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6252318Z                 # count up differences
2025-02-25T14:20:45.6252488Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6252572Z                     diff += 1
2025-02-25T14:20:45.6252638Z     
2025-02-25T14:20:45.6252733Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6252876Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6253044Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6253161Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6253230Z E           
2025-02-25T14:20:45.6253349Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6253611Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6253880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6253885Z 
2025-02-25T14:20:45.6254193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6254197Z 
2025-02-25T14:20:45.6254479Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6254484Z 
2025-02-25T14:20:45.6254721Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e6840>
2025-02-25T14:20:45.6254890Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6254968Z attr = 'j_blues'
2025-02-25T14:20:45.6254972Z 
2025-02-25T14:20:45.6255110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6255223Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6255311Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6255380Z         try:
2025-02-25T14:20:45.6255525Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6255604Z         except KeyError:
2025-02-25T14:20:45.6255744Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6255810Z     
2025-02-25T14:20:45.6255901Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6255991Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6256089Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6256221Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6256308Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6256398Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6256505Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6256580Z             else:
2025-02-25T14:20:45.6256671Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6256782Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6256786Z 
2025-02-25T14:20:45.6256912Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6257030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6257177Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6257244Z     ???
2025-02-25T14:20:45.6257363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6257368Z 
2025-02-25T14:20:45.6257434Z >   ???
2025-02-25T14:20:45.6257561Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6257726Z E   
2025-02-25T14:20:45.6257858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6257967Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6258044Z E          ...
2025-02-25T14:20:45.6258129Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6258255Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6258369Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6258438Z E          ...
2025-02-25T14:20:45.6258528Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6258659Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6258767Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6258771Z 
2025-02-25T14:20:45.6258861Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6259117Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-25T14:20:45.6259135Z 
2025-02-25T14:20:45.6259361Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6259591Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6259759Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6259983Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6260202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6260361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6260496Z err_msg = None
2025-02-25T14:20:45.6260642Z 
2025-02-25T14:20:45.6260830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6261164Z         if err_msg is None:
2025-02-25T14:20:45.6261325Z             if left.shape != right.shape:
2025-02-25T14:20:45.6261475Z                 raise_assert_detail(
2025-02-25T14:20:45.6261731Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6261849Z                 )
2025-02-25T14:20:45.6261972Z     
2025-02-25T14:20:45.6262092Z             diff = 0
2025-02-25T14:20:45.6262282Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6262414Z                 # count up differences
2025-02-25T14:20:45.6262592Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6262669Z                     diff += 1
2025-02-25T14:20:45.6262746Z     
2025-02-25T14:20:45.6262836Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6262977Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6263150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6263268Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6263345Z E           
2025-02-25T14:20:45.6263460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6263724Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6263983Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6263993Z 
2025-02-25T14:20:45.6264297Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6264302Z 
2025-02-25T14:20:45.6264605Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6264610Z 
2025-02-25T14:20:45.6264834Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7650>
2025-02-25T14:20:45.6265000Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6265075Z attr = 'lines'
2025-02-25T14:20:45.6265078Z 
2025-02-25T14:20:45.6265218Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6265338Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6265419Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6265493Z         try:
2025-02-25T14:20:45.6265629Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6265712Z         except KeyError:
2025-02-25T14:20:45.6265856Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6265931Z     
2025-02-25T14:20:45.6266020Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6266125Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6266215Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6266350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6266433Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6266532Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6266646Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6266716Z             else:
2025-02-25T14:20:45.6266814Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6266917Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6266921Z 
2025-02-25T14:20:45.6267048Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6267266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6267421Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6267491Z     ???
2025-02-25T14:20:45.6267606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6267617Z 
2025-02-25T14:20:45.6267693Z >   ???
2025-02-25T14:20:45.6267815Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6267887Z E   
2025-02-25T14:20:45.6268011Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6268126Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6268194Z E          ...
2025-02-25T14:20:45.6268283Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6268409Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6268523Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6268594Z E          ...
2025-02-25T14:20:45.6268691Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6268815Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6268922Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6268929Z 
2025-02-25T14:20:45.6269023Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6269300Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-25T14:20:45.6269305Z 
2025-02-25T14:20:45.6269529Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7710>
2025-02-25T14:20:45.6269691Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6269786Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6269791Z 
2025-02-25T14:20:45.6269923Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6270045Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6270137Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6270207Z         try:
2025-02-25T14:20:45.6270353Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6270434Z         except KeyError:
2025-02-25T14:20:45.6270786Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6271009Z     
2025-02-25T14:20:45.6271104Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6271197Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6271291Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6271423Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6271512Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6271607Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6271715Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6271720Z 
2025-02-25T14:20:45.6271848Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6271958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6271969Z 
2025-02-25T14:20:45.6272109Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6272194Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6272318Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6272399Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6272543Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6272627Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6272731Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6272816Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6272891Z err_msg = None
2025-02-25T14:20:45.6272895Z 
2025-02-25T14:20:45.6273008Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6273089Z         if err_msg is None:
2025-02-25T14:20:45.6273187Z             if left.shape != right.shape:
2025-02-25T14:20:45.6273395Z                 raise_assert_detail(
2025-02-25T14:20:45.6273550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6273632Z                 )
2025-02-25T14:20:45.6273700Z     
2025-02-25T14:20:45.6273780Z             diff = 0
2025-02-25T14:20:45.6273890Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6273983Z                 # count up differences
2025-02-25T14:20:45.6274152Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6274235Z                     diff += 1
2025-02-25T14:20:45.6274301Z     
2025-02-25T14:20:45.6274390Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6274525Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6274702Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6274811Z E           AssertionError: Series are different
2025-02-25T14:20:45.6274889Z E           
2025-02-25T14:20:45.6274998Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6275375Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6275725Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6276074Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6276168Z 
2025-02-25T14:20:45.6276484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6276773Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-25T14:20:45.6276777Z 
2025-02-25T14:20:45.6277004Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e77d0>
2025-02-25T14:20:45.6277179Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6277277Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6277281Z 
2025-02-25T14:20:45.6277420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6277543Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6277638Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6277715Z         try:
2025-02-25T14:20:45.6277856Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6277941Z         except KeyError:
2025-02-25T14:20:45.6278074Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6278207Z     
2025-02-25T14:20:45.6278363Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6278532Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6278691Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6278914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6279062Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6279213Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6279526Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6279534Z 
2025-02-25T14:20:45.6279749Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6279948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6279962Z 
2025-02-25T14:20:45.6280192Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6280343Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6280677Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6280815Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6281059Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6281195Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6281383Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6281516Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6281656Z err_msg = None
2025-02-25T14:20:45.6281661Z 
2025-02-25T14:20:45.6281772Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6281859Z         if err_msg is None:
2025-02-25T14:20:45.6281970Z             if left.shape != right.shape:
2025-02-25T14:20:45.6282056Z                 raise_assert_detail(
2025-02-25T14:20:45.6282207Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6282279Z                 )
2025-02-25T14:20:45.6282351Z     
2025-02-25T14:20:45.6282425Z             diff = 0
2025-02-25T14:20:45.6282543Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6282633Z                 # count up differences
2025-02-25T14:20:45.6282804Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6282883Z                     diff += 1
2025-02-25T14:20:45.6282958Z     
2025-02-25T14:20:45.6283044Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6283189Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6283363Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6283609Z E           AssertionError: Series are different
2025-02-25T14:20:45.6283685Z E           
2025-02-25T14:20:45.6283786Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6284161Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6284545Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6284925Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6284931Z 
2025-02-25T14:20:45.6285243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6285462Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-25T14:20:45.6285466Z 
2025-02-25T14:20:45.6285704Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6285839Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6285944Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6286084Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6286203Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6286304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6286387Z err_msg = None
2025-02-25T14:20:45.6286391Z 
2025-02-25T14:20:45.6286504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6286591Z         if err_msg is None:
2025-02-25T14:20:45.6286683Z             if left.shape != right.shape:
2025-02-25T14:20:45.6286772Z                 raise_assert_detail(
2025-02-25T14:20:45.6286917Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6286994Z                 )
2025-02-25T14:20:45.6287066Z     
2025-02-25T14:20:45.6287143Z             diff = 0
2025-02-25T14:20:45.6287253Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6287345Z                 # count up differences
2025-02-25T14:20:45.6287509Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6287593Z                     diff += 1
2025-02-25T14:20:45.6287667Z     
2025-02-25T14:20:45.6287755Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6287891Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6288058Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6288179Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6288250Z E           
2025-02-25T14:20:45.6288377Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6288636Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6289027Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6289033Z 
2025-02-25T14:20:45.6289343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6289348Z 
2025-02-25T14:20:45.6289524Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6289528Z 
2025-02-25T14:20:45.6289762Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7a10>
2025-02-25T14:20:45.6289979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>, attr = 'nu'
2025-02-25T14:20:45.6289983Z 
2025-02-25T14:20:45.6290127Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6290261Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6290350Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6290432Z         try:
2025-02-25T14:20:45.6290937Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6291035Z         except KeyError:
2025-02-25T14:20:45.6291174Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6291255Z     
2025-02-25T14:20:45.6291348Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6291453Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6291699Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6291838Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6291948Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6292038Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6292158Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6292162Z 
2025-02-25T14:20:45.6292286Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6292408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6292554Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6292636Z     ???
2025-02-25T14:20:45.6292758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6292762Z 
2025-02-25T14:20:45.6292833Z >   ???
2025-02-25T14:20:45.6292966Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6293043Z E   
2025-02-25T14:20:45.6293177Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6293291Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6293375Z E          ...
2025-02-25T14:20:45.6293464Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6293603Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6293713Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6293792Z E          ...
2025-02-25T14:20:45.6293883Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6294005Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6294116Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6294120Z 
2025-02-25T14:20:45.6294211Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6294470Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-25T14:20:45.6294474Z 
2025-02-25T14:20:45.6294611Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6294745Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6294965Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6295102Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6295227Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6295320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6295401Z err_msg = None
2025-02-25T14:20:45.6295405Z 
2025-02-25T14:20:45.6295512Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6295601Z         if err_msg is None:
2025-02-25T14:20:45.6295691Z             if left.shape != right.shape:
2025-02-25T14:20:45.6295781Z                 raise_assert_detail(
2025-02-25T14:20:45.6295925Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6296001Z                 )
2025-02-25T14:20:45.6296081Z     
2025-02-25T14:20:45.6296152Z             diff = 0
2025-02-25T14:20:45.6296268Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6296355Z                 # count up differences
2025-02-25T14:20:45.6296529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6296606Z                     diff += 1
2025-02-25T14:20:45.6296680Z     
2025-02-25T14:20:45.6296767Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6296907Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6297216Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6297421Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6297552Z E           
2025-02-25T14:20:45.6297870Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6298348Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6298831Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6298839Z 
2025-02-25T14:20:45.6299376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6299383Z 
2025-02-25T14:20:45.6299681Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6299688Z 
2025-02-25T14:20:45.6300068Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7ad0>
2025-02-25T14:20:45.6300368Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6300464Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6300469Z 
2025-02-25T14:20:45.6300812Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6300931Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6301021Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6301096Z         try:
2025-02-25T14:20:45.6301236Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6301325Z         except KeyError:
2025-02-25T14:20:45.6301462Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6301534Z     
2025-02-25T14:20:45.6301624Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6301728Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6301817Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6301953Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6302180Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6302278Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6302392Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6302397Z 
2025-02-25T14:20:45.6302527Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6302646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6302790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6302865Z     ???
2025-02-25T14:20:45.6302973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6302977Z 
2025-02-25T14:20:45.6303051Z >   ???
2025-02-25T14:20:45.6303182Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6303255Z E   
2025-02-25T14:20:45.6303380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6303493Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6303576Z E          ...
2025-02-25T14:20:45.6303662Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6303794Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6303906Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6303982Z E          ...
2025-02-25T14:20:45.6304067Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6304197Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6304304Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6304308Z 
2025-02-25T14:20:45.6304405Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6304624Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-25T14:20:45.6304746Z 
2025-02-25T14:20:45.6304877Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6305011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6305110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6305249Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6305370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6305467Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6305539Z err_msg = None
2025-02-25T14:20:45.6305550Z 
2025-02-25T14:20:45.6305656Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6305741Z         if err_msg is None:
2025-02-25T14:20:45.6305834Z             if left.shape != right.shape:
2025-02-25T14:20:45.6305927Z                 raise_assert_detail(
2025-02-25T14:20:45.6306072Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6306148Z                 )
2025-02-25T14:20:45.6306220Z     
2025-02-25T14:20:45.6306298Z             diff = 0
2025-02-25T14:20:45.6306408Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6306505Z                 # count up differences
2025-02-25T14:20:45.6306675Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6306763Z                     diff += 1
2025-02-25T14:20:45.6306839Z     
2025-02-25T14:20:45.6306926Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6307068Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6307234Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6307350Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6307423Z E           
2025-02-25T14:20:45.6307538Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6307795Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6308156Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6308161Z 
2025-02-25T14:20:45.6308465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6308469Z 
2025-02-25T14:20:45.6308639Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6308643Z 
2025-02-25T14:20:45.6308867Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7b90>
2025-02-25T14:20:45.6309079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>, attr = 'f_lu'
2025-02-25T14:20:45.6309086Z 
2025-02-25T14:20:45.6309219Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6309336Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6309419Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6309496Z         try:
2025-02-25T14:20:45.6309636Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6309721Z         except KeyError:
2025-02-25T14:20:45.6309855Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6309930Z     
2025-02-25T14:20:45.6310016Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6310207Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6310307Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6310435Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6310693Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6310814Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6310934Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6310939Z 
2025-02-25T14:20:45.6311063Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6311187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6311332Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6311407Z     ???
2025-02-25T14:20:45.6311519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6311531Z 
2025-02-25T14:20:45.6311597Z >   ???
2025-02-25T14:20:45.6311730Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6311804Z E   
2025-02-25T14:20:45.6311941Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6312050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6312133Z E          ...
2025-02-25T14:20:45.6312220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6312355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6312465Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6312542Z E          ...
2025-02-25T14:20:45.6312627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6312752Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6312863Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6312868Z 
2025-02-25T14:20:45.6312958Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6313211Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-25T14:20:45.6313222Z 
2025-02-25T14:20:45.6313349Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6313486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6313724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6313862Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6313996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6314088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6314166Z err_msg = None
2025-02-25T14:20:45.6314170Z 
2025-02-25T14:20:45.6314281Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6314365Z         if err_msg is None:
2025-02-25T14:20:45.6314458Z             if left.shape != right.shape:
2025-02-25T14:20:45.6314555Z                 raise_assert_detail(
2025-02-25T14:20:45.6314701Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6314777Z                 )
2025-02-25T14:20:45.6314854Z     
2025-02-25T14:20:45.6314925Z             diff = 0
2025-02-25T14:20:45.6315043Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6315129Z                 # count up differences
2025-02-25T14:20:45.6315303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6315382Z                     diff += 1
2025-02-25T14:20:45.6315464Z     
2025-02-25T14:20:45.6315554Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6315698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6315964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6316170Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6316483Z E           
2025-02-25T14:20:45.6316682Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6317162Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6317640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6317646Z 
2025-02-25T14:20:45.6318182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6318189Z 
2025-02-25T14:20:45.6318497Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6318503Z 
2025-02-25T14:20:45.6318888Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b0380>
2025-02-25T14:20:45.6319118Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6319208Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6319212Z 
2025-02-25T14:20:45.6319361Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6319477Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6319574Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6319658Z         try:
2025-02-25T14:20:45.6319804Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6319902Z         except KeyError:
2025-02-25T14:20:45.6320041Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6320122Z     
2025-02-25T14:20:45.6320211Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6320324Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6320414Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6320663Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6320883Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6320983Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6321096Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6321172Z             else:
2025-02-25T14:20:45.6321280Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6321387Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6321391Z 
2025-02-25T14:20:45.6321520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6321635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6321788Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6321857Z     ???
2025-02-25T14:20:45.6321984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6321988Z 
2025-02-25T14:20:45.6322057Z >   ???
2025-02-25T14:20:45.6322196Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6322269Z E   
2025-02-25T14:20:45.6322400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6322521Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6322598Z E          ...
2025-02-25T14:20:45.6322698Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6322830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6322962Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6323038Z E          ...
2025-02-25T14:20:45.6323140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6323270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6323512Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6323518Z 
2025-02-25T14:20:45.6323627Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6323877Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-25T14:20:45.6323885Z 
2025-02-25T14:20:45.6324030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6324164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6324270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6324406Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6324535Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6324633Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6324708Z err_msg = None
2025-02-25T14:20:45.6324711Z 
2025-02-25T14:20:45.6324834Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6324916Z         if err_msg is None:
2025-02-25T14:20:45.6325017Z             if left.shape != right.shape:
2025-02-25T14:20:45.6325110Z                 raise_assert_detail(
2025-02-25T14:20:45.6325261Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6325335Z                 )
2025-02-25T14:20:45.6325411Z     
2025-02-25T14:20:45.6325483Z             diff = 0
2025-02-25T14:20:45.6325601Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6325687Z                 # count up differences
2025-02-25T14:20:45.6325862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6325946Z                     diff += 1
2025-02-25T14:20:45.6326013Z     
2025-02-25T14:20:45.6326108Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6326249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6326423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6326538Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6326731Z E           
2025-02-25T14:20:45.6326842Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6327103Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6327371Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6327376Z 
2025-02-25T14:20:45.6327678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6327687Z 
2025-02-25T14:20:45.6327862Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6327866Z 
2025-02-25T14:20:45.6328090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b0440>
2025-02-25T14:20:45.6328254Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6328338Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6328343Z 
2025-02-25T14:20:45.6328476Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6328594Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6328682Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6328760Z         try:
2025-02-25T14:20:45.6328896Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6329065Z         except KeyError:
2025-02-25T14:20:45.6329206Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6329286Z     
2025-02-25T14:20:45.6329384Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6329476Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6329569Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6329698Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6329788Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6329876Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6329992Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6330063Z             else:
2025-02-25T14:20:45.6330163Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6330272Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6330283Z 
2025-02-25T14:20:45.6330407Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6330626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6330770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6330853Z     ???
2025-02-25T14:20:45.6330962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6330966Z 
2025-02-25T14:20:45.6331043Z >   ???
2025-02-25T14:20:45.6331166Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6331243Z E   
2025-02-25T14:20:45.6331372Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6331488Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6331565Z E          ...
2025-02-25T14:20:45.6331652Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6331785Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6331895Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6331974Z E          ...
2025-02-25T14:20:45.6332060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6332189Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6332420Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6332425Z 
2025-02-25T14:20:45.6332517Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6332745Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-25T14:20:45.6332757Z 
2025-02-25T14:20:45.6332884Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6333015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6333110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6333249Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6333463Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6333638Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6333773Z err_msg = None
2025-02-25T14:20:45.6333780Z 
2025-02-25T14:20:45.6333967Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6334108Z         if err_msg is None:
2025-02-25T14:20:45.6334265Z             if left.shape != right.shape:
2025-02-25T14:20:45.6334412Z                 raise_assert_detail(
2025-02-25T14:20:45.6334651Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6334774Z                 )
2025-02-25T14:20:45.6334890Z     
2025-02-25T14:20:45.6335022Z             diff = 0
2025-02-25T14:20:45.6335204Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6335355Z                 # count up differences
2025-02-25T14:20:45.6335640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6335940Z                     diff += 1
2025-02-25T14:20:45.6336060Z     
2025-02-25T14:20:45.6336219Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6336458Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6336751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6336946Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6337018Z E           
2025-02-25T14:20:45.6337135Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6337395Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6337668Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6337677Z 
2025-02-25T14:20:45.6337981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6337985Z 
2025-02-25T14:20:45.6338154Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6338158Z 
2025-02-25T14:20:45.6338382Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b05c0>
2025-02-25T14:20:45.6338545Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6338625Z attr = 'j_blues'
2025-02-25T14:20:45.6338629Z 
2025-02-25T14:20:45.6338770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6338886Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6338976Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6339047Z         try:
2025-02-25T14:20:45.6339192Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6339388Z         except KeyError:
2025-02-25T14:20:45.6339532Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6339599Z     
2025-02-25T14:20:45.6339693Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6339786Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6339882Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6340020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6340105Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6340201Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6340309Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6340383Z             else:
2025-02-25T14:20:45.6340482Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6340706Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6340711Z 
2025-02-25T14:20:45.6340841Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6340961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6341108Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6341179Z     ???
2025-02-25T14:20:45.6341294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6341298Z 
2025-02-25T14:20:45.6341365Z >   ???
2025-02-25T14:20:45.6341497Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6341564Z E   
2025-02-25T14:20:45.6341697Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6341805Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6341883Z E          ...
2025-02-25T14:20:45.6342095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6342238Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6342355Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6342431Z E          ...
2025-02-25T14:20:45.6342521Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6342641Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6342751Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6342756Z 
2025-02-25T14:20:45.6342843Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6343050Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-25T14:20:45.6343054Z 
2025-02-25T14:20:45.6343180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6343314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6343421Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6343551Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6343683Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6343776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6343857Z err_msg = None
2025-02-25T14:20:45.6343861Z 
2025-02-25T14:20:45.6343971Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6344059Z         if err_msg is None:
2025-02-25T14:20:45.6344152Z             if left.shape != right.shape:
2025-02-25T14:20:45.6344247Z                 raise_assert_detail(
2025-02-25T14:20:45.6344398Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6344468Z                 )
2025-02-25T14:20:45.6344541Z     
2025-02-25T14:20:45.6344613Z             diff = 0
2025-02-25T14:20:45.6344734Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6344822Z                 # count up differences
2025-02-25T14:20:45.6344997Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6345197Z                     diff += 1
2025-02-25T14:20:45.6345270Z     
2025-02-25T14:20:45.6345359Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6345517Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6345684Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6345801Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6345879Z E           
2025-02-25T14:20:45.6345987Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6346258Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6346515Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6346538Z 
2025-02-25T14:20:45.6346835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6346839Z 
2025-02-25T14:20:45.6347016Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6347020Z 
2025-02-25T14:20:45.6347242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1340>
2025-02-25T14:20:45.6347414Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6347575Z attr = 'lines'
2025-02-25T14:20:45.6347580Z 
2025-02-25T14:20:45.6347726Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6347852Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6347935Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6348013Z         try:
2025-02-25T14:20:45.6348150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6348240Z         except KeyError:
2025-02-25T14:20:45.6348377Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6348453Z     
2025-02-25T14:20:45.6348540Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6348637Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6348724Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6348861Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6348949Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6349066Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6349191Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6349268Z             else:
2025-02-25T14:20:45.6349381Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6349490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6349495Z 
2025-02-25T14:20:45.6349636Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6349751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6349912Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6349984Z     ???
2025-02-25T14:20:45.6350114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6350118Z 
2025-02-25T14:20:45.6350207Z >   ???
2025-02-25T14:20:45.6350339Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6350421Z E   
2025-02-25T14:20:45.6350738Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6350878Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6350954Z E          ...
2025-02-25T14:20:45.6351201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6351336Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6351464Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6351538Z E          ...
2025-02-25T14:20:45.6351640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6351777Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6351884Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6351888Z 
2025-02-25T14:20:45.6351993Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6352276Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-25T14:20:45.6352281Z 
2025-02-25T14:20:45.6352620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1400>
2025-02-25T14:20:45.6352904Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6353088Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6353094Z 
2025-02-25T14:20:45.6353329Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6353537Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6353686Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6353759Z         try:
2025-02-25T14:20:45.6353913Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6354002Z         except KeyError:
2025-02-25T14:20:45.6354153Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6354229Z     
2025-02-25T14:20:45.6354330Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6354427Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6354538Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6354814Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6354920Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6355035Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6355146Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6355150Z 
2025-02-25T14:20:45.6355286Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6355401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6355406Z 
2025-02-25T14:20:45.6355554Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6355643Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6355768Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6355858Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6356020Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6356120Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6356230Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6356332Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6356413Z err_msg = None
2025-02-25T14:20:45.6356418Z 
2025-02-25T14:20:45.6356544Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6356630Z         if err_msg is None:
2025-02-25T14:20:45.6356741Z             if left.shape != right.shape:
2025-02-25T14:20:45.6356828Z                 raise_assert_detail(
2025-02-25T14:20:45.6356991Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6357086Z                 )
2025-02-25T14:20:45.6357161Z     
2025-02-25T14:20:45.6357256Z             diff = 0
2025-02-25T14:20:45.6357372Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6357478Z                 # count up differences
2025-02-25T14:20:45.6357661Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6357754Z                     diff += 1
2025-02-25T14:20:45.6357924Z     
2025-02-25T14:20:45.6358030Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6358168Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6358360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6358468Z E           AssertionError: Series are different
2025-02-25T14:20:45.6358560Z E           
2025-02-25T14:20:45.6358683Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6359075Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6359425Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6359798Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6359805Z 
2025-02-25T14:20:45.6360217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6360483Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-25T14:20:45.6360498Z 
2025-02-25T14:20:45.6360830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b14c0>
2025-02-25T14:20:45.6361011Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6369633Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6369648Z 
2025-02-25T14:20:45.6369851Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6369985Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6370077Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6370149Z         try:
2025-02-25T14:20:45.6370312Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6370399Z         except KeyError:
2025-02-25T14:20:45.6370831Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6370926Z     
2025-02-25T14:20:45.6371025Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6371141Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6371249Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6371390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6371484Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6371577Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6371755Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6371765Z 
2025-02-25T14:20:45.6371996Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6372199Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6372205Z 
2025-02-25T14:20:45.6372435Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6372586Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6372781Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6372921Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6373292Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6373380Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6373493Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6373573Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6373657Z err_msg = None
2025-02-25T14:20:45.6373662Z 
2025-02-25T14:20:45.6373775Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6373866Z         if err_msg is None:
2025-02-25T14:20:45.6373971Z             if left.shape != right.shape:
2025-02-25T14:20:45.6374060Z                 raise_assert_detail(
2025-02-25T14:20:45.6374220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6374290Z                 )
2025-02-25T14:20:45.6374367Z     
2025-02-25T14:20:45.6374440Z             diff = 0
2025-02-25T14:20:45.6374568Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6374665Z                 # count up differences
2025-02-25T14:20:45.6374846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6374926Z                     diff += 1
2025-02-25T14:20:45.6375004Z     
2025-02-25T14:20:45.6375101Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6375252Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6375433Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6375541Z E           AssertionError: Series are different
2025-02-25T14:20:45.6375623Z E           
2025-02-25T14:20:45.6375726Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6376257Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6376654Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6377036Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6377045Z 
2025-02-25T14:20:45.6377375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6377591Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-25T14:20:45.6377595Z 
2025-02-25T14:20:45.6377725Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6377863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6377963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6378104Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6378234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6378338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6378500Z err_msg = None
2025-02-25T14:20:45.6378516Z 
2025-02-25T14:20:45.6378634Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6378727Z         if err_msg is None:
2025-02-25T14:20:45.6378824Z             if left.shape != right.shape:
2025-02-25T14:20:45.6378922Z                 raise_assert_detail(
2025-02-25T14:20:45.6379071Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6379152Z                 )
2025-02-25T14:20:45.6379221Z     
2025-02-25T14:20:45.6379309Z             diff = 0
2025-02-25T14:20:45.6379428Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6379531Z                 # count up differences
2025-02-25T14:20:45.6379716Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6379812Z                     diff += 1
2025-02-25T14:20:45.6379893Z     
2025-02-25T14:20:45.6379985Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6380141Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6380316Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6380442Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6380655Z E           
2025-02-25T14:20:45.6380786Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6381057Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6381457Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6381467Z 
2025-02-25T14:20:45.6381784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6381788Z 
2025-02-25T14:20:45.6381958Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6381963Z 
2025-02-25T14:20:45.6382199Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1700>
2025-02-25T14:20:45.6382404Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>, attr = 'nu'
2025-02-25T14:20:45.6382408Z 
2025-02-25T14:20:45.6382550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6382676Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6382762Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6382841Z         try:
2025-02-25T14:20:45.6382982Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6383076Z         except KeyError:
2025-02-25T14:20:45.6383215Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6383294Z     
2025-02-25T14:20:45.6383383Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6383485Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6383585Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6383718Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6383809Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6383899Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6384018Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6384022Z 
2025-02-25T14:20:45.6384153Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6384276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6384426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6384627Z     ???
2025-02-25T14:20:45.6384745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6384749Z 
2025-02-25T14:20:45.6384818Z >   ???
2025-02-25T14:20:45.6384951Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6385018Z E   
2025-02-25T14:20:45.6385157Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6385269Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6385349Z E          ...
2025-02-25T14:20:45.6385438Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6385575Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6385689Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6385775Z E          ...
2025-02-25T14:20:45.6385868Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6385990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6386107Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6386112Z 
2025-02-25T14:20:45.6386201Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6386430Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-25T14:20:45.6386435Z 
2025-02-25T14:20:45.6386564Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6386702Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6386799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6386936Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6387167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6387267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6387367Z err_msg = None
2025-02-25T14:20:45.6387370Z 
2025-02-25T14:20:45.6387487Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6387585Z         if err_msg is None:
2025-02-25T14:20:45.6387688Z             if left.shape != right.shape:
2025-02-25T14:20:45.6387787Z                 raise_assert_detail(
2025-02-25T14:20:45.6387931Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6388006Z                 )
2025-02-25T14:20:45.6388082Z     
2025-02-25T14:20:45.6388151Z             diff = 0
2025-02-25T14:20:45.6388277Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6388370Z                 # count up differences
2025-02-25T14:20:45.6388555Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6388642Z                     diff += 1
2025-02-25T14:20:45.6388719Z     
2025-02-25T14:20:45.6388810Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6388968Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6389139Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6389260Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6389332Z E           
2025-02-25T14:20:45.6389455Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6389727Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6389993Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6390114Z 
2025-02-25T14:20:45.6390433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6390437Z 
2025-02-25T14:20:45.6390822Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6390828Z 
2025-02-25T14:20:45.6391065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b17c0>
2025-02-25T14:20:45.6391345Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6391489Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6391495Z 
2025-02-25T14:20:45.6391742Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6391948Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6392107Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6392236Z         try:
2025-02-25T14:20:45.6392391Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6392482Z         except KeyError:
2025-02-25T14:20:45.6392622Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6392699Z     
2025-02-25T14:20:45.6392789Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6392891Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6392980Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6393123Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6393210Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6393311Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6393422Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6393432Z 
2025-02-25T14:20:45.6393698Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6393831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6393988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6394063Z     ???
2025-02-25T14:20:45.6394177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6394182Z 
2025-02-25T14:20:45.6394258Z >   ???
2025-02-25T14:20:45.6394388Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6394477Z E   
2025-02-25T14:20:45.6394611Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6394740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6394827Z E          ...
2025-02-25T14:20:45.6394918Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6395063Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6395187Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6395277Z E          ...
2025-02-25T14:20:45.6395369Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6395518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6395628Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6395632Z 
2025-02-25T14:20:45.6395742Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6395950Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-25T14:20:45.6395969Z 
2025-02-25T14:20:45.6396104Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6396251Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6396353Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6396500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6396632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6396741Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6396984Z err_msg = None
2025-02-25T14:20:45.6396989Z 
2025-02-25T14:20:45.6397115Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6397215Z         if err_msg is None:
2025-02-25T14:20:45.6397313Z             if left.shape != right.shape:
2025-02-25T14:20:45.6397413Z                 raise_assert_detail(
2025-02-25T14:20:45.6397564Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6397656Z                 )
2025-02-25T14:20:45.6397727Z     
2025-02-25T14:20:45.6397815Z             diff = 0
2025-02-25T14:20:45.6397928Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6398032Z                 # count up differences
2025-02-25T14:20:45.6398214Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6398311Z                     diff += 1
2025-02-25T14:20:45.6398392Z     
2025-02-25T14:20:45.6398485Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6398644Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6398822Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6398957Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6399033Z E           
2025-02-25T14:20:45.6399167Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6399440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6399824Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6399836Z 
2025-02-25T14:20:45.6400162Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6400166Z 
2025-02-25T14:20:45.6400340Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6400344Z 
2025-02-25T14:20:45.6400776Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1880>
2025-02-25T14:20:45.6401001Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>, attr = 'f_lu'
2025-02-25T14:20:45.6401005Z 
2025-02-25T14:20:45.6401152Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6401292Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6401382Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6401472Z         try:
2025-02-25T14:20:45.6401618Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6401723Z         except KeyError:
2025-02-25T14:20:45.6401865Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6401949Z     
2025-02-25T14:20:45.6402042Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6402156Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6402265Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6402403Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6402511Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6402607Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6402733Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6402737Z 
2025-02-25T14:20:45.6402872Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6403007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6403162Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6403386Z     ???
2025-02-25T14:20:45.6403503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6403520Z 
2025-02-25T14:20:45.6403593Z >   ???
2025-02-25T14:20:45.6403731Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6403803Z E   
2025-02-25T14:20:45.6403944Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6404058Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6404144Z E          ...
2025-02-25T14:20:45.6404237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6404385Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6404506Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6404599Z E          ...
2025-02-25T14:20:45.6404693Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6404839Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6404958Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6404962Z 
2025-02-25T14:20:45.6405056Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6405291Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-25T14:20:45.6405295Z 
2025-02-25T14:20:45.6405432Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6405576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6405677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6405829Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6406084Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6406185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6406284Z err_msg = None
2025-02-25T14:20:45.6406289Z 
2025-02-25T14:20:45.6406407Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6406510Z         if err_msg is None:
2025-02-25T14:20:45.6406608Z             if left.shape != right.shape:
2025-02-25T14:20:45.6406711Z                 raise_assert_detail(
2025-02-25T14:20:45.6406860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6406949Z                 )
2025-02-25T14:20:45.6407019Z     
2025-02-25T14:20:45.6407109Z             diff = 0
2025-02-25T14:20:45.6407235Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6407330Z                 # count up differences
2025-02-25T14:20:45.6407523Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6407608Z                     diff += 1
2025-02-25T14:20:45.6407682Z     
2025-02-25T14:20:45.6407773Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6407922Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6408093Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6408215Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6408290Z E           
2025-02-25T14:20:45.6408410Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6408687Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6408957Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6409051Z 
2025-02-25T14:20:45.6409371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6409375Z 
2025-02-25T14:20:45.6409559Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6409564Z 
2025-02-25T14:20:45.6409789Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2000>
2025-02-25T14:20:45.6409970Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6410054Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6410058Z 
2025-02-25T14:20:45.6410232Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6410359Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6410455Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6410710Z         try:
2025-02-25T14:20:45.6410894Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6410994Z         except KeyError:
2025-02-25T14:20:45.6411137Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6411221Z     
2025-02-25T14:20:45.6411315Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6411420Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6411513Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6411663Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6411752Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6411865Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6411982Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6412077Z             else:
2025-02-25T14:20:45.6412322Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6412439Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6412450Z 
2025-02-25T14:20:45.6412590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6412707Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6412864Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6412931Z     ???
2025-02-25T14:20:45.6413047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6413052Z 
2025-02-25T14:20:45.6413129Z >   ???
2025-02-25T14:20:45.6413275Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6413356Z E   
2025-02-25T14:20:45.6413487Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6413609Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6413683Z E          ...
2025-02-25T14:20:45.6413792Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6413923Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6414054Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6414129Z E          ...
2025-02-25T14:20:45.6414226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6414353Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6414468Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6414473Z 
2025-02-25T14:20:45.6414575Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6414783Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-25T14:20:45.6414787Z 
2025-02-25T14:20:45.6414933Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6415064Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6415184Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6415321Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6415600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6415710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6415793Z err_msg = None
2025-02-25T14:20:45.6415797Z 
2025-02-25T14:20:45.6415927Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6416021Z         if err_msg is None:
2025-02-25T14:20:45.6416130Z             if left.shape != right.shape:
2025-02-25T14:20:45.6416221Z                 raise_assert_detail(
2025-02-25T14:20:45.6416384Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6416464Z                 )
2025-02-25T14:20:45.6416599Z     
2025-02-25T14:20:45.6416734Z             diff = 0
2025-02-25T14:20:45.6416940Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6417084Z                 # count up differences
2025-02-25T14:20:45.6417390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6417536Z                     diff += 1
2025-02-25T14:20:45.6417616Z     
2025-02-25T14:20:45.6417718Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6417858Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6418042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6418161Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6418245Z E           
2025-02-25T14:20:45.6418361Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6418747Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6419032Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6419037Z 
2025-02-25T14:20:45.6419344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6419348Z 
2025-02-25T14:20:45.6419529Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6419534Z 
2025-02-25T14:20:45.6419768Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2240>
2025-02-25T14:20:45.6419939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6420024Z attr = 'j_blues'
2025-02-25T14:20:45.6420028Z 
2025-02-25T14:20:45.6420170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6420300Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6420386Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6420475Z         try:
2025-02-25T14:20:45.6420794Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6420894Z         except KeyError:
2025-02-25T14:20:45.6421038Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6421112Z     
2025-02-25T14:20:45.6421209Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6421303Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6421397Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6421525Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6421623Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6421710Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6421825Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6422030Z             else:
2025-02-25T14:20:45.6422135Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6422241Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6422256Z 
2025-02-25T14:20:45.6422381Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6422506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6422656Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6422735Z     ???
2025-02-25T14:20:45.6422841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6422845Z 
2025-02-25T14:20:45.6422921Z >   ???
2025-02-25T14:20:45.6423046Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6423119Z E   
2025-02-25T14:20:45.6423251Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6423365Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6423451Z E          ...
2025-02-25T14:20:45.6423536Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6423674Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6423785Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6423867Z E          ...
2025-02-25T14:20:45.6423968Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6424095Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6424200Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6424204Z 
2025-02-25T14:20:45.6424300Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6424504Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-25T14:20:45.6424514Z 
2025-02-25T14:20:45.6424768Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6424905Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6425004Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6425137Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6425259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6425358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6425434Z err_msg = None
2025-02-25T14:20:45.6425438Z 
2025-02-25T14:20:45.6425551Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6425641Z         if err_msg is None:
2025-02-25T14:20:45.6425733Z             if left.shape != right.shape:
2025-02-25T14:20:45.6425820Z                 raise_assert_detail(
2025-02-25T14:20:45.6425968Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6426045Z                 )
2025-02-25T14:20:45.6426114Z     
2025-02-25T14:20:45.6426200Z             diff = 0
2025-02-25T14:20:45.6426309Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6426403Z                 # count up differences
2025-02-25T14:20:45.6426571Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6426656Z                     diff += 1
2025-02-25T14:20:45.6426724Z     
2025-02-25T14:20:45.6426819Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6426962Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6427130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6427247Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6427315Z E           
2025-02-25T14:20:45.6427435Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6427696Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6428054Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6428059Z 
2025-02-25T14:20:45.6428362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6428366Z 
2025-02-25T14:20:45.6428534Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6428538Z 
2025-02-25T14:20:45.6428767Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2fc0>
2025-02-25T14:20:45.6428934Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6429013Z attr = 'lines'
2025-02-25T14:20:45.6429017Z 
2025-02-25T14:20:45.6429169Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6429280Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6429367Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6429437Z         try:
2025-02-25T14:20:45.6429578Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6429657Z         except KeyError:
2025-02-25T14:20:45.6429796Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6429864Z     
2025-02-25T14:20:45.6429957Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6430133Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6430231Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6430367Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6430458Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6430740Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6430863Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6430939Z             else:
2025-02-25T14:20:45.6431032Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6431142Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6431146Z 
2025-02-25T14:20:45.6431268Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6431383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6431535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6431603Z     ???
2025-02-25T14:20:45.6431726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6431730Z 
2025-02-25T14:20:45.6431796Z >   ???
2025-02-25T14:20:45.6431927Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6432001Z E   
2025-02-25T14:20:45.6432131Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6432240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6432319Z E          ...
2025-02-25T14:20:45.6432405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6432540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6432656Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6432726Z E          ...
2025-02-25T14:20:45.6432817Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6432941Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6433053Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6433061Z 
2025-02-25T14:20:45.6433150Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6433414Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-25T14:20:45.6433559Z 
2025-02-25T14:20:45.6433784Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3080>
2025-02-25T14:20:45.6433951Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6434046Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6434050Z 
2025-02-25T14:20:45.6434184Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6434297Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6434379Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6434453Z         try:
2025-02-25T14:20:45.6434593Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6434680Z         except KeyError:
2025-02-25T14:20:45.6434819Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6434893Z     
2025-02-25T14:20:45.6434980Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6435078Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6435176Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6435307Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6435398Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6435485Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6435600Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6435604Z 
2025-02-25T14:20:45.6435727Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6435851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6435858Z 
2025-02-25T14:20:45.6436105Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6436262Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6436635Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6436775Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6437010Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6437093Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6437204Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6437281Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6437363Z err_msg = None
2025-02-25T14:20:45.6437367Z 
2025-02-25T14:20:45.6437476Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6437562Z         if err_msg is None:
2025-02-25T14:20:45.6437663Z             if left.shape != right.shape:
2025-02-25T14:20:45.6437749Z                 raise_assert_detail(
2025-02-25T14:20:45.6437899Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6437978Z                 )
2025-02-25T14:20:45.6438052Z     
2025-02-25T14:20:45.6438126Z             diff = 0
2025-02-25T14:20:45.6438243Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6438336Z                 # count up differences
2025-02-25T14:20:45.6438511Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6438589Z                     diff += 1
2025-02-25T14:20:45.6438664Z     
2025-02-25T14:20:45.6438750Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6438890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6439062Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6439165Z E           AssertionError: Series are different
2025-02-25T14:20:45.6439241Z E           
2025-02-25T14:20:45.6439344Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6439722Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6440161Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6440607Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6440623Z 
2025-02-25T14:20:45.6440938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6441197Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-25T14:20:45.6441208Z 
2025-02-25T14:20:45.6441427Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3140>
2025-02-25T14:20:45.6441596Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6441685Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6441689Z 
2025-02-25T14:20:45.6441830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6441942Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6442031Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6442292Z         try:
2025-02-25T14:20:45.6442443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6442525Z         except KeyError:
2025-02-25T14:20:45.6442674Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6442746Z     
2025-02-25T14:20:45.6442833Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6442930Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6443018Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6443156Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6443241Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6443334Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6443442Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6443447Z 
2025-02-25T14:20:45.6443576Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6443705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6443709Z 
2025-02-25T14:20:45.6443842Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6443932Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6444039Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6444122Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6444257Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6444343Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6444445Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6444528Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6444611Z err_msg = None
2025-02-25T14:20:45.6444615Z 
2025-02-25T14:20:45.6444723Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6444810Z         if err_msg is None:
2025-02-25T14:20:45.6444907Z             if left.shape != right.shape:
2025-02-25T14:20:45.6445000Z                 raise_assert_detail(
2025-02-25T14:20:45.6445141Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6445347Z                 )
2025-02-25T14:20:45.6445414Z     
2025-02-25T14:20:45.6445493Z             diff = 0
2025-02-25T14:20:45.6445603Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6445697Z                 # count up differences
2025-02-25T14:20:45.6445868Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6445950Z                     diff += 1
2025-02-25T14:20:45.6446024Z     
2025-02-25T14:20:45.6446110Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6446249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6446432Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6446547Z E           AssertionError: Series are different
2025-02-25T14:20:45.6446667Z E           
2025-02-25T14:20:45.6446846Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6447530Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6448022Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6448405Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6448417Z 
2025-02-25T14:20:45.6448726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6448929Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-25T14:20:45.6448933Z 
2025-02-25T14:20:45.6449064Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6449195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6449297Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6449427Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6449559Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6449659Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6449734Z err_msg = None
2025-02-25T14:20:45.6449739Z 
2025-02-25T14:20:45.6449852Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6449931Z         if err_msg is None:
2025-02-25T14:20:45.6450030Z             if left.shape != right.shape:
2025-02-25T14:20:45.6450112Z                 raise_assert_detail(
2025-02-25T14:20:45.6450255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6450325Z                 )
2025-02-25T14:20:45.6450400Z     
2025-02-25T14:20:45.6450475Z             diff = 0
2025-02-25T14:20:45.6450799Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6450897Z                 # count up differences
2025-02-25T14:20:45.6451200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6451286Z                     diff += 1
2025-02-25T14:20:45.6451352Z     
2025-02-25T14:20:45.6451447Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6451585Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6451756Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6451864Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6451940Z E           
2025-02-25T14:20:45.6452052Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6452367Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6452641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6452646Z 
2025-02-25T14:20:45.6452941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6452952Z 
2025-02-25T14:20:45.6453115Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6453119Z 
2025-02-25T14:20:45.6453344Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3380>
2025-02-25T14:20:45.6453682Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>, attr = 'nu'
2025-02-25T14:20:45.6453687Z 
2025-02-25T14:20:45.6453837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6453963Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6454051Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6454122Z         try:
2025-02-25T14:20:45.6454265Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6454348Z         except KeyError:
2025-02-25T14:20:45.6454487Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6454561Z     
2025-02-25T14:20:45.6454647Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6454744Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6454831Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6454965Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6455053Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6455148Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6455255Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6455264Z 
2025-02-25T14:20:45.6455393Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6455513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6455663Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6455745Z     ???
2025-02-25T14:20:45.6455852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6455856Z 
2025-02-25T14:20:45.6455932Z >   ???
2025-02-25T14:20:45.6456059Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6456134Z E   
2025-02-25T14:20:45.6456259Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6456374Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6456450Z E          ...
2025-02-25T14:20:45.6456543Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6456677Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6456882Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6456960Z E          ...
2025-02-25T14:20:45.6457045Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6457179Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6457282Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6457286Z 
2025-02-25T14:20:45.6457383Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6457610Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-25T14:20:45.6457614Z 
2025-02-25T14:20:45.6457747Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6457881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6457976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6458112Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6458240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6458340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6458414Z err_msg = None
2025-02-25T14:20:45.6458418Z 
2025-02-25T14:20:45.6458533Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6458612Z         if err_msg is None:
2025-02-25T14:20:45.6458711Z             if left.shape != right.shape:
2025-02-25T14:20:45.6458800Z                 raise_assert_detail(
2025-02-25T14:20:45.6458943Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6459020Z                 )
2025-02-25T14:20:45.6459089Z     
2025-02-25T14:20:45.6459287Z             diff = 0
2025-02-25T14:20:45.6459401Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6459496Z                 # count up differences
2025-02-25T14:20:45.6459673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6459755Z                     diff += 1
2025-02-25T14:20:45.6459821Z     
2025-02-25T14:20:45.6459914Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6460057Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6460225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6460342Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6460412Z E           
2025-02-25T14:20:45.6460643Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6460913Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6461183Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6461188Z 
2025-02-25T14:20:45.6461492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6461497Z 
2025-02-25T14:20:45.6461661Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6461666Z 
2025-02-25T14:20:45.6461890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3440>
2025-02-25T14:20:45.6462058Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6462142Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6462146Z 
2025-02-25T14:20:45.6462412Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6462524Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6462615Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6462685Z         try:
2025-02-25T14:20:45.6462834Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6462913Z         except KeyError:
2025-02-25T14:20:45.6463056Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6463125Z     
2025-02-25T14:20:45.6463218Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6463309Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6463402Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6463535Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6463632Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6463725Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6463838Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6463850Z 
2025-02-25T14:20:45.6463979Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6464093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6464248Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6464376Z     ???
2025-02-25T14:20:45.6464576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6464582Z 
2025-02-25T14:20:45.6464703Z >   ???
2025-02-25T14:20:45.6464918Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6465036Z E   
2025-02-25T14:20:45.6465255Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6465405Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6465611Z E          ...
2025-02-25T14:20:45.6465711Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6465842Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6465968Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6466038Z E          ...
2025-02-25T14:20:45.6466127Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6466249Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6466359Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6466364Z 
2025-02-25T14:20:45.6466460Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6466667Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-25T14:20:45.6466671Z 
2025-02-25T14:20:45.6466804Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6466942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6467046Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6467181Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6467314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6467410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6467485Z err_msg = None
2025-02-25T14:20:45.6467489Z 
2025-02-25T14:20:45.6467604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6467685Z         if err_msg is None:
2025-02-25T14:20:45.6467785Z             if left.shape != right.shape:
2025-02-25T14:20:45.6467871Z                 raise_assert_detail(
2025-02-25T14:20:45.6468024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6468095Z                 )
2025-02-25T14:20:45.6468169Z     
2025-02-25T14:20:45.6468245Z             diff = 0
2025-02-25T14:20:45.6468366Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6468460Z                 # count up differences
2025-02-25T14:20:45.6468723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6468809Z                     diff += 1
2025-02-25T14:20:45.6468878Z     
2025-02-25T14:20:45.6468972Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6469108Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6469284Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6469396Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6469475Z E           
2025-02-25T14:20:45.6469588Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6469862Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6470131Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6470136Z 
2025-02-25T14:20:45.6470441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6470446Z 
2025-02-25T14:20:45.6470837Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6470842Z 
2025-02-25T14:20:45.6471076Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3500>
2025-02-25T14:20:45.6471407Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>, attr = 'f_lu'
2025-02-25T14:20:45.6471412Z 
2025-02-25T14:20:45.6471564Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6471679Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6471771Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6471843Z         try:
2025-02-25T14:20:45.6471990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6472069Z         except KeyError:
2025-02-25T14:20:45.6472215Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6472287Z     
2025-02-25T14:20:45.6472373Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6472476Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6472563Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6472698Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6472793Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6472886Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6472993Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6473004Z 
2025-02-25T14:20:45.6473133Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6473248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6473400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6473476Z     ???
2025-02-25T14:20:45.6473585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6473589Z 
2025-02-25T14:20:45.6473661Z >   ???
2025-02-25T14:20:45.6473786Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6473861Z E   
2025-02-25T14:20:45.6473986Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6474105Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6474182Z E          ...
2025-02-25T14:20:45.6474276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6474404Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6474645Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6474719Z E          ...
2025-02-25T14:20:45.6474804Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6474931Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6475035Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6475039Z 
2025-02-25T14:20:45.6475134Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6475354Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-25T14:20:45.6475358Z 
2025-02-25T14:20:45.6475486Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6475639Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6475752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6475887Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6476015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6476114Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6476187Z err_msg = None
2025-02-25T14:20:45.6476191Z 
2025-02-25T14:20:45.6476303Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6476388Z         if err_msg is None:
2025-02-25T14:20:45.6476488Z             if left.shape != right.shape:
2025-02-25T14:20:45.6476581Z                 raise_assert_detail(
2025-02-25T14:20:45.6476723Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6476802Z                 )
2025-02-25T14:20:45.6476874Z     
2025-02-25T14:20:45.6477042Z             diff = 0
2025-02-25T14:20:45.6477160Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6477255Z                 # count up differences
2025-02-25T14:20:45.6477432Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6477516Z                     diff += 1
2025-02-25T14:20:45.6477587Z     
2025-02-25T14:20:45.6477686Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6477827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6477998Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6478115Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6478187Z E           
2025-02-25T14:20:45.6478302Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6478570Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6478844Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6478849Z 
2025-02-25T14:20:45.6479158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6479162Z 
2025-02-25T14:20:45.6479328Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6479332Z 
2025-02-25T14:20:45.6479562Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3c80>
2025-02-25T14:20:45.6479734Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6479821Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6479932Z 
2025-02-25T14:20:45.6480076Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6480187Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6480275Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6480344Z         try:
2025-02-25T14:20:45.6480491Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6480674Z         except KeyError:
2025-02-25T14:20:45.6480818Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6480886Z     
2025-02-25T14:20:45.6480978Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6481070Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6481164Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6481293Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6481390Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6481485Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6481594Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6481678Z             else:
2025-02-25T14:20:45.6481773Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6481889Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6481893Z 
2025-02-25T14:20:45.6482014Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6482135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6482280Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6482356Z     ???
2025-02-25T14:20:45.6482463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6482476Z 
2025-02-25T14:20:45.6482544Z >   ???
2025-02-25T14:20:45.6482802Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6482872Z E   
2025-02-25T14:20:45.6483006Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6483116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6483202Z E          ...
2025-02-25T14:20:45.6483288Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6483442Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6483640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6483771Z E          ...
2025-02-25T14:20:45.6483913Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6484130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6484310Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6484317Z 
2025-02-25T14:20:45.6484470Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6484724Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-25T14:20:45.6484737Z 
2025-02-25T14:20:45.6484865Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6485004Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6485099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6485238Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6485365Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6485457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6485540Z err_msg = None
2025-02-25T14:20:45.6485544Z 
2025-02-25T14:20:45.6485648Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6485736Z         if err_msg is None:
2025-02-25T14:20:45.6485830Z             if left.shape != right.shape:
2025-02-25T14:20:45.6485927Z                 raise_assert_detail(
2025-02-25T14:20:45.6486069Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6486147Z                 )
2025-02-25T14:20:45.6486360Z     
2025-02-25T14:20:45.6486435Z             diff = 0
2025-02-25T14:20:45.6486552Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6486638Z                 # count up differences
2025-02-25T14:20:45.6486815Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6486892Z                     diff += 1
2025-02-25T14:20:45.6486966Z     
2025-02-25T14:20:45.6487055Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6487197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6487363Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6487484Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6487561Z E           
2025-02-25T14:20:45.6487679Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6487949Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6488216Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6488222Z 
2025-02-25T14:20:45.6488527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6488531Z 
2025-02-25T14:20:45.6488784Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6488789Z 
2025-02-25T14:20:45.6489010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3d40>
2025-02-25T14:20:45.6489182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6489260Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6489265Z 
2025-02-25T14:20:45.6489408Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6489521Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6489609Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6489680Z         try:
2025-02-25T14:20:45.6489826Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6489914Z         except KeyError:
2025-02-25T14:20:45.6490048Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6490122Z     
2025-02-25T14:20:45.6490207Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6490312Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6490399Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6490724Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6490825Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6490925Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6491035Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6491112Z             else:
2025-02-25T14:20:45.6491213Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6491319Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6491324Z 
2025-02-25T14:20:45.6491454Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6491564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6491716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6491785Z     ???
2025-02-25T14:20:45.6491908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6491913Z 
2025-02-25T14:20:45.6491983Z >   ???
2025-02-25T14:20:45.6492340Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6492419Z E   
2025-02-25T14:20:45.6492549Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6492662Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6492733Z E          ...
2025-02-25T14:20:45.6492824Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6492950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6493066Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6493137Z E          ...
2025-02-25T14:20:45.6493227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6493348Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6493461Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6493465Z 
2025-02-25T14:20:45.6493559Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6493765Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-25T14:20:45.6493780Z 
2025-02-25T14:20:45.6493912Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6494041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6494141Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6494272Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6494400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6494501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6494577Z err_msg = None
2025-02-25T14:20:45.6494580Z 
2025-02-25T14:20:45.6494818Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6494906Z         if err_msg is None:
2025-02-25T14:20:45.6495004Z             if left.shape != right.shape:
2025-02-25T14:20:45.6495094Z                 raise_assert_detail(
2025-02-25T14:20:45.6495240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6495312Z                 )
2025-02-25T14:20:45.6495384Z     
2025-02-25T14:20:45.6495456Z             diff = 0
2025-02-25T14:20:45.6495571Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6495660Z                 # count up differences
2025-02-25T14:20:45.6495835Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6495918Z                     diff += 1
2025-02-25T14:20:45.6495987Z     
2025-02-25T14:20:45.6496083Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6496227Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6496405Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6496513Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6496595Z E           
2025-02-25T14:20:45.6496706Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6496976Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6497250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6497255Z 
2025-02-25T14:20:45.6497568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6497659Z 
2025-02-25T14:20:45.6497846Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6497850Z 
2025-02-25T14:20:45.6498093Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3ec0>
2025-02-25T14:20:45.6498259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6498349Z attr = 'j_blues'
2025-02-25T14:20:45.6498354Z 
2025-02-25T14:20:45.6498496Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6498619Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6498707Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6498794Z         try:
2025-02-25T14:20:45.6498933Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6499035Z         except KeyError:
2025-02-25T14:20:45.6499174Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6499254Z     
2025-02-25T14:20:45.6499363Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6499460Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6499558Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6499690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6499789Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6499880Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6499998Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6500069Z             else:
2025-02-25T14:20:45.6500169Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6500275Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6500287Z 
2025-02-25T14:20:45.6500413Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6500768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6500920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6501003Z     ???
2025-02-25T14:20:45.6501111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6501116Z 
2025-02-25T14:20:45.6501190Z >   ???
2025-02-25T14:20:45.6501312Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6501385Z E   
2025-02-25T14:20:45.6501509Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6501628Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6501706Z E          ...
2025-02-25T14:20:45.6501792Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6501925Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6502038Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6502120Z E          ...
2025-02-25T14:20:45.6502209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6502338Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6502443Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6502447Z 
2025-02-25T14:20:45.6502541Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6502747Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-25T14:20:45.6502759Z 
2025-02-25T14:20:45.6502888Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6503023Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6503172Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6503411Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6503631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6503795Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6504116Z err_msg = None
2025-02-25T14:20:45.6504124Z 
2025-02-25T14:20:45.6504258Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6504349Z         if err_msg is None:
2025-02-25T14:20:45.6504444Z             if left.shape != right.shape:
2025-02-25T14:20:45.6504538Z                 raise_assert_detail(
2025-02-25T14:20:45.6504684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6504762Z                 )
2025-02-25T14:20:45.6504830Z     
2025-02-25T14:20:45.6504909Z             diff = 0
2025-02-25T14:20:45.6505022Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6505118Z                 # count up differences
2025-02-25T14:20:45.6505293Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6505384Z                     diff += 1
2025-02-25T14:20:45.6505453Z     
2025-02-25T14:20:45.6505550Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6505700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6505870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6505985Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6506057Z E           
2025-02-25T14:20:45.6506177Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6506435Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6506795Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6506805Z 
2025-02-25T14:20:45.6507122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6507126Z 
2025-02-25T14:20:45.6507296Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6507300Z 
2025-02-25T14:20:45.6507530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dcc80>
2025-02-25T14:20:45.6507694Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6507775Z attr = 'lines'
2025-02-25T14:20:45.6507779Z 
2025-02-25T14:20:45.6507922Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6508042Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6508132Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6508206Z         try:
2025-02-25T14:20:45.6508355Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6508439Z         except KeyError:
2025-02-25T14:20:45.6508579Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6508647Z     
2025-02-25T14:20:45.6508740Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6508834Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6508932Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6509070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6509155Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6509249Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6509360Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6509438Z             else:
2025-02-25T14:20:45.6509538Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6509650Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6509655Z 
2025-02-25T14:20:45.6509777Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6509996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6510147Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6510217Z     ???
2025-02-25T14:20:45.6510332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6510336Z 
2025-02-25T14:20:45.6510404Z >   ???
2025-02-25T14:20:45.6510709Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6510797Z E   
2025-02-25T14:20:45.6510933Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6511042Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6511121Z E          ...
2025-02-25T14:20:45.6511216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6511355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6511474Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6511550Z E          ...
2025-02-25T14:20:45.6511644Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6511773Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6511886Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6511890Z 
2025-02-25T14:20:45.6511977Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6512244Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-25T14:20:45.6512248Z 
2025-02-25T14:20:45.6512470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dcd40>
2025-02-25T14:20:45.6512640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6512730Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6512882Z 
2025-02-25T14:20:45.6513022Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6513139Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6513228Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6513303Z         try:
2025-02-25T14:20:45.6513444Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6513532Z         except KeyError:
2025-02-25T14:20:45.6513666Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6513739Z     
2025-02-25T14:20:45.6513825Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6513921Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6514015Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6514144Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6514235Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6514324Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6514440Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6514444Z 
2025-02-25T14:20:45.6514565Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6514687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6514691Z 
2025-02-25T14:20:45.6514826Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6514917Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6515030Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6515111Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6515255Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6515340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6515449Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6515532Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6515612Z err_msg = None
2025-02-25T14:20:45.6515616Z 
2025-02-25T14:20:45.6515724Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6515939Z         if err_msg is None:
2025-02-25T14:20:45.6516033Z             if left.shape != right.shape:
2025-02-25T14:20:45.6516124Z                 raise_assert_detail(
2025-02-25T14:20:45.6516272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6516342Z                 )
2025-02-25T14:20:45.6516413Z     
2025-02-25T14:20:45.6516485Z             diff = 0
2025-02-25T14:20:45.6516600Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6516685Z                 # count up differences
2025-02-25T14:20:45.6516861Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6516938Z                     diff += 1
2025-02-25T14:20:45.6517011Z     
2025-02-25T14:20:45.6517103Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6517249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6517425Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6517534Z E           AssertionError: Series are different
2025-02-25T14:20:45.6517611Z E           
2025-02-25T14:20:45.6517712Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6518090Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6518527Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6518874Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6518879Z 
2025-02-25T14:20:45.6519189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6519453Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-25T14:20:45.6519465Z 
2025-02-25T14:20:45.6519690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dce00>
2025-02-25T14:20:45.6519860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6519956Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6519960Z 
2025-02-25T14:20:45.6520099Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6520215Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6520306Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6520378Z         try:
2025-02-25T14:20:45.6520665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6520807Z         except KeyError:
2025-02-25T14:20:45.6521048Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6521166Z     
2025-02-25T14:20:45.6521313Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6521470Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6521634Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6521793Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6521877Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6522111Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6522221Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6522226Z 
2025-02-25T14:20:45.6522355Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6522473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6522477Z 
2025-02-25T14:20:45.6522613Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6522704Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6522813Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6522899Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6523042Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6523133Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6523236Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6523329Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6523408Z err_msg = None
2025-02-25T14:20:45.6523412Z 
2025-02-25T14:20:45.6523521Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6523606Z         if err_msg is None:
2025-02-25T14:20:45.6523697Z             if left.shape != right.shape:
2025-02-25T14:20:45.6523788Z                 raise_assert_detail(
2025-02-25T14:20:45.6523929Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6524006Z                 )
2025-02-25T14:20:45.6524071Z     
2025-02-25T14:20:45.6524150Z             diff = 0
2025-02-25T14:20:45.6524260Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6524353Z                 # count up differences
2025-02-25T14:20:45.6524657Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6524744Z                     diff += 1
2025-02-25T14:20:45.6524821Z     
2025-02-25T14:20:45.6524906Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6525045Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6525212Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6525320Z E           AssertionError: Series are different
2025-02-25T14:20:45.6525389Z E           
2025-02-25T14:20:45.6525495Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6525872Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6526249Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6526635Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6526645Z 
2025-02-25T14:20:45.6526951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6527238Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-25T14:20:45.6527243Z 
2025-02-25T14:20:45.6527375Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6527503Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6527606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6527738Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6527864Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6527963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6528038Z err_msg = None
2025-02-25T14:20:45.6528046Z 
2025-02-25T14:20:45.6528161Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6528242Z         if err_msg is None:
2025-02-25T14:20:45.6528351Z             if left.shape != right.shape:
2025-02-25T14:20:45.6528434Z                 raise_assert_detail(
2025-02-25T14:20:45.6528577Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6528651Z                 )
2025-02-25T14:20:45.6528724Z     
2025-02-25T14:20:45.6528795Z             diff = 0
2025-02-25T14:20:45.6528912Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6529003Z                 # count up differences
2025-02-25T14:20:45.6529171Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6529256Z                     diff += 1
2025-02-25T14:20:45.6529326Z     
2025-02-25T14:20:45.6529419Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6529637Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6529814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6529932Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6530009Z E           
2025-02-25T14:20:45.6530119Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6530389Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6530894Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6530900Z 
2025-02-25T14:20:45.6531201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6531217Z 
2025-02-25T14:20:45.6531383Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6531388Z 
2025-02-25T14:20:45.6531612Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd040>
2025-02-25T14:20:45.6531810Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>, attr = 'nu'
2025-02-25T14:20:45.6531815Z 
2025-02-25T14:20:45.6531956Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6532069Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6532158Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6532228Z         try:
2025-02-25T14:20:45.6532372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6532465Z         except KeyError:
2025-02-25T14:20:45.6532603Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6532678Z     
2025-02-25T14:20:45.6532897Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6532996Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6533084Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6533222Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6533308Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6533401Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6533514Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6533518Z 
2025-02-25T14:20:45.6533646Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6533766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6533913Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6533991Z     ???
2025-02-25T14:20:45.6534101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6534105Z 
2025-02-25T14:20:45.6534188Z >   ???
2025-02-25T14:20:45.6534313Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6534385Z E   
2025-02-25T14:20:45.6534511Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6534625Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6534697Z E          ...
2025-02-25T14:20:45.6534789Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6534925Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6535037Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6535111Z E          ...
2025-02-25T14:20:45.6535196Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6535324Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6535544Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6535550Z 
2025-02-25T14:20:45.6535647Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6535882Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-25T14:20:45.6535887Z 
2025-02-25T14:20:45.6536017Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6536150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6536247Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6536385Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6536510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6536606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6536681Z err_msg = None
2025-02-25T14:20:45.6536691Z 
2025-02-25T14:20:45.6536801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6536893Z         if err_msg is None:
2025-02-25T14:20:45.6537005Z             if left.shape != right.shape:
2025-02-25T14:20:45.6537093Z                 raise_assert_detail(
2025-02-25T14:20:45.6537234Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6537309Z                 )
2025-02-25T14:20:45.6537378Z     
2025-02-25T14:20:45.6537456Z             diff = 0
2025-02-25T14:20:45.6537565Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6537657Z                 # count up differences
2025-02-25T14:20:45.6537823Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6537908Z                     diff += 1
2025-02-25T14:20:45.6537974Z     
2025-02-25T14:20:45.6538066Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6538209Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6538378Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6538584Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6538656Z E           
2025-02-25T14:20:45.6538774Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6539033Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6539304Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6539308Z 
2025-02-25T14:20:45.6539609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6539618Z 
2025-02-25T14:20:45.6539785Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6539789Z 
2025-02-25T14:20:45.6540016Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd100>
2025-02-25T14:20:45.6540177Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6540264Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6540268Z 
2025-02-25T14:20:45.6540408Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6540637Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6540729Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6540800Z         try:
2025-02-25T14:20:45.6541828Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6541975Z         except KeyError:
2025-02-25T14:20:45.6542200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6542309Z     
2025-02-25T14:20:45.6542516Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6542688Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6542850Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6543062Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6543185Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6543375Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6543556Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6543561Z 
2025-02-25T14:20:45.6543759Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6543917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6544146Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6544233Z     ???
2025-02-25T14:20:45.6544494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6544502Z 
2025-02-25T14:20:45.6544639Z >   ???
2025-02-25T14:20:45.6544802Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6544935Z E   
2025-02-25T14:20:45.6545080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6545326Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6552987Z E          ...
2025-02-25T14:20:45.6553197Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6553431Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6553626Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6553756Z E          ...
2025-02-25T14:20:45.6553904Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6554139Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6554319Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6554329Z 
2025-02-25T14:20:45.6554494Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6555101Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-25T14:20:45.6555108Z 
2025-02-25T14:20:45.6555331Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6555560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6555721Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6555957Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6556174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6556355Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6556455Z err_msg = None
2025-02-25T14:20:45.6556460Z 
2025-02-25T14:20:45.6556585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6556677Z         if err_msg is None:
2025-02-25T14:20:45.6556786Z             if left.shape != right.shape:
2025-02-25T14:20:45.6556879Z                 raise_assert_detail(
2025-02-25T14:20:45.6557033Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6557113Z                 )
2025-02-25T14:20:45.6557183Z     
2025-02-25T14:20:45.6557264Z             diff = 0
2025-02-25T14:20:45.6557382Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6557480Z                 # count up differences
2025-02-25T14:20:45.6557664Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6557742Z                     diff += 1
2025-02-25T14:20:45.6557816Z     
2025-02-25T14:20:45.6557906Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6558183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6558361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6558491Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6558565Z E           
2025-02-25T14:20:45.6558685Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6558951Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6559225Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6559231Z 
2025-02-25T14:20:45.6559560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6559568Z 
2025-02-25T14:20:45.6559740Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6559744Z 
2025-02-25T14:20:45.6559976Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd1c0>
2025-02-25T14:20:45.6560185Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>, attr = 'f_lu'
2025-02-25T14:20:45.6560189Z 
2025-02-25T14:20:45.6560327Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6560454Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6560676Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6560758Z         try:
2025-02-25T14:20:45.6560901Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6560999Z         except KeyError:
2025-02-25T14:20:45.6561140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6561341Z     
2025-02-25T14:20:45.6561442Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6561538Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6561639Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6561771Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6561862Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6561952Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6562071Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6562075Z 
2025-02-25T14:20:45.6562204Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6562325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6562472Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6562556Z     ???
2025-02-25T14:20:45.6562672Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6562681Z 
2025-02-25T14:20:45.6562750Z >   ???
2025-02-25T14:20:45.6562882Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6562950Z E   
2025-02-25T14:20:45.6563083Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6563191Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6563268Z E          ...
2025-02-25T14:20:45.6563355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6563493Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6563603Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6563683Z E          ...
2025-02-25T14:20:45.6563772Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6564015Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6564135Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6564140Z 
2025-02-25T14:20:45.6564230Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6564471Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-25T14:20:45.6564476Z 
2025-02-25T14:20:45.6564604Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6564744Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6564849Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6564980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6565112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6565205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6565289Z err_msg = None
2025-02-25T14:20:45.6565293Z 
2025-02-25T14:20:45.6565407Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6565494Z         if err_msg is None:
2025-02-25T14:20:45.6565594Z             if left.shape != right.shape:
2025-02-25T14:20:45.6565685Z                 raise_assert_detail(
2025-02-25T14:20:45.6565829Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6565908Z                 )
2025-02-25T14:20:45.6565982Z     
2025-02-25T14:20:45.6566054Z             diff = 0
2025-02-25T14:20:45.6566171Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6566257Z                 # count up differences
2025-02-25T14:20:45.6566432Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6566510Z                     diff += 1
2025-02-25T14:20:45.6566584Z     
2025-02-25T14:20:45.6566672Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6566819Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6566987Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6567208Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6567286Z E           
2025-02-25T14:20:45.6567393Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6567666Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6567937Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6567941Z 
2025-02-25T14:20:45.6568270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6568280Z 
2025-02-25T14:20:45.6568468Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6568472Z 
2025-02-25T14:20:45.6568711Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd940>
2025-02-25T14:20:45.6568887Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6568969Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6568973Z 
2025-02-25T14:20:45.6569123Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6569244Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6569338Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6569421Z         try:
2025-02-25T14:20:45.6569675Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6569766Z         except KeyError:
2025-02-25T14:20:45.6569905Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6569983Z     
2025-02-25T14:20:45.6570071Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6570171Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6570261Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6570405Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6570492Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6570712Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6570833Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6570905Z             else:
2025-02-25T14:20:45.6571006Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6571115Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6571119Z 
2025-02-25T14:20:45.6571265Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6571382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6571541Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6571612Z     ???
2025-02-25T14:20:45.6571728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6571733Z 
2025-02-25T14:20:45.6571809Z >   ???
2025-02-25T14:20:45.6571937Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6572009Z E   
2025-02-25T14:20:45.6572131Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6572243Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6572315Z E          ...
2025-02-25T14:20:45.6572413Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6572544Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6572670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6572742Z E          ...
2025-02-25T14:20:45.6572840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6573093Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6573211Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6573215Z 
2025-02-25T14:20:45.6573315Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6573548Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-25T14:20:45.6573553Z 
2025-02-25T14:20:45.6573693Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6573825Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6573930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6574065Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6574202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6574305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6574384Z err_msg = None
2025-02-25T14:20:45.6574389Z 
2025-02-25T14:20:45.6574510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6574593Z         if err_msg is None:
2025-02-25T14:20:45.6574696Z             if left.shape != right.shape:
2025-02-25T14:20:45.6574780Z                 raise_assert_detail(
2025-02-25T14:20:45.6574929Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6575000Z                 )
2025-02-25T14:20:45.6575074Z     
2025-02-25T14:20:45.6575145Z             diff = 0
2025-02-25T14:20:45.6575263Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6575356Z                 # count up differences
2025-02-25T14:20:45.6575642Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6575734Z                     diff += 1
2025-02-25T14:20:45.6575803Z     
2025-02-25T14:20:45.6575901Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6576119Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6576436Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6576631Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6576759Z E           
2025-02-25T14:20:45.6576946Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6577426Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6577913Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6577929Z 
2025-02-25T14:20:45.6578456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6578463Z 
2025-02-25T14:20:45.6578757Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6578763Z 
2025-02-25T14:20:45.6579154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dda00>
2025-02-25T14:20:45.6579438Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6579578Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6579585Z 
2025-02-25T14:20:45.6579807Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6579940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6580025Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6580107Z         try:
2025-02-25T14:20:45.6580380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6580470Z         except KeyError:
2025-02-25T14:20:45.6580819Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6580892Z     
2025-02-25T14:20:45.6580990Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6581086Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6581184Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6581317Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6581413Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6581504Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6581622Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6581696Z             else:
2025-02-25T14:20:45.6581804Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6581920Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6581929Z 
2025-02-25T14:20:45.6582056Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6582177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6582321Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6582400Z     ???
2025-02-25T14:20:45.6582513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6582517Z 
2025-02-25T14:20:45.6582593Z >   ???
2025-02-25T14:20:45.6582722Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6582800Z E   
2025-02-25T14:20:45.6582932Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6583049Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6583127Z E          ...
2025-02-25T14:20:45.6583350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6583490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6583605Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6583685Z E          ...
2025-02-25T14:20:45.6583771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6583903Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6584006Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6584010Z 
2025-02-25T14:20:45.6584105Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6584383Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-25T14:20:45.6584390Z 
2025-02-25T14:20:45.6584617Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6584855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6585016Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6585248Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6585469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6585589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6585664Z err_msg = None
2025-02-25T14:20:45.6585676Z 
2025-02-25T14:20:45.6585787Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6585873Z         if err_msg is None:
2025-02-25T14:20:45.6585970Z             if left.shape != right.shape:
2025-02-25T14:20:45.6586062Z                 raise_assert_detail(
2025-02-25T14:20:45.6586208Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6586290Z                 )
2025-02-25T14:20:45.6586677Z     
2025-02-25T14:20:45.6586754Z             diff = 0
2025-02-25T14:20:45.6586872Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6586967Z                 # count up differences
2025-02-25T14:20:45.6587291Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6587368Z                     diff += 1
2025-02-25T14:20:45.6587441Z     
2025-02-25T14:20:45.6587531Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6587676Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6587846Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6587961Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6588033Z E           
2025-02-25T14:20:45.6588152Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6588417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6588689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6588695Z 
2025-02-25T14:20:45.6589003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6589007Z 
2025-02-25T14:20:45.6589175Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6589178Z 
2025-02-25T14:20:45.6589406Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6ddb80>
2025-02-25T14:20:45.6589661Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6589744Z attr = 'j_blues'
2025-02-25T14:20:45.6589748Z 
2025-02-25T14:20:45.6589891Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6590012Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6590106Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6590177Z         try:
2025-02-25T14:20:45.6590325Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6590408Z         except KeyError:
2025-02-25T14:20:45.6590753Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6590848Z     
2025-02-25T14:20:45.6590941Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6591043Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6591132Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6591270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6591361Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6591458Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6591567Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6591651Z             else:
2025-02-25T14:20:45.6591745Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6591859Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6591863Z 
2025-02-25T14:20:45.6591994Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6592106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6592258Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6592329Z     ???
2025-02-25T14:20:45.6592443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6592447Z 
2025-02-25T14:20:45.6592517Z >   ???
2025-02-25T14:20:45.6592649Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6592722Z E   
2025-02-25T14:20:45.6592856Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6592966Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6593191Z E          ...
2025-02-25T14:20:45.6593285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6593413Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6593529Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6593599Z E          ...
2025-02-25T14:20:45.6593690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6593809Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6593918Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6593922Z 
2025-02-25T14:20:45.6594011Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6594221Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-25T14:20:45.6594225Z 
2025-02-25T14:20:45.6594363Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6594495Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6594602Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6594731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6594860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6594952Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6595031Z err_msg = None
2025-02-25T14:20:45.6595035Z 
2025-02-25T14:20:45.6595146Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6595233Z         if err_msg is None:
2025-02-25T14:20:45.6595338Z             if left.shape != right.shape:
2025-02-25T14:20:45.6595425Z                 raise_assert_detail(
2025-02-25T14:20:45.6595716Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6595789Z                 )
2025-02-25T14:20:45.6595867Z     
2025-02-25T14:20:45.6595940Z             diff = 0
2025-02-25T14:20:45.6596054Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6596142Z                 # count up differences
2025-02-25T14:20:45.6596317Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6596395Z                     diff += 1
2025-02-25T14:20:45.6596468Z     
2025-02-25T14:20:45.6596557Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6596700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6596872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6596983Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6597060Z E           
2025-02-25T14:20:45.6597181Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6597445Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6597715Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6597720Z 
2025-02-25T14:20:45.6598021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6598025Z 
2025-02-25T14:20:45.6598203Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6598207Z 
2025-02-25T14:20:45.6598427Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6de900>
2025-02-25T14:20:45.6598688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6598761Z attr = 'lines'
2025-02-25T14:20:45.6598768Z 
2025-02-25T14:20:45.6598914Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6599029Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6599113Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6599188Z         try:
2025-02-25T14:20:45.6599328Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6599413Z         except KeyError:
2025-02-25T14:20:45.6599547Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6599619Z     
2025-02-25T14:20:45.6599705Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6599807Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6599895Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6600030Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6600127Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6600216Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6600328Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6600401Z             else:
2025-02-25T14:20:45.6600498Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6600761Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6600765Z 
2025-02-25T14:20:45.6600892Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6601003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6601152Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6601228Z     ???
2025-02-25T14:20:45.6601457Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6601462Z 
2025-02-25T14:20:45.6601537Z >   ???
2025-02-25T14:20:45.6601664Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6601741Z E   
2025-02-25T14:20:45.6601867Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6601980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6602052Z E          ...
2025-02-25T14:20:45.6602148Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6602274Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6602392Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6602466Z E          ...
2025-02-25T14:20:45.6602550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6602678Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6602780Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6602789Z 
2025-02-25T14:20:45.6602880Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6603140Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-25T14:20:45.6603148Z 
2025-02-25T14:20:45.6603377Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6de9c0>
2025-02-25T14:20:45.6603637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6603798Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6603806Z 
2025-02-25T14:20:45.6604057Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6604255Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6604403Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6604522Z         try:
2025-02-25T14:20:45.6604773Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6604908Z         except KeyError:
2025-02-25T14:20:45.6605164Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6605280Z     
2025-02-25T14:20:45.6605436Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6605595Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6605926Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6606163Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6606307Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6606463Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6606648Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6606656Z 
2025-02-25T14:20:45.6606873Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6607065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6607071Z 
2025-02-25T14:20:45.6607302Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6607390Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6607508Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6607596Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6607744Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6607831Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6607933Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6608016Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6608092Z err_msg = None
2025-02-25T14:20:45.6608096Z 
2025-02-25T14:20:45.6608209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6608289Z         if err_msg is None:
2025-02-25T14:20:45.6608392Z             if left.shape != right.shape:
2025-02-25T14:20:45.6608481Z                 raise_assert_detail(
2025-02-25T14:20:45.6608624Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6608798Z                 )
2025-02-25T14:20:45.6608901Z     
2025-02-25T14:20:45.6609004Z             diff = 0
2025-02-25T14:20:45.6609116Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6609211Z                 # count up differences
2025-02-25T14:20:45.6609379Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6609460Z                     diff += 1
2025-02-25T14:20:45.6609525Z     
2025-02-25T14:20:45.6609615Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6609750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6609925Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6610033Z E           AssertionError: Series are different
2025-02-25T14:20:45.6610103Z E           
2025-02-25T14:20:45.6610208Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6610706Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6611053Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6611394Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6611521Z 
2025-02-25T14:20:45.6611840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6612117Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-25T14:20:45.6612122Z 
2025-02-25T14:20:45.6612359Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dea80>
2025-02-25T14:20:45.6612529Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6612621Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6612625Z 
2025-02-25T14:20:45.6612763Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6612882Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6612966Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6613046Z         try:
2025-02-25T14:20:45.6613189Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6613278Z         except KeyError:
2025-02-25T14:20:45.6613421Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6613488Z     
2025-02-25T14:20:45.6613580Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6613672Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6613765Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6613898Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6613985Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6614072Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6614186Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6614190Z 
2025-02-25T14:20:45.6614315Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6614551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6614558Z 
2025-02-25T14:20:45.6614704Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6614795Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6614904Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6614985Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6615127Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6615208Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6615314Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6615392Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6615472Z err_msg = None
2025-02-25T14:20:45.6615475Z 
2025-02-25T14:20:45.6615589Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6615668Z         if err_msg is None:
2025-02-25T14:20:45.6615771Z             if left.shape != right.shape:
2025-02-25T14:20:45.6615855Z                 raise_assert_detail(
2025-02-25T14:20:45.6616003Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6616076Z                 )
2025-02-25T14:20:45.6616144Z     
2025-02-25T14:20:45.6616216Z             diff = 0
2025-02-25T14:20:45.6616330Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6616415Z                 # count up differences
2025-02-25T14:20:45.6616602Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6616695Z                     diff += 1
2025-02-25T14:20:45.6616762Z     
2025-02-25T14:20:45.6616853Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6616989Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6617166Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6617272Z E           AssertionError: Series are different
2025-02-25T14:20:45.6617348Z E           
2025-02-25T14:20:45.6617451Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6617952Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6618337Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6618714Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6618729Z 
2025-02-25T14:20:45.6619031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6619240Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-25T14:20:45.6619245Z 
2025-02-25T14:20:45.6619371Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6619586Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6619685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6619822Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6619954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6620047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6620125Z err_msg = None
2025-02-25T14:20:45.6620130Z 
2025-02-25T14:20:45.6620236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6620327Z         if err_msg is None:
2025-02-25T14:20:45.6620419Z             if left.shape != right.shape:
2025-02-25T14:20:45.6620602Z                 raise_assert_detail(
2025-02-25T14:20:45.6620747Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6620823Z                 )
2025-02-25T14:20:45.6620888Z     
2025-02-25T14:20:45.6620969Z             diff = 0
2025-02-25T14:20:45.6621084Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6621173Z                 # count up differences
2025-02-25T14:20:45.6621348Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6621423Z                     diff += 1
2025-02-25T14:20:45.6621494Z     
2025-02-25T14:20:45.6621577Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6621715Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6621878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6621994Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6622065Z E           
2025-02-25T14:20:45.6622182Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6622448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6623114Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6623122Z 
2025-02-25T14:20:45.6623649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6623656Z 
2025-02-25T14:20:45.6623889Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6623893Z 
2025-02-25T14:20:45.6624118Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6decc0>
2025-02-25T14:20:45.6624326Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>, attr = 'nu'
2025-02-25T14:20:45.6624331Z 
2025-02-25T14:20:45.6624468Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6624597Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6624681Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6624755Z         try:
2025-02-25T14:20:45.6624893Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6624979Z         except KeyError:
2025-02-25T14:20:45.6625118Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6625183Z     
2025-02-25T14:20:45.6625275Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6625369Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6625461Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6625590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6625806Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6625902Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6626015Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6626028Z 
2025-02-25T14:20:45.6626151Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6626273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6626422Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6626493Z     ???
2025-02-25T14:20:45.6626608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6626612Z 
2025-02-25T14:20:45.6626678Z >   ???
2025-02-25T14:20:45.6626808Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6626874Z E   
2025-02-25T14:20:45.6627005Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6627115Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6627196Z E          ...
2025-02-25T14:20:45.6627283Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6627417Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6627539Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6627611Z E          ...
2025-02-25T14:20:45.6627702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6627826Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6627938Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6627942Z 
2025-02-25T14:20:45.6628031Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6628271Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-25T14:20:45.6628275Z 
2025-02-25T14:20:45.6628401Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6628537Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6628638Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6628765Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6628992Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6629084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6629166Z err_msg = None
2025-02-25T14:20:45.6629170Z 
2025-02-25T14:20:45.6629278Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6629363Z         if err_msg is None:
2025-02-25T14:20:45.6629455Z             if left.shape != right.shape:
2025-02-25T14:20:45.6629545Z                 raise_assert_detail(
2025-02-25T14:20:45.6629700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6629768Z                 )
2025-02-25T14:20:45.6629839Z     
2025-02-25T14:20:45.6629916Z             diff = 0
2025-02-25T14:20:45.6630032Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6630119Z                 # count up differences
2025-02-25T14:20:45.6630299Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6630375Z                     diff += 1
2025-02-25T14:20:45.6630448Z     
2025-02-25T14:20:45.6630728Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6630898Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6631071Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6631180Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6631253Z E           
2025-02-25T14:20:45.6631364Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6631751Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6632021Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6632034Z 
2025-02-25T14:20:45.6632331Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6632335Z 
2025-02-25T14:20:45.6632507Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6632512Z 
2025-02-25T14:20:45.6632730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6ded80>
2025-02-25T14:20:45.6632903Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6632983Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6632987Z 
2025-02-25T14:20:45.6633132Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6633251Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6633333Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6633408Z         try:
2025-02-25T14:20:45.6633547Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6633637Z         except KeyError:
2025-02-25T14:20:45.6633771Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6633845Z     
2025-02-25T14:20:45.6633931Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6634029Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6634116Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6634249Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6634342Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6634429Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6634544Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6634665Z 
2025-02-25T14:20:45.6634793Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6634907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6635050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6635124Z     ???
2025-02-25T14:20:45.6635229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6635233Z 
2025-02-25T14:20:45.6635305Z >   ???
2025-02-25T14:20:45.6635434Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6635500Z E   
2025-02-25T14:20:45.6635630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6635747Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6635823Z E          ...
2025-02-25T14:20:45.6635907Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6636040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6636153Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6636229Z E          ...
2025-02-25T14:20:45.6636312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6636443Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6636545Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6636554Z 
2025-02-25T14:20:45.6636643Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6636849Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-25T14:20:45.6636853Z 
2025-02-25T14:20:45.6636985Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6637205Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6637304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6637444Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6637566Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6637662Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6637741Z err_msg = None
2025-02-25T14:20:45.6637746Z 
2025-02-25T14:20:45.6637853Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6637940Z         if err_msg is None:
2025-02-25T14:20:45.6638033Z             if left.shape != right.shape:
2025-02-25T14:20:45.6638123Z                 raise_assert_detail(
2025-02-25T14:20:45.6638262Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6638337Z                 )
2025-02-25T14:20:45.6638402Z     
2025-02-25T14:20:45.6638488Z             diff = 0
2025-02-25T14:20:45.6638596Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6638687Z                 # count up differences
2025-02-25T14:20:45.6638863Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6638939Z                     diff += 1
2025-02-25T14:20:45.6639012Z     
2025-02-25T14:20:45.6639100Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6639240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6639408Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6639527Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6639600Z E           
2025-02-25T14:20:45.6639713Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6639977Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6640381Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6640387Z 
2025-02-25T14:20:45.6641052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6641062Z 
2025-02-25T14:20:45.6641355Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6641372Z 
2025-02-25T14:20:45.6641770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dee40>
2025-02-25T14:20:45.6642131Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>, attr = 'f_lu'
2025-02-25T14:20:45.6642137Z 
2025-02-25T14:20:45.6642374Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6642572Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6642710Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6642835Z         try:
2025-02-25T14:20:45.6643070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6643212Z         except KeyError:
2025-02-25T14:20:45.6643431Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6643564Z     
2025-02-25T14:20:45.6643720Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6643846Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6643940Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6644074Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6644302Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6644396Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6644510Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6644519Z 
2025-02-25T14:20:45.6644647Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6644767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6644917Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6644988Z     ???
2025-02-25T14:20:45.6645099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6645103Z 
2025-02-25T14:20:45.6645172Z >   ???
2025-02-25T14:20:45.6645304Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6645372Z E   
2025-02-25T14:20:45.6645506Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6645617Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6645698Z E          ...
2025-02-25T14:20:45.6645784Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6645917Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6646035Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6646106Z E          ...
2025-02-25T14:20:45.6646195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6646316Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6646424Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6646428Z 
2025-02-25T14:20:45.6646515Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6646755Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-25T14:20:45.6646759Z 
2025-02-25T14:20:45.6646885Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6647023Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6647125Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6647376Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6647506Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6647596Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6647676Z err_msg = None
2025-02-25T14:20:45.6647680Z 
2025-02-25T14:20:45.6647790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6647878Z         if err_msg is None:
2025-02-25T14:20:45.6647973Z             if left.shape != right.shape:
2025-02-25T14:20:45.6648063Z                 raise_assert_detail(
2025-02-25T14:20:45.6648212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6648282Z                 )
2025-02-25T14:20:45.6648356Z     
2025-02-25T14:20:45.6648434Z             diff = 0
2025-02-25T14:20:45.6648549Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6648638Z                 # count up differences
2025-02-25T14:20:45.6648826Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6648904Z                     diff += 1
2025-02-25T14:20:45.6648976Z     
2025-02-25T14:20:45.6649062Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6649206Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6649377Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6649491Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6649567Z E           
2025-02-25T14:20:45.6649678Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6650032Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6650302Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6650314Z 
2025-02-25T14:20:45.6650811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6650817Z 
2025-02-25T14:20:45.6650996Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6651000Z 
2025-02-25T14:20:45.6651226Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df5c0>
2025-02-25T14:20:45.6651397Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6651477Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6651485Z 
2025-02-25T14:20:45.6651628Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6651750Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6651833Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6651911Z         try:
2025-02-25T14:20:45.6652047Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6652134Z         except KeyError:
2025-02-25T14:20:45.6652304Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6652378Z     
2025-02-25T14:20:45.6652464Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6652561Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6652647Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6652789Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6652873Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6652968Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6653213Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6653284Z             else:
2025-02-25T14:20:45.6653383Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6653489Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6653493Z 
2025-02-25T14:20:45.6653625Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6653735Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6653883Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6653951Z     ???
2025-02-25T14:20:45.6654066Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6654070Z 
2025-02-25T14:20:45.6654141Z >   ???
2025-02-25T14:20:45.6654272Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6654344Z E   
2025-02-25T14:20:45.6654473Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6654595Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6654668Z E          ...
2025-02-25T14:20:45.6654763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6654890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6655005Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6655075Z E          ...
2025-02-25T14:20:45.6655166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6655297Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6655401Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6655405Z 
2025-02-25T14:20:45.6655500Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6655862Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-25T14:20:45.6655868Z 
2025-02-25T14:20:45.6656006Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6656138Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6656241Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6656374Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6656499Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6656595Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6656669Z err_msg = None
2025-02-25T14:20:45.6656672Z 
2025-02-25T14:20:45.6656786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6656866Z         if err_msg is None:
2025-02-25T14:20:45.6656964Z             if left.shape != right.shape:
2025-02-25T14:20:45.6657065Z                 raise_assert_detail(
2025-02-25T14:20:45.6657217Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6657293Z                 )
2025-02-25T14:20:45.6657366Z     
2025-02-25T14:20:45.6657439Z             diff = 0
2025-02-25T14:20:45.6657552Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6657646Z                 # count up differences
2025-02-25T14:20:45.6657815Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6657896Z                     diff += 1
2025-02-25T14:20:45.6657964Z     
2025-02-25T14:20:45.6658060Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6658195Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6658375Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6658484Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6658571Z E           
2025-02-25T14:20:45.6658684Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6658948Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6659368Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6659378Z 
2025-02-25T14:20:45.6659907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6659923Z 
2025-02-25T14:20:45.6660216Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6660223Z 
2025-02-25T14:20:45.6660690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df680>
2025-02-25T14:20:45.6660870Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6660954Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6660958Z 
2025-02-25T14:20:45.6661090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6661207Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6661292Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6661392Z         try:
2025-02-25T14:20:45.6661540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6661620Z         except KeyError:
2025-02-25T14:20:45.6661761Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6661827Z     
2025-02-25T14:20:45.6662071Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6662168Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6662260Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6662397Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6662486Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6662573Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6662687Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6662759Z             else:
2025-02-25T14:20:45.6662860Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6662971Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6662975Z 
2025-02-25T14:20:45.6663097Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6663212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6663355Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6663434Z     ???
2025-02-25T14:20:45.6663543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6663547Z 
2025-02-25T14:20:45.6663627Z >   ???
2025-02-25T14:20:45.6663751Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6663824Z E   
2025-02-25T14:20:45.6663955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6664069Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6664144Z E          ...
2025-02-25T14:20:45.6664230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6664362Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6664474Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6664550Z E          ...
2025-02-25T14:20:45.6664635Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6664762Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6664872Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6664876Z 
2025-02-25T14:20:45.6664973Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6665315Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-25T14:20:45.6665319Z 
2025-02-25T14:20:45.6665444Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6665573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6665668Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6665801Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6665924Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6666021Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6666100Z err_msg = None
2025-02-25T14:20:45.6666109Z 
2025-02-25T14:20:45.6666218Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6666303Z         if err_msg is None:
2025-02-25T14:20:45.6666402Z             if left.shape != right.shape:
2025-02-25T14:20:45.6666493Z                 raise_assert_detail(
2025-02-25T14:20:45.6666636Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6666711Z                 )
2025-02-25T14:20:45.6666778Z     
2025-02-25T14:20:45.6666854Z             diff = 0
2025-02-25T14:20:45.6666962Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6667057Z                 # count up differences
2025-02-25T14:20:45.6667224Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6667307Z                     diff += 1
2025-02-25T14:20:45.6667379Z     
2025-02-25T14:20:45.6667467Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6667695Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6667866Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6667985Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6668057Z E           
2025-02-25T14:20:45.6668174Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6668431Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6668696Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6668702Z 
2025-02-25T14:20:45.6669011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6669019Z 
2025-02-25T14:20:45.6669182Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6669186Z 
2025-02-25T14:20:45.6669414Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df800>
2025-02-25T14:20:45.6669583Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6669658Z attr = 'j_blues'
2025-02-25T14:20:45.6669662Z 
2025-02-25T14:20:45.6669801Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6669914Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6670001Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6670069Z         try:
2025-02-25T14:20:45.6670212Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6670296Z         except KeyError:
2025-02-25T14:20:45.6670439Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6670794Z     
2025-02-25T14:20:45.6670900Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6671001Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6671090Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6671231Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6671316Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6671412Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6671519Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6671595Z             else:
2025-02-25T14:20:45.6671691Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6671801Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6671805Z 
2025-02-25T14:20:45.6671929Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6672054Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6672202Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6672275Z     ???
2025-02-25T14:20:45.6672391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6672394Z 
2025-02-25T14:20:45.6672464Z >   ???
2025-02-25T14:20:45.6672593Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6672660Z E   
2025-02-25T14:20:45.6672790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6672899Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6672975Z E          ...
2025-02-25T14:20:45.6673068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6673194Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6673308Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6673502Z E          ...
2025-02-25T14:20:45.6673597Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6673722Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6673838Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6673842Z 
2025-02-25T14:20:45.6673931Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6674143Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-25T14:20:45.6674147Z 
2025-02-25T14:20:45.6674279Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6674406Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6674506Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6674636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6674768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6674859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6674942Z err_msg = None
2025-02-25T14:20:45.6674945Z 
2025-02-25T14:20:45.6675055Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6675141Z         if err_msg is None:
2025-02-25T14:20:45.6675239Z             if left.shape != right.shape:
2025-02-25T14:20:45.6675320Z                 raise_assert_detail(
2025-02-25T14:20:45.6675469Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6675538Z                 )
2025-02-25T14:20:45.6675610Z     
2025-02-25T14:20:45.6675679Z             diff = 0
2025-02-25T14:20:45.6675793Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6675878Z                 # count up differences
2025-02-25T14:20:45.6676052Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6676133Z                     diff += 1
2025-02-25T14:20:45.6676206Z     
2025-02-25T14:20:45.6676293Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6676559Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6676865Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6677050Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6677172Z E           
2025-02-25T14:20:45.6677354Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6677773Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6678045Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6678062Z 
2025-02-25T14:20:45.6678364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6678368Z 
2025-02-25T14:20:45.6678536Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6678541Z 
2025-02-25T14:20:45.6678762Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c5c0>
2025-02-25T14:20:45.6678931Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6679003Z attr = 'lines'
2025-02-25T14:20:45.6679012Z 
2025-02-25T14:20:45.6679145Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6679359Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6679447Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6679521Z         try:
2025-02-25T14:20:45.6679658Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6679749Z         except KeyError:
2025-02-25T14:20:45.6679883Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6679959Z     
2025-02-25T14:20:45.6680045Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6680147Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6680235Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6680373Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6680465Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6680653Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6680770Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6680840Z             else:
2025-02-25T14:20:45.6680943Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6681047Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6681051Z 
2025-02-25T14:20:45.6681184Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6681295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6681445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6681541Z     ???
2025-02-25T14:20:45.6681649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6681653Z 
2025-02-25T14:20:45.6681724Z >   ???
2025-02-25T14:20:45.6681847Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6681921Z E   
2025-02-25T14:20:45.6682048Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6682165Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6682235Z E          ...
2025-02-25T14:20:45.6682333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6682458Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6682574Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6682777Z E          ...
2025-02-25T14:20:45.6682862Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6682989Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6683092Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6683096Z 
2025-02-25T14:20:45.6683189Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6683456Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-25T14:20:45.6683460Z 
2025-02-25T14:20:45.6683689Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c680>
2025-02-25T14:20:45.6683860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6683959Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6683964Z 
2025-02-25T14:20:45.6684099Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6684209Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6684299Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6684367Z         try:
2025-02-25T14:20:45.6684510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6684590Z         except KeyError:
2025-02-25T14:20:45.6684730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6684798Z     
2025-02-25T14:20:45.6684888Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6684981Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6685075Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6685213Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6685296Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6685391Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6685659Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6685665Z 
2025-02-25T14:20:45.6685798Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6685912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6685916Z 
2025-02-25T14:20:45.6686057Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6686143Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6686259Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6686346Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6686486Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6686574Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6686679Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6686766Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6686840Z err_msg = None
2025-02-25T14:20:45.6686844Z 
2025-02-25T14:20:45.6686958Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6687044Z         if err_msg is None:
2025-02-25T14:20:45.6687142Z             if left.shape != right.shape:
2025-02-25T14:20:45.6687227Z                 raise_assert_detail(
2025-02-25T14:20:45.6687377Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6687453Z                 )
2025-02-25T14:20:45.6687520Z     
2025-02-25T14:20:45.6687596Z             diff = 0
2025-02-25T14:20:45.6687705Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6687799Z                 # count up differences
2025-02-25T14:20:45.6687967Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6688051Z                     diff += 1
2025-02-25T14:20:45.6688118Z     
2025-02-25T14:20:45.6688213Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6688349Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6688622Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6688734Z E           AssertionError: Series are different
2025-02-25T14:20:45.6688803Z E           
2025-02-25T14:20:45.6688910Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6689282Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6689631Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6689974Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6689979Z 
2025-02-25T14:20:45.6690282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6690639Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-25T14:20:45.6690644Z 
2025-02-25T14:20:45.6690989Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c740>
2025-02-25T14:20:45.6691158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6691259Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6691263Z 
2025-02-25T14:20:45.6691396Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6691514Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6691598Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6691677Z         try:
2025-02-25T14:20:45.6691814Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6691903Z         except KeyError:
2025-02-25T14:20:45.6692037Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6692112Z     
2025-02-25T14:20:45.6692205Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6692298Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6692394Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6692525Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6692616Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6692707Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6692822Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6692826Z 
2025-02-25T14:20:45.6692944Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6693060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6693064Z 
2025-02-25T14:20:45.6693204Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6693286Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6693397Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6693475Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6693626Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6693708Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6693819Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6694036Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6694116Z err_msg = None
2025-02-25T14:20:45.6694120Z 
2025-02-25T14:20:45.6694231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6694311Z         if err_msg is None:
2025-02-25T14:20:45.6694408Z             if left.shape != right.shape:
2025-02-25T14:20:45.6694490Z                 raise_assert_detail(
2025-02-25T14:20:45.6694636Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6694705Z                 )
2025-02-25T14:20:45.6694778Z     
2025-02-25T14:20:45.6694851Z             diff = 0
2025-02-25T14:20:45.6694965Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6695060Z                 # count up differences
2025-02-25T14:20:45.6695235Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6695339Z                     diff += 1
2025-02-25T14:20:45.6695485Z     
2025-02-25T14:20:45.6695644Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6695869Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6696165Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6696333Z E           AssertionError: Series are different
2025-02-25T14:20:45.6696460Z E           
2025-02-25T14:20:45.6696599Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6697097Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6697517Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6697900Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6697910Z 
2025-02-25T14:20:45.6698208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6698420Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-25T14:20:45.6698423Z 
2025-02-25T14:20:45.6698551Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6698680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6698776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6698916Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6699036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6699133Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6699218Z err_msg = None
2025-02-25T14:20:45.6699222Z 
2025-02-25T14:20:45.6699327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6699412Z         if err_msg is None:
2025-02-25T14:20:45.6699593Z             if left.shape != right.shape:
2025-02-25T14:20:45.6699683Z                 raise_assert_detail(
2025-02-25T14:20:45.6699824Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6699898Z                 )
2025-02-25T14:20:45.6699964Z     
2025-02-25T14:20:45.6700042Z             diff = 0
2025-02-25T14:20:45.6700151Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6700242Z                 # count up differences
2025-02-25T14:20:45.6700414Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6700491Z                     diff += 1
2025-02-25T14:20:45.6700681Z     
2025-02-25T14:20:45.6700769Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6700916Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6701082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6701205Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6701275Z E           
2025-02-25T14:20:45.6701391Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6701661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6702040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6702045Z 
2025-02-25T14:20:45.6702349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6702358Z 
2025-02-25T14:20:45.6702523Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6702535Z 
2025-02-25T14:20:45.6702754Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c980>
2025-02-25T14:20:45.6702955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>, attr = 'nu'
2025-02-25T14:20:45.6702959Z 
2025-02-25T14:20:45.6703097Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6703218Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6703302Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6703378Z         try:
2025-02-25T14:20:45.6703517Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6703611Z         except KeyError:
2025-02-25T14:20:45.6703751Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6703825Z     
2025-02-25T14:20:45.6703917Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6704012Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6704106Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6704237Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6704327Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6704418Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6704531Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6704536Z 
2025-02-25T14:20:45.6704655Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6704772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6704917Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6704988Z     ???
2025-02-25T14:20:45.6705104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6705247Z 
2025-02-25T14:20:45.6705319Z >   ???
2025-02-25T14:20:45.6705453Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6705520Z E   
2025-02-25T14:20:45.6705650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6705760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6705835Z E          ...
2025-02-25T14:20:45.6705924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6706058Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6706174Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6706242Z E          ...
2025-02-25T14:20:45.6706334Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6706456Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6706568Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6706572Z 
2025-02-25T14:20:45.6706663Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6706907Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-25T14:20:45.6706911Z 
2025-02-25T14:20:45.6707038Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6707172Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6707272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6707404Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6707533Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6707624Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6707795Z err_msg = None
2025-02-25T14:20:45.6707800Z 
2025-02-25T14:20:45.6707909Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6707995Z         if err_msg is None:
2025-02-25T14:20:45.6708093Z             if left.shape != right.shape:
2025-02-25T14:20:45.6708184Z                 raise_assert_detail(
2025-02-25T14:20:45.6708332Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6708402Z                 )
2025-02-25T14:20:45.6708473Z     
2025-02-25T14:20:45.6708546Z             diff = 0
2025-02-25T14:20:45.6708661Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6708747Z                 # count up differences
2025-02-25T14:20:45.6708921Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6708998Z                     diff += 1
2025-02-25T14:20:45.6709071Z     
2025-02-25T14:20:45.6709157Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6709298Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6709471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6709585Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6709661Z E           
2025-02-25T14:20:45.6709769Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6710034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6710365Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6710376Z 
2025-02-25T14:20:45.6710890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6711021Z 
2025-02-25T14:20:45.6711202Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6711206Z 
2025-02-25T14:20:45.6711428Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ca40>
2025-02-25T14:20:45.6711600Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6711679Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6711683Z 
2025-02-25T14:20:45.6711824Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6711942Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6712026Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6712102Z         try:
2025-02-25T14:20:45.6712250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6712337Z         except KeyError:
2025-02-25T14:20:45.6712474Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6712556Z     
2025-02-25T14:20:45.6712645Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6712748Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6712835Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6712969Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6713054Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6713149Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6713264Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6713268Z 
2025-02-25T14:20:45.6713388Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6713505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6713767Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6713845Z     ???
2025-02-25T14:20:45.6713954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6713964Z 
2025-02-25T14:20:45.6714056Z >   ???
2025-02-25T14:20:45.6714280Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6714408Z E   
2025-02-25T14:20:45.6714634Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6714818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6714943Z E          ...
2025-02-25T14:20:45.6715086Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6715299Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6715412Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6715488Z E          ...
2025-02-25T14:20:45.6715573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6715715Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6715818Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6715827Z 
2025-02-25T14:20:45.6715924Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6716135Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-25T14:20:45.6716140Z 
2025-02-25T14:20:45.6716266Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6716396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6716490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6716625Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6716746Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6716843Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6716926Z err_msg = None
2025-02-25T14:20:45.6716930Z 
2025-02-25T14:20:45.6717037Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6717225Z         if err_msg is None:
2025-02-25T14:20:45.6717318Z             if left.shape != right.shape:
2025-02-25T14:20:45.6717407Z                 raise_assert_detail(
2025-02-25T14:20:45.6717549Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6717625Z                 )
2025-02-25T14:20:45.6717693Z     
2025-02-25T14:20:45.6717770Z             diff = 0
2025-02-25T14:20:45.6717881Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6717973Z                 # count up differences
2025-02-25T14:20:45.6718144Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6718223Z                     diff += 1
2025-02-25T14:20:45.6718296Z     
2025-02-25T14:20:45.6718383Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6718530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6718697Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6718821Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6718891Z E           
2025-02-25T14:20:45.6719006Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6719272Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6719619Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6719625Z 
2025-02-25T14:20:45.6719933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6719945Z 
2025-02-25T14:20:45.6720111Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6720120Z 
2025-02-25T14:20:45.6720337Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70cb00>
2025-02-25T14:20:45.6720664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>, attr = 'f_lu'
2025-02-25T14:20:45.6720668Z 
2025-02-25T14:20:45.6720805Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6720923Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6721010Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6721085Z         try:
2025-02-25T14:20:45.6721226Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6721312Z         except KeyError:
2025-02-25T14:20:45.6721446Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6721526Z     
2025-02-25T14:20:45.6721619Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6721714Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6721807Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6721934Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6722024Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6722112Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6722224Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6722228Z 
2025-02-25T14:20:45.6722352Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6722469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6722615Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6722692Z     ???
2025-02-25T14:20:45.6722803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6722942Z 
2025-02-25T14:20:45.6723012Z >   ???
2025-02-25T14:20:45.6723148Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6723216Z E   
2025-02-25T14:20:45.6723350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6723460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6723541Z E          ...
2025-02-25T14:20:45.6723628Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6723763Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6723882Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6723954Z E          ...
2025-02-25T14:20:45.6724044Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6724172Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6724284Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6724288Z 
2025-02-25T14:20:45.6724378Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6724622Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-25T14:20:45.6724626Z 
2025-02-25T14:20:45.6724753Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6724890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6724990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6725119Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6725249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6725341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6725537Z err_msg = None
2025-02-25T14:20:45.6725542Z 
2025-02-25T14:20:45.6725656Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6725866Z         if err_msg is None:
2025-02-25T14:20:45.6725996Z             if left.shape != right.shape:
2025-02-25T14:20:45.6726149Z                 raise_assert_detail(
2025-02-25T14:20:45.6726325Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6726641Z                 )
2025-02-25T14:20:45.6726741Z     
2025-02-25T14:20:45.6726882Z             diff = 0
2025-02-25T14:20:45.6727023Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6727164Z                 # count up differences
2025-02-25T14:20:45.6727420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6727602Z                     diff += 1
2025-02-25T14:20:45.6727735Z     
2025-02-25T14:20:45.6727853Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6728046Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6735566Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6735834Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6735961Z E           
2025-02-25T14:20:45.6736173Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6736662Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6737111Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6737118Z 
2025-02-25T14:20:45.6737472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6737685Z 
2025-02-25T14:20:45.6737875Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6737879Z 
2025-02-25T14:20:45.6738124Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d280>
2025-02-25T14:20:45.6738297Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6738393Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6738397Z 
2025-02-25T14:20:45.6738541Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6738671Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6738768Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6738843Z         try:
2025-02-25T14:20:45.6739019Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6739108Z         except KeyError:
2025-02-25T14:20:45.6739270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6739352Z     
2025-02-25T14:20:45.6739457Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6739556Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6739661Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6739800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6739903Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6739997Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6740124Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6740208Z             else:
2025-02-25T14:20:45.6740308Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6740433Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6740438Z 
2025-02-25T14:20:45.6740842Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6740981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6741143Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6741224Z     ???
2025-02-25T14:20:45.6741335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6741340Z 
2025-02-25T14:20:45.6741415Z >   ???
2025-02-25T14:20:45.6741551Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6741617Z E   
2025-02-25T14:20:45.6741755Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6741865Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6741944Z E          ...
2025-02-25T14:20:45.6742035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6742176Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6742291Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6742371Z E          ...
2025-02-25T14:20:45.6742455Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6742591Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6742708Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6742712Z 
2025-02-25T14:20:45.6742802Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6743040Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-25T14:20:45.6743044Z 
2025-02-25T14:20:45.6743173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6743314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6743412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6743551Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6743684Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6743776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6743982Z err_msg = None
2025-02-25T14:20:45.6743986Z 
2025-02-25T14:20:45.6744101Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6744189Z         if err_msg is None:
2025-02-25T14:20:45.6744287Z             if left.shape != right.shape:
2025-02-25T14:20:45.6744379Z                 raise_assert_detail(
2025-02-25T14:20:45.6744529Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6744604Z                 )
2025-02-25T14:20:45.6744674Z     
2025-02-25T14:20:45.6744752Z             diff = 0
2025-02-25T14:20:45.6744865Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6744959Z                 # count up differences
2025-02-25T14:20:45.6745144Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6745223Z                     diff += 1
2025-02-25T14:20:45.6745298Z     
2025-02-25T14:20:45.6745393Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6745537Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6745708Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6745825Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6745896Z E           
2025-02-25T14:20:45.6746019Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6746290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6746636Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6746646Z 
2025-02-25T14:20:45.6746965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6746969Z 
2025-02-25T14:20:45.6747147Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6747151Z 
2025-02-25T14:20:45.6747376Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d340>
2025-02-25T14:20:45.6747548Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6747627Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6747631Z 
2025-02-25T14:20:45.6747779Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6747896Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6747989Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6748065Z         try:
2025-02-25T14:20:45.6748213Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6748301Z         except KeyError:
2025-02-25T14:20:45.6748438Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6748511Z     
2025-02-25T14:20:45.6748599Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6748701Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6748789Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6748931Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6749016Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6749112Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6749221Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6749301Z             else:
2025-02-25T14:20:45.6749396Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6749512Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6749601Z 
2025-02-25T14:20:45.6749736Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6749850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6750003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6750077Z     ???
2025-02-25T14:20:45.6750197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6750201Z 
2025-02-25T14:20:45.6750269Z >   ???
2025-02-25T14:20:45.6750402Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6750471Z E   
2025-02-25T14:20:45.6750821Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6750945Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6751053Z E          ...
2025-02-25T14:20:45.6751220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6751450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6751659Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6751781Z E          ...
2025-02-25T14:20:45.6751935Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6752144Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6752324Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6752328Z 
2025-02-25T14:20:45.6752421Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6752637Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-25T14:20:45.6752641Z 
2025-02-25T14:20:45.6752781Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6753050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6753161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6753292Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6753426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6753517Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6753600Z err_msg = None
2025-02-25T14:20:45.6753605Z 
2025-02-25T14:20:45.6753721Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6753802Z         if err_msg is None:
2025-02-25T14:20:45.6753902Z             if left.shape != right.shape:
2025-02-25T14:20:45.6753987Z                 raise_assert_detail(
2025-02-25T14:20:45.6754137Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6754212Z                 )
2025-02-25T14:20:45.6754284Z     
2025-02-25T14:20:45.6754362Z             diff = 0
2025-02-25T14:20:45.6754479Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6754566Z                 # count up differences
2025-02-25T14:20:45.6754747Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6754833Z                     diff += 1
2025-02-25T14:20:45.6754902Z     
2025-02-25T14:20:45.6755003Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6755143Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6755318Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6755429Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6755507Z E           
2025-02-25T14:20:45.6755621Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6755897Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6756302Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6756307Z 
2025-02-25T14:20:45.6756618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6756622Z 
2025-02-25T14:20:45.6756803Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6756807Z 
2025-02-25T14:20:45.6757038Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d4c0>
2025-02-25T14:20:45.6757219Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6757308Z attr = 'j_blues'
2025-02-25T14:20:45.6757311Z 
2025-02-25T14:20:45.6757460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6757586Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6757674Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6757752Z         try:
2025-02-25T14:20:45.6757892Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6757970Z         except KeyError:
2025-02-25T14:20:45.6758108Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6758188Z     
2025-02-25T14:20:45.6758274Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6758373Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6758473Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6758607Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6758813Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6758909Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6759028Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6759109Z             else:
2025-02-25T14:20:45.6759217Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6759324Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6759328Z 
2025-02-25T14:20:45.6759466Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6759586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6759729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6759808Z     ???
2025-02-25T14:20:45.6759914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6759918Z 
2025-02-25T14:20:45.6759994Z >   ???
2025-02-25T14:20:45.6760120Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6760201Z E   
2025-02-25T14:20:45.6760326Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6760443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6760637Z E          ...
2025-02-25T14:20:45.6760739Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6760880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6760998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6761078Z E          ...
2025-02-25T14:20:45.6761166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6761298Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6761406Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6761410Z 
2025-02-25T14:20:45.6761508Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6761784Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-25T14:20:45.6761789Z 
2025-02-25T14:20:45.6761927Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6762186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6762287Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6762432Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6762556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6762656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6762732Z err_msg = None
2025-02-25T14:20:45.6762736Z 
2025-02-25T14:20:45.6762852Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6762935Z         if err_msg is None:
2025-02-25T14:20:45.6763037Z             if left.shape != right.shape:
2025-02-25T14:20:45.6763136Z                 raise_assert_detail(
2025-02-25T14:20:45.6763280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6763364Z                 )
2025-02-25T14:20:45.6763432Z     
2025-02-25T14:20:45.6763509Z             diff = 0
2025-02-25T14:20:45.6763622Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6763714Z                 # count up differences
2025-02-25T14:20:45.6763882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6763965Z                     diff += 1
2025-02-25T14:20:45.6764029Z     
2025-02-25T14:20:45.6764118Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6764253Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6764424Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6764542Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6764748Z E           
2025-02-25T14:20:45.6764872Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6765136Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6765405Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6765410Z 
2025-02-25T14:20:45.6765721Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6765725Z 
2025-02-25T14:20:45.6765896Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6765901Z 
2025-02-25T14:20:45.6766128Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e240>
2025-02-25T14:20:45.6766298Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6766377Z attr = 'lines'
2025-02-25T14:20:45.6766381Z 
2025-02-25T14:20:45.6766526Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6766641Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6766736Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6766806Z         try:
2025-02-25T14:20:45.6766949Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6767025Z         except KeyError:
2025-02-25T14:20:45.6767161Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6767229Z     
2025-02-25T14:20:45.6767321Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6767417Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6767512Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6767644Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6767824Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6767922Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6768029Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6768106Z             else:
2025-02-25T14:20:45.6768202Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6768313Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6768317Z 
2025-02-25T14:20:45.6768440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6768562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6768709Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6768785Z     ???
2025-02-25T14:20:45.6768904Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6768908Z 
2025-02-25T14:20:45.6768975Z >   ???
2025-02-25T14:20:45.6769112Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6769181Z E   
2025-02-25T14:20:45.6769314Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6769421Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6769497Z E          ...
2025-02-25T14:20:45.6769619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6769855Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6770049Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6770180Z E          ...
2025-02-25T14:20:45.6770328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6770661Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6771013Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6771019Z 
2025-02-25T14:20:45.6771121Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6771451Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-25T14:20:45.6771461Z 
2025-02-25T14:20:45.6771688Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e300>
2025-02-25T14:20:45.6771862Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6771949Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6771961Z 
2025-02-25T14:20:45.6772094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6772216Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6772300Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6772378Z         try:
2025-02-25T14:20:45.6772524Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6772611Z         except KeyError:
2025-02-25T14:20:45.6772756Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6772830Z     
2025-02-25T14:20:45.6772915Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6773022Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6773116Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6773261Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6773343Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6773435Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6773541Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6773545Z 
2025-02-25T14:20:45.6773676Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6773789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6773793Z 
2025-02-25T14:20:45.6773931Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6774026Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6774134Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6774343Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6774483Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6774570Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6774671Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6774753Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6774826Z err_msg = None
2025-02-25T14:20:45.6774829Z 
2025-02-25T14:20:45.6774945Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6775026Z         if err_msg is None:
2025-02-25T14:20:45.6775123Z             if left.shape != right.shape:
2025-02-25T14:20:45.6775210Z                 raise_assert_detail(
2025-02-25T14:20:45.6775358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6775430Z                 )
2025-02-25T14:20:45.6775495Z     
2025-02-25T14:20:45.6775569Z             diff = 0
2025-02-25T14:20:45.6775684Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6775778Z                 # count up differences
2025-02-25T14:20:45.6775946Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6776029Z                     diff += 1
2025-02-25T14:20:45.6776096Z     
2025-02-25T14:20:45.6776190Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6776324Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6776493Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6776607Z E           AssertionError: Series are different
2025-02-25T14:20:45.6776676Z E           
2025-02-25T14:20:45.6776781Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6777251Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6777598Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6777938Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6777948Z 
2025-02-25T14:20:45.6778259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6778576Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-25T14:20:45.6778581Z 
2025-02-25T14:20:45.6778809Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e3c0>
2025-02-25T14:20:45.6778977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6779071Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6779075Z 
2025-02-25T14:20:45.6779209Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6779333Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6779416Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6779496Z         try:
2025-02-25T14:20:45.6779636Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6779801Z         except KeyError:
2025-02-25T14:20:45.6779942Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6780008Z     
2025-02-25T14:20:45.6780098Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6780188Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6780279Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6780414Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6780682Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6780804Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6780918Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6780923Z 
2025-02-25T14:20:45.6781054Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6781169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6781173Z 
2025-02-25T14:20:45.6781315Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6781397Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6781506Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6781583Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6781725Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6781805Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6781913Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6781993Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6782068Z err_msg = None
2025-02-25T14:20:45.6782072Z 
2025-02-25T14:20:45.6782332Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6782416Z         if err_msg is None:
2025-02-25T14:20:45.6782519Z             if left.shape != right.shape:
2025-02-25T14:20:45.6782609Z                 raise_assert_detail(
2025-02-25T14:20:45.6782757Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6782827Z                 )
2025-02-25T14:20:45.6782900Z     
2025-02-25T14:20:45.6782970Z             diff = 0
2025-02-25T14:20:45.6783082Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6783167Z                 # count up differences
2025-02-25T14:20:45.6783337Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6783421Z                     diff += 1
2025-02-25T14:20:45.6783488Z     
2025-02-25T14:20:45.6783579Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6783713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6783890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6783990Z E           AssertionError: Series are different
2025-02-25T14:20:45.6784070Z E           
2025-02-25T14:20:45.6784167Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6784539Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6784923Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6785416Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6785430Z 
2025-02-25T14:20:45.6785733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6785998Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-25T14:20:45.6786003Z 
2025-02-25T14:20:45.6786133Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6786264Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6786363Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6786504Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6786629Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6786722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6786800Z err_msg = None
2025-02-25T14:20:45.6786804Z 
2025-02-25T14:20:45.6786911Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6786997Z         if err_msg is None:
2025-02-25T14:20:45.6787090Z             if left.shape != right.shape:
2025-02-25T14:20:45.6787178Z                 raise_assert_detail(
2025-02-25T14:20:45.6787413Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6787491Z                 )
2025-02-25T14:20:45.6787564Z     
2025-02-25T14:20:45.6787634Z             diff = 0
2025-02-25T14:20:45.6787755Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6787840Z                 # count up differences
2025-02-25T14:20:45.6788012Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6788088Z                     diff += 1
2025-02-25T14:20:45.6788160Z     
2025-02-25T14:20:45.6788246Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6788384Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6788589Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6788794Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6788916Z E           
2025-02-25T14:20:45.6789107Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6789582Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6789967Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6789972Z 
2025-02-25T14:20:45.6790281Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6790285Z 
2025-02-25T14:20:45.6790456Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6790461Z 
2025-02-25T14:20:45.6790903Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e600>
2025-02-25T14:20:45.6791109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>, attr = 'nu'
2025-02-25T14:20:45.6791256Z 
2025-02-25T14:20:45.6791400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6791523Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6791607Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6791684Z         try:
2025-02-25T14:20:45.6791826Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6791904Z         except KeyError:
2025-02-25T14:20:45.6792045Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6792114Z     
2025-02-25T14:20:45.6792209Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6792302Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6792397Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6792533Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6792625Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6792712Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6792837Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6792841Z 
2025-02-25T14:20:45.6792968Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6793080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6793231Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6793299Z     ???
2025-02-25T14:20:45.6793410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6793415Z 
2025-02-25T14:20:45.6793482Z >   ???
2025-02-25T14:20:45.6793615Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6793681Z E   
2025-02-25T14:20:45.6793814Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6794045Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6794125Z E          ...
2025-02-25T14:20:45.6794217Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6794357Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6794471Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6794541Z E          ...
2025-02-25T14:20:45.6794630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6794753Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6794862Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6794866Z 
2025-02-25T14:20:45.6794954Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6795238Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-25T14:20:45.6795243Z 
2025-02-25T14:20:45.6795379Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6795502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6795611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6795743Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6795882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6795974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6796053Z err_msg = None
2025-02-25T14:20:45.6796058Z 
2025-02-25T14:20:45.6796165Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6796253Z         if err_msg is None:
2025-02-25T14:20:45.6796352Z             if left.shape != right.shape:
2025-02-25T14:20:45.6796434Z                 raise_assert_detail(
2025-02-25T14:20:45.6796588Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6796660Z                 )
2025-02-25T14:20:45.6796733Z     
2025-02-25T14:20:45.6796804Z             diff = 0
2025-02-25T14:20:45.6797011Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6797100Z                 # count up differences
2025-02-25T14:20:45.6797270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6797349Z                     diff += 1
2025-02-25T14:20:45.6797421Z     
2025-02-25T14:20:45.6797511Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6797643Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6797817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6797927Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6798001Z E           
2025-02-25T14:20:45.6798110Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6798378Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6798650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6798655Z 
2025-02-25T14:20:45.6798955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6798960Z 
2025-02-25T14:20:45.6799131Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6799217Z 
2025-02-25T14:20:45.6799442Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e6c0>
2025-02-25T14:20:45.6799615Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6799706Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6799710Z 
2025-02-25T14:20:45.6799848Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6799971Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6800055Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6800129Z         try:
2025-02-25T14:20:45.6800271Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6800359Z         except KeyError:
2025-02-25T14:20:45.6800495Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6800673Z     
2025-02-25T14:20:45.6800761Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6800858Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6800961Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6801092Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6801180Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6801274Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6801389Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6801393Z 
2025-02-25T14:20:45.6801516Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6801630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6801775Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6801851Z     ???
2025-02-25T14:20:45.6801956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6801966Z 
2025-02-25T14:20:45.6802034Z >   ???
2025-02-25T14:20:45.6802162Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6802231Z E   
2025-02-25T14:20:45.6802367Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6802480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6802705Z E          ...
2025-02-25T14:20:45.6802790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6802921Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6803031Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6803107Z E          ...
2025-02-25T14:20:45.6803189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6803316Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6803424Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6803428Z 
2025-02-25T14:20:45.6803516Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6803781Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-25T14:20:45.6803785Z 
2025-02-25T14:20:45.6803919Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6804053Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6804158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6804298Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6804423Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6804515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6804595Z err_msg = None
2025-02-25T14:20:45.6804599Z 
2025-02-25T14:20:45.6804710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6804795Z         if err_msg is None:
2025-02-25T14:20:45.6804889Z             if left.shape != right.shape:
2025-02-25T14:20:45.6804980Z                 raise_assert_detail(
2025-02-25T14:20:45.6805252Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6805331Z                 )
2025-02-25T14:20:45.6805400Z     
2025-02-25T14:20:45.6805484Z             diff = 0
2025-02-25T14:20:45.6805599Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6805686Z                 # count up differences
2025-02-25T14:20:45.6805859Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6805936Z                     diff += 1
2025-02-25T14:20:45.6806007Z     
2025-02-25T14:20:45.6806095Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6806236Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6806402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6806519Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6806587Z E           
2025-02-25T14:20:45.6806706Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6806973Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6807237Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6807243Z 
2025-02-25T14:20:45.6807565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6807572Z 
2025-02-25T14:20:45.6807891Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6807898Z 
2025-02-25T14:20:45.6808280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e780>
2025-02-25T14:20:45.6808769Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>, attr = 'f_lu'
2025-02-25T14:20:45.6808776Z 
2025-02-25T14:20:45.6808928Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6809054Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6809137Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6809209Z         try:
2025-02-25T14:20:45.6809347Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6809431Z         except KeyError:
2025-02-25T14:20:45.6809570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6809636Z     
2025-02-25T14:20:45.6809728Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6809820Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6809916Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6810045Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6810144Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6810231Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6810345Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6810349Z 
2025-02-25T14:20:45.6810478Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6810708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6810859Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6810927Z     ???
2025-02-25T14:20:45.6811050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6811054Z 
2025-02-25T14:20:45.6811122Z >   ???
2025-02-25T14:20:45.6811251Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6811317Z E   
2025-02-25T14:20:45.6811581Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6811696Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6811779Z E          ...
2025-02-25T14:20:45.6811870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6811995Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6812107Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6812176Z E          ...
2025-02-25T14:20:45.6812264Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6812385Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6812497Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6812501Z 
2025-02-25T14:20:45.6812589Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6812916Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-25T14:20:45.6812926Z 
2025-02-25T14:20:45.6813152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ed80>
2025-02-25T14:20:45.6813315Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6813416Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.6813421Z 
2025-02-25T14:20:45.6813554Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6813669Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6813753Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6813829Z         try:
2025-02-25T14:20:45.6813965Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6814052Z         except KeyError:
2025-02-25T14:20:45.6814186Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6814260Z     
2025-02-25T14:20:45.6814352Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6814442Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6814536Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6814664Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6814891Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6814978Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6815088Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6815161Z             else:
2025-02-25T14:20:45.6815260Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6815366Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6815370Z 
2025-02-25T14:20:45.6815498Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6815611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6815753Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6815827Z     ???
2025-02-25T14:20:45.6815940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6815944Z 
2025-02-25T14:20:45.6816017Z >   ???
2025-02-25T14:20:45.6816193Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.6816270Z E   
2025-02-25T14:20:45.6816435Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:20:45.6816825Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6821642Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.6826623Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.6827078Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:20:45.6827094Z 
2025-02-25T14:20:45.6827187Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6827495Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-25T14:20:45.6827500Z 
2025-02-25T14:20:45.6827625Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6827761Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6827857Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6828079Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6828212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6828310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6828388Z err_msg = None
2025-02-25T14:20:45.6828393Z 
2025-02-25T14:20:45.6828502Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6828588Z         if err_msg is None:
2025-02-25T14:20:45.6828683Z             if left.shape != right.shape:
2025-02-25T14:20:45.6828772Z                 raise_assert_detail(
2025-02-25T14:20:45.6828919Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6828995Z                 )
2025-02-25T14:20:45.6829062Z     
2025-02-25T14:20:45.6829141Z             diff = 0
2025-02-25T14:20:45.6829262Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6829356Z                 # count up differences
2025-02-25T14:20:45.6829528Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6829611Z                     diff += 1
2025-02-25T14:20:45.6829683Z     
2025-02-25T14:20:45.6829773Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6829915Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6830080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6830200Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6830271Z E           
2025-02-25T14:20:45.6830391Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6830905Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6831173Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6831327Z 
2025-02-25T14:20:45.6831656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6831660Z 
2025-02-25T14:20:45.6831847Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6831851Z 
2025-02-25T14:20:45.6832082Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ee40>
2025-02-25T14:20:45.6832271Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6832381Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.6832386Z 
2025-02-25T14:20:45.6832542Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6832667Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6832774Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6832847Z         try:
2025-02-25T14:20:45.6833009Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6833111Z         except KeyError:
2025-02-25T14:20:45.6833256Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6833350Z     
2025-02-25T14:20:45.6833445Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6833557Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6833652Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6833803Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6833895Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6834001Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6834238Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6834337Z             else:
2025-02-25T14:20:45.6834436Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6834575Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6834579Z 
2025-02-25T14:20:45.6834727Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6834863Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6835040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6835113Z     ???
2025-02-25T14:20:45.6835240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6835244Z 
2025-02-25T14:20:45.6835324Z >   ???
2025-02-25T14:20:45.6835468Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6835542Z E   
2025-02-25T14:20:45.6835688Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6835826Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6835906Z E          ...
2025-02-25T14:20:45.6836018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6836158Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6836293Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6836371Z E          ...
2025-02-25T14:20:45.6836473Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6836602Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6836722Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6836726Z 
2025-02-25T14:20:45.6836821Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6837109Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-25T14:20:45.6837114Z 
2025-02-25T14:20:45.6837269Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6837406Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6837620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6837760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6837908Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6838007Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6838105Z err_msg = None
2025-02-25T14:20:45.6838109Z 
2025-02-25T14:20:45.6838240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6838327Z         if err_msg is None:
2025-02-25T14:20:45.6838446Z             if left.shape != right.shape:
2025-02-25T14:20:45.6838538Z                 raise_assert_detail(
2025-02-25T14:20:45.6838717Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6838797Z                 )
2025-02-25T14:20:45.6838889Z     
2025-02-25T14:20:45.6838970Z             diff = 0
2025-02-25T14:20:45.6839106Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6839207Z                 # count up differences
2025-02-25T14:20:45.6839398Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6839508Z                     diff += 1
2025-02-25T14:20:45.6839579Z     
2025-02-25T14:20:45.6839693Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6839836Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6840027Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6840140Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6840248Z E           
2025-02-25T14:20:45.6840366Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6840906Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6841205Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6841211Z 
2025-02-25T14:20:45.6841517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6841522Z 
2025-02-25T14:20:45.6841716Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6841723Z 
2025-02-25T14:20:45.6841945Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ef00>
2025-02-25T14:20:45.6842135Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6842242Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6842247Z 
2025-02-25T14:20:45.6842390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6842521Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6842612Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6842721Z         try:
2025-02-25T14:20:45.6842869Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6842977Z         except KeyError:
2025-02-25T14:20:45.6843117Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6843212Z     
2025-02-25T14:20:45.6843319Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6843417Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6843541Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6843682Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6843787Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6844014Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6844151Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6844229Z             else:
2025-02-25T14:20:45.6844347Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6844459Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6844463Z 
2025-02-25T14:20:45.6844608Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6844742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6844897Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6844986Z     ???
2025-02-25T14:20:45.6845149Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6845173Z 
2025-02-25T14:20:45.6845338Z >   ???
2025-02-25T14:20:45.6845558Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6845718Z E   
2025-02-25T14:20:45.6845943Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6846153Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6846284Z E          ...
2025-02-25T14:20:45.6846405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6846560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6846678Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6846772Z E          ...
2025-02-25T14:20:45.6846857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6846999Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6847110Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6847115Z 
2025-02-25T14:20:45.6847367Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6847649Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-25T14:20:45.6847664Z 
2025-02-25T14:20:45.6847816Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6847966Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6848069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6848216Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6848343Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6848459Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6848545Z err_msg = None
2025-02-25T14:20:45.6848548Z 
2025-02-25T14:20:45.6848692Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6848790Z         if err_msg is None:
2025-02-25T14:20:45.6848906Z             if left.shape != right.shape:
2025-02-25T14:20:45.6849011Z                 raise_assert_detail(
2025-02-25T14:20:45.6849173Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6849273Z                 )
2025-02-25T14:20:45.6849348Z     
2025-02-25T14:20:45.6849442Z             diff = 0
2025-02-25T14:20:45.6849559Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6849674Z                 # count up differences
2025-02-25T14:20:45.6849854Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6849960Z                     diff += 1
2025-02-25T14:20:45.6850034Z     
2025-02-25T14:20:45.6850145Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6850298Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6850485Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6850721Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6850805Z E           
2025-02-25T14:20:45.6851077Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6851347Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6851623Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6851633Z 
2025-02-25T14:20:45.6851968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6851972Z 
2025-02-25T14:20:45.6852150Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6852154Z 
2025-02-25T14:20:45.6852431Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70efc0>
2025-02-25T14:20:45.6852602Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6852698Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6852703Z 
2025-02-25T14:20:45.6852863Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6852982Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6853088Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6853168Z         try:
2025-02-25T14:20:45.6853338Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6853429Z         except KeyError:
2025-02-25T14:20:45.6853728Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6853813Z     
2025-02-25T14:20:45.6853923Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6854029Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6854143Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6854296Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6854391Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6854499Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6854617Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6854705Z             else:
2025-02-25T14:20:45.6854805Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6854932Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6854936Z 
2025-02-25T14:20:45.6855069Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6855218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6855370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6855471Z     ???
2025-02-25T14:20:45.6855620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6855624Z 
2025-02-25T14:20:45.6855698Z >   ???
2025-02-25T14:20:45.6855849Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6855927Z E   
2025-02-25T14:20:45.6856083Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6856209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6856306Z E          ...
2025-02-25T14:20:45.6856405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6856558Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6856674Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6856765Z E          ...
2025-02-25T14:20:45.6856876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6857010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6857136Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6857248Z 
2025-02-25T14:20:45.6857351Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6857650Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-25T14:20:45.6857655Z 
2025-02-25T14:20:45.6857791Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6857951Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6858076Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6858219Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6858376Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6858487Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6858581Z err_msg = None
2025-02-25T14:20:45.6858585Z 
2025-02-25T14:20:45.6858713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6858819Z         if err_msg is None:
2025-02-25T14:20:45.6858925Z             if left.shape != right.shape:
2025-02-25T14:20:45.6859031Z                 raise_assert_detail(
2025-02-25T14:20:45.6859185Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6859281Z                 )
2025-02-25T14:20:45.6859373Z     
2025-02-25T14:20:45.6859454Z             diff = 0
2025-02-25T14:20:45.6859603Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6859695Z                 # count up differences
2025-02-25T14:20:45.6859888Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6859970Z                     diff += 1
2025-02-25T14:20:45.6860154Z     
2025-02-25T14:20:45.6860255Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6860417Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6860703Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6860835Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6860928Z E           
2025-02-25T14:20:45.6861045Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6861332Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6861609Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6861621Z 
2025-02-25T14:20:45.6861945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6861950Z 
2025-02-25T14:20:45.6862148Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6862151Z 
2025-02-25T14:20:45.6862379Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70f140>
2025-02-25T14:20:45.6862562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6862646Z attr = 'j_blues'
2025-02-25T14:20:45.6862651Z 
2025-02-25T14:20:45.6862811Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6862932Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6863046Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6863134Z         try:
2025-02-25T14:20:45.6863283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6863512Z         except KeyError:
2025-02-25T14:20:45.6863656Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6863740Z     
2025-02-25T14:20:45.6863833Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6863950Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6864083Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6864327Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6864485Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6864665Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6864854Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6864976Z             else:
2025-02-25T14:20:45.6865143Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6865333Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6865338Z 
2025-02-25T14:20:45.6865480Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6865603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6865774Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6865851Z     ???
2025-02-25T14:20:45.6865980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6865984Z 
2025-02-25T14:20:45.6866064Z >   ???
2025-02-25T14:20:45.6866196Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6866279Z E   
2025-02-25T14:20:45.6866409Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6866541Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6866620Z E          ...
2025-02-25T14:20:45.6866723Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6867008Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6867142Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6867224Z E          ...
2025-02-25T14:20:45.6867326Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6867451Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6867575Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6867579Z 
2025-02-25T14:20:45.6867686Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6867951Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-25T14:20:45.6867956Z 
2025-02-25T14:20:45.6868106Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6868239Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6868347Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6868493Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6868633Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6868753Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6868835Z err_msg = None
2025-02-25T14:20:45.6868839Z 
2025-02-25T14:20:45.6868963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6869049Z         if err_msg is None:
2025-02-25T14:20:45.6869164Z             if left.shape != right.shape:
2025-02-25T14:20:45.6869253Z                 raise_assert_detail(
2025-02-25T14:20:45.6869414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6869487Z                 )
2025-02-25T14:20:45.6869570Z     
2025-02-25T14:20:45.6869646Z             diff = 0
2025-02-25T14:20:45.6869783Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6869891Z                 # count up differences
2025-02-25T14:20:45.6870067Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6870266Z                     diff += 1
2025-02-25T14:20:45.6870338Z     
2025-02-25T14:20:45.6870447Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6870794Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6871003Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6871119Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6871214Z E           
2025-02-25T14:20:45.6871335Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6871647Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6871928Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6871941Z 
2025-02-25T14:20:45.6872254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6872258Z 
2025-02-25T14:20:45.6872458Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6872462Z 
2025-02-25T14:20:45.6872718Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70fec0>
2025-02-25T14:20:45.6872893Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6873125Z attr = 'lines'
2025-02-25T14:20:45.6873132Z 
2025-02-25T14:20:45.6873282Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6873424Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6873525Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6873634Z         try:
2025-02-25T14:20:45.6873785Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6873894Z         except KeyError:
2025-02-25T14:20:45.6874052Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6874130Z     
2025-02-25T14:20:45.6874240Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6874350Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6874462Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6874606Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6874716Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6874816Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6874965Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6875050Z             else:
2025-02-25T14:20:45.6875170Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6875314Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6875318Z 
2025-02-25T14:20:45.6875454Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6875595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6875745Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6875841Z     ???
2025-02-25T14:20:45.6875968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6875972Z 
2025-02-25T14:20:45.6876060Z >   ???
2025-02-25T14:20:45.6876192Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6876283Z E   
2025-02-25T14:20:45.6876421Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6876567Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6876670Z E          ...
2025-02-25T14:20:45.6876768Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6877048Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6877165Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6877257Z E          ...
2025-02-25T14:20:45.6877349Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6877500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6877620Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6877624Z 
2025-02-25T14:20:45.6877742Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6878064Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-25T14:20:45.6878069Z 
2025-02-25T14:20:45.6878310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ff80>
2025-02-25T14:20:45.6878496Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6878599Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6878603Z 
2025-02-25T14:20:45.6878759Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6878885Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6878991Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6879070Z         try:
2025-02-25T14:20:45.6879242Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6879349Z         except KeyError:
2025-02-25T14:20:45.6879493Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6879592Z     
2025-02-25T14:20:45.6879684Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6879800Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6879901Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6880162Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6880264Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6880371Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6880499Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6880603Z 
2025-02-25T14:20:45.6880751Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6880894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6880898Z 
2025-02-25T14:20:45.6881048Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6881153Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6881290Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6881395Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6881546Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6881657Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6881771Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6881871Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6881975Z err_msg = None
2025-02-25T14:20:45.6881979Z 
2025-02-25T14:20:45.6882095Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6882207Z         if err_msg is None:
2025-02-25T14:20:45.6882304Z             if left.shape != right.shape:
2025-02-25T14:20:45.6882406Z                 raise_assert_detail(
2025-02-25T14:20:45.6882565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6882657Z                 )
2025-02-25T14:20:45.6882729Z     
2025-02-25T14:20:45.6882829Z             diff = 0
2025-02-25T14:20:45.6882953Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6883068Z                 # count up differences
2025-02-25T14:20:45.6883290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6883439Z                     diff += 1
2025-02-25T14:20:45.6883574Z     
2025-02-25T14:20:45.6883910Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6884164Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6884467Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6884636Z E           AssertionError: Series are different
2025-02-25T14:20:45.6884719Z E           
2025-02-25T14:20:45.6884843Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6885260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6885600Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6885955Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6885961Z 
2025-02-25T14:20:45.6886430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6886738Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-25T14:20:45.6886751Z 
2025-02-25T14:20:45.6886995Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c080>
2025-02-25T14:20:45.6887173Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6887283Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6887287Z 
2025-02-25T14:20:45.6887442Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6887569Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6887672Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6887752Z         try:
2025-02-25T14:20:45.6887909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6887994Z         except KeyError:
2025-02-25T14:20:45.6888155Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6888233Z     
2025-02-25T14:20:45.6888337Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6888437Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6888559Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6888697Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6888798Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6888907Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6889031Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6889035Z 
2025-02-25T14:20:45.6889174Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6889294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6889298Z 
2025-02-25T14:20:45.6889453Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6889547Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6889687Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6889777Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6890078Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6890193Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6890301Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6890399Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6890488Z err_msg = None
2025-02-25T14:20:45.6890492Z 
2025-02-25T14:20:45.6890733Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6890821Z         if err_msg is None:
2025-02-25T14:20:45.6890941Z             if left.shape != right.shape:
2025-02-25T14:20:45.6891035Z                 raise_assert_detail(
2025-02-25T14:20:45.6891199Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6891294Z                 )
2025-02-25T14:20:45.6891376Z     
2025-02-25T14:20:45.6891468Z             diff = 0
2025-02-25T14:20:45.6891588Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6891701Z                 # count up differences
2025-02-25T14:20:45.6891880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6891983Z                     diff += 1
2025-02-25T14:20:45.6892061Z     
2025-02-25T14:20:45.6892168Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6892316Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6892511Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6892621Z E           AssertionError: Series are different
2025-02-25T14:20:45.6892712Z E           
2025-02-25T14:20:45.6892827Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6893346Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6893761Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6894165Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6894174Z 
2025-02-25T14:20:45.6894492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6894755Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-25T14:20:45.6894764Z 
2025-02-25T14:20:45.6894913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6895051Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6895173Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6895310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6895460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6895561Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6895782Z err_msg = None
2025-02-25T14:20:45.6895787Z 
2025-02-25T14:20:45.6895909Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6896013Z         if err_msg is None:
2025-02-25T14:20:45.6896119Z             if left.shape != right.shape:
2025-02-25T14:20:45.6896208Z                 raise_assert_detail(
2025-02-25T14:20:45.6896378Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6896459Z                 )
2025-02-25T14:20:45.6896552Z     
2025-02-25T14:20:45.6896633Z             diff = 0
2025-02-25T14:20:45.6896774Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6896867Z                 # count up differences
2025-02-25T14:20:45.6897062Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6897146Z                     diff += 1
2025-02-25T14:20:45.6897235Z     
2025-02-25T14:20:45.6897328Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6897482Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6897671Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6897794Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6897889Z E           
2025-02-25T14:20:45.6898007Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6898290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6898665Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6898679Z 
2025-02-25T14:20:45.6898983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6898987Z 
2025-02-25T14:20:45.6899180Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6899184Z 
2025-02-25T14:20:45.6899413Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c2c0>
2025-02-25T14:20:45.6899631Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>, attr = 'nu'
2025-02-25T14:20:45.6899635Z 
2025-02-25T14:20:45.6899789Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6899910Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6900007Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6900084Z         try:
2025-02-25T14:20:45.6900244Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6900333Z         except KeyError:
2025-02-25T14:20:45.6900490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6900661Z     
2025-02-25T14:20:45.6900776Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6900881Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6900994Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6901135Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6901289Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6901480Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6901678Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6901684Z 
2025-02-25T14:20:45.6901934Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6902131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6902405Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6902665Z     ???
2025-02-25T14:20:45.6902799Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6902803Z 
2025-02-25T14:20:45.6902876Z >   ???
2025-02-25T14:20:45.6903023Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6903109Z E   
2025-02-25T14:20:45.6903244Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6903369Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6903448Z E          ...
2025-02-25T14:20:45.6903560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6903698Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6903840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6903916Z E          ...
2025-02-25T14:20:45.6904027Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6904172Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6904306Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6904310Z 
2025-02-25T14:20:45.6904416Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6904705Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-25T14:20:45.6904710Z 
2025-02-25T14:20:45.6904858Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6904999Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6905121Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6905256Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6905555Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6905680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6905772Z err_msg = None
2025-02-25T14:20:45.6905777Z 
2025-02-25T14:20:45.6905912Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6905999Z         if err_msg is None:
2025-02-25T14:20:45.6906123Z             if left.shape != right.shape:
2025-02-25T14:20:45.6906219Z                 raise_assert_detail(
2025-02-25T14:20:45.6906393Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6906472Z                 )
2025-02-25T14:20:45.6906570Z     
2025-02-25T14:20:45.6906663Z             diff = 0
2025-02-25T14:20:45.6906798Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6906921Z                 # count up differences
2025-02-25T14:20:45.6907111Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6907215Z                     diff += 1
2025-02-25T14:20:45.6907289Z     
2025-02-25T14:20:45.6907409Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6907558Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6907751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6907871Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6907970Z E           
2025-02-25T14:20:45.6908090Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6908391Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6908687Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6908790Z 
2025-02-25T14:20:45.6909100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6909104Z 
2025-02-25T14:20:45.6909297Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6909301Z 
2025-02-25T14:20:45.6909545Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c380>
2025-02-25T14:20:45.6909720Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6909832Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6909836Z 
2025-02-25T14:20:45.6909981Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6910125Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6910219Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6910327Z         try:
2025-02-25T14:20:45.6910476Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6910803Z         except KeyError:
2025-02-25T14:20:45.6910975Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6911057Z     
2025-02-25T14:20:45.6911175Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6911283Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6911398Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6911537Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6911652Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6911755Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6911887Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6911892Z 
2025-02-25T14:20:45.6912165Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6912322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6912490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6912565Z     ???
2025-02-25T14:20:45.6912703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6912708Z 
2025-02-25T14:20:45.6912784Z >   ???
2025-02-25T14:20:45.6912943Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6913027Z E   
2025-02-25T14:20:45.6913181Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6913301Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6913403Z E          ...
2025-02-25T14:20:45.6913501Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6913652Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6913796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6913874Z E          ...
2025-02-25T14:20:45.6913984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6914123Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6914264Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6914268Z 
2025-02-25T14:20:45.6914372Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6914662Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-25T14:20:45.6914666Z 
2025-02-25T14:20:45.6914809Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6914955Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6915078Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6915235Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6915385Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6915634Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6915729Z err_msg = None
2025-02-25T14:20:45.6915733Z 
2025-02-25T14:20:45.6915851Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6915972Z         if err_msg is None:
2025-02-25T14:20:45.6916095Z             if left.shape != right.shape:
2025-02-25T14:20:45.6916196Z                 raise_assert_detail(
2025-02-25T14:20:45.6916363Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6916445Z                 )
2025-02-25T14:20:45.6916549Z     
2025-02-25T14:20:45.6916638Z             diff = 0
2025-02-25T14:20:45.6916777Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6916879Z                 # count up differences
2025-02-25T14:20:45.6917090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6917175Z                     diff += 1
2025-02-25T14:20:45.6917282Z     
2025-02-25T14:20:45.6917384Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6917553Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6917751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6917865Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6917966Z E           
2025-02-25T14:20:45.6918088Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6918492Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6918761Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6918791Z 
2025-02-25T14:20:45.6919098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6919102Z 
2025-02-25T14:20:45.6919309Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6919313Z 
2025-02-25T14:20:45.6919545Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c440>
2025-02-25T14:20:45.6919784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>, attr = 'f_lu'
2025-02-25T14:20:45.6919788Z 
2025-02-25T14:20:45.6919942Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6920068Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6920183Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6920276Z         try:
2025-02-25T14:20:45.6920446Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6920644Z         except KeyError:
2025-02-25T14:20:45.6920874Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6921018Z     
2025-02-25T14:20:45.6921198Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6921369Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6921546Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6921781Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6921966Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6922105Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6922231Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6922249Z 
2025-02-25T14:20:45.6922401Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6922527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6922858Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6922939Z     ???
2025-02-25T14:20:45.6923081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6923086Z 
2025-02-25T14:20:45.6923167Z >   ???
2025-02-25T14:20:45.6923325Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6923416Z E   
2025-02-25T14:20:45.6923555Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6923694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6923776Z E          ...
2025-02-25T14:20:45.6923887Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6924026Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6924157Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6924232Z E          ...
2025-02-25T14:20:45.6924340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6924483Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6924606Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6924610Z 
2025-02-25T14:20:45.6924721Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6925037Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-25T14:20:45.6925041Z 
2025-02-25T14:20:45.6925287Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ca40>
2025-02-25T14:20:45.6925462Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6925579Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.6925583Z 
2025-02-25T14:20:45.6925862Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6926003Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6926109Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6926196Z         try:
2025-02-25T14:20:45.6926542Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6926669Z         except KeyError:
2025-02-25T14:20:45.6926895Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6927003Z     
2025-02-25T14:20:45.6927196Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6927655Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6927853Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6928033Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6940947Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6941130Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6941345Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6941495Z             else:
2025-02-25T14:20:45.6941663Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6941866Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6941886Z 
2025-02-25T14:20:45.6942138Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6942347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6942563Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6942640Z     ???
2025-02-25T14:20:45.6942783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6942788Z 
2025-02-25T14:20:45.6942865Z >   ???
2025-02-25T14:20:45.6943076Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.6943152Z E   
2025-02-25T14:20:45.6943343Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.6943775Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6948998Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.6954159Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.6954377Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.6954517Z 
2025-02-25T14:20:45.6954642Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6954950Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-25T14:20:45.6954954Z 
2025-02-25T14:20:45.6955107Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6955252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6955374Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6955531Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6955663Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6955777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6955863Z err_msg = None
2025-02-25T14:20:45.6955874Z 
2025-02-25T14:20:45.6956017Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6956106Z         if err_msg is None:
2025-02-25T14:20:45.6956236Z             if left.shape != right.shape:
2025-02-25T14:20:45.6956329Z                 raise_assert_detail(
2025-02-25T14:20:45.6956506Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6956598Z                 )
2025-02-25T14:20:45.6956672Z     
2025-02-25T14:20:45.6956763Z             diff = 0
2025-02-25T14:20:45.6956892Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6957015Z                 # count up differences
2025-02-25T14:20:45.6957194Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6957453Z                     diff += 1
2025-02-25T14:20:45.6957534Z     
2025-02-25T14:20:45.6957650Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6957798Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6957993Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6958129Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6958207Z E           
2025-02-25T14:20:45.6958343Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6958620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6958904Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6958919Z 
2025-02-25T14:20:45.6959257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6959262Z 
2025-02-25T14:20:45.6959574Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6959582Z 
2025-02-25T14:20:45.6959998Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cb00>
2025-02-25T14:20:45.6960287Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6960471Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.6960477Z 
2025-02-25T14:20:45.6960857Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6961087Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6961257Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6961384Z         try:
2025-02-25T14:20:45.6961650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6961982Z         except KeyError:
2025-02-25T14:20:45.6962238Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6962365Z     
2025-02-25T14:20:45.6962539Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6962704Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6962892Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6963035Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6963143Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6963252Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6963377Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6963463Z             else:
2025-02-25T14:20:45.6963570Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6963699Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6963703Z 
2025-02-25T14:20:45.6963831Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6963982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6964135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6964226Z     ???
2025-02-25T14:20:45.6964340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6964356Z 
2025-02-25T14:20:45.6964435Z >   ???
2025-02-25T14:20:45.6964584Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6964660Z E   
2025-02-25T14:20:45.6964800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6964919Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6965015Z E          ...
2025-02-25T14:20:45.6965251Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6965412Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6965536Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6965632Z E          ...
2025-02-25T14:20:45.6965727Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6965867Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6965984Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6965989Z 
2025-02-25T14:20:45.6966079Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6966364Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-25T14:20:45.6966369Z 
2025-02-25T14:20:45.6966499Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6966634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6966745Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6966893Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6967045Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6967144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6967242Z err_msg = None
2025-02-25T14:20:45.6967246Z 
2025-02-25T14:20:45.6967362Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6967470Z         if err_msg is None:
2025-02-25T14:20:45.6967575Z             if left.shape != right.shape:
2025-02-25T14:20:45.6967677Z                 raise_assert_detail(
2025-02-25T14:20:45.6967830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6967924Z                 )
2025-02-25T14:20:45.6967994Z     
2025-02-25T14:20:45.6968086Z             diff = 0
2025-02-25T14:20:45.6968225Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6968317Z                 # count up differences
2025-02-25T14:20:45.6968508Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6968692Z                     diff += 1
2025-02-25T14:20:45.6968775Z     
2025-02-25T14:20:45.6968871Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6969026Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6969198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6969329Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6969408Z E           
2025-02-25T14:20:45.6969546Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6969834Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6970103Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6970108Z 
2025-02-25T14:20:45.6970430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6970434Z 
2025-02-25T14:20:45.6970837Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6970843Z 
2025-02-25T14:20:45.6971077Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cbc0>
2025-02-25T14:20:45.6971447Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6971541Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6971546Z 
2025-02-25T14:20:45.6971703Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6971837Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6971946Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6972024Z         try:
2025-02-25T14:20:45.6972189Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6972306Z         except KeyError:
2025-02-25T14:20:45.6972453Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6972542Z     
2025-02-25T14:20:45.6972636Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6972752Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6972849Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6973001Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6973096Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6973213Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6973330Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6973428Z             else:
2025-02-25T14:20:45.6973543Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6973667Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6973671Z 
2025-02-25T14:20:45.6973823Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6973943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6974117Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6974191Z     ???
2025-02-25T14:20:45.6974322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6974327Z 
2025-02-25T14:20:45.6974405Z >   ???
2025-02-25T14:20:45.6974554Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6974626Z E   
2025-02-25T14:20:45.6974785Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6974923Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6975133Z E          ...
2025-02-25T14:20:45.6975239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6975375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6975506Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6975587Z E          ...
2025-02-25T14:20:45.6975695Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6975823Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6975952Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6975956Z 
2025-02-25T14:20:45.6976068Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6976345Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-25T14:20:45.6976349Z 
2025-02-25T14:20:45.6976507Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6976643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6976765Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6976904Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6977055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6977158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6977265Z err_msg = None
2025-02-25T14:20:45.6977269Z 
2025-02-25T14:20:45.6977398Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6977484Z         if err_msg is None:
2025-02-25T14:20:45.6977603Z             if left.shape != right.shape:
2025-02-25T14:20:45.6977695Z                 raise_assert_detail(
2025-02-25T14:20:45.6977952Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6978035Z                 )
2025-02-25T14:20:45.6978121Z     
2025-02-25T14:20:45.6978210Z             diff = 0
2025-02-25T14:20:45.6978341Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6978430Z                 # count up differences
2025-02-25T14:20:45.6978624Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6978723Z                     diff += 1
2025-02-25T14:20:45.6978799Z     
2025-02-25T14:20:45.6978909Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6979053Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6979232Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6979350Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6979442Z E           
2025-02-25T14:20:45.6979564Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6980239Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6980675Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6980681Z 
2025-02-25T14:20:45.6980999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6981004Z 
2025-02-25T14:20:45.6981207Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6981211Z 
2025-02-25T14:20:45.6981461Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cc80>
2025-02-25T14:20:45.6981793Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6981897Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6981901Z 
2025-02-25T14:20:45.6982043Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6982176Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6982270Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6982358Z         try:
2025-02-25T14:20:45.6982500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6982601Z         except KeyError:
2025-02-25T14:20:45.6982758Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6982835Z     
2025-02-25T14:20:45.6982944Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6983046Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6983159Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6983301Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6983411Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6983517Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6983654Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6983729Z             else:
2025-02-25T14:20:45.6983844Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6983960Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6983977Z 
2025-02-25T14:20:45.6984108Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6984240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6984396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6984496Z     ???
2025-02-25T14:20:45.6984744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6984749Z 
2025-02-25T14:20:45.6984849Z >   ???
2025-02-25T14:20:45.6984982Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6985120Z E   
2025-02-25T14:20:45.6985376Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6985590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6985736Z E          ...
2025-02-25T14:20:45.6985895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6986137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6986329Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6986456Z E          ...
2025-02-25T14:20:45.6986610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6986841Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6987020Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6987044Z 
2025-02-25T14:20:45.6987217Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6987676Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-25T14:20:45.6987707Z 
2025-02-25T14:20:45.6987931Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6988170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6988341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6988604Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6988797Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6988912Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6988992Z err_msg = None
2025-02-25T14:20:45.6988996Z 
2025-02-25T14:20:45.6989142Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6989242Z         if err_msg is None:
2025-02-25T14:20:45.6989348Z             if left.shape != right.shape:
2025-02-25T14:20:45.6989571Z                 raise_assert_detail(
2025-02-25T14:20:45.6989727Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6989809Z                 )
2025-02-25T14:20:45.6989880Z     
2025-02-25T14:20:45.6989979Z             diff = 0
2025-02-25T14:20:45.6990098Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6990207Z                 # count up differences
2025-02-25T14:20:45.6990389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6990495Z                     diff += 1
2025-02-25T14:20:45.6990803Z     
2025-02-25T14:20:45.6990902Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6991068Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6991259Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6991392Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6991475Z E           
2025-02-25T14:20:45.6991606Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6991879Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6992157Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6992296Z 
2025-02-25T14:20:45.6992628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6992640Z 
2025-02-25T14:20:45.6992819Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6992823Z 
2025-02-25T14:20:45.6993077Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ce00>
2025-02-25T14:20:45.6993277Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6993360Z attr = 'j_blues'
2025-02-25T14:20:45.6993364Z 
2025-02-25T14:20:45.6993516Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6993640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6993749Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6993824Z         try:
2025-02-25T14:20:45.6993989Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6994074Z         except KeyError:
2025-02-25T14:20:45.6994250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6994323Z     
2025-02-25T14:20:45.6994425Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6994537Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6994629Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6994782Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6994878Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6994992Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6995109Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6995203Z             else:
2025-02-25T14:20:45.6995305Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6995429Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6995433Z 
2025-02-25T14:20:45.6995562Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6995710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6995875Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6996084Z     ???
2025-02-25T14:20:45.6996210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6996214Z 
2025-02-25T14:20:45.6996289Z >   ???
2025-02-25T14:20:45.6996448Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6996527Z E   
2025-02-25T14:20:45.6996672Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6996791Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6996887Z E          ...
2025-02-25T14:20:45.6996981Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6997126Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6997259Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6997336Z E          ...
2025-02-25T14:20:45.6997461Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6997592Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6997726Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6997731Z 
2025-02-25T14:20:45.6997829Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6998057Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-25T14:20:45.6998061Z 
2025-02-25T14:20:45.6998196Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6998350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6998474Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6998614Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6998857Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6998962Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6999061Z err_msg = None
2025-02-25T14:20:45.6999074Z 
2025-02-25T14:20:45.6999195Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6999297Z         if err_msg is None:
2025-02-25T14:20:45.6999399Z             if left.shape != right.shape:
2025-02-25T14:20:45.6999507Z                 raise_assert_detail(
2025-02-25T14:20:45.6999672Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6999746Z                 )
2025-02-25T14:20:45.6999847Z     
2025-02-25T14:20:45.6999924Z             diff = 0
2025-02-25T14:20:45.7000055Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7000148Z                 # count up differences
2025-02-25T14:20:45.7000339Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7000422Z                     diff += 1
2025-02-25T14:20:45.7000614Z     
2025-02-25T14:20:45.7000709Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7000861Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7001051Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7001166Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7001258Z E           
2025-02-25T14:20:45.7001375Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7001662Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7001936Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7002091Z 
2025-02-25T14:20:45.7002399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7002403Z 
2025-02-25T14:20:45.7002580Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7002584Z 
2025-02-25T14:20:45.7002806Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72db80>
2025-02-25T14:20:45.7002978Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7003053Z attr = 'lines'
2025-02-25T14:20:45.7003057Z 
2025-02-25T14:20:45.7003196Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7003324Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7003418Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7003501Z         try:
2025-02-25T14:20:45.7003645Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7003745Z         except KeyError:
2025-02-25T14:20:45.7003887Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7003974Z     
2025-02-25T14:20:45.7004069Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7004255Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7004409Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7004651Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7004822Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7004981Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7005176Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7005306Z             else:
2025-02-25T14:20:45.7005482Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7005851Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7005858Z 
2025-02-25T14:20:45.7006096Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7006305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7006568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7006692Z     ???
2025-02-25T14:20:45.7006903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7006910Z 
2025-02-25T14:20:45.7007055Z >   ???
2025-02-25T14:20:45.7007279Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7007422Z E   
2025-02-25T14:20:45.7007583Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7007720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7007799Z E          ...
2025-02-25T14:20:45.7007902Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7008044Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7008169Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7008246Z E          ...
2025-02-25T14:20:45.7008353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7008495Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7008602Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7008606Z 
2025-02-25T14:20:45.7008707Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7008942Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-25T14:20:45.7008947Z 
2025-02-25T14:20:45.7009184Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72dc40>
2025-02-25T14:20:45.7009348Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7009445Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7009449Z 
2025-02-25T14:20:45.7009610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7009728Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7009964Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7010039Z         try:
2025-02-25T14:20:45.7010195Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7010284Z         except KeyError:
2025-02-25T14:20:45.7010434Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7010629Z     
2025-02-25T14:20:45.7010741Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7010840Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7010944Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7011075Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7011177Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7011285Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7011401Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7011406Z 
2025-02-25T14:20:45.7011544Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7011653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7011666Z 
2025-02-25T14:20:45.7011810Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7011897Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7012031Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7012135Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7012278Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7012377Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7012484Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7012580Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7012795Z err_msg = None
2025-02-25T14:20:45.7012800Z 
2025-02-25T14:20:45.7012932Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7013018Z         if err_msg is None:
2025-02-25T14:20:45.7013139Z             if left.shape != right.shape:
2025-02-25T14:20:45.7013231Z                 raise_assert_detail(
2025-02-25T14:20:45.7013398Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7013488Z                 )
2025-02-25T14:20:45.7013562Z     
2025-02-25T14:20:45.7013655Z             diff = 0
2025-02-25T14:20:45.7013772Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7013878Z                 # count up differences
2025-02-25T14:20:45.7014056Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7014146Z                     diff += 1
2025-02-25T14:20:45.7014218Z     
2025-02-25T14:20:45.7014323Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7014469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7014657Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7014785Z E           AssertionError: Series are different
2025-02-25T14:20:45.7014858Z E           
2025-02-25T14:20:45.7014974Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7015350Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7015708Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7016185Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7016190Z 
2025-02-25T14:20:45.7016503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7016752Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-25T14:20:45.7016756Z 
2025-02-25T14:20:45.7016991Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72dd00>
2025-02-25T14:20:45.7017176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7017286Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7017296Z 
2025-02-25T14:20:45.7017439Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7017566Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7017652Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7017738Z         try:
2025-02-25T14:20:45.7017883Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7017979Z         except KeyError:
2025-02-25T14:20:45.7018119Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7018209Z     
2025-02-25T14:20:45.7018313Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7018409Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7018517Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7018746Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7018852Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7018945Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7019076Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7019081Z 
2025-02-25T14:20:45.7019206Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7019326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7019331Z 
2025-02-25T14:20:45.7019482Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7019572Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7019702Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7019789Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7019935Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7020033Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7020158Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7020251Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7020343Z err_msg = None
2025-02-25T14:20:45.7020347Z 
2025-02-25T14:20:45.7020463Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7020664Z         if err_msg is None:
2025-02-25T14:20:45.7020778Z             if left.shape != right.shape:
2025-02-25T14:20:45.7020868Z                 raise_assert_detail(
2025-02-25T14:20:45.7021026Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7021098Z                 )
2025-02-25T14:20:45.7021181Z     
2025-02-25T14:20:45.7021257Z             diff = 0
2025-02-25T14:20:45.7021386Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7021479Z                 # count up differences
2025-02-25T14:20:45.7021675Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7021753Z                     diff += 1
2025-02-25T14:20:45.7021836Z     
2025-02-25T14:20:45.7022067Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7022212Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7022401Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7022515Z E           AssertionError: Series are different
2025-02-25T14:20:45.7022603Z E           
2025-02-25T14:20:45.7022714Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7023112Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7023509Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7024145Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7024155Z 
2025-02-25T14:20:45.7024873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7025097Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-25T14:20:45.7025107Z 
2025-02-25T14:20:45.7025243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7025384Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7025486Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7025638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7025763Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7025876Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7025965Z err_msg = None
2025-02-25T14:20:45.7025969Z 
2025-02-25T14:20:45.7026084Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7026185Z         if err_msg is None:
2025-02-25T14:20:45.7026285Z             if left.shape != right.shape:
2025-02-25T14:20:45.7026389Z                 raise_assert_detail(
2025-02-25T14:20:45.7026534Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7026625Z                 )
2025-02-25T14:20:45.7026697Z     
2025-02-25T14:20:45.7026795Z             diff = 0
2025-02-25T14:20:45.7026914Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7027025Z                 # count up differences
2025-02-25T14:20:45.7027219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7027309Z                     diff += 1
2025-02-25T14:20:45.7027401Z     
2025-02-25T14:20:45.7027499Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7027659Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7027840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7027973Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7028155Z E           
2025-02-25T14:20:45.7028297Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7028569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7028858Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7028863Z 
2025-02-25T14:20:45.7029183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7029193Z 
2025-02-25T14:20:45.7029369Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7029394Z 
2025-02-25T14:20:45.7029625Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72df40>
2025-02-25T14:20:45.7029845Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>, attr = 'nu'
2025-02-25T14:20:45.7029849Z 
2025-02-25T14:20:45.7029989Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7030116Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7030206Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7030296Z         try:
2025-02-25T14:20:45.7030445Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7030759Z         except KeyError:
2025-02-25T14:20:45.7031100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7031189Z     
2025-02-25T14:20:45.7031289Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7031396Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7031516Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7031661Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7031764Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7031860Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7031993Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7031998Z 
2025-02-25T14:20:45.7032132Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7032267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7032422Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7032520Z     ???
2025-02-25T14:20:45.7032660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7032664Z 
2025-02-25T14:20:45.7032740Z >   ???
2025-02-25T14:20:45.7032872Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7032947Z E   
2025-02-25T14:20:45.7033084Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7033195Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7033271Z E          ...
2025-02-25T14:20:45.7033361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7033502Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7033616Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7033697Z E          ...
2025-02-25T14:20:45.7033799Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7033933Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7034067Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7034072Z 
2025-02-25T14:20:45.7034166Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7034396Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-25T14:20:45.7034532Z 
2025-02-25T14:20:45.7034666Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7034810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7034928Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7035072Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7035204Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7035305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7035400Z err_msg = None
2025-02-25T14:20:45.7035404Z 
2025-02-25T14:20:45.7035534Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7035640Z         if err_msg is None:
2025-02-25T14:20:45.7035740Z             if left.shape != right.shape:
2025-02-25T14:20:45.7035859Z                 raise_assert_detail(
2025-02-25T14:20:45.7036018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7036095Z                 )
2025-02-25T14:20:45.7036184Z     
2025-02-25T14:20:45.7036270Z             diff = 0
2025-02-25T14:20:45.7036404Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7036506Z                 # count up differences
2025-02-25T14:20:45.7036691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7036775Z                     diff += 1
2025-02-25T14:20:45.7036856Z     
2025-02-25T14:20:45.7036947Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7037102Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7037402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7037538Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7037634Z E           
2025-02-25T14:20:45.7037757Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7038029Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7038307Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7038329Z 
2025-02-25T14:20:45.7038636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7038645Z 
2025-02-25T14:20:45.7038835Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7038839Z 
2025-02-25T14:20:45.7039063Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e000>
2025-02-25T14:20:45.7039234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7039319Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7039323Z 
2025-02-25T14:20:45.7039477Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7039598Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7039705Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7039794Z         try:
2025-02-25T14:20:45.7039943Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7040042Z         except KeyError:
2025-02-25T14:20:45.7040183Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7040262Z     
2025-02-25T14:20:45.7040454Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7040668Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7040762Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7040908Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7040997Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7041107Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7041238Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7041243Z 
2025-02-25T14:20:45.7041375Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7041505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7041654Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7041740Z     ???
2025-02-25T14:20:45.7041869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7041873Z 
2025-02-25T14:20:45.7041961Z >   ???
2025-02-25T14:20:45.7042100Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7042184Z E   
2025-02-25T14:20:45.7042326Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7042447Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7042533Z E          ...
2025-02-25T14:20:45.7042627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7042845Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7043048Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7043187Z E          ...
2025-02-25T14:20:45.7043337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7043566Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7043937Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7043945Z 
2025-02-25T14:20:45.7044090Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7044311Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-25T14:20:45.7044323Z 
2025-02-25T14:20:45.7044456Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7044602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7044704Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7044855Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7044983Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7045093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7045172Z err_msg = None
2025-02-25T14:20:45.7045191Z 
2025-02-25T14:20:45.7045318Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7045417Z         if err_msg is None:
2025-02-25T14:20:45.7045516Z             if left.shape != right.shape:
2025-02-25T14:20:45.7045628Z                 raise_assert_detail(
2025-02-25T14:20:45.7045779Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7045870Z                 )
2025-02-25T14:20:45.7045940Z     
2025-02-25T14:20:45.7046034Z             diff = 0
2025-02-25T14:20:45.7046150Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7046256Z                 # count up differences
2025-02-25T14:20:45.7046428Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7046522Z                     diff += 1
2025-02-25T14:20:45.7046610Z     
2025-02-25T14:20:45.7046706Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7046866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7047042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7047174Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7047380Z E           
2025-02-25T14:20:45.7047508Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7047773Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7048065Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7048070Z 
2025-02-25T14:20:45.7048390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7048401Z 
2025-02-25T14:20:45.7048570Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7048575Z 
2025-02-25T14:20:45.7048830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e0c0>
2025-02-25T14:20:45.7049054Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>, attr = 'f_lu'
2025-02-25T14:20:45.7049059Z 
2025-02-25T14:20:45.7049202Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7049334Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7049425Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7049515Z         try:
2025-02-25T14:20:45.7049657Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7049753Z         except KeyError:
2025-02-25T14:20:45.7049994Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7050089Z     
2025-02-25T14:20:45.7050180Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7050303Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7050413Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7050669Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7050779Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7050880Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7051022Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7051026Z 
2025-02-25T14:20:45.7051157Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7051283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7051434Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7051529Z     ???
2025-02-25T14:20:45.7051667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7051672Z 
2025-02-25T14:20:45.7051761Z >   ???
2025-02-25T14:20:45.7051919Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7052001Z E   
2025-02-25T14:20:45.7052157Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7052272Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7052386Z E          ...
2025-02-25T14:20:45.7052482Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7052627Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7052742Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7052830Z E          ...
2025-02-25T14:20:45.7052937Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7053071Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7053202Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7053206Z 
2025-02-25T14:20:45.7053302Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7053570Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-25T14:20:45.7053702Z 
2025-02-25T14:20:45.7053934Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e6c0>
2025-02-25T14:20:45.7054128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7054227Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.7054251Z 
2025-02-25T14:20:45.7054389Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7054518Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7054612Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7054711Z         try:
2025-02-25T14:20:45.7054863Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7054961Z         except KeyError:
2025-02-25T14:20:45.7055119Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7055202Z     
2025-02-25T14:20:45.7055294Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7055422Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7055523Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7055676Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7055782Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7055873Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7056000Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7056080Z             else:
2025-02-25T14:20:45.7056197Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7056310Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7056315Z 
2025-02-25T14:20:45.7056456Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7056713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7056887Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7056967Z     ???
2025-02-25T14:20:45.7057105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7057109Z 
2025-02-25T14:20:45.7057193Z >   ???
2025-02-25T14:20:45.7057375Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7057466Z E   
2025-02-25T14:20:45.7057640Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.7058028Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7063039Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.7068175Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.7068375Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.7068379Z 
2025-02-25T14:20:45.7068487Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7068737Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-25T14:20:45.7068741Z 
2025-02-25T14:20:45.7068882Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7069042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7069154Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7069313Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7069444Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7069574Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7069678Z err_msg = None
2025-02-25T14:20:45.7069682Z 
2025-02-25T14:20:45.7069796Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7069911Z         if err_msg is None:
2025-02-25T14:20:45.7070013Z             if left.shape != right.shape:
2025-02-25T14:20:45.7070120Z                 raise_assert_detail(
2025-02-25T14:20:45.7070274Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7070469Z                 )
2025-02-25T14:20:45.7070715Z     
2025-02-25T14:20:45.7070835Z             diff = 0
2025-02-25T14:20:45.7070964Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7071081Z                 # count up differences
2025-02-25T14:20:45.7071261Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7071357Z                     diff += 1
2025-02-25T14:20:45.7071439Z     
2025-02-25T14:20:45.7071534Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7071696Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7071872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7072017Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7072097Z E           
2025-02-25T14:20:45.7072231Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7072517Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7072801Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7072805Z 
2025-02-25T14:20:45.7073137Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7073280Z 
2025-02-25T14:20:45.7073464Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7073468Z 
2025-02-25T14:20:45.7073727Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e780>
2025-02-25T14:20:45.7073911Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7074007Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.7074011Z 
2025-02-25T14:20:45.7074173Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7074295Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7074400Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7074476Z         try:
2025-02-25T14:20:45.7074646Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7074737Z         except KeyError:
2025-02-25T14:20:45.7074890Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7074971Z     
2025-02-25T14:20:45.7075108Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7075225Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7075321Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7075480Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7075576Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7075684Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7075803Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7075901Z             else:
2025-02-25T14:20:45.7076003Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7076139Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7076143Z 
2025-02-25T14:20:45.7076281Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7076426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7076719Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7076867Z     ???
2025-02-25T14:20:45.7077077Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7077261Z 
2025-02-25T14:20:45.7077388Z >   ???
2025-02-25T14:20:45.7077630Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7077742Z E   
2025-02-25T14:20:45.7077904Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7078026Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7078134Z E          ...
2025-02-25T14:20:45.7078239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7078381Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7078515Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7078599Z E          ...
2025-02-25T14:20:45.7078712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7078851Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7078981Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7078986Z 
2025-02-25T14:20:45.7079080Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7079312Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-25T14:20:45.7079316Z 
2025-02-25T14:20:45.7079484Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7079626Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7079747Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7079888Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7080036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7080140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7080340Z err_msg = None
2025-02-25T14:20:45.7080345Z 
2025-02-25T14:20:45.7080472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7080776Z         if err_msg is None:
2025-02-25T14:20:45.7080908Z             if left.shape != right.shape:
2025-02-25T14:20:45.7081002Z                 raise_assert_detail(
2025-02-25T14:20:45.7081185Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7081271Z                 )
2025-02-25T14:20:45.7081369Z     
2025-02-25T14:20:45.7081453Z             diff = 0
2025-02-25T14:20:45.7081591Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7081696Z                 # count up differences
2025-02-25T14:20:45.7081902Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7081990Z                     diff += 1
2025-02-25T14:20:45.7082087Z     
2025-02-25T14:20:45.7082195Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7082377Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7082570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7082697Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7082791Z E           
2025-02-25T14:20:45.7082906Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7083184Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7083475Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7083480Z 
2025-02-25T14:20:45.7083785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7083940Z 
2025-02-25T14:20:45.7084124Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7084128Z 
2025-02-25T14:20:45.7084355Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e840>
2025-02-25T14:20:45.7084539Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7084630Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7084646Z 
2025-02-25T14:20:45.7084786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7084920Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7085008Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7085103Z         try:
2025-02-25T14:20:45.7085256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7085356Z         except KeyError:
2025-02-25T14:20:45.7085501Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7085597Z     
2025-02-25T14:20:45.7085695Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7085806Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7085900Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7086054Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7086162Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7086259Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7086391Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7086465Z             else:
2025-02-25T14:20:45.7086574Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7086683Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7086688Z 
2025-02-25T14:20:45.7086951Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7087076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7087245Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7087329Z     ???
2025-02-25T14:20:45.7087448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7087452Z 
2025-02-25T14:20:45.7087537Z >   ???
2025-02-25T14:20:45.7087668Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7087758Z E   
2025-02-25T14:20:45.7087891Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7088018Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7088095Z E          ...
2025-02-25T14:20:45.7088202Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7088335Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7088468Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7088559Z E          ...
2025-02-25T14:20:45.7088648Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7088792Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7088898Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7088902Z 
2025-02-25T14:20:45.7089008Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7089214Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-25T14:20:45.7089218Z 
2025-02-25T14:20:45.7089363Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7089497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7089613Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7089765Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7089898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7090014Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7090185Z err_msg = None
2025-02-25T14:20:45.7090189Z 
2025-02-25T14:20:45.7090317Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7090408Z         if err_msg is None:
2025-02-25T14:20:45.7090659Z             if left.shape != right.shape:
2025-02-25T14:20:45.7090791Z                 raise_assert_detail(
2025-02-25T14:20:45.7090963Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7091058Z                 )
2025-02-25T14:20:45.7091136Z     
2025-02-25T14:20:45.7091234Z             diff = 0
2025-02-25T14:20:45.7091350Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7091459Z                 # count up differences
2025-02-25T14:20:45.7091640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7091737Z                     diff += 1
2025-02-25T14:20:45.7091805Z     
2025-02-25T14:20:45.7091918Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7092064Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7092251Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7092368Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7092465Z E           
2025-02-25T14:20:45.7092595Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7092859Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7093274Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7093286Z 
2025-02-25T14:20:45.7093602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7093606Z 
2025-02-25T14:20:45.7093779Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7093783Z 
2025-02-25T14:20:45.7094029Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e900>
2025-02-25T14:20:45.7094199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7094296Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7094300Z 
2025-02-25T14:20:45.7094443Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7094577Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7094688Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7094773Z         try:
2025-02-25T14:20:45.7094948Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7095033Z         except KeyError:
2025-02-25T14:20:45.7095192Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7095270Z     
2025-02-25T14:20:45.7095380Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7095480Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7095603Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7095748Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7095859Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7095964Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7096101Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7096207Z             else:
2025-02-25T14:20:45.7096315Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7096455Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7096588Z 
2025-02-25T14:20:45.7096721Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7096856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7097011Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7097107Z     ???
2025-02-25T14:20:45.7097219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7097223Z 
2025-02-25T14:20:45.7097310Z >   ???
2025-02-25T14:20:45.7097459Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7097538Z E   
2025-02-25T14:20:45.7097694Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7097809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7097902Z E          ...
2025-02-25T14:20:45.7098004Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7098160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7098288Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7098382Z E          ...
2025-02-25T14:20:45.7098477Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7098621Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7098755Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7098759Z 
2025-02-25T14:20:45.7098858Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7099086Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-25T14:20:45.7099090Z 
2025-02-25T14:20:45.7099223Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7099482Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7099592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7099749Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7099893Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7100014Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7100113Z err_msg = None
2025-02-25T14:20:45.7100118Z 
2025-02-25T14:20:45.7100236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7100344Z         if err_msg is None:
2025-02-25T14:20:45.7100452Z             if left.shape != right.shape:
2025-02-25T14:20:45.7100676Z                 raise_assert_detail(
2025-02-25T14:20:45.7100832Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7100930Z                 )
2025-02-25T14:20:45.7101010Z     
2025-02-25T14:20:45.7101111Z             diff = 0
2025-02-25T14:20:45.7101246Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7101356Z                 # count up differences
2025-02-25T14:20:45.7101556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7101639Z                     diff += 1
2025-02-25T14:20:45.7101747Z     
2025-02-25T14:20:45.7101845Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7102006Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7102192Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7102327Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7102409Z E           
2025-02-25T14:20:45.7102547Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7102847Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7103572Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7103579Z 
2025-02-25T14:20:45.7104145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7104153Z 
2025-02-25T14:20:45.7104350Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7104354Z 
2025-02-25T14:20:45.7104589Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ea80>
2025-02-25T14:20:45.7104800Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7104884Z attr = 'j_blues'
2025-02-25T14:20:45.7104888Z 
2025-02-25T14:20:45.7105044Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7105181Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7105291Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7105371Z         try:
2025-02-25T14:20:45.7105542Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7105633Z         except KeyError:
2025-02-25T14:20:45.7105800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7105900Z     
2025-02-25T14:20:45.7105992Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7106107Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7106202Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7106362Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7106601Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7106717Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7106836Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7106935Z             else:
2025-02-25T14:20:45.7107037Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7107162Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7107166Z 
2025-02-25T14:20:45.7107313Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7107437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7107599Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7107674Z     ???
2025-02-25T14:20:45.7107803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7107807Z 
2025-02-25T14:20:45.7107882Z >   ???
2025-02-25T14:20:45.7108029Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7108121Z E   
2025-02-25T14:20:45.7108279Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7108412Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7108500Z E          ...
2025-02-25T14:20:45.7108611Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7108748Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7108886Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7108961Z E          ...
2025-02-25T14:20:45.7109073Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7109209Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7109331Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7109335Z 
2025-02-25T14:20:45.7109429Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7109710Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-25T14:20:45.7109714Z 
2025-02-25T14:20:45.7109871Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7110013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7110260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7110407Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7110759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7110887Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7110979Z err_msg = None
2025-02-25T14:20:45.7110983Z 
2025-02-25T14:20:45.7111110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7111191Z         if err_msg is None:
2025-02-25T14:20:45.7111306Z             if left.shape != right.shape:
2025-02-25T14:20:45.7111397Z                 raise_assert_detail(
2025-02-25T14:20:45.7111578Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7111651Z                 )
2025-02-25T14:20:45.7111743Z     
2025-02-25T14:20:45.7111825Z             diff = 0
2025-02-25T14:20:45.7111958Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7112052Z                 # count up differences
2025-02-25T14:20:45.7112249Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7112333Z                     diff += 1
2025-02-25T14:20:45.7112422Z     
2025-02-25T14:20:45.7112528Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7112668Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7112853Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7112971Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7113056Z E           
2025-02-25T14:20:45.7113313Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7113616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7113902Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7113907Z 
2025-02-25T14:20:45.7114212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7114217Z 
2025-02-25T14:20:45.7114412Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7114416Z 
2025-02-25T14:20:45.7114645Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f800>
2025-02-25T14:20:45.7114835Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7114928Z attr = 'lines'
2025-02-25T14:20:45.7114932Z 
2025-02-25T14:20:45.7115072Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7115202Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7115295Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7115387Z         try:
2025-02-25T14:20:45.7115532Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7115634Z         except KeyError:
2025-02-25T14:20:45.7115778Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7115866Z     
2025-02-25T14:20:45.7115966Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7116091Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7116193Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7116334Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7116579Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7116681Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7116818Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7116896Z             else:
2025-02-25T14:20:45.7117015Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7117127Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7117132Z 
2025-02-25T14:20:45.7117272Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7117390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7117559Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7117655Z     ???
2025-02-25T14:20:45.7117783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7117787Z 
2025-02-25T14:20:45.7117884Z >   ???
2025-02-25T14:20:45.7118009Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7118104Z E   
2025-02-25T14:20:45.7118242Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7118378Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7118458Z E          ...
2025-02-25T14:20:45.7118576Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7118711Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7118843Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7118940Z E          ...
2025-02-25T14:20:45.7119030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7119176Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7119284Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7119387Z 
2025-02-25T14:20:45.7119510Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7119741Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-25T14:20:45.7119752Z 
2025-02-25T14:20:45.7119998Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f8c0>
2025-02-25T14:20:45.7120181Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7120274Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7120278Z 
2025-02-25T14:20:45.7120435Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7120663Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7120765Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7120851Z         try:
2025-02-25T14:20:45.7121014Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7121105Z         except KeyError:
2025-02-25T14:20:45.7121278Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7121357Z     
2025-02-25T14:20:45.7121475Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7121594Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7121696Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7121848Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7121950Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7122059Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7122176Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7122180Z 
2025-02-25T14:20:45.7122325Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7122451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7122456Z 
2025-02-25T14:20:45.7122624Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7122729Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7122855Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7122965Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7123252Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7123355Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7123468Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7123569Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7123646Z err_msg = None
2025-02-25T14:20:45.7123650Z 
2025-02-25T14:20:45.7123777Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7123870Z         if err_msg is None:
2025-02-25T14:20:45.7123983Z             if left.shape != right.shape:
2025-02-25T14:20:45.7124086Z                 raise_assert_detail(
2025-02-25T14:20:45.7124243Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7124340Z                 )
2025-02-25T14:20:45.7124413Z     
2025-02-25T14:20:45.7124501Z             diff = 0
2025-02-25T14:20:45.7124613Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7124739Z                 # count up differences
2025-02-25T14:20:45.7124918Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7125013Z                     diff += 1
2025-02-25T14:20:45.7125091Z     
2025-02-25T14:20:45.7125194Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7125352Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7125529Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7125655Z E           AssertionError: Series are different
2025-02-25T14:20:45.7125733Z E           
2025-02-25T14:20:45.7125854Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7126367Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7126738Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7127095Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7127105Z 
2025-02-25T14:20:45.7127416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7127667Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-25T14:20:45.7127673Z 
2025-02-25T14:20:45.7127916Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f980>
2025-02-25T14:20:45.7128090Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7128207Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7128211Z 
2025-02-25T14:20:45.7128353Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7128483Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7128569Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7128708Z         try:
2025-02-25T14:20:45.7128965Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7129122Z         except KeyError:
2025-02-25T14:20:45.7129503Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7129623Z     
2025-02-25T14:20:45.7129790Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7129896Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7130008Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7130145Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7130253Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7130350Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7130484Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7130489Z 
2025-02-25T14:20:45.7130810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7130952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7130956Z 
2025-02-25T14:20:45.7131118Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7131215Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7131343Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7131430Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7131588Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7131669Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7131792Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7131882Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7131979Z err_msg = None
2025-02-25T14:20:45.7131983Z 
2025-02-25T14:20:45.7132119Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7132206Z         if err_msg is None:
2025-02-25T14:20:45.7132493Z             if left.shape != right.shape:
2025-02-25T14:20:45.7132588Z                 raise_assert_detail(
2025-02-25T14:20:45.7132758Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7132845Z                 )
2025-02-25T14:20:45.7132940Z     
2025-02-25T14:20:45.7133016Z             diff = 0
2025-02-25T14:20:45.7133148Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7133247Z                 # count up differences
2025-02-25T14:20:45.7133441Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7133538Z                     diff += 1
2025-02-25T14:20:45.7133617Z     
2025-02-25T14:20:45.7133729Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7133868Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7134056Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7134172Z E           AssertionError: Series are different
2025-02-25T14:20:45.7134267Z E           
2025-02-25T14:20:45.7134376Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7134782Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7135190Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7135573Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7135738Z 
2025-02-25T14:20:45.7136062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7136271Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-25T14:20:45.7136275Z 
2025-02-25T14:20:45.7136408Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7136556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7136663Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7136817Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7136969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7137070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7137172Z err_msg = None
2025-02-25T14:20:45.7137177Z 
2025-02-25T14:20:45.7137286Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7137385Z         if err_msg is None:
2025-02-25T14:20:45.7137485Z             if left.shape != right.shape:
2025-02-25T14:20:45.7137586Z                 raise_assert_detail(
2025-02-25T14:20:45.7137740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7137832Z                 )
2025-02-25T14:20:45.7137905Z     
2025-02-25T14:20:45.7138094Z             diff = 0
2025-02-25T14:20:45.7138225Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7138316Z                 # count up differences
2025-02-25T14:20:45.7138513Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7138598Z                     diff += 1
2025-02-25T14:20:45.7138688Z     
2025-02-25T14:20:45.7138789Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7138947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7139128Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7139257Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7139332Z E           
2025-02-25T14:20:45.7139462Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7139756Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7140029Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7140033Z 
2025-02-25T14:20:45.7140361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7140365Z 
2025-02-25T14:20:45.7140663Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7140668Z 
2025-02-25T14:20:45.7140907Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fbc0>
2025-02-25T14:20:45.7141132Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>, attr = 'nu'
2025-02-25T14:20:45.7141137Z 
2025-02-25T14:20:45.7141279Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7141542Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7141633Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7141723Z         try:
2025-02-25T14:20:45.7141881Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7141982Z         except KeyError:
2025-02-25T14:20:45.7142141Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7142219Z     
2025-02-25T14:20:45.7142341Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7142436Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7142542Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7142684Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7142784Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7142894Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7143020Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7143030Z 
2025-02-25T14:20:45.7143183Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7143302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7143472Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7143549Z     ???
2025-02-25T14:20:45.7143680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7143684Z 
2025-02-25T14:20:45.7143762Z >   ???
2025-02-25T14:20:45.7143914Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7143990Z E   
2025-02-25T14:20:45.7144139Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7144259Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7144350Z E          ...
2025-02-25T14:20:45.7144584Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7144725Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7144864Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7144944Z E          ...
2025-02-25T14:20:45.7145056Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7145188Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7145318Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7145323Z 
2025-02-25T14:20:45.7145420Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7145648Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-25T14:20:45.7145652Z 
2025-02-25T14:20:45.7145801Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7145948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7146064Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7146202Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7146358Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7146459Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7146557Z err_msg = None
2025-02-25T14:20:45.7146560Z 
2025-02-25T14:20:45.7146678Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7146778Z         if err_msg is None:
2025-02-25T14:20:45.7146894Z             if left.shape != right.shape:
2025-02-25T14:20:45.7146986Z                 raise_assert_detail(
2025-02-25T14:20:45.7147146Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7147224Z                 )
2025-02-25T14:20:45.7147312Z     
2025-02-25T14:20:45.7147393Z             diff = 0
2025-02-25T14:20:45.7147537Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7147634Z                 # count up differences
2025-02-25T14:20:45.7148026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7148153Z                     diff += 1
2025-02-25T14:20:45.7148339Z     
2025-02-25T14:20:45.7148704Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7148945Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7149153Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7149372Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7149478Z E           
2025-02-25T14:20:45.7149712Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7150079Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7150401Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7150407Z 
2025-02-25T14:20:45.7151073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7151080Z 
2025-02-25T14:20:45.7151320Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7151324Z 
2025-02-25T14:20:45.7151643Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fc80>
2025-02-25T14:20:45.7152064Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7152204Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7152209Z 
2025-02-25T14:20:45.7152467Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7162027Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7162157Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7162232Z         try:
2025-02-25T14:20:45.7162393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7162476Z         except KeyError:
2025-02-25T14:20:45.7162663Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7162787Z     
2025-02-25T14:20:45.7162939Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7163099Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7163243Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7163474Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7163636Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7163773Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7163888Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7163904Z 
2025-02-25T14:20:45.7164043Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7164169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7164329Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7164404Z     ???
2025-02-25T14:20:45.7164515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7164520Z 
2025-02-25T14:20:45.7164595Z >   ???
2025-02-25T14:20:45.7164746Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7164823Z E   
2025-02-25T14:20:45.7164985Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7165106Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7165210Z E          ...
2025-02-25T14:20:45.7165309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7165528Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7165947Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7166088Z E          ...
2025-02-25T14:20:45.7166239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7166439Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7166569Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7166574Z 
2025-02-25T14:20:45.7166671Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7166886Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-25T14:20:45.7166890Z 
2025-02-25T14:20:45.7167030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7167206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7167314Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7167477Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7167626Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7167737Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7167842Z err_msg = None
2025-02-25T14:20:45.7167846Z 
2025-02-25T14:20:45.7167967Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7168070Z         if err_msg is None:
2025-02-25T14:20:45.7168182Z             if left.shape != right.shape:
2025-02-25T14:20:45.7168288Z                 raise_assert_detail(
2025-02-25T14:20:45.7168445Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7168534Z                 )
2025-02-25T14:20:45.7168614Z     
2025-02-25T14:20:45.7168837Z             diff = 0
2025-02-25T14:20:45.7168964Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7169077Z                 # count up differences
2025-02-25T14:20:45.7169282Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7169367Z                     diff += 1
2025-02-25T14:20:45.7169460Z     
2025-02-25T14:20:45.7169557Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7169713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7169898Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7170036Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7170116Z E           
2025-02-25T14:20:45.7170250Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7170770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7171061Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7171066Z 
2025-02-25T14:20:45.7171406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7171411Z 
2025-02-25T14:20:45.7171609Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7171613Z 
2025-02-25T14:20:45.7171846Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fd40>
2025-02-25T14:20:45.7172082Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>, attr = 'f_lu'
2025-02-25T14:20:45.7172086Z 
2025-02-25T14:20:45.7172230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7172502Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7172588Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7172663Z         try:
2025-02-25T14:20:45.7172810Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7172913Z         except KeyError:
2025-02-25T14:20:45.7173085Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7173158Z     
2025-02-25T14:20:45.7173264Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7173368Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7173479Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7173617Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7173728Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7173822Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7173946Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7173957Z 
2025-02-25T14:20:45.7174092Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7174224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7174465Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7174603Z     ???
2025-02-25T14:20:45.7174814Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7174820Z 
2025-02-25T14:20:45.7174941Z >   ???
2025-02-25T14:20:45.7175179Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7175303Z E   
2025-02-25T14:20:45.7175499Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7175614Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7175849Z E          ...
2025-02-25T14:20:45.7175945Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7176089Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7176232Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7176314Z E          ...
2025-02-25T14:20:45.7176416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7176544Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7176675Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7176679Z 
2025-02-25T14:20:45.7176780Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7177002Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-25T14:20:45.7177006Z 
2025-02-25T14:20:45.7177145Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7177310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7177433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7177568Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7177720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7177819Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7177913Z err_msg = None
2025-02-25T14:20:45.7177917Z 
2025-02-25T14:20:45.7178027Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7178129Z         if err_msg is None:
2025-02-25T14:20:45.7178227Z             if left.shape != right.shape:
2025-02-25T14:20:45.7178330Z                 raise_assert_detail(
2025-02-25T14:20:45.7178492Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7178569Z                 )
2025-02-25T14:20:45.7178653Z     
2025-02-25T14:20:45.7178740Z             diff = 0
2025-02-25T14:20:45.7178869Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7178963Z                 # count up differences
2025-02-25T14:20:45.7179303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7179387Z                     diff += 1
2025-02-25T14:20:45.7179472Z     
2025-02-25T14:20:45.7179568Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7179731Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7179915Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7180036Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7180123Z E           
2025-02-25T14:20:45.7180241Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7180655Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7180932Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7180951Z 
2025-02-25T14:20:45.7181267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7181271Z 
2025-02-25T14:20:45.7181450Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7181454Z 
2025-02-25T14:20:45.7181681Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c754500>
2025-02-25T14:20:45.7181992Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7182082Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7182086Z 
2025-02-25T14:20:45.7182251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7182384Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7182471Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7182565Z         try:
2025-02-25T14:20:45.7182705Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7182810Z         except KeyError:
2025-02-25T14:20:45.7182951Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7183039Z     
2025-02-25T14:20:45.7183130Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7183244Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7183337Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7183492Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7183598Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7183710Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7183840Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7183936Z             else:
2025-02-25T14:20:45.7184048Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7184160Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7184164Z 
2025-02-25T14:20:45.7184307Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7184429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7184592Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7184664Z     ???
2025-02-25T14:20:45.7184790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7184794Z 
2025-02-25T14:20:45.7184884Z >   ???
2025-02-25T14:20:45.7185014Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7185114Z E   
2025-02-25T14:20:45.7185247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7185377Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7185586Z E          ...
2025-02-25T14:20:45.7185689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7185825Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7185954Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7186030Z E          ...
2025-02-25T14:20:45.7186128Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7186266Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7186375Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7186379Z 
2025-02-25T14:20:45.7186487Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7186691Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-25T14:20:45.7186700Z 
2025-02-25T14:20:45.7186849Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7186982Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7187109Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7187262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7187390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7187505Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7187591Z err_msg = None
2025-02-25T14:20:45.7187594Z 
2025-02-25T14:20:45.7187716Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7187800Z         if err_msg is None:
2025-02-25T14:20:45.7187906Z             if left.shape != right.shape:
2025-02-25T14:20:45.7188090Z                 raise_assert_detail(
2025-02-25T14:20:45.7188257Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7188336Z                 )
2025-02-25T14:20:45.7188432Z     
2025-02-25T14:20:45.7188528Z             diff = 0
2025-02-25T14:20:45.7188643Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7188752Z                 # count up differences
2025-02-25T14:20:45.7188924Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7189022Z                     diff += 1
2025-02-25T14:20:45.7189094Z     
2025-02-25T14:20:45.7189204Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7189343Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7189527Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7189646Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7189735Z E           
2025-02-25T14:20:45.7189876Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7190138Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7190427Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7190432Z 
2025-02-25T14:20:45.7190955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7190974Z 
2025-02-25T14:20:45.7191161Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7191165Z 
2025-02-25T14:20:45.7191410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7545c0>
2025-02-25T14:20:45.7191717Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7191814Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7191819Z 
2025-02-25T14:20:45.7191958Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7192093Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7192187Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7192271Z         try:
2025-02-25T14:20:45.7192412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7192489Z         except KeyError:
2025-02-25T14:20:45.7192640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7192712Z     
2025-02-25T14:20:45.7192820Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7192937Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7193043Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7193179Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7193306Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7193400Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7193526Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7193601Z             else:
2025-02-25T14:20:45.7193711Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7193833Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7193837Z 
2025-02-25T14:20:45.7193965Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7194094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7194246Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7194333Z     ???
2025-02-25T14:20:45.7194567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7194573Z 
2025-02-25T14:20:45.7194657Z >   ???
2025-02-25T14:20:45.7194801Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7194886Z E   
2025-02-25T14:20:45.7195029Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7195148Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7195239Z E          ...
2025-02-25T14:20:45.7195338Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7195492Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7195614Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7195708Z E          ...
2025-02-25T14:20:45.7195800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7195945Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7196061Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7196065Z 
2025-02-25T14:20:45.7196174Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7196389Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-25T14:20:45.7196403Z 
2025-02-25T14:20:45.7196543Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7196687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7196788Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7196933Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7197060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7197161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7197258Z err_msg = None
2025-02-25T14:20:45.7197262Z 
2025-02-25T14:20:45.7197389Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7197492Z         if err_msg is None:
2025-02-25T14:20:45.7197596Z             if left.shape != right.shape:
2025-02-25T14:20:45.7197788Z                 raise_assert_detail(
2025-02-25T14:20:45.7197946Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7198034Z                 )
2025-02-25T14:20:45.7198103Z     
2025-02-25T14:20:45.7198191Z             diff = 0
2025-02-25T14:20:45.7198313Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7198413Z                 # count up differences
2025-02-25T14:20:45.7198603Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7198688Z                     diff += 1
2025-02-25T14:20:45.7198774Z     
2025-02-25T14:20:45.7198871Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7199033Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7199215Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7199344Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7199429Z E           
2025-02-25T14:20:45.7199566Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7200003Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7200497Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7200819Z 
2025-02-25T14:20:45.7201224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7201241Z 
2025-02-25T14:20:45.7201423Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7201443Z 
2025-02-25T14:20:45.7201677Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c754740>
2025-02-25T14:20:45.7201861Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7201954Z attr = 'j_blues'
2025-02-25T14:20:45.7201958Z 
2025-02-25T14:20:45.7202106Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7202236Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7202330Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7202416Z         try:
2025-02-25T14:20:45.7202569Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7202684Z         except KeyError:
2025-02-25T14:20:45.7202833Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7202902Z     
2025-02-25T14:20:45.7203006Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7203108Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7203215Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7203354Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7203458Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7203552Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7203675Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7203748Z             else:
2025-02-25T14:20:45.7203859Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7203966Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7203980Z 
2025-02-25T14:20:45.7204108Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7204242Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7204393Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7204627Z     ???
2025-02-25T14:20:45.7204748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7204753Z 
2025-02-25T14:20:45.7204842Z >   ???
2025-02-25T14:20:45.7204971Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7205054Z E   
2025-02-25T14:20:45.7205188Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7205316Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7205403Z E          ...
2025-02-25T14:20:45.7205494Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7205644Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7205767Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7205859Z E          ...
2025-02-25T14:20:45.7205950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7206083Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7206196Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7206200Z 
2025-02-25T14:20:45.7206303Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7206504Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-25T14:20:45.7206516Z 
2025-02-25T14:20:45.7206650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7206798Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7206897Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7207038Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7207255Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7207358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7207435Z err_msg = None
2025-02-25T14:20:45.7207446Z 
2025-02-25T14:20:45.7207560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7207654Z         if err_msg is None:
2025-02-25T14:20:45.7207750Z             if left.shape != right.shape:
2025-02-25T14:20:45.7207843Z                 raise_assert_detail(
2025-02-25T14:20:45.7207988Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7208067Z                 )
2025-02-25T14:20:45.7208142Z     
2025-02-25T14:20:45.7208232Z             diff = 0
2025-02-25T14:20:45.7208350Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7208460Z                 # count up differences
2025-02-25T14:20:45.7208629Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7208722Z                     diff += 1
2025-02-25T14:20:45.7208807Z     
2025-02-25T14:20:45.7208901Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7209052Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7209233Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7209360Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7209428Z E           
2025-02-25T14:20:45.7209537Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7209805Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7210127Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7210279Z 
2025-02-25T14:20:45.7211002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7211010Z 
2025-02-25T14:20:45.7211303Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7211310Z 
2025-02-25T14:20:45.7211701Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7554c0>
2025-02-25T14:20:45.7211890Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7211971Z attr = 'lines'
2025-02-25T14:20:45.7211976Z 
2025-02-25T14:20:45.7212129Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7212249Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7212350Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7212422Z         try:
2025-02-25T14:20:45.7212574Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7212668Z         except KeyError:
2025-02-25T14:20:45.7212855Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7212926Z     
2025-02-25T14:20:45.7213026Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7213148Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7213241Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7213384Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7213540Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7213709Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7213903Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7214046Z             else:
2025-02-25T14:20:45.7214205Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7214597Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7214605Z 
2025-02-25T14:20:45.7214830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7215049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7215316Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7215439Z     ???
2025-02-25T14:20:45.7215636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7215643Z 
2025-02-25T14:20:45.7215760Z >   ???
2025-02-25T14:20:45.7215987Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7216108Z E   
2025-02-25T14:20:45.7216345Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7216531Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7216665Z E          ...
2025-02-25T14:20:45.7216815Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7217061Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7217270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7217398Z E          ...
2025-02-25T14:20:45.7217552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7217763Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7217953Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7217960Z 
2025-02-25T14:20:45.7218112Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7218513Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-25T14:20:45.7218519Z 
2025-02-25T14:20:45.7218905Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755580>
2025-02-25T14:20:45.7219194Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7219354Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7219361Z 
2025-02-25T14:20:45.7219605Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7219811Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7220141Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7220281Z         try:
2025-02-25T14:20:45.7220717Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7220880Z         except KeyError:
2025-02-25T14:20:45.7221114Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7221249Z     
2025-02-25T14:20:45.7221400Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7221580Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7221753Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7221987Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7222143Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7222291Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7222496Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7222504Z 
2025-02-25T14:20:45.7222717Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7222928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7222934Z 
2025-02-25T14:20:45.7223173Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7223321Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7223529Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7223655Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7223813Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7223901Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7224024Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7224103Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7224344Z err_msg = None
2025-02-25T14:20:45.7224349Z 
2025-02-25T14:20:45.7224464Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7224567Z         if err_msg is None:
2025-02-25T14:20:45.7224674Z             if left.shape != right.shape:
2025-02-25T14:20:45.7224762Z                 raise_assert_detail(
2025-02-25T14:20:45.7224921Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7224996Z                 )
2025-02-25T14:20:45.7225074Z     
2025-02-25T14:20:45.7225147Z             diff = 0
2025-02-25T14:20:45.7225270Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7225358Z                 # count up differences
2025-02-25T14:20:45.7225533Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7225609Z                     diff += 1
2025-02-25T14:20:45.7225686Z     
2025-02-25T14:20:45.7225781Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7225940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7226126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7226240Z E           AssertionError: Series are different
2025-02-25T14:20:45.7226321Z E           
2025-02-25T14:20:45.7226428Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7226818Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7227166Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7227627Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7227632Z 
2025-02-25T14:20:45.7227954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7228177Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-25T14:20:45.7228182Z 
2025-02-25T14:20:45.7228414Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755640>
2025-02-25T14:20:45.7228584Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7228680Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7228686Z 
2025-02-25T14:20:45.7228826Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7228942Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7229033Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7229106Z         try:
2025-02-25T14:20:45.7229252Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7229353Z         except KeyError:
2025-02-25T14:20:45.7229599Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7229744Z     
2025-02-25T14:20:45.7229892Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7230062Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7230212Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7230801Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7230934Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7231045Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7231175Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7231179Z 
2025-02-25T14:20:45.7231322Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7231446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7231450Z 
2025-02-25T14:20:45.7231589Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7231693Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7231805Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7231897Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7232039Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7232140Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7232245Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7232343Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7232430Z err_msg = None
2025-02-25T14:20:45.7232434Z 
2025-02-25T14:20:45.7232544Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7232633Z         if err_msg is None:
2025-02-25T14:20:45.7232728Z             if left.shape != right.shape:
2025-02-25T14:20:45.7232824Z                 raise_assert_detail(
2025-02-25T14:20:45.7232972Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7233054Z                 )
2025-02-25T14:20:45.7233124Z     
2025-02-25T14:20:45.7233210Z             diff = 0
2025-02-25T14:20:45.7233323Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7233422Z                 # count up differences
2025-02-25T14:20:45.7233606Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7233686Z                     diff += 1
2025-02-25T14:20:45.7233769Z     
2025-02-25T14:20:45.7233993Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7234142Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7234323Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7234438Z E           AssertionError: Series are different
2025-02-25T14:20:45.7234509Z E           
2025-02-25T14:20:45.7234616Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7235007Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7235386Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7235781Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7235787Z 
2025-02-25T14:20:45.7236215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7236415Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-25T14:20:45.7236428Z 
2025-02-25T14:20:45.7236576Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7236712Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7236823Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7236966Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7237092Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7237189Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7237265Z err_msg = None
2025-02-25T14:20:45.7237269Z 
2025-02-25T14:20:45.7237386Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7237463Z         if err_msg is None:
2025-02-25T14:20:45.7237573Z             if left.shape != right.shape:
2025-02-25T14:20:45.7237676Z                 raise_assert_detail(
2025-02-25T14:20:45.7237844Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7237916Z                 )
2025-02-25T14:20:45.7237997Z     
2025-02-25T14:20:45.7238077Z             diff = 0
2025-02-25T14:20:45.7238190Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7238290Z                 # count up differences
2025-02-25T14:20:45.7238463Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7238550Z                     diff += 1
2025-02-25T14:20:45.7238619Z     
2025-02-25T14:20:45.7238717Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7238859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7239037Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7239152Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7239340Z E           
2025-02-25T14:20:45.7239461Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7239740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7240026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7240030Z 
2025-02-25T14:20:45.7240335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7240356Z 
2025-02-25T14:20:45.7240722Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7240731Z 
2025-02-25T14:20:45.7241004Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755880>
2025-02-25T14:20:45.7241207Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>, attr = 'nu'
2025-02-25T14:20:45.7241212Z 
2025-02-25T14:20:45.7241362Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7241481Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7241583Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7241657Z         try:
2025-02-25T14:20:45.7241813Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7241905Z         except KeyError:
2025-02-25T14:20:45.7242221Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7242307Z     
2025-02-25T14:20:45.7242397Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7242505Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7242596Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7242739Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7242822Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7242919Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7243030Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7243046Z 
2025-02-25T14:20:45.7243170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7243293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7243445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7243539Z     ???
2025-02-25T14:20:45.7243662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7243666Z 
2025-02-25T14:20:45.7243745Z >   ???
2025-02-25T14:20:45.7243877Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7243952Z E   
2025-02-25T14:20:45.7244077Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7244199Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7244278Z E          ...
2025-02-25T14:20:45.7244367Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7244512Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7244625Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7244703Z E          ...
2025-02-25T14:20:45.7244788Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7244922Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7245038Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7245043Z 
2025-02-25T14:20:45.7245144Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7245347Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-25T14:20:45.7245488Z 
2025-02-25T14:20:45.7245622Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7245769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7245866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7246006Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7246135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7246238Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7246314Z err_msg = None
2025-02-25T14:20:45.7246318Z 
2025-02-25T14:20:45.7246458Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7246558Z         if err_msg is None:
2025-02-25T14:20:45.7246654Z             if left.shape != right.shape:
2025-02-25T14:20:45.7246756Z                 raise_assert_detail(
2025-02-25T14:20:45.7246903Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7246984Z                 )
2025-02-25T14:20:45.7247056Z     
2025-02-25T14:20:45.7247141Z             diff = 0
2025-02-25T14:20:45.7247253Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7247354Z                 # count up differences
2025-02-25T14:20:45.7247528Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7247624Z                     diff += 1
2025-02-25T14:20:45.7247694Z     
2025-02-25T14:20:45.7247790Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7247943Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7248215Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7248345Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7248427Z E           
2025-02-25T14:20:45.7248547Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7248813Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7249155Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7249163Z 
2025-02-25T14:20:45.7249482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7249499Z 
2025-02-25T14:20:45.7249666Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7249670Z 
2025-02-25T14:20:45.7249899Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755940>
2025-02-25T14:20:45.7250079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7250188Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7250192Z 
2025-02-25T14:20:45.7250350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7250472Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7250679Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7250754Z         try:
2025-02-25T14:20:45.7250908Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7251003Z         except KeyError:
2025-02-25T14:20:45.7251161Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7251236Z     
2025-02-25T14:20:45.7251473Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7251575Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7251681Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7251826Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7251918Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7252026Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7252140Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7252145Z 
2025-02-25T14:20:45.7252282Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7252438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7252598Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7252673Z     ???
2025-02-25T14:20:45.7252808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7252813Z 
2025-02-25T14:20:45.7252894Z >   ???
2025-02-25T14:20:45.7253034Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7253114Z E   
2025-02-25T14:20:45.7253247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7253374Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7253449Z E          ...
2025-02-25T14:20:45.7253556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7253690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7253819Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7253896Z E          ...
2025-02-25T14:20:45.7254001Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7254127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7254372Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7254376Z 
2025-02-25T14:20:45.7254476Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7254661Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-25T14:20:45.7254671Z 
2025-02-25T14:20:45.7254811Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7254946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7255062Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7255203Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7255341Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7255448Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7255528Z err_msg = None
2025-02-25T14:20:45.7255532Z 
2025-02-25T14:20:45.7255661Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7255750Z         if err_msg is None:
2025-02-25T14:20:45.7255864Z             if left.shape != right.shape:
2025-02-25T14:20:45.7255958Z                 raise_assert_detail(
2025-02-25T14:20:45.7256125Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7256198Z                 )
2025-02-25T14:20:45.7256285Z     
2025-02-25T14:20:45.7256361Z             diff = 0
2025-02-25T14:20:45.7256491Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7256596Z                 # count up differences
2025-02-25T14:20:45.7256774Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7256866Z                     diff += 1
2025-02-25T14:20:45.7256944Z     
2025-02-25T14:20:45.7257050Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7257197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7257387Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7257505Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7257688Z E           
2025-02-25T14:20:45.7257803Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7258087Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7258378Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7258382Z 
2025-02-25T14:20:45.7258694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7258712Z 
2025-02-25T14:20:45.7258885Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7258889Z 
2025-02-25T14:20:45.7259125Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755a00>
2025-02-25T14:20:45.7259328Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>, attr = 'f_lu'
2025-02-25T14:20:45.7259332Z 
2025-02-25T14:20:45.7259483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7259604Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7259703Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7259777Z         try:
2025-02-25T14:20:45.7259934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7260118Z         except KeyError:
2025-02-25T14:20:45.7260271Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7260356Z     
2025-02-25T14:20:45.7260456Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7260665Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7260763Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7260902Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7260993Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7261103Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7261218Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7261222Z 
2025-02-25T14:20:45.7261371Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7261504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7261655Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7261746Z     ???
2025-02-25T14:20:45.7261867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7261872Z 
2025-02-25T14:20:45.7261958Z >   ???
2025-02-25T14:20:45.7262091Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7262173Z E   
2025-02-25T14:20:45.7262305Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7262437Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7262516Z E          ...
2025-02-25T14:20:45.7262635Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7262786Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7262902Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7262987Z E          ...
2025-02-25T14:20:45.7263080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7263221Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7263340Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7263344Z 
2025-02-25T14:20:45.7263455Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7263777Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-25T14:20:45.7263963Z 
2025-02-25T14:20:45.7264225Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7264465Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7264628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7264879Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7265010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7265126Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7265207Z err_msg = None
2025-02-25T14:20:45.7265211Z 
2025-02-25T14:20:45.7265348Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7265432Z         if err_msg is None:
2025-02-25T14:20:45.7265546Z             if left.shape != right.shape:
2025-02-25T14:20:45.7265665Z                 raise_assert_detail(
2025-02-25T14:20:45.7265815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7265904Z                 )
2025-02-25T14:20:45.7265977Z     
2025-02-25T14:20:45.7266068Z             diff = 0
2025-02-25T14:20:45.7266185Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7266289Z                 # count up differences
2025-02-25T14:20:45.7266464Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7266566Z                     diff += 1
2025-02-25T14:20:45.7266634Z     
2025-02-25T14:20:45.7266738Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7267027Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7267208Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7267339Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7267422Z E           
2025-02-25T14:20:45.7267550Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7267820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7268111Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7268116Z 
2025-02-25T14:20:45.7268434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7268451Z 
2025-02-25T14:20:45.7268625Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7268629Z 
2025-02-25T14:20:45.7268867Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c756180>
2025-02-25T14:20:45.7269036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7269133Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7269137Z 
2025-02-25T14:20:45.7269281Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7269403Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7269517Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7269594Z         try:
2025-02-25T14:20:45.7269745Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7269836Z         except KeyError:
2025-02-25T14:20:45.7269992Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7270067Z     
2025-02-25T14:20:45.7270271Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7270374Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7270485Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7270751Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7270846Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7270955Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7271067Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7271153Z             else:
2025-02-25T14:20:45.7271250Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7271384Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7271388Z 
2025-02-25T14:20:45.7271517Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7271658Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7271817Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7271917Z     ???
2025-02-25T14:20:45.7272048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7272053Z 
2025-02-25T14:20:45.7272128Z >   ???
2025-02-25T14:20:45.7272271Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7272348Z E   
2025-02-25T14:20:45.7272498Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7272619Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7272712Z E          ...
2025-02-25T14:20:45.7272807Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7272948Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7273064Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7273282Z E          ...
2025-02-25T14:20:45.7273398Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7273525Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7273653Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7273658Z 
2025-02-25T14:20:45.7273752Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7273963Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-25T14:20:45.7273967Z 
2025-02-25T14:20:45.7274098Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7274242Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7274358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7274495Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7274644Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7274752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7274841Z err_msg = None
2025-02-25T14:20:45.7274844Z 
2025-02-25T14:20:45.7274956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7275051Z         if err_msg is None:
2025-02-25T14:20:45.7275151Z             if left.shape != right.shape:
2025-02-25T14:20:45.7275251Z                 raise_assert_detail(
2025-02-25T14:20:45.7275404Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7275493Z                 )
2025-02-25T14:20:45.7275578Z     
2025-02-25T14:20:45.7275663Z             diff = 0
2025-02-25T14:20:45.7275796Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7275887Z                 # count up differences
2025-02-25T14:20:45.7276077Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7276172Z                     diff += 1
2025-02-25T14:20:45.7276274Z     
2025-02-25T14:20:45.7276366Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7276676Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7276850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7276971Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7277051Z E           
2025-02-25T14:20:45.7277155Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7277425Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7277696Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7277706Z 
2025-02-25T14:20:45.7278021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7278025Z 
2025-02-25T14:20:45.7278209Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7278213Z 
2025-02-25T14:20:45.7278437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c756240>
2025-02-25T14:20:45.7278624Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7278705Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7278709Z 
2025-02-25T14:20:45.7278860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7279075Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7279183Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7279271Z         try:
2025-02-25T14:20:45.7279418Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7279529Z         except KeyError:
2025-02-25T14:20:45.7279673Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7279756Z     
2025-02-25T14:20:45.7279849Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7279960Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7280052Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7280199Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7280287Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7280394Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7280677Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7280794Z             else:
2025-02-25T14:20:45.7280925Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7281036Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7281040Z 
2025-02-25T14:20:45.7281199Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7281323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7281497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7281576Z     ???
2025-02-25T14:20:45.7281705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7281710Z 
2025-02-25T14:20:45.7281784Z >   ???
2025-02-25T14:20:45.7281926Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7282012Z E   
2025-02-25T14:20:45.7282148Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7282282Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7282356Z E          ...
2025-02-25T14:20:45.7282466Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7282595Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7282724Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7282935Z E          ...
2025-02-25T14:20:45.7283042Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7283171Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7283290Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7283294Z 
2025-02-25T14:20:45.7283399Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7283595Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-25T14:20:45.7283599Z 
2025-02-25T14:20:45.7283737Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7283867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7283982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7284120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7284269Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7284379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7284460Z err_msg = None
2025-02-25T14:20:45.7284464Z 
2025-02-25T14:20:45.7284586Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7284669Z         if err_msg is None:
2025-02-25T14:20:45.7284781Z             if left.shape != right.shape:
2025-02-25T14:20:45.7284876Z                 raise_assert_detail(
2025-02-25T14:20:45.7285029Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7285104Z                 )
2025-02-25T14:20:45.7285195Z     
2025-02-25T14:20:45.7285275Z             diff = 0
2025-02-25T14:20:45.7285522Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7285643Z                 # count up differences
2025-02-25T14:20:45.7285818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7285923Z                     diff += 1
2025-02-25T14:20:45.7285995Z     
2025-02-25T14:20:45.7286100Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7286236Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7286416Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7286530Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7286614Z E           
2025-02-25T14:20:45.7286729Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7287011Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7287286Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7287295Z 
2025-02-25T14:20:45.7287594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7287598Z 
2025-02-25T14:20:45.7287780Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7287784Z 
2025-02-25T14:20:45.7288024Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7563c0>
2025-02-25T14:20:45.7288190Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7288284Z attr = 'j_blues'
2025-02-25T14:20:45.7288288Z 
2025-02-25T14:20:45.7288422Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7288647Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7288731Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7288812Z         try:
2025-02-25T14:20:45.7288952Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7289052Z         except KeyError:
2025-02-25T14:20:45.7289199Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7289270Z     
2025-02-25T14:20:45.7289369Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7289467Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7289573Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7289708Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7289806Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7289907Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7290036Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7290112Z             else:
2025-02-25T14:20:45.7290228Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7290339Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7290356Z 
2025-02-25T14:20:45.7290489Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7290738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7290890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7290976Z     ???
2025-02-25T14:20:45.7291095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7291099Z 
2025-02-25T14:20:45.7291190Z >   ???
2025-02-25T14:20:45.7291315Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7291393Z E   
2025-02-25T14:20:45.7291656Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7291790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7291879Z E          ...
2025-02-25T14:20:45.7291983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7292127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7292241Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7292335Z E          ...
2025-02-25T14:20:45.7292426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7292576Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7292687Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7292691Z 
2025-02-25T14:20:45.7292797Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7293015Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-25T14:20:45.7293030Z 
2025-02-25T14:20:45.7293174Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7293320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7293426Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7293578Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7293705Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7293811Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7293891Z err_msg = None
2025-02-25T14:20:45.7293894Z 
2025-02-25T14:20:45.7294022Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7294129Z         if err_msg is None:
2025-02-25T14:20:45.7294234Z             if left.shape != right.shape:
2025-02-25T14:20:45.7294354Z                 raise_assert_detail(
2025-02-25T14:20:45.7294533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7294634Z                 )
2025-02-25T14:20:45.7294704Z     
2025-02-25T14:20:45.7294817Z             diff = 0
2025-02-25T14:20:45.7295073Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7295192Z                 # count up differences
2025-02-25T14:20:45.7295370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7295472Z                     diff += 1
2025-02-25T14:20:45.7295566Z     
2025-02-25T14:20:45.7295661Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7295827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7296005Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7296130Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7296206Z E           
2025-02-25T14:20:45.7296348Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7296636Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7296945Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7296950Z 
2025-02-25T14:20:45.7297277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7297281Z 
2025-02-25T14:20:45.7297516Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7297686Z 
2025-02-25T14:20:45.7298095Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757140>
2025-02-25T14:20:45.7298400Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7298540Z attr = 'lines'
2025-02-25T14:20:45.7298547Z 
2025-02-25T14:20:45.7298800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7298925Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7299036Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7299116Z         try:
2025-02-25T14:20:45.7299274Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7299359Z         except KeyError:
2025-02-25T14:20:45.7299521Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7299599Z     
2025-02-25T14:20:45.7299712Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7299813Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7299935Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7300097Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7300190Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7300310Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7300425Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7300673Z             else:
2025-02-25T14:20:45.7300828Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7300976Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7300981Z 
2025-02-25T14:20:45.7301110Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7301253Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7301411Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7301487Z     ???
2025-02-25T14:20:45.7301617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7301629Z 
2025-02-25T14:20:45.7301703Z >   ???
2025-02-25T14:20:45.7301851Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7302096Z E   
2025-02-25T14:20:45.7302247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7302365Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7302462Z E          ...
2025-02-25T14:20:45.7302557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7302708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7302842Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7302926Z E          ...
2025-02-25T14:20:45.7303036Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7303170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7303295Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7303300Z 
2025-02-25T14:20:45.7303405Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7303678Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-25T14:20:45.7303689Z 
2025-02-25T14:20:45.7303919Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757200>
2025-02-25T14:20:45.7304111Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7304230Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7304235Z 
2025-02-25T14:20:45.7304378Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7304519Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7304616Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7304711Z         try:
2025-02-25T14:20:45.7304853Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7304961Z         except KeyError:
2025-02-25T14:20:45.7305102Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7305355Z     
2025-02-25T14:20:45.7305456Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7305575Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7305694Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7305829Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7305935Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7306033Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7306156Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7306161Z 
2025-02-25T14:20:45.7306292Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7306422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7306426Z 
2025-02-25T14:20:45.7306578Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7306678Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7306820Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7306908Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7307069Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7307163Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7307285Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7307378Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7307470Z err_msg = None
2025-02-25T14:20:45.7307474Z 
2025-02-25T14:20:45.7307593Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7307688Z         if err_msg is None:
2025-02-25T14:20:45.7307790Z             if left.shape != right.shape:
2025-02-25T14:20:45.7307883Z                 raise_assert_detail(
2025-02-25T14:20:45.7308037Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7308105Z                 )
2025-02-25T14:20:45.7308191Z     
2025-02-25T14:20:45.7308276Z             diff = 0
2025-02-25T14:20:45.7308402Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7308497Z                 # count up differences
2025-02-25T14:20:45.7308796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7308879Z                     diff += 1
2025-02-25T14:20:45.7308976Z     
2025-02-25T14:20:45.7309064Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7309215Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7309402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7309510Z E           AssertionError: Series are different
2025-02-25T14:20:45.7309596Z E           
2025-02-25T14:20:45.7309714Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7310120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7310479Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7311049Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7311055Z 
2025-02-25T14:20:45.7311398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7311669Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-25T14:20:45.7311674Z 
2025-02-25T14:20:45.7311902Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7572c0>
2025-02-25T14:20:45.7312087Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7312183Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7312187Z 
2025-02-25T14:20:45.7312340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7312459Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7312555Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7312629Z         try:
2025-02-25T14:20:45.7312792Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7312891Z         except KeyError:
2025-02-25T14:20:45.7313034Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7313121Z     
2025-02-25T14:20:45.7313210Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7313324Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7313416Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7313560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7313649Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7313756Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7313875Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7313879Z 
2025-02-25T14:20:45.7314020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7314153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7314164Z 
2025-02-25T14:20:45.7314303Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7314404Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7314648Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7314740Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7314887Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7314982Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7315091Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7315183Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7315275Z err_msg = None
2025-02-25T14:20:45.7315282Z 
2025-02-25T14:20:45.7315394Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7315495Z         if err_msg is None:
2025-02-25T14:20:45.7315594Z             if left.shape != right.shape:
2025-02-25T14:20:45.7315701Z                 raise_assert_detail(
2025-02-25T14:20:45.7315850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7315943Z                 )
2025-02-25T14:20:45.7316019Z     
2025-02-25T14:20:45.7316111Z             diff = 0
2025-02-25T14:20:45.7316230Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7316338Z                 # count up differences
2025-02-25T14:20:45.7316522Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7316608Z                     diff += 1
2025-02-25T14:20:45.7316693Z     
2025-02-25T14:20:45.7316783Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7316941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7317114Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7317235Z E           AssertionError: Series are different
2025-02-25T14:20:45.7317412Z E           
2025-02-25T14:20:45.7317538Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7317923Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7318329Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7318728Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7318741Z 
2025-02-25T14:20:45.7319071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7319277Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-25T14:20:45.7319281Z 
2025-02-25T14:20:45.7319421Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7319554Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7319684Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7319824Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7320066Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7320170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7320249Z err_msg = None
2025-02-25T14:20:45.7320253Z 
2025-02-25T14:20:45.7320372Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7320456Z         if err_msg is None:
2025-02-25T14:20:45.7320755Z             if left.shape != right.shape:
2025-02-25T14:20:45.7320855Z                 raise_assert_detail(
2025-02-25T14:20:45.7321017Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7321094Z                 )
2025-02-25T14:20:45.7321175Z     
2025-02-25T14:20:45.7321265Z             diff = 0
2025-02-25T14:20:45.7321384Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7321489Z                 # count up differences
2025-02-25T14:20:45.7321662Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7321762Z                     diff += 1
2025-02-25T14:20:45.7321833Z     
2025-02-25T14:20:45.7321941Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7322083Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7322268Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7322382Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7322477Z E           
2025-02-25T14:20:45.7322597Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7323033Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7323316Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7323321Z 
2025-02-25T14:20:45.7323623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7323641Z 
2025-02-25T14:20:45.7323818Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7323822Z 
2025-02-25T14:20:45.7324071Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757500>
2025-02-25T14:20:45.7324283Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>, attr = 'nu'
2025-02-25T14:20:45.7324287Z 
2025-02-25T14:20:45.7324438Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7324561Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7324660Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7324741Z         try:
2025-02-25T14:20:45.7324897Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7324994Z         except KeyError:
2025-02-25T14:20:45.7325135Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7325222Z     
2025-02-25T14:20:45.7325317Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7325433Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7325526Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7325677Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7325772Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7325893Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7326012Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7326017Z 
2025-02-25T14:20:45.7326290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7326421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7326573Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7326653Z     ???
2025-02-25T14:20:45.7326767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7326771Z 
2025-02-25T14:20:45.7326858Z >   ???
2025-02-25T14:20:45.7326989Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7327075Z E   
2025-02-25T14:20:45.7327210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7327341Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7327422Z E          ...
2025-02-25T14:20:45.7327530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7327666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7327779Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7327870Z E          ...
2025-02-25T14:20:45.7327965Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7328113Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7328227Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7328231Z 
2025-02-25T14:20:45.7328338Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7328568Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-25T14:20:45.7328572Z 
2025-02-25T14:20:45.7328720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7328868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7329069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7329228Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7329365Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7329479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7329559Z err_msg = None
2025-02-25T14:20:45.7329563Z 
2025-02-25T14:20:45.7329690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7329776Z         if err_msg is None:
2025-02-25T14:20:45.7329893Z             if left.shape != right.shape:
2025-02-25T14:20:45.7329992Z                 raise_assert_detail(
2025-02-25T14:20:45.7330139Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7330234Z                 )
2025-02-25T14:20:45.7330308Z     
2025-02-25T14:20:45.7330398Z             diff = 0
2025-02-25T14:20:45.7330623Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7330741Z                 # count up differences
2025-02-25T14:20:45.7330922Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7331026Z                     diff += 1
2025-02-25T14:20:45.7331109Z     
2025-02-25T14:20:45.7331284Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7331548Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7331847Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7332055Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7332192Z E           
2025-02-25T14:20:45.7332408Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7332734Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7333167Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7333173Z 
2025-02-25T14:20:45.7333506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7333510Z 
2025-02-25T14:20:45.7333686Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7333692Z 
2025-02-25T14:20:45.7333943Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7575c0>
2025-02-25T14:20:45.7334121Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7334228Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7334232Z 
2025-02-25T14:20:45.7334386Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7334520Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7334616Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7334692Z         try:
2025-02-25T14:20:45.7334857Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7334943Z         except KeyError:
2025-02-25T14:20:45.7335106Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7335181Z     
2025-02-25T14:20:45.7335292Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7335389Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7335506Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7335657Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7335753Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7335990Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7336111Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7336126Z 
2025-02-25T14:20:45.7336268Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7336383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7336558Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7336639Z     ???
2025-02-25T14:20:45.7336787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7336792Z 
2025-02-25T14:20:45.7336884Z >   ???
2025-02-25T14:20:45.7337018Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7337107Z E   
2025-02-25T14:20:45.7337242Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7337378Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7337454Z E          ...
2025-02-25T14:20:45.7337577Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7337717Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7337867Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7337949Z E          ...
2025-02-25T14:20:45.7338064Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7338207Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7338351Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7338356Z 
2025-02-25T14:20:45.7338469Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7338684Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-25T14:20:45.7338687Z 
2025-02-25T14:20:45.7338838Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7338990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7339116Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7339260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7339506Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7339620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7339707Z err_msg = None
2025-02-25T14:20:45.7339711Z 
2025-02-25T14:20:45.7339842Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7339931Z         if err_msg is None:
2025-02-25T14:20:45.7340051Z             if left.shape != right.shape:
2025-02-25T14:20:45.7340144Z                 raise_assert_detail(
2025-02-25T14:20:45.7340311Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7340395Z                 )
2025-02-25T14:20:45.7340484Z     
2025-02-25T14:20:45.7340769Z             diff = 0
2025-02-25T14:20:45.7340920Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7341029Z                 # count up differences
2025-02-25T14:20:45.7341222Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7341319Z                     diff += 1
2025-02-25T14:20:45.7341398Z     
2025-02-25T14:20:45.7341499Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7341638Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7341823Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7341949Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7342035Z E           
2025-02-25T14:20:45.7342153Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7342573Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7342867Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7342873Z 
2025-02-25T14:20:45.7343180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7343185Z 
2025-02-25T14:20:45.7343371Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7343375Z 
2025-02-25T14:20:45.7343613Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757680>
2025-02-25T14:20:45.7343828Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>, attr = 'f_lu'
2025-02-25T14:20:45.7343833Z 
2025-02-25T14:20:45.7344006Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7344138Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7344244Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7344334Z         try:
2025-02-25T14:20:45.7344496Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7344582Z         except KeyError:
2025-02-25T14:20:45.7344734Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7344827Z     
2025-02-25T14:20:45.7344919Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7345029Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7345126Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7345279Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7345371Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7345486Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7345602Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7345735Z 
2025-02-25T14:20:45.7345876Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7346010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7346160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7346250Z     ???
2025-02-25T14:20:45.7346365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7346369Z 
2025-02-25T14:20:45.7346452Z >   ???
2025-02-25T14:20:45.7346582Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7346675Z E   
2025-02-25T14:20:45.7346810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7346940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7347022Z E          ...
2025-02-25T14:20:45.7347142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7347294Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7347417Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7347509Z E          ...
2025-02-25T14:20:45.7347600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7347754Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7356368Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7356382Z 
2025-02-25T14:20:45.7356512Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7356762Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-25T14:20:45.7356767Z 
2025-02-25T14:20:45.7356913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7357060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7357486Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7357750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7357990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7358154Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7358304Z err_msg = None
2025-02-25T14:20:45.7358313Z 
2025-02-25T14:20:45.7358475Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7358575Z         if err_msg is None:
2025-02-25T14:20:45.7358679Z             if left.shape != right.shape:
2025-02-25T14:20:45.7358782Z                 raise_assert_detail(
2025-02-25T14:20:45.7358958Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7359037Z                 )
2025-02-25T14:20:45.7359124Z     
2025-02-25T14:20:45.7359200Z             diff = 0
2025-02-25T14:20:45.7359346Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7359441Z                 # count up differences
2025-02-25T14:20:45.7359628Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7359720Z                     diff += 1
2025-02-25T14:20:45.7359800Z     
2025-02-25T14:20:45.7359898Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7360073Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7360251Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7360380Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7360467Z E           
2025-02-25T14:20:45.7360807Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7361105Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7361626Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7361644Z 
2025-02-25T14:20:45.7361977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7361982Z 
2025-02-25T14:20:45.7362173Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7362177Z 
2025-02-25T14:20:45.7362417Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757e00>
2025-02-25T14:20:45.7362615Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7362705Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7362710Z 
2025-02-25T14:20:45.7362862Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7363003Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7363094Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7363175Z         try:
2025-02-25T14:20:45.7363324Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7363428Z         except KeyError:
2025-02-25T14:20:45.7363572Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7363658Z     
2025-02-25T14:20:45.7363754Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7363863Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7363965Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7364119Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7364340Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7364449Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7364572Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7364657Z             else:
2025-02-25T14:20:45.7364768Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7364877Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7364881Z 
2025-02-25T14:20:45.7365031Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7365153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7365319Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7365393Z     ???
2025-02-25T14:20:45.7365525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7365530Z 
2025-02-25T14:20:45.7365618Z >   ???
2025-02-25T14:20:45.7365760Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7365848Z E   
2025-02-25T14:20:45.7365990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7366118Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7366200Z E          ...
2025-02-25T14:20:45.7366301Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7366437Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7366561Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7366642Z E          ...
2025-02-25T14:20:45.7366740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7366871Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7367000Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7367004Z 
2025-02-25T14:20:45.7367114Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7367334Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-25T14:20:45.7367338Z 
2025-02-25T14:20:45.7367490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7367638Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7367856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7367996Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7368142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7368258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7368338Z err_msg = None
2025-02-25T14:20:45.7368342Z 
2025-02-25T14:20:45.7368474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7368569Z         if err_msg is None:
2025-02-25T14:20:45.7368689Z             if left.shape != right.shape:
2025-02-25T14:20:45.7368778Z                 raise_assert_detail(
2025-02-25T14:20:45.7368953Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7369027Z                 )
2025-02-25T14:20:45.7369113Z     
2025-02-25T14:20:45.7369196Z             diff = 0
2025-02-25T14:20:45.7369323Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7369451Z                 # count up differences
2025-02-25T14:20:45.7369759Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7369912Z                     diff += 1
2025-02-25T14:20:45.7370035Z     
2025-02-25T14:20:45.7370206Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7370444Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7370896Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7371025Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7371107Z E           
2025-02-25T14:20:45.7371368Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7371649Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7371925Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7371931Z 
2025-02-25T14:20:45.7372249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7372254Z 
2025-02-25T14:20:45.7372449Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7372453Z 
2025-02-25T14:20:45.7372702Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757ec0>
2025-02-25T14:20:45.7372882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7372976Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7372981Z 
2025-02-25T14:20:45.7373122Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7373252Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7373340Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7373429Z         try:
2025-02-25T14:20:45.7373573Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7373671Z         except KeyError:
2025-02-25T14:20:45.7373832Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7373908Z     
2025-02-25T14:20:45.7374009Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7374119Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7374222Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7374361Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7374623Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7374721Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7374855Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7374933Z             else:
2025-02-25T14:20:45.7375049Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7375171Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7375176Z 
2025-02-25T14:20:45.7375310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7375450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7375603Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7375697Z     ???
2025-02-25T14:20:45.7375820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7375824Z 
2025-02-25T14:20:45.7375911Z >   ???
2025-02-25T14:20:45.7376040Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7376141Z E   
2025-02-25T14:20:45.7376272Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7376404Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7376489Z E          ...
2025-02-25T14:20:45.7376578Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7376728Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7376844Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7376935Z E          ...
2025-02-25T14:20:45.7377030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7377181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7377295Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7377397Z 
2025-02-25T14:20:45.7377506Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7377731Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-25T14:20:45.7377744Z 
2025-02-25T14:20:45.7377878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7378022Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7378124Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7378269Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7378398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7378506Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7378588Z err_msg = None
2025-02-25T14:20:45.7378605Z 
2025-02-25T14:20:45.7378721Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7378821Z         if err_msg is None:
2025-02-25T14:20:45.7378922Z             if left.shape != right.shape:
2025-02-25T14:20:45.7379028Z                 raise_assert_detail(
2025-02-25T14:20:45.7379188Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7379269Z                 )
2025-02-25T14:20:45.7379342Z     
2025-02-25T14:20:45.7379433Z             diff = 0
2025-02-25T14:20:45.7379544Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7379658Z                 # count up differences
2025-02-25T14:20:45.7379841Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7379993Z                     diff += 1
2025-02-25T14:20:45.7380145Z     
2025-02-25T14:20:45.7380307Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7380682Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7380999Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7381208Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7381516Z E           
2025-02-25T14:20:45.7381646Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7381914Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7382190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7382195Z 
2025-02-25T14:20:45.7382523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7382528Z 
2025-02-25T14:20:45.7382708Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7382713Z 
2025-02-25T14:20:45.7382952Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57c080>
2025-02-25T14:20:45.7383137Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7383217Z attr = 'j_blues'
2025-02-25T14:20:45.7383221Z 
2025-02-25T14:20:45.7383368Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7383487Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7383591Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7383669Z         try:
2025-02-25T14:20:45.7383835Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7383918Z         except KeyError:
2025-02-25T14:20:45.7384192Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7384270Z     
2025-02-25T14:20:45.7384371Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7384475Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7384566Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7384715Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7384805Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7384909Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7385024Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7385110Z             else:
2025-02-25T14:20:45.7385211Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7385331Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7385336Z 
2025-02-25T14:20:45.7385466Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7385600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7385757Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7385830Z     ???
2025-02-25T14:20:45.7385964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7385968Z 
2025-02-25T14:20:45.7386043Z >   ???
2025-02-25T14:20:45.7386191Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7386266Z E   
2025-02-25T14:20:45.7386408Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7386522Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7386613Z E          ...
2025-02-25T14:20:45.7386706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7386858Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7386991Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7387069Z E          ...
2025-02-25T14:20:45.7387175Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7387303Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7387426Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7387538Z 
2025-02-25T14:20:45.7387636Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7387905Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-25T14:20:45.7387909Z 
2025-02-25T14:20:45.7388054Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7388186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7388299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7388437Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7388588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7388689Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7388771Z err_msg = None
2025-02-25T14:20:45.7388784Z 
2025-02-25T14:20:45.7388902Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7388996Z         if err_msg is None:
2025-02-25T14:20:45.7389099Z             if left.shape != right.shape:
2025-02-25T14:20:45.7389191Z                 raise_assert_detail(
2025-02-25T14:20:45.7389378Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7389477Z                 )
2025-02-25T14:20:45.7389558Z     
2025-02-25T14:20:45.7389638Z             diff = 0
2025-02-25T14:20:45.7389759Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7389851Z                 # count up differences
2025-02-25T14:20:45.7390033Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7390114Z                     diff += 1
2025-02-25T14:20:45.7390297Z     
2025-02-25T14:20:45.7390393Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7390738Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7390946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7391064Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7391159Z E           
2025-02-25T14:20:45.7391271Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7391549Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7391819Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7391838Z 
2025-02-25T14:20:45.7392149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7392154Z 
2025-02-25T14:20:45.7392340Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7392345Z 
2025-02-25T14:20:45.7392567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57ce00>
2025-02-25T14:20:45.7392729Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7392800Z attr = 'lines'
2025-02-25T14:20:45.7392815Z 
2025-02-25T14:20:45.7392947Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7393075Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7393175Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7393267Z         try:
2025-02-25T14:20:45.7393413Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7393657Z         except KeyError:
2025-02-25T14:20:45.7393802Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7393893Z     
2025-02-25T14:20:45.7393985Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7394095Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7394183Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7394331Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7394414Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7394513Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7394633Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7394711Z             else:
2025-02-25T14:20:45.7394815Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7394935Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7394940Z 
2025-02-25T14:20:45.7395083Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7395206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7395364Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7395429Z     ???
2025-02-25T14:20:45.7395552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7395556Z 
2025-02-25T14:20:45.7395629Z >   ???
2025-02-25T14:20:45.7395755Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7395831Z E   
2025-02-25T14:20:45.7395964Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7396097Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7396166Z E          ...
2025-02-25T14:20:45.7396638Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7396907Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7397037Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7397124Z E          ...
2025-02-25T14:20:45.7397223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7397347Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7397473Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7397477Z 
2025-02-25T14:20:45.7397587Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7397908Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-25T14:20:45.7397912Z 
2025-02-25T14:20:45.7398147Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57cec0>
2025-02-25T14:20:45.7398316Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7398425Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7398429Z 
2025-02-25T14:20:45.7398581Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7398709Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7398818Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7398896Z         try:
2025-02-25T14:20:45.7399052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7399136Z         except KeyError:
2025-02-25T14:20:45.7399282Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7399365Z     
2025-02-25T14:20:45.7399466Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7399565Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7399703Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7399946Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7400106Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7400272Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7400493Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7400622Z 
2025-02-25T14:20:45.7400849Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7401219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7401226Z 
2025-02-25T14:20:45.7401476Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7401615Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7401814Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7401956Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7402216Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7402393Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7402579Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7402735Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7402873Z err_msg = None
2025-02-25T14:20:45.7402879Z 
2025-02-25T14:20:45.7403092Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7403209Z         if err_msg is None:
2025-02-25T14:20:45.7403323Z             if left.shape != right.shape:
2025-02-25T14:20:45.7403413Z                 raise_assert_detail(
2025-02-25T14:20:45.7403572Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7403647Z                 )
2025-02-25T14:20:45.7403735Z     
2025-02-25T14:20:45.7403828Z             diff = 0
2025-02-25T14:20:45.7403941Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7404043Z                 # count up differences
2025-02-25T14:20:45.7404221Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7404313Z                     diff += 1
2025-02-25T14:20:45.7404382Z     
2025-02-25T14:20:45.7404478Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7404754Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7404940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7405052Z E           AssertionError: Series are different
2025-02-25T14:20:45.7405132Z E           
2025-02-25T14:20:45.7405232Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7405614Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7405970Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7406320Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7406325Z 
2025-02-25T14:20:45.7406630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7406960Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-25T14:20:45.7406964Z 
2025-02-25T14:20:45.7407191Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57cf80>
2025-02-25T14:20:45.7407380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7407597Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7407602Z 
2025-02-25T14:20:45.7407741Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7407861Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7407942Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7408017Z         try:
2025-02-25T14:20:45.7408167Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7408259Z         except KeyError:
2025-02-25T14:20:45.7408400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7408479Z     
2025-02-25T14:20:45.7408567Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7408671Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7408764Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7408907Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7409006Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7409111Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7409229Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7409233Z 
2025-02-25T14:20:45.7409356Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7409482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7409486Z 
2025-02-25T14:20:45.7409617Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7409710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7409829Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7409908Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7410158Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7410244Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7410358Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7410448Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7410721Z err_msg = None
2025-02-25T14:20:45.7410730Z 
2025-02-25T14:20:45.7410863Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7410959Z         if err_msg is None:
2025-02-25T14:20:45.7411054Z             if left.shape != right.shape:
2025-02-25T14:20:45.7411143Z                 raise_assert_detail(
2025-02-25T14:20:45.7411292Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7411364Z                 )
2025-02-25T14:20:45.7411436Z     
2025-02-25T14:20:45.7411510Z             diff = 0
2025-02-25T14:20:45.7411633Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7411720Z                 # count up differences
2025-02-25T14:20:45.7411905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7411983Z                     diff += 1
2025-02-25T14:20:45.7412068Z     
2025-02-25T14:20:45.7412160Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7412305Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7412485Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7412591Z E           AssertionError: Series are different
2025-02-25T14:20:45.7412677Z E           
2025-02-25T14:20:45.7412781Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7413175Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7413560Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7414084Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7414095Z 
2025-02-25T14:20:45.7414412Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7414664Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-25T14:20:45.7414669Z 
2025-02-25T14:20:45.7414802Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7414945Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7415051Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7415189Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7415313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7415418Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7415494Z err_msg = None
2025-02-25T14:20:45.7415629Z 
2025-02-25T14:20:45.7415742Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7415831Z         if err_msg is None:
2025-02-25T14:20:45.7415934Z             if left.shape != right.shape:
2025-02-25T14:20:45.7416034Z                 raise_assert_detail(
2025-02-25T14:20:45.7416174Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7416264Z                 )
2025-02-25T14:20:45.7416335Z     
2025-02-25T14:20:45.7416419Z             diff = 0
2025-02-25T14:20:45.7416535Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7416633Z                 # count up differences
2025-02-25T14:20:45.7416796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7416884Z                     diff += 1
2025-02-25T14:20:45.7416973Z     
2025-02-25T14:20:45.7417062Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7417211Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7417381Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7417516Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7417590Z E           
2025-02-25T14:20:45.7417708Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7417972Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7418241Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7418246Z 
2025-02-25T14:20:45.7418564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7418734Z 
2025-02-25T14:20:45.7418903Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7418907Z 
2025-02-25T14:20:45.7419133Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d1c0>
2025-02-25T14:20:45.7419343Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>, attr = 'nu'
2025-02-25T14:20:45.7419347Z 
2025-02-25T14:20:45.7419485Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7419608Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7419694Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7419775Z         try:
2025-02-25T14:20:45.7419914Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7420011Z         except KeyError:
2025-02-25T14:20:45.7420143Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7420218Z     
2025-02-25T14:20:45.7420316Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7420414Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7420668Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7420839Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7420940Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7421031Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7421155Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7421159Z 
2025-02-25T14:20:45.7421282Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7421407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7421555Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7421768Z     ???
2025-02-25T14:20:45.7421885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7421901Z 
2025-02-25T14:20:45.7421979Z >   ???
2025-02-25T14:20:45.7422110Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7422181Z E   
2025-02-25T14:20:45.7422315Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7422430Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7422507Z E          ...
2025-02-25T14:20:45.7422591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7422728Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7422840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7422924Z E          ...
2025-02-25T14:20:45.7423010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7423140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7423272Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7423276Z 
2025-02-25T14:20:45.7423367Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7423669Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-25T14:20:45.7423674Z 
2025-02-25T14:20:45.7423803Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7423933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7424031Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7424174Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7424311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7424407Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7424486Z err_msg = None
2025-02-25T14:20:45.7424504Z 
2025-02-25T14:20:45.7424611Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7424697Z         if err_msg is None:
2025-02-25T14:20:45.7424927Z             if left.shape != right.shape:
2025-02-25T14:20:45.7425022Z                 raise_assert_detail(
2025-02-25T14:20:45.7425162Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7425238Z                 )
2025-02-25T14:20:45.7425312Z     
2025-02-25T14:20:45.7425389Z             diff = 0
2025-02-25T14:20:45.7425508Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7425597Z                 # count up differences
2025-02-25T14:20:45.7425764Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7425839Z                     diff += 1
2025-02-25T14:20:45.7425918Z     
2025-02-25T14:20:45.7426006Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7426156Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7426323Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7426459Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7426534Z E           
2025-02-25T14:20:45.7426662Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7426927Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7427459Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7427470Z 
2025-02-25T14:20:45.7428001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7428018Z 
2025-02-25T14:20:45.7428254Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7428259Z 
2025-02-25T14:20:45.7428481Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d280>
2025-02-25T14:20:45.7428659Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7428742Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7428747Z 
2025-02-25T14:20:45.7428882Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7429007Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7429103Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7429182Z         try:
2025-02-25T14:20:45.7429330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7429430Z         except KeyError:
2025-02-25T14:20:45.7429573Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7429662Z     
2025-02-25T14:20:45.7429755Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7429859Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7429946Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7430082Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7430163Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7430269Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7430381Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7430394Z 
2025-02-25T14:20:45.7430688Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7430848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7431012Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7431098Z     ???
2025-02-25T14:20:45.7431215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7431365Z 
2025-02-25T14:20:45.7431452Z >   ???
2025-02-25T14:20:45.7431577Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7431663Z E   
2025-02-25T14:20:45.7431800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7431922Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7431995Z E          ...
2025-02-25T14:20:45.7432082Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7432222Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7432337Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7432423Z E          ...
2025-02-25T14:20:45.7432515Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7432665Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7432772Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7432777Z 
2025-02-25T14:20:45.7432888Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7433153Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-25T14:20:45.7433165Z 
2025-02-25T14:20:45.7433293Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7433429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7433527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7433672Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7433797Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7433896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7434106Z err_msg = None
2025-02-25T14:20:45.7434110Z 
2025-02-25T14:20:45.7434227Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7434325Z         if err_msg is None:
2025-02-25T14:20:45.7434423Z             if left.shape != right.shape:
2025-02-25T14:20:45.7434519Z                 raise_assert_detail(
2025-02-25T14:20:45.7434664Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7434743Z                 )
2025-02-25T14:20:45.7434814Z     
2025-02-25T14:20:45.7434897Z             diff = 0
2025-02-25T14:20:45.7435016Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7435114Z                 # count up differences
2025-02-25T14:20:45.7435283Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7435390Z                     diff += 1
2025-02-25T14:20:45.7435463Z     
2025-02-25T14:20:45.7435561Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7435724Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7435901Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7436030Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7436108Z E           
2025-02-25T14:20:45.7436247Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7436508Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7436782Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7436787Z 
2025-02-25T14:20:45.7437083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7437214Z 
2025-02-25T14:20:45.7437387Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7437391Z 
2025-02-25T14:20:45.7437621Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d340>
2025-02-25T14:20:45.7437841Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>, attr = 'f_lu'
2025-02-25T14:20:45.7437845Z 
2025-02-25T14:20:45.7437984Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7438112Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7438197Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7438272Z         try:
2025-02-25T14:20:45.7438423Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7438520Z         except KeyError:
2025-02-25T14:20:45.7438663Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7438748Z     
2025-02-25T14:20:45.7438836Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7438934Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7439036Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7439171Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7439280Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7439383Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7439512Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7439516Z 
2025-02-25T14:20:45.7439643Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7439763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7440012Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7440096Z     ???
2025-02-25T14:20:45.7440208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7440231Z 
2025-02-25T14:20:45.7440303Z >   ???
2025-02-25T14:20:45.7440443Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7440620Z E   
2025-02-25T14:20:45.7440765Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7440881Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7440967Z E          ...
2025-02-25T14:20:45.7441054Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7441196Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7441312Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7441394Z E          ...
2025-02-25T14:20:45.7441486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7441633Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7441749Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7441753Z 
2025-02-25T14:20:45.7441845Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7442143Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-25T14:20:45.7442147Z 
2025-02-25T14:20:45.7442276Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7442418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7442514Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7442664Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7442797Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7442892Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7442993Z err_msg = None
2025-02-25T14:20:45.7442997Z 
2025-02-25T14:20:45.7443112Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7443351Z         if err_msg is None:
2025-02-25T14:20:45.7443447Z             if left.shape != right.shape:
2025-02-25T14:20:45.7443546Z                 raise_assert_detail(
2025-02-25T14:20:45.7443685Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7443764Z                 )
2025-02-25T14:20:45.7443839Z     
2025-02-25T14:20:45.7443914Z             diff = 0
2025-02-25T14:20:45.7444039Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7444133Z                 # count up differences
2025-02-25T14:20:45.7444317Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7444398Z                     diff += 1
2025-02-25T14:20:45.7444484Z     
2025-02-25T14:20:45.7444580Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7444735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7444906Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7445043Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7445118Z E           
2025-02-25T14:20:45.7445249Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7445526Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7445917Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7445923Z 
2025-02-25T14:20:45.7446250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7446255Z 
2025-02-25T14:20:45.7446431Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7446436Z 
2025-02-25T14:20:45.7446660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57dac0>
2025-02-25T14:20:45.7446839Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7446922Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7446926Z 
2025-02-25T14:20:45.7447070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7447185Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7447279Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7447354Z         try:
2025-02-25T14:20:45.7447513Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7447606Z         except KeyError:
2025-02-25T14:20:45.7447743Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7447829Z     
2025-02-25T14:20:45.7447922Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7448028Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7448121Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7448269Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7448358Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7448465Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7448590Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7448674Z             else:
2025-02-25T14:20:45.7448792Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7448905Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7448910Z 
2025-02-25T14:20:45.7449054Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7449173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7449438Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7449513Z     ???
2025-02-25T14:20:45.7449644Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7449648Z 
2025-02-25T14:20:45.7449720Z >   ???
2025-02-25T14:20:45.7449858Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7449927Z E   
2025-02-25T14:20:45.7450064Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7450190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7450277Z E          ...
2025-02-25T14:20:45.7450380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7450668Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7450840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7450915Z E          ...
2025-02-25T14:20:45.7451023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7451160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7451293Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7451297Z 
2025-02-25T14:20:45.7451400Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7451697Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-25T14:20:45.7451702Z 
2025-02-25T14:20:45.7451857Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7451994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7452109Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7452424Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7452585Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7452693Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7452787Z err_msg = None
2025-02-25T14:20:45.7452791Z 
2025-02-25T14:20:45.7452918Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7453004Z         if err_msg is None:
2025-02-25T14:20:45.7453124Z             if left.shape != right.shape:
2025-02-25T14:20:45.7453206Z                 raise_assert_detail(
2025-02-25T14:20:45.7453350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7453425Z                 )
2025-02-25T14:20:45.7453509Z     
2025-02-25T14:20:45.7453592Z             diff = 0
2025-02-25T14:20:45.7453815Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7453971Z                 # count up differences
2025-02-25T14:20:45.7454298Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7454452Z                     diff += 1
2025-02-25T14:20:45.7454589Z     
2025-02-25T14:20:45.7454716Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7454865Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7455066Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7455185Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7455273Z E           
2025-02-25T14:20:45.7455387Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7455669Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7455945Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7456099Z 
2025-02-25T14:20:45.7456414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7456419Z 
2025-02-25T14:20:45.7456612Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7456617Z 
2025-02-25T14:20:45.7456861Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57db80>
2025-02-25T14:20:45.7457039Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7457141Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7457145Z 
2025-02-25T14:20:45.7457298Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7457428Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7457517Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7457619Z         try:
2025-02-25T14:20:45.7457759Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7457860Z         except KeyError:
2025-02-25T14:20:45.7458007Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7458105Z     
2025-02-25T14:20:45.7458216Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7458314Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7458423Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7458557Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7458664Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7458768Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7458993Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7459075Z             else:
2025-02-25T14:20:45.7459175Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7459283Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7459295Z 
2025-02-25T14:20:45.7459433Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7459583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7459731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7459826Z     ???
2025-02-25T14:20:45.7459944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7459948Z 
2025-02-25T14:20:45.7460039Z >   ???
2025-02-25T14:20:45.7460168Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7460255Z E   
2025-02-25T14:20:45.7460382Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7460636Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7460733Z E          ...
2025-02-25T14:20:45.7460828Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7460971Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7461092Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7461198Z E          ...
2025-02-25T14:20:45.7461296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7461440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7461547Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7461552Z 
2025-02-25T14:20:45.7461660Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7461938Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-25T14:20:45.7461957Z 
2025-02-25T14:20:45.7462091Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7462259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7462361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7462636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7462766Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7462872Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7462949Z err_msg = None
2025-02-25T14:20:45.7462953Z 
2025-02-25T14:20:45.7463085Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7463174Z         if err_msg is None:
2025-02-25T14:20:45.7463271Z             if left.shape != right.shape:
2025-02-25T14:20:45.7463373Z                 raise_assert_detail(
2025-02-25T14:20:45.7463530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7463614Z                 )
2025-02-25T14:20:45.7463687Z     
2025-02-25T14:20:45.7463787Z             diff = 0
2025-02-25T14:20:45.7463902Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7464017Z                 # count up differences
2025-02-25T14:20:45.7464188Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7464279Z                     diff += 1
2025-02-25T14:20:45.7464352Z     
2025-02-25T14:20:45.7464452Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7464603Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7464781Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7464911Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7464988Z E           
2025-02-25T14:20:45.7465122Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7465503Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7465792Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7465797Z 
2025-02-25T14:20:45.7466123Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7466127Z 
2025-02-25T14:20:45.7466299Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7466303Z 
2025-02-25T14:20:45.7466548Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57dd00>
2025-02-25T14:20:45.7466713Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7466803Z attr = 'j_blues'
2025-02-25T14:20:45.7466813Z 
2025-02-25T14:20:45.7466968Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7467079Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7467176Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7467242Z         try:
2025-02-25T14:20:45.7467385Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7467470Z         except KeyError:
2025-02-25T14:20:45.7467625Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7467699Z     
2025-02-25T14:20:45.7467805Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7467911Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7468015Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7468174Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7468263Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7468364Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7468581Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7468667Z             else:
2025-02-25T14:20:45.7468767Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7468898Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7468902Z 
2025-02-25T14:20:45.7469035Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7469168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7469338Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7469411Z     ???
2025-02-25T14:20:45.7469541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7469545Z 
2025-02-25T14:20:45.7469621Z >   ???
2025-02-25T14:20:45.7469772Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7469846Z E   
2025-02-25T14:20:45.7469990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7470113Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7470204Z E          ...
2025-02-25T14:20:45.7470295Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7470437Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7470745Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7470830Z E          ...
2025-02-25T14:20:45.7470932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7471062Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7471181Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7471185Z 
2025-02-25T14:20:45.7471282Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7471620Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-25T14:20:45.7471626Z 
2025-02-25T14:20:45.7471868Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7471990Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.7472281Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89ec254830>
2025-02-25T14:20:45.7472285Z 
2025-02-25T14:20:45.7472445Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7472635Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7472764Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7472915Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7473042Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7473143Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7473234Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7473371Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7473377Z 
2025-02-25T14:20:45.7473581Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7473782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7473788Z 
2025-02-25T14:20:45.7474347Z args = (<function assert_allclose.<locals>.compare at 0x7f89db29ba60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-25T14:20:45.7474473Z         0.01476858],
2025-02-25T14:20:45.7474625Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-25T14:20:45.7474705Z         0.01473787]]))
2025-02-25T14:20:45.7474971Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7474975Z 
2025-02-25T14:20:45.7475068Z     @wraps(func)
2025-02-25T14:20:45.7475157Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7475265Z         with self._recreate_cm():
2025-02-25T14:20:45.7475373Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7475475Z E           AssertionError: 
2025-02-25T14:20:45.7475586Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7475845Z E           
2025-02-25T14:20:45.7475959Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:20:45.7476070Z E           Max absolute difference: 1.
2025-02-25T14:20:45.7476163Z E           Max relative difference: 1.
2025-02-25T14:20:45.7476305Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476416Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476536Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.7476670Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476785Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476904Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.7476908Z 
2025-02-25T14:20:45.7477117Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7477292Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-25T14:20:45.7477295Z 
2025-02-25T14:20:45.7477536Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7477632Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7477917Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a04ca91c0>
2025-02-25T14:20:45.7477921Z 
2025-02-25T14:20:45.7478069Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7478245Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7478368Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7478602Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7478727Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7478830Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7478929Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7479036Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7479040Z 
2025-02-25T14:20:45.7479164Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7479277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7479280Z 
2025-02-25T14:20:45.7479688Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e13d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-25T14:20:45.7479937Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7479941Z 
2025-02-25T14:20:45.7480031Z     @wraps(func)
2025-02-25T14:20:45.7480127Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7480216Z         with self._recreate_cm():
2025-02-25T14:20:45.7480315Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7480405Z E           AssertionError: 
2025-02-25T14:20:45.7480640Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7480718Z E           
2025-02-25T14:20:45.7480842Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:20:45.7480942Z E           Max absolute difference: 4005
2025-02-25T14:20:45.7481055Z E           Max relative difference: 26.00649351
2025-02-25T14:20:45.7481165Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.7481296Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.7481300Z 
2025-02-25T14:20:45.7481514Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7481688Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-25T14:20:45.7481692Z 
2025-02-25T14:20:45.7481936Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7482174Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7482457Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a04c9c740>
2025-02-25T14:20:45.7482461Z 
2025-02-25T14:20:45.7482611Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7482784Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7482914Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7483042Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7483175Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7483265Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7483366Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7483472Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7483475Z 
2025-02-25T14:20:45.7483587Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7483710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7483714Z 
2025-02-25T14:20:45.7484123Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e11a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-25T14:20:45.7484384Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7484388Z 
2025-02-25T14:20:45.7484466Z     @wraps(func)
2025-02-25T14:20:45.7484566Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7484666Z         with self._recreate_cm():
2025-02-25T14:20:45.7484763Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7484849Z E           AssertionError: 
2025-02-25T14:20:45.7485081Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7485154Z E           
2025-02-25T14:20:45.7485272Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:20:45.7485394Z E           Max absolute difference: 4046
2025-02-25T14:20:45.7485509Z E           Max relative difference: 24.82208589
2025-02-25T14:20:45.7485643Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.7485755Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.7485759Z 
2025-02-25T14:20:45.7485977Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7486133Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-25T14:20:45.7486137Z 
2025-02-25T14:20:45.7486381Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7486463Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7486751Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1c5d93a0>
2025-02-25T14:20:45.7486755Z 
2025-02-25T14:20:45.7486915Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7487096Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7487228Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7487362Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7487503Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7487597Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7487698Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7487805Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7487818Z 
2025-02-25T14:20:45.7487933Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7488061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7488065Z 
2025-02-25T14:20:45.7488340Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e125c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488430Z        [1., 1., .....,
2025-02-25T14:20:45.7488618Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488719Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488799Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:20:45.7489060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7489064Z 
2025-02-25T14:20:45.7489156Z     @wraps(func)
2025-02-25T14:20:45.7489243Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7489348Z         with self._recreate_cm():
2025-02-25T14:20:45.7489438Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7489533Z E           AssertionError: 
2025-02-25T14:20:45.7489643Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7489741Z E           
2025-02-25T14:20:45.7489862Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.7489986Z E           Max absolute difference: 0.99984222
2025-02-25T14:20:45.7490092Z E           Max relative difference: 6337.12154973
2025-02-25T14:20:45.7490206Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490298Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490415Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.7490668Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490797Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490910Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.7490914Z 
2025-02-25T14:20:45.7491120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7491283Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-25T14:20:45.7491287Z 
2025-02-25T14:20:45.7491662Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7491745Z attr = 'lines'
2025-02-25T14:20:45.7492032Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db2b4440>
2025-02-25T14:20:45.7492043Z 
2025-02-25T14:20:45.7492200Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7492383Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7492515Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7492661Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7492786Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7492898Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7492995Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7493117Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7493121Z 
2025-02-25T14:20:45.7493307Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7493518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7493525Z 
2025-02-25T14:20:45.7494306Z args = (<function assert_allclose.<locals>.compare at 0x7f89db24dbc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-25T14:20:45.7494422Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-25T14:20:45.7494677Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7494682Z 
2025-02-25T14:20:45.7494762Z     @wraps(func)
2025-02-25T14:20:45.7494871Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7494970Z         with self._recreate_cm():
2025-02-25T14:20:45.7495061Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7495152Z E           AssertionError: 
2025-02-25T14:20:45.7495255Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7495326Z E           
2025-02-25T14:20:45.7495438Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:20:45.7495557Z E           Max absolute difference: 4.25260542e+12
2025-02-25T14:20:45.7495800Z E           Max relative difference: 18196.0085861
2025-02-25T14:20:45.7495980Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.7496078Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.7496237Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.7496399Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.7496491Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.7496639Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.7496643Z 
2025-02-25T14:20:45.7496849Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7497029Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-25T14:20:45.7497033Z 
2025-02-25T14:20:45.7497259Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7497361Z attr = 'f_lu'
2025-02-25T14:20:45.7497643Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db2b6d80>
2025-02-25T14:20:45.7497647Z 
2025-02-25T14:20:45.7497795Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7497976Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7498098Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7498241Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7498366Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7498457Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7498548Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7498776Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7498781Z 
2025-02-25T14:20:45.7498896Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7499022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7499026Z 
2025-02-25T14:20:45.7499501Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e102c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-25T14:20:45.7499605Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-25T14:20:45.7499862Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7499867Z 
2025-02-25T14:20:45.7499944Z     @wraps(func)
2025-02-25T14:20:45.7500040Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7500129Z         with self._recreate_cm():
2025-02-25T14:20:45.7500225Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7500326Z E           AssertionError: 
2025-02-25T14:20:45.7500434Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7500692Z E           
2025-02-25T14:20:45.7500825Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:20:45.7500937Z E           Max absolute difference: 2.92713618
2025-02-25T14:20:45.7501038Z E           Max relative difference: 18196.0085861
2025-02-25T14:20:45.7501201Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.7501290Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.7501449Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.7501544Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.7501548Z 
2025-02-25T14:20:45.7501753Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7501920Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-25T14:20:45.7501924Z 
2025-02-25T14:20:45.7502150Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7502396Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7502672Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db247320>
2025-02-25T14:20:45.7502676Z 
2025-02-25T14:20:45.7502831Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7503002Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7503125Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7503264Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7503382Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7503478Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7503575Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7503686Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7503690Z 
2025-02-25T14:20:45.7503799Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7503923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7503926Z 
2025-02-25T14:20:45.7504384Z args = (<function assert_allclose.<locals>.compare at 0x7f89db24d620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-25T14:20:45.7504494Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-25T14:20:45.7504743Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7504748Z 
2025-02-25T14:20:45.7504823Z     @wraps(func)
2025-02-25T14:20:45.7504924Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7505012Z         with self._recreate_cm():
2025-02-25T14:20:45.7505108Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7505325Z E           AssertionError: 
2025-02-25T14:20:45.7505447Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7505531Z E           
2025-02-25T14:20:45.7505645Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:20:45.7505762Z E           Max absolute difference: 282815.33818472
2025-02-25T14:20:45.7505864Z E           Max relative difference: 4.12352828e+47
2025-02-25T14:20:45.7506031Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.7506124Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.7506276Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.7506420Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.7506516Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.7506664Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.7506678Z 
2025-02-25T14:20:45.7506884Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7507067Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-25T14:20:45.7507077Z 
2025-02-25T14:20:45.7507292Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7507383Z attr = 'iterations_w'
2025-02-25T14:20:45.7507647Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adba390>
2025-02-25T14:20:45.7507651Z 
2025-02-25T14:20:45.7507752Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7507840Z         "attr",
2025-02-25T14:20:45.7507913Z         [
2025-02-25T14:20:45.7508009Z             "iterations_w",
2025-02-25T14:20:45.7508094Z             "iterations_t_rad",
2025-02-25T14:20:45.7508207Z             "iterations_electron_densities",
2025-02-25T14:20:45.7508297Z             "iterations_t_inner",
2025-02-25T14:20:45.7508374Z         ],
2025-02-25T14:20:45.7508453Z     )
2025-02-25T14:20:45.7508664Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7508873Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7508970Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7509052Z             actual = actual.value
2025-02-25T14:20:45.7509156Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7509295Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7509476Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7509480Z 
2025-02-25T14:20:45.7509611Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7509728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7509886Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7509960Z     ???
2025-02-25T14:20:45.7510086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7510090Z 
2025-02-25T14:20:45.7510159Z >   ???
2025-02-25T14:20:45.7510343Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7510429Z E   
2025-02-25T14:20:45.7510778Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7510868Z E   [index]: [0, 1]
2025-02-25T14:20:45.7510974Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-25T14:20:45.7511081Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:20:45.7511258Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.7511263Z 
2025-02-25T14:20:45.7511356Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7511506Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7512045Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7512823Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7513094Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.7513110Z 
2025-02-25T14:20:45.7513116Z 
2025-02-25T14:20:45.7513501Z Packets:                                                                                   4031/? [05:07<00:00,  6.98it/s] [A
2025-02-25T14:20:45.7513506Z 
2025-02-25T14:20:45.7513738Z Packets:                                                                                   13745/? [05:08<00:00, 52.60it/s][A
2025-02-25T14:20:45.7513742Z 
2025-02-25T14:20:45.7513984Z Packets:                                                                                   24180/? [05:08<00:00, 122.53it/s][A
2025-02-25T14:20:45.7513989Z 
2025-02-25T14:20:45.7514223Z Packets:                                                                                   34814/? [05:08<00:00, 224.18it/s][A
2025-02-25T14:20:45.7514592Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [05:08<00:00, 108.44s/it]
2025-02-25T14:20:45.7514607Z 
2025-02-25T14:20:45.7514846Z Packets:                                                                                   44030/? [05:08<00:00, 224.18it/s][A
2025-02-25T14:20:45.7514850Z 
2025-02-25T14:20:45.7515070Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-25T14:20:45.7515084Z 
2025-02-25T14:20:45.7515345Z Packets:   ██████████████████▊                                                             9414/40000 [00:00<00:00, 33912.65it/s][A
2025-02-25T14:20:45.7515349Z 
2025-02-25T14:20:45.7515621Z Packets:   █████████████████████████▋                                                      12845/40000 [00:00<00:00, 34047.37it/s][A
2025-02-25T14:20:45.7515626Z 
2025-02-25T14:20:45.7515910Z Packets:   ████████████████████████████████▌                                               16273/40000 [00:00<00:00, 34123.32it/s][A
2025-02-25T14:20:45.7515914Z 
2025-02-25T14:20:45.7516192Z Packets:   ███████████████████████████████████████▍                                        19694/40000 [00:00<00:00, 33812.99it/s][A
2025-02-25T14:20:45.7516332Z 
2025-02-25T14:20:45.7516636Z Packets:   ██████████████████████████████████████████████▎                                 23176/40000 [00:00<00:00, 34108.53it/s][A
2025-02-25T14:20:45.7516640Z 
2025-02-25T14:20:45.7516936Z Packets:   █████████████████████████████████████████████████████▍                          26702/40000 [00:00<00:00, 34459.97it/s][A
2025-02-25T14:20:45.7516941Z 
2025-02-25T14:20:45.7517246Z Packets:   ████████████████████████████████████████████████████████████▎                   30155/40000 [00:00<00:00, 34473.97it/s][A
2025-02-25T14:20:45.7517250Z 
2025-02-25T14:20:45.7517573Z Packets:   ███████████████████████████████████████████████████████████████████▎            33627/40000 [00:00<00:00, 34546.70it/s][A
2025-02-25T14:20:45.7517586Z 
2025-02-25T14:20:45.7517892Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     37166/40000 [00:01<00:00, 34800.17it/s][A
2025-02-25T14:20:45.7518068Z Iterations:                                                                                6/? [05:10<00:00, 72.41s/it] 
2025-02-25T14:20:45.7518072Z 
2025-02-25T14:20:45.7518388Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 34800.17it/s][A
2025-02-25T14:20:45.7518557Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7519066Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7519243Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-25T14:20:45.7519247Z 
2025-02-25T14:20:45.7519571Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7519661Z attr = 'iterations_t_rad'
2025-02-25T14:20:45.7519946Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adbae70>
2025-02-25T14:20:45.7519951Z 
2025-02-25T14:20:45.7520045Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7520129Z         "attr",
2025-02-25T14:20:45.7520199Z         [
2025-02-25T14:20:45.7520290Z             "iterations_w",
2025-02-25T14:20:45.7520374Z             "iterations_t_rad",
2025-02-25T14:20:45.7520484Z             "iterations_electron_densities",
2025-02-25T14:20:45.7520703Z             "iterations_t_inner",
2025-02-25T14:20:45.7520777Z         ],
2025-02-25T14:20:45.7520859Z     )
2025-02-25T14:20:45.7521060Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7521181Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7521281Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7521374Z             actual = actual.value
2025-02-25T14:20:45.7521463Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7521600Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7521922Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7521938Z 
2025-02-25T14:20:45.7522064Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7522189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7522336Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7522419Z     ???
2025-02-25T14:20:45.7522531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7522535Z 
2025-02-25T14:20:45.7522615Z >   ???
2025-02-25T14:20:45.7522797Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7522881Z E   
2025-02-25T14:20:45.7523051Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7523141Z E   [index]: [0, 1]
2025-02-25T14:20:45.7523252Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-25T14:20:45.7523359Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:20:45.7523546Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.7523550Z 
2025-02-25T14:20:45.7523645Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7523844Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-25T14:20:45.7523848Z 
2025-02-25T14:20:45.7524065Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7524181Z attr = 'iterations_electron_densities'
2025-02-25T14:20:45.7524448Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0855cb00>
2025-02-25T14:20:45.7524461Z 
2025-02-25T14:20:45.7524555Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7524780Z         "attr",
2025-02-25T14:20:45.7524854Z         [
2025-02-25T14:20:45.7524946Z             "iterations_w",
2025-02-25T14:20:45.7525030Z             "iterations_t_rad",
2025-02-25T14:20:45.7525154Z             "iterations_electron_densities",
2025-02-25T14:20:45.7525238Z             "iterations_t_inner",
2025-02-25T14:20:45.7525318Z         ],
2025-02-25T14:20:45.7525391Z     )
2025-02-25T14:20:45.7525593Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7525706Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7525805Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7525908Z             actual = actual.value
2025-02-25T14:20:45.7526006Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7526148Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7526324Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7526328Z 
2025-02-25T14:20:45.7526469Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7526579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7526750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7526822Z     ???
2025-02-25T14:20:45.7526947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7526951Z 
2025-02-25T14:20:45.7527034Z >   ???
2025-02-25T14:20:45.7527218Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7527299Z E   
2025-02-25T14:20:45.7527459Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7527541Z E   [index]: [0, 1]
2025-02-25T14:20:45.7527638Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-25T14:20:45.7527746Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:20:45.7527925Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-25T14:20:45.7527929Z 
2025-02-25T14:20:45.7528026Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7528188Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-25T14:20:45.7528292Z 
2025-02-25T14:20:45.7528508Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7528609Z attr = 'nu_bar_estimator'
2025-02-25T14:20:45.7528874Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adc87a0>
2025-02-25T14:20:45.7528878Z 
2025-02-25T14:20:45.7528976Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7529052Z         "attr",
2025-02-25T14:20:45.7529135Z         [
2025-02-25T14:20:45.7529223Z             "nu_bar_estimator",
2025-02-25T14:20:45.7529312Z             "j_estimator",
2025-02-25T14:20:45.7529389Z             "t_radiative",
2025-02-25T14:20:45.7529483Z             "dilution_factor",
2025-02-25T14:20:45.7529560Z             "output_nus",
2025-02-25T14:20:45.7529661Z             "output_energies",
2025-02-25T14:20:45.7529737Z         ],
2025-02-25T14:20:45.7529807Z     )
2025-02-25T14:20:45.7529996Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7530117Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7530207Z             actual = getattr(
2025-02-25T14:20:45.7530400Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7530488Z                 attr,
2025-02-25T14:20:45.7530759Z             )
2025-02-25T14:20:45.7530895Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7531048Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7531172Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7531266Z             actual = getattr(
2025-02-25T14:20:45.7531449Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7531724Z                 attr,
2025-02-25T14:20:45.7531865Z             )
2025-02-25T14:20:45.7532015Z         else:
2025-02-25T14:20:45.7532252Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7532407Z     
2025-02-25T14:20:45.7532559Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7532725Z             actual = actual.value
2025-02-25T14:20:45.7532820Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7532956Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7533141Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7533153Z 
2025-02-25T14:20:45.7533273Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7533388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7533537Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7533613Z     ???
2025-02-25T14:20:45.7533734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7533739Z 
2025-02-25T14:20:45.7533818Z >   ???
2025-02-25T14:20:45.7533928Z E   AssertionError: Series are different
2025-02-25T14:20:45.7534010Z E   
2025-02-25T14:20:45.7534109Z E   Series values are different (100.0 %)
2025-02-25T14:20:45.7534248Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7535472Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-25T14:20:45.7536667Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:20:45.7537052Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-25T14:20:45.7537056Z 
2025-02-25T14:20:45.7537146Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7537298Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-25T14:20:45.7537302Z 
2025-02-25T14:20:45.7537524Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7537602Z attr = 'j_estimator'
2025-02-25T14:20:45.7537884Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6c2630>
2025-02-25T14:20:45.7537889Z 
2025-02-25T14:20:45.7537994Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7538068Z         "attr",
2025-02-25T14:20:45.7538158Z         [
2025-02-25T14:20:45.7538243Z             "nu_bar_estimator",
2025-02-25T14:20:45.7538336Z             "j_estimator",
2025-02-25T14:20:45.7538418Z             "t_radiative",
2025-02-25T14:20:45.7538510Z             "dilution_factor",
2025-02-25T14:20:45.7538591Z             "output_nus",
2025-02-25T14:20:45.7538693Z             "output_energies",
2025-02-25T14:20:45.7538772Z         ],
2025-02-25T14:20:45.7538861Z     )
2025-02-25T14:20:45.7539050Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7539176Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7539258Z             actual = getattr(
2025-02-25T14:20:45.7539459Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7539636Z                 attr,
2025-02-25T14:20:45.7539708Z             )
2025-02-25T14:20:45.7539836Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7539994Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7540119Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7540207Z             actual = getattr(
2025-02-25T14:20:45.7540388Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7540462Z                 attr,
2025-02-25T14:20:45.7540665Z             )
2025-02-25T14:20:45.7540742Z         else:
2025-02-25T14:20:45.7540888Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7540968Z     
2025-02-25T14:20:45.7541061Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7541163Z             actual = actual.value
2025-02-25T14:20:45.7541253Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7541398Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7541584Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7541588Z 
2025-02-25T14:20:45.7541725Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7541840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7541999Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7542074Z     ???
2025-02-25T14:20:45.7542193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7542197Z 
2025-02-25T14:20:45.7542274Z >   ???
2025-02-25T14:20:45.7542377Z E   AssertionError: Series are different
2025-02-25T14:20:45.7542464Z E   
2025-02-25T14:20:45.7542562Z E   Series values are different (100.0 %)
2025-02-25T14:20:45.7542707Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7543701Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-25T14:20:45.7544808Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:20:45.7544986Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-25T14:20:45.7544990Z 
2025-02-25T14:20:45.7545082Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7545265Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-25T14:20:45.7545269Z 
2025-02-25T14:20:45.7545484Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7545588Z attr = 't_radiative'
2025-02-25T14:20:45.7545875Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6c1550>
2025-02-25T14:20:45.7545879Z 
2025-02-25T14:20:45.7545975Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7546072Z         "attr",
2025-02-25T14:20:45.7546149Z         [
2025-02-25T14:20:45.7546248Z             "nu_bar_estimator",
2025-02-25T14:20:45.7546335Z             "j_estimator",
2025-02-25T14:20:45.7546432Z             "t_radiative",
2025-02-25T14:20:45.7546519Z             "dilution_factor",
2025-02-25T14:20:45.7546613Z             "output_nus",
2025-02-25T14:20:45.7546701Z             "output_energies",
2025-02-25T14:20:45.7547118Z         ],
2025-02-25T14:20:45.7547282Z     )
2025-02-25T14:20:45.7555731Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7555909Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7555992Z             actual = getattr(
2025-02-25T14:20:45.7556208Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7556278Z                 attr,
2025-02-25T14:20:45.7556347Z             )
2025-02-25T14:20:45.7556468Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7556627Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7556744Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7556822Z             actual = getattr(
2025-02-25T14:20:45.7557004Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7557073Z                 attr,
2025-02-25T14:20:45.7557141Z             )
2025-02-25T14:20:45.7557207Z         else:
2025-02-25T14:20:45.7557356Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7557431Z     
2025-02-25T14:20:45.7557520Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7557614Z             actual = actual.value
2025-02-25T14:20:45.7557708Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7557829Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7558023Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7558030Z 
2025-02-25T14:20:45.7558160Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7558284Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7558445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7558518Z     ???
2025-02-25T14:20:45.7558724Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7558732Z 
2025-02-25T14:20:45.7558862Z >   ???
2025-02-25T14:20:45.7559070Z E   AssertionError: Series are different
2025-02-25T14:20:45.7559186Z E   
2025-02-25T14:20:45.7559358Z E   Series values are different (90.0 %)
2025-02-25T14:20:45.7559755Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7560883Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-25T14:20:45.7561890Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:20:45.7562073Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.7562088Z 
2025-02-25T14:20:45.7562181Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7562357Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-25T14:20:45.7562361Z 
2025-02-25T14:20:45.7562581Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7562679Z attr = 'dilution_factor'
2025-02-25T14:20:45.7562953Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b7950>
2025-02-25T14:20:45.7562958Z 
2025-02-25T14:20:45.7563067Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7563163Z         "attr",
2025-02-25T14:20:45.7563241Z         [
2025-02-25T14:20:45.7563331Z             "nu_bar_estimator",
2025-02-25T14:20:45.7563414Z             "j_estimator",
2025-02-25T14:20:45.7563642Z             "t_radiative",
2025-02-25T14:20:45.7563732Z             "dilution_factor",
2025-02-25T14:20:45.7563830Z             "output_nus",
2025-02-25T14:20:45.7563926Z             "output_energies",
2025-02-25T14:20:45.7564005Z         ],
2025-02-25T14:20:45.7564082Z     )
2025-02-25T14:20:45.7564281Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7564401Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7564504Z             actual = getattr(
2025-02-25T14:20:45.7564701Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7564792Z                 attr,
2025-02-25T14:20:45.7564865Z             )
2025-02-25T14:20:45.7564983Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7565146Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7565264Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7565363Z             actual = getattr(
2025-02-25T14:20:45.7565564Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7565671Z                 attr,
2025-02-25T14:20:45.7565743Z             )
2025-02-25T14:20:45.7565826Z         else:
2025-02-25T14:20:45.7565964Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7566044Z     
2025-02-25T14:20:45.7566142Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7566231Z             actual = actual.value
2025-02-25T14:20:45.7566336Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7566466Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7566659Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7566664Z 
2025-02-25T14:20:45.7566786Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7566919Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7567070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7567154Z     ???
2025-02-25T14:20:45.7567393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7567407Z 
2025-02-25T14:20:45.7567479Z >   ???
2025-02-25T14:20:45.7567590Z E   AssertionError: Series are different
2025-02-25T14:20:45.7567662Z E   
2025-02-25T14:20:45.7567777Z E   Series values are different (95.0 %)
2025-02-25T14:20:45.7567907Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7569010Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-25T14:20:45.7570098Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:20:45.7570280Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.7570285Z 
2025-02-25T14:20:45.7570383Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7570730Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-25T14:20:45.7570738Z 
2025-02-25T14:20:45.7570995Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7571083Z attr = 'output_nus'
2025-02-25T14:20:45.7571492Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b6510>
2025-02-25T14:20:45.7571498Z 
2025-02-25T14:20:45.7571606Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7571693Z         "attr",
2025-02-25T14:20:45.7571781Z         [
2025-02-25T14:20:45.7571864Z             "nu_bar_estimator",
2025-02-25T14:20:45.7571961Z             "j_estimator",
2025-02-25T14:20:45.7572044Z             "t_radiative",
2025-02-25T14:20:45.7572141Z             "dilution_factor",
2025-02-25T14:20:45.7572223Z             "output_nus",
2025-02-25T14:20:45.7572321Z             "output_energies",
2025-02-25T14:20:45.7572396Z         ],
2025-02-25T14:20:45.7572480Z     )
2025-02-25T14:20:45.7572678Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7572796Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7572894Z             actual = getattr(
2025-02-25T14:20:45.7573098Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7573188Z                 attr,
2025-02-25T14:20:45.7573262Z             )
2025-02-25T14:20:45.7573397Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7573545Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7573654Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7573733Z             actual = getattr(
2025-02-25T14:20:45.7573923Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7574013Z                 attr,
2025-02-25T14:20:45.7574087Z             )
2025-02-25T14:20:45.7574175Z         else:
2025-02-25T14:20:45.7574314Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7574397Z     
2025-02-25T14:20:45.7574483Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7574579Z             actual = actual.value
2025-02-25T14:20:45.7574675Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7574815Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7574999Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7575165Z 
2025-02-25T14:20:45.7575306Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7575429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7575580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7575667Z     ???
2025-02-25T14:20:45.7575778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7575782Z 
2025-02-25T14:20:45.7575860Z >   ???
2025-02-25T14:20:45.7575964Z E   AssertionError: Series are different
2025-02-25T14:20:45.7576042Z E   
2025-02-25T14:20:45.7576144Z E   Series values are different (5.1125 %)
2025-02-25T14:20:45.7576539Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7581986Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:20:45.7587666Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:20:45.7588034Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:20:45.7588046Z 
2025-02-25T14:20:45.7588170Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7588366Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-25T14:20:45.7588370Z 
2025-02-25T14:20:45.7588604Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7588705Z attr = 'output_energies'
2025-02-25T14:20:45.7588997Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b49e0>
2025-02-25T14:20:45.7589001Z 
2025-02-25T14:20:45.7589111Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7589198Z         "attr",
2025-02-25T14:20:45.7589276Z         [
2025-02-25T14:20:45.7589478Z             "nu_bar_estimator",
2025-02-25T14:20:45.7589572Z             "j_estimator",
2025-02-25T14:20:45.7589670Z             "t_radiative",
2025-02-25T14:20:45.7589771Z             "dilution_factor",
2025-02-25T14:20:45.7589873Z             "output_nus",
2025-02-25T14:20:45.7589958Z             "output_energies",
2025-02-25T14:20:45.7590045Z         ],
2025-02-25T14:20:45.7590122Z     )
2025-02-25T14:20:45.7590318Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7590437Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7590743Z             actual = getattr(
2025-02-25T14:20:45.7590979Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7591065Z                 attr,
2025-02-25T14:20:45.7591152Z             )
2025-02-25T14:20:45.7591276Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7591456Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7591575Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7591669Z             actual = getattr(
2025-02-25T14:20:45.7591855Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7591944Z                 attr,
2025-02-25T14:20:45.7592016Z             )
2025-02-25T14:20:45.7592099Z         else:
2025-02-25T14:20:45.7592235Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7592323Z     
2025-02-25T14:20:45.7592423Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7592519Z             actual = actual.value
2025-02-25T14:20:45.7592627Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7592758Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7592959Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7592964Z 
2025-02-25T14:20:45.7593093Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7593223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7593379Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7593606Z     ???
2025-02-25T14:20:45.7593733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7593737Z 
2025-02-25T14:20:45.7593814Z >   ???
2025-02-25T14:20:45.7593914Z E   AssertionError: Series are different
2025-02-25T14:20:45.7593982Z E   
2025-02-25T14:20:45.7594083Z E   Series values are different (1.3025 %)
2025-02-25T14:20:45.7594465Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7600960Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.7607199Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.7607536Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:20:45.7607541Z 
2025-02-25T14:20:45.7607737Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7607951Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-25T14:20:45.7607955Z 
2025-02-25T14:20:45.7608221Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ac740>
2025-02-25T14:20:45.7608425Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7608429Z 
2025-02-25T14:20:45.7608552Z     def test_spectrum_real_packets(self, simulation):
2025-02-25T14:20:45.7608717Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7608907Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7608990Z     
2025-02-25T14:20:45.7609175Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7609311Z         result = solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7609505Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7609614Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7609701Z     
2025-02-25T14:20:45.7609816Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7609903Z     
2025-02-25T14:20:45.7609999Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7610083Z             result,
2025-02-25T14:20:45.7610163Z             luminosity,
2025-02-25T14:20:45.7610247Z         )
2025-02-25T14:20:45.7610251Z 
2025-02-25T14:20:45.7610376Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-25T14:20:45.7610655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7611058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7611157Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7611285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7611290Z 
2025-02-25T14:20:45.7611776Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed335800>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:20:45.7612071Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7612498Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7612516Z 
2025-02-25T14:20:45.7612651Z     @wraps(func)
2025-02-25T14:20:45.7612805Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7612953Z         with self._recreate_cm():
2025-02-25T14:20:45.7613123Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7613217Z E           AssertionError: 
2025-02-25T14:20:45.7613348Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7613423Z E           
2025-02-25T14:20:45.7613538Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.7613652Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.7613767Z E           Max relative difference: 1.
2025-02-25T14:20:45.7613921Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7614034Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7614189Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7614281Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7614285Z 
2025-02-25T14:20:45.7614509Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7614713Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-25T14:20:45.7614718Z 
2025-02-25T14:20:45.7614993Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ac9e0>
2025-02-25T14:20:45.7615188Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7615192Z 
2025-02-25T14:20:45.7615495Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-25T14:20:45.7615659Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7615862Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7615948Z     
2025-02-25T14:20:45.7616137Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7616303Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-25T14:20:45.7616512Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-25T14:20:45.7616628Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7616701Z     
2025-02-25T14:20:45.7616816Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7616891Z     
2025-02-25T14:20:45.7616998Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7617088Z             result,
2025-02-25T14:20:45.7617167Z             luminosity,
2025-02-25T14:20:45.7617266Z         )
2025-02-25T14:20:45.7617270Z 
2025-02-25T14:20:45.7617418Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-25T14:20:45.7617569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7617911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7618017Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7618128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7618133Z 
2025-02-25T14:20:45.7618617Z args = (<function assert_allclose.<locals>.compare at 0x7f89e318ab60>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-25T14:20:45.7618747Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7619007Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7619012Z 
2025-02-25T14:20:45.7619107Z     @wraps(func)
2025-02-25T14:20:45.7619194Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7619390Z         with self._recreate_cm():
2025-02-25T14:20:45.7619485Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7619580Z E           AssertionError: 
2025-02-25T14:20:45.7619696Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7619787Z E           
2025-02-25T14:20:45.7619896Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:20:45.7619994Z E           Max absolute difference: 4.15247374e+37
2025-02-25T14:20:45.7620100Z E           Max relative difference: 1.
2025-02-25T14:20:45.7620251Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7620352Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7620618Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7620738Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7620742Z 
2025-02-25T14:20:45.7620946Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7621144Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-25T14:20:45.7621148Z 
2025-02-25T14:20:45.7621434Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ad670>
2025-02-25T14:20:45.7621629Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7621633Z 
2025-02-25T14:20:45.7621733Z     def test_solve(self, simulation):
2025-02-25T14:20:45.7621882Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7622083Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7622165Z     
2025-02-25T14:20:45.7622360Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7622650Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-25T14:20:45.7622742Z             transport_state
2025-02-25T14:20:45.7622827Z         )
2025-02-25T14:20:45.7623013Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7623141Z         expected_real = self.get_expected_data(key_real)
2025-02-25T14:20:45.7623205Z     
2025-02-25T14:20:45.7623342Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-25T14:20:45.7623416Z     
2025-02-25T14:20:45.7623510Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7623595Z             result_real.luminosity,
2025-02-25T14:20:45.7623682Z             luminosity_real,
2025-02-25T14:20:45.7623749Z         )
2025-02-25T14:20:45.7623753Z 
2025-02-25T14:20:45.7623887Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-25T14:20:45.7623993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7624340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7624438Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7624550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7624554Z 
2025-02-25T14:20:45.7625023Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06952fc0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:20:45.7625129Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7625388Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7625392Z 
2025-02-25T14:20:45.7625483Z     @wraps(func)
2025-02-25T14:20:45.7625577Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7625673Z         with self._recreate_cm():
2025-02-25T14:20:45.7625768Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7625873Z E           AssertionError: 
2025-02-25T14:20:45.7625988Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7626211Z E           
2025-02-25T14:20:45.7626317Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.7626429Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.7626532Z E           Max relative difference: 1.
2025-02-25T14:20:45.7626698Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7626789Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7626940Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7627030Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7627034Z 
2025-02-25T14:20:45.7627227Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7627424Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-25T14:20:45.7627428Z 
2025-02-25T14:20:45.7627640Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4ad9a0>
2025-02-25T14:20:45.7627859Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7627863Z 
2025-02-25T14:20:45.7627983Z     def test_j_blue_estimators(self, simulation):
2025-02-25T14:20:45.7628135Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-25T14:20:45.7628253Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7628325Z     
2025-02-25T14:20:45.7628420Z >       npt.assert_allclose(
2025-02-25T14:20:45.7628647Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-25T14:20:45.7628732Z             expected.values,
2025-02-25T14:20:45.7628800Z         )
2025-02-25T14:20:45.7628804Z 
2025-02-25T14:20:45.7628912Z tardis/tests/test_tardis_full.py:70: 
2025-02-25T14:20:45.7629120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7629125Z 
2025-02-25T14:20:45.7629398Z args = (<function assert_allclose.<locals>.compare at 0x7f89eefa22a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629482Z        [0., 0., .....,
2025-02-25T14:20:45.7629558Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629639Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629719Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7629962Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7629967Z 
2025-02-25T14:20:45.7630044Z     @wraps(func)
2025-02-25T14:20:45.7630147Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7630237Z         with self._recreate_cm():
2025-02-25T14:20:45.7630334Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7630432Z E           AssertionError: 
2025-02-25T14:20:45.7630711Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7630808Z E           
2025-02-25T14:20:45.7630918Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:20:45.7631030Z E           Max absolute difference: 5.32418652e-19
2025-02-25T14:20:45.7631138Z E           Max relative difference: 12.23359055
2025-02-25T14:20:45.7631248Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631338Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631454Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7631550Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631659Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631746Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7631759Z 
2025-02-25T14:20:45.7631954Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7632120Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7632415Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7632510Z 	
2025-02-25T14:20:45.7633084Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-25T14:20:45.7633423Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7633847Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-25T14:20:45.7634025Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7634512Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-25T14:20:45.7634756Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7635204Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7635379Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7635598Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7635767Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7635841Z 	
2025-02-25T14:20:45.7636000Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7636170Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7636249Z 	
2025-02-25T14:20:45.7636344Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:20:45.7636451Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:20:45.7636545Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7636665Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7636821Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7636900Z 	
2025-02-25T14:20:45.7637052Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7637372Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7637444Z 	
2025-02-25T14:20:45.7637554Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:20:45.7637653Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:20:45.7637748Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:20:45.7637855Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:20:45.7637946Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:20:45.7638063Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7638226Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7638303Z 	
2025-02-25T14:20:45.7638416Z 	Current t_inner = 9974.969 K
2025-02-25T14:20:45.7638638Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:20:45.7638821Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7639113Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7639230Z 	
2025-02-25T14:20:45.7639488Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7639656Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7639729Z 	
2025-02-25T14:20:45.7639827Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:20:45.7639928Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:20:45.7640024Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7640127Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7640291Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7640357Z 	
2025-02-25T14:20:45.7640634Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7640803Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7640878Z 	
2025-02-25T14:20:45.7640982Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7641073Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:20:45.7641165Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:20:45.7641257Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:20:45.7641364Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:20:45.7641470Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7641637Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7641859Z 	
2025-02-25T14:20:45.7641956Z 	Current t_inner = 10736.790 K
2025-02-25T14:20:45.7642075Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:20:45.7642190Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7642347Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7642427Z 	
2025-02-25T14:20:45.7642576Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7642743Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7642824Z 	
2025-02-25T14:20:45.7642919Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:20:45.7643017Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:20:45.7643109Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7643219Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7643384Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7643625Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:20:45.7643786Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7643880Z 	
2025-02-25T14:20:45.7644025Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7644187Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7644256Z 	
2025-02-25T14:20:45.7644367Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7644455Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:20:45.7644534Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:20:45.7644616Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:20:45.7644701Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:20:45.7644813Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7644970Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7645048Z 	
2025-02-25T14:20:45.7645274Z 	Current t_inner = 10718.574 K
2025-02-25T14:20:45.7645405Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:20:45.7645516Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7645693Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7645758Z 	
2025-02-25T14:20:45.7645920Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7646087Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7646158Z 	
2025-02-25T14:20:45.7646261Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:20:45.7646354Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:20:45.7646450Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7646553Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7646713Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7646919Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:20:45.7647081Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7647146Z 	
2025-02-25T14:20:45.7647305Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7647458Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7647529Z 	
2025-02-25T14:20:45.7647632Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7647712Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:20:45.7647803Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:20:45.7647886Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:20:45.7647980Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:20:45.7648082Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7648249Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7648315Z 	
2025-02-25T14:20:45.7648414Z 	Current t_inner = 10696.150 K
2025-02-25T14:20:45.7648535Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:20:45.7648651Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7648816Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7648894Z 	
2025-02-25T14:20:45.7649006Z 	Simulation finished in 4 iterations 
2025-02-25T14:20:45.7649091Z 	Simulation took 13.34 s
2025-02-25T14:20:45.7649315Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7649471Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7649542Z 	
2025-02-25T14:20:45.7649688Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7649864Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7649933Z 	
2025-02-25T14:20:45.7650032Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:20:45.7650120Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:20:45.7650220Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7650321Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7650488Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.7650493Z 
2025-02-25T14:20:45.7650496Z 
2025-02-25T14:20:45.7650961Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-25T14:20:45.7650967Z 
2025-02-25T14:20:45.7651191Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-25T14:20:45.7651202Z 
2025-02-25T14:20:45.7651471Z Packets:   ███▉                                                                            9816/200000 [00:00<00:01, 98146.99it/s][A
2025-02-25T14:20:45.7651476Z 
2025-02-25T14:20:45.7651727Z Packets:   ███████▉                                                                        19825/200000 [00:00<00:01, 99287.84it/s][A
2025-02-25T14:20:45.7651732Z 
2025-02-25T14:20:45.7651973Z Packets:   ███████████▉                                                                    29754/200000 [00:00<00:01, 97539.18it/s][A
2025-02-25T14:20:45.7651978Z 
2025-02-25T14:20:45.7652425Z Packets:   ███████████████▊                                                                39512/200000 [00:00<00:01, 95961.83it/s][A
2025-02-25T14:20:45.7652430Z 
2025-02-25T14:20:45.7652692Z Packets:   ███████████████████▉                                                            49988/200000 [00:00<00:01, 99076.56it/s][A
2025-02-25T14:20:45.7652719Z 
2025-02-25T14:20:45.7652975Z Packets:   ███████████████████████▉                                                        59904/200000 [00:00<00:01, 98990.02it/s][A
2025-02-25T14:20:45.7652980Z 
2025-02-25T14:20:45.7653259Z Packets:   ████████████████████████████                                                    70280/200000 [00:00<00:01, 100533.67it/s][A
2025-02-25T14:20:45.7653263Z 
2025-02-25T14:20:45.7653535Z Packets:   ████████████████████████████████▏                                               80339/200000 [00:00<00:01, 99716.51it/s] [A
2025-02-25T14:20:45.7653540Z 
2025-02-25T14:20:45.7653815Z Packets:   ████████████████████████████████████▏                                           90316/200000 [00:00<00:01, 97713.43it/s][A
2025-02-25T14:20:45.7653819Z 
2025-02-25T14:20:45.7654122Z Packets:   ████████████████████████████████████████                                        100098/200000 [00:01<00:01, 96659.99it/s][A
2025-02-25T14:20:45.7654139Z 
2025-02-25T14:20:45.7654421Z Packets:   ████████████████████████████████████████████▏                                   110324/200000 [00:01<00:00, 98333.90it/s][A
2025-02-25T14:20:45.7654425Z 
2025-02-25T14:20:45.7654723Z Packets:   ████████████████████████████████████████████████▎                               120741/200000 [00:01<00:00, 100079.77it/s][A
2025-02-25T14:20:45.7654727Z 
2025-02-25T14:20:45.7655024Z Packets:   ████████████████████████████████████████████████████▍                           131141/200000 [00:01<00:00, 101252.97it/s][A
2025-02-25T14:20:45.7655028Z 
2025-02-25T14:20:45.7655349Z Packets:   ████████████████████████████████████████████████████████▌                       141274/200000 [00:01<00:00, 99019.06it/s] [A
2025-02-25T14:20:45.7655353Z 
2025-02-25T14:20:45.7655683Z Packets:   ████████████████████████████████████████████████████████████▋                   151683/200000 [00:01<00:00, 100512.94it/s][A
2025-02-25T14:20:45.7655687Z 
2025-02-25T14:20:45.7656169Z Packets:   ████████████████████████████████████████████████████████████████▊               161902/200000 [00:01<00:00, 101004.38it/s][A
2025-02-25T14:20:45.7656174Z 
2025-02-25T14:20:45.7656495Z Packets:   ████████████████████████████████████████████████████████████████████▉           172353/200000 [00:01<00:00, 102047.05it/s][A
2025-02-25T14:20:45.7656499Z 
2025-02-25T14:20:45.7656820Z Packets:   █████████████████████████████████████████████████████████████████████████▏      182842/200000 [00:01<00:00, 102891.82it/s][A
2025-02-25T14:20:45.7656824Z 
2025-02-25T14:20:45.7657143Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193380/200000 [00:01<00:00, 103632.28it/s][A
2025-02-25T14:20:45.7657416Z Iterations:                                                                                13/? [06:15<00:00, 12.99s/it]
2025-02-25T14:20:45.7657422Z 
2025-02-25T14:20:45.7657753Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 103632.28it/s][A
2025-02-25T14:20:45.7657787Z 
2025-02-25T14:20:45.7658033Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7658038Z 
2025-02-25T14:20:45.7658282Z Packets:   ████▏                                                                           10369/200000 [00:00<00:02, 87767.88it/s][A
2025-02-25T14:20:45.7658287Z 
2025-02-25T14:20:45.7658526Z Packets:   ████████▏                                                                       20449/200000 [00:00<00:01, 94898.20it/s][A
2025-02-25T14:20:45.7658531Z 
2025-02-25T14:20:45.7658781Z Packets:   ████████████▎                                                                   30855/200000 [00:00<00:01, 98915.67it/s][A
2025-02-25T14:20:45.7658785Z 
2025-02-25T14:20:45.7659059Z Packets:   ████████████████▍                                                               41244/200000 [00:00<00:01, 100829.60it/s][A
2025-02-25T14:20:45.7659170Z 
2025-02-25T14:20:45.7659430Z Packets:   ████████████████████▋                                                           51805/200000 [00:00<00:01, 102523.81it/s][A
2025-02-25T14:20:45.7659434Z 
2025-02-25T14:20:45.7659708Z Packets:   ████████████████████████▊                                                       62081/200000 [00:00<00:01, 100074.83it/s][A
2025-02-25T14:20:45.7659712Z 
2025-02-25T14:20:45.7659990Z Packets:   ████████████████████████████▊                                                   72129/200000 [00:00<00:01, 100202.28it/s][A
2025-02-25T14:20:45.7659994Z 
2025-02-25T14:20:45.7660259Z Packets:   █████████████████████████████████                                               82590/200000 [00:00<00:01, 101582.21it/s][A
2025-02-25T14:20:45.7660263Z 
2025-02-25T14:20:45.7660754Z Packets:   █████████████████████████████████████▎                                          93356/200000 [00:00<00:01, 103459.64it/s][A
2025-02-25T14:20:45.7660762Z 
2025-02-25T14:20:45.7661068Z Packets:   █████████████████████████████████████████▋                                      104090/200000 [00:01<00:00, 104645.23it/s][A
2025-02-25T14:20:45.7661073Z 
2025-02-25T14:20:45.7661367Z Packets:   █████████████████████████████████████████████▊                                  114564/200000 [00:01<00:00, 102776.70it/s][A
2025-02-25T14:20:45.7661371Z 
2025-02-25T14:20:45.7661672Z Packets:   ██████████████████████████████████████████████████                              125053/200000 [00:01<00:00, 103407.94it/s][A
2025-02-25T14:20:45.7661676Z 
2025-02-25T14:20:45.7661972Z Packets:   ██████████████████████████████████████████████████████▎                         135716/200000 [00:01<00:00, 104370.93it/s][A
2025-02-25T14:20:45.7661976Z 
2025-02-25T14:20:45.7662448Z Packets:   ██████████████████████████████████████████████████████████▌                     146276/200000 [00:01<00:00, 104737.02it/s][A
2025-02-25T14:20:45.7662453Z 
2025-02-25T14:20:45.7662777Z Packets:   ██████████████████████████████████████████████████████████████▊                 156879/200000 [00:01<00:00, 105124.21it/s][A
2025-02-25T14:20:45.7662803Z 
2025-02-25T14:20:45.7663119Z Packets:   ███████████████████████████████████████████████████████████████████             167559/200000 [00:01<00:00, 105626.42it/s][A
2025-02-25T14:20:45.7663123Z 
2025-02-25T14:20:45.7663449Z Packets:   ███████████████████████████████████████████████████████████████████████▎        178125/200000 [00:01<00:00, 105608.13it/s][A
2025-02-25T14:20:45.7663453Z 
2025-02-25T14:20:45.7663769Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    188722/200000 [00:01<00:00, 105714.70it/s][A
2025-02-25T14:20:45.7663778Z 
2025-02-25T14:20:45.7664121Z Packets:   ███████████████████████████████████████████████████████████████████████████████▊199493/200000 [00:01<00:00, 106311.81it/s][A
2025-02-25T14:20:45.7664281Z Iterations:                                                                                14/? [06:19<00:00, 10.08s/it]
2025-02-25T14:20:45.7664417Z 
2025-02-25T14:20:45.7664743Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106311.81it/s][A
2025-02-25T14:20:45.7664747Z 
2025-02-25T14:20:45.7664998Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7665002Z 
2025-02-25T14:20:45.7665248Z Packets:   ████▎                                                                           10633/200000 [00:00<00:01, 104135.57it/s][A
2025-02-25T14:20:45.7665252Z 
2025-02-25T14:20:45.7665495Z Packets:   ████████▍                                                                       21047/200000 [00:00<00:01, 103454.24it/s][A
2025-02-25T14:20:45.7665499Z 
2025-02-25T14:20:45.7665769Z Packets:   ████████████▌                                                                   31393/200000 [00:00<00:01, 102080.44it/s][A
2025-02-25T14:20:45.7665773Z 
2025-02-25T14:20:45.7666042Z Packets:   ████████████████▋                                                               41602/200000 [00:00<00:01, 100669.71it/s][A
2025-02-25T14:20:45.7666056Z 
2025-02-25T14:20:45.7666313Z Packets:   ████████████████████▋                                                           51707/200000 [00:00<00:01, 100802.30it/s][A
2025-02-25T14:20:45.7666317Z 
2025-02-25T14:20:45.7666591Z Packets:   ████████████████████████▋                                                       61789/200000 [00:00<00:01, 99967.34it/s] [A
2025-02-25T14:20:45.7666596Z 
2025-02-25T14:20:45.7666857Z Packets:   ████████████████████████████▉                                                   72497/200000 [00:00<00:01, 102259.69it/s][A
2025-02-25T14:20:45.7666861Z 
2025-02-25T14:20:45.7667253Z Packets:   █████████████████████████████████▏                                              82886/200000 [00:00<00:01, 102771.12it/s][A
2025-02-25T14:20:45.7667259Z 
2025-02-25T14:20:45.7667540Z Packets:   █████████████████████████████████████▎                                          93167/200000 [00:00<00:01, 100869.58it/s][A
2025-02-25T14:20:45.7667554Z 
2025-02-25T14:20:45.7667836Z Packets:   █████████████████████████████████████████▍                                      103569/200000 [00:01<00:00, 101822.73it/s][A
2025-02-25T14:20:45.7667841Z 
2025-02-25T14:20:45.7668135Z Packets:   █████████████████████████████████████████████▋                                  114145/200000 [00:01<00:00, 103011.94it/s][A
2025-02-25T14:20:45.7668139Z 
2025-02-25T14:20:45.7668431Z Packets:   █████████████████████████████████████████████████▊                              124515/200000 [00:01<00:00, 103212.61it/s][A
2025-02-25T14:20:45.7668440Z 
2025-02-25T14:20:45.7668746Z Packets:   ██████████████████████████████████████████████████████                          135042/200000 [00:01<00:00, 103831.07it/s][A
2025-02-25T14:20:45.7668750Z 
2025-02-25T14:20:45.7669064Z Packets:   ██████████████████████████████████████████████████████████▏                     145594/200000 [00:01<00:00, 104336.49it/s][A
2025-02-25T14:20:45.7669175Z 
2025-02-25T14:20:45.7669484Z Packets:   ██████████████████████████████████████████████████████████████▍                 156206/200000 [00:01<00:00, 104872.33it/s][A
2025-02-25T14:20:45.7669488Z 
2025-02-25T14:20:45.7669804Z Packets:   ██████████████████████████████████████████████████████████████████▋             166791/200000 [00:01<00:00, 105164.90it/s][A
2025-02-25T14:20:45.7669808Z 
2025-02-25T14:20:45.7670126Z Packets:   ██████████████████████████████████████████████████████████████████████▉         177349/200000 [00:01<00:00, 105284.67it/s][A
2025-02-25T14:20:45.7670129Z 
2025-02-25T14:20:45.7670450Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    187916/200000 [00:01<00:00, 105400.14it/s][A
2025-02-25T14:20:45.7670760Z 
2025-02-25T14:20:45.7671129Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍198470/200000 [00:01<00:00, 105440.94it/s][A
2025-02-25T14:20:45.7671302Z Iterations:                                                                                15/? [06:22<00:00,  8.03s/it]
2025-02-25T14:20:45.7671317Z 
2025-02-25T14:20:45.7671648Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105440.94it/s][A
2025-02-25T14:20:45.7671653Z 
2025-02-25T14:20:45.7671905Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7671909Z 
2025-02-25T14:20:45.7672148Z Packets:   ████▏                                                                           10580/200000 [00:00<00:01, 105791.78it/s][A
2025-02-25T14:20:45.7672152Z 
2025-02-25T14:20:45.7672571Z Packets:   ████████▍                                                                       21165/200000 [00:00<00:01, 105823.86it/s][A
2025-02-25T14:20:45.7672578Z 
2025-02-25T14:20:45.7673037Z Packets:   ████████████▋                                                                   31826/200000 [00:00<00:01, 106181.59it/s][A
2025-02-25T14:20:45.7673058Z 
2025-02-25T14:20:45.7673424Z Packets:   █████████████████                                                               42518/200000 [00:00<00:01, 106471.54it/s][A
2025-02-25T14:20:45.7673428Z 
2025-02-25T14:20:45.7673696Z Packets:   █████████████████████▎                                                          53278/200000 [00:00<00:01, 106875.46it/s][A
2025-02-25T14:20:45.7673700Z 
2025-02-25T14:20:45.7673960Z Packets:   █████████████████████████▌                                                      63966/200000 [00:00<00:01, 106437.54it/s][A
2025-02-25T14:20:45.7673970Z 
2025-02-25T14:20:45.7674246Z Packets:   █████████████████████████████▊                                                  74611/200000 [00:00<00:01, 105942.95it/s][A
2025-02-25T14:20:45.7674250Z 
2025-02-25T14:20:45.7674530Z Packets:   ██████████████████████████████████                                              85239/200000 [00:00<00:01, 106049.25it/s][A
2025-02-25T14:20:45.7674688Z 
2025-02-25T14:20:45.7674968Z Packets:   ██████████████████████████████████████▎                                         95861/200000 [00:00<00:00, 106101.06it/s][A
2025-02-25T14:20:45.7674972Z 
2025-02-25T14:20:45.7675262Z Packets:   ██████████████████████████████████████████▌                                     106472/200000 [00:01<00:00, 106050.35it/s][A
2025-02-25T14:20:45.7675266Z 
2025-02-25T14:20:45.7675563Z Packets:   ██████████████████████████████████████████████▊                                 117078/200000 [00:01<00:00, 105773.19it/s][A
2025-02-25T14:20:45.7675567Z 
2025-02-25T14:20:45.7675856Z Packets:   ███████████████████████████████████████████████████                             127699/200000 [00:01<00:00, 105903.45it/s][A
2025-02-25T14:20:45.7675976Z 
2025-02-25T14:20:45.7676292Z Packets:   ███████████████████████████████████████████████████████▎                        138290/200000 [00:01<00:00, 105867.24it/s][A
2025-02-25T14:20:45.7676316Z 
2025-02-25T14:20:45.7676654Z Packets:   ███████████████████████████████████████████████████████████▌                    149029/200000 [00:01<00:00, 106324.30it/s][A
2025-02-25T14:20:45.7676658Z 
2025-02-25T14:20:45.7676964Z Packets:   ███████████████████████████████████████████████████████████████▉                159694/200000 [00:01<00:00, 106421.62it/s][A
2025-02-25T14:20:45.7676968Z 
2025-02-25T14:20:45.7677281Z Packets:   ████████████████████████████████████████████████████████████████████▏           170337/200000 [00:01<00:00, 106198.25it/s][A
2025-02-25T14:20:45.7677286Z 
2025-02-25T14:20:45.7677599Z Packets:   ████████████████████████████████████████████████████████████████████████▍       180958/200000 [00:01<00:00, 105586.71it/s][A
2025-02-25T14:20:45.7677604Z 
2025-02-25T14:20:45.7677957Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   191518/200000 [00:01<00:00, 105571.54it/s][A
2025-02-25T14:20:45.7678258Z Iterations:                                                                                16/? [06:25<00:00,  6.62s/it]
2025-02-25T14:20:45.7678262Z 
2025-02-25T14:20:45.7678720Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105571.54it/s][A
2025-02-25T14:20:45.7678728Z 
2025-02-25T14:20:45.7679096Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7679102Z 
2025-02-25T14:20:45.7679474Z Packets:   █▋                                                                              10558/500000 [00:00<00:14, 33522.17it/s][A
2025-02-25T14:20:45.7679493Z 
2025-02-25T14:20:45.7679909Z Packets:   ██▏                                                                             13973/500000 [00:00<00:14, 33713.00it/s][A
2025-02-25T14:20:45.7679916Z 
2025-02-25T14:20:45.7680343Z Packets:   ██▊                                                                             17541/500000 [00:00<00:14, 34317.62it/s][A
2025-02-25T14:20:45.7680372Z 
2025-02-25T14:20:45.7680955Z Packets:   ███▎                                                                            21089/500000 [00:00<00:13, 34671.46it/s][A
2025-02-25T14:20:45.7680962Z 
2025-02-25T14:20:45.7681395Z Packets:   ███▉                                                                            24590/500000 [00:00<00:13, 34513.33it/s][A
2025-02-25T14:20:45.7681402Z 
2025-02-25T14:20:45.7681660Z Packets:   ████▍                                                                           28061/500000 [00:00<00:13, 34226.00it/s][A
2025-02-25T14:20:45.7681664Z 
2025-02-25T14:20:45.7682060Z Packets:   █████                                                                           31494/500000 [00:00<00:13, 34150.02it/s][A
2025-02-25T14:20:45.7682065Z 
2025-02-25T14:20:45.7682320Z Packets:   █████▌                                                                          34915/500000 [00:01<00:13, 33700.28it/s][A
2025-02-25T14:20:45.7682336Z 
2025-02-25T14:20:45.7682581Z Packets:   ██████▏                                                                         38288/500000 [00:01<00:13, 33574.98it/s][A
2025-02-25T14:20:45.7682585Z 
2025-02-25T14:20:45.7682825Z Packets:   ██████▋                                                                         41647/500000 [00:01<00:13, 33049.83it/s][A
2025-02-25T14:20:45.7682829Z 
2025-02-25T14:20:45.7683104Z Packets:   ███████▏                                                                        45086/500000 [00:01<00:13, 33439.66it/s][A
2025-02-25T14:20:45.7683109Z 
2025-02-25T14:20:45.7683370Z Packets:   ███████▊                                                                        48546/500000 [00:01<00:13, 33781.71it/s][A
2025-02-25T14:20:45.7683374Z 
2025-02-25T14:20:45.7683639Z Packets:   ████████▎                                                                       51927/500000 [00:01<00:13, 33781.23it/s][A
2025-02-25T14:20:45.7683650Z 
2025-02-25T14:20:45.7683898Z Packets:   ████████▊                                                                       55307/500000 [00:01<00:13, 33445.32it/s][A
2025-02-25T14:20:45.7683903Z 
2025-02-25T14:20:45.7684146Z Packets:   █████████▍                                                                      58653/500000 [00:01<00:13, 33414.73it/s][A
2025-02-25T14:20:45.7684151Z 
2025-02-25T14:20:45.7684397Z Packets:   █████████▉                                                                      62076/500000 [00:01<00:13, 33656.77it/s][A
2025-02-25T14:20:45.7684401Z 
2025-02-25T14:20:45.7684651Z Packets:   ██████████▍                                                                     65588/500000 [00:01<00:12, 34092.90it/s][A
2025-02-25T14:20:45.7684655Z 
2025-02-25T14:20:45.7684909Z Packets:   ███████████                                                                     69048/500000 [00:02<00:12, 34241.67it/s][A
2025-02-25T14:20:45.7684912Z 
2025-02-25T14:20:45.7685166Z Packets:   ███████████▌                                                                    72481/500000 [00:02<00:12, 34267.78it/s][A
2025-02-25T14:20:45.7685298Z 
2025-02-25T14:20:45.7685545Z Packets:   ████████████▏                                                                   75909/500000 [00:02<00:12, 33899.83it/s][A
2025-02-25T14:20:45.7685557Z 
2025-02-25T14:20:45.7685792Z Packets:   ████████████▋                                                                   79301/500000 [00:02<00:12, 33357.46it/s][A
2025-02-25T14:20:45.7685796Z 
2025-02-25T14:20:45.7686039Z Packets:   █████████████▎                                                                  82842/500000 [00:02<00:12, 33961.45it/s][A
2025-02-25T14:20:45.7686043Z 
2025-02-25T14:20:45.7686319Z Packets:   █████████████▊                                                                  86311/500000 [00:02<00:12, 34176.94it/s][A
2025-02-25T14:20:45.7686323Z 
2025-02-25T14:20:45.7686583Z Packets:   ██████████████▍                                                                 89850/500000 [00:02<00:11, 34532.67it/s][A
2025-02-25T14:20:45.7686599Z 
2025-02-25T14:20:45.7686858Z Packets:   ██████████████▉                                                                 93306/500000 [00:02<00:11, 34521.59it/s][A
2025-02-25T14:20:45.7686862Z 
2025-02-25T14:20:45.7687111Z Packets:   ███████████████▍                                                                96760/500000 [00:02<00:11, 34274.12it/s][A
2025-02-25T14:20:45.7687115Z 
2025-02-25T14:20:45.7687383Z Packets:   ████████████████                                                                100189/500000 [00:02<00:11, 33509.63it/s][A
2025-02-25T14:20:45.7687387Z 
2025-02-25T14:20:45.7687642Z Packets:   ████████████████▌                                                               103548/500000 [00:03<00:11, 33531.86it/s][A
2025-02-25T14:20:45.7687761Z 
2025-02-25T14:20:45.7688018Z Packets:   █████████████████                                                               107007/500000 [00:03<00:11, 33842.73it/s][A
2025-02-25T14:20:45.7688034Z 
2025-02-25T14:20:45.7688295Z Packets:   █████████████████▋                                                              110453/500000 [00:03<00:11, 34024.71it/s][A
2025-02-25T14:20:45.7688300Z 
2025-02-25T14:20:45.7688556Z Packets:   ██████████████████▏                                                             113957/500000 [00:03<00:11, 34325.11it/s][A
2025-02-25T14:20:45.7688561Z 
2025-02-25T14:20:45.7688830Z Packets:   ██████████████████▊                                                             117399/500000 [00:03<00:11, 34353.17it/s][A
2025-02-25T14:20:45.7688834Z 
2025-02-25T14:20:45.7689102Z Packets:   ███████████████████▎                                                            120899/500000 [00:03<00:10, 34543.47it/s][A
2025-02-25T14:20:45.7689106Z 
2025-02-25T14:20:45.7689373Z Packets:   ███████████████████▉                                                            124432/500000 [00:03<00:10, 34778.27it/s][A
2025-02-25T14:20:45.7689377Z 
2025-02-25T14:20:45.7689656Z Packets:   ████████████████████▍                                                           127959/500000 [00:03<00:10, 34924.40it/s][A
2025-02-25T14:20:45.7689659Z 
2025-02-25T14:20:45.7689919Z Packets:   █████████████████████                                                           131464/500000 [00:03<00:10, 34955.17it/s][A
2025-02-25T14:20:45.7689922Z 
2025-02-25T14:20:45.7690179Z Packets:   █████████████████████▌                                                          134960/500000 [00:03<00:10, 34904.96it/s][A
2025-02-25T14:20:45.7690183Z 
2025-02-25T14:20:45.7690447Z Packets:   ██████████████████████▏                                                         138510/500000 [00:04<00:10, 35082.51it/s][A
2025-02-25T14:20:45.7690451Z 
2025-02-25T14:20:45.7690958Z Packets:   ██████████████████████▋                                                         142042/500000 [00:04<00:10, 35151.77it/s][A
2025-02-25T14:20:45.7690963Z 
2025-02-25T14:20:45.7691241Z Packets:   ███████████████████████▎                                                        145558/500000 [00:04<00:10, 35014.48it/s][A
2025-02-25T14:20:45.7691399Z 
2025-02-25T14:20:45.7691681Z Packets:   ███████████████████████▊                                                        149060/500000 [00:04<00:10, 33799.92it/s][A
2025-02-25T14:20:45.7691685Z 
2025-02-25T14:20:45.7691950Z Packets:   ████████████████████████▍                                                       152530/500000 [00:04<00:10, 34062.02it/s][A
2025-02-25T14:20:45.7691954Z 
2025-02-25T14:20:45.7692220Z Packets:   ████████████████████████▉                                                       155978/500000 [00:04<00:10, 34182.68it/s][A
2025-02-25T14:20:45.7692224Z 
2025-02-25T14:20:45.7692937Z Packets:   █████████████████████████▌                                                      159445/500000 [00:04<00:09, 34324.74it/s][A
2025-02-25T14:20:45.7692947Z 
2025-02-25T14:20:45.7693398Z Packets:   ██████████████████████████                                                      162882/500000 [00:04<00:09, 34265.83it/s][A
2025-02-25T14:20:45.7693415Z 
2025-02-25T14:20:45.7693701Z Packets:   ██████████████████████████▌                                                     166312/500000 [00:04<00:09, 34252.32it/s][A
2025-02-25T14:20:45.7693705Z 
2025-02-25T14:20:45.7693969Z Packets:   ███████████████████████████▏                                                    169836/500000 [00:04<00:09, 34546.28it/s][A
2025-02-25T14:20:45.7693988Z 
2025-02-25T14:20:45.7694251Z Packets:   ███████████████████████████▋                                                    173323/500000 [00:05<00:09, 34640.84it/s][A
2025-02-25T14:20:45.7694255Z 
2025-02-25T14:20:45.7694532Z Packets:   ████████████████████████████▎                                                   176789/500000 [00:05<00:09, 34638.50it/s][A
2025-02-25T14:20:45.7694554Z 
2025-02-25T14:20:45.7694821Z Packets:   ████████████████████████████▊                                                   180254/500000 [00:05<00:09, 34628.93it/s][A
2025-02-25T14:20:45.7694837Z 
2025-02-25T14:20:45.7695119Z Packets:   █████████████████████████████▍                                                  183718/500000 [00:05<00:09, 33433.59it/s][A
2025-02-25T14:20:45.7695123Z 
2025-02-25T14:20:45.7695399Z Packets:   █████████████████████████████▉                                                  187071/500000 [00:05<00:09, 33407.03it/s][A
2025-02-25T14:20:45.7695403Z 
2025-02-25T14:20:45.7695675Z Packets:   ██████████████████████████████▍                                                 190419/500000 [00:05<00:09, 32908.63it/s][A
2025-02-25T14:20:45.7695679Z 
2025-02-25T14:20:45.7695951Z Packets:   ██████████████████████████████▉                                                 193716/500000 [00:05<00:09, 32272.08it/s][A
2025-02-25T14:20:45.7695955Z 
2025-02-25T14:20:45.7696241Z Packets:   ███████████████████████████████▌                                                197031/500000 [00:05<00:09, 32525.36it/s][A
2025-02-25T14:20:45.7696253Z 
2025-02-25T14:20:45.7696638Z Packets:   ████████████████████████████████                                                200484/500000 [00:05<00:09, 33105.23it/s][A
2025-02-25T14:20:45.7696642Z 
2025-02-25T14:20:45.7696924Z Packets:   ████████████████████████████████▌                                               203799/500000 [00:06<00:09, 32603.53it/s][A
2025-02-25T14:20:45.7696928Z 
2025-02-25T14:20:45.7697205Z Packets:   █████████████████████████████████▏                                              207101/500000 [00:06<00:08, 32724.65it/s][A
2025-02-25T14:20:45.7697209Z 
2025-02-25T14:20:45.7697490Z Packets:   █████████████████████████████████▋                                              210503/500000 [00:06<00:08, 33104.60it/s][A
2025-02-25T14:20:45.7697494Z 
2025-02-25T14:20:45.7697878Z Packets:   ██████████████████████████████████▏                                             213868/500000 [00:06<00:08, 33263.59it/s][A
2025-02-25T14:20:45.7697883Z 
2025-02-25T14:20:45.7698157Z Packets:   ██████████████████████████████████▊                                             217197/500000 [00:06<00:08, 32374.42it/s][A
2025-02-25T14:20:45.7698176Z 
2025-02-25T14:20:45.7698466Z Packets:   ███████████████████████████████████▎                                            220441/500000 [00:06<00:08, 32071.95it/s][A
2025-02-25T14:20:45.7698470Z 
2025-02-25T14:20:45.7698749Z Packets:   ███████████████████████████████████▊                                            223653/500000 [00:06<00:08, 31634.20it/s][A
2025-02-25T14:20:45.7698753Z 
2025-02-25T14:20:45.7699025Z Packets:   ████████████████████████████████████▎                                           226942/500000 [00:06<00:08, 31999.05it/s][A
2025-02-25T14:20:45.7699029Z 
2025-02-25T14:20:45.7699332Z Packets:   ████████████████████████████████████▊                                           230314/500000 [00:06<00:08, 32501.80it/s][A
2025-02-25T14:20:45.7699336Z 
2025-02-25T14:20:45.7699612Z Packets:   █████████████████████████████████████▍                                          233783/500000 [00:06<00:08, 33149.34it/s][A
2025-02-25T14:20:45.7699628Z 
2025-02-25T14:20:45.7699915Z Packets:   █████████████████████████████████████▉                                          237130/500000 [00:07<00:07, 33244.01it/s][A
2025-02-25T14:20:45.7699919Z 
2025-02-25T14:20:45.7700203Z Packets:   ██████████████████████████████████████▍                                         240493/500000 [00:07<00:07, 33351.70it/s][A
2025-02-25T14:20:45.7700207Z 
2025-02-25T14:20:45.7700486Z Packets:   ███████████████████████████████████████                                         243930/500000 [00:07<00:07, 33653.72it/s][A
2025-02-25T14:20:45.7700490Z 
2025-02-25T14:20:45.7700925Z Packets:   ███████████████████████████████████████▌                                        247319/500000 [00:07<00:07, 33721.77it/s][A
2025-02-25T14:20:45.7700949Z 
2025-02-25T14:20:45.7701240Z Packets:   ████████████████████████████████████████                                        250693/500000 [00:07<00:07, 32993.88it/s][A
2025-02-25T14:20:45.7701403Z 
2025-02-25T14:20:45.7701687Z Packets:   ████████████████████████████████████████▋                                       254114/500000 [00:07<00:07, 33350.59it/s][A
2025-02-25T14:20:45.7701691Z 
2025-02-25T14:20:45.7701981Z Packets:   █████████████████████████████████████████▏                                      257499/500000 [00:07<00:07, 33486.25it/s][A
2025-02-25T14:20:45.7701985Z 
2025-02-25T14:20:45.7702264Z Packets:   █████████████████████████████████████████▋                                      260877/500000 [00:07<00:07, 33571.59it/s][A
2025-02-25T14:20:45.7702278Z 
2025-02-25T14:20:45.7702558Z Packets:   ██████████████████████████████████████████▎                                     264237/500000 [00:07<00:07, 33578.31it/s][A
2025-02-25T14:20:45.7702562Z 
2025-02-25T14:20:45.7702980Z Packets:   ██████████████████████████████████████████▊                                     267620/500000 [00:07<00:06, 33651.84it/s][A
2025-02-25T14:20:45.7702984Z 
2025-02-25T14:20:45.7703286Z Packets:   ███████████████████████████████████████████▎                                    271024/500000 [00:08<00:06, 33767.75it/s][A
2025-02-25T14:20:45.7703290Z 
2025-02-25T14:20:45.7703581Z Packets:   ███████████████████████████████████████████▉                                    274403/500000 [00:08<00:06, 33773.24it/s][A
2025-02-25T14:20:45.7703585Z 
2025-02-25T14:20:45.7703882Z Packets:   ████████████████████████████████████████████▍                                   277781/500000 [00:08<00:06, 33668.85it/s][A
2025-02-25T14:20:45.7703886Z 
2025-02-25T14:20:45.7704168Z Packets:   ████████████████████████████████████████████▉                                   281149/500000 [00:08<00:06, 33540.01it/s][A
2025-02-25T14:20:45.7704172Z 
2025-02-25T14:20:45.7704481Z Packets:   █████████████████████████████████████████████▌                                  284504/500000 [00:08<00:06, 33314.32it/s][A
2025-02-25T14:20:45.7704485Z 
2025-02-25T14:20:45.7704769Z Packets:   ██████████████████████████████████████████████                                  287836/500000 [00:08<00:06, 31560.32it/s][A
2025-02-25T14:20:45.7704923Z 
2025-02-25T14:20:45.7705217Z Packets:   ██████████████████████████████████████████████▌                                 291092/500000 [00:08<00:06, 31842.20it/s][A
2025-02-25T14:20:45.7705221Z 
2025-02-25T14:20:45.7705527Z Packets:   ███████████████████████████████████████████████                                 294500/500000 [00:08<00:06, 32492.78it/s][A
2025-02-25T14:20:45.7705531Z 
2025-02-25T14:20:45.7705824Z Packets:   ███████████████████████████████████████████████▋                                297961/500000 [00:08<00:06, 33113.61it/s][A
2025-02-25T14:20:45.7705828Z 
2025-02-25T14:20:45.7706152Z Packets:   ████████████████████████████████████████████████▏                               301364/500000 [00:08<00:05, 33382.77it/s][A
2025-02-25T14:20:45.7706157Z 
2025-02-25T14:20:45.7706457Z Packets:   ████████████████████████████████████████████████▊                               304806/500000 [00:09<00:05, 33690.11it/s][A
2025-02-25T14:20:45.7706479Z 
2025-02-25T14:20:45.7706768Z Packets:   █████████████████████████████████████████████████▎                              308190/500000 [00:09<00:05, 33733.45it/s][A
2025-02-25T14:20:45.7706772Z 
2025-02-25T14:20:45.7707072Z Packets:   █████████████████████████████████████████████████▊                              311568/500000 [00:09<00:05, 33345.09it/s][A
2025-02-25T14:20:45.7707076Z 
2025-02-25T14:20:45.7707376Z Packets:   ██████████████████████████████████████████████████▍                             315038/500000 [00:09<00:05, 33744.93it/s][A
2025-02-25T14:20:45.7707380Z 
2025-02-25T14:20:45.7707673Z Packets:   ██████████████████████████████████████████████████▉                             318501/500000 [00:09<00:05, 34006.67it/s][A
2025-02-25T14:20:45.7707778Z 
2025-02-25T14:20:45.7708095Z Packets:   ███████████████████████████████████████████████████▌                            321904/500000 [00:09<00:05, 33049.35it/s][A
2025-02-25T14:20:45.7708116Z 
2025-02-25T14:20:45.7708408Z Packets:   ████████████████████████████████████████████████████                            325333/500000 [00:09<00:05, 33410.57it/s][A
2025-02-25T14:20:45.7708412Z 
2025-02-25T14:20:45.7708721Z Packets:   ████████████████████████████████████████████████████▌                           328781/500000 [00:09<00:05, 33723.53it/s][A
2025-02-25T14:20:45.7708725Z 
2025-02-25T14:20:45.7709030Z Packets:   █████████████████████████████████████████████████████▏                          332236/500000 [00:09<00:04, 33967.43it/s][A
2025-02-25T14:20:45.7709034Z 
2025-02-25T14:20:45.7709328Z Packets:   █████████████████████████████████████████████████████▋                          335746/500000 [00:09<00:04, 34300.52it/s][A
2025-02-25T14:20:45.7709332Z 
2025-02-25T14:20:45.7709651Z Packets:   ██████████████████████████████████████████████████████▎                         339203/500000 [00:10<00:04, 34380.30it/s][A
2025-02-25T14:20:45.7709655Z 
2025-02-25T14:20:45.7710063Z Packets:   ██████████████████████████████████████████████████████▊                         342713/500000 [00:10<00:04, 34592.69it/s][A
2025-02-25T14:20:45.7710067Z 
2025-02-25T14:20:45.7710371Z Packets:   ███████████████████████████████████████████████████████▍                        346184/500000 [00:10<00:04, 34625.07it/s][A
2025-02-25T14:20:45.7710374Z 
2025-02-25T14:20:45.7710962Z Packets:   ███████████████████████████████████████████████████████▉                        349648/500000 [00:10<00:04, 34618.38it/s][A
2025-02-25T14:20:45.7710968Z 
2025-02-25T14:20:45.7711275Z Packets:   ████████████████████████████████████████████████████████▌                       353133/500000 [00:10<00:04, 34686.05it/s][A
2025-02-25T14:20:45.7711298Z 
2025-02-25T14:20:45.7711628Z Packets:   █████████████████████████████████████████████████████████                       356603/500000 [00:10<00:04, 33295.00it/s][A
2025-02-25T14:20:45.7711632Z 
2025-02-25T14:20:45.7711947Z Packets:   █████████████████████████████████████████████████████████▌                      360102/500000 [00:10<00:04, 33788.08it/s][A
2025-02-25T14:20:45.7711971Z 
2025-02-25T14:20:45.7712277Z Packets:   ██████████████████████████████████████████████████████████▏                     363494/500000 [00:10<00:04, 33825.99it/s][A
2025-02-25T14:20:45.7712281Z 
2025-02-25T14:20:45.7712603Z Packets:   ██████████████████████████████████████████████████████████▋                     366980/500000 [00:10<00:03, 34130.20it/s][A
2025-02-25T14:20:45.7712607Z 
2025-02-25T14:20:45.7712920Z Packets:   ███████████████████████████████████████████████████████████▎                    370465/500000 [00:10<00:03, 34343.60it/s][A
2025-02-25T14:20:45.7712924Z 
2025-02-25T14:20:45.7713390Z Packets:   ███████████████████████████████████████████████████████████▊                    373904/500000 [00:11<00:03, 34260.34it/s][A
2025-02-25T14:20:45.7713395Z 
2025-02-25T14:20:45.7713721Z Packets:   ████████████████████████████████████████████████████████████▍                   377361/500000 [00:11<00:03, 34351.13it/s][A
2025-02-25T14:20:45.7713744Z 
2025-02-25T14:20:45.7714057Z Packets:   ████████████████████████████████████████████████████████████▉                   380799/500000 [00:11<00:03, 34211.09it/s][A
2025-02-25T14:20:45.7714083Z 
2025-02-25T14:20:45.7714391Z Packets:   █████████████████████████████████████████████████████████████▍                  384245/500000 [00:11<00:03, 34280.17it/s][A
2025-02-25T14:20:45.7714395Z 
2025-02-25T14:20:45.7714710Z Packets:   ██████████████████████████████████████████████████████████████                  387702/500000 [00:11<00:03, 34365.87it/s][A
2025-02-25T14:20:45.7714714Z 
2025-02-25T14:20:45.7715019Z Packets:   ██████████████████████████████████████████████████████████████▌                 391140/500000 [00:11<00:03, 33435.12it/s][A
2025-02-25T14:20:45.7715038Z 
2025-02-25T14:20:45.7715362Z Packets:   ███████████████████████████████████████████████████████████████▏                394631/500000 [00:11<00:03, 33865.86it/s][A
2025-02-25T14:20:45.7715489Z 
2025-02-25T14:20:45.7715810Z Packets:   ███████████████████████████████████████████████████████████████▋                398130/500000 [00:11<00:02, 34193.99it/s][A
2025-02-25T14:20:45.7715814Z 
2025-02-25T14:20:45.7716130Z Packets:   ████████████████████████████████████████████████████████████████▏               401554/500000 [00:11<00:02, 34069.36it/s][A
2025-02-25T14:20:45.7716134Z 
2025-02-25T14:20:45.7716453Z Packets:   ████████████████████████████████████████████████████████████████▊               405028/500000 [00:11<00:02, 34266.85it/s][A
2025-02-25T14:20:45.7716457Z 
2025-02-25T14:20:45.7716788Z Packets:   █████████████████████████████████████████████████████████████████▎              408457/500000 [00:12<00:02, 34016.22it/s][A
2025-02-25T14:20:45.7716792Z 
2025-02-25T14:20:45.7717216Z Packets:   █████████████████████████████████████████████████████████████████▉              411898/500000 [00:12<00:02, 34131.88it/s][A
2025-02-25T14:20:45.7717221Z 
2025-02-25T14:20:45.7717555Z Packets:   ██████████████████████████████████████████████████████████████████▍             415313/500000 [00:12<00:02, 34064.46it/s][A
2025-02-25T14:20:45.7717559Z 
2025-02-25T14:20:45.7717866Z Packets:   ██████████████████████████████████████████████████████████████████▉             418724/500000 [00:12<00:02, 34077.17it/s][A
2025-02-25T14:20:45.7717870Z 
2025-02-25T14:20:45.7718191Z Packets:   ███████████████████████████████████████████████████████████████████▌            422147/500000 [00:12<00:02, 34121.60it/s][A
2025-02-25T14:20:45.7718195Z 
2025-02-25T14:20:45.7718523Z Packets:   ████████████████████████████████████████████████████████████████████            425560/500000 [00:12<00:02, 33100.22it/s][A
2025-02-25T14:20:45.7718528Z 
2025-02-25T14:20:45.7718909Z Packets:   ████████████████████████████████████████████████████████████████████▋           428950/500000 [00:12<00:02, 33330.39it/s][A
2025-02-25T14:20:45.7718918Z 
2025-02-25T14:20:45.7719516Z Packets:   █████████████████████████████████████████████████████████████████████▏          432382/500000 [00:12<00:02, 33621.32it/s][A
2025-02-25T14:20:45.7719681Z 
2025-02-25T14:20:45.7720137Z Packets:   █████████████████████████████████████████████████████████████████████▋          435802/500000 [00:12<00:01, 33792.09it/s][A
2025-02-25T14:20:45.7720142Z 
2025-02-25T14:20:45.7720461Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439185/500000 [00:13<00:01, 33771.21it/s][A
2025-02-25T14:20:45.7720465Z 
2025-02-25T14:20:45.7721002Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442612/500000 [00:13<00:01, 33918.51it/s][A
2025-02-25T14:20:45.7721008Z 
2025-02-25T14:20:45.7721500Z Packets:   ███████████████████████████████████████████████████████████████████████▎        446006/500000 [00:13<00:01, 33768.59it/s][A
2025-02-25T14:20:45.7721522Z 
2025-02-25T14:20:45.7721842Z Packets:   ███████████████████████████████████████████████████████████████████████▉        449420/500000 [00:13<00:01, 33877.62it/s][A
2025-02-25T14:20:45.7721873Z 
2025-02-25T14:20:45.7722206Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452891/500000 [00:13<00:01, 34125.34it/s][A
2025-02-25T14:20:45.7722210Z 
2025-02-25T14:20:45.7722522Z Packets:   █████████████████████████████████████████████████████████████████████████       456305/500000 [00:13<00:01, 33894.02it/s][A
2025-02-25T14:20:45.7722526Z 
2025-02-25T14:20:45.7722851Z Packets:   █████████████████████████████████████████████████████████████████████████▌      459696/500000 [00:13<00:01, 31955.63it/s][A
2025-02-25T14:20:45.7722855Z 
2025-02-25T14:20:45.7723178Z Packets:   ██████████████████████████████████████████████████████████████████████████      462914/500000 [00:13<00:01, 31721.01it/s][A
2025-02-25T14:20:45.7723206Z 
2025-02-25T14:20:45.7723521Z Packets:   ██████████████████████████████████████████████████████████████████████████▌     466106/500000 [00:13<00:01, 31777.69it/s][A
2025-02-25T14:20:45.7723663Z 
2025-02-25T14:20:45.7723993Z Packets:   ███████████████████████████████████████████████████████████████████████████     469295/500000 [00:13<00:00, 31572.20it/s][A
2025-02-25T14:20:45.7723997Z 
2025-02-25T14:20:45.7724315Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    472460/500000 [00:14<00:00, 31210.62it/s][A
2025-02-25T14:20:45.7724333Z 
2025-02-25T14:20:45.7724649Z Packets:   ████████████████████████████████████████████████████████████████████████████    475587/500000 [00:14<00:00, 31029.78it/s][A
2025-02-25T14:20:45.7724653Z 
2025-02-25T14:20:45.7724980Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478694/500000 [00:14<00:00, 30279.61it/s][A
2025-02-25T14:20:45.7724985Z 
2025-02-25T14:20:45.7725319Z Packets:   █████████████████████████████████████████████████████████████████████████████   481727/500000 [00:14<00:00, 29899.26it/s][A
2025-02-25T14:20:45.7725323Z 
2025-02-25T14:20:45.7725679Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  484721/500000 [00:14<00:00, 29736.64it/s][A
2025-02-25T14:20:45.7725683Z 
2025-02-25T14:20:45.7726027Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487938/500000 [00:14<00:00, 30444.69it/s][A
2025-02-25T14:20:45.7726031Z 
2025-02-25T14:20:45.7726346Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 490986/500000 [00:14<00:00, 30232.71it/s][A
2025-02-25T14:20:45.7726350Z 
2025-02-25T14:20:45.7726689Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494311/500000 [00:14<00:00, 31120.73it/s][A
2025-02-25T14:20:45.7726694Z 
2025-02-25T14:20:45.7727164Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋497667/500000 [00:14<00:00, 31842.26it/s][A
2025-02-25T14:20:45.7727329Z Iterations:                                                                                17/? [06:42<00:00,  9.76s/it]
2025-02-25T14:20:45.7727356Z 
2025-02-25T14:20:45.7727709Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 31842.26it/s][A
2025-02-25T14:20:45.7727884Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7728078Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-25T14:20:45.7728441Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-25T14:20:45.7728835Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-25T14:20:45.7729304Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-25T14:20:45.7729815Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7730168Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7730289Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7730396Z 	Starting iteration 1 of 5
2025-02-25T14:20:45.7730666Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7730822Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:20:45.7730934Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:20:45.7731039Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7731044Z 
2025-02-25T14:20:45.7731160Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7731255Z 	Plasma stratification:
2025-02-25T14:20:45.7731384Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7731499Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:20:45.7731610Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:20:45.7731706Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:20:45.7731804Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:20:45.7731896Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:20:45.7731900Z 
2025-02-25T14:20:45.7732017Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7732120Z 	Current t_inner = 9974.969 K
2025-02-25T14:20:45.7732241Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:20:45.7732247Z 
2025-02-25T14:20:45.7732365Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7732459Z 	Starting iteration 2 of 5
2025-02-25T14:20:45.7732580Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7732671Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:20:45.7732928Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:20:45.7733035Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7733039Z 
2025-02-25T14:20:45.7733180Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7733292Z 	Plasma stratification:
2025-02-25T14:20:45.7733408Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7733538Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7733637Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:20:45.7733748Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:20:45.7733835Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:20:45.7733942Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:20:45.7733946Z 
2025-02-25T14:20:45.7734054Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7734162Z 	Current t_inner = 10736.790 K
2025-02-25T14:20:45.7734284Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:20:45.7734288Z 
2025-02-25T14:20:45.7734415Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7734524Z 	Starting iteration 3 of 5
2025-02-25T14:20:45.7734644Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7734776Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:20:45.7734878Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:20:45.7734988Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7734992Z 
2025-02-25T14:20:45.7735219Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-25T14:20:45.7735338Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7735435Z 	Plasma stratification:
2025-02-25T14:20:45.7735550Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7735676Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7735779Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:20:45.7735888Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:20:45.7735995Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:20:45.7736105Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:20:45.7736109Z 
2025-02-25T14:20:45.7736360Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7736465Z 	Current t_inner = 10718.574 K
2025-02-25T14:20:45.7736584Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:20:45.7736588Z 
2025-02-25T14:20:45.7736719Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7736818Z 	Starting iteration 4 of 5
2025-02-25T14:20:45.7736945Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7737056Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:20:45.7737148Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:20:45.7737257Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7737261Z 
2025-02-25T14:20:45.7737475Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-25T14:20:45.7737616Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7737705Z 	Plasma stratification:
2025-02-25T14:20:45.7737826Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7737948Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7738056Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:20:45.7738174Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:20:45.7738357Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:20:45.7738527Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:20:45.7738533Z 
2025-02-25T14:20:45.7738721Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7738899Z 	Current t_inner = 10696.150 K
2025-02-25T14:20:45.7739103Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:20:45.7739109Z 
2025-02-25T14:20:45.7739271Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7739383Z 	Simulation finished in 4 iterations 
2025-02-25T14:20:45.7739487Z 	Simulation took 13.34 s
2025-02-25T14:20:45.7739624Z 
2025-02-25T14:20:45.7739742Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7739854Z 	Starting iteration 5 of 5
2025-02-25T14:20:45.7739982Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7740082Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:20:45.7740193Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:20:45.7740293Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7740495Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-25T14:20:45.7740499Z 
2025-02-25T14:20:45.7740937Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4adca0>
2025-02-25T14:20:45.7741162Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7741166Z 
2025-02-25T14:20:45.7741268Z     def test_spectrum(self, simulation):
2025-02-25T14:20:45.7741468Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7741619Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7741717Z     
2025-02-25T14:20:45.7741855Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7741937Z     
2025-02-25T14:20:45.7742056Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7742229Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-25T14:20:45.7742321Z             luminosity,
2025-02-25T14:20:45.7742401Z         )
2025-02-25T14:20:45.7742405Z 
2025-02-25T14:20:45.7742528Z tardis/tests/test_tardis_full.py:81: 
2025-02-25T14:20:45.7742648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7743004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7743108Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7743227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7743232Z 
2025-02-25T14:20:45.7743729Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef14a5c0>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-25T14:20:45.7743983Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7744245Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7744249Z 
2025-02-25T14:20:45.7744336Z     @wraps(func)
2025-02-25T14:20:45.7744425Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7744526Z         with self._recreate_cm():
2025-02-25T14:20:45.7744620Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7744718Z E           AssertionError: 
2025-02-25T14:20:45.7744838Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7744922Z E           
2025-02-25T14:20:45.7745028Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:20:45.7745149Z E           Max absolute difference: 1.38672909e+39
2025-02-25T14:20:45.7745261Z E           Max relative difference: 5.25284451
2025-02-25T14:20:45.7745427Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7745528Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7745697Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7745812Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7745816Z 
2025-02-25T14:20:45.7746024Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7746227Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-25T14:20:45.7746231Z 
2025-02-25T14:20:45.7746450Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4adee0>
2025-02-25T14:20:45.7746667Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7746671Z 
2025-02-25T14:20:45.7746929Z     def test_virtual_spectrum(self, simulation):
2025-02-25T14:20:45.7747118Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-25T14:20:45.7747249Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7747322Z     
2025-02-25T14:20:45.7747444Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7747515Z     
2025-02-25T14:20:45.7747617Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7747798Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-25T14:20:45.7747896Z             luminosity,
2025-02-25T14:20:45.7747969Z         )
2025-02-25T14:20:45.7747973Z 
2025-02-25T14:20:45.7748079Z tardis/tests/test_tardis_full.py:92: 
2025-02-25T14:20:45.7748193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7748537Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7748655Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7748768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7748778Z 
2025-02-25T14:20:45.7749266Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2ae5c0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-25T14:20:45.7749378Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7749643Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7749647Z 
2025-02-25T14:20:45.7749738Z     @wraps(func)
2025-02-25T14:20:45.7749826Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7749928Z         with self._recreate_cm():
2025-02-25T14:20:45.7750017Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7750121Z E           AssertionError: 
2025-02-25T14:20:45.7750233Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7750332Z E           
2025-02-25T14:20:45.7750433Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:20:45.7750676Z E           Max absolute difference: 5.26760031e+38
2025-02-25T14:20:45.7750930Z E           Max relative difference: 35562.41947434
2025-02-25T14:20:45.7751097Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7751186Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7751344Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7751443Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7751447Z 
2025-02-25T14:20:45.7751650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7751924Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-25T14:20:45.7751928Z 
2025-02-25T14:20:45.7752260Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4ae8d0>
2025-02-25T14:20:45.7752506Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7752721Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-25T14:20:45.7752738Z 
2025-02-25T14:20:45.7752873Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7752999Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7753085Z         j_blue_estimator = (
2025-02-25T14:20:45.7753321Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7753399Z         )
2025-02-25T14:20:45.7753561Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7753680Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7753684Z 
2025-02-25T14:20:45.7753833Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7754084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7754088Z 
2025-02-25T14:20:45.7754376Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2ad580>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754478Z        [0., 0., .....,
2025-02-25T14:20:45.7754560Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754653Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754736Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7754992Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7754997Z 
2025-02-25T14:20:45.7755083Z     @wraps(func)
2025-02-25T14:20:45.7755181Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7755289Z         with self._recreate_cm():
2025-02-25T14:20:45.7755390Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7755497Z E           AssertionError: 
2025-02-25T14:20:45.7755618Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7755706Z E           
2025-02-25T14:20:45.7755833Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.7755946Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.7756047Z E           Max relative difference: 7.72237896
2025-02-25T14:20:45.7756155Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756244Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756347Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7756455Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756560Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756669Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7756673Z 
2025-02-25T14:20:45.7756885Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7757136Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-25T14:20:45.7757140Z 
2025-02-25T14:20:45.7757478Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4aef30>
2025-02-25T14:20:45.7757993Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7758305Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-25T14:20:45.7758328Z 
2025-02-25T14:20:45.7758519Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7758704Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7758913Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7759087Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7759188Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7759322Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7759327Z 
2025-02-25T14:20:45.7759468Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7759599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7759963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7760056Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7760190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7760193Z 
2025-02-25T14:20:45.7760858Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef6f93a0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:20:45.7760980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7761230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7761234Z 
2025-02-25T14:20:45.7761321Z     @wraps(func)
2025-02-25T14:20:45.7761600Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7761700Z         with self._recreate_cm():
2025-02-25T14:20:45.7761810Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7761920Z E           AssertionError: 
2025-02-25T14:20:45.7762047Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7762127Z E           
2025-02-25T14:20:45.7762243Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.7762350Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.7762464Z E           Max relative difference: 4.0036592
2025-02-25T14:20:45.7762628Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7762730Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7762889Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7762972Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7762975Z 
2025-02-25T14:20:45.7763221Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7763456Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-25T14:20:45.7763466Z 
2025-02-25T14:20:45.7763807Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af680>
2025-02-25T14:20:45.7764008Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7764227Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-25T14:20:45.7764232Z 
2025-02-25T14:20:45.7764393Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7764503Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7764709Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7764883Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7765016Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7765151Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7765302Z 
2025-02-25T14:20:45.7765452Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7765562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7765905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7766010Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7766133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7766137Z 
2025-02-25T14:20:45.7766627Z args = (<function assert_allclose.<locals>.compare at 0x7f8a1b13d6c0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-25T14:20:45.7766747Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-25T14:20:45.7767009Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7767019Z 
2025-02-25T14:20:45.7767113Z     @wraps(func)
2025-02-25T14:20:45.7767199Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7767300Z         with self._recreate_cm():
2025-02-25T14:20:45.7767392Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7767494Z E           AssertionError: 
2025-02-25T14:20:45.7767603Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7767692Z E           
2025-02-25T14:20:45.7767799Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7767921Z E           Max absolute difference: 5.00661745e+37
2025-02-25T14:20:45.7768025Z E           Max relative difference: 17.51202125
2025-02-25T14:20:45.7768199Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:20:45.7768399Z E                  2.279436e+31, 2.243943e+31])
2025-02-25T14:20:45.7768565Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:20:45.7768670Z E                  2.292907e+31, 2.257206e+31])
2025-02-25T14:20:45.7768682Z 
2025-02-25T14:20:45.7768897Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7769137Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-25T14:20:45.7769141Z 
2025-02-25T14:20:45.7769462Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af0e0>
2025-02-25T14:20:45.7769678Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7769886Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-25T14:20:45.7769904Z 
2025-02-25T14:20:45.7770039Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7770173Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7770269Z         j_blue_estimator = (
2025-02-25T14:20:45.7770657Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7770789Z         )
2025-02-25T14:20:45.7770960Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7771092Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7771096Z 
2025-02-25T14:20:45.7771242Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7771368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7771371Z 
2025-02-25T14:20:45.7771646Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15bc0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7771738Z        [0., 0., .....,
2025-02-25T14:20:45.7771821Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7771913Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7772008Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7772260Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7772407Z 
2025-02-25T14:20:45.7772488Z     @wraps(func)
2025-02-25T14:20:45.7772586Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7772693Z         with self._recreate_cm():
2025-02-25T14:20:45.7772783Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7772888Z E           AssertionError: 
2025-02-25T14:20:45.7773002Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7773091Z E           
2025-02-25T14:20:45.7773204Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.7773321Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.7773424Z E           Max relative difference: 3.25828651
2025-02-25T14:20:45.7773541Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773630Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773741Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7773838Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773950Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7774050Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7774055Z 
2025-02-25T14:20:45.7774262Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7774490Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-25T14:20:45.7774493Z 
2025-02-25T14:20:45.7774814Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af860>
2025-02-25T14:20:45.7775020Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7775194Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-25T14:20:45.7775214Z 
2025-02-25T14:20:45.7775548Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7775666Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7775867Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7776050Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7776156Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7776290Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7776294Z 
2025-02-25T14:20:45.7776427Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7776557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7776906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7776999Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7777122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7777139Z 
2025-02-25T14:20:45.7777606Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15f80>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:20:45.7777731Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7777972Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7777977Z 
2025-02-25T14:20:45.7778066Z     @wraps(func)
2025-02-25T14:20:45.7778159Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7778250Z         with self._recreate_cm():
2025-02-25T14:20:45.7778349Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7778442Z E           AssertionError: 
2025-02-25T14:20:45.7778558Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7778634Z E           
2025-02-25T14:20:45.7778750Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.7778872Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.7778986Z E           Max relative difference: 1.86186015
2025-02-25T14:20:45.7779239Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7779340Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7779494Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7779582Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7779586Z 
2025-02-25T14:20:45.7779808Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7780044Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-25T14:20:45.7780048Z 
2025-02-25T14:20:45.7780382Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4afe60>
2025-02-25T14:20:45.7780693Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7780911Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-25T14:20:45.7780915Z 
2025-02-25T14:20:45.7781077Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7781185Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7781391Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7781553Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7781670Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7781792Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7781796Z 
2025-02-25T14:20:45.7781948Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7782062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7782546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7782655Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7782766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7782776Z 
2025-02-25T14:20:45.7783250Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15d00>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-25T14:20:45.7783353Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-25T14:20:45.7783603Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7783607Z 
2025-02-25T14:20:45.7783692Z     @wraps(func)
2025-02-25T14:20:45.7783781Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7783892Z         with self._recreate_cm():
2025-02-25T14:20:45.7784058Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7784233Z E           AssertionError: 
2025-02-25T14:20:45.7784427Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7784569Z E           
2025-02-25T14:20:45.7784741Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7784944Z E           Max absolute difference: 2.90101642e+37
2025-02-25T14:20:45.7785048Z E           Max relative difference: 0.98973757
2025-02-25T14:20:45.7785216Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:20:45.7785308Z E                  1.330497e+31, 1.294462e+31])
2025-02-25T14:20:45.7785471Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:20:45.7785559Z E                  1.375141e+31, 1.337928e+31])
2025-02-25T14:20:45.7785564Z 
2025-02-25T14:20:45.7785766Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7786004Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-25T14:20:45.7786008Z 
2025-02-25T14:20:45.7786339Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af3b0>
2025-02-25T14:20:45.7786695Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7786894Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-25T14:20:45.7786911Z 
2025-02-25T14:20:45.7787049Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7787173Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7787260Z         j_blue_estimator = (
2025-02-25T14:20:45.7787498Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7787573Z         )
2025-02-25T14:20:45.7787746Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7787867Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7787871Z 
2025-02-25T14:20:45.7788018Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7788145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7788156Z 
2025-02-25T14:20:45.7788429Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0690a200>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788519Z        [0., 0., .....,
2025-02-25T14:20:45.7788606Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788699Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788781Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7789041Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7789045Z 
2025-02-25T14:20:45.7789126Z     @wraps(func)
2025-02-25T14:20:45.7789237Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7789340Z         with self._recreate_cm():
2025-02-25T14:20:45.7789435Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7789641Z E           AssertionError: 
2025-02-25T14:20:45.7789759Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7789844Z E           
2025-02-25T14:20:45.7789951Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.7790064Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.7790164Z E           Max relative difference: 3.25828651
2025-02-25T14:20:45.7790267Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790356Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790461Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7790709Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790813Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790910Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7790914Z 
2025-02-25T14:20:45.7791118Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7791367Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-25T14:20:45.7791371Z 
2025-02-25T14:20:45.7791689Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4afa70>
2025-02-25T14:20:45.7791912Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7792090Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-25T14:20:45.7792108Z 
2025-02-25T14:20:45.7792219Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7792350Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7792550Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7792725Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7792831Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7792970Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7792984Z 
2025-02-25T14:20:45.7793114Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7793243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7793751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7793847Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7793979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7793983Z 
2025-02-25T14:20:45.7794458Z args = (<function assert_allclose.<locals>.compare at 0x7f89f0e50680>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:20:45.7794578Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7794825Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7794834Z 
2025-02-25T14:20:45.7794930Z     @wraps(func)
2025-02-25T14:20:45.7795036Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7795129Z         with self._recreate_cm():
2025-02-25T14:20:45.7795238Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7795332Z E           AssertionError: 
2025-02-25T14:20:45.7795452Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7795525Z E           
2025-02-25T14:20:45.7795636Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.7795737Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.7795844Z E           Max relative difference: 1.86186015
2025-02-25T14:20:45.7795998Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7796096Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7796256Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7796474Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7796479Z 
2025-02-25T14:20:45.7796705Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7796954Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-25T14:20:45.7796958Z 
2025-02-25T14:20:45.7797298Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4e1370>
2025-02-25T14:20:45.7797497Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7797720Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-25T14:20:45.7797724Z 
2025-02-25T14:20:45.7797889Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7798005Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7798215Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7798387Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7798512Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7798638Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7798649Z 
2025-02-25T14:20:45.7798806Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7798923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7799290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7799396Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7799515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7799522Z 
2025-02-25T14:20:45.7800003Z args = (<function assert_allclose.<locals>.compare at 0x7f89f1f7ca40>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-25T14:20:45.7800117Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-25T14:20:45.7800377Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7800478Z 
2025-02-25T14:20:45.7800771Z     @wraps(func)
2025-02-25T14:20:45.7800869Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7800984Z         with self._recreate_cm():
2025-02-25T14:20:45.7801081Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7801181Z E           AssertionError: 
2025-02-25T14:20:45.7801300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7801397Z E           
2025-02-25T14:20:45.7801501Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7801626Z E           Max absolute difference: 2.99183385e+37
2025-02-25T14:20:45.7801722Z E           Max relative difference: 0.98992197
2025-02-25T14:20:45.7801893Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:20:45.7801989Z E                  1.260980e+31, 1.222587e+31])
2025-02-25T14:20:45.7802158Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:20:45.7802271Z E                  1.193005e+31, 1.164854e+31])
2025-02-25T14:20:45.7802275Z 
2025-02-25T14:20:45.7802488Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7802661Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7802665Z 
2025-02-25T14:20:45.7802669Z 
2025-02-25T14:20:45.7803061Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:16<00:00, 104720.19it/s][A
2025-02-25T14:20:45.7803493Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-25T14:20:45.7803501Z 
2025-02-25T14:20:45.7804111Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af2c0>
2025-02-25T14:20:45.7804502Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7804726Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-25T14:20:45.7804743Z 
2025-02-25T14:20:45.7804886Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7805011Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7805104Z         j_blue_estimator = (
2025-02-25T14:20:45.7805351Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7805425Z         )
2025-02-25T14:20:45.7805587Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7805724Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7805728Z 
2025-02-25T14:20:45.7805868Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7806001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7806011Z 
2025-02-25T14:20:45.7806285Z args = (<function assert_allclose.<locals>.compare at 0x7f89e159bce0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806510Z        [0., 0., .....,
2025-02-25T14:20:45.7806594Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806712Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806809Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7807057Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7807061Z 
2025-02-25T14:20:45.7807154Z     @wraps(func)
2025-02-25T14:20:45.7807244Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7807349Z         with self._recreate_cm():
2025-02-25T14:20:45.7807441Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7807540Z E           AssertionError: 
2025-02-25T14:20:45.7807656Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7807745Z E           
2025-02-25T14:20:45.7807872Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.7807997Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.7808130Z E           Max relative difference: 7.72237896
2025-02-25T14:20:45.7808229Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808333Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808430Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7808537Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808633Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808749Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7808753Z 
2025-02-25T14:20:45.7808959Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7809199Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-25T14:20:45.7809203Z 
2025-02-25T14:20:45.7809546Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af9b0>
2025-02-25T14:20:45.7809745Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7809941Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-25T14:20:45.7809947Z 
2025-02-25T14:20:45.7810063Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7810187Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7810392Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7810775Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7810887Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7811023Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7811027Z 
2025-02-25T14:20:45.7811175Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7811429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7811790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7811893Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7812023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7812028Z 
2025-02-25T14:20:45.7812498Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2aff60>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:20:45.7812628Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7812888Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7812892Z 
2025-02-25T14:20:45.7812970Z     @wraps(func)
2025-02-25T14:20:45.7813080Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7813179Z         with self._recreate_cm():
2025-02-25T14:20:45.7813286Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7813376Z E           AssertionError: 
2025-02-25T14:20:45.7813622Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7813705Z E           
2025-02-25T14:20:45.7813825Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.7813941Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.7814045Z E           Max relative difference: 4.0036592
2025-02-25T14:20:45.7814209Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7814305Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7814468Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7814556Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7814562Z 
2025-02-25T14:20:45.7814786Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7815019Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-25T14:20:45.7815039Z 
2025-02-25T14:20:45.7815359Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4affb0>
2025-02-25T14:20:45.7815568Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7815776Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-25T14:20:45.7815781Z 
2025-02-25T14:20:45.7815936Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7816053Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7816269Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7816441Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7816564Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7816712Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7816716Z 
2025-02-25T14:20:45.7816855Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7816999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7817337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7817457Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7817570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7817574Z 
2025-02-25T14:20:45.7818059Z args = (<function assert_allclose.<locals>.compare at 0x7f8a1a0cff60>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-25T14:20:45.7818173Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-25T14:20:45.7818542Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7818548Z 
2025-02-25T14:20:45.7818644Z     @wraps(func)
2025-02-25T14:20:45.7818735Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7818841Z         with self._recreate_cm():
2025-02-25T14:20:45.7818939Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7819038Z E           AssertionError: 
2025-02-25T14:20:45.7819146Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7832094Z E           
2025-02-25T14:20:45.7832239Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7832351Z E           Max absolute difference: 5.0153284e+37
2025-02-25T14:20:45.7832464Z E           Max relative difference: 4.90769503
2025-02-25T14:20:45.7832656Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:20:45.7832825Z E                  2.088676e+31, 2.060278e+31])
2025-02-25T14:20:45.7833099Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:20:45.7833251Z E                  2.124305e+31, 2.101081e+31])
2025-02-25T14:20:45.7833259Z 
2025-02-25T14:20:45.7833824Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7834004Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-25T14:20:45.7834009Z 
2025-02-25T14:20:45.7834732Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7835012Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a08e29be0>
2025-02-25T14:20:45.7835387Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7835392Z 
2025-02-25T14:20:45.7835499Z     def test_montecarlo_main_loop(
2025-02-25T14:20:45.7835614Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7835720Z         regression_data,
2025-02-25T14:20:45.7835813Z         atomic_dataset,
2025-02-25T14:20:45.7835899Z     ):
2025-02-25T14:20:45.7836016Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7836187Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:20:45.7836287Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7836396Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7836496Z             virtual_packet_logging=False,
2025-02-25T14:20:45.7836609Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7836690Z         )
2025-02-25T14:20:45.7836841Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:20:45.7836953Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:20:45.7837044Z     
2025-02-25T14:20:45.7837203Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:20:45.7837301Z             montecarlo_main_loop_simulation
2025-02-25T14:20:45.7837391Z         )
2025-02-25T14:20:45.7837467Z     
2025-02-25T14:20:45.7837584Z         # Load compare data from refdata
2025-02-25T14:20:45.7837656Z     
2025-02-25T14:20:45.7837769Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7837906Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7837990Z         ]
2025-02-25T14:20:45.7838097Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7838248Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7838324Z         ]
2025-02-25T14:20:45.7838470Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7838635Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7838708Z         ]
2025-02-25T14:20:45.7838844Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7839124Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7839213Z         ]
2025-02-25T14:20:45.7839309Z         expected_hdf_store.close()
2025-02-25T14:20:45.7839546Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-25T14:20:45.7839725Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7839883Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7839981Z         actual_nu_bar_estimator = (
2025-02-25T14:20:45.7840147Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:20:45.7840232Z         )
2025-02-25T14:20:45.7840419Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:20:45.7840681Z     
2025-02-25T14:20:45.7840807Z         # Compare
2025-02-25T14:20:45.7840912Z >       npt.assert_allclose(
2025-02-25T14:20:45.7841074Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-25T14:20:45.7841169Z         )
2025-02-25T14:20:45.7841173Z 
2025-02-25T14:20:45.7841364Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-25T14:20:45.7841645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7841650Z 
2025-02-25T14:20:45.7842162Z args = (<function assert_allclose.<locals>.compare at 0x7f89eb1d5760>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-25T14:20:45.7842309Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-25T14:20:45.7842581Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-25T14:20:45.7842586Z 
2025-02-25T14:20:45.7842667Z     @wraps(func)
2025-02-25T14:20:45.7842774Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7842867Z         with self._recreate_cm():
2025-02-25T14:20:45.7842966Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7843064Z E           AssertionError: 
2025-02-25T14:20:45.7843196Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:20:45.7843287Z E           
2025-02-25T14:20:45.7843395Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.7843513Z E           Max absolute difference: 2.25821059e+25
2025-02-25T14:20:45.7843613Z E           Max relative difference: 0.00054426
2025-02-25T14:20:45.7843777Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:20:45.7843901Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:20:45.7844040Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:20:45.7844176Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:20:45.7844304Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:20:45.7844437Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:20:45.7844458Z 
2025-02-25T14:20:45.7844667Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7844854Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7845194Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7845660Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7845851Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7846082Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7846256Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7846358Z 	
2025-02-25T14:20:45.7846472Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7846569Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7846691Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7847022Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7847113Z 	
2025-02-25T14:20:45.7847278Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7847465Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7847549Z 	
2025-02-25T14:20:45.7847660Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7847757Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7847862Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7847967Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7848131Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7848136Z 
2025-02-25T14:20:45.7848140Z 
2025-02-25T14:20:45.7848394Z Packets:                                                                                   10953/? [00:11<00:00, 989.44it/s][A
2025-02-25T14:20:45.7848399Z 
2025-02-25T14:20:45.7848635Z Packets:                                                                                   20858/? [00:11<00:00, 2238.80it/s][A
2025-02-25T14:20:45.7848639Z 
2025-02-25T14:20:45.7848884Z Packets:                                                                                   31317/? [00:11<00:00, 4068.38it/s][A
2025-02-25T14:20:45.7848999Z 
2025-02-25T14:20:45.7849237Z Packets:                                                                                   41548/? [00:11<00:00, 6514.54it/s][A
2025-02-25T14:20:45.7849241Z 
2025-02-25T14:20:45.7849462Z Packets:                                                                                   51776/? [00:11<00:00, 9793.25it/s][A
2025-02-25T14:20:45.7849466Z 
2025-02-25T14:20:45.7849705Z Packets:                                                                                   61878/? [00:11<00:00, 14004.12it/s][A
2025-02-25T14:20:45.7849709Z 
2025-02-25T14:20:45.7849931Z Packets:                                                                                   72493/? [00:11<00:00, 19750.13it/s][A
2025-02-25T14:20:45.7849936Z 
2025-02-25T14:20:45.7850177Z Packets:                                                                                   83169/? [00:11<00:00, 26867.22it/s][A
2025-02-25T14:20:45.7850186Z 
2025-02-25T14:20:45.7850416Z Packets:                                                                                   93996/? [00:11<00:00, 35384.05it/s][A
2025-02-25T14:20:45.7850747Z Iterations:                                                                                40/? [08:25<00:00,  5.87s/it]
2025-02-25T14:20:45.7850754Z 
2025-02-25T14:20:45.7851022Z Packets:                                                                                   104009/? [00:12<00:00, 35384.05it/s][A
2025-02-25T14:20:45.7851176Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7851703Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7851944Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7852051Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7852152Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7852240Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7852245Z 
2025-02-25T14:20:45.7852367Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7852488Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7852615Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7852715Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7852831Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7852940Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7853107Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-25T14:20:45.7853112Z 
2025-02-25T14:20:45.7853962Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7854248Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a10139bb0>
2025-02-25T14:20:45.7854624Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7854628Z 
2025-02-25T14:20:45.7854744Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-25T14:20:45.7854847Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7854949Z         regression_data,
2025-02-25T14:20:45.7855031Z         atomic_dataset,
2025-02-25T14:20:45.7855117Z     ):
2025-02-25T14:20:45.7855228Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7855422Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-25T14:20:45.7855498Z     
2025-02-25T14:20:45.7855662Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:20:45.7855762Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7855870Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7856098Z             virtual_packet_logging=True,
2025-02-25T14:20:45.7856216Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7856308Z         )
2025-02-25T14:20:45.7856441Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:20:45.7856564Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:20:45.7856639Z     
2025-02-25T14:20:45.7856798Z         transport = montecarlo_main_loop_simulation.transport
2025-02-25T14:20:45.7856870Z     
2025-02-25T14:20:45.7857090Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-25T14:20:45.7857163Z     
2025-02-25T14:20:45.7857307Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:20:45.7857409Z             montecarlo_main_loop_simulation
2025-02-25T14:20:45.7857496Z         )
2025-02-25T14:20:45.7857580Z     
2025-02-25T14:20:45.7857691Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7857844Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7857924Z         ]
2025-02-25T14:20:45.7858038Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7858172Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7858265Z         ]
2025-02-25T14:20:45.7858394Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7858553Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7858625Z         ]
2025-02-25T14:20:45.7858762Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7858903Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7858994Z         ]
2025-02-25T14:20:45.7859117Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-25T14:20:45.7859278Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-25T14:20:45.7859372Z         ]
2025-02-25T14:20:45.7859502Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-25T14:20:45.7859674Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-25T14:20:45.7859754Z         ]
2025-02-25T14:20:45.7859850Z     
2025-02-25T14:20:45.7859965Z         transport_state = transport.transport_state
2025-02-25T14:20:45.7860053Z     
2025-02-25T14:20:45.7860230Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7860392Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7860651Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-25T14:20:45.7860783Z         actual_j_estimator = transport_state.j_estimator
2025-02-25T14:20:45.7860948Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-25T14:20:45.7861288Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-25T14:20:45.7861376Z     
2025-02-25T14:20:45.7861471Z         expected_hdf_store.close()
2025-02-25T14:20:45.7861569Z         # Compare
2025-02-25T14:20:45.7861671Z >       npt.assert_allclose(
2025-02-25T14:20:45.7861782Z             actual_nu_bar_estimator,
2025-02-25T14:20:45.7861873Z             expected_nu_bar_estimator,
2025-02-25T14:20:45.7861971Z             rtol=1e-12,
2025-02-25T14:20:45.7862050Z             atol=1e-15,
2025-02-25T14:20:45.7862134Z         )
2025-02-25T14:20:45.7862139Z 
2025-02-25T14:20:45.7862330Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-25T14:20:45.7862460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7862465Z 
2025-02-25T14:20:45.7862923Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08968b80>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-25T14:20:45.7863072Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-25T14:20:45.7863360Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-25T14:20:45.7863492Z 
2025-02-25T14:20:45.7863573Z     @wraps(func)
2025-02-25T14:20:45.7863673Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7863770Z         with self._recreate_cm():
2025-02-25T14:20:45.7863858Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7863950Z E           AssertionError: 
2025-02-25T14:20:45.7864069Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:20:45.7864150Z E           
2025-02-25T14:20:45.7864253Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.7864371Z E           Max absolute difference: 1.93283629e+25
2025-02-25T14:20:45.7864473Z E           Max relative difference: 0.00029148
2025-02-25T14:20:45.7864629Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:20:45.7864770Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:20:45.7864914Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:20:45.7865065Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:20:45.7865181Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:20:45.7865313Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:20:45.7865317Z 
2025-02-25T14:20:45.7865527Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7865699Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7865957Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7866413Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7866605Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7866839Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7867036Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7867113Z 	
2025-02-25T14:20:45.7867233Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7867321Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7867445Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7867617Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7867700Z 	
2025-02-25T14:20:45.7867858Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7868069Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7868140Z 	
2025-02-25T14:20:45.7868250Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:20:45.7868347Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:20:45.7868459Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7868687Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7868845Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7868850Z 
2025-02-25T14:20:45.7868861Z 
2025-02-25T14:20:45.7869122Z Packets:                                                                                   104456/? [00:14<00:00, 9941.34it/s] [A
2025-02-25T14:20:45.7869127Z 
2025-02-25T14:20:45.7869357Z Packets:                                                                                   111764/? [00:14<00:00, 11885.97it/s][A
2025-02-25T14:20:45.7869362Z 
2025-02-25T14:20:45.7869600Z Packets:                                                                                   117834/? [00:15<00:00, 13704.64it/s][A
2025-02-25T14:20:45.7869605Z 
2025-02-25T14:20:45.7869846Z Packets:                                                                                   122980/? [00:15<00:00, 15671.98it/s][A
2025-02-25T14:20:45.7869849Z 
2025-02-25T14:20:45.7870083Z Packets:                                                                                   127608/? [00:15<00:00, 17740.50it/s][A
2025-02-25T14:20:45.7870088Z 
2025-02-25T14:20:45.7870326Z Packets:                                                                                   131894/? [00:15<00:00, 19824.90it/s][A
2025-02-25T14:20:45.7870420Z 
2025-02-25T14:20:45.7870780Z Packets:                                                                                   135919/? [00:15<00:00, 21908.64it/s][A
2025-02-25T14:20:45.7870785Z 
2025-02-25T14:20:45.7871011Z Packets:                                                                                   139760/? [00:15<00:00, 24064.33it/s][A
2025-02-25T14:20:45.7871015Z 
2025-02-25T14:20:45.7871254Z Packets:                                                                                   143508/? [00:15<00:00, 26055.51it/s][A
2025-02-25T14:20:45.7871258Z 
2025-02-25T14:20:45.7871485Z Packets:                                                                                   147176/? [00:15<00:00, 27916.91it/s][A
2025-02-25T14:20:45.7871509Z 
2025-02-25T14:20:45.7871751Z Packets:                                                                                   150799/? [00:16<00:00, 29179.52it/s][A
2025-02-25T14:20:45.7871764Z 
2025-02-25T14:20:45.7872003Z Packets:                                                                                   154335/? [00:16<00:00, 30355.02it/s][A
2025-02-25T14:20:45.7872007Z 
2025-02-25T14:20:45.7872227Z Packets:                                                                                   157832/? [00:16<00:00, 30785.98it/s][A
2025-02-25T14:20:45.7872231Z 
2025-02-25T14:20:45.7872463Z Packets:                                                                                   161239/? [00:16<00:00, 31424.13it/s][A
2025-02-25T14:20:45.7872468Z 
2025-02-25T14:20:45.7872708Z Packets:                                                                                   164620/? [00:16<00:00, 31644.42it/s][A
2025-02-25T14:20:45.7872712Z 
2025-02-25T14:20:45.7872944Z Packets:                                                                                   168180/? [00:16<00:00, 32726.14it/s][A
2025-02-25T14:20:45.7872948Z 
2025-02-25T14:20:45.7873192Z Packets:                                                                                   171601/? [00:16<00:00, 33143.53it/s][A
2025-02-25T14:20:45.7873196Z 
2025-02-25T14:20:45.7873419Z Packets:                                                                                   175008/? [00:16<00:00, 33330.95it/s][A
2025-02-25T14:20:45.7873433Z 
2025-02-25T14:20:45.7873659Z Packets:                                                                                   178407/? [00:16<00:00, 33498.07it/s][A
2025-02-25T14:20:45.7873663Z 
2025-02-25T14:20:45.7873901Z Packets:                                                                                   181804/? [00:16<00:00, 33580.12it/s][A
2025-02-25T14:20:45.7873904Z 
2025-02-25T14:20:45.7874256Z Packets:                                                                                   185195/? [00:17<00:00, 33461.75it/s][A
2025-02-25T14:20:45.7874260Z 
2025-02-25T14:20:45.7874503Z Packets:                                                                                   188564/? [00:17<00:00, 33470.17it/s][A
2025-02-25T14:20:45.7874511Z 
2025-02-25T14:20:45.7874747Z Packets:                                                                                   191927/? [00:17<00:00, 33224.83it/s][A
2025-02-25T14:20:45.7874750Z 
2025-02-25T14:20:45.7874979Z Packets:                                                                                   195269/? [00:17<00:00, 33282.30it/s][A
2025-02-25T14:20:45.7874983Z 
2025-02-25T14:20:45.7875226Z Packets:                                                                                   198741/? [00:17<00:00, 33707.60it/s][A
2025-02-25T14:20:45.7875230Z 
2025-02-25T14:20:45.7875454Z Packets:                                                                                   202248/? [00:17<00:00, 34113.02it/s][A
2025-02-25T14:20:45.7875632Z Iterations:                                                                                41/? [08:31<00:00,  5.81s/it]
2025-02-25T14:20:45.7875637Z 
2025-02-25T14:20:45.7875993Z Packets:                                                                                   204009/? [00:17<00:00, 34113.02it/s][A
2025-02-25T14:20:45.7876154Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7876687Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7876921Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7877040Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7877131Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7877214Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7877218Z 
2025-02-25T14:20:45.7877350Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7877446Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7877565Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7877664Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:20:45.7877766Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:20:45.7877876Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7878043Z __________________________ test_boundary_interactions __________________________
2025-02-25T14:20:45.7878047Z 
2025-02-25T14:20:45.7878839Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f8a26c596d0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f8a07adf8b0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f89f3ce3340>])
2025-02-25T14:20:45.7879135Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a07adffe0>
2025-02-25T14:20:45.7879139Z 
2025-02-25T14:20:45.7879330Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-25T14:20:45.7879433Z         no_of_packets = len(rpacket_tracker)
2025-02-25T14:20:45.7879514Z     
2025-02-25T14:20:45.7879610Z         # Hard coding the number of columns
2025-02-25T14:20:45.7879786Z         # Based on the largest size of boundary_interaction array (60)
2025-02-25T14:20:45.7879901Z         obtained_boundary_interaction = np.full(
2025-02-25T14:20:45.7880000Z             (no_of_packets, 64),
2025-02-25T14:20:45.7880075Z             [-1],
2025-02-25T14:20:45.7880247Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-25T14:20:45.7880412Z         )
2025-02-25T14:20:45.7880679Z     
2025-02-25T14:20:45.7880907Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-25T14:20:45.7881091Z             obtained_boundary_interaction[
2025-02-25T14:20:45.7881295Z                 i, : tracker.boundary_interaction.size
2025-02-25T14:20:45.7881464Z             ] = tracker.boundary_interaction
2025-02-25T14:20:45.7881610Z     
2025-02-25T14:20:45.7882097Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-25T14:20:45.7882288Z             obtained_boundary_interaction
2025-02-25T14:20:45.7882403Z         )
2025-02-25T14:20:45.7882558Z >       npt.assert_array_equal(
2025-02-25T14:20:45.7882814Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-25T14:20:45.7882931Z         )
2025-02-25T14:20:45.7882937Z 
2025-02-25T14:20:45.7883216Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-25T14:20:45.7883391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7883397Z 
2025-02-25T14:20:45.7883749Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7883917Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-25T14:20:45.7884201Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-25T14:20:45.7884565Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-25T14:20:45.7884572Z 
2025-02-25T14:20:45.7884702Z     @wraps(func)
2025-02-25T14:20:45.7885103Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7885251Z         with self._recreate_cm():
2025-02-25T14:20:45.7885437Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7885586Z E           AssertionError: 
2025-02-25T14:20:45.7885756Z E           Arrays are not equal
2025-02-25T14:20:45.7885879Z E           
2025-02-25T14:20:45.7886053Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:20:45.7886262Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7886448Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.7886640Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.7886861Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7887055Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.7887243Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.7887259Z 
2025-02-25T14:20:45.7887663Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7887933Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-25T14:20:45.7887939Z 
2025-02-25T14:20:45.7889103Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7889601Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1472fd10>
2025-02-25T14:20:45.7890242Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7891109Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f89f3c4eea0>
2025-02-25T14:20:45.7891128Z 
2025-02-25T14:20:45.7891308Z     def test_montecarlo_main_loop_weighted(
2025-02-25T14:20:45.7891479Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7891624Z         regression_data,
2025-02-25T14:20:45.7891784Z         atomic_dataset,
2025-02-25T14:20:45.7891966Z         simple_weighted_packet_source,
2025-02-25T14:20:45.7892050Z     ):
2025-02-25T14:20:45.7892181Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7892411Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-25T14:20:45.7892592Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7892751Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7892930Z             virtual_packet_logging=False,
2025-02-25T14:20:45.7893082Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7893422Z         )
2025-02-25T14:20:45.7893692Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-25T14:20:45.7893865Z             simple_weighted_packet_source
2025-02-25T14:20:45.7894021Z         )
2025-02-25T14:20:45.7894281Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-25T14:20:45.7894530Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-25T14:20:45.7894654Z     
2025-02-25T14:20:45.7894844Z         # Get the montecarlo simple regression data
2025-02-25T14:20:45.7894986Z         regression_data_dir = (
2025-02-25T14:20:45.7895305Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-25T14:20:45.7895546Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-25T14:20:45.7895681Z         )
2025-02-25T14:20:45.7895945Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-25T14:20:45.7896078Z     
2025-02-25T14:20:45.7896246Z         # Load compare data from refdata
2025-02-25T14:20:45.7896382Z     
2025-02-25T14:20:45.7896560Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7896778Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7897105Z         ]
2025-02-25T14:20:45.7897276Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7897512Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7897631Z         ]
2025-02-25T14:20:45.7897841Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7898076Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7898222Z         ]
2025-02-25T14:20:45.7898413Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7898648Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7898768Z         ]
2025-02-25T14:20:45.7898922Z         expected_hdf_store.close()
2025-02-25T14:20:45.7899091Z         transport_state = (
2025-02-25T14:20:45.7899406Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-25T14:20:45.7899536Z         )
2025-02-25T14:20:45.7899843Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7900103Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7900261Z         actual_nu_bar_estimator = (
2025-02-25T14:20:45.7900683Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:20:45.7900810Z         )
2025-02-25T14:20:45.7901138Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:20:45.7901220Z     
2025-02-25T14:20:45.7901297Z         # Compare
2025-02-25T14:20:45.7901394Z         npt.assert_allclose(
2025-02-25T14:20:45.7901554Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-25T14:20:45.7901634Z         )
2025-02-25T14:20:45.7901823Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-25T14:20:45.7901991Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-25T14:20:45.7901996Z 
2025-02-25T14:20:45.7902244Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-25T14:20:45.7902369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7902373Z 
2025-02-25T14:20:45.7902855Z args = (<function assert_allclose.<locals>.compare at 0x7f89eadf2200>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-25T14:20:45.7902968Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-25T14:20:45.7903228Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-25T14:20:45.7903233Z 
2025-02-25T14:20:45.7903309Z     @wraps(func)
2025-02-25T14:20:45.7903402Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7903637Z         with self._recreate_cm():
2025-02-25T14:20:45.7903743Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7903830Z E           AssertionError: 
2025-02-25T14:20:45.7903960Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:20:45.7904048Z E           
2025-02-25T14:20:45.7904158Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:20:45.7904275Z E           Max absolute difference: 2.00640487e-05
2025-02-25T14:20:45.7904378Z E           Max relative difference: 2.06329455
2025-02-25T14:20:45.7904553Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.7904650Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.7904822Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.7904914Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.7904918Z 
2025-02-25T14:20:45.7905155Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7905323Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7905740Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7906198Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7906381Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7906604Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7906768Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7906847Z 	
2025-02-25T14:20:45.7906943Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7907040Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7907155Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7907330Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7907418Z 	
2025-02-25T14:20:45.7907586Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7907755Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7907831Z 	
2025-02-25T14:20:45.7907943Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7908039Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7908141Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7908251Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7908418Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7908422Z 
2025-02-25T14:20:45.7908426Z 
2025-02-25T14:20:45.7908682Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-25T14:20:45.7908686Z 
2025-02-25T14:20:45.7908906Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-25T14:20:45.7908911Z 
2025-02-25T14:20:45.7909198Z Packets:   ███████▉                                                                        9914/100000 [00:00<00:00, 99131.35it/s][A
2025-02-25T14:20:45.7909203Z 
2025-02-25T14:20:45.7909465Z Packets:   ████████████████▎                                                               20389/100000 [00:00<00:00, 102430.63it/s][A
2025-02-25T14:20:45.7909479Z 
2025-02-25T14:20:45.7909759Z Packets:   ████████████████████████▌                                                       30633/100000 [00:00<00:00, 102420.12it/s][A
2025-02-25T14:20:45.7909764Z 
2025-02-25T14:20:45.7910048Z Packets:   ████████████████████████████████▊                                               41069/100000 [00:00<00:00, 103184.17it/s][A
2025-02-25T14:20:45.7910052Z 
2025-02-25T14:20:45.7910334Z Packets:   █████████████████████████████████████████▎                                      51624/100000 [00:00<00:00, 104033.78it/s][A
2025-02-25T14:20:45.7910339Z 
2025-02-25T14:20:45.7910999Z Packets:   █████████████████████████████████████████████████▊                              62197/100000 [00:00<00:00, 104608.79it/s][A
2025-02-25T14:20:45.7911007Z 
2025-02-25T14:20:45.7911341Z Packets:   ██████████████████████████████████████████████████████████▎                     72851/100000 [00:00<00:00, 105238.83it/s][A
2025-02-25T14:20:45.7911360Z 
2025-02-25T14:20:45.7911668Z Packets:   ██████████████████████████████████████████████████████████████████▉             83624/100000 [00:00<00:00, 106030.60it/s][A
2025-02-25T14:20:45.7911672Z 
2025-02-25T14:20:45.7912000Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    94228/100000 [00:00<00:00, 105845.43it/s][A
2025-02-25T14:20:45.7912156Z Iterations:                                                                                45/? [09:23<00:00,  8.28s/it]
2025-02-25T14:20:45.7912161Z 
2025-02-25T14:20:45.7912502Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 105845.43it/s][A
2025-02-25T14:20:45.7912695Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7913203Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7913570Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7913685Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7913797Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7913882Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7913887Z 
2025-02-25T14:20:45.7914006Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7914105Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7914210Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7914318Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7914412Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7914532Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7914747Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-25T14:20:45.7914751Z 
2025-02-25T14:20:45.7915043Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34c500>
2025-02-25T14:20:45.7915325Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7915615Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-25T14:20:45.7915710Z attribute = 'plot_data'
2025-02-25T14:20:45.7915714Z 
2025-02-25T14:20:45.7915811Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7915913Z         "attribute",
2025-02-25T14:20:45.7915992Z         [
2025-02-25T14:20:45.7916086Z             "plot_data",
2025-02-25T14:20:45.7916169Z             "plot_colors",
2025-02-25T14:20:45.7916272Z             "new_bin_edges",
2025-02-25T14:20:45.7916348Z         ],
2025-02-25T14:20:45.7916440Z     )
2025-02-25T14:20:45.7916645Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7916740Z         self,
2025-02-25T14:20:45.7916842Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7916941Z         request,
2025-02-25T14:20:45.7917020Z         attribute,
2025-02-25T14:20:45.7917108Z     ):
2025-02-25T14:20:45.7917198Z         """
2025-02-25T14:20:45.7917346Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7917444Z     
2025-02-25T14:20:45.7917524Z         Parameters:
2025-02-25T14:20:45.7917621Z         -----------
2025-02-25T14:20:45.7918706Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7918805Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7918966Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7919048Z         """
2025-02-25T14:20:45.7919156Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7919314Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7919472Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7919634Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7919958Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7920080Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7920221Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7920346Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7920351Z 
2025-02-25T14:20:45.7920688Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7920895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7920914Z 
2025-02-25T14:20:45.7921403Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0b100>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:20:45.7921530Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:20:45.7921789Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7921794Z 
2025-02-25T14:20:45.7921890Z     @wraps(func)
2025-02-25T14:20:45.7921979Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7922087Z         with self._recreate_cm():
2025-02-25T14:20:45.7922184Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7922294Z E           AssertionError: 
2025-02-25T14:20:45.7922425Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7922502Z E           
2025-02-25T14:20:45.7922643Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.7922880Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7923107Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7923312Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7923466Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7923598Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7923730Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7923734Z 
2025-02-25T14:20:45.7923964Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7924125Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7924389Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7924648Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7924822Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7925341Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7925579Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-25T14:20:45.7925591Z 
2025-02-25T14:20:45.7925877Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34c980>
2025-02-25T14:20:45.7926157Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7926445Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-25T14:20:45.7926540Z attribute = 'plot_data'
2025-02-25T14:20:45.7926545Z 
2025-02-25T14:20:45.7926652Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7926729Z         "attribute",
2025-02-25T14:20:45.7926807Z         [
2025-02-25T14:20:45.7926891Z             "plot_data",
2025-02-25T14:20:45.7926983Z             "plot_colors",
2025-02-25T14:20:45.7927100Z             "new_bin_edges",
2025-02-25T14:20:45.7927175Z         ],
2025-02-25T14:20:45.7927261Z     )
2025-02-25T14:20:45.7927356Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7927565Z         self,
2025-02-25T14:20:45.7927659Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7927742Z         request,
2025-02-25T14:20:45.7927818Z         attribute,
2025-02-25T14:20:45.7927908Z     ):
2025-02-25T14:20:45.7927981Z         """
2025-02-25T14:20:45.7928133Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7928205Z     
2025-02-25T14:20:45.7928296Z         Parameters:
2025-02-25T14:20:45.7928378Z         -----------
2025-02-25T14:20:45.7928558Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7928680Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7928847Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7928930Z         """
2025-02-25T14:20:45.7929049Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7929213Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7929357Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7929533Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7929677Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7929799Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7929935Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7930059Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7930063Z 
2025-02-25T14:20:45.7930224Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7930344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7930348Z 
2025-02-25T14:20:45.7931021Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad47ba0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-25T14:20:45.7931172Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:20:45.7931436Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7931441Z 
2025-02-25T14:20:45.7931537Z     @wraps(func)
2025-02-25T14:20:45.7931629Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7931734Z         with self._recreate_cm():
2025-02-25T14:20:45.7931832Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7931934Z E           AssertionError: 
2025-02-25T14:20:45.7932042Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7932132Z E           
2025-02-25T14:20:45.7932227Z E           (shapes (558,), (560,) mismatch)
2025-02-25T14:20:45.7932374Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7932645Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7932775Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7932926Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7933043Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7933176Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7933180Z 
2025-02-25T14:20:45.7933387Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7933618Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-25T14:20:45.7933623Z 
2025-02-25T14:20:45.7933901Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34cbc0>
2025-02-25T14:20:45.7934190Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7934480Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-25T14:20:45.7934684Z attribute = 'plot_data'
2025-02-25T14:20:45.7934689Z 
2025-02-25T14:20:45.7934794Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7934871Z         "attribute",
2025-02-25T14:20:45.7934957Z         [
2025-02-25T14:20:45.7935045Z             "plot_data",
2025-02-25T14:20:45.7935142Z             "plot_colors",
2025-02-25T14:20:45.7935225Z             "new_bin_edges",
2025-02-25T14:20:45.7935306Z         ],
2025-02-25T14:20:45.7935397Z     )
2025-02-25T14:20:45.7935490Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7935584Z         self,
2025-02-25T14:20:45.7935683Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7935770Z         request,
2025-02-25T14:20:45.7935845Z         attribute,
2025-02-25T14:20:45.7935929Z     ):
2025-02-25T14:20:45.7936002Z         """
2025-02-25T14:20:45.7936166Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7936238Z     
2025-02-25T14:20:45.7936334Z         Parameters:
2025-02-25T14:20:45.7936428Z         -----------
2025-02-25T14:20:45.7936753Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7936862Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7937041Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7937126Z         """
2025-02-25T14:20:45.7937236Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7937384Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7937538Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7937715Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7937861Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7938011Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7938136Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7938278Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7938282Z 
2025-02-25T14:20:45.7938440Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7938556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7938559Z 
2025-02-25T14:20:45.7939028Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0ba60>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:20:45.7939168Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:20:45.7939443Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7939447Z 
2025-02-25T14:20:45.7939531Z     @wraps(func)
2025-02-25T14:20:45.7939742Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7939854Z         with self._recreate_cm():
2025-02-25T14:20:45.7939948Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7940053Z E           AssertionError: 
2025-02-25T14:20:45.7940164Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7940257Z E           
2025-02-25T14:20:45.7940356Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.7940671Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7940804Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7940949Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7941082Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7941220Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7941372Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7941376Z 
2025-02-25T14:20:45.7941576Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7941893Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7942143Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7942411Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7942567Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7942880Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7943099Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-25T14:20:45.7943103Z 
2025-02-25T14:20:45.7943368Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34ce00>
2025-02-25T14:20:45.7943650Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7943998Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-25T14:20:45.7944156Z attribute = 'plot_data'
2025-02-25T14:20:45.7944161Z 
2025-02-25T14:20:45.7944259Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7944350Z         "attribute",
2025-02-25T14:20:45.7944435Z         [
2025-02-25T14:20:45.7944517Z             "plot_data",
2025-02-25T14:20:45.7944615Z             "plot_colors",
2025-02-25T14:20:45.7944701Z             "new_bin_edges",
2025-02-25T14:20:45.7944786Z         ],
2025-02-25T14:20:45.7944856Z     )
2025-02-25T14:20:45.7944958Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7945034Z         self,
2025-02-25T14:20:45.7945146Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7945229Z         request,
2025-02-25T14:20:45.7945324Z         attribute,
2025-02-25T14:20:45.7945403Z     ):
2025-02-25T14:20:45.7945484Z         """
2025-02-25T14:20:45.7945625Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7945725Z     
2025-02-25T14:20:45.7945804Z         Parameters:
2025-02-25T14:20:45.7945890Z         -----------
2025-02-25T14:20:45.7946078Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7946185Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7946371Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7946448Z         """
2025-02-25T14:20:45.7946568Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7946714Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7946883Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7947049Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7947367Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7947512Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7947645Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7947778Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7947783Z 
2025-02-25T14:20:45.7947930Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7948054Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7948058Z 
2025-02-25T14:20:45.7948441Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0a200>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-25T14:20:45.7948595Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:20:45.7948687Z        11042.97481792]))
2025-02-25T14:20:45.7948945Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7948949Z 
2025-02-25T14:20:45.7949044Z     @wraps(func)
2025-02-25T14:20:45.7949131Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7949331Z         with self._recreate_cm():
2025-02-25T14:20:45.7949419Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7949527Z E           AssertionError: 
2025-02-25T14:20:45.7949642Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7949727Z E           
2025-02-25T14:20:45.7949826Z E           (shapes (159,), (153,) mismatch)
2025-02-25T14:20:45.7949985Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7950119Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7950250Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7950392Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7950681Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7950847Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7950862Z 
2025-02-25T14:20:45.7951068Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7951300Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-25T14:20:45.7951303Z 
2025-02-25T14:20:45.7951702Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d040>
2025-02-25T14:20:45.7951995Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7952285Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-25T14:20:45.7952380Z attribute = 'plot_data'
2025-02-25T14:20:45.7952384Z 
2025-02-25T14:20:45.7952526Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7952614Z         "attribute",
2025-02-25T14:20:45.7952708Z         [
2025-02-25T14:20:45.7952793Z             "plot_data",
2025-02-25T14:20:45.7952911Z             "plot_colors",
2025-02-25T14:20:45.7953009Z             "new_bin_edges",
2025-02-25T14:20:45.7953106Z         ],
2025-02-25T14:20:45.7953191Z     )
2025-02-25T14:20:45.7953287Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7953391Z         self,
2025-02-25T14:20:45.7953491Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7953585Z         request,
2025-02-25T14:20:45.7953660Z         attribute,
2025-02-25T14:20:45.7953749Z     ):
2025-02-25T14:20:45.7953827Z         """
2025-02-25T14:20:45.7953989Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7954064Z     
2025-02-25T14:20:45.7954153Z         Parameters:
2025-02-25T14:20:45.7954233Z         -----------
2025-02-25T14:20:45.7954427Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7954678Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7954866Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7954960Z         """
2025-02-25T14:20:45.7955076Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7955235Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7955393Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7955569Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7955721Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7955860Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7955984Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7956113Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7956118Z 
2025-02-25T14:20:45.7956280Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7956400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7956404Z 
2025-02-25T14:20:45.7957028Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad47a60>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:20:45.7957141Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:20:45.7957399Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7957403Z 
2025-02-25T14:20:45.7957473Z     @wraps(func)
2025-02-25T14:20:45.7957570Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7957671Z         with self._recreate_cm():
2025-02-25T14:20:45.7957768Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7957869Z E           AssertionError: 
2025-02-25T14:20:45.7957976Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7958074Z E           
2025-02-25T14:20:45.7958175Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.7958340Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7958572Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7958734Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7958875Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7959007Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7959152Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7959156Z 
2025-02-25T14:20:45.7959363Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7959533Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7959798Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7960063Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7960233Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7960738Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7961012Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-25T14:20:45.7961016Z 
2025-02-25T14:20:45.7961297Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d2b0>
2025-02-25T14:20:45.7961595Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7961874Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-25T14:20:45.7961977Z attribute = 'plot_data'
2025-02-25T14:20:45.7962141Z 
2025-02-25T14:20:45.7962241Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7962334Z         "attribute",
2025-02-25T14:20:45.7962429Z         [
2025-02-25T14:20:45.7962507Z             "plot_data",
2025-02-25T14:20:45.7962618Z             "plot_colors",
2025-02-25T14:20:45.7962701Z             "new_bin_edges",
2025-02-25T14:20:45.7962803Z         ],
2025-02-25T14:20:45.7962879Z     )
2025-02-25T14:20:45.7962996Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7963078Z         self,
2025-02-25T14:20:45.7963191Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7963276Z         request,
2025-02-25T14:20:45.7963373Z         attribute,
2025-02-25T14:20:45.7963454Z     ):
2025-02-25T14:20:45.7963547Z         """
2025-02-25T14:20:45.7963691Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7963777Z     
2025-02-25T14:20:45.7963858Z         Parameters:
2025-02-25T14:20:45.7963952Z         -----------
2025-02-25T14:20:45.7964155Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7964259Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7964574Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7964650Z         """
2025-02-25T14:20:45.7964780Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7964924Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7965090Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7965263Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7965425Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7965568Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7965696Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7965844Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7965849Z 
2025-02-25T14:20:45.7965997Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7966133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7966147Z 
2025-02-25T14:20:45.7966622Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad46340>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-25T14:20:45.7966740Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:20:45.7967010Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7967014Z 
2025-02-25T14:20:45.7967093Z     @wraps(func)
2025-02-25T14:20:45.7967206Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7967296Z         with self._recreate_cm():
2025-02-25T14:20:45.7967402Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7967504Z E           AssertionError: 
2025-02-25T14:20:45.7967636Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7967781Z E           
2025-02-25T14:20:45.7967954Z E           (shapes (1466,), (1481,) mismatch)
2025-02-25T14:20:45.7968114Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:20:45.7968219Z E                  11152.962595, 11172.044815])
2025-02-25T14:20:45.7968375Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:20:45.7968463Z E                  11398.237865, 11111.204868])
2025-02-25T14:20:45.7968467Z 
2025-02-25T14:20:45.7968690Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7968851Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7969109Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7969583Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7969755Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7970138Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7970353Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-25T14:20:45.7970357Z 
2025-02-25T14:20:45.7970808Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d4f0>
2025-02-25T14:20:45.7971101Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7971387Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-25T14:20:45.7971476Z attribute = 'plot_data'
2025-02-25T14:20:45.7971480Z 
2025-02-25T14:20:45.7971601Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7971698Z         "attribute",
2025-02-25T14:20:45.7971770Z         [
2025-02-25T14:20:45.7971867Z             "plot_data",
2025-02-25T14:20:45.7972088Z             "plot_colors",
2025-02-25T14:20:45.7972194Z             "new_bin_edges",
2025-02-25T14:20:45.7972267Z         ],
2025-02-25T14:20:45.7972354Z     )
2025-02-25T14:20:45.7972450Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7972543Z         self,
2025-02-25T14:20:45.7972636Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7972730Z         request,
2025-02-25T14:20:45.7972811Z         attribute,
2025-02-25T14:20:45.7972904Z     ):
2025-02-25T14:20:45.7972978Z         """
2025-02-25T14:20:45.7973134Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7973221Z     
2025-02-25T14:20:45.7973303Z         Parameters:
2025-02-25T14:20:45.7973397Z         -----------
2025-02-25T14:20:45.7973584Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7973709Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7973881Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7973977Z         """
2025-02-25T14:20:45.7974089Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7974252Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7974406Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7974584Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7974754Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7974880Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7975023Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7975148Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7975152Z 
2025-02-25T14:20:45.7975362Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7975572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7975587Z 
2025-02-25T14:20:45.7976045Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd08f40>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:20:45.7976196Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:20:45.7976445Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7976452Z 
2025-02-25T14:20:45.7976539Z     @wraps(func)
2025-02-25T14:20:45.7976631Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7976734Z         with self._recreate_cm():
2025-02-25T14:20:45.7976832Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7976955Z E           AssertionError: 
2025-02-25T14:20:45.7977218Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7977328Z E           
2025-02-25T14:20:45.7977434Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.7977607Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7977757Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7977886Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7978044Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7978165Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7978309Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7978313Z 
2025-02-25T14:20:45.7978522Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7978705Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7978977Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7979234Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7979501Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7979815Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7980048Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-25T14:20:45.7980052Z 
2025-02-25T14:20:45.7980325Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d6d0>
2025-02-25T14:20:45.7980811Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7981107Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-25T14:20:45.7981213Z attribute = 'plot_data'
2025-02-25T14:20:45.7981218Z 
2025-02-25T14:20:45.7981336Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7981421Z         "attribute",
2025-02-25T14:20:45.7981527Z         [
2025-02-25T14:20:45.7981618Z             "plot_data",
2025-02-25T14:20:45.7981724Z             "plot_colors",
2025-02-25T14:20:45.7981811Z             "new_bin_edges",
2025-02-25T14:20:45.7981898Z         ],
2025-02-25T14:20:45.7981972Z     )
2025-02-25T14:20:45.7982088Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7982165Z         self,
2025-02-25T14:20:45.7982275Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7982357Z         request,
2025-02-25T14:20:45.7982456Z         attribute,
2025-02-25T14:20:45.7982544Z     ):
2025-02-25T14:20:45.7982627Z         """
2025-02-25T14:20:45.7982791Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7982873Z     
2025-02-25T14:20:45.7982965Z         Parameters:
2025-02-25T14:20:45.7983059Z         -----------
2025-02-25T14:20:45.7983267Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7983371Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7983564Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7983650Z         """
2025-02-25T14:20:45.7983780Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7983925Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7984091Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7984275Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7984436Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7984588Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7984714Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7984992Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7984997Z 
2025-02-25T14:20:45.7985154Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7985306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7985310Z 
2025-02-25T14:20:45.7985712Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd082c0>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-25T14:20:45.7985905Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:20:45.7986077Z        11042.97481792]))
2025-02-25T14:20:45.7986370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7986374Z 
2025-02-25T14:20:45.7986480Z     @wraps(func)
2025-02-25T14:20:45.7986574Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7986696Z         with self._recreate_cm():
2025-02-25T14:20:45.7986807Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7986914Z E           AssertionError: 
2025-02-25T14:20:45.7987051Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7987267Z E           
2025-02-25T14:20:45.7987389Z E           (shapes (379,), (381,) mismatch)
2025-02-25T14:20:45.7987537Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:20:45.7987687Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:20:45.7987818Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:20:45.7987972Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:20:45.7988096Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:20:45.7988236Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:20:45.7988240Z 
2025-02-25T14:20:45.7988471Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7988626Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7988899Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7989180Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7989372Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7989698Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7989924Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-25T14:20:45.7989929Z 
2025-02-25T14:20:45.7990215Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34db50>
2025-02-25T14:20:45.7990735Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89e28761b0>
2025-02-25T14:20:45.7991281Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.7991538Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-25T14:20:45.7991542Z 
2025-02-25T14:20:45.7991659Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.7991834Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.7991927Z     ):
2025-02-25T14:20:45.7992022Z         """
2025-02-25T14:20:45.7992179Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.7992264Z     
2025-02-25T14:20:45.7992397Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.7992486Z     
2025-02-25T14:20:45.7992573Z         Parameters:
2025-02-25T14:20:45.7992670Z         -----------
2025-02-25T14:20:45.7993096Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.7993276Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.7993395Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7993485Z         """
2025-02-25T14:20:45.7993597Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.7993727Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7993917Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.7994068Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.7994191Z             expected_values = expected.get(
2025-02-25T14:20:45.7994285Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.7994396Z             ).values.flatten()
2025-02-25T14:20:45.7994545Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.7994630Z     
2025-02-25T14:20:45.7994778Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.7994900Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.7994991Z                     expected_values,
2025-02-25T14:20:45.7995232Z                     actual_values,
2025-02-25T14:20:45.7995315Z                     rtol=0.3,
2025-02-25T14:20:45.7995413Z                     atol=3,
2025-02-25T14:20:45.7995512Z                 )
2025-02-25T14:20:45.7995586Z             else:
2025-02-25T14:20:45.7995749Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.7995821Z     
2025-02-25T14:20:45.7995946Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.7996074Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.7996195Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.7996281Z                 assert (
2025-02-25T14:20:45.7996426Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.7996521Z                     == data.get_label()
2025-02-25T14:20:45.7996627Z                 )
2025-02-25T14:20:45.7996745Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.7996843Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.7996958Z                     data.get_xydata(),
2025-02-25T14:20:45.7997099Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.7997204Z                     rtol=0.3,
2025-02-25T14:20:45.7997289Z                     atol=3,
2025-02-25T14:20:45.7997384Z                 )
2025-02-25T14:20:45.7997388Z 
2025-02-25T14:20:45.7997539Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.7997670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7997674Z 
2025-02-25T14:20:45.7997947Z args = (<function assert_allclose.<locals>.compare at 0x7f89e9a32d40>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.7998030Z        [1.19e+04, 1.67e+0...,
2025-02-25T14:20:45.7998132Z        [1.82e+04, 0.00e+00],
2025-02-25T14:20:45.7998220Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.7998312Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.7998395Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.7998830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.7998839Z 
2025-02-25T14:20:45.7998921Z     @wraps(func)
2025-02-25T14:20:45.7999027Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7999127Z         with self._recreate_cm():
2025-02-25T14:20:45.7999237Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7999331Z E           AssertionError: 
2025-02-25T14:20:45.7999453Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.7999541Z E           
2025-02-25T14:20:45.7999641Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.7999751Z E           Max absolute difference: 22.
2025-02-25T14:20:45.7999844Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8000109Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8000207Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8000312Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8000408Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8000649Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8000813Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8000821Z 
2025-02-25T14:20:45.8001054Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8001234Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8001480Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8001936Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-25T14:20:45.8002092Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8002556Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:20:45.8002924Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-25T14:20:45.8002945Z 
2025-02-25T14:20:45.8003212Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34dc10>
2025-02-25T14:20:45.8003541Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89dbdd0860>
2025-02-25T14:20:45.8004033Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8004294Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-25T14:20:45.8004298Z 
2025-02-25T14:20:45.8004390Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8004587Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8004671Z     ):
2025-02-25T14:20:45.8004764Z         """
2025-02-25T14:20:45.8004923Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8004998Z     
2025-02-25T14:20:45.8005138Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8005212Z     
2025-02-25T14:20:45.8005361Z         Parameters:
2025-02-25T14:20:45.8005500Z         -----------
2025-02-25T14:20:45.8005727Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8005884Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8006004Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8006082Z         """
2025-02-25T14:20:45.8006199Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8006310Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8006515Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8006680Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8006783Z             expected_values = expected.get(
2025-02-25T14:20:45.8006897Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8006988Z             ).values.flatten()
2025-02-25T14:20:45.8007140Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8007216Z     
2025-02-25T14:20:45.8007366Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8007468Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8007577Z                     expected_values,
2025-02-25T14:20:45.8007668Z                     actual_values,
2025-02-25T14:20:45.8007765Z                     rtol=0.3,
2025-02-25T14:20:45.8007873Z                     atol=3,
2025-02-25T14:20:45.8007953Z                 )
2025-02-25T14:20:45.8008050Z             else:
2025-02-25T14:20:45.8008393Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8008488Z     
2025-02-25T14:20:45.8008601Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.8008746Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.8008854Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.8008949Z                 assert (
2025-02-25T14:20:45.8009077Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.8009178Z                     == data.get_label()
2025-02-25T14:20:45.8009256Z                 )
2025-02-25T14:20:45.8009367Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.8009485Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8009579Z                     data.get_xydata(),
2025-02-25T14:20:45.8009736Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.8009821Z                     rtol=0.3,
2025-02-25T14:20:45.8009917Z                     atol=3,
2025-02-25T14:20:45.8010004Z                 )
2025-02-25T14:20:45.8010008Z 
2025-02-25T14:20:45.8010176Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.8010396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8010400Z 
2025-02-25T14:20:45.8010894Z args = (<function assert_allclose.<locals>.compare at 0x7f8a04c116c0>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8010995Z        [1.19e+04, 1.67e+0...,
2025-02-25T14:20:45.8011080Z        [1.82e+04, 0.00e+00],
2025-02-25T14:20:45.8011182Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8011266Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8011369Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.8011614Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8011618Z 
2025-02-25T14:20:45.8011713Z     @wraps(func)
2025-02-25T14:20:45.8011803Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8011916Z         with self._recreate_cm():
2025-02-25T14:20:45.8012016Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8012121Z E           AssertionError: 
2025-02-25T14:20:45.8012260Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8012343Z E           
2025-02-25T14:20:45.8012461Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8012633Z E           Max absolute difference: 22.
2025-02-25T14:20:45.8012825Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8012924Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8013035Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8013123Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8013226Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8013314Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8013414Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8013418Z 
2025-02-25T14:20:45.8013653Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8013857Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-25T14:20:45.8013866Z 
2025-02-25T14:20:45.8014149Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34e000>
2025-02-25T14:20:45.8014455Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89ef40e300>
2025-02-25T14:20:45.8014963Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8015210Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-25T14:20:45.8015235Z 
2025-02-25T14:20:45.8015329Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8015509Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8015586Z     ):
2025-02-25T14:20:45.8015828Z         """
2025-02-25T14:20:45.8015967Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8016055Z     
2025-02-25T14:20:45.8016192Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8016280Z     
2025-02-25T14:20:45.8016360Z         Parameters:
2025-02-25T14:20:45.8016456Z         -----------
2025-02-25T14:20:45.8016621Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8016790Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8016910Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8016987Z         """
2025-02-25T14:20:45.8017102Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8017215Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8017401Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8017565Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8017682Z             expected_values = expected.get(
2025-02-25T14:20:45.8017778Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8018011Z             ).values.flatten()
2025-02-25T14:20:45.8018148Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8018241Z     
2025-02-25T14:20:45.8018373Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8018486Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8018588Z                     expected_values,
2025-02-25T14:20:45.8018679Z                     actual_values,
2025-02-25T14:20:45.8018783Z                     rtol=0.3,
2025-02-25T14:20:45.8018867Z                     atol=3,
2025-02-25T14:20:45.8018961Z                 )
2025-02-25T14:20:45.8018966Z 
2025-02-25T14:20:45.8019117Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-25T14:20:45.8019250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8019262Z 
2025-02-25T14:20:45.8019690Z args = (<function assert_allclose.<locals>.compare at 0x7f8a086ddee0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8019804Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8020061Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8020065Z 
2025-02-25T14:20:45.8020147Z     @wraps(func)
2025-02-25T14:20:45.8020249Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8020340Z         with self._recreate_cm():
2025-02-25T14:20:45.8020438Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8020710Z E           AssertionError: 
2025-02-25T14:20:45.8020853Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8020932Z E           
2025-02-25T14:20:45.8021054Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8021177Z E           Max absolute difference: 34
2025-02-25T14:20:45.8021285Z E           Max relative difference: 0.71428571
2025-02-25T14:20:45.8021452Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8021561Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8021723Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8021814Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8021818Z 
2025-02-25T14:20:45.8022043Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8022208Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8022628Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8022907Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8023221Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8023549Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8023761Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-25T14:20:45.8023765Z 
2025-02-25T14:20:45.8024050Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34e0c0>
2025-02-25T14:20:45.8024369Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0a5acb60>
2025-02-25T14:20:45.8024886Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8025142Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-25T14:20:45.8025146Z 
2025-02-25T14:20:45.8025251Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8025427Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8025501Z     ):
2025-02-25T14:20:45.8025705Z         """
2025-02-25T14:20:45.8025839Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8025924Z     
2025-02-25T14:20:45.8026053Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8026139Z     
2025-02-25T14:20:45.8026223Z         Parameters:
2025-02-25T14:20:45.8026309Z         -----------
2025-02-25T14:20:45.8026487Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8026641Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8026752Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8026828Z         """
2025-02-25T14:20:45.8026940Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8027054Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8027245Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8027400Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8027519Z             expected_values = expected.get(
2025-02-25T14:20:45.8027611Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8027714Z             ).values.flatten()
2025-02-25T14:20:45.8027860Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8027935Z     
2025-02-25T14:20:45.8028073Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8028177Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8028286Z                     expected_values,
2025-02-25T14:20:45.8028379Z                     actual_values,
2025-02-25T14:20:45.8028475Z                     rtol=0.3,
2025-02-25T14:20:45.8028560Z                     atol=3,
2025-02-25T14:20:45.8028660Z                 )
2025-02-25T14:20:45.8028741Z             else:
2025-02-25T14:20:45.8028910Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8028987Z     
2025-02-25T14:20:45.8029157Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.8029408Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.8029518Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.8029631Z                 assert (
2025-02-25T14:20:45.8029762Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.8029873Z                     == data.get_label()
2025-02-25T14:20:45.8029950Z                 )
2025-02-25T14:20:45.8030063Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.8030164Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8030277Z                     data.get_xydata(),
2025-02-25T14:20:45.8030424Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.8030683Z                     rtol=0.3,
2025-02-25T14:20:45.8030962Z                     atol=3,
2025-02-25T14:20:45.8031042Z                 )
2025-02-25T14:20:45.8031046Z 
2025-02-25T14:20:45.8031220Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.8031353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8031358Z 
2025-02-25T14:20:45.8031632Z args = (<function assert_allclose.<locals>.compare at 0x7f8a086b1d00>, array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8031725Z        [1.19e+04, 2.72e+0...,
2025-02-25T14:20:45.8031822Z        [1.82e+04, 5.00e+00],
2025-02-25T14:20:45.8031904Z        [1.91e+04, 5.00e+00],
2025-02-25T14:20:45.8031997Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8032098Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.8032351Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8032356Z 
2025-02-25T14:20:45.8032453Z     @wraps(func)
2025-02-25T14:20:45.8032546Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8032651Z         with self._recreate_cm():
2025-02-25T14:20:45.8032756Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8032999Z E           AssertionError: 
2025-02-25T14:20:45.8033116Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8033210Z E           
2025-02-25T14:20:45.8033313Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8033423Z E           Max absolute difference: 34.
2025-02-25T14:20:45.8033535Z E           Max relative difference: 0.65
2025-02-25T14:20:45.8033631Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8033731Z E                  [1.19e+04, 2.72e+02],
2025-02-25T14:20:45.8033827Z E                  [1.19e+04, 1.10e+02],...
2025-02-25T14:20:45.8033933Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:20:45.8034019Z E                  [1.19e+04, 3.06e+02],
2025-02-25T14:20:45.8034123Z E                  [1.19e+04, 1.18e+02],...
2025-02-25T14:20:45.8034127Z 
2025-02-25T14:20:45.8034356Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8034538Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8034801Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8035153Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8035323Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8035686Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8035902Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-25T14:20:45.8035906Z 
2025-02-25T14:20:45.8036330Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34ef30>
2025-02-25T14:20:45.8036678Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a089a30b0>
2025-02-25T14:20:45.8036804Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8036961Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8037134Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8037344Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8037610Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-25T14:20:45.8037615Z 
2025-02-25T14:20:45.8037713Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8037917Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8038088Z     ):
2025-02-25T14:20:45.8038364Z         """
2025-02-25T14:20:45.8038533Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8053766Z     
2025-02-25T14:20:45.8053995Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8054068Z     
2025-02-25T14:20:45.8054172Z         Parameters:
2025-02-25T14:20:45.8054251Z         ----------
2025-02-25T14:20:45.8054439Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8054591Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8054710Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8054800Z         """
2025-02-25T14:20:45.8054916Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8055036Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8055236Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8055328Z     
2025-02-25T14:20:45.8055495Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8055617Z             expected_values = expected.get(
2025-02-25T14:20:45.8055730Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8055843Z             ).values.flatten()
2025-02-25T14:20:45.8055994Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8056272Z     
2025-02-25T14:20:45.8056499Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8056679Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8056777Z                     expected_values,
2025-02-25T14:20:45.8056885Z                     actual_values,
2025-02-25T14:20:45.8056975Z                     rtol=0.3,
2025-02-25T14:20:45.8057079Z                     atol=3,
2025-02-25T14:20:45.8057172Z                 )
2025-02-25T14:20:45.8057260Z             else:
2025-02-25T14:20:45.8057434Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8057546Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8057684Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8057793Z             if data.stackgroup:
2025-02-25T14:20:45.8057898Z                 assert (
2025-02-25T14:20:45.8057990Z                     data.stackgroup
2025-02-25T14:20:45.8058102Z                     == getattr(
2025-02-25T14:20:45.8058225Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8058343Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8058441Z                     ).decode()
2025-02-25T14:20:45.8058535Z                 )
2025-02-25T14:20:45.8058653Z             if data.name:
2025-02-25T14:20:45.8058734Z                 assert (
2025-02-25T14:20:45.8058827Z                     data.name
2025-02-25T14:20:45.8058912Z                     == getattr(
2025-02-25T14:20:45.8059050Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8059149Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8059249Z                     ).decode()
2025-02-25T14:20:45.8059332Z                 )
2025-02-25T14:20:45.8059457Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8059536Z                 data.x,
2025-02-25T14:20:45.8059671Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8059766Z                 rtol=0.3,
2025-02-25T14:20:45.8059866Z                 atol=3,
2025-02-25T14:20:45.8059951Z             )
2025-02-25T14:20:45.8060048Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8060131Z                 data.y,
2025-02-25T14:20:45.8060239Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8060326Z                 rtol=0.3,
2025-02-25T14:20:45.8060400Z                 atol=3,
2025-02-25T14:20:45.8060487Z             )
2025-02-25T14:20:45.8060494Z 
2025-02-25T14:20:45.8060869Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8061005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8061010Z 
2025-02-25T14:20:45.8061586Z args = (<function assert_allclose.<locals>.compare at 0x7f89f615f6a0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8061685Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:20:45.8061963Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8061968Z 
2025-02-25T14:20:45.8062046Z     @wraps(func)
2025-02-25T14:20:45.8062150Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8062246Z         with self._recreate_cm():
2025-02-25T14:20:45.8062354Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8062446Z E           AssertionError: 
2025-02-25T14:20:45.8062576Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8062653Z E           
2025-02-25T14:20:45.8062776Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8062891Z E           Max absolute difference: 22
2025-02-25T14:20:45.8062995Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8063210Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8063541Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8063701Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8063791Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8063796Z 
2025-02-25T14:20:45.8064027Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8064200Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8064507Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8064956Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-25T14:20:45.8065136Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8065599Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:20:45.8065821Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-25T14:20:45.8065825Z 
2025-02-25T14:20:45.8066109Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f020>
2025-02-25T14:20:45.8066453Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0e6cda00>
2025-02-25T14:20:45.8066562Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8066733Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8066872Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8067093Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8067352Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-25T14:20:45.8067357Z 
2025-02-25T14:20:45.8067465Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8067643Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8067740Z     ):
2025-02-25T14:20:45.8067838Z         """
2025-02-25T14:20:45.8067976Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8068061Z     
2025-02-25T14:20:45.8068198Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8068288Z     
2025-02-25T14:20:45.8068371Z         Parameters:
2025-02-25T14:20:45.8068473Z         ----------
2025-02-25T14:20:45.8068638Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8068786Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8068889Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8068976Z         """
2025-02-25T14:20:45.8069177Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8069306Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8069519Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8069591Z     
2025-02-25T14:20:45.8069872Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8070010Z             expected_values = expected.get(
2025-02-25T14:20:45.8070121Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8070214Z             ).values.flatten()
2025-02-25T14:20:45.8070378Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8070458Z     
2025-02-25T14:20:45.8070816Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8070919Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8071028Z                     expected_values,
2025-02-25T14:20:45.8071117Z                     actual_values,
2025-02-25T14:20:45.8071241Z                     rtol=0.3,
2025-02-25T14:20:45.8071348Z                     atol=3,
2025-02-25T14:20:45.8071423Z                 )
2025-02-25T14:20:45.8071666Z             else:
2025-02-25T14:20:45.8071818Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8071943Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8072055Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8072160Z             if data.stackgroup:
2025-02-25T14:20:45.8072245Z                 assert (
2025-02-25T14:20:45.8072342Z                     data.stackgroup
2025-02-25T14:20:45.8072422Z                     == getattr(
2025-02-25T14:20:45.8072548Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8072676Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8072761Z                     ).decode()
2025-02-25T14:20:45.8072854Z                 )
2025-02-25T14:20:45.8072954Z             if data.name:
2025-02-25T14:20:45.8073046Z                 assert (
2025-02-25T14:20:45.8073129Z                     data.name
2025-02-25T14:20:45.8073225Z                     == getattr(
2025-02-25T14:20:45.8073343Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8073462Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8073547Z                     ).decode()
2025-02-25T14:20:45.8073643Z                 )
2025-02-25T14:20:45.8073745Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8073837Z                 data.x,
2025-02-25T14:20:45.8073949Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8074053Z                 rtol=0.3,
2025-02-25T14:20:45.8074151Z                 atol=3,
2025-02-25T14:20:45.8074228Z             )
2025-02-25T14:20:45.8074339Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8074419Z                 data.y,
2025-02-25T14:20:45.8074557Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8074639Z                 rtol=0.3,
2025-02-25T14:20:45.8074730Z                 atol=3,
2025-02-25T14:20:45.8074804Z             )
2025-02-25T14:20:45.8074815Z 
2025-02-25T14:20:45.8074983Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8075112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8075136Z 
2025-02-25T14:20:45.8075553Z args = (<function assert_allclose.<locals>.compare at 0x7f89f61afc40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8075662Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:20:45.8075912Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8075916Z 
2025-02-25T14:20:45.8076011Z     @wraps(func)
2025-02-25T14:20:45.8076106Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8076345Z         with self._recreate_cm():
2025-02-25T14:20:45.8076445Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8076558Z E           AssertionError: 
2025-02-25T14:20:45.8076684Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8076763Z E           
2025-02-25T14:20:45.8076878Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8076971Z E           Max absolute difference: 22
2025-02-25T14:20:45.8077089Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8077233Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8077336Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8077468Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8077573Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8077577Z 
2025-02-25T14:20:45.8077792Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8078017Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-25T14:20:45.8078021Z 
2025-02-25T14:20:45.8078401Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f440>
2025-02-25T14:20:45.8078718Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0acd5a60>
2025-02-25T14:20:45.8078831Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8078983Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8079141Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8079353Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8079621Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-25T14:20:45.8079625Z 
2025-02-25T14:20:45.8079740Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8080015Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8080163Z     ):
2025-02-25T14:20:45.8080262Z         """
2025-02-25T14:20:45.8080414Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8080486Z     
2025-02-25T14:20:45.8080800Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8080870Z     
2025-02-25T14:20:45.8080958Z         Parameters:
2025-02-25T14:20:45.8081041Z         ----------
2025-02-25T14:20:45.8081217Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8081371Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8081475Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8081566Z         """
2025-02-25T14:20:45.8081671Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8081793Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8081981Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8082066Z     
2025-02-25T14:20:45.8082220Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8082340Z             expected_values = expected.get(
2025-02-25T14:20:45.8082435Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8082544Z             ).values.flatten()
2025-02-25T14:20:45.8082691Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8082780Z     
2025-02-25T14:20:45.8082934Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8083035Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8083148Z                     expected_values,
2025-02-25T14:20:45.8083239Z                     actual_values,
2025-02-25T14:20:45.8083331Z                     rtol=0.3,
2025-02-25T14:20:45.8083416Z                     atol=3,
2025-02-25T14:20:45.8083505Z                 )
2025-02-25T14:20:45.8083509Z 
2025-02-25T14:20:45.8083836Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-25T14:20:45.8083977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8083988Z 
2025-02-25T14:20:45.8084426Z args = (<function assert_allclose.<locals>.compare at 0x7f89f61aef20>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8084513Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8084767Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8084772Z 
2025-02-25T14:20:45.8084851Z     @wraps(func)
2025-02-25T14:20:45.8084961Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8085052Z         with self._recreate_cm():
2025-02-25T14:20:45.8085158Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8085249Z E           AssertionError: 
2025-02-25T14:20:45.8085380Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8085482Z E           
2025-02-25T14:20:45.8085583Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8085844Z E           Max absolute difference: 34
2025-02-25T14:20:45.8085955Z E           Max relative difference: 0.71428571
2025-02-25T14:20:45.8086115Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8086215Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8086364Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8086455Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8086459Z 
2025-02-25T14:20:45.8086742Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8087027Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8087299Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8087578Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8087739Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8088057Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8088263Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-25T14:20:45.8088267Z 
2025-02-25T14:20:45.8088547Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f500>
2025-02-25T14:20:45.8088879Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a062ac200>
2025-02-25T14:20:45.8088981Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8089146Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8089293Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8089516Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8089773Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-25T14:20:45.8089778Z 
2025-02-25T14:20:45.8089881Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8090057Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8090153Z     ):
2025-02-25T14:20:45.8090259Z         """
2025-02-25T14:20:45.8090391Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8090481Z     
2025-02-25T14:20:45.8090820Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8090900Z     
2025-02-25T14:20:45.8090996Z         Parameters:
2025-02-25T14:20:45.8091082Z         ----------
2025-02-25T14:20:45.8091260Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8091556Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8091679Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8091769Z         """
2025-02-25T14:20:45.8091880Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8091988Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8092184Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8092255Z     
2025-02-25T14:20:45.8092425Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8092544Z             expected_values = expected.get(
2025-02-25T14:20:45.8092642Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8092754Z             ).values.flatten()
2025-02-25T14:20:45.8092896Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8092980Z     
2025-02-25T14:20:45.8093117Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8093251Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8093341Z                     expected_values,
2025-02-25T14:20:45.8093440Z                     actual_values,
2025-02-25T14:20:45.8093646Z                     rtol=0.3,
2025-02-25T14:20:45.8093772Z                     atol=3,
2025-02-25T14:20:45.8093904Z                 )
2025-02-25T14:20:45.8094052Z             else:
2025-02-25T14:20:45.8094210Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8094314Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8094440Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8094528Z             if data.stackgroup:
2025-02-25T14:20:45.8094634Z                 assert (
2025-02-25T14:20:45.8094725Z                     data.stackgroup
2025-02-25T14:20:45.8094832Z                     == getattr(
2025-02-25T14:20:45.8094950Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8095074Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8095160Z                     ).decode()
2025-02-25T14:20:45.8095257Z                 )
2025-02-25T14:20:45.8095347Z             if data.name:
2025-02-25T14:20:45.8095447Z                 assert (
2025-02-25T14:20:45.8095544Z                     data.name
2025-02-25T14:20:45.8095624Z                     == getattr(
2025-02-25T14:20:45.8095754Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8095861Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8095956Z                     ).decode()
2025-02-25T14:20:45.8096031Z                 )
2025-02-25T14:20:45.8096143Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8096220Z                 data.x,
2025-02-25T14:20:45.8096355Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8096439Z                 rtol=0.3,
2025-02-25T14:20:45.8096532Z                 atol=3,
2025-02-25T14:20:45.8096622Z             )
2025-02-25T14:20:45.8096738Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8096831Z                 data.y,
2025-02-25T14:20:45.8096943Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8097047Z                 rtol=0.3,
2025-02-25T14:20:45.8097121Z                 atol=3,
2025-02-25T14:20:45.8097209Z             )
2025-02-25T14:20:45.8097213Z 
2025-02-25T14:20:45.8097369Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8097504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8097509Z 
2025-02-25T14:20:45.8097926Z args = (<function assert_allclose.<locals>.compare at 0x7f89f615f560>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8098030Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8098412Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8098418Z 
2025-02-25T14:20:45.8098505Z     @wraps(func)
2025-02-25T14:20:45.8098612Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8098710Z         with self._recreate_cm():
2025-02-25T14:20:45.8098822Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8098913Z E           AssertionError: 
2025-02-25T14:20:45.8099041Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8099124Z E           
2025-02-25T14:20:45.8099241Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8099348Z E           Max absolute difference: 34
2025-02-25T14:20:45.8099453Z E           Max relative difference: 0.65
2025-02-25T14:20:45.8099606Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8099702Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8099865Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8099958Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8099963Z 
2025-02-25T14:20:45.8100188Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8100440Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8100929Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8101295Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8101471Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8101833Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8102061Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-25T14:20:45.8102075Z 
2025-02-25T14:20:45.8102368Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c352e10>
2025-02-25T14:20:45.8102688Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8103031Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a146cfa70>
2025-02-25T14:20:45.8103328Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-25T14:20:45.8103333Z 
2025-02-25T14:20:45.8103432Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8103519Z         self,
2025-02-25T14:20:45.8103618Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8103723Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8103800Z         request,
2025-02-25T14:20:45.8103882Z     ):
2025-02-25T14:20:45.8103993Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8104274Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8104448Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8104646Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8104756Z             plot_object = getattr(
2025-02-25T14:20:45.8104893Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8104982Z             )
2025-02-25T14:20:45.8105087Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8105270Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8105382Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8105495Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8105627Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8105715Z                 )
2025-02-25T14:20:45.8105719Z 
2025-02-25T14:20:45.8106033Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8106152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8106163Z 
2025-02-25T14:20:45.8106656Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5c60>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8106763Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8107018Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8107023Z 
2025-02-25T14:20:45.8107096Z     @wraps(func)
2025-02-25T14:20:45.8107201Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8107305Z         with self._recreate_cm():
2025-02-25T14:20:45.8107397Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8107495Z E           AssertionError: 
2025-02-25T14:20:45.8107611Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8107705Z E           
2025-02-25T14:20:45.8107808Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8107921Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8108136Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8108303Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8108391Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8108546Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8108645Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8108649Z 
2025-02-25T14:20:45.8108858Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8109091Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-25T14:20:45.8109095Z 
2025-02-25T14:20:45.8109373Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353530>
2025-02-25T14:20:45.8109695Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8110029Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0d40>
2025-02-25T14:20:45.8110318Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-25T14:20:45.8110323Z 
2025-02-25T14:20:45.8110431Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8110668Z         self,
2025-02-25T14:20:45.8110822Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8110919Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8111012Z         request,
2025-02-25T14:20:45.8111090Z     ):
2025-02-25T14:20:45.8111206Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8111393Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8111515Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8111692Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8111799Z             plot_object = getattr(
2025-02-25T14:20:45.8111948Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8112024Z             )
2025-02-25T14:20:45.8112143Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8112307Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8112425Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8112527Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8112666Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8112741Z                 )
2025-02-25T14:20:45.8112745Z 
2025-02-25T14:20:45.8112909Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8113192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8113197Z 
2025-02-25T14:20:45.8113681Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aaf6480>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8113800Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8114208Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8114214Z 
2025-02-25T14:20:45.8114317Z     @wraps(func)
2025-02-25T14:20:45.8114406Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8114511Z         with self._recreate_cm():
2025-02-25T14:20:45.8114616Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8114702Z E           AssertionError: 
2025-02-25T14:20:45.8114823Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8114902Z E           
2025-02-25T14:20:45.8115031Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8115134Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8115258Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8115554Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8115658Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8115808Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8115904Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8115907Z 
2025-02-25T14:20:45.8116125Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8116350Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-25T14:20:45.8116354Z 
2025-02-25T14:20:45.8116641Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c3539b0>
2025-02-25T14:20:45.8116957Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8117295Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f40f8260>
2025-02-25T14:20:45.8117575Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-25T14:20:45.8117594Z 
2025-02-25T14:20:45.8117692Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8117775Z         self,
2025-02-25T14:20:45.8117876Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8117979Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8118055Z         request,
2025-02-25T14:20:45.8118141Z     ):
2025-02-25T14:20:45.8118250Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8118446Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8118536Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8118732Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8118819Z             plot_object = getattr(
2025-02-25T14:20:45.8118962Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8119057Z             )
2025-02-25T14:20:45.8119156Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8119331Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8119440Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8119553Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8119691Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8119781Z                 )
2025-02-25T14:20:45.8119785Z 
2025-02-25T14:20:45.8119939Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8120062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8120066Z 
2025-02-25T14:20:45.8120799Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa83920>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8120924Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8121195Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8121200Z 
2025-02-25T14:20:45.8121282Z     @wraps(func)
2025-02-25T14:20:45.8121379Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8121470Z         with self._recreate_cm():
2025-02-25T14:20:45.8121573Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8121668Z E           AssertionError: 
2025-02-25T14:20:45.8121791Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8121877Z E           
2025-02-25T14:20:45.8121984Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8122111Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8122210Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8122378Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8122593Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8122759Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8122849Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8122852Z 
2025-02-25T14:20:45.8123084Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8123325Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-25T14:20:45.8123330Z 
2025-02-25T14:20:45.8123608Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353ad0>
2025-02-25T14:20:45.8123943Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8124448Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab2240>
2025-02-25T14:20:45.8124757Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-25T14:20:45.8124761Z 
2025-02-25T14:20:45.8124859Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8124954Z         self,
2025-02-25T14:20:45.8125064Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8125157Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8125249Z         request,
2025-02-25T14:20:45.8125324Z     ):
2025-02-25T14:20:45.8125440Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8125622Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8125725Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8125904Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8126021Z             plot_object = getattr(
2025-02-25T14:20:45.8126152Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8126231Z             )
2025-02-25T14:20:45.8126353Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8126515Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8126636Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8126735Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8126871Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8126950Z                 )
2025-02-25T14:20:45.8126954Z 
2025-02-25T14:20:45.8127117Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8127238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8127241Z 
2025-02-25T14:20:45.8127854Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa82c00>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8127978Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8128231Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8128235Z 
2025-02-25T14:20:45.8128328Z     @wraps(func)
2025-02-25T14:20:45.8128419Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8128524Z         with self._recreate_cm():
2025-02-25T14:20:45.8128615Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8128714Z E           AssertionError: 
2025-02-25T14:20:45.8128827Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8128920Z E           
2025-02-25T14:20:45.8129035Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8129141Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8129254Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8129418Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8129520Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8129758Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8129864Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8129870Z 
2025-02-25T14:20:45.8130076Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8130314Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-25T14:20:45.8130318Z 
2025-02-25T14:20:45.8130732Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353b90>
2025-02-25T14:20:45.8131049Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8131406Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ec3f2fc0>
2025-02-25T14:20:45.8131686Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-25T14:20:45.8131699Z 
2025-02-25T14:20:45.8131811Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8131889Z         self,
2025-02-25T14:20:45.8132007Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8132112Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8132188Z         request,
2025-02-25T14:20:45.8132271Z     ):
2025-02-25T14:20:45.8132378Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8132580Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8132670Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8132859Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8132997Z             plot_object = getattr(
2025-02-25T14:20:45.8133255Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8133343Z             )
2025-02-25T14:20:45.8133463Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8133636Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8133759Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8133871Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8134000Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8134083Z                 )
2025-02-25T14:20:45.8134087Z 
2025-02-25T14:20:45.8134237Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8134363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8134367Z 
2025-02-25T14:20:45.8134985Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa909a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8135107Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8135369Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8135380Z 
2025-02-25T14:20:45.8135456Z     @wraps(func)
2025-02-25T14:20:45.8135552Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8135642Z         with self._recreate_cm():
2025-02-25T14:20:45.8135743Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8135833Z E           AssertionError: 
2025-02-25T14:20:45.8135951Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8136030Z E           
2025-02-25T14:20:45.8136143Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8136255Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8136356Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8136532Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8136621Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8136782Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8136982Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8136986Z 
2025-02-25T14:20:45.8137203Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8137423Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-25T14:20:45.8137427Z 
2025-02-25T14:20:45.8137709Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353c50>
2025-02-25T14:20:45.8138032Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8138359Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ead373e0>
2025-02-25T14:20:45.8138658Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-25T14:20:45.8138662Z 
2025-02-25T14:20:45.8138759Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8138854Z         self,
2025-02-25T14:20:45.8138955Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8139063Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8139139Z         request,
2025-02-25T14:20:45.8139225Z     ):
2025-02-25T14:20:45.8139344Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8139526Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8139620Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8139793Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8139891Z             plot_object = getattr(
2025-02-25T14:20:45.8140018Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8140098Z             )
2025-02-25T14:20:45.8140207Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8140371Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8140489Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8140796Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8140942Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8141011Z                 )
2025-02-25T14:20:45.8141015Z 
2025-02-25T14:20:45.8141177Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8141303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8141307Z 
2025-02-25T14:20:45.8141799Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f60c0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8142066Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8142334Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8142344Z 
2025-02-25T14:20:45.8142430Z     @wraps(func)
2025-02-25T14:20:45.8142521Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8142624Z         with self._recreate_cm():
2025-02-25T14:20:45.8142716Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8142883Z E           AssertionError: 
2025-02-25T14:20:45.8143071Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8143163Z E           
2025-02-25T14:20:45.8143269Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8143385Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8143489Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8143656Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8143756Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8143910Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8144006Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8144145Z 
2025-02-25T14:20:45.8144362Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8144593Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-25T14:20:45.8144597Z 
2025-02-25T14:20:45.8144871Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353d10>
2025-02-25T14:20:45.8145206Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8145545Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a143d9b80>
2025-02-25T14:20:45.8145831Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-25T14:20:45.8145846Z 
2025-02-25T14:20:45.8145955Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8146032Z         self,
2025-02-25T14:20:45.8146140Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8146246Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8146344Z         request,
2025-02-25T14:20:45.8146417Z     ):
2025-02-25T14:20:45.8146549Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8146747Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8146839Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8147041Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8147132Z             plot_object = getattr(
2025-02-25T14:20:45.8147278Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8147355Z             )
2025-02-25T14:20:45.8147470Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8147647Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8147777Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8147883Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8148028Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8148117Z                 )
2025-02-25T14:20:45.8148124Z 
2025-02-25T14:20:45.8148276Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8148418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8148422Z 
2025-02-25T14:20:45.8148900Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa80860>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8149025Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8149370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8149391Z 
2025-02-25T14:20:45.8149474Z     @wraps(func)
2025-02-25T14:20:45.8149573Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8149671Z         with self._recreate_cm():
2025-02-25T14:20:45.8149773Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8149864Z E           AssertionError: 
2025-02-25T14:20:45.8149990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8150065Z E           
2025-02-25T14:20:45.8150181Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8150284Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8150393Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8150745Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8150859Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8151032Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8151121Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8151125Z 
2025-02-25T14:20:45.8151352Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8151832Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-25T14:20:45.8151837Z 
2025-02-25T14:20:45.8152128Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353dd0>
2025-02-25T14:20:45.8152445Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8152965Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0c50>
2025-02-25T14:20:45.8153268Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-25T14:20:45.8153274Z 
2025-02-25T14:20:45.8153375Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8153473Z         self,
2025-02-25T14:20:45.8153577Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8153688Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8153767Z         request,
2025-02-25T14:20:45.8153857Z     ):
2025-02-25T14:20:45.8153969Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8154166Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8154270Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8154451Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8154553Z             plot_object = getattr(
2025-02-25T14:20:45.8154690Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8154771Z             )
2025-02-25T14:20:45.8154880Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8155053Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8155170Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8155300Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8155431Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8155532Z                 )
2025-02-25T14:20:45.8155536Z 
2025-02-25T14:20:45.8155700Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8155822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8155826Z 
2025-02-25T14:20:45.8156317Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa81da0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8156423Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8156685Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8156690Z 
2025-02-25T14:20:45.8156938Z     @wraps(func)
2025-02-25T14:20:45.8157047Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8157159Z         with self._recreate_cm():
2025-02-25T14:20:45.8157268Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8157377Z E           AssertionError: 
2025-02-25T14:20:45.8157496Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8157593Z E           
2025-02-25T14:20:45.8157696Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8157814Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8157920Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8158085Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8158177Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8158336Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8158440Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8158445Z 
2025-02-25T14:20:45.8158647Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8158980Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-25T14:20:45.8158985Z 
2025-02-25T14:20:45.8159254Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353e90>
2025-02-25T14:20:45.8159577Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8159907Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab3230>
2025-02-25T14:20:45.8160196Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-25T14:20:45.8160202Z 
2025-02-25T14:20:45.8160311Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8160392Z         self,
2025-02-25T14:20:45.8160638Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8160737Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8160826Z         request,
2025-02-25T14:20:45.8160899Z     ):
2025-02-25T14:20:45.8161022Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8161205Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8161308Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8161486Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8161589Z             plot_object = getattr(
2025-02-25T14:20:45.8161735Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8161809Z             )
2025-02-25T14:20:45.8161923Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8162223Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8162357Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8162472Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8162617Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8162700Z                 )
2025-02-25T14:20:45.8162704Z 
2025-02-25T14:20:45.8162859Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8162984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8162988Z 
2025-02-25T14:20:45.8163467Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa81ee0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8163586Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8163842Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8163847Z 
2025-02-25T14:20:45.8163951Z     @wraps(func)
2025-02-25T14:20:45.8164199Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8164302Z         with self._recreate_cm():
2025-02-25T14:20:45.8164402Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8164492Z E           AssertionError: 
2025-02-25T14:20:45.8164635Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8164715Z E           
2025-02-25T14:20:45.8164840Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8164942Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8165062Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8165212Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8165318Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8165465Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8165566Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8165571Z 
2025-02-25T14:20:45.8165797Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8166026Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-25T14:20:45.8166175Z 
2025-02-25T14:20:45.8166470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353f50>
2025-02-25T14:20:45.8166776Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8167128Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a089e1550>
2025-02-25T14:20:45.8167414Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-25T14:20:45.8167428Z 
2025-02-25T14:20:45.8167524Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8167612Z         self,
2025-02-25T14:20:45.8167714Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8167824Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8167908Z         request,
2025-02-25T14:20:45.8167994Z     ):
2025-02-25T14:20:45.8168099Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8168306Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8168397Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8168587Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8168682Z             plot_object = getattr(
2025-02-25T14:20:45.8168828Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8168932Z             )
2025-02-25T14:20:45.8169040Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8169218Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8169330Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8169442Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8169584Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8169682Z                 )
2025-02-25T14:20:45.8169687Z 
2025-02-25T14:20:45.8169837Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8169987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8169991Z 
2025-02-25T14:20:45.8170478Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa934c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8170722Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8171073Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8171078Z 
2025-02-25T14:20:45.8171158Z     @wraps(func)
2025-02-25T14:20:45.8171262Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8171358Z         with self._recreate_cm():
2025-02-25T14:20:45.8171739Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8171848Z E           AssertionError: 
2025-02-25T14:20:45.8171979Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8172075Z E           
2025-02-25T14:20:45.8172194Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8172323Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8172429Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8172604Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8172695Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8172866Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8172955Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8172959Z 
2025-02-25T14:20:45.8173185Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8173439Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-25T14:20:45.8173443Z 
2025-02-25T14:20:45.8173724Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c3b0>
2025-02-25T14:20:45.8174203Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8174538Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e15ec170>
2025-02-25T14:20:45.8174839Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-25T14:20:45.8174844Z 
2025-02-25T14:20:45.8174948Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8175043Z         self,
2025-02-25T14:20:45.8175158Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8175254Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8175338Z         request,
2025-02-25T14:20:45.8175411Z     ):
2025-02-25T14:20:45.8175548Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8175737Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8175852Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8176032Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8176142Z             plot_object = getattr(
2025-02-25T14:20:45.8176275Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8176371Z             )
2025-02-25T14:20:45.8176483Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8176647Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8176773Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8176877Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8177024Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8177098Z                 )
2025-02-25T14:20:45.8177109Z 
2025-02-25T14:20:45.8177274Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8177394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8177407Z 
2025-02-25T14:20:45.8177898Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa807c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8178024Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8178408Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8178415Z 
2025-02-25T14:20:45.8178520Z     @wraps(func)
2025-02-25T14:20:45.8178611Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8178715Z         with self._recreate_cm():
2025-02-25T14:20:45.8178811Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8179024Z E           AssertionError: 
2025-02-25T14:20:45.8179136Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8179225Z E           
2025-02-25T14:20:45.8179340Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8179456Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8179570Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8179723Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8179838Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8179986Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8180095Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8180099Z 
2025-02-25T14:20:45.8180299Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8180712Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-25T14:20:45.8180728Z 
2025-02-25T14:20:45.8181017Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31da60>
2025-02-25T14:20:45.8181339Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8181826Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ec3f2720>
2025-02-25T14:20:45.8182120Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-25T14:20:45.8182124Z 
2025-02-25T14:20:45.8182238Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8182320Z         self,
2025-02-25T14:20:45.8182430Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8182533Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8182612Z         request,
2025-02-25T14:20:45.8182695Z     ):
2025-02-25T14:20:45.8182805Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8183010Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8183099Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8183310Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8183408Z             plot_object = getattr(
2025-02-25T14:20:45.8183551Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8183626Z             )
2025-02-25T14:20:45.8183740Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8183901Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8184026Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8184134Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8184278Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8184371Z                 )
2025-02-25T14:20:45.8184375Z 
2025-02-25T14:20:45.8184530Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8184667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8184671Z 
2025-02-25T14:20:45.8185152Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa805e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8185274Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8185541Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8185545Z 
2025-02-25T14:20:45.8185627Z     @wraps(func)
2025-02-25T14:20:45.8185726Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8185822Z         with self._recreate_cm():
2025-02-25T14:20:45.8185922Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8186009Z E           AssertionError: 
2025-02-25T14:20:45.8186137Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8186354Z E           
2025-02-25T14:20:45.8186475Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8186586Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8186707Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8186868Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8186956Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8187118Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8187210Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8187214Z 
2025-02-25T14:20:45.8187430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8187655Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-25T14:20:45.8187659Z 
2025-02-25T14:20:45.8188004Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31f8f0>
2025-02-25T14:20:45.8188447Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8188883Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e31c1d00>
2025-02-25T14:20:45.8189180Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-25T14:20:45.8189186Z 
2025-02-25T14:20:45.8189282Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8189371Z         self,
2025-02-25T14:20:45.8189472Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8189575Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8189653Z         request,
2025-02-25T14:20:45.8189735Z     ):
2025-02-25T14:20:45.8189857Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8190044Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8190162Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8190341Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8190458Z             plot_object = getattr(
2025-02-25T14:20:45.8190788Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8190883Z             )
2025-02-25T14:20:45.8190988Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8191171Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8191285Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8191403Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8191545Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8191623Z                 )
2025-02-25T14:20:45.8191627Z 
2025-02-25T14:20:45.8191790Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8191910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8191914Z 
2025-02-25T14:20:45.8192399Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1ad40>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8192510Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8192772Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8192777Z 
2025-02-25T14:20:45.8192864Z     @wraps(func)
2025-02-25T14:20:45.8192951Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8193053Z         with self._recreate_cm():
2025-02-25T14:20:45.8193145Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8193244Z E           AssertionError: 
2025-02-25T14:20:45.8193353Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8193440Z E           
2025-02-25T14:20:45.8193680Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8193801Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8193902Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8194083Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8194186Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8194338Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8194445Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8194449Z 
2025-02-25T14:20:45.8194656Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8194893Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-25T14:20:45.8194897Z 
2025-02-25T14:20:45.8195177Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c080>
2025-02-25T14:20:45.8195520Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8195870Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1432bd10>
2025-02-25T14:20:45.8196296Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-25T14:20:45.8196301Z 
2025-02-25T14:20:45.8196424Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8196506Z         self,
2025-02-25T14:20:45.8196630Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8196729Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8196824Z         request,
2025-02-25T14:20:45.8196903Z     ):
2025-02-25T14:20:45.8197041Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8197245Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8197332Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8197543Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8197703Z             plot_object = getattr(
2025-02-25T14:20:45.8197950Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8198039Z             )
2025-02-25T14:20:45.8198168Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8198330Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8198451Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8198552Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8198692Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8198774Z                 )
2025-02-25T14:20:45.8198779Z 
2025-02-25T14:20:45.8198928Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8199070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8199074Z 
2025-02-25T14:20:45.8199552Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa199e0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8199690Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8199945Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8199970Z 
2025-02-25T14:20:45.8200052Z     @wraps(func)
2025-02-25T14:20:45.8200152Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8200252Z         with self._recreate_cm():
2025-02-25T14:20:45.8200351Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8200443Z E           AssertionError: 
2025-02-25T14:20:45.8200748Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8200838Z E           
2025-02-25T14:20:45.8200953Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8201196Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8201322Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8201477Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8201586Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8201745Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8201830Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8201834Z 
2025-02-25T14:20:45.8202039Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8202267Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-25T14:20:45.8202271Z 
2025-02-25T14:20:45.8202549Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c140>
2025-02-25T14:20:45.8202873Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8203222Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1472d730>
2025-02-25T14:20:45.8203630Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-25T14:20:45.8203634Z 
2025-02-25T14:20:45.8203726Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8203819Z         self,
2025-02-25T14:20:45.8203918Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8204025Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8204104Z         request,
2025-02-25T14:20:45.8204208Z     ):
2025-02-25T14:20:45.8204325Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8204534Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8204640Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8204820Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8204933Z             plot_object = getattr(
2025-02-25T14:20:45.8205063Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8205166Z             )
2025-02-25T14:20:45.8205274Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8205452Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8205560Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8205680Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8205813Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8205909Z                 )
2025-02-25T14:20:45.8205916Z 
2025-02-25T14:20:45.8206080Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8206200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8206204Z 
2025-02-25T14:20:45.8206718Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5620>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8206913Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8207224Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8207229Z 
2025-02-25T14:20:45.8207313Z     @wraps(func)
2025-02-25T14:20:45.8207422Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8207537Z         with self._recreate_cm():
2025-02-25T14:20:45.8207630Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8207729Z E           AssertionError: 
2025-02-25T14:20:45.8207840Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8207915Z E           
2025-02-25T14:20:45.8208021Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8208127Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8208327Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8208486Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8208573Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8208728Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8208819Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8208824Z 
2025-02-25T14:20:45.8209028Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8209259Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-25T14:20:45.8209264Z 
2025-02-25T14:20:45.8209530Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c260>
2025-02-25T14:20:45.8209842Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8210181Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e9cebcb0>
2025-02-25T14:20:45.8210480Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-25T14:20:45.8210807Z 
2025-02-25T14:20:45.8211015Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8211094Z         self,
2025-02-25T14:20:45.8211222Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8211314Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8211408Z         request,
2025-02-25T14:20:45.8211481Z     ):
2025-02-25T14:20:45.8211609Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8211802Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8211913Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8212095Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8212199Z             plot_object = getattr(
2025-02-25T14:20:45.8212350Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8212425Z             )
2025-02-25T14:20:45.8212535Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8212713Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8212840Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8212939Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8213076Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8213150Z                 )
2025-02-25T14:20:45.8213154Z 
2025-02-25T14:20:45.8213314Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8213451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8213455Z 
2025-02-25T14:20:45.8214103Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa82660>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8214222Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8214470Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8214483Z 
2025-02-25T14:20:45.8214574Z     @wraps(func)
2025-02-25T14:20:45.8214662Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8214768Z         with self._recreate_cm():
2025-02-25T14:20:45.8214873Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8214961Z E           AssertionError: 
2025-02-25T14:20:45.8215079Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8215153Z E           
2025-02-25T14:20:45.8215268Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8215368Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8215479Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8215785Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8215880Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8216028Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8216138Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8216143Z 
2025-02-25T14:20:45.8216361Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8216565Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-25T14:20:45.8216569Z 
2025-02-25T14:20:45.8216847Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c5f0>
2025-02-25T14:20:45.8217170Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ecacab10>
2025-02-25T14:20:45.8217286Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8217377Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8217505Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8217673Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8217893Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8218263Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-25T14:20:45.8218267Z 
2025-02-25T14:20:45.8218359Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8218551Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8218621Z     ):
2025-02-25T14:20:45.8218731Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8218838Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8219019Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8219084Z     
2025-02-25T14:20:45.8219199Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8219315Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8219463Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8219583Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8219659Z             )
2025-02-25T14:20:45.8219735Z     
2025-02-25T14:20:45.8219839Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8219954Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8220051Z             if data.stackgroup:
2025-02-25T14:20:45.8220142Z                 assert (
2025-02-25T14:20:45.8220234Z                     data.stackgroup
2025-02-25T14:20:45.8220329Z                     == getattr(
2025-02-25T14:20:45.8220445Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8220769Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8220880Z                     ).decode()
2025-02-25T14:20:45.8220959Z                 )
2025-02-25T14:20:45.8221059Z             if data.name:
2025-02-25T14:20:45.8221150Z                 assert (
2025-02-25T14:20:45.8221248Z                     data.name
2025-02-25T14:20:45.8221334Z                     == getattr(
2025-02-25T14:20:45.8221466Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8221568Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8221662Z                     ).decode()
2025-02-25T14:20:45.8221741Z                 )
2025-02-25T14:20:45.8221855Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8222004Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8222083Z             )
2025-02-25T14:20:45.8222192Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8222328Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8222421Z             )
2025-02-25T14:20:45.8222425Z 
2025-02-25T14:20:45.8222574Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8222873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8222878Z 
2025-02-25T14:20:45.8223358Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062768e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8223490Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8223757Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8223762Z 
2025-02-25T14:20:45.8223838Z     @wraps(func)
2025-02-25T14:20:45.8223941Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8224037Z         with self._recreate_cm():
2025-02-25T14:20:45.8224145Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8224236Z E           AssertionError: 
2025-02-25T14:20:45.8224365Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8224440Z E           
2025-02-25T14:20:45.8224569Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8224681Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8224798Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8225125Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8225223Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8225390Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8225479Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8225484Z 
2025-02-25T14:20:45.8225715Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8226069Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-25T14:20:45.8226075Z 
2025-02-25T14:20:45.8226401Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c6b0>
2025-02-25T14:20:45.8226744Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89eab4aed0>
2025-02-25T14:20:45.8226845Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8226957Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8227069Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8227188Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8227403Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8227667Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-25T14:20:45.8227672Z 
2025-02-25T14:20:45.8227762Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8227953Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8228040Z     ):
2025-02-25T14:20:45.8228140Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8228264Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8228449Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8228535Z     
2025-02-25T14:20:45.8228647Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8228771Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8228944Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8229075Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8229150Z             )
2025-02-25T14:20:45.8229236Z     
2025-02-25T14:20:45.8229359Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8229467Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8229569Z             if data.stackgroup:
2025-02-25T14:20:45.8229649Z                 assert (
2025-02-25T14:20:45.8229753Z                     data.stackgroup
2025-02-25T14:20:45.8229834Z                     == getattr(
2025-02-25T14:20:45.8230092Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8230197Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8230294Z                     ).decode()
2025-02-25T14:20:45.8230382Z                 )
2025-02-25T14:20:45.8230489Z             if data.name:
2025-02-25T14:20:45.8230772Z                 assert (
2025-02-25T14:20:45.8230873Z                     data.name
2025-02-25T14:20:45.8230971Z                     == getattr(
2025-02-25T14:20:45.8231081Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8231188Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8231275Z                     ).decode()
2025-02-25T14:20:45.8231360Z                 )
2025-02-25T14:20:45.8231468Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8231615Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8231692Z             )
2025-02-25T14:20:45.8231804Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8231940Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8232030Z             )
2025-02-25T14:20:45.8232034Z 
2025-02-25T14:20:45.8232335Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8232451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8232455Z 
2025-02-25T14:20:45.8232959Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06277600>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8233067Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8233349Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8233353Z 
2025-02-25T14:20:45.8233432Z     @wraps(func)
2025-02-25T14:20:45.8233541Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8233653Z         with self._recreate_cm():
2025-02-25T14:20:45.8233759Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8233868Z E           AssertionError: 
2025-02-25T14:20:45.8233978Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8234077Z E           
2025-02-25T14:20:45.8234182Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8234308Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8234413Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8234604Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8234703Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8234868Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8234978Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8234983Z 
2025-02-25T14:20:45.8235199Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8235435Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-25T14:20:45.8235439Z 
2025-02-25T14:20:45.8235724Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cad0>
2025-02-25T14:20:45.8236075Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f3ce13a0>
2025-02-25T14:20:45.8236181Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8236292Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8236401Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8236519Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8236753Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8237002Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-25T14:20:45.8237006Z 
2025-02-25T14:20:45.8237113Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8237420Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8237508Z     ):
2025-02-25T14:20:45.8237611Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8237735Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8237924Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8238074Z     
2025-02-25T14:20:45.8238284Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8238389Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8238561Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8238680Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8238780Z             )
2025-02-25T14:20:45.8238856Z     
2025-02-25T14:20:45.8238979Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8239092Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8239210Z             if data.stackgroup:
2025-02-25T14:20:45.8239291Z                 assert (
2025-02-25T14:20:45.8239408Z                     data.stackgroup
2025-02-25T14:20:45.8239612Z                     == getattr(
2025-02-25T14:20:45.8239746Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8239864Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8239948Z                     ).decode()
2025-02-25T14:20:45.8240036Z                 )
2025-02-25T14:20:45.8240121Z             if data.name:
2025-02-25T14:20:45.8240220Z                 assert (
2025-02-25T14:20:45.8240300Z                     data.name
2025-02-25T14:20:45.8240400Z                     == getattr(
2025-02-25T14:20:45.8240610Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8240731Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8240818Z                     ).decode()
2025-02-25T14:20:45.8240914Z                 )
2025-02-25T14:20:45.8241021Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8241178Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8241269Z             )
2025-02-25T14:20:45.8241362Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8241503Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8241581Z             )
2025-02-25T14:20:45.8241585Z 
2025-02-25T14:20:45.8241749Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8241873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8241878Z 
2025-02-25T14:20:45.8242372Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06277240>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8242489Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8242748Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8242753Z 
2025-02-25T14:20:45.8242857Z     @wraps(func)
2025-02-25T14:20:45.8242954Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8243064Z         with self._recreate_cm():
2025-02-25T14:20:45.8243159Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8243265Z E           AssertionError: 
2025-02-25T14:20:45.8243381Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8243475Z E           
2025-02-25T14:20:45.8243576Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8243698Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8243812Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8243972Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8244070Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8244368Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8244484Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8244489Z 
2025-02-25T14:20:45.8244703Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8244988Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-25T14:20:45.8244995Z 
2025-02-25T14:20:45.8245382Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cbc0>
2025-02-25T14:20:45.8245708Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0680>
2025-02-25T14:20:45.8245824Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8245917Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8246038Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8246141Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8246375Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8246627Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-25T14:20:45.8246770Z 
2025-02-25T14:20:45.8246884Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8247084Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8247171Z     ):
2025-02-25T14:20:45.8247292Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8247401Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8247598Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8247675Z     
2025-02-25T14:20:45.8247798Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8247898Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8248054Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8248180Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8248271Z             )
2025-02-25T14:20:45.8248356Z     
2025-02-25T14:20:45.8248457Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8248589Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8248681Z             if data.stackgroup:
2025-02-25T14:20:45.8248777Z                 assert (
2025-02-25T14:20:45.8248862Z                     data.stackgroup
2025-02-25T14:20:45.8248956Z                     == getattr(
2025-02-25T14:20:45.8249068Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8249189Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8249268Z                     ).decode()
2025-02-25T14:20:45.8249359Z                 )
2025-02-25T14:20:45.8249445Z             if data.name:
2025-02-25T14:20:45.8249541Z                 assert (
2025-02-25T14:20:45.8249646Z                     data.name
2025-02-25T14:20:45.8249734Z                     == getattr(
2025-02-25T14:20:45.8249870Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8249970Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8250071Z                     ).decode()
2025-02-25T14:20:45.8250146Z                 )
2025-02-25T14:20:45.8250263Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8250406Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8250618Z             )
2025-02-25T14:20:45.8250713Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8250852Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8250928Z             )
2025-02-25T14:20:45.8250953Z 
2025-02-25T14:20:45.8251101Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8251234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8251238Z 
2025-02-25T14:20:45.8251871Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051d2d40>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8251993Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8252248Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8252253Z 
2025-02-25T14:20:45.8252353Z     @wraps(func)
2025-02-25T14:20:45.8252452Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8252574Z         with self._recreate_cm():
2025-02-25T14:20:45.8252680Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8252774Z E           AssertionError: 
2025-02-25T14:20:45.8252902Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8252979Z E           
2025-02-25T14:20:45.8253092Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8253206Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8253340Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8253600Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8253765Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8254076Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8254181Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8254185Z 
2025-02-25T14:20:45.8254857Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8255105Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-25T14:20:45.8255109Z 
2025-02-25T14:20:45.8255643Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353290>
2025-02-25T14:20:45.8256012Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a0c1f9790>
2025-02-25T14:20:45.8256173Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8256366Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8256584Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8256791Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8257042Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8257351Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-25T14:20:45.8257356Z 
2025-02-25T14:20:45.8257534Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8268960Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8269145Z     ):
2025-02-25T14:20:45.8269307Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8269446Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8269658Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8269740Z     
2025-02-25T14:20:45.8269892Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8269996Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8270172Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8270300Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8270392Z             )
2025-02-25T14:20:45.8270471Z     
2025-02-25T14:20:45.8270797Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8270924Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8271031Z             if data.stackgroup:
2025-02-25T14:20:45.8271124Z                 assert (
2025-02-25T14:20:45.8271217Z                     data.stackgroup
2025-02-25T14:20:45.8271308Z                     == getattr(
2025-02-25T14:20:45.8271421Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8271538Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8271629Z                     ).decode()
2025-02-25T14:20:45.8271922Z                 )
2025-02-25T14:20:45.8272017Z             if data.name:
2025-02-25T14:20:45.8272109Z                 assert (
2025-02-25T14:20:45.8272201Z                     data.name
2025-02-25T14:20:45.8272303Z                     == getattr(
2025-02-25T14:20:45.8272421Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8272527Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8272622Z                     ).decode()
2025-02-25T14:20:45.8272701Z                 )
2025-02-25T14:20:45.8272822Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8272961Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8273057Z             )
2025-02-25T14:20:45.8273154Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8273294Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8273371Z             )
2025-02-25T14:20:45.8273377Z 
2025-02-25T14:20:45.8273563Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8273689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8273824Z 
2025-02-25T14:20:45.8274309Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06215940>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8274438Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8274705Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8274711Z 
2025-02-25T14:20:45.8274807Z     @wraps(func)
2025-02-25T14:20:45.8274903Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8275012Z         with self._recreate_cm():
2025-02-25T14:20:45.8275109Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8275222Z E           AssertionError: 
2025-02-25T14:20:45.8275363Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8275438Z E           
2025-02-25T14:20:45.8275556Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8275668Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8275789Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8275949Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8276053Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8276197Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8276295Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8276299Z 
2025-02-25T14:20:45.8276530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8276742Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-25T14:20:45.8276746Z 
2025-02-25T14:20:45.8277035Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c352810>
2025-02-25T14:20:45.8277358Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ece66090>
2025-02-25T14:20:45.8277479Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8277574Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8277697Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8277804Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8278041Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8278308Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-25T14:20:45.8278313Z 
2025-02-25T14:20:45.8278420Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8278604Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8278679Z     ):
2025-02-25T14:20:45.8278898Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8279015Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8279212Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8279295Z     
2025-02-25T14:20:45.8279433Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8279534Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8279702Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8279833Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8279919Z             )
2025-02-25T14:20:45.8280009Z     
2025-02-25T14:20:45.8280114Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8280236Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8280325Z             if data.stackgroup:
2025-02-25T14:20:45.8280422Z                 assert (
2025-02-25T14:20:45.8280707Z                     data.stackgroup
2025-02-25T14:20:45.8280873Z                     == getattr(
2025-02-25T14:20:45.8280998Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8281117Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8281386Z                     ).decode()
2025-02-25T14:20:45.8281461Z                 )
2025-02-25T14:20:45.8281563Z             if data.name:
2025-02-25T14:20:45.8281641Z                 assert (
2025-02-25T14:20:45.8281731Z                     data.name
2025-02-25T14:20:45.8281812Z                     == getattr(
2025-02-25T14:20:45.8281934Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8282033Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8282128Z                     ).decode()
2025-02-25T14:20:45.8282202Z                 )
2025-02-25T14:20:45.8282321Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8282456Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8282551Z             )
2025-02-25T14:20:45.8282660Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8282785Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8282880Z             )
2025-02-25T14:20:45.8282884Z 
2025-02-25T14:20:45.8283037Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8283169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8283173Z 
2025-02-25T14:20:45.8283645Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06217240>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8283765Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8284020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8284024Z 
2025-02-25T14:20:45.8284108Z     @wraps(func)
2025-02-25T14:20:45.8284219Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8284314Z         with self._recreate_cm():
2025-02-25T14:20:45.8284419Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8284526Z E           AssertionError: 
2025-02-25T14:20:45.8284654Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8284734Z E           
2025-02-25T14:20:45.8284855Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8284959Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8285081Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8285262Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8285355Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8285525Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8285623Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8285627Z 
2025-02-25T14:20:45.8285979Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8286192Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-25T14:20:45.8286206Z 
2025-02-25T14:20:45.8286494Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cd40>
2025-02-25T14:20:45.8286822Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e9c0b350>
2025-02-25T14:20:45.8286920Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8287021Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8287124Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8287243Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8287453Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8287729Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-25T14:20:45.8287733Z 
2025-02-25T14:20:45.8287821Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8288010Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8288184Z     ):
2025-02-25T14:20:45.8288301Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8288422Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8288596Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8288681Z     
2025-02-25T14:20:45.8288794Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8288905Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8289050Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8289174Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8289247Z             )
2025-02-25T14:20:45.8289333Z     
2025-02-25T14:20:45.8289447Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8289581Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8289691Z             if data.stackgroup:
2025-02-25T14:20:45.8289779Z                 assert (
2025-02-25T14:20:45.8289888Z                     data.stackgroup
2025-02-25T14:20:45.8289969Z                     == getattr(
2025-02-25T14:20:45.8290097Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8290199Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8290301Z                     ).decode()
2025-02-25T14:20:45.8290380Z                 )
2025-02-25T14:20:45.8290479Z             if data.name:
2025-02-25T14:20:45.8290680Z                 assert (
2025-02-25T14:20:45.8290778Z                     data.name
2025-02-25T14:20:45.8290864Z                     == getattr(
2025-02-25T14:20:45.8290987Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8291091Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8291177Z                     ).decode()
2025-02-25T14:20:45.8291271Z                 )
2025-02-25T14:20:45.8291369Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8291521Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8291593Z             )
2025-02-25T14:20:45.8291704Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8291837Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8291925Z             )
2025-02-25T14:20:45.8291929Z 
2025-02-25T14:20:45.8292079Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8292214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8292218Z 
2025-02-25T14:20:45.8292703Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1be20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8292952Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8293214Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8293223Z 
2025-02-25T14:20:45.8293300Z     @wraps(func)
2025-02-25T14:20:45.8293410Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8293500Z         with self._recreate_cm():
2025-02-25T14:20:45.8293608Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8293716Z E           AssertionError: 
2025-02-25T14:20:45.8293833Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8293924Z E           
2025-02-25T14:20:45.8294026Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8294140Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8294246Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8294416Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8294527Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8294694Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8294909Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8294913Z 
2025-02-25T14:20:45.8295133Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8295360Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-25T14:20:45.8295364Z 
2025-02-25T14:20:45.8295638Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31ce00>
2025-02-25T14:20:45.8295973Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f269a030>
2025-02-25T14:20:45.8296077Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8296181Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8296292Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8296419Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8296644Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8296895Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-25T14:20:45.8296899Z 
2025-02-25T14:20:45.8297010Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8297177Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8297273Z     ):
2025-02-25T14:20:45.8297375Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8297502Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8297684Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8297771Z     
2025-02-25T14:20:45.8297888Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8297995Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8298159Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8298275Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8298369Z             )
2025-02-25T14:20:45.8298443Z     
2025-02-25T14:20:45.8298563Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8298672Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8298780Z             if data.stackgroup:
2025-02-25T14:20:45.8298864Z                 assert (
2025-02-25T14:20:45.8298967Z                     data.stackgroup
2025-02-25T14:20:45.8299048Z                     == getattr(
2025-02-25T14:20:45.8299168Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8299279Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8299360Z                     ).decode()
2025-02-25T14:20:45.8299452Z                 )
2025-02-25T14:20:45.8299533Z             if data.name:
2025-02-25T14:20:45.8299635Z                 assert (
2025-02-25T14:20:45.8299824Z                     data.name
2025-02-25T14:20:45.8299920Z                     == getattr(
2025-02-25T14:20:45.8300034Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8300149Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8300226Z                     ).decode()
2025-02-25T14:20:45.8300314Z                 )
2025-02-25T14:20:45.8300412Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8300789Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8300939Z             )
2025-02-25T14:20:45.8301050Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8301193Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8301268Z             )
2025-02-25T14:20:45.8301274Z 
2025-02-25T14:20:45.8301440Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8301562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8301573Z 
2025-02-25T14:20:45.8302068Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1b9c0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8302423Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8302696Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8302701Z 
2025-02-25T14:20:45.8302789Z     @wraps(func)
2025-02-25T14:20:45.8302885Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8302999Z         with self._recreate_cm():
2025-02-25T14:20:45.8303098Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8303200Z E           AssertionError: 
2025-02-25T14:20:45.8303327Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8303430Z E           
2025-02-25T14:20:45.8303531Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8303657Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8303757Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8303942Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8304032Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8304198Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8304289Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8304293Z 
2025-02-25T14:20:45.8304514Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8304735Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-25T14:20:45.8304739Z 
2025-02-25T14:20:45.8305014Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cec0>
2025-02-25T14:20:45.8305344Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a04c16990>
2025-02-25T14:20:45.8305440Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8305542Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8305660Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8305774Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8305983Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8306241Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-25T14:20:45.8306245Z 
2025-02-25T14:20:45.8306345Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8306514Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8306593Z     ):
2025-02-25T14:20:45.8306689Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8306811Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8307141Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8307226Z     
2025-02-25T14:20:45.8307339Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8307447Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8307586Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8307700Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8307779Z             )
2025-02-25T14:20:45.8307848Z     
2025-02-25T14:20:45.8307961Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8308068Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8308168Z             if data.stackgroup:
2025-02-25T14:20:45.8308248Z                 assert (
2025-02-25T14:20:45.8308345Z                     data.stackgroup
2025-02-25T14:20:45.8308420Z                     == getattr(
2025-02-25T14:20:45.8308538Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8308644Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8308731Z                     ).decode()
2025-02-25T14:20:45.8308812Z                 )
2025-02-25T14:20:45.8309019Z             if data.name:
2025-02-25T14:20:45.8309099Z                 assert (
2025-02-25T14:20:45.8309172Z                     data.name
2025-02-25T14:20:45.8309256Z                     == getattr(
2025-02-25T14:20:45.8309360Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8309453Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8309528Z                     ).decode()
2025-02-25T14:20:45.8309604Z                 )
2025-02-25T14:20:45.8309694Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8309826Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8309895Z             )
2025-02-25T14:20:45.8309988Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8310120Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8310190Z             )
2025-02-25T14:20:45.8310194Z 
2025-02-25T14:20:45.8310353Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8310475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8310479Z 
2025-02-25T14:20:45.8311197Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062142c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8311306Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8311567Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8311571Z 
2025-02-25T14:20:45.8311659Z     @wraps(func)
2025-02-25T14:20:45.8311744Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8311843Z         with self._recreate_cm():
2025-02-25T14:20:45.8311943Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8312041Z E           AssertionError: 
2025-02-25T14:20:45.8312152Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8312234Z E           
2025-02-25T14:20:45.8312332Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8312441Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8312538Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8312694Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8312784Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8312931Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8313025Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8313029Z 
2025-02-25T14:20:45.8313236Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8313588Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-25T14:20:45.8313593Z 
2025-02-25T14:20:45.8313868Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cf80>
2025-02-25T14:20:45.8314207Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1ae62de0>
2025-02-25T14:20:45.8314318Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8314411Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8314528Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8314629Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8314848Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8315098Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-25T14:20:45.8315102Z 
2025-02-25T14:20:45.8315200Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8315375Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8315456Z     ):
2025-02-25T14:20:45.8315551Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8315779Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8315960Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8316028Z     
2025-02-25T14:20:45.8316140Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8316233Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8316378Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8316482Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8316559Z             )
2025-02-25T14:20:45.8316628Z     
2025-02-25T14:20:45.8316735Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8316840Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8316934Z             if data.stackgroup:
2025-02-25T14:20:45.8317029Z                 assert (
2025-02-25T14:20:45.8317117Z                     data.stackgroup
2025-02-25T14:20:45.8317203Z                     == getattr(
2025-02-25T14:20:45.8317318Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8317426Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8317504Z                     ).decode()
2025-02-25T14:20:45.8317586Z                 )
2025-02-25T14:20:45.8317662Z             if data.name:
2025-02-25T14:20:45.8317744Z                 assert (
2025-02-25T14:20:45.8317823Z                     data.name
2025-02-25T14:20:45.8317908Z                     == getattr(
2025-02-25T14:20:45.8318012Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8318112Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8318203Z                     ).decode()
2025-02-25T14:20:45.8318273Z                 )
2025-02-25T14:20:45.8318369Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8318508Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8318595Z             )
2025-02-25T14:20:45.8318684Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8318821Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8318894Z             )
2025-02-25T14:20:45.8318899Z 
2025-02-25T14:20:45.8319060Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8319185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8319201Z 
2025-02-25T14:20:45.8319673Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06215120>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8319783Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8320136Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8320141Z 
2025-02-25T14:20:45.8320228Z     @wraps(func)
2025-02-25T14:20:45.8320310Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8320415Z         with self._recreate_cm():
2025-02-25T14:20:45.8320612Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8320739Z E           AssertionError: 
2025-02-25T14:20:45.8320943Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8321017Z E           
2025-02-25T14:20:45.8321125Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8321229Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8321337Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8321492Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8321593Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8321740Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8321836Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8321841Z 
2025-02-25T14:20:45.8322048Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8322397Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-25T14:20:45.8322401Z 
2025-02-25T14:20:45.8322687Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d040>
2025-02-25T14:20:45.8323002Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ef475c70>
2025-02-25T14:20:45.8323106Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8323194Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8323310Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8323413Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8323626Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8323882Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-25T14:20:45.8323886Z 
2025-02-25T14:20:45.8323978Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8324158Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8324224Z     ):
2025-02-25T14:20:45.8324333Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8324435Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8324611Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8324679Z     
2025-02-25T14:20:45.8324790Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8324882Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8325024Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8325137Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8325219Z             )
2025-02-25T14:20:45.8325295Z     
2025-02-25T14:20:45.8325404Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8325521Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8325615Z             if data.stackgroup:
2025-02-25T14:20:45.8325704Z                 assert (
2025-02-25T14:20:45.8325794Z                     data.stackgroup
2025-02-25T14:20:45.8325879Z                     == getattr(
2025-02-25T14:20:45.8325991Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8326106Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8326196Z                     ).decode()
2025-02-25T14:20:45.8326270Z                 )
2025-02-25T14:20:45.8326362Z             if data.name:
2025-02-25T14:20:45.8326440Z                 assert (
2025-02-25T14:20:45.8326528Z                     data.name
2025-02-25T14:20:45.8326606Z                     == getattr(
2025-02-25T14:20:45.8326855Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8326955Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8327042Z                     ).decode()
2025-02-25T14:20:45.8327121Z                 )
2025-02-25T14:20:45.8327229Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8327359Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8327443Z             )
2025-02-25T14:20:45.8327550Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8327672Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8327753Z             )
2025-02-25T14:20:45.8327757Z 
2025-02-25T14:20:45.8327903Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8328030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8328034Z 
2025-02-25T14:20:45.8328506Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062142c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8328617Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8328968Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8328972Z 
2025-02-25T14:20:45.8329053Z     @wraps(func)
2025-02-25T14:20:45.8329147Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8329238Z         with self._recreate_cm():
2025-02-25T14:20:45.8329339Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8329425Z E           AssertionError: 
2025-02-25T14:20:45.8329547Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8329622Z E           
2025-02-25T14:20:45.8329738Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8329846Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8329966Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8330142Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8330230Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8330393Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8330477Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8330482Z 
2025-02-25T14:20:45.8330869Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8331077Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-25T14:20:45.8331081Z 
2025-02-25T14:20:45.8331361Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d100>
2025-02-25T14:20:45.8331689Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a083eff80>
2025-02-25T14:20:45.8331793Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8331904Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8332009Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8332121Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8332332Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8332594Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-25T14:20:45.8332598Z 
2025-02-25T14:20:45.8332685Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8332864Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8332933Z     ):
2025-02-25T14:20:45.8333043Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8333159Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8333331Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8333418Z     
2025-02-25T14:20:45.8333532Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8333794Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8333942Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8334068Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8334143Z             )
2025-02-25T14:20:45.8334229Z     
2025-02-25T14:20:45.8334332Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8334454Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8334556Z             if data.stackgroup:
2025-02-25T14:20:45.8334634Z                 assert (
2025-02-25T14:20:45.8334731Z                     data.stackgroup
2025-02-25T14:20:45.8334808Z                     == getattr(
2025-02-25T14:20:45.8334928Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8335031Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8335120Z                     ).decode()
2025-02-25T14:20:45.8335193Z                 )
2025-02-25T14:20:45.8335292Z             if data.name:
2025-02-25T14:20:45.8335366Z                 assert (
2025-02-25T14:20:45.8335456Z                     data.name
2025-02-25T14:20:45.8335661Z                     == getattr(
2025-02-25T14:20:45.8335778Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8335882Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8335963Z                     ).decode()
2025-02-25T14:20:45.8336052Z                 )
2025-02-25T14:20:45.8336147Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8336286Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8336364Z             )
2025-02-25T14:20:45.8336469Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8336598Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8336690Z             )
2025-02-25T14:20:45.8336694Z 
2025-02-25T14:20:45.8336847Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8336991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8336995Z 
2025-02-25T14:20:45.8337493Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa20040>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8337598Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8337860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8337864Z 
2025-02-25T14:20:45.8337944Z     @wraps(func)
2025-02-25T14:20:45.8338040Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8338131Z         with self._recreate_cm():
2025-02-25T14:20:45.8338239Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8338340Z E           AssertionError: 
2025-02-25T14:20:45.8338456Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8338547Z E           
2025-02-25T14:20:45.8338649Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8338761Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8338869Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8339031Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8339122Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8339284Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8339373Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8339377Z 
2025-02-25T14:20:45.8339599Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8339813Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-25T14:20:45.8339816Z 
2025-02-25T14:20:45.8340187Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d1c0>
2025-02-25T14:20:45.8340636Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a07a9b8f0>
2025-02-25T14:20:45.8340751Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8340850Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8340956Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8341068Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8341295Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8341547Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-25T14:20:45.8341551Z 
2025-02-25T14:20:45.8341650Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8341818Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8341896Z     ):
2025-02-25T14:20:45.8341997Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8342135Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8342316Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8342524Z     
2025-02-25T14:20:45.8342638Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8342755Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8342913Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8343023Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8343109Z             )
2025-02-25T14:20:45.8343185Z     
2025-02-25T14:20:45.8343303Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8343410Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8343514Z             if data.stackgroup:
2025-02-25T14:20:45.8343592Z                 assert (
2025-02-25T14:20:45.8343692Z                     data.stackgroup
2025-02-25T14:20:45.8343774Z                     == getattr(
2025-02-25T14:20:45.8343909Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8344019Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8344105Z                     ).decode()
2025-02-25T14:20:45.8344185Z                 )
2025-02-25T14:20:45.8344271Z             if data.name:
2025-02-25T14:20:45.8344367Z                 assert (
2025-02-25T14:20:45.8344452Z                     data.name
2025-02-25T14:20:45.8344548Z                     == getattr(
2025-02-25T14:20:45.8344653Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8344760Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8344838Z                     ).decode()
2025-02-25T14:20:45.8344926Z                 )
2025-02-25T14:20:45.8345023Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8345170Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8345256Z             )
2025-02-25T14:20:45.8345355Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8345489Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8345564Z             )
2025-02-25T14:20:45.8345573Z 
2025-02-25T14:20:45.8345729Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8345847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8345851Z 
2025-02-25T14:20:45.8346333Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06216480>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8346439Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8346694Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8346698Z 
2025-02-25T14:20:45.8346792Z     @wraps(func)
2025-02-25T14:20:45.8346879Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8347113Z         with self._recreate_cm():
2025-02-25T14:20:45.8347210Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8347312Z E           AssertionError: 
2025-02-25T14:20:45.8347429Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8347513Z E           
2025-02-25T14:20:45.8347617Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8347734Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8347843Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8348007Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8348110Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8348255Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8348351Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8348356Z 
2025-02-25T14:20:45.8348568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8348782Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-25T14:20:45.8348875Z 
2025-02-25T14:20:45.8349144Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d280>
2025-02-25T14:20:45.8349465Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1467de20>
2025-02-25T14:20:45.8349572Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8349664Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8349779Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8349881Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8350099Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8350348Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-25T14:20:45.8350352Z 
2025-02-25T14:20:45.8350460Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8350816Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8350913Z     ):
2025-02-25T14:20:45.8351022Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8351129Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8351312Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8351382Z     
2025-02-25T14:20:45.8351501Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8351597Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8351754Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8351861Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8351946Z             )
2025-02-25T14:20:45.8352015Z     
2025-02-25T14:20:45.8352132Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8352255Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8352342Z             if data.stackgroup:
2025-02-25T14:20:45.8352431Z                 assert (
2025-02-25T14:20:45.8352560Z                     data.stackgroup
2025-02-25T14:20:45.8352654Z                     == getattr(
2025-02-25T14:20:45.8352762Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8352873Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8352947Z                     ).decode()
2025-02-25T14:20:45.8353036Z                 )
2025-02-25T14:20:45.8353123Z             if data.name:
2025-02-25T14:20:45.8353209Z                 assert (
2025-02-25T14:20:45.8353287Z                     data.name
2025-02-25T14:20:45.8353376Z                     == getattr(
2025-02-25T14:20:45.8353494Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8353590Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8353674Z                     ).decode()
2025-02-25T14:20:45.8353884Z                 )
2025-02-25T14:20:45.8353996Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8354124Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8354214Z             )
2025-02-25T14:20:45.8354305Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8354435Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8354506Z             )
2025-02-25T14:20:45.8354510Z 
2025-02-25T14:20:45.8354669Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8354793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8354797Z 
2025-02-25T14:20:45.8355267Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1b600>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8355384Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8355637Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8355641Z 
2025-02-25T14:20:45.8355876Z     @wraps(func)
2025-02-25T14:20:45.8355961Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8356057Z         with self._recreate_cm():
2025-02-25T14:20:45.8356161Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8356250Z E           AssertionError: 
2025-02-25T14:20:45.8356374Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8356447Z E           
2025-02-25T14:20:45.8356561Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8356660Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8356764Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8356918Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8357021Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8357178Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8357278Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8357288Z 
2025-02-25T14:20:45.8357501Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8357704Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-25T14:20:45.8357708Z 
2025-02-25T14:20:45.8357988Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d340>
2025-02-25T14:20:45.8358302Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f0ea6c90>
2025-02-25T14:20:45.8358412Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8358502Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8358619Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8358742Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8358952Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8359207Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-25T14:20:45.8359216Z 
2025-02-25T14:20:45.8359304Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8359486Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8359560Z     ):
2025-02-25T14:20:45.8359674Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8359785Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8359981Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8360055Z     
2025-02-25T14:20:45.8360189Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8360296Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8360439Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8360927Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8361013Z             )
2025-02-25T14:20:45.8361096Z     
2025-02-25T14:20:45.8361217Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8361343Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8361430Z             if data.stackgroup:
2025-02-25T14:20:45.8361517Z                 assert (
2025-02-25T14:20:45.8361602Z                     data.stackgroup
2025-02-25T14:20:45.8361692Z                     == getattr(
2025-02-25T14:20:45.8361806Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8361917Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8362008Z                     ).decode()
2025-02-25T14:20:45.8362086Z                 )
2025-02-25T14:20:45.8362186Z             if data.name:
2025-02-25T14:20:45.8362265Z                 assert (
2025-02-25T14:20:45.8362353Z                     data.name
2025-02-25T14:20:45.8362433Z                     == getattr(
2025-02-25T14:20:45.8362550Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8362767Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8362857Z                     ).decode()
2025-02-25T14:20:45.8362929Z                 )
2025-02-25T14:20:45.8363038Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8363182Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8363259Z             )
2025-02-25T14:20:45.8363360Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8363486Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8363574Z             )
2025-02-25T14:20:45.8363578Z 
2025-02-25T14:20:45.8363735Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8363872Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8363877Z 
2025-02-25T14:20:45.8364367Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5620>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8364493Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8364749Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8364754Z 
2025-02-25T14:20:45.8364829Z     @wraps(func)
2025-02-25T14:20:45.8364928Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8365025Z         with self._recreate_cm():
2025-02-25T14:20:45.8365135Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8365227Z E           AssertionError: 
2025-02-25T14:20:45.8365349Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8365422Z E           
2025-02-25T14:20:45.8365543Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8365653Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8365758Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8365921Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8366018Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8366177Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8366266Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8366270Z 
2025-02-25T14:20:45.8366496Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8366705Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-25T14:20:45.8366710Z 
2025-02-25T14:20:45.8366990Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d400>
2025-02-25T14:20:45.8367326Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89dbd0e8a0>
2025-02-25T14:20:45.8367529Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8367633Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8367739Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8367859Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8368069Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8368328Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-25T14:20:45.8368332Z 
2025-02-25T14:20:45.8368422Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8368608Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8368689Z     ):
2025-02-25T14:20:45.8368791Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8368916Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8369091Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8369184Z     
2025-02-25T14:20:45.8369296Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8369403Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8369641Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8369758Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8369831Z             )
2025-02-25T14:20:45.8369911Z     
2025-02-25T14:20:45.8370030Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8370138Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8370233Z             if data.stackgroup:
2025-02-25T14:20:45.8370311Z                 assert (
2025-02-25T14:20:45.8370409Z                     data.stackgroup
2025-02-25T14:20:45.8370490Z                     == getattr(
2025-02-25T14:20:45.8370742Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8370856Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8370947Z                     ).decode()
2025-02-25T14:20:45.8371020Z                 )
2025-02-25T14:20:45.8371112Z             if data.name:
2025-02-25T14:20:45.8371203Z                 assert (
2025-02-25T14:20:45.8371295Z                     data.name
2025-02-25T14:20:45.8371383Z                     == getattr(
2025-02-25T14:20:45.8371496Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8371606Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8371685Z                     ).decode()
2025-02-25T14:20:45.8371768Z                 )
2025-02-25T14:20:45.8371865Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8372008Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8372079Z             )
2025-02-25T14:20:45.8372185Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8372311Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8372402Z             )
2025-02-25T14:20:45.8372406Z 
2025-02-25T14:20:45.8372573Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8372684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8372694Z 
2025-02-25T14:20:45.8373167Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06214a40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8373267Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8373515Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8373519Z 
2025-02-25T14:20:45.8373595Z     @wraps(func)
2025-02-25T14:20:45.8373695Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8373801Z         with self._recreate_cm():
2025-02-25T14:20:45.8373890Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8374148Z E           AssertionError: 
2025-02-25T14:20:45.8374266Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8374352Z E           
2025-02-25T14:20:45.8374457Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8374573Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8374671Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8374838Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8374925Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8375086Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8375183Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8375187Z 
2025-02-25T14:20:45.8375389Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8375519Z =============================== warnings summary ===============================
2025-02-25T14:20:45.8375648Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:20:45.8375766Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:20:45.8376196Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-25T14:20:45.8376282Z   
2025-02-25T14:20:45.8377421Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-25T14:20:45.8377437Z 
2025-02-25T14:20:45.8377690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-25T14:20:45.8378065Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-25T14:20:45.8378142Z   
2025-02-25T14:20:45.8378309Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-25T14:20:45.8378472Z   given by the platformdirs library.  To remove this warning and
2025-02-25T14:20:45.8378656Z   see the appropriate new directories, set the environment variable
2025-02-25T14:20:45.8378805Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-25T14:20:45.8378977Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-25T14:20:45.8378982Z 
2025-02-25T14:20:45.8384988Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-25T14:20:45.8385295Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8385530Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-25T14:20:45.8385603Z   
2025-02-25T14:20:45.8385679Z   
2025-02-25T14:20:45.8385892Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8386182Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:20:45.8386188Z 
2025-02-25T14:20:45.8386417Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-25T14:20:45.8386650Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-25T14:20:45.8386900Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-25T14:20:45.8387083Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-25T14:20:45.8387415Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-25T14:20:45.8387492Z   
2025-02-25T14:20:45.8387621Z   The current CMFGEN model parser is deprecated
2025-02-25T14:20:45.8387626Z 
2025-02-25T14:20:45.8387749Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-25T14:20:45.8387940Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-25T14:20:45.8388455Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-25T14:20:45.8388536Z   
2025-02-25T14:20:45.8388661Z   The current CMFGEN model parser is deprecated
2025-02-25T14:20:45.8388666Z 
2025-02-25T14:20:45.8388879Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-25T14:20:45.8389264Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-25T14:20:45.8389335Z   
2025-02-25T14:20:45.8389757Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-25T14:20:45.8389762Z 
2025-02-25T14:20:45.8389873Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:20:45.8390007Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:20:45.8390196Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:20:45.8390487Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-25T14:20:45.8390800Z   
2025-02-25T14:20:45.8390918Z   v_inner_boundary < 0, assuming default value
2025-02-25T14:20:45.8390922Z 
2025-02-25T14:20:45.8391207Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:20:45.8391325Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:20:45.8391517Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:20:45.8391796Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-25T14:20:45.8391879Z   
2025-02-25T14:20:45.8391998Z   v_outer_boundary < 0, assuming default value
2025-02-25T14:20:45.8392002Z 
2025-02-25T14:20:45.8392467Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-25T14:20:45.8392784Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-25T14:20:45.8392855Z   
2025-02-25T14:20:45.8393151Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-25T14:20:45.8393601Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-25T14:20:45.8393694Z   
2025-02-25T14:20:45.8394230Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-25T14:20:45.8394235Z 
2025-02-25T14:20:45.8394457Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-25T14:20:45.8394685Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-25T14:20:45.8394889Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-25T14:20:45.8395141Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-25T14:20:45.8395212Z   
2025-02-25T14:20:45.8395417Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-25T14:20:45.8395427Z 
2025-02-25T14:20:45.8395649Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:20:45.8395850Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-25T14:20:45.8395933Z   
2025-02-25T14:20:45.8396264Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-25T14:20:45.8396269Z 
2025-02-25T14:20:45.8396489Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:20:45.8396688Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-25T14:20:45.8396770Z   
2025-02-25T14:20:45.8397247Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-25T14:20:45.8397264Z 
2025-02-25T14:20:45.8397478Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-25T14:20:45.8397614Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-25T14:20:45.8397684Z   
2025-02-25T14:20:45.8398740Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-25T14:20:45.8398828Z   Exception origin:
2025-02-25T14:20:45.8399096Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-25T14:20:45.8399195Z       raise TypeError(msg) from None
2025-02-25T14:20:45.8399303Z   [0m[0m
2025-02-25T14:20:45.8399308Z 
2025-02-25T14:20:45.8399655Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-25T14:20:45.8399945Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-25T14:20:45.8400025Z   
2025-02-25T14:20:45.8401088Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-25T14:20:45.8401094Z 
2025-02-25T14:20:45.8401457Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8401814Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402152Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402515Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402852Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8403214Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8403570Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8403655Z   
2025-02-25T14:20:45.8403864Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-25T14:20:45.8404046Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8404299Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8404304Z 
2025-02-25T14:20:45.8404656Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8405005Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8405365Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8405442Z   
2025-02-25T14:20:45.8405628Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-25T14:20:45.8405810Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8406058Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8406062Z 
2025-02-25T14:20:45.8406410Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8406763Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8406967Z   
2025-02-25T14:20:45.8407163Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-25T14:20:45.8407334Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8407583Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8407588Z 
2025-02-25T14:20:45.8408026Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-25T14:20:45.8408351Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-02-25T14:20:45.8408432Z   
2025-02-25T14:20:45.8408711Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-25T14:20:45.8408715Z 
2025-02-25T14:20:45.8408981Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8409193Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-25T14:20:45.8409277Z   
2025-02-25T14:20:45.8409359Z   
2025-02-25T14:20:45.8409682Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8409954Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:20:45.8409960Z 
2025-02-25T14:20:45.8410221Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8410430Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-25T14:20:45.8410499Z   
2025-02-25T14:20:45.8410674Z   
2025-02-25T14:20:45.8410879Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8411069Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-25T14:20:45.8411073Z 
2025-02-25T14:20:45.8411339Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8411580Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-25T14:20:45.8411683Z   
2025-02-25T14:20:45.8411874Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-25T14:20:45.8411878Z 
2025-02-25T14:20:45.8412086Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-25T14:20:45.8412090Z 
2025-02-25T14:20:45.8412261Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-25T14:20:45.8412403Z Coverage HTML written to dir coverage_html_report
2025-02-25T14:20:45.8412516Z Coverage XML written to file coverage.xml
2025-02-25T14:20:45.8412520Z 
2025-02-25T14:20:45.8412642Z =========================== short test summary info ============================
2025-02-25T14:20:45.8413061Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-25T14:20:45.8413072Z 
2025-02-25T14:20:45.8413201Z MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:20:45.8413321Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.8413401Z        ...
2025-02-25T14:20:45.8413498Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.8413619Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.8413738Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.8413816Z        ...
2025-02-25T14:20:45.8413900Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.8414021Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.8414127Z At positional index 54, first diff: 14 != 12
2025-02-25T14:20:45.8414412Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-25T14:20:45.8414512Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8414517Z 
2025-02-25T14:20:45.8414752Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.8414849Z Max absolute difference: 0.99984222
2025-02-25T14:20:45.8414960Z Max relative difference: 6337.12154973
2025-02-25T14:20:45.8415063Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415147Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415245Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8415333Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415423Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415504Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8416110Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:20:45.8416599Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8416623Z 
2025-02-25T14:20:45.8416756Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8416900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8417097Z        ...
2025-02-25T14:20:45.8417197Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8417330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8417456Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8417530Z        ...
2025-02-25T14:20:45.8417627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8417754Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8417876Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8418388Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8418404Z 
2025-02-25T14:20:45.8418508Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8418900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8419239Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8419586Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8420126Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8420131Z 
2025-02-25T14:20:45.8420228Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8420754Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8421287Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8421670Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8422168Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8422176Z 
2025-02-25T14:20:45.8422319Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8422429Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8422627Z        ...
2025-02-25T14:20:45.8422712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8422849Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8422960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8423052Z        ...
2025-02-25T14:20:45.8423151Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8423275Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8423394Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8423908Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8423912Z 
2025-02-25T14:20:45.8424059Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8424171Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8424258Z        ...
2025-02-25T14:20:45.8424346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8424485Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8424607Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8424681Z        ...
2025-02-25T14:20:45.8424782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8424904Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8425027Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8425508Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8425513Z 
2025-02-25T14:20:45.8425647Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8425757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8425838Z        ...
2025-02-25T14:20:45.8425937Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8426064Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8426180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8426253Z        ...
2025-02-25T14:20:45.8426346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8426464Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8426572Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8427078Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8427084Z 
2025-02-25T14:20:45.8427221Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8427434Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8427508Z        ...
2025-02-25T14:20:45.8427599Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8427718Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8427840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8427913Z        ...
2025-02-25T14:20:45.8428005Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8428124Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8428234Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8428736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8428752Z 
2025-02-25T14:20:45.8428878Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8428990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8429061Z        ...
2025-02-25T14:20:45.8429159Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8429280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8429478Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8429548Z        ...
2025-02-25T14:20:45.8429631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8429748Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8429852Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8430340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8430345Z 
2025-02-25T14:20:45.8430467Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8430753Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8430844Z        ...
2025-02-25T14:20:45.8430936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8431055Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8431164Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8431236Z        ...
2025-02-25T14:20:45.8431322Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8431441Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8431543Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8432016Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8432021Z 
2025-02-25T14:20:45.8432141Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8432249Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8432317Z        ...
2025-02-25T14:20:45.8432402Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8432523Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8432631Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8432700Z        ...
2025-02-25T14:20:45.8432793Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8432917Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8433013Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8433500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8433505Z 
2025-02-25T14:20:45.8433596Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8434096Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8434440Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8434774Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8435263Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8435268Z 
2025-02-25T14:20:45.8435368Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8435834Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8436217Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8436593Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8437051Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8437055Z 
2025-02-25T14:20:45.8437183Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8437286Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8437362Z        ...
2025-02-25T14:20:45.8437451Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8437575Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8437685Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8437756Z        ...
2025-02-25T14:20:45.8437852Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8437972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8438082Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8438574Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8438579Z 
2025-02-25T14:20:45.8438713Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8438833Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8438901Z        ...
2025-02-25T14:20:45.8438987Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8439105Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8439310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8439382Z        ...
2025-02-25T14:20:45.8439478Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8439603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8439709Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8440170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8440186Z 
2025-02-25T14:20:45.8440312Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8440425Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8440497Z        ...
2025-02-25T14:20:45.8440723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8440848Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8440962Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8441040Z        ...
2025-02-25T14:20:45.8441131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8441251Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8441492Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8441995Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8442000Z 
2025-02-25T14:20:45.8442123Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8442234Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8442305Z        ...
2025-02-25T14:20:45.8442399Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8442520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8442635Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8442709Z        ...
2025-02-25T14:20:45.8442806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8442937Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8443039Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8443549Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8443553Z 
2025-02-25T14:20:45.8443675Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8443786Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8443860Z        ...
2025-02-25T14:20:45.8443950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8444069Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8444187Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8444267Z        ...
2025-02-25T14:20:45.8444349Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8444483Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8444583Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8445074Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8445079Z 
2025-02-25T14:20:45.8445201Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8445315Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8445386Z        ...
2025-02-25T14:20:45.8445477Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8445599Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8445717Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8445794Z        ...
2025-02-25T14:20:45.8445876Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8446165Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8446268Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8446747Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8446758Z 
2025-02-25T14:20:45.8446880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8446989Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8447057Z        ...
2025-02-25T14:20:45.8447143Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8447267Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8447371Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8447447Z        ...
2025-02-25T14:20:45.8447527Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8447649Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8447753Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8448238Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8448331Z 
2025-02-25T14:20:45.8448434Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8448811Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8449153Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8449492Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8449979Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8449984Z 
2025-02-25T14:20:45.8450090Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8450461Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8450949Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8451486Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8451971Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8451980Z 
2025-02-25T14:20:45.8452107Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8452222Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8452296Z        ...
2025-02-25T14:20:45.8452389Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8452509Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8452662Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8452732Z        ...
2025-02-25T14:20:45.8452826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8452949Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8453069Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8453579Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8453698Z 
2025-02-25T14:20:45.8453821Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8453931Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8453998Z        ...
2025-02-25T14:20:45.8454081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8454198Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8454308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8454377Z        ...
2025-02-25T14:20:45.8454466Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8454589Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8454684Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8455158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8455168Z 
2025-02-25T14:20:45.8455290Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8455399Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8455467Z        ...
2025-02-25T14:20:45.8455552Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8455669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8455781Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8455854Z        ...
2025-02-25T14:20:45.8455932Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8456058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8456155Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8456656Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8456661Z 
2025-02-25T14:20:45.8456779Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8456897Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8456970Z        ...
2025-02-25T14:20:45.8457067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8457199Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8457311Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8457396Z        ...
2025-02-25T14:20:45.8457480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8457615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8457714Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8458312Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8458317Z 
2025-02-25T14:20:45.8458443Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8458563Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8458643Z        ...
2025-02-25T14:20:45.8458726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8458846Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8458950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8459023Z        ...
2025-02-25T14:20:45.8459100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8459223Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8459322Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8459798Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8459802Z 
2025-02-25T14:20:45.8459940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8460043Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8460214Z        ...
2025-02-25T14:20:45.8460295Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8460429Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8460640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8460722Z        ...
2025-02-25T14:20:45.8460804Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8460930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8461030Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8461537Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8461542Z 
2025-02-25T14:20:45.8461683Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8461785Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8461866Z        ...
2025-02-25T14:20:45.8461960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8462093Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8462216Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8462322Z        ...
2025-02-25T14:20:45.8462413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8462540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8462639Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8463158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8463163Z 
2025-02-25T14:20:45.8463264Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8463635Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8463975Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8464429Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8464946Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8464951Z 
2025-02-25T14:20:45.8465049Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8465419Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8465791Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8466303Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8466796Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8466801Z 
2025-02-25T14:20:45.8466928Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8467048Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8467117Z        ...
2025-02-25T14:20:45.8467219Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8467347Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8467469Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8467547Z        ...
2025-02-25T14:20:45.8467629Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8467757Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8467856Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8468382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8468387Z 
2025-02-25T14:20:45.8468505Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8468627Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8468697Z        ...
2025-02-25T14:20:45.8468788Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8468925Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8469030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8469110Z        ...
2025-02-25T14:20:45.8469190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8469318Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8469413Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8469906Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8469911Z 
2025-02-25T14:20:45.8470039Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8470244Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8470332Z        ...
2025-02-25T14:20:45.8470413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8470687Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8470841Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8470921Z        ...
2025-02-25T14:20:45.8471000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8471130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8471223Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8471747Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8471751Z 
2025-02-25T14:20:45.8471878Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8471979Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8472057Z        ...
2025-02-25T14:20:45.8472142Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8472267Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8472504Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8472580Z        ...
2025-02-25T14:20:45.8472664Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8472785Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8472881Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8473402Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8473407Z 
2025-02-25T14:20:45.8473532Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8473635Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8473709Z        ...
2025-02-25T14:20:45.8473795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8473929Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8474037Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8474123Z        ...
2025-02-25T14:20:45.8474209Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8474335Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8474448Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8474950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8474955Z 
2025-02-25T14:20:45.8475091Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8475194Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8475276Z        ...
2025-02-25T14:20:45.8475358Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8475495Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8475603Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8475687Z        ...
2025-02-25T14:20:45.8475767Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8475893Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8475999Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8476556Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8476561Z 
2025-02-25T14:20:45.8476688Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8476789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8476869Z        ...
2025-02-25T14:20:45.8476948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8477197Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8477321Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8477392Z        ...
2025-02-25T14:20:45.8477491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8477613Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8477729Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8478312Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8478317Z 
2025-02-25T14:20:45.8478420Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8478811Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8479140Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8479571Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8480162Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8480166Z 
2025-02-25T14:20:45.8480266Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8480762Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8481139Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8481506Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8482061Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8482066Z 
2025-02-25T14:20:45.8482193Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8482296Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8482424Z        ...
2025-02-25T14:20:45.8482665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8490407Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8490742Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8490832Z        ...
2025-02-25T14:20:45.8490930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8491064Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8491182Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8491809Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8491816Z 
2025-02-25T14:20:45.8491964Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8492087Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8492164Z        ...
2025-02-25T14:20:45.8492264Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8492399Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8492528Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8492788Z        ...
2025-02-25T14:20:45.8492889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8493016Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8493137Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8493711Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8493727Z 
2025-02-25T14:20:45.8493857Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8493984Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8494059Z        ...
2025-02-25T14:20:45.8494158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8494298Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8494423Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8494492Z        ...
2025-02-25T14:20:45.8494596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8494721Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8494837Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8495439Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8495443Z 
2025-02-25T14:20:45.8495568Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8495691Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8495770Z        ...
2025-02-25T14:20:45.8495869Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8495996Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8496120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8496195Z        ...
2025-02-25T14:20:45.8496302Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8496422Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8496537Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8497133Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8497138Z 
2025-02-25T14:20:45.8497265Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8497385Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8497456Z        ...
2025-02-25T14:20:45.8497557Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8497680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8497927Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8498011Z        ...
2025-02-25T14:20:45.8498106Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8498248Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8498352Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8498922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8498926Z 
2025-02-25T14:20:45.8499048Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8499164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8499240Z        ...
2025-02-25T14:20:45.8499333Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8499455Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8499579Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8499669Z        ...
2025-02-25T14:20:45.8499751Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8499968Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8500072Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8500722Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8500728Z 
2025-02-25T14:20:45.8500861Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8500982Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8501056Z        ...
2025-02-25T14:20:45.8501152Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8501290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8501404Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8501506Z        ...
2025-02-25T14:20:45.8501589Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8501724Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8501830Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8502388Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8502392Z 
2025-02-25T14:20:45.8502493Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8502884Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8503240Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8503590Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8504136Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8504140Z 
2025-02-25T14:20:45.8504378Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8504746Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8505141Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8505539Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8506175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8506180Z 
2025-02-25T14:20:45.8506315Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8506442Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8506518Z        ...
2025-02-25T14:20:45.8506616Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8506745Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8506871Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8506942Z        ...
2025-02-25T14:20:45.8507036Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8507164Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8507286Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8507855Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8507859Z 
2025-02-25T14:20:45.8507993Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8508115Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8508191Z        ...
2025-02-25T14:20:45.8508286Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8508412Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8508530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8508605Z        ...
2025-02-25T14:20:45.8508704Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8508833Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8508943Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8509484Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8509489Z 
2025-02-25T14:20:45.8509617Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8509732Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8509805Z        ...
2025-02-25T14:20:45.8509905Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8510029Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8510160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8510247Z        ...
2025-02-25T14:20:45.8510430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8510730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8510853Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8511414Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8511419Z 
2025-02-25T14:20:45.8511546Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8511667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8511740Z        ...
2025-02-25T14:20:45.8511831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8511963Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8512072Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8512156Z        ...
2025-02-25T14:20:45.8512242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8512381Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8512480Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8513166Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8513171Z 
2025-02-25T14:20:45.8513294Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8513415Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8513498Z        ...
2025-02-25T14:20:45.8513587Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8513725Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8513839Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8513930Z        ...
2025-02-25T14:20:45.8514012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8514149Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8514252Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8514799Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8514809Z 
2025-02-25T14:20:45.8514948Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8515054Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8515137Z        ...
2025-02-25T14:20:45.8515218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8515348Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8515455Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8515541Z        ...
2025-02-25T14:20:45.8515627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8515772Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8515879Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8516413Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8516424Z 
2025-02-25T14:20:45.8516560Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8516667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8516752Z        ...
2025-02-25T14:20:45.8516836Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8516974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8517082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8517167Z        ...
2025-02-25T14:20:45.8517250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8517388Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8517658Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8518196Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8518210Z 
2025-02-25T14:20:45.8518320Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8518689Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8519033Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8519491Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8520031Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8520044Z 
2025-02-25T14:20:45.8520141Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8520636Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8521015Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8521406Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8521925Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8521936Z 
2025-02-25T14:20:45.8522061Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8522179Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8522253Z        ...
2025-02-25T14:20:45.8522349Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8522483Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8522592Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8522676Z        ...
2025-02-25T14:20:45.8522760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8522887Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8523119Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8523683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8523691Z 
2025-02-25T14:20:45.8523813Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8523928Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8524004Z        ...
2025-02-25T14:20:45.8524084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8524213Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8524320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8524396Z        ...
2025-02-25T14:20:45.8524476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8524601Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8524708Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8525229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8525348Z 
2025-02-25T14:20:45.8525491Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8525599Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8525685Z        ...
2025-02-25T14:20:45.8525767Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8525903Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8526017Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8526101Z        ...
2025-02-25T14:20:45.8526187Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8526318Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8526420Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8526985Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8526995Z 
2025-02-25T14:20:45.8527134Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8527240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8527324Z        ...
2025-02-25T14:20:45.8527408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8527539Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8527646Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8527728Z        ...
2025-02-25T14:20:45.8527812Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8527945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8528056Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8528608Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8528617Z 
2025-02-25T14:20:45.8528753Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8528862Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8528948Z        ...
2025-02-25T14:20:45.8529032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8529166Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8529277Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8529367Z        ...
2025-02-25T14:20:45.8529461Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8529582Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8529690Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8530314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8530320Z 
2025-02-25T14:20:45.8530460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8530671Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8530753Z        ...
2025-02-25T14:20:45.8530834Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8530971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8531088Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8531159Z        ...
2025-02-25T14:20:45.8531255Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8531377Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8531483Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8532038Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8532043Z 
2025-02-25T14:20:45.8532178Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8532440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8532530Z        ...
2025-02-25T14:20:45.8532636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8532758Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8532875Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8532947Z        ...
2025-02-25T14:20:45.8533041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8533164Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8533273Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8533839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8533844Z 
2025-02-25T14:20:45.8533959Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8534344Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8534687Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8535037Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8535619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8535623Z 
2025-02-25T14:20:45.8535717Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8536219Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8536596Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8536982Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8537535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8537540Z 
2025-02-25T14:20:45.8537785Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8537895Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8537978Z        ...
2025-02-25T14:20:45.8538063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8538199Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8538305Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8538390Z        ...
2025-02-25T14:20:45.8538476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8538615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8538719Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8539309Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8539314Z 
2025-02-25T14:20:45.8539446Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8539559Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8539646Z        ...
2025-02-25T14:20:45.8539729Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8539865Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8539977Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8540063Z        ...
2025-02-25T14:20:45.8540145Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8540280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8540398Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8541049Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8541054Z 
2025-02-25T14:20:45.8541193Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8541309Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8541396Z        ...
2025-02-25T14:20:45.8541479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8541610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8541716Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8541799Z        ...
2025-02-25T14:20:45.8541894Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8542014Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8542127Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8542695Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8542829Z 
2025-02-25T14:20:45.8542976Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8543086Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8543173Z        ...
2025-02-25T14:20:45.8543262Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8543392Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8543512Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8543587Z        ...
2025-02-25T14:20:45.8543685Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8543805Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8543921Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8544485Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8544489Z 
2025-02-25T14:20:45.8544638Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8544746Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8544956Z        ...
2025-02-25T14:20:45.8545053Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8545178Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8545303Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8545374Z        ...
2025-02-25T14:20:45.8545471Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8545591Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8545702Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8546252Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8546256Z 
2025-02-25T14:20:45.8546403Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8546528Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8546601Z        ...
2025-02-25T14:20:45.8546705Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8546832Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8546946Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8547022Z        ...
2025-02-25T14:20:45.8547117Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8547239Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8547349Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8547872Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8547886Z 
2025-02-25T14:20:45.8548009Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8548140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8548211Z        ...
2025-02-25T14:20:45.8548302Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8548432Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8548550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8548624Z        ...
2025-02-25T14:20:45.8548715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8548840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8548952Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8549492Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8549497Z 
2025-02-25T14:20:45.8549590Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8550067Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8550404Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8550935Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8551481Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8551612Z 
2025-02-25T14:20:45.8551711Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8552085Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8552475Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8552891Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8553398Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8553403Z 
2025-02-25T14:20:45.8553545Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8553653Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8553741Z        ...
2025-02-25T14:20:45.8553837Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8553974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8554094Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8554169Z        ...
2025-02-25T14:20:45.8554261Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8554382Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8554493Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8555034Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8555038Z 
2025-02-25T14:20:45.8555171Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8555403Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8555483Z        ...
2025-02-25T14:20:45.8555575Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8555706Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8555825Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8555897Z        ...
2025-02-25T14:20:45.8555994Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8556113Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8556226Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8556734Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8556738Z 
2025-02-25T14:20:45.8556871Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8556993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8557064Z        ...
2025-02-25T14:20:45.8557156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8557275Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8557482Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8557554Z        ...
2025-02-25T14:20:45.8557645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8557765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8557873Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8558409Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8558425Z 
2025-02-25T14:20:45.8558547Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8558662Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8558738Z        ...
2025-02-25T14:20:45.8558830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8558950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8559078Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8559150Z        ...
2025-02-25T14:20:45.8559242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8559362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8559473Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8560000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8560005Z 
2025-02-25T14:20:45.8560128Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8560241Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8560314Z        ...
2025-02-25T14:20:45.8560417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8560639Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8560763Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8560844Z        ...
2025-02-25T14:20:45.8560942Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8561059Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8561173Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8561702Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8561706Z 
2025-02-25T14:20:45.8561828Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8561943Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8562008Z        ...
2025-02-25T14:20:45.8562099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8562351Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8562477Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8562556Z        ...
2025-02-25T14:20:45.8562650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8562780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8562877Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8563422Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8563427Z 
2025-02-25T14:20:45.8563528Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8563915Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8564396Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8564727Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8565285Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8565293Z 
2025-02-25T14:20:45.8565398Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8565768Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8566156Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8566544Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8567058Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8567063Z 
2025-02-25T14:20:45.8567197Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8567322Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8567396Z        ...
2025-02-25T14:20:45.8567582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8567713Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8567834Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8567910Z        ...
2025-02-25T14:20:45.8568003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8568127Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8568235Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8568788Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8568805Z 
2025-02-25T14:20:45.8568931Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8569050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8569123Z        ...
2025-02-25T14:20:45.8569216Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8569342Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8569460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8569626Z        ...
2025-02-25T14:20:45.8569723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8569842Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8569958Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8570491Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8570496Z 
2025-02-25T14:20:45.8570722Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8570840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8570911Z        ...
2025-02-25T14:20:45.8571005Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8571135Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8571251Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8571321Z        ...
2025-02-25T14:20:45.8571424Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8571545Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8571655Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8572210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8572215Z 
2025-02-25T14:20:45.8572342Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8572456Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8572528Z        ...
2025-02-25T14:20:45.8572626Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8572746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8572874Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8572944Z        ...
2025-02-25T14:20:45.8573037Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8573172Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8573276Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8573829Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8573833Z 
2025-02-25T14:20:45.8573955Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8574068Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8574139Z        ...
2025-02-25T14:20:45.8574233Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8574354Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8574611Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8574695Z        ...
2025-02-25T14:20:45.8574777Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8574912Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8575012Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8575550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8575554Z 
2025-02-25T14:20:45.8575674Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8575790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8575864Z        ...
2025-02-25T14:20:45.8575952Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8576087Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8576198Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8576285Z        ...
2025-02-25T14:20:45.8576367Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8576497Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8576714Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8577253Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8577258Z 
2025-02-25T14:20:45.8577386Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8577502Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8577581Z        ...
2025-02-25T14:20:45.8577661Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8577791Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8577899Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8577980Z        ...
2025-02-25T14:20:45.8578076Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8578211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8578314Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8578868Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8578873Z 
2025-02-25T14:20:45.8578980Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8579351Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8579694Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8580044Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8580681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8580685Z 
2025-02-25T14:20:45.8580917Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8581283Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8581674Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8582061Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8582724Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8582729Z 
2025-02-25T14:20:45.8582853Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8582975Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8583049Z        ...
2025-02-25T14:20:45.8583144Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8583268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8583387Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8583460Z        ...
2025-02-25T14:20:45.8583554Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8583681Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8583789Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8584359Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8584364Z 
2025-02-25T14:20:45.8584489Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8584603Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8584675Z        ...
2025-02-25T14:20:45.8584771Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8584891Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8585011Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8585092Z        ...
2025-02-25T14:20:45.8585181Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8585307Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8585415Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8585944Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8585948Z 
2025-02-25T14:20:45.8586073Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8586188Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8586257Z        ...
2025-02-25T14:20:45.8586347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8586475Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8586584Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8586664Z        ...
2025-02-25T14:20:45.8586868Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8587001Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8587103Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8587670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8587675Z 
2025-02-25T14:20:45.8587793Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8587910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8587989Z        ...
2025-02-25T14:20:45.8588072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8588201Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8588310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8588393Z        ...
2025-02-25T14:20:45.8588474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8588613Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8588712Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8589267Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8589367Z 
2025-02-25T14:20:45.8589505Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8589610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8589691Z        ...
2025-02-25T14:20:45.8589771Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8589900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8590004Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8590084Z        ...
2025-02-25T14:20:45.8590164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8590297Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8590392Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8591114Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8591127Z 
2025-02-25T14:20:45.8591265Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8591373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8591455Z        ...
2025-02-25T14:20:45.8591535Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8591662Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8591767Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8591850Z        ...
2025-02-25T14:20:45.8591930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8592061Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8592172Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8592696Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8592705Z 
2025-02-25T14:20:45.8592845Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8592951Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8593034Z        ...
2025-02-25T14:20:45.8593116Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8593247Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8593356Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8593442Z        ...
2025-02-25T14:20:45.8593533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8593652Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8593759Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8594429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8594440Z 
2025-02-25T14:20:45.8594544Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8594909Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8595249Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8595580Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8596235Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8596239Z 
2025-02-25T14:20:45.8596330Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8596705Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8597086Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8597472Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8597989Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8597999Z 
2025-02-25T14:20:45.8598121Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8598234Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8598319Z        ...
2025-02-25T14:20:45.8598405Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8598536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8598645Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8598727Z        ...
2025-02-25T14:20:45.8598813Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8598945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8599138Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8599709Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8599717Z 
2025-02-25T14:20:45.8599855Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8599965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8600051Z        ...
2025-02-25T14:20:45.8600137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8600265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8600372Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8600457Z        ...
2025-02-25T14:20:45.8600645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8600779Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8600879Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8601416Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8601547Z 
2025-02-25T14:20:45.8601682Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8601785Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8601871Z        ...
2025-02-25T14:20:45.8601952Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8602090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8602197Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8602280Z        ...
2025-02-25T14:20:45.8602372Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8602503Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8602611Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8603171Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8603181Z 
2025-02-25T14:20:45.8603320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8603426Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8603512Z        ...
2025-02-25T14:20:45.8603605Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8603748Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8603863Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8603950Z        ...
2025-02-25T14:20:45.8604055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8604179Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8604299Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8604865Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8604870Z 
2025-02-25T14:20:45.8605021Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8605133Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8605217Z        ...
2025-02-25T14:20:45.8605303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8605443Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8605570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8605643Z        ...
2025-02-25T14:20:45.8605737Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8605865Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8605976Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8606650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8606655Z 
2025-02-25T14:20:45.8606795Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8606913Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8606995Z        ...
2025-02-25T14:20:45.8607090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8607216Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8607339Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8607413Z        ...
2025-02-25T14:20:45.8607512Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8607633Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8607746Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8608291Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8608296Z 
2025-02-25T14:20:45.8608435Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8608649Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8608723Z        ...
2025-02-25T14:20:45.8608824Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8608947Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8609075Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8609147Z        ...
2025-02-25T14:20:45.8609246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8609372Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8609486Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8610033Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8610056Z 
2025-02-25T14:20:45.8610162Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8610650Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8610992Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8611345Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8611912Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8611916Z 
2025-02-25T14:20:45.8612012Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8612543Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8612933Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8613314Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8613852Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8613856Z 
2025-02-25T14:20:45.8613989Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8614222Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8614300Z        ...
2025-02-25T14:20:45.8614384Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8614517Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8614624Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8614710Z        ...
2025-02-25T14:20:45.8614808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8614929Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8615042Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8615609Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8615613Z 
2025-02-25T14:20:45.8615755Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8615867Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8615950Z        ...
2025-02-25T14:20:45.8616042Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8616192Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8616320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8616390Z        ...
2025-02-25T14:20:45.8616480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8616605Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8616716Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8617243Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8617255Z 
2025-02-25T14:20:45.8617389Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8617493Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8617588Z        ...
2025-02-25T14:20:45.8617684Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8617806Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8617926Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8618004Z        ...
2025-02-25T14:20:45.8618093Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8618211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8618319Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8618872Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8618877Z 
2025-02-25T14:20:45.8619106Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8619220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8619296Z        ...
2025-02-25T14:20:45.8619386Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8619507Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8619625Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8619700Z        ...
2025-02-25T14:20:45.8619799Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8619923Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8620037Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8620697Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8620716Z 
2025-02-25T14:20:45.8620845Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8620963Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8621033Z        ...
2025-02-25T14:20:45.8621246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8621364Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8621487Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8621564Z        ...
2025-02-25T14:20:45.8621651Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8621771Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8621874Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8622421Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8622425Z 
2025-02-25T14:20:45.8622547Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8622666Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8622738Z        ...
2025-02-25T14:20:45.8622829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8622960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8623082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8623156Z        ...
2025-02-25T14:20:45.8623250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8623374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8623492Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8624074Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8624078Z 
2025-02-25T14:20:45.8624205Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8624323Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8624396Z        ...
2025-02-25T14:20:45.8624489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8624616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8624736Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8624809Z        ...
2025-02-25T14:20:45.8624910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8625039Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8625137Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8625730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8625734Z 
2025-02-25T14:20:45.8625828Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8626336Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8626690Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8627027Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8627705Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8627709Z 
2025-02-25T14:20:45.8627817Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8628187Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8628574Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8628966Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8629522Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8629527Z 
2025-02-25T14:20:45.8629676Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8629797Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8629874Z        ...
2025-02-25T14:20:45.8629968Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8630093Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8630216Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8630288Z        ...
2025-02-25T14:20:45.8630392Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8630645Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8630820Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8631429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8631434Z 
2025-02-25T14:20:45.8631703Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8631824Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8631903Z        ...
2025-02-25T14:20:45.8631999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8632124Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8632243Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8632318Z        ...
2025-02-25T14:20:45.8632415Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8632537Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8632655Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8633225Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8633229Z 
2025-02-25T14:20:45.8633365Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8633483Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8633560Z        ...
2025-02-25T14:20:45.8633796Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8633920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8634036Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8634113Z        ...
2025-02-25T14:20:45.8634211Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8634339Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8634437Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8635137Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8635142Z 
2025-02-25T14:20:45.8635323Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:20:45.8635710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8640367Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.8645023Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.8645342Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:20:45.8645981Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8645986Z 
2025-02-25T14:20:45.8646116Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8646226Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8646304Z        ...
2025-02-25T14:20:45.8646386Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8646517Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8646622Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8646694Z        ...
2025-02-25T14:20:45.8646775Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8646906Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8647013Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8647600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8647604Z 
2025-02-25T14:20:45.8647737Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8647844Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8647924Z        ...
2025-02-25T14:20:45.8648006Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8648137Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8648246Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8648332Z        ...
2025-02-25T14:20:45.8648422Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8648686Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8648800Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8649391Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8649395Z 
2025-02-25T14:20:45.8649527Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8649631Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8649713Z        ...
2025-02-25T14:20:45.8649797Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8649926Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8650046Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8650121Z        ...
2025-02-25T14:20:45.8650212Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8650335Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8650440Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8651113Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8651503Z 
2025-02-25T14:20:45.8651639Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8651741Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8651818Z        ...
2025-02-25T14:20:45.8651903Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8652020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8652132Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8652199Z        ...
2025-02-25T14:20:45.8652288Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8652412Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8652525Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8653103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8653113Z 
2025-02-25T14:20:45.8653247Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8653361Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8653432Z        ...
2025-02-25T14:20:45.8653525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8653643Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8653758Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8653833Z        ...
2025-02-25T14:20:45.8653924Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8654049Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8654162Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8654722Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8654747Z 
2025-02-25T14:20:45.8654844Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8655227Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8655683Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8656029Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8656594Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8656599Z 
2025-02-25T14:20:45.8656698Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8657074Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8657536Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8657913Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8658461Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8658466Z 
2025-02-25T14:20:45.8658602Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8658714Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8658794Z        ...
2025-02-25T14:20:45.8658877Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8659015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8659136Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8659207Z        ...
2025-02-25T14:20:45.8659299Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8659419Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8659524Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8660095Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8660100Z 
2025-02-25T14:20:45.8660227Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8660330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8660404Z        ...
2025-02-25T14:20:45.8660493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8660721Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8660830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8660897Z        ...
2025-02-25T14:20:45.8661101Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8661225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8661328Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8661866Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8661870Z 
2025-02-25T14:20:45.8661994Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8662104Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8662176Z        ...
2025-02-25T14:20:45.8662278Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8662400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8662520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8662588Z        ...
2025-02-25T14:20:45.8662686Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8662810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8662919Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8663741Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8663753Z 
2025-02-25T14:20:45.8663919Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.8664300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8669142Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8674291Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8674599Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.8675216Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8675221Z 
2025-02-25T14:20:45.8675343Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8675460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8675539Z        ...
2025-02-25T14:20:45.8675624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8675751Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8675855Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8675931Z        ...
2025-02-25T14:20:45.8676014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8676142Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8676238Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8676821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8676825Z 
2025-02-25T14:20:45.8676957Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8677062Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8677149Z        ...
2025-02-25T14:20:45.8677232Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8677367Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8677475Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8677556Z        ...
2025-02-25T14:20:45.8677643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8677776Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8677879Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8678466Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8678568Z 
2025-02-25T14:20:45.8678714Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8678830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8678921Z        ...
2025-02-25T14:20:45.8679011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8679151Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8679261Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8679344Z        ...
2025-02-25T14:20:45.8679435Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8679568Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8679690Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8680251Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8680256Z 
2025-02-25T14:20:45.8680406Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8680623Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8680826Z        ...
2025-02-25T14:20:45.8680918Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8681060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8681171Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8681257Z        ...
2025-02-25T14:20:45.8681354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8681474Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8681589Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8682080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8682085Z 
2025-02-25T14:20:45.8682231Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8682337Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8682422Z        ...
2025-02-25T14:20:45.8682516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8682649Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8682767Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8682838Z        ...
2025-02-25T14:20:45.8682928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8683049Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8683161Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8683657Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8683662Z 
2025-02-25T14:20:45.8683772Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8684169Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8684518Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8684986Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8685507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8685512Z 
2025-02-25T14:20:45.8685607Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8685988Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8686369Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8686829Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8687299Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8687306Z 
2025-02-25T14:20:45.8687440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8687546Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8687630Z        ...
2025-02-25T14:20:45.8687717Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8687846Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8687955Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8688035Z        ...
2025-02-25T14:20:45.8688118Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8688248Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8688347Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8688858Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8688862Z 
2025-02-25T14:20:45.8688994Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8689103Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8689186Z        ...
2025-02-25T14:20:45.8689272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8689405Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8689514Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8689591Z        ...
2025-02-25T14:20:45.8689675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8689809Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8689916Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8690382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8690387Z 
2025-02-25T14:20:45.8690616Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8690896Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8690984Z        ...
2025-02-25T14:20:45.8691068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8691203Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8691311Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8691389Z        ...
2025-02-25T14:20:45.8691482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8691602Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8691711Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8692318Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8692323Z 
2025-02-25T14:20:45.8692501Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.8692870Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8697859Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8702924Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8703120Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.8703781Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8703786Z 
2025-02-25T14:20:45.8703912Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8704026Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8704096Z        ...
2025-02-25T14:20:45.8704196Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8704323Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8704453Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8704523Z        ...
2025-02-25T14:20:45.8704632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8704756Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8704853Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8705355Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8705360Z 
2025-02-25T14:20:45.8705484Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8705592Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8705661Z        ...
2025-02-25T14:20:45.8705750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8705867Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8705978Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8706051Z        ...
2025-02-25T14:20:45.8706131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8706260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8706357Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8706856Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8706861Z 
2025-02-25T14:20:45.8706981Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8707092Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8707159Z        ...
2025-02-25T14:20:45.8707248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8707371Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8707476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8707551Z        ...
2025-02-25T14:20:45.8707633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8707848Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8707949Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8708433Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8708441Z 
2025-02-25T14:20:45.8708564Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8708678Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8708763Z        ...
2025-02-25T14:20:45.8708844Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8708975Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8709083Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8709161Z        ...
2025-02-25T14:20:45.8709245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8709379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8709484Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8710000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8710088Z 
2025-02-25T14:20:45.8710231Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8710333Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8710408Z        ...
2025-02-25T14:20:45.8710492Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8710809Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8710922Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8710997Z        ...
2025-02-25T14:20:45.8711079Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8711212Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8711313Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8711840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8711853Z 
2025-02-25T14:20:45.8711965Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8712334Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8712677Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8713023Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8713527Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8713531Z 
2025-02-25T14:20:45.8713636Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8714133Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8714511Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8714888Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8715364Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8715472Z 
2025-02-25T14:20:45.8715596Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8715707Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8715777Z        ...
2025-02-25T14:20:45.8715864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8715985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8716109Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8716189Z        ...
2025-02-25T14:20:45.8716278Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8716408Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8716519Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8717047Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8717056Z 
2025-02-25T14:20:45.8717181Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8717297Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8717368Z        ...
2025-02-25T14:20:45.8717466Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8717604Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8717717Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8717801Z        ...
2025-02-25T14:20:45.8717886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8718015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8718115Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8718618Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8718630Z 
2025-02-25T14:20:45.8718751Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8718859Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8718933Z        ...
2025-02-25T14:20:45.8719015Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8719139Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8719249Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8719325Z        ...
2025-02-25T14:20:45.8719407Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8719534Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8719630Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8720293Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8720299Z 
2025-02-25T14:20:45.8720427Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8720643Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8720719Z        ...
2025-02-25T14:20:45.8720801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8720936Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8721050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8721133Z        ...
2025-02-25T14:20:45.8721215Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8721351Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8721452Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8721986Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8721991Z 
2025-02-25T14:20:45.8722126Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8722359Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8722440Z        ...
2025-02-25T14:20:45.8722524Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8722657Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8722766Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8722847Z        ...
2025-02-25T14:20:45.8722934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8723067Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8723169Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8723685Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8723689Z 
2025-02-25T14:20:45.8723821Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8723924Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8724002Z        ...
2025-02-25T14:20:45.8724083Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8724211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8724322Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8724398Z        ...
2025-02-25T14:20:45.8724479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8724603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8724712Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8725192Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8725196Z 
2025-02-25T14:20:45.8725329Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8725432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8725514Z        ...
2025-02-25T14:20:45.8725595Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8725729Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8725833Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8725914Z        ...
2025-02-25T14:20:45.8726003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8726127Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8726237Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8726729Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8726733Z 
2025-02-25T14:20:45.8726847Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8727345Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8727709Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8728056Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8728644Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8728649Z 
2025-02-25T14:20:45.8728743Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8729129Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8729509Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8729903Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8730385Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8730390Z 
2025-02-25T14:20:45.8730615Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8730731Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8730822Z        ...
2025-02-25T14:20:45.8730907Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8731037Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8731151Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8731232Z        ...
2025-02-25T14:20:45.8731317Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8731453Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8731558Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8732078Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8732083Z 
2025-02-25T14:20:45.8732342Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8732453Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8732544Z        ...
2025-02-25T14:20:45.8732632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8732763Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8732874Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8732955Z        ...
2025-02-25T14:20:45.8733039Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8733172Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8733273Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8733753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8733758Z 
2025-02-25T14:20:45.8733896Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8734018Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8734099Z        ...
2025-02-25T14:20:45.8734184Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8734441Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8734552Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8734635Z        ...
2025-02-25T14:20:45.8734721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8734853Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8734964Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8735471Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8735476Z 
2025-02-25T14:20:45.8735609Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8735716Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8735808Z        ...
2025-02-25T14:20:45.8735894Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8736030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8736144Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8736230Z        ...
2025-02-25T14:20:45.8736317Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8736454Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8736568Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8737067Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8737071Z 
2025-02-25T14:20:45.8737208Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8737317Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8737399Z        ...
2025-02-25T14:20:45.8737492Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8737633Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8737771Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8737843Z        ...
2025-02-25T14:20:45.8737940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8738064Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8738180Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8738678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8738683Z 
2025-02-25T14:20:45.8738816Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8738921Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8739007Z        ...
2025-02-25T14:20:45.8739187Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8739320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8739445Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8739524Z        ...
2025-02-25T14:20:45.8739623Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8739746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8739854Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8740372Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8740376Z 
2025-02-25T14:20:45.8740610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8740724Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8740811Z        ...
2025-02-25T14:20:45.8740908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8741035Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8741158Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8741229Z        ...
2025-02-25T14:20:45.8741469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8741592Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8741706Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8742246Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8742250Z 
2025-02-25T14:20:45.8742358Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8742739Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8743066Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8743403Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8743950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8743955Z 
2025-02-25T14:20:45.8744044Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8744427Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8744918Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8745299Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8745823Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8745827Z 
2025-02-25T14:20:45.8745965Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8746074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8746165Z        ...
2025-02-25T14:20:45.8746251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8746398Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8746509Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8746685Z        ...
2025-02-25T14:20:45.8746775Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8746906Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8747021Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8747566Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8747570Z 
2025-02-25T14:20:45.8747701Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8747807Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8747886Z        ...
2025-02-25T14:20:45.8747970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8748108Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8748219Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8748305Z        ...
2025-02-25T14:20:45.8748405Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8748527Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8748638Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8749144Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8749148Z 
2025-02-25T14:20:45.8749288Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8749395Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8749477Z        ...
2025-02-25T14:20:45.8749561Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8749694Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8749821Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8749893Z        ...
2025-02-25T14:20:45.8749980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8750101Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8750208Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8750922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8750927Z 
2025-02-25T14:20:45.8751060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8751163Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8751240Z        ...
2025-02-25T14:20:45.8751332Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8751452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8751694Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8751769Z        ...
2025-02-25T14:20:45.8751859Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8751977Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8752089Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8752649Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8752654Z 
2025-02-25T14:20:45.8752790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8759642Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8759748Z        ...
2025-02-25T14:20:45.8759863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8760015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8760145Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8760232Z        ...
2025-02-25T14:20:45.8760332Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8760462Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8760941Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8761507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8761514Z 
2025-02-25T14:20:45.8761650Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8761781Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8761864Z        ...
2025-02-25T14:20:45.8761967Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8762097Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8762223Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8762297Z        ...
2025-02-25T14:20:45.8762406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8762530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8762648Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8763264Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8763269Z 
2025-02-25T14:20:45.8763401Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8763532Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8763607Z        ...
2025-02-25T14:20:45.8763703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8763824Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8763949Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8764023Z        ...
2025-02-25T14:20:45.8764127Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8764260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8764365Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8764979Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8764983Z 
2025-02-25T14:20:45.8765079Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8765464Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8765925Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8766268Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8766878Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8766882Z 
2025-02-25T14:20:45.8766988Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8767353Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8767846Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8768245Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8768821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8768826Z 
2025-02-25T14:20:45.8768963Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8769086Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8769158Z        ...
2025-02-25T14:20:45.8769252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8769380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8769501Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8769577Z        ...
2025-02-25T14:20:45.8769676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8769797Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8769917Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8770625Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8770644Z 
2025-02-25T14:20:45.8770774Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8770896Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8770966Z        ...
2025-02-25T14:20:45.8771058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8771182Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8771305Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8771403Z        ...
2025-02-25T14:20:45.8771625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8771753Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8771874Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8772459Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8772463Z 
2025-02-25T14:20:45.8772585Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8772698Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8772766Z        ...
2025-02-25T14:20:45.8772852Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8772972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8773090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8773159Z        ...
2025-02-25T14:20:45.8773260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8773390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8773491Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8774248Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8774253Z 
2025-02-25T14:20:45.8774379Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8774500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8774575Z        ...
2025-02-25T14:20:45.8774674Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8774799Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8774921Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8775002Z        ...
2025-02-25T14:20:45.8775092Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8775226Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8775332Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8775948Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8775952Z 
2025-02-25T14:20:45.8776076Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8776200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8776276Z        ...
2025-02-25T14:20:45.8776373Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8776506Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8776614Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8776698Z        ...
2025-02-25T14:20:45.8776783Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8776921Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8777025Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8777623Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8777627Z 
2025-02-25T14:20:45.8777751Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8777875Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8777953Z        ...
2025-02-25T14:20:45.8778037Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8778171Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8778280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8778367Z        ...
2025-02-25T14:20:45.8778452Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8778674Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8778782Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8779103Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-25T14:20:45.8779210Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8779223Z 
2025-02-25T14:20:45.8779323Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:20:45.8779429Z Max absolute difference: 1.
2025-02-25T14:20:45.8779522Z Max relative difference: 1.
2025-02-25T14:20:45.8779662Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8779768Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8779885Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.8780004Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8780118Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8780219Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.8780719Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-25T14:20:45.8780834Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8780839Z 
2025-02-25T14:20:45.8780937Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:20:45.8781044Z Max absolute difference: 4005
2025-02-25T14:20:45.8781141Z Max relative difference: 26.00649351
2025-02-25T14:20:45.8781261Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.8781372Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.8781668Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-25T14:20:45.8781773Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8781783Z 
2025-02-25T14:20:45.8781887Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:20:45.8781989Z Max absolute difference: 4046
2025-02-25T14:20:45.8782086Z Max relative difference: 24.82208589
2025-02-25T14:20:45.8782205Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.8782303Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.8782579Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-25T14:20:45.8782680Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8782684Z 
2025-02-25T14:20:45.8782794Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.8782893Z Max absolute difference: 0.99984222
2025-02-25T14:20:45.8783003Z Max relative difference: 6337.12154973
2025-02-25T14:20:45.8783100Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783182Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783273Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8783364Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783451Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783534Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8783793Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-25T14:20:45.8783895Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8783899Z 
2025-02-25T14:20:45.8784007Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:20:45.8784103Z Max absolute difference: 4.25260542e+12
2025-02-25T14:20:45.8784214Z Max relative difference: 18196.0085861
2025-02-25T14:20:45.8784373Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.8784456Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.8784608Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.8784754Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.8784847Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.8785116Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.8785370Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-25T14:20:45.8785479Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8785484Z 
2025-02-25T14:20:45.8785589Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:20:45.8785701Z Max absolute difference: 2.92713618
2025-02-25T14:20:45.8785798Z Max relative difference: 18196.0085861
2025-02-25T14:20:45.8785952Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.8786032Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.8786187Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.8786268Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.8786537Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-25T14:20:45.8786641Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8786645Z 
2025-02-25T14:20:45.8786756Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:20:45.8786853Z Max absolute difference: 282815.33818472
2025-02-25T14:20:45.8787108Z Max relative difference: 4.12352828e+47
2025-02-25T14:20:45.8787265Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.8787345Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.8787482Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.8787620Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.8787705Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.8787832Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.8788337Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8788348Z 
2025-02-25T14:20:45.8788523Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8788606Z [index]: [0, 1]
2025-02-25T14:20:45.8788733Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-25T14:20:45.8788835Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:20:45.8789021Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.8789509Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8789514Z 
2025-02-25T14:20:45.8789686Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8789766Z [index]: [0, 1]
2025-02-25T14:20:45.8789876Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-25T14:20:45.8789988Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:20:45.8790159Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.8790909Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8790921Z 
2025-02-25T14:20:45.8791082Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8791166Z [index]: [0, 1]
2025-02-25T14:20:45.8791266Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-25T14:20:45.8791373Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:20:45.8791544Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-25T14:20:45.8791933Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-25T14:20:45.8791937Z 
2025-02-25T14:20:45.8792044Z Series values are different (100.0 %)
2025-02-25T14:20:45.8792310Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8793541Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-25T14:20:45.8794733Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:20:45.8794929Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-25T14:20:45.8795300Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-25T14:20:45.8795415Z 
2025-02-25T14:20:45.8795516Z Series values are different (100.0 %)
2025-02-25T14:20:45.8795646Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8796617Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-25T14:20:45.8797575Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:20:45.8797753Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-25T14:20:45.8798112Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-25T14:20:45.8798117Z 
2025-02-25T14:20:45.8798210Z Series values are different (90.0 %)
2025-02-25T14:20:45.8798337Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8799318Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-25T14:20:45.8800308Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:20:45.8800484Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.8800968Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-25T14:20:45.8800973Z 
2025-02-25T14:20:45.8801072Z Series values are different (95.0 %)
2025-02-25T14:20:45.8801328Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8802429Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-25T14:20:45.8803510Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:20:45.8803690Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.8804060Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-25T14:20:45.8804175Z 
2025-02-25T14:20:45.8804286Z Series values are different (5.1125 %)
2025-02-25T14:20:45.8804653Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8809745Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:20:45.8815084Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:20:45.8815386Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:20:45.8815777Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-25T14:20:45.8815781Z 
2025-02-25T14:20:45.8815891Z Series values are different (1.3025 %)
2025-02-25T14:20:45.8816285Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8822683Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.8828897Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.8829224Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:20:45.8829595Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-25T14:20:45.8829703Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8829707Z 
2025-02-25T14:20:45.8829803Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.8829909Z Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.8829996Z Max relative difference: 1.
2025-02-25T14:20:45.8830159Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8830248Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8830389Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8830476Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8831168Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-25T14:20:45.8831288Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8831293Z 
2025-02-25T14:20:45.8831386Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:20:45.8831485Z Max absolute difference: 4.15247374e+37
2025-02-25T14:20:45.8831571Z Max relative difference: 1.
2025-02-25T14:20:45.8831720Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8831810Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8831953Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8832039Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8832337Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-25T14:20:45.8832447Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8832451Z 
2025-02-25T14:20:45.8832553Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.8832651Z Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.8832735Z Max relative difference: 1.
2025-02-25T14:20:45.8832996Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8833076Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8833225Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8833305Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8833608Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-25T14:20:45.8833717Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8833721Z 
2025-02-25T14:20:45.8833824Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:20:45.8833931Z Max absolute difference: 5.32418652e-19
2025-02-25T14:20:45.8834023Z Max relative difference: 12.23359055
2025-02-25T14:20:45.8834124Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834206Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834294Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8834385Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834475Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834563Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8834821Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-25T14:20:45.8834931Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8834935Z 
2025-02-25T14:20:45.8835027Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:20:45.8835124Z Max absolute difference: 1.38672909e+39
2025-02-25T14:20:45.8835214Z Max relative difference: 5.25284451
2025-02-25T14:20:45.8835365Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8835443Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8835603Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8835682Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8835990Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-25T14:20:45.8836111Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8836115Z 
2025-02-25T14:20:45.8836211Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:20:45.8836317Z Max absolute difference: 5.26760031e+38
2025-02-25T14:20:45.8836410Z Max relative difference: 35562.41947434
2025-02-25T14:20:45.8836557Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8836637Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8836783Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8836864Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8837440Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8837550Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8837554Z 
2025-02-25T14:20:45.8837657Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.8837765Z Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.8837853Z Max relative difference: 7.72237896
2025-02-25T14:20:45.8837947Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838028Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838122Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8838204Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838293Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838371Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8838807Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8838918Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8838922Z 
2025-02-25T14:20:45.8839022Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.8839126Z Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.8839217Z Max relative difference: 4.0036592
2025-02-25T14:20:45.8839462Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8839540Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8839688Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8839765Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8840234Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8840344Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8840348Z 
2025-02-25T14:20:45.8840439Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8840646Z Max absolute difference: 5.00661745e+37
2025-02-25T14:20:45.8840736Z Max relative difference: 17.51202125
2025-02-25T14:20:45.8840895Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:20:45.8840974Z        2.279436e+31, 2.243943e+31])
2025-02-25T14:20:45.8841125Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:20:45.8841201Z        2.292907e+31, 2.257206e+31])
2025-02-25T14:20:45.8841647Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8841754Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8841757Z 
2025-02-25T14:20:45.8841860Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.8841967Z Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.8842055Z Max relative difference: 3.25828651
2025-02-25T14:20:45.8842149Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842226Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842321Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8842415Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842507Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842592Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8843014Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8843122Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8843126Z 
2025-02-25T14:20:45.8843217Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.8843319Z Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.8843406Z Max relative difference: 1.86186015
2025-02-25T14:20:45.8843551Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8843629Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8843793Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8843868Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8844440Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8844551Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8844555Z 
2025-02-25T14:20:45.8844643Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8844741Z Max absolute difference: 2.90101642e+37
2025-02-25T14:20:45.8844826Z Max relative difference: 0.98973757
2025-02-25T14:20:45.8844967Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:20:45.8845042Z        1.330497e+31, 1.294462e+31])
2025-02-25T14:20:45.8845183Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:20:45.8845258Z        1.375141e+31, 1.337928e+31])
2025-02-25T14:20:45.8845696Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8845802Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8845806Z 
2025-02-25T14:20:45.8845902Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.8845997Z Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.8846201Z Max relative difference: 3.25828651
2025-02-25T14:20:45.8846287Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846365Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846446Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8846526Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846608Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846689Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8847100Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8847203Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8847207Z 
2025-02-25T14:20:45.8847294Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.8847396Z Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.8847482Z Max relative difference: 1.86186015
2025-02-25T14:20:45.8847624Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8847709Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8847850Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8847935Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8848374Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8848477Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8848481Z 
2025-02-25T14:20:45.8848573Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8848668Z Max absolute difference: 2.99183385e+37
2025-02-25T14:20:45.8848756Z Max relative difference: 0.98992197
2025-02-25T14:20:45.8848902Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:20:45.8848978Z        1.260980e+31, 1.222587e+31])
2025-02-25T14:20:45.8849124Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:20:45.8849210Z        1.193005e+31, 1.164854e+31])
2025-02-25T14:20:45.8849642Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8849746Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8849750Z 
2025-02-25T14:20:45.8849847Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.8849944Z Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.8850030Z Max relative difference: 7.72237896
2025-02-25T14:20:45.8850115Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850191Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850271Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8850351Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850635Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850722Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8851146Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8851257Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8851261Z 
2025-02-25T14:20:45.8851349Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.8851445Z Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.8851535Z Max relative difference: 4.0036592
2025-02-25T14:20:45.8851680Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8851756Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8851899Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8851978Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8852431Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8852531Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8852684Z 
2025-02-25T14:20:45.8852778Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8852874Z Max absolute difference: 5.0153284e+37
2025-02-25T14:20:45.8852961Z Max relative difference: 4.90769503
2025-02-25T14:20:45.8853103Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:20:45.8853180Z        2.088676e+31, 2.060278e+31])
2025-02-25T14:20:45.8853319Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:20:45.8853399Z        2.124305e+31, 2.101081e+31])
2025-02-25T14:20:45.8853745Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-25T14:20:45.8853849Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:20:45.8853853Z 
2025-02-25T14:20:45.8853948Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.8854044Z Max absolute difference: 2.25821059e+25
2025-02-25T14:20:45.8854128Z Max relative difference: 0.00054426
2025-02-25T14:20:45.8854272Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:20:45.8854391Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:20:45.8854519Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:20:45.8854652Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:20:45.8854762Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:20:45.8854880Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:20:45.8855264Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-25T14:20:45.8855380Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:20:45.8855384Z 
2025-02-25T14:20:45.8855473Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.8855570Z Max absolute difference: 1.93283629e+25
2025-02-25T14:20:45.8855656Z Max relative difference: 0.00029148
2025-02-25T14:20:45.8855800Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:20:45.8855917Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:20:45.8856032Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:20:45.8856165Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:20:45.8856271Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:20:45.8856392Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:20:45.8856722Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-25T14:20:45.8856808Z Arrays are not equal
2025-02-25T14:20:45.8856812Z 
2025-02-25T14:20:45.8856898Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:20:45.8857155Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.8857251Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.8857358Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.8857483Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.8857565Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.8857664Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.8858083Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-25T14:20:45.8858187Z Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:20:45.8858191Z 
2025-02-25T14:20:45.8858284Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:20:45.8858384Z Max absolute difference: 2.00640487e-05
2025-02-25T14:20:45.8858475Z Max relative difference: 2.06329455
2025-02-25T14:20:45.8858635Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.8858723Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.8858976Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.8859062Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.8859528Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-25T14:20:45.8859629Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8859633Z 
2025-02-25T14:20:45.8859717Z (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.8859851Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8859969Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8860083Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8860224Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8860331Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8860451Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8861017Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-25T14:20:45.8861120Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8861124Z 
2025-02-25T14:20:45.8861204Z (shapes (558,), (560,) mismatch)
2025-02-25T14:20:45.8861335Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8861450Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8861563Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8861692Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8861799Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8861922Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8862369Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-25T14:20:45.8862477Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8862481Z 
2025-02-25T14:20:45.8862568Z (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.8862690Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8862805Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8862919Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8863045Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8863150Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8863270Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8863843Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-25T14:20:45.8863957Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8863961Z 
2025-02-25T14:20:45.8864046Z (shapes (159,), (153,) mismatch)
2025-02-25T14:20:45.8864175Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8864286Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8864397Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8864525Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8864629Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8864748Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8865201Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-25T14:20:45.8865304Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8865308Z 
2025-02-25T14:20:45.8865530Z (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.8865657Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8865767Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8865880Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8866007Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8866113Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8866232Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8866684Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-25T14:20:45.8866792Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8866795Z 
2025-02-25T14:20:45.8866883Z (shapes (1466,), (1481,) mismatch)
2025-02-25T14:20:45.8867024Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:20:45.8867115Z        11152.962595, 11172.044815])
2025-02-25T14:20:45.8867254Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:20:45.8867335Z        11398.237865, 11111.204868])
2025-02-25T14:20:45.8867785Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-25T14:20:45.8867890Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8867893Z 
2025-02-25T14:20:45.8867980Z (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.8868107Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8868221Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8868341Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8868475Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8868584Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8868714Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8869158Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-25T14:20:45.8869261Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8869266Z 
2025-02-25T14:20:45.8869355Z (shapes (379,), (381,) mismatch)
2025-02-25T14:20:45.8869480Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:20:45.8869593Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:20:45.8869710Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:20:45.8869940Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:20:45.8870050Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:20:45.8870169Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:20:45.8870771Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-25T14:20:45.8870878Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8870882Z 
2025-02-25T14:20:45.8870976Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8871074Z Max absolute difference: 22.
2025-02-25T14:20:45.8871170Z Max relative difference: 0.8
2025-02-25T14:20:45.8871250Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8871333Z        [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8871410Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8871496Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8871571Z        [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8871652Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8872076Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-25T14:20:45.8872311Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8872315Z 
2025-02-25T14:20:45.8872409Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8872495Z Max absolute difference: 22.
2025-02-25T14:20:45.8872583Z Max relative difference: 0.8
2025-02-25T14:20:45.8872663Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8872744Z        [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8872820Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8872906Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8872980Z        [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8873061Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8873479Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-25T14:20:45.8873587Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8873591Z 
2025-02-25T14:20:45.8873683Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8873769Z Max absolute difference: 34
2025-02-25T14:20:45.8873871Z Max relative difference: 0.71428571
2025-02-25T14:20:45.8874014Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8874105Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8874235Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8874320Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8874732Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-25T14:20:45.8874834Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8874838Z 
2025-02-25T14:20:45.8874927Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8875013Z Max absolute difference: 34.
2025-02-25T14:20:45.8875115Z Max relative difference: 0.65
2025-02-25T14:20:45.8875193Z  x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8875274Z        [1.19e+04, 2.72e+02],
2025-02-25T14:20:45.8875358Z        [1.19e+04, 1.10e+02],...
2025-02-25T14:20:45.8875442Z  y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:20:45.8875517Z        [1.19e+04, 3.06e+02],
2025-02-25T14:20:45.8875597Z        [1.19e+04, 1.18e+02],...
2025-02-25T14:20:45.8876005Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:20:45.8876106Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8876110Z 
2025-02-25T14:20:45.8876203Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8876288Z Max absolute difference: 22
2025-02-25T14:20:45.8876377Z Max relative difference: 0.8
2025-02-25T14:20:45.8876504Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8876593Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8876840Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8876929Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8877346Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:20:45.8877442Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8877445Z 
2025-02-25T14:20:45.8877534Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8877619Z Max absolute difference: 22
2025-02-25T14:20:45.8877712Z Max relative difference: 0.8
2025-02-25T14:20:45.8877836Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8877924Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8878046Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8878130Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8878548Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:20:45.8878646Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8878738Z 
2025-02-25T14:20:45.8878841Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8878927Z Max absolute difference: 34
2025-02-25T14:20:45.8879022Z Max relative difference: 0.71428571
2025-02-25T14:20:45.8879152Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8879234Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8879361Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8879444Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8879855Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:20:45.8879950Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8879960Z 
2025-02-25T14:20:45.8880055Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8880139Z Max absolute difference: 34
2025-02-25T14:20:45.8880230Z Max relative difference: 0.65
2025-02-25T14:20:45.8880365Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8880450Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8880686Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8880769Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8881237Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-25T14:20:45.8881340Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8881345Z 
2025-02-25T14:20:45.8881439Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8881530Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8881630Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8881773Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8881855Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8882000Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8882081Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8882547Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-25T14:20:45.8882651Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8882655Z 
2025-02-25T14:20:45.8882749Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8882843Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8882936Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8883072Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8883154Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8883413Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8883498Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8883961Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-25T14:20:45.8884066Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8884070Z 
2025-02-25T14:20:45.8884165Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8884254Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8884346Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8884481Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8884562Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8884699Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8884778Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8885242Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-25T14:20:45.8885345Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8885483Z 
2025-02-25T14:20:45.8885579Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8885669Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8885765Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8885901Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8885984Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8886120Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8886199Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8886659Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-25T14:20:45.8886759Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8886772Z 
2025-02-25T14:20:45.8886865Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8886954Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8887056Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8887193Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8887274Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8887409Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8887488Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8887946Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-25T14:20:45.8888051Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8888054Z 
2025-02-25T14:20:45.8888149Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8888239Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8888340Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8888477Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8888556Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8888699Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8888781Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8889244Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-25T14:20:45.8889348Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8889351Z 
2025-02-25T14:20:45.8889438Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8889535Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8889637Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8889774Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8889854Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8890080Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8890164Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8890736Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-25T14:20:45.8890843Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8890847Z 
2025-02-25T14:20:45.8890934Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8891032Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8891132Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8891268Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8891351Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8891487Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8891569Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8892040Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-25T14:20:45.8892267Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8892271Z 
2025-02-25T14:20:45.8892360Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8892457Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8892551Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8892688Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8892768Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8892905Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8892990Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8893451Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-25T14:20:45.8893564Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8893568Z 
2025-02-25T14:20:45.8893655Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8893756Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8893858Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8893996Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8894083Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8894216Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8894296Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8894761Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-25T14:20:45.8894864Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8894867Z 
2025-02-25T14:20:45.8894953Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8895051Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8895150Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8895288Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8895376Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8895509Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8895593Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8896054Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-25T14:20:45.8896152Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8896156Z 
2025-02-25T14:20:45.8896244Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8896344Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8896439Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8896576Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8896781Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8896920Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8897005Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8897474Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-25T14:20:45.8897578Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8897582Z 
2025-02-25T14:20:45.8897669Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8897763Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8897859Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8897998Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8898078Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8898213Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8898300Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8898769Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-25T14:20:45.8898963Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8898967Z 
2025-02-25T14:20:45.8899053Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8899148Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8899245Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8899386Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8899476Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8899613Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8899701Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8900171Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-25T14:20:45.8900283Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8900286Z 
2025-02-25T14:20:45.8900381Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8900491Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8900690Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8900828Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8900917Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8901058Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8901144Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8901611Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-25T14:20:45.8901718Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8901722Z 
2025-02-25T14:20:45.8901810Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8901922Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8902023Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8902162Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8902256Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8902392Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8902485Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8902913Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:20:45.8903014Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8903017Z 
2025-02-25T14:20:45.8903102Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8903198Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8903292Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8903431Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8903646Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8903787Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8903871Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8904309Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:20:45.8904417Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8904421Z 
2025-02-25T14:20:45.8904511Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8904606Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8904690Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8904834Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8904915Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8905056Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8905139Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8905570Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-25T14:20:45.8905790Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8905794Z 
2025-02-25T14:20:45.8905881Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8905987Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8906076Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8906229Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8906313Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8906448Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8906530Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8906956Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-25T14:20:45.8907070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8907074Z 
2025-02-25T14:20:45.8907162Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8907263Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8907354Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8907499Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8907580Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8907715Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8907800Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8908221Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:20:45.8908330Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8908334Z 
2025-02-25T14:20:45.8908422Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8908521Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8908620Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8908760Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8908846Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8908984Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8909065Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8909484Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:20:45.8909593Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8909597Z 
2025-02-25T14:20:45.8909686Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8909790Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8909883Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8910031Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8910122Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8910378Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8910471Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8911071Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-25T14:20:45.8911187Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8911191Z 
2025-02-25T14:20:45.8911284Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8911390Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8911481Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8911630Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8911722Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8911861Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8911950Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8912382Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-25T14:20:45.8912487Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8912617Z 
2025-02-25T14:20:45.8912707Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8912807Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8912896Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8913039Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8913120Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8913257Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8913339Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8913755Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-25T14:20:45.8913857Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8913865Z 
2025-02-25T14:20:45.8913954Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8914051Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8914143Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8914292Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8914367Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8914510Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8914592Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8915018Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-25T14:20:45.8915121Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8915125Z 
2025-02-25T14:20:45.8915213Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8915307Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8915395Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8915545Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8915621Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8915765Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8915850Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8916275Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-25T14:20:45.8916377Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8916380Z 
2025-02-25T14:20:45.8916469Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8916563Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8916649Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8916794Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8916870Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8917133Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8917222Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8917648Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-25T14:20:45.8917756Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8917760Z 
2025-02-25T14:20:45.8917847Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8917941Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8918027Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8918169Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8918244Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8918383Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8918465Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8918891Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-25T14:20:45.8918994Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8919081Z 
2025-02-25T14:20:45.8919171Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8919268Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8919358Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8919502Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8919578Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8919722Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8919805Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8920227Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-25T14:20:45.8920327Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8920331Z 
2025-02-25T14:20:45.8920422Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8920626Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8920716Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8920865Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8920940Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8921078Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8921163Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8921581Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-25T14:20:45.8921682Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8921685Z 
2025-02-25T14:20:45.8921772Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8921867Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8921955Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8922101Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8922177Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8922319Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8922406Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8922826Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-25T14:20:45.8922925Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8922928Z 
2025-02-25T14:20:45.8923016Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8923111Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8923198Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8923337Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8923415Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8923682Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8923767Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8924036Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 795.39s (0:13:15) =
2025-02-25T14:20:45.8924468Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8924473Z 
2025-02-25T14:20:45.8925154Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-25T14:20:45.8925158Z 
2025-02-25T14:20:45.8925476Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8925486Z 
2025-02-25T14:20:45.8926187Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-25T14:20:45.8926192Z 
2025-02-25T14:20:45.8926512Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8926631Z 
2025-02-25T14:20:45.8927330Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-25T14:20:45.8927334Z 
2025-02-25T14:20:45.8927646Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8927649Z 
2025-02-25T14:20:45.8928342Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-25T14:20:45.8928346Z 
2025-02-25T14:20:45.8928678Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8928682Z 
2025-02-25T14:20:45.8929335Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-25T14:20:45.8929345Z 
2025-02-25T14:20:45.8929656Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8929660Z 
2025-02-25T14:20:45.8930352Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-25T14:20:45.8930356Z 
2025-02-25T14:20:45.8930767Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8930771Z 
2025-02-25T14:20:45.8931430Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-25T14:20:45.8931438Z 
2025-02-25T14:20:45.8931744Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8931748Z 
2025-02-25T14:20:45.8932390Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-25T14:20:45.8932395Z 
2025-02-25T14:20:45.8932697Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8932707Z 
2025-02-25T14:20:45.8933536Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-25T14:20:45.8933541Z 
2025-02-25T14:20:45.8933858Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8933867Z 
2025-02-25T14:20:45.8934549Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-25T14:20:45.8934553Z 
2025-02-25T14:20:45.8934863Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8934867Z 
2025-02-25T14:20:45.8935521Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-25T14:20:45.8935526Z 
2025-02-25T14:20:45.8935841Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8935845Z 
2025-02-25T14:20:45.8936538Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-25T14:20:45.8936650Z 
2025-02-25T14:20:45.8936968Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8936972Z 
2025-02-25T14:20:45.8937656Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-25T14:20:45.8937660Z 
2025-02-25T14:20:45.8937971Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8937976Z 
2025-02-25T14:20:45.8938626Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-25T14:20:45.8938634Z 
2025-02-25T14:20:45.8938940Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8938944Z 
2025-02-25T14:20:45.8939633Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-25T14:20:45.8939637Z 
2025-02-25T14:20:45.8939944Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8939948Z 
2025-02-25T14:20:45.8940748Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-25T14:20:45.8940753Z 
2025-02-25T14:20:45.8941070Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8941079Z 
2025-02-25T14:20:45.8941768Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-25T14:20:45.8941772Z 
2025-02-25T14:20:45.8942089Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8942093Z 
2025-02-25T14:20:45.8942752Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-25T14:20:45.8942757Z 
2025-02-25T14:20:45.8943202Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8943207Z 
2025-02-25T14:20:45.8943911Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-25T14:20:45.8943919Z 
2025-02-25T14:20:45.8944233Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8944237Z 
2025-02-25T14:20:45.8944922Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-25T14:20:45.8944926Z 
2025-02-25T14:20:45.8945236Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8945240Z 
2025-02-25T14:20:45.8945894Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-25T14:20:45.8946015Z 
2025-02-25T14:20:45.8946325Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8946329Z 
2025-02-25T14:20:45.8946985Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-25T14:20:45.8946988Z 
2025-02-25T14:20:45.8947297Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8947301Z 
2025-02-25T14:20:45.8947960Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-25T14:20:45.8947964Z 
2025-02-25T14:20:45.8948279Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8948290Z 
2025-02-25T14:20:45.8948930Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-25T14:20:45.8948934Z 
2025-02-25T14:20:45.8949248Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8949251Z 
2025-02-25T14:20:45.8949912Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-25T14:20:45.8949916Z 
2025-02-25T14:20:45.8950226Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8950230Z 
2025-02-25T14:20:45.8951072Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-25T14:20:45.8951085Z 
2025-02-25T14:20:45.8951400Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8951404Z 
2025-02-25T14:20:45.8952047Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-25T14:20:45.8952051Z 
2025-02-25T14:20:45.8952366Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8952370Z 
2025-02-25T14:20:45.8953172Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-25T14:20:45.8953185Z 
2025-02-25T14:20:45.8953499Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8953503Z 
2025-02-25T14:20:45.8954202Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-25T14:20:45.8954207Z 
2025-02-25T14:20:45.8954516Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8954520Z 
2025-02-25T14:20:45.8955180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-25T14:20:45.8955183Z 
2025-02-25T14:20:45.8955501Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8955504Z 
2025-02-25T14:20:45.8956266Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-25T14:20:45.8956270Z 
2025-02-25T14:20:45.8956586Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8956590Z 
2025-02-25T14:20:45.8957245Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-25T14:20:45.8957249Z 
2025-02-25T14:20:45.8957557Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8957561Z 
2025-02-25T14:20:45.8958242Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-25T14:20:45.8958250Z 
2025-02-25T14:20:45.8958558Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8958569Z 
2025-02-25T14:20:45.8959211Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-25T14:20:45.8959215Z 
2025-02-25T14:20:45.8959530Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8959534Z 
2025-02-25T14:20:45.8960181Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-25T14:20:45.8960190Z 
2025-02-25T14:20:45.8960499Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8960612Z 
2025-02-25T14:20:45.8961306Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-25T14:20:45.8961310Z 
2025-02-25T14:20:45.8961616Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8961620Z 
2025-02-25T14:20:45.8962274Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-25T14:20:45.8962278Z 
2025-02-25T14:20:45.8962711Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8962716Z 
2025-02-25T14:20:45.8963363Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-25T14:20:45.8963371Z 
2025-02-25T14:20:45.8963682Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8963686Z 
2025-02-25T14:20:45.8964383Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-25T14:20:45.8964387Z 
2025-02-25T14:20:45.8964693Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8964697Z 
2025-02-25T14:20:45.8965349Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-25T14:20:45.8965460Z 
2025-02-25T14:20:45.8965768Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8965777Z 
2025-02-25T14:20:45.8966419Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-25T14:20:45.8966423Z 
2025-02-25T14:20:48.9416631Z ##[error]Process completed with exit code 1.
2025-02-25T14:20:48.9501103Z Post job cleanup.
2025-02-25T14:20:48.9545700Z Post job cleanup.
2025-02-25T14:20:49.0955778Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-02-25T14:20:49.0965443Z Removing micromamba run shell ...
2025-02-25T14:20:49.0970913Z ##[group]Deinitialize micromamba for bash
2025-02-25T14:20:49.0991807Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:20:49.1097970Z Resetting RC file "/home/runner/.bashrc"
2025-02-25T14:20:49.1098704Z Deleting config for root prefix 
2025-02-25T14:20:49.1099437Z Clearing mamba executable environment variable
2025-02-25T14:20:49.1101458Z Removing the following in your "/home/runner/.bashrc" file
2025-02-25T14:20:49.1101978Z # >>> mamba initialize >>>
2025-02-25T14:20:49.1102292Z ...
2025-02-25T14:20:49.1102544Z # <<< mamba initialize <<<
2025-02-25T14:20:49.1133612Z Removing mamba initialize block from .bash_profile
2025-02-25T14:20:49.1150348Z ##[endgroup]
2025-02-25T14:20:49.1155004Z Removing environment tardis from auto-activate bash ...
2025-02-25T14:20:49.1300153Z Post job cleanup.
2025-02-25T14:20:49.1341396Z Post job cleanup.
2025-02-25T14:20:49.2330029Z [command]/usr/bin/git version
2025-02-25T14:20:49.2375129Z git version 2.48.1
2025-02-25T14:20:49.2418570Z Temporarily overriding HOME='/home/runner/work/_temp/7cdbb0c8-1807-42c1-8c73-08c754bffdda' before making global git config changes
2025-02-25T14:20:49.2420215Z Adding repository directory to the temporary git global config as a safe directory
2025-02-25T14:20:49.2425863Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-25T14:20:49.2462371Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-25T14:20:49.2496680Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-25T14:20:49.2754341Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-25T14:20:49.2777493Z http.https://github.com/.extraheader
2025-02-25T14:20:49.2790319Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-25T14:20:49.2825116Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-25T14:20:49.3201131Z Post job cleanup.
2025-02-25T14:20:49.4183762Z [command]/usr/bin/git version
2025-02-25T14:20:49.4225979Z git version 2.48.1
2025-02-25T14:20:49.4268458Z Temporarily overriding HOME='/home/runner/work/_temp/262fcbe0-aa85-4ff9-a505-c20f6cde4c7f' before making global git config changes
2025-02-25T14:20:49.4269799Z Adding repository directory to the temporary git global config as a safe directory
2025-02-25T14:20:49.4274672Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-25T14:20:49.4309071Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-25T14:20:49.4343664Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-25T14:20:49.4589841Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-25T14:20:49.4611691Z http.https://github.com/.extraheader
2025-02-25T14:20:49.4624419Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-25T14:20:49.4655085Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-25T14:20:49.5026342Z Cleaning up orphan processes
