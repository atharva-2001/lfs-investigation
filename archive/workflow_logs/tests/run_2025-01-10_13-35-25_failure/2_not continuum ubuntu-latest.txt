2025-01-10T13:35:26.5143272Z Requested labels: ubuntu-latest
2025-01-10T13:35:26.5143440Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2935/merge
2025-01-10T13:35:26.5143512Z Waiting for a runner to pick up this job...
2025-01-10T13:35:26.7392107Z Job is waiting for a hosted runner to come online.
2025-01-10T13:35:29.9992370Z Job is about to start running on the hosted runner: GitHub Actions 52 (hosted)
2025-01-10T13:35:31.4368825Z Current runner version: '2.321.0'
2025-01-10T13:35:31.4396333Z ##[group]Operating System
2025-01-10T13:35:31.4397256Z Ubuntu
2025-01-10T13:35:31.4397754Z 24.04.1
2025-01-10T13:35:31.4398202Z LTS
2025-01-10T13:35:31.4398767Z ##[endgroup]
2025-01-10T13:35:31.4399353Z ##[group]Runner Image
2025-01-10T13:35:31.4399912Z Image: ubuntu-24.04
2025-01-10T13:35:31.4400524Z Version: 20250105.1.0
2025-01-10T13:35:31.4401581Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-10T13:35:31.4402910Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-10T13:35:31.4404065Z ##[endgroup]
2025-01-10T13:35:31.4404604Z ##[group]Runner Image Provisioner
2025-01-10T13:35:31.4405174Z 2.0.404.1
2025-01-10T13:35:31.4405723Z ##[endgroup]
2025-01-10T13:35:31.4407843Z ##[group]GITHUB_TOKEN Permissions
2025-01-10T13:35:31.4409871Z Actions: read
2025-01-10T13:35:31.4410639Z Attestations: read
2025-01-10T13:35:31.4411310Z Checks: read
2025-01-10T13:35:31.4411809Z Contents: read
2025-01-10T13:35:31.4412258Z Deployments: read
2025-01-10T13:35:31.4412862Z Discussions: read
2025-01-10T13:35:31.4413370Z Issues: read
2025-01-10T13:35:31.4414064Z Metadata: read
2025-01-10T13:35:31.4414670Z Packages: read
2025-01-10T13:35:31.4415162Z Pages: read
2025-01-10T13:35:31.4415598Z PullRequests: read
2025-01-10T13:35:31.4416209Z RepositoryProjects: read
2025-01-10T13:35:31.4416761Z SecurityEvents: read
2025-01-10T13:35:31.4417222Z Statuses: read
2025-01-10T13:35:31.4417809Z ##[endgroup]
2025-01-10T13:35:31.4420846Z Secret source: None
2025-01-10T13:35:31.4421542Z Prepare workflow directory
2025-01-10T13:35:31.5077561Z Prepare all required actions
2025-01-10T13:35:31.5114724Z Getting action download info
2025-01-10T13:35:31.6841113Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-10T13:35:31.7834797Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-10T13:35:31.9351789Z Complete job name: not continuum ubuntu-latest 
2025-01-10T13:35:32.0089495Z ##[group]Run actions/checkout@v4
2025-01-10T13:35:32.0090340Z with:
2025-01-10T13:35:32.0090738Z   repository: tardis-sn/tardis
2025-01-10T13:35:32.0091395Z   token: ***
2025-01-10T13:35:32.0091773Z   ssh-strict: true
2025-01-10T13:35:32.0092171Z   ssh-user: git
2025-01-10T13:35:32.0092582Z   persist-credentials: true
2025-01-10T13:35:32.0093025Z   clean: true
2025-01-10T13:35:32.0093423Z   sparse-checkout-cone-mode: true
2025-01-10T13:35:32.0094199Z   fetch-depth: 1
2025-01-10T13:35:32.0094592Z   fetch-tags: false
2025-01-10T13:35:32.0095004Z   show-progress: true
2025-01-10T13:35:32.0095416Z   lfs: false
2025-01-10T13:35:32.0095786Z   submodules: false
2025-01-10T13:35:32.0096193Z   set-safe-directory: true
2025-01-10T13:35:32.0096893Z env:
2025-01-10T13:35:32.0097268Z   CACHE_NUMBER: 0
2025-01-10T13:35:32.0098414Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:32.0099690Z   CODECOV_TOKEN: 
2025-01-10T13:35:32.0100083Z ##[endgroup]
2025-01-10T13:35:32.2758921Z Syncing repository: tardis-sn/tardis
2025-01-10T13:35:32.2761027Z ##[group]Getting Git version info
2025-01-10T13:35:32.2761706Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-10T13:35:32.2762625Z [command]/usr/bin/git version
2025-01-10T13:35:32.2915111Z git version 2.47.1
2025-01-10T13:35:32.2945462Z ##[endgroup]
2025-01-10T13:35:32.2959920Z Temporarily overriding HOME='/home/runner/work/_temp/4b546793-7a90-4dda-9957-f332e2929229' before making global git config changes
2025-01-10T13:35:32.2961295Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:35:32.2965568Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T13:35:32.3006109Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-10T13:35:32.3010226Z ##[group]Initializing the repository
2025-01-10T13:35:32.3014215Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-10T13:35:32.3118841Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:35:32.3119889Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:35:32.3120762Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:35:32.3121422Z hint:
2025-01-10T13:35:32.3121887Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:35:32.3122448Z hint:
2025-01-10T13:35:32.3122983Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:35:32.3124447Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:35:32.3125193Z hint:
2025-01-10T13:35:32.3125567Z hint: 	git branch -m <name>
2025-01-10T13:35:32.3137490Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-10T13:35:32.3149355Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-10T13:35:32.3193047Z ##[endgroup]
2025-01-10T13:35:32.3193994Z ##[group]Disabling automatic garbage collection
2025-01-10T13:35:32.3197422Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T13:35:32.3226984Z ##[endgroup]
2025-01-10T13:35:32.3228016Z ##[group]Setting up auth
2025-01-10T13:35:32.3234186Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:35:32.3264211Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:35:32.3642684Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:35:32.3672518Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:35:32.3905992Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:35:32.3943080Z ##[endgroup]
2025-01-10T13:35:32.3944312Z ##[group]Fetching the repository
2025-01-10T13:35:32.3954997Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +6bb3492707f1bf8b6c612b72fba961366f4d0cb5:refs/remotes/pull/2935/merge
2025-01-10T13:35:33.5424591Z From https://github.com/tardis-sn/tardis
2025-01-10T13:35:33.5425833Z  * [new ref]         6bb3492707f1bf8b6c612b72fba961366f4d0cb5 -> pull/2935/merge
2025-01-10T13:35:33.5464411Z ##[endgroup]
2025-01-10T13:35:33.5465232Z ##[group]Determining the checkout info
2025-01-10T13:35:33.5467314Z ##[endgroup]
2025-01-10T13:35:33.5474541Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T13:35:33.5527908Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:35:33.5559808Z ##[group]Checking out the ref
2025-01-10T13:35:33.5565384Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2935/merge
2025-01-10T13:35:33.7571458Z Note: switching to 'refs/remotes/pull/2935/merge'.
2025-01-10T13:35:33.7572469Z 
2025-01-10T13:35:33.7573493Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-10T13:35:33.7575639Z changes and commit them, and you can discard any commits you make in this
2025-01-10T13:35:33.7576967Z state without impacting any branches by switching back to a branch.
2025-01-10T13:35:33.7577648Z 
2025-01-10T13:35:33.7578133Z If you want to create a new branch to retain commits you create, you may
2025-01-10T13:35:33.7579195Z do so (now or later) by using -c with the switch command. Example:
2025-01-10T13:35:33.7579825Z 
2025-01-10T13:35:33.7580144Z   git switch -c <new-branch-name>
2025-01-10T13:35:33.7580670Z 
2025-01-10T13:35:33.7580972Z Or undo this operation with:
2025-01-10T13:35:33.7581446Z 
2025-01-10T13:35:33.7582054Z   git switch -
2025-01-10T13:35:33.7582468Z 
2025-01-10T13:35:33.7583143Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-10T13:35:33.7584234Z 
2025-01-10T13:35:33.7585181Z HEAD is now at 6bb3492 Merge 356c0d35ff4e1880a25ad28dff47e1288de13362 into 0fc2c76326b8122f88ddaf369f17a637bbe37c63
2025-01-10T13:35:33.7694791Z ##[endgroup]
2025-01-10T13:35:33.7698402Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T13:35:33.7699843Z 6bb3492707f1bf8b6c612b72fba961366f4d0cb5
2025-01-10T13:35:33.8029952Z Prepare all required actions
2025-01-10T13:35:33.8031379Z Getting action download info
2025-01-10T13:35:33.9314041Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-10T13:35:34.0675914Z ##[group]Run ./.github/actions/setup_lfs
2025-01-10T13:35:34.0676245Z with:
2025-01-10T13:35:34.0676539Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-10T13:35:34.0676888Z env:
2025-01-10T13:35:34.0677135Z   CACHE_NUMBER: 0
2025-01-10T13:35:34.0677812Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:34.0678506Z   CODECOV_TOKEN: 
2025-01-10T13:35:34.0678721Z ##[endgroup]
2025-01-10T13:35:34.0802359Z ##[group]Run actions/checkout@v4
2025-01-10T13:35:34.0802666Z with:
2025-01-10T13:35:34.0802926Z   repository: tardis-sn/tardis-regression-data
2025-01-10T13:35:34.0803258Z   path: tardis-regression-data
2025-01-10T13:35:34.0803890Z   token: ***
2025-01-10T13:35:34.0804122Z   ssh-strict: true
2025-01-10T13:35:34.0804365Z   ssh-user: git
2025-01-10T13:35:34.0804596Z   persist-credentials: true
2025-01-10T13:35:34.0804860Z   clean: true
2025-01-10T13:35:34.0805095Z   sparse-checkout-cone-mode: true
2025-01-10T13:35:34.0805365Z   fetch-depth: 1
2025-01-10T13:35:34.0805593Z   fetch-tags: false
2025-01-10T13:35:34.0805825Z   show-progress: true
2025-01-10T13:35:34.0806048Z   lfs: false
2025-01-10T13:35:34.0806270Z   submodules: false
2025-01-10T13:35:34.0806501Z   set-safe-directory: true
2025-01-10T13:35:34.0806737Z env:
2025-01-10T13:35:34.0806931Z   CACHE_NUMBER: 0
2025-01-10T13:35:34.0807601Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:34.0808299Z   CODECOV_TOKEN: 
2025-01-10T13:35:34.0808516Z ##[endgroup]
2025-01-10T13:35:34.1753884Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-10T13:35:34.1761057Z ##[group]Getting Git version info
2025-01-10T13:35:34.1761991Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-10T13:35:34.1804661Z [command]/usr/bin/git version
2025-01-10T13:35:34.1849734Z git version 2.47.1
2025-01-10T13:35:34.1875746Z ##[endgroup]
2025-01-10T13:35:34.1889944Z Temporarily overriding HOME='/home/runner/work/_temp/664d5cce-8bcf-429d-b181-56bd007e83d4' before making global git config changes
2025-01-10T13:35:34.1891482Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:35:34.1896475Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:35:34.1927551Z ##[group]Initializing the repository
2025-01-10T13:35:34.1933143Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:35:34.1970745Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:35:34.1971819Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:35:34.1972719Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:35:34.1973411Z hint:
2025-01-10T13:35:34.1974156Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:35:34.1974799Z hint:
2025-01-10T13:35:34.1975430Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:35:34.1976427Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:35:34.1977558Z hint:
2025-01-10T13:35:34.1977994Z hint: 	git branch -m <name>
2025-01-10T13:35:34.1978994Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-10T13:35:34.1984971Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:35:34.2016278Z ##[endgroup]
2025-01-10T13:35:34.2016746Z ##[group]Disabling automatic garbage collection
2025-01-10T13:35:34.2022647Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T13:35:34.2050673Z ##[endgroup]
2025-01-10T13:35:34.2051341Z ##[group]Setting up auth
2025-01-10T13:35:34.2057167Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:35:34.2085546Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:35:34.2312462Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:35:34.2342093Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:35:34.2596632Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:35:34.2642912Z ##[endgroup]
2025-01-10T13:35:34.2643974Z ##[group]Determining the default branch
2025-01-10T13:35:34.2647687Z Retrieving the default branch name
2025-01-10T13:35:34.4826548Z Default branch 'main'
2025-01-10T13:35:34.4827837Z ##[endgroup]
2025-01-10T13:35:34.4828534Z ##[group]Fetching the repository
2025-01-10T13:35:34.4835773Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-10T13:35:34.7705473Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:35:34.7707938Z  * [new branch]      main       -> origin/main
2025-01-10T13:35:34.7730956Z ##[endgroup]
2025-01-10T13:35:34.7731791Z ##[group]Determining the checkout info
2025-01-10T13:35:34.7734871Z ##[endgroup]
2025-01-10T13:35:34.7739751Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T13:35:34.7779298Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:35:34.7806538Z ##[group]Checking out the ref
2025-01-10T13:35:34.7809904Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-10T13:35:34.9071478Z Switched to a new branch 'main'
2025-01-10T13:35:34.9072510Z branch 'main' set up to track 'origin/main'.
2025-01-10T13:35:34.9362204Z ##[endgroup]
2025-01-10T13:35:34.9403898Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T13:35:34.9426959Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-10T13:35:34.9564471Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-10T13:35:34.9565071Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-10T13:35:34.9597793Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:35:34.9598161Z env:
2025-01-10T13:35:34.9598369Z   CACHE_NUMBER: 0
2025-01-10T13:35:34.9599004Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:34.9599697Z   CODECOV_TOKEN: 
2025-01-10T13:35:34.9599919Z ##[endgroup]
2025-01-10T13:35:35.1100354Z ##[group]Run actions/cache/restore@v4
2025-01-10T13:35:35.1100700Z with:
2025-01-10T13:35:35.1100944Z   path: tardis-regression-data/.git/lfs
2025-01-10T13:35:35.1101459Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:35:35.1101965Z   enableCrossOsArchive: false
2025-01-10T13:35:35.1102259Z   fail-on-cache-miss: false
2025-01-10T13:35:35.1102872Z   lookup-only: false
2025-01-10T13:35:35.1103105Z env:
2025-01-10T13:35:35.1103307Z   CACHE_NUMBER: 0
2025-01-10T13:35:35.1104289Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:35.1104999Z   CODECOV_TOKEN: 
2025-01-10T13:35:35.1105223Z ##[endgroup]
2025-01-10T13:35:36.3545858Z Received 331350016 of 1708418946 (19.4%), 315.1 MBs/sec
2025-01-10T13:35:37.3565039Z Received 775946240 of 1708418946 (45.4%), 368.9 MBs/sec
2025-01-10T13:35:38.3573425Z Received 1216348160 of 1708418946 (71.2%), 385.8 MBs/sec
2025-01-10T13:35:39.3664969Z Received 1619001344 of 1708418946 (94.8%), 384.6 MBs/sec
2025-01-10T13:35:39.6155630Z Cache Size: ~1629 MB (1708418946 B)
2025-01-10T13:35:39.6200234Z [command]/usr/bin/tar -xf /home/runner/work/_temp/86ca03b0-cdcb-4d6a-9ac9-94cd81335301/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:35:40.3660274Z Received 1708418946 of 1708418946 (100.0%), 324.9 MBs/sec
2025-01-10T13:35:46.0726858Z Cache restored successfully
2025-01-10T13:35:46.4030102Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:35:46.4249908Z ##[group]Run git lfs checkout
2025-01-10T13:35:46.4250171Z [36;1mgit lfs checkout[0m
2025-01-10T13:35:46.4276828Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:35:46.4277142Z env:
2025-01-10T13:35:46.4277307Z   CACHE_NUMBER: 0
2025-01-10T13:35:46.4277926Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:46.4278587Z   CODECOV_TOKEN: 
2025-01-10T13:35:46.4278766Z ##[endgroup]
2025-01-10T13:35:57.7704008Z Checking out LFS objects: 100% (204/204), 3.5 GB | 326 MB/s, done.
2025-01-10T13:36:01.1122609Z Prepare all required actions
2025-01-10T13:36:01.1122957Z Getting action download info
2025-01-10T13:36:01.2296539Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-10T13:36:01.4136147Z ##[group]Run ./.github/actions/setup_env
2025-01-10T13:36:01.4136420Z with:
2025-01-10T13:36:01.4136601Z   os-label: linux-64
2025-01-10T13:36:01.4136791Z env:
2025-01-10T13:36:01.4136946Z   CACHE_NUMBER: 0
2025-01-10T13:36:01.4137542Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:01.4138161Z   CODECOV_TOKEN: 
2025-01-10T13:36:01.4138337Z ##[endgroup]
2025-01-10T13:36:01.4159652Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-10T13:36:01.4160156Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-10T13:36:01.4160604Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-10T13:36:01.4186841Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:36:01.4187171Z env:
2025-01-10T13:36:01.4187332Z   CACHE_NUMBER: 0
2025-01-10T13:36:01.4187933Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:01.4188580Z   CODECOV_TOKEN: 
2025-01-10T13:36:01.4188760Z ##[endgroup]
2025-01-10T13:36:01.4496017Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-10T13:36:01.4496286Z with:
2025-01-10T13:36:01.4496478Z   environment-file: conda-linux-64.lock
2025-01-10T13:36:01.4496903Z   cache-environment-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T13:36:01.4497462Z   cache-downloads-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T13:36:01.4497868Z   environment-name: tardis
2025-01-10T13:36:01.4498088Z   cache-environment: true
2025-01-10T13:36:01.4498321Z   cache-downloads: true
2025-01-10T13:36:01.4498514Z env:
2025-01-10T13:36:01.4498674Z   CACHE_NUMBER: 0
2025-01-10T13:36:01.4499474Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:01.4500125Z   CODECOV_TOKEN: 
2025-01-10T13:36:01.4500308Z ##[endgroup]
2025-01-10T13:36:01.5866817Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-10T13:36:01.5876800Z ##[group]Install micromamba
2025-01-10T13:36:01.8128627Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-10T13:36:01.8129517Z ##[endgroup]
2025-01-10T13:36:01.8130080Z Adding conda-forge to condarc channels ...
2025-01-10T13:36:01.8140157Z ##[group]Initialize micromamba for bash.
2025-01-10T13:36:01.8156533Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:01.8265928Z Modifying RC file "/home/runner/.bashrc"
2025-01-10T13:36:01.8266866Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-10T13:36:01.8267744Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-10T13:36:01.8268514Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-10T13:36:01.8268977Z 
2025-01-10T13:36:01.8269111Z # >>> mamba initialize >>>
2025-01-10T13:36:01.8269575Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-10T13:36:01.8270202Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-10T13:36:01.8270809Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-10T13:36:01.8271573Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-10T13:36:01.8272305Z if [ $? -eq 0 ]; then
2025-01-10T13:36:01.8272633Z     eval "$__mamba_setup"
2025-01-10T13:36:01.8272967Z else
2025-01-10T13:36:01.8273917Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-10T13:36:01.8274544Z fi
2025-01-10T13:36:01.8274818Z unset __mamba_setup
2025-01-10T13:36:01.8275059Z # <<< mamba initialize <<<
2025-01-10T13:36:01.8275196Z 
2025-01-10T13:36:01.8285391Z Moving mamba initialize block to .bash_profile
2025-01-10T13:36:01.8298559Z ##[endgroup]
2025-01-10T13:36:01.8300011Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-10T13:36:02.9350108Z Received 239075328 of 358598106 (66.7%), 227.8 MBs/sec
2025-01-10T13:36:03.3485321Z Cache Size: ~342 MB (358598106 B)
2025-01-10T13:36:03.3522170Z [command]/usr/bin/tar -xf /home/runner/work/_temp/4b7b9da5-4f2a-42db-b39a-c3f8e1d86dbb/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:36:03.8110632Z Cache restored successfully
2025-01-10T13:36:03.8846214Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64`
2025-01-10T13:36:03.8848140Z ##[endgroup]
2025-01-10T13:36:03.8859641Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-10T13:36:03.9367933Z Received 358598106 of 358598106 (100.0%), 170.7 MBs/sec
2025-01-10T13:36:04.9438983Z Received 239075328 of 446689380 (53.5%), 228.0 MBs/sec
2025-01-10T13:36:05.7285347Z Cache Size: ~426 MB (446689380 B)
2025-01-10T13:36:05.7339694Z [command]/usr/bin/tar -xf /home/runner/work/_temp/096d860d-e495-4d87-9235-5f5098392db1/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T13:36:05.9415136Z Received 446689380 of 446689380 (100.0%), 212.9 MBs/sec
2025-01-10T13:36:11.3952864Z Cache restored successfully
2025-01-10T13:36:11.4712713Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614`
2025-01-10T13:36:11.4715133Z ##[endgroup]
2025-01-10T13:36:11.4715609Z Adding environment tardis to auto-activate bash ...
2025-01-10T13:36:11.4725030Z Generating micromamba run shell.
2025-01-10T13:36:11.4735882Z ##[endgroup]
2025-01-10T13:36:11.4741159Z Set environment variables.
2025-01-10T13:36:11.4745298Z ##[group]micromamba info
2025-01-10T13:36:11.4749046Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-10T13:36:11.4986839Z 
2025-01-10T13:36:11.4987293Z        libmamba version : 1.5.10
2025-01-10T13:36:11.4987774Z      micromamba version : 1.5.10
2025-01-10T13:36:11.4988473Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-10T13:36:11.4989388Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-10T13:36:11.4990102Z        envs directories : /home/runner/micromamba/envs
2025-01-10T13:36:11.4990660Z           package cache : /home/runner/micromamba/pkgs
2025-01-10T13:36:11.4991215Z                           /home/runner/.mamba/pkgs
2025-01-10T13:36:11.4991674Z             environment : tardis
2025-01-10T13:36:11.4992161Z            env location : /home/runner/micromamba/envs/tardis
2025-01-10T13:36:11.4992726Z       user config files : /home/runner/.mambarc
2025-01-10T13:36:11.4993396Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:11.4994227Z        virtual packages : __unix=0=0
2025-01-10T13:36:11.4994653Z                           __linux=6.8.0=0
2025-01-10T13:36:11.4995064Z                           __glibc=2.39=0
2025-01-10T13:36:11.4995543Z                           __archspec=1=x86_64_v3
2025-01-10T13:36:11.4996154Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-10T13:36:11.4996818Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-10T13:36:11.4997397Z        base environment : /home/runner/micromamba
2025-01-10T13:36:11.4997887Z                platform : linux-64
2025-01-10T13:36:11.5004697Z ##[endgroup]
2025-01-10T13:36:11.5005907Z ##[group]micromamba list
2025-01-10T13:36:11.5007389Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-10T13:36:11.8892157Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-10T13:36:11.8892691Z 
2025-01-10T13:36:11.8892931Z   Name                           Version              Build                    Channel    
2025-01-10T13:36:11.8894146Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-10T13:36:11.8894824Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-10T13:36:11.8895442Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-10T13:36:11.8896040Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8896601Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8897196Z   argon2-cffi                    23.1.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8897918Z   argon2-cffi-bindings           21.2.0               py312h66e93f0_5          conda-forge
2025-01-10T13:36:11.8898510Z   arrow                          1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8899064Z   astropy                        6.1.1                py312h4fc7734_1          conda-forge
2025-01-10T13:36:11.8899819Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8900603Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8901286Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8901900Z   async-lru                      2.0.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8902472Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-10T13:36:11.8903071Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-10T13:36:11.8904296Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8904885Z   beautifulsoup4                 4.12.3               pyha770c72_1             conda-forge
2025-01-10T13:36:11.8905493Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8906045Z   blosc                          1.21.6               hef167b5_0               conda-forge
2025-01-10T13:36:11.8906587Z   brotli                         1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.8907153Z   brotli-bin                     1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.8907773Z   brotli-python                  1.1.0                py312h2ec8cdc_2          conda-forge
2025-01-10T13:36:11.8908410Z   bzip2                          1.0.8                h4bc722e_7               conda-forge
2025-01-10T13:36:11.8908959Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-10T13:36:11.8909520Z   c-blosc2                       2.15.2               h68e2383_0               conda-forge
2025-01-10T13:36:11.8910164Z   ca-certificates                2024.12.14           hbcca054_0               conda-forge
2025-01-10T13:36:11.8910863Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-10T13:36:11.8911537Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-10T13:36:11.8912169Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-10T13:36:11.8912773Z   certifi                        2024.12.14           pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8913782Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-10T13:36:11.8914512Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8915194Z   click                          8.1.7                unix_pyh707e725_1        conda-forge
2025-01-10T13:36:11.8915812Z   codespell                      2.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8916444Z   colorama                       0.4.6                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8917042Z   comm                           0.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8917644Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-10T13:36:11.8918275Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-10T13:36:11.8918888Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-10T13:36:11.8919458Z   cycler                         0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8920086Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-10T13:36:11.8920731Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-10T13:36:11.8921343Z   decorator                      5.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8921988Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8922628Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-10T13:36:11.8923246Z   dot2tex                        2.11.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8924041Z   entrypoints                    0.4                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8924734Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:11.8925421Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.8926199Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-10T13:36:11.8926892Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-10T13:36:11.8927671Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-10T13:36:11.8928439Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-10T13:36:11.8929166Z   font-ttf-ubuntu                0.83                 h77eed37_3               conda-forge
2025-01-10T13:36:11.8929800Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-10T13:36:11.8930494Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-10T13:36:11.8931360Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-10T13:36:11.8932164Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-10T13:36:11.8932861Z   fqdn                           1.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8933917Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-10T13:36:11.8934618Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-10T13:36:11.8935254Z   future                         1.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.8935735Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-10T13:36:11.8936289Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-10T13:36:11.8936990Z   git-lfs                        3.5.1                h647637d_1               conda-forge
2025-01-10T13:36:11.8937426Z   gmp                            6.3.0                hac33072_2               conda-forge
2025-01-10T13:36:11.8937885Z   gmpy2                          2.1.5                py312h7201bc8_3          conda-forge
2025-01-10T13:36:11.8938482Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-10T13:36:11.8939232Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-10T13:36:11.8939952Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-10T13:36:11.9022454Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-10T13:36:11.9023123Z   h11                            0.14.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9023907Z   h2                             4.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9024520Z   h5py                           3.11.0               nompi_py312hedeef09_103  conda-forge
2025-01-10T13:36:11.9025131Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-10T13:36:11.9025732Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-10T13:36:11.9026315Z   hpack                          4.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9026917Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9027533Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9028145Z   hyperframe                     6.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9028737Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-10T13:36:11.9029272Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9029838Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9030830Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-10T13:36:11.9031533Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-10T13:36:11.9032271Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9032960Z   iniconfig                      2.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9033574Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-10T13:36:11.9034489Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-10T13:36:11.9035151Z   ipython_genutils               0.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:11.9035832Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9036493Z   isoduration                    20.11.0              pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9037119Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9037709Z   jinja2                         3.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9038295Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9038922Z   jsonpointer                    3.0.0                py312h7900ff3_1          conda-forge
2025-01-10T13:36:11.9039570Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9040321Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9041366Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9042147Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9042815Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9043466Z   jupyter_core                   5.7.2                pyh31011fe_1             conda-forge
2025-01-10T13:36:11.9044272Z   jupyter_events                 0.10.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9044958Z   jupyter_server                 2.14.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9045664Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9046362Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9047065Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:11.9047799Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9048520Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9049194Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-10T13:36:11.9049820Z   kiwisolver                     1.4.5                py312h68727a3_2          conda-forge
2025-01-10T13:36:11.9050427Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-10T13:36:11.9051030Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:11.9051646Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-10T13:36:11.9052251Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-10T13:36:11.9052858Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-10T13:36:11.9053438Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-10T13:36:11.9054321Z   libblas                        3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:36:11.9054997Z   libbrotlicommon                1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9055682Z   libbrotlidec                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9056347Z   libbrotlienc                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9056997Z   libcblas                       3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:36:11.9057623Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-10T13:36:11.9058204Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-10T13:36:11.9058823Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-10T13:36:11.9059403Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-10T13:36:11.9059974Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-10T13:36:11.9060561Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-10T13:36:11.9061115Z   libgcc                         14.2.0               h77fa898_1               conda-forge
2025-01-10T13:36:11.9061688Z   libgcc-ng                      14.2.0               h69a702a_1               conda-forge
2025-01-10T13:36:11.9062255Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-10T13:36:11.9062845Z   libgfortran-ng                 13.2.0               h69a702a_13              conda-forge
2025-01-10T13:36:11.9063481Z   libgfortran5                   13.2.0               h3d2ce59_13              conda-forge
2025-01-10T13:36:11.9064357Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-10T13:36:11.9064945Z   libgomp                        14.2.0               h77fa898_1               conda-forge
2025-01-10T13:36:11.9065522Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-10T13:36:11.9066118Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-10T13:36:11.9066738Z   liblapack                      3.9.0                24_linux64_openblas      conda-forge
2025-01-10T13:36:11.9067373Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-10T13:36:11.9067993Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-10T13:36:11.9068606Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-10T13:36:11.9069230Z   libopenblas                    0.3.27               pthreads_hac2b453_1      conda-forge
2025-01-10T13:36:11.9069812Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-10T13:36:11.9070375Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-10T13:36:11.9070954Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-10T13:36:11.9071549Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-10T13:36:11.9072123Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-10T13:36:11.9072730Z   libstdcxx                      14.2.0               hc0a3c3a_1               conda-forge
2025-01-10T13:36:11.9073363Z   libstdcxx-ng                   14.2.0               h4852527_1               conda-forge
2025-01-10T13:36:11.9074118Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-10T13:36:11.9074726Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-10T13:36:11.9075488Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-10T13:36:11.9076120Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-10T13:36:11.9076732Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-10T13:36:11.9077341Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-10T13:36:11.9077965Z   libxml2                        2.12.7               h4c95cb1_3               conda-forge
2025-01-10T13:36:11.9078565Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-10T13:36:11.9079170Z   libzlib                        1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9079791Z   llvmlite                       0.43.0               py312h374181b_1          conda-forge
2025-01-10T13:36:11.9080378Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-10T13:36:11.9080957Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-10T13:36:11.9081560Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-10T13:36:11.9082170Z   markupsafe                     2.1.5                py312h66e93f0_1          conda-forge
2025-01-10T13:36:11.9082843Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-10T13:36:11.9083561Z   matplotlib-inline              0.1.7                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9084364Z   mistune                        3.0.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9084946Z   mpc                            1.3.1                h24ddda3_1               conda-forge
2025-01-10T13:36:11.9085637Z   mpfr                           4.2.1                h90cbb55_3               conda-forge
2025-01-10T13:36:11.9086216Z   mpmath                         1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9086794Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:11.9087420Z   mypy_extensions                1.0.0                pyha770c72_1             conda-forge
2025-01-10T13:36:11.9087990Z   nbclassic                      1.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9088419Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9088991Z   nbconvert                      7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:36:11.9089388Z   nbconvert-core                 7.16.4               pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:11.9089821Z   nbconvert-pandoc               7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:36:11.9090212Z   nbformat                       5.10.4               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9090577Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9090926Z   ncurses                        6.5                  he02047a_1               conda-forge
2025-01-10T13:36:11.9091282Z   nest-asyncio                   1.6.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9091639Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9091986Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-10T13:36:11.9092326Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9092679Z   notebook-shim                  0.2.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9093028Z   numba                          0.60.0               py312h83e6fd3_0          conda-forge
2025-01-10T13:36:11.9093358Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-10T13:36:11.9094087Z   numpy                          2.0.2                py312h58c1407_1          conda-forge
2025-01-10T13:36:11.9094435Z   numpydoc                       1.7.0                pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:11.9094794Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-10T13:36:11.9095145Z   openssl                        3.4.0                h7b32b05_1               conda-forge
2025-01-10T13:36:11.9095492Z   overrides                      7.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9095882Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9096249Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-10T13:36:11.9096585Z   pandoc                         3.2.1                ha770c72_0               conda-forge
2025-01-10T13:36:11.9096969Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9097324Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-10T13:36:11.9097650Z   parso                          0.8.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9097989Z   pathspec                       0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9098331Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9098653Z   pcre2                          10.44                hba22ea6_2               conda-forge
2025-01-10T13:36:11.9098993Z   pexpect                        4.9.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9099504Z   pickleshare                    0.7.5                pyhd8ed1ab_1004          conda-forge
2025-01-10T13:36:11.9099878Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-10T13:36:11.9100218Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9100547Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-10T13:36:11.9100932Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:11.9101335Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9101695Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9102036Z   pluggy                         1.5.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9102410Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9102812Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-10T13:36:11.9103175Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-10T13:36:11.9103527Z   pthread-stubs                  0.4                  hb9d3cd8_1002            conda-forge
2025-01-10T13:36:11.9104082Z   ptyprocess                     0.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9104439Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9104791Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9105142Z   pybtex                         0.24.0               pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:11.9105510Z   pybtex-docutils                1.0.3                py312h7900ff3_2          conda-forge
2025-01-10T13:36:11.9105887Z   pycparser                      2.22                 pyh29332c3_1             conda-forge
2025-01-10T13:36:11.9106238Z   pyerfa                         2.0.1.4              py312hc0a28a1_2          conda-forge
2025-01-10T13:36:11.9106724Z   pygments                       2.18.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9107084Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-10T13:36:11.9107450Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9107801Z   pysocks                        1.7.1                pyha55dd90_7             conda-forge
2025-01-10T13:36:11.9108154Z   pytables                       3.10.2               py312h2895ec7_0          conda-forge
2025-01-10T13:36:11.9108500Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9108850Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9109244Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9109641Z   pytest-html                    4.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9110020Z   pytest-metadata                3.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9110389Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-10T13:36:11.9110768Z   python-dateutil                2.9.0.post0          pyhff2d567_1             conda-forge
2025-01-10T13:36:11.9111194Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9111620Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9112018Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9112499Z   python_abi                     3.12                 5_cp312                  conda-forge
2025-01-10T13:36:11.9112846Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9113182Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-10T13:36:11.9113513Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-10T13:36:11.9114010Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-10T13:36:11.9114380Z   radioactivedecay               0.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9114763Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-10T13:36:11.9115140Z   recommonmark                   0.7.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9115525Z   referencing                    0.35.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9115894Z   requests                       2.32.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9116276Z   rfc3339-validator              0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9116681Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:11.9117049Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-10T13:36:11.9117384Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-10T13:36:11.9117714Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-10T13:36:11.9118065Z   send2trash                     1.8.3                pyh0d859eb_1             conda-forge
2025-01-10T13:36:11.9118430Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9118816Z   setuptools-scm                 8.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9119195Z   setuptools_scm                 8.1.0                hd8ed1ab_1               conda-forge
2025-01-10T13:36:11.9119675Z   six                            1.16.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9120012Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9120355Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-10T13:36:11.9120695Z   sniffio                        1.3.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9121074Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9121451Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9121806Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9122178Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9122593Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-10T13:36:11.9123001Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9123403Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9123982Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9124402Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-10T13:36:11.9124818Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-10T13:36:11.9125269Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9125836Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9126291Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9126736Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9127178Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9127607Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9128038Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9128510Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9128946Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9129296Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-10T13:36:11.9129645Z   tabulate                       0.9.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:11.9130001Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9130355Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-10T13:36:11.9130713Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9131047Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-10T13:36:11.9131365Z   toml                           0.10.2               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9131700Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9132040Z   tornado                        6.4.1                py312h66e93f0_1          conda-forge
2025-01-10T13:36:11.9132384Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9132727Z   traitlets                      5.14.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9133219Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-10T13:36:11.9133799Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9134586Z   typing-extensions              4.12.2               hd8ed1ab_1               conda-forge
2025-01-10T13:36:11.9135260Z   typing_extensions              4.12.2               pyha770c72_1             conda-forge
2025-01-10T13:36:11.9135932Z   typing_utils                   0.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9136558Z   tzdata                         2024a                h8827d51_1               conda-forge
2025-01-10T13:36:11.9137195Z   uri-template                   1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9137680Z   urllib3                        2.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9138034Z   wcwidth                        0.2.13               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9138388Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9138758Z   webencodings                   0.5.1                pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:11.9139151Z   websocket-client               1.8.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9139522Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:11.9139901Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9140299Z   xorg-kbproto                   1.0.7                hb9d3cd8_1003            conda-forge
2025-01-10T13:36:11.9140802Z   xorg-libice                    1.1.1                hb9d3cd8_1               conda-forge
2025-01-10T13:36:11.9141181Z   xorg-libsm                     1.2.4                he73a12e_1               conda-forge
2025-01-10T13:36:11.9141545Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-10T13:36:11.9141908Z   xorg-libxau                    1.0.11               hb9d3cd8_1               conda-forge
2025-01-10T13:36:11.9142278Z   xorg-libxdmcp                  1.1.3                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9142655Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-10T13:36:11.9143042Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-10T13:36:11.9143444Z   xorg-renderproto               0.11.1               hb9d3cd8_1003            conda-forge
2025-01-10T13:36:11.9144028Z   xorg-xextproto                 7.3.0                hb9d3cd8_1004            conda-forge
2025-01-10T13:36:11.9144409Z   xorg-xproto                    7.0.31               hb9d3cd8_1008            conda-forge
2025-01-10T13:36:11.9144740Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-10T13:36:11.9145061Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-10T13:36:11.9145389Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-10T13:36:11.9145722Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:11.9146053Z   zlib                           1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T13:36:11.9146375Z   zlib-ng                        2.2.3                h7955e40_0               conda-forge
2025-01-10T13:36:11.9146721Z   zstandard                      0.23.0               py312hef9b889_1          conda-forge
2025-01-10T13:36:11.9147068Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-10T13:36:11.9147598Z ##[endgroup]
2025-01-10T13:36:11.9181431Z ##[group]Run pip install -e . --user
2025-01-10T13:36:11.9181946Z [36;1mpip install -e . --user[0m
2025-01-10T13:36:11.9211511Z shell: /usr/bin/bash -l {0}
2025-01-10T13:36:11.9211759Z env:
2025-01-10T13:36:11.9211937Z   CACHE_NUMBER: 0
2025-01-10T13:36:11.9212575Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:11.9213224Z   CODECOV_TOKEN: 
2025-01-10T13:36:11.9213440Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:36:11.9213864Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:36:11.9214213Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:11.9214514Z ##[endgroup]
2025-01-10T13:36:12.6464072Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-10T13:36:12.6493774Z   Installing build dependencies: started
2025-01-10T13:36:15.3255157Z   Installing build dependencies: finished with status 'done'
2025-01-10T13:36:15.3261639Z   Checking if build backend supports build_editable: started
2025-01-10T13:36:15.4480608Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-10T13:36:15.4487967Z   Getting requirements to build editable: started
2025-01-10T13:36:15.9159463Z   Getting requirements to build editable: finished with status 'done'
2025-01-10T13:36:15.9168193Z   Preparing editable metadata (pyproject.toml): started
2025-01-10T13:36:16.3717408Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-10T13:36:16.4312520Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-10T13:36:16.4718846Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.2)
2025-01-10T13:36:16.4727796Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-10T13:36:16.4738039Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-10T13:36:16.4749016Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-10T13:36:16.4758245Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-10T13:36:16.4851578Z Building wheels for collected packages: tardis
2025-01-10T13:36:16.4859599Z   Building editable for tardis (pyproject.toml): started
2025-01-10T13:36:17.2417364Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-10T13:36:17.2424102Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8878 sha256=dc13b2ab815fa7198444f75821e42aae894f12fe10e01a8ac0140342d9b03780
2025-01-10T13:36:17.2425604Z   Stored in directory: /tmp/pip-ephem-wheel-cache-o28f79mm/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-10T13:36:17.2451683Z Successfully built tardis
2025-01-10T13:36:18.0169289Z Installing collected packages: tardis
2025-01-10T13:36:18.0263109Z Successfully installed tardis-0.0.0
2025-01-10T13:36:18.2606764Z ##[group]Run pip install qgridnext
2025-01-10T13:36:18.2607116Z [36;1mpip install qgridnext[0m
2025-01-10T13:36:18.2633580Z shell: /usr/bin/bash -l {0}
2025-01-10T13:36:18.2634007Z env:
2025-01-10T13:36:18.2634187Z   CACHE_NUMBER: 0
2025-01-10T13:36:18.2634810Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:18.2635467Z   CODECOV_TOKEN: 
2025-01-10T13:36:18.2635692Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:36:18.2635998Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:36:18.2636604Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:18.2636909Z ##[endgroup]
2025-01-10T13:36:18.8932513Z Collecting qgridnext
2025-01-10T13:36:18.9090597Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-10T13:36:18.9184011Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-10T13:36:18.9192178Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-10T13:36:18.9201059Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.0.2)
2025-01-10T13:36:18.9210499Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-10T13:36:18.9293839Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:36:18.9302093Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-10T13:36:18.9314509Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-10T13:36:18.9331701Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-10T13:36:18.9345782Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-10T13:36:18.9821491Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0.post0)
2025-01-10T13:36:18.9842838Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:36:18.9854850Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:36:19.0234385Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-10T13:36:19.0248741Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-10T13:36:19.0257217Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-10T13:36:19.0268139Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-10T13:36:19.0277303Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-10T13:36:19.0286646Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-10T13:36:19.0306252Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-10T13:36:19.0355413Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-10T13:36:19.0413097Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-10T13:36:19.0603980Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-10T13:36:19.0750751Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-10T13:36:19.0763260Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-10T13:36:19.0777913Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:36:19.0788039Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-10T13:36:19.0795888Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-10T13:36:19.0825081Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-10T13:36:19.0853907Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-10T13:36:19.0988805Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-10T13:36:19.0997738Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-10T13:36:19.1004974Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:36:19.1337187Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-10T13:36:19.1346663Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-10T13:36:19.1355199Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-10T13:36:19.1366456Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-10T13:36:19.1378006Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-10T13:36:19.1388676Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:36:19.1399309Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-10T13:36:19.1412838Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-10T13:36:19.1422647Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-10T13:36:19.1431569Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-10T13:36:19.1441145Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-10T13:36:19.1449435Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-10T13:36:19.1459798Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-10T13:36:19.1468384Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-10T13:36:19.1479531Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:36:19.1496234Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-10T13:36:19.1776771Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-10T13:36:19.1787800Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-10T13:36:19.1799214Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-10T13:36:19.1812502Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-10T13:36:19.1838369Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-10T13:36:19.2024522Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-10T13:36:19.2050653Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-10T13:36:19.2060789Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-10T13:36:19.2078548Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-10T13:36:19.2431064Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-10T13:36:19.2439404Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-10T13:36:19.2535454Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-10T13:36:19.2705033Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.12.14)
2025-01-10T13:36:19.2719340Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-10T13:36:19.2796544Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-10T13:36:19.2978522Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-10T13:36:19.2999101Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-10T13:36:19.3012902Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-10T13:36:19.3075952Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-10T13:36:19.3267329Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-10T13:36:19.3276850Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-10T13:36:19.3284915Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-10T13:36:19.3293492Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:36:19.3555304Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:36:19.3703805Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-10T13:36:19.3711760Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-10T13:36:19.3721946Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-10T13:36:19.3730011Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-10T13:36:19.4150978Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-10T13:36:19.4169553Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-10T13:36:19.4183092Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-10T13:36:19.4197394Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-10T13:36:19.4208885Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-10T13:36:19.4220638Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:36:19.4236301Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-10T13:36:19.4245549Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:36:19.4359231Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-10T13:36:19.4660684Z Requirement already satisfied: charset_normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-10T13:36:19.4673805Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-10T13:36:19.5445861Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-10T13:36:19.6014576Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-10T13:36:19.6027895Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-10T13:36:19.6041318Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-10T13:36:19.6059090Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:36:19.6071621Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-10T13:36:19.7082824Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-10T13:36:19.7182630Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-10T13:36:19.7710026Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-10T13:36:19.8213230Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:36:19.8511089Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-10T13:36:19.8757187Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-10T13:36:19.8928595Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 85.2 MB/s eta 0:00:00
2025-01-10T13:36:20.6928784Z Installing collected packages: qgridnext
2025-01-10T13:36:20.7826649Z Successfully installed qgridnext-2.0.4
2025-01-10T13:36:20.9978307Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-10T13:36:20.9979614Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-10T13:36:21.0006517Z shell: /usr/bin/bash -l {0}
2025-01-10T13:36:21.0006753Z env:
2025-01-10T13:36:21.0006926Z   CACHE_NUMBER: 0
2025-01-10T13:36:21.0007535Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:21.0008188Z   CODECOV_TOKEN: 
2025-01-10T13:36:21.0008404Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T13:36:21.0008710Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T13:36:21.0009103Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:21.0009406Z ##[endgroup]
2025-01-10T13:36:30.0395376Z ============================= test session starts ==============================
2025-01-10T13:36:30.0396151Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-10T13:36:30.0396715Z rootdir: /home/runner/work/tardis/tardis
2025-01-10T13:36:30.0397220Z configfile: pyproject.toml
2025-01-10T13:36:30.0397829Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-10T13:36:30.0398525Z collected 1796 items / 2 deselected / 1794 selected
2025-01-10T13:36:30.0398875Z 
2025-01-10T13:36:35.1260875Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-10T13:36:36.7322599Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-10T13:36:38.3042432Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-10T13:36:40.0470770Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-10T13:36:40.0563071Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-10T13:36:41.3711252Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-10T13:36:41.7895608Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-10T13:36:41.7910872Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-10T13:36:45.4646870Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-10T13:36:45.4772769Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-10T13:36:45.5062580Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-10T13:37:23.8572096Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-10T13:37:23.8718688Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-10T13:37:23.8831120Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-10T13:37:23.9141430Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-10T13:37:23.9357676Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-10T13:37:24.2428877Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-10T13:37:24.5687714Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-10T13:37:24.6039491Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-10T13:37:24.7960870Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-10T13:37:24.8028935Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-10T13:38:23.6510338Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-10T13:38:24.6403136Z ............                                                             [ 10%]
2025-01-10T13:38:27.6749233Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-10T13:38:27.7229452Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-10T13:38:29.0395496Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-10T13:38:30.3968324Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-10T13:38:32.6424948Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-10T13:38:35.3912869Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-10T13:39:21.8161067Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-10T13:39:33.3368221Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-10T13:39:35.0363999Z tardis/plasma/tests/test_complete_plasmas.py ...........FFF..FFF..s..... [ 13%]
2025-01-10T13:39:38.5725446Z sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-10T13:39:40.9552041Z F..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-10T13:39:44.5073975Z ........s...FFF..FFF.ss.....sFF.F....ss............s...FFF..FFF.ss.....s [ 26%]
2025-01-10T13:39:48.4218223Z FF.F....ss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-10T13:39:49.7556471Z ..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFssFssssss..... [ 34%]
2025-01-10T13:39:53.3842092Z .......s...FFF..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sF [ 38%]
2025-01-10T13:39:56.9305121Z F.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF. [ 42%]
2025-01-10T13:40:01.0151079Z .FFF.ss.....sFF.Fssssss............s...FFF..FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-10T13:40:03.5651944Z ......s...FFF..FFF.s.....FFFF.Fssssss............s...FFF..FFF.s.....FFFF [ 50%]
2025-01-10T13:40:06.9420939Z .Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF.. [ 54%]
2025-01-10T13:40:11.0466594Z FFF.ss.....sFF.Fssssss................FFF..FFF..s.....sFF.Fssss......... [ 58%]
2025-01-10T13:40:11.7099529Z .........FFF..FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-10T13:40:11.9525182Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-10T13:40:11.9640326Z ......                                                                   [ 62%]
2025-01-10T13:40:12.0998245Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-10T13:42:28.4020637Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-10T13:42:28.4045466Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-10T13:42:51.8046037Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-10T13:43:05.0929127Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-10T13:43:05.8452176Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-10T13:43:14.4953233Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-01-10T13:43:14.5152475Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-10T13:43:14.9779420Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-10T13:43:14.9849936Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-10T13:43:17.0944296Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-10T13:43:17.1128851Z ..........                                                               [ 69%]
2025-01-10T13:43:17.2824702Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-10T13:43:17.3143230Z .........                                                                [ 72%]
2025-01-10T13:43:35.8763391Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-10T13:44:37.9640793Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-10T13:46:02.4384166Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-10T13:46:02.5107988Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-10T13:46:05.1873433Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-10T13:46:12.8513231Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-10T13:46:13.0835953Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-10T13:46:13.1011073Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-10T13:46:13.1424612Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-10T13:46:22.0905520Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-10T13:46:22.0971998Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-10T13:46:28.5148681Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-10T13:46:28.9966090Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-10T13:46:30.0469105Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-10T13:46:30.1822769Z XX.........                                                              [ 84%]
2025-01-10T13:46:30.2096260Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-10T13:46:30.5309671Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-10T13:46:30.9468662Z .....                                                                    [ 85%]
2025-01-10T13:47:06.9205349Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-10T13:47:06.9501424Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-10T13:47:06.9535295Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-10T13:47:10.0651458Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-10T13:47:10.0827456Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-10T13:47:13.5786450Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-10T13:47:13.5788603Z                                                                          [ 86%]
2025-01-10T13:47:14.3214532Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-10T13:47:15.7061223Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-10T13:47:18.5556533Z ......                                                                   [ 88%]
2025-01-10T13:47:23.6034304Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-01-10T13:47:26.7694303Z ..F..FF..FF.F........FF..FF.F                                            [ 91%]
2025-01-10T13:47:29.7153154Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-10T13:47:36.8319203Z ....                                                                     [ 92%]
2025-01-10T13:47:43.0327337Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-10T13:47:52.1328612Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-10T13:47:52.5736294Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-10T13:47:52.6468535Z ....                                                                     [ 96%]
2025-01-10T13:47:53.7579459Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-10T13:47:54.4020923Z ..................                                                       [ 98%]
2025-01-10T13:48:57.7618951Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-10T13:49:05.2390917Z ......                                                                   [100%]
2025-01-10T13:49:05.2391399Z 
2025-01-10T13:49:05.2391601Z =================================== FAILURES ===================================
2025-01-10T13:49:05.2392239Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-10T13:49:05.2392676Z 
2025-01-10T13:49:05.2392867Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-10T13:49:05.2393449Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-10T13:49:05.2394137Z 
2025-01-10T13:49:05.2394360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2394813Z         if err_msg is None:
2025-01-10T13:49:05.2395186Z             if left.shape != right.shape:
2025-01-10T13:49:05.2395583Z                 raise_assert_detail(
2025-01-10T13:49:05.2396093Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2396587Z                 )
2025-01-10T13:49:05.2396860Z     
2025-01-10T13:49:05.2397101Z             diff = 0
2025-01-10T13:49:05.2397457Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2397899Z                 # count up differences
2025-01-10T13:49:05.2398435Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2398963Z                     diff += 1
2025-01-10T13:49:05.2399277Z     
2025-01-10T13:49:05.2399552Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2400106Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2400878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2401566Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2402050Z E           
2025-01-10T13:49:05.2402413Z E           numpy array values are different (0.09581 %)
2025-01-10T13:49:05.2403414Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:49:05.2405067Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:49:05.2405887Z 
2025-01-10T13:49:05.2406414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2407389Z 
2025-01-10T13:49:05.2407676Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2408092Z 
2025-01-10T13:49:05.2408485Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3be824eea0>
2025-01-10T13:49:05.2409458Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be831eff0>
2025-01-10T13:49:05.2410041Z 
2025-01-10T13:49:05.2410196Z     def test_calculate_sobolev_line_opacity(
2025-01-10T13:49:05.2410685Z         nb_simulation_verysimple, regression_data
2025-01-10T13:49:05.2411163Z     ):
2025-01-10T13:49:05.2411544Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:49:05.2412034Z     
2025-01-10T13:49:05.2412370Z         actual = calculate_sobolev_line_opacity(
2025-01-10T13:49:05.2412863Z             legacy_plasma.lines,
2025-01-10T13:49:05.2413562Z             legacy_plasma.level_number_density,
2025-01-10T13:49:05.2414222Z             legacy_plasma.time_explosion,
2025-01-10T13:49:05.2414712Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:49:05.2415147Z         )
2025-01-10T13:49:05.2415505Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.2416039Z >       pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2416354Z 
2025-01-10T13:49:05.2416547Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-10T13:49:05.2417058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2417614Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2418086Z     ???
2025-01-10T13:49:05.2418400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2418724Z 
2025-01-10T13:49:05.2418835Z >   ???
2025-01-10T13:49:05.2419170Z E   AssertionError: MultiIndex level [0] are different
2025-01-10T13:49:05.2419615Z E   
2025-01-10T13:49:05.2419954Z E   MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:49:05.2420480Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:05.2420893Z E          ...
2025-01-10T13:49:05.2421183Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:05.2421650Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:05.2422225Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:05.2422712Z E          ...
2025-01-10T13:49:05.2423052Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:05.2423576Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:05.2424297Z E   At positional index 54, first diff: 12 != 14
2025-01-10T13:49:05.2424651Z 
2025-01-10T13:49:05.2424809Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2425366Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.2426404Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.2427675Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.2428764Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:05.2429165Z 
2025-01-10T13:49:05.2429170Z 
2025-01-10T13:49:05.2429562Z Packets:                                                                                   4020/? [00:11<00:00, 33709.79it/s][A
2025-01-10T13:49:05.2429924Z 
2025-01-10T13:49:05.2430317Z Packets:                                                                                   4021/? [00:11<00:00, 251.66it/s]  [A
2025-01-10T13:49:05.2431226Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:11<00:02,  2.69s/it]
2025-01-10T13:49:05.2431671Z 
2025-01-10T13:49:05.2432067Z Packets:                                                                                   4030/? [00:11<00:00, 251.66it/s][A
2025-01-10T13:49:05.2432669Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.2434365Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.2435783Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-10T13:49:05.2436244Z 
2025-01-10T13:49:05.2436701Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3be824eea0>
2025-01-10T13:49:05.2437766Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be8365d60>
2025-01-10T13:49:05.2438389Z 
2025-01-10T13:49:05.2438731Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-10T13:49:05.2439422Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:49:05.2440068Z     
2025-01-10T13:49:05.2440416Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-10T13:49:05.2440882Z             legacy_plasma.lines,
2025-01-10T13:49:05.2441283Z             legacy_plasma.level_number_density,
2025-01-10T13:49:05.2441711Z             legacy_plasma.time_explosion,
2025-01-10T13:49:05.2442163Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:49:05.2442582Z         )
2025-01-10T13:49:05.2442898Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-10T13:49:05.2443387Z         expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.2444034Z >       npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.2444328Z 
2025-01-10T13:49:05.2444508Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-10T13:49:05.2444993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2445319Z 
2025-01-10T13:49:05.2445803Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcb891440>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2446612Z        [1., 1., .....,
2025-01-10T13:49:05.2446963Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2447379Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2447789Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:49:05.2448557Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.2449158Z 
2025-01-10T13:49:05.2449288Z     @wraps(func)
2025-01-10T13:49:05.2449601Z     def inner(*args, **kwds):
2025-01-10T13:49:05.2449981Z         with self._recreate_cm():
2025-01-10T13:49:05.2450376Z >           return func(*args, **kwds)
2025-01-10T13:49:05.2450783Z E           AssertionError: 
2025-01-10T13:49:05.2451191Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.2451619Z E           
2025-01-10T13:49:05.2451945Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:05.2452468Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:49:05.2453019Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:49:05.2453535Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2454186Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2454587Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.2455021Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2455451Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.2455848Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.2456122Z 
2025-01-10T13:49:05.2456447Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.2457260Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-10T13:49:05.2457787Z 
2025-01-10T13:49:05.2458027Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2458670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2459490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2460074Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2460722Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2461247Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2461673Z err_msg = None
2025-01-10T13:49:05.2461859Z 
2025-01-10T13:49:05.2462040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2462494Z         if err_msg is None:
2025-01-10T13:49:05.2462873Z             if left.shape != right.shape:
2025-01-10T13:49:05.2463298Z                 raise_assert_detail(
2025-01-10T13:49:05.2463988Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2464692Z                 )
2025-01-10T13:49:05.2464985Z     
2025-01-10T13:49:05.2465223Z             diff = 0
2025-01-10T13:49:05.2465585Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2466029Z                 # count up differences
2025-01-10T13:49:05.2466561Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2467111Z                     diff += 1
2025-01-10T13:49:05.2467429Z     
2025-01-10T13:49:05.2467798Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2468272Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2468891Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2469539Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2470021Z E           
2025-01-10T13:49:05.2470403Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2471267Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2472463Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2473084Z 
2025-01-10T13:49:05.2473801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2474508Z 
2025-01-10T13:49:05.2474804Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2475245Z 
2025-01-10T13:49:05.2475649Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8965760>
2025-01-10T13:49:05.2476456Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2476975Z attr = 'lines'
2025-01-10T13:49:05.2477138Z 
2025-01-10T13:49:05.2477363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2477903Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2478344Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2478679Z         try:
2025-01-10T13:49:05.2479057Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2479541Z         except KeyError:
2025-01-10T13:49:05.2479961Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2480415Z     
2025-01-10T13:49:05.2480679Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2481098Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2481572Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2482133Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2482691Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2483374Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2484200Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2484704Z             else:
2025-01-10T13:49:05.2485041Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2485516Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2485851Z 
2025-01-10T13:49:05.2486071Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2486612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2487201Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2487701Z     ???
2025-01-10T13:49:05.2488030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2488365Z 
2025-01-10T13:49:05.2488693Z >   ???
2025-01-10T13:49:05.2489047Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2489487Z E   
2025-01-10T13:49:05.2489843Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2490354Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2490773Z E          ...
2025-01-10T13:49:05.2491064Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2491534Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2492049Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2492459Z E          ...
2025-01-10T13:49:05.2492743Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2493265Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2494034Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2494390Z 
2025-01-10T13:49:05.2494550Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2495226Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-10T13:49:05.2495803Z 
2025-01-10T13:49:05.2496236Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8964710>
2025-01-10T13:49:05.2497078Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2497651Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.2497908Z 
2025-01-10T13:49:05.2498141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2498700Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2499166Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2499517Z         try:
2025-01-10T13:49:05.2499909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2500412Z         except KeyError:
2025-01-10T13:49:05.2500844Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2501309Z     
2025-01-10T13:49:05.2501583Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2501973Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2502380Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2502869Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2503346Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2503892Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2504326Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2504634Z 
2025-01-10T13:49:05.2504833Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2505414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2505795Z 
2025-01-10T13:49:05.2506049Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.2506612Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.2507104Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2507601Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.2508108Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.2508838Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.2509300Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2509755Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.2510144Z err_msg = None
2025-01-10T13:49:05.2510318Z 
2025-01-10T13:49:05.2510503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2510945Z         if err_msg is None:
2025-01-10T13:49:05.2511313Z             if left.shape != right.shape:
2025-01-10T13:49:05.2511708Z                 raise_assert_detail(
2025-01-10T13:49:05.2512186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2512667Z                 )
2025-01-10T13:49:05.2512936Z     
2025-01-10T13:49:05.2513177Z             diff = 0
2025-01-10T13:49:05.2513880Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2514356Z                 # count up differences
2025-01-10T13:49:05.2514905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2515435Z                     diff += 1
2025-01-10T13:49:05.2515753Z     
2025-01-10T13:49:05.2516054Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2516610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2517331Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2518017Z E           AssertionError: Series are different
2025-01-10T13:49:05.2518466Z E           
2025-01-10T13:49:05.2518793Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.2519767Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.2521133Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2522395Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2523084Z 
2025-01-10T13:49:05.2523757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2524783Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-10T13:49:05.2525280Z 
2025-01-10T13:49:05.2525646Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8964680>
2025-01-10T13:49:05.2526406Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2526985Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.2527269Z 
2025-01-10T13:49:05.2527518Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2528129Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2528635Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2529082Z         try:
2025-01-10T13:49:05.2529536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2530103Z         except KeyError:
2025-01-10T13:49:05.2530561Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2531245Z     
2025-01-10T13:49:05.2531529Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2531934Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2532362Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2532864Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2533362Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2533938Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2534377Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2534692Z 
2025-01-10T13:49:05.2534891Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2535400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2535779Z 
2025-01-10T13:49:05.2536171Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.2536671Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.2537104Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.2537531Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.2537993Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.2538474Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.2538950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.2539452Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.2539886Z err_msg = None
2025-01-10T13:49:05.2540081Z 
2025-01-10T13:49:05.2540278Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2540762Z         if err_msg is None:
2025-01-10T13:49:05.2541177Z             if left.shape != right.shape:
2025-01-10T13:49:05.2541642Z                 raise_assert_detail(
2025-01-10T13:49:05.2542172Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2542669Z                 )
2025-01-10T13:49:05.2542967Z     
2025-01-10T13:49:05.2543217Z             diff = 0
2025-01-10T13:49:05.2543590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2544216Z                 # count up differences
2025-01-10T13:49:05.2544779Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2545334Z                     diff += 1
2025-01-10T13:49:05.2545665Z     
2025-01-10T13:49:05.2545928Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2546397Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2547019Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2547595Z E           AssertionError: Series are different
2025-01-10T13:49:05.2547997Z E           
2025-01-10T13:49:05.2548319Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.2549231Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.2550647Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.2552232Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.2553409Z 
2025-01-10T13:49:05.2554121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2555139Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-10T13:49:05.2555624Z 
2025-01-10T13:49:05.2555843Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2556425Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2557118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2557640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2558190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2558679Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2559073Z err_msg = None
2025-01-10T13:49:05.2559245Z 
2025-01-10T13:49:05.2559419Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2559846Z         if err_msg is None:
2025-01-10T13:49:05.2560203Z             if left.shape != right.shape:
2025-01-10T13:49:05.2560600Z                 raise_assert_detail(
2025-01-10T13:49:05.2561070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2561531Z                 )
2025-01-10T13:49:05.2561798Z     
2025-01-10T13:49:05.2562065Z             diff = 0
2025-01-10T13:49:05.2562471Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2562987Z                 # count up differences
2025-01-10T13:49:05.2563753Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2564402Z                     diff += 1
2025-01-10T13:49:05.2564772Z     
2025-01-10T13:49:05.2565088Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2565631Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2566285Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2566915Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2567352Z E           
2025-01-10T13:49:05.2567698Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2568482Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2569512Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2570083Z 
2025-01-10T13:49:05.2570592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2571231Z 
2025-01-10T13:49:05.2571506Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2571916Z 
2025-01-10T13:49:05.2572280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8966030>
2025-01-10T13:49:05.2573103Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>, attr = 'nu'
2025-01-10T13:49:05.2573575Z 
2025-01-10T13:49:05.2573964Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2574584Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2575355Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2575740Z         try:
2025-01-10T13:49:05.2576184Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2576737Z         except KeyError:
2025-01-10T13:49:05.2577235Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2577740Z     
2025-01-10T13:49:05.2578019Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2578425Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2578861Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2579358Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2579864Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2580259Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2580898Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2581225Z 
2025-01-10T13:49:05.2581426Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2581932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2582486Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2582957Z     ???
2025-01-10T13:49:05.2583267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2583592Z 
2025-01-10T13:49:05.2583865Z >   ???
2025-01-10T13:49:05.2584197Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2584626Z E   
2025-01-10T13:49:05.2584955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2585452Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2585879Z E          ...
2025-01-10T13:49:05.2586216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2586768Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2587363Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2587852Z E          ...
2025-01-10T13:49:05.2588183Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2588715Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2589269Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2589584Z 
2025-01-10T13:49:05.2589731Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2590332Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-10T13:49:05.2590834Z 
2025-01-10T13:49:05.2591053Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2591624Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2592144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2592661Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2593205Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2593874Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2594276Z err_msg = None
2025-01-10T13:49:05.2594448Z 
2025-01-10T13:49:05.2594615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2595033Z         if err_msg is None:
2025-01-10T13:49:05.2595391Z             if left.shape != right.shape:
2025-01-10T13:49:05.2595790Z                 raise_assert_detail(
2025-01-10T13:49:05.2596267Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2596733Z                 )
2025-01-10T13:49:05.2596994Z     
2025-01-10T13:49:05.2597231Z             diff = 0
2025-01-10T13:49:05.2597600Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2598103Z                 # count up differences
2025-01-10T13:49:05.2598718Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2599546Z                     diff += 1
2025-01-10T13:49:05.2599913Z     
2025-01-10T13:49:05.2600227Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2600786Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2601471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2602104Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2602546Z E           
2025-01-10T13:49:05.2602889Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2604034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2605080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2605667Z 
2025-01-10T13:49:05.2606175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2606824Z 
2025-01-10T13:49:05.2607101Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2607509Z 
2025-01-10T13:49:05.2607875Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89665a0>
2025-01-10T13:49:05.2608641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2609157Z attr = 'wavelength_cm'
2025-01-10T13:49:05.2609380Z 
2025-01-10T13:49:05.2609631Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2610248Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2610758Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2611143Z         try:
2025-01-10T13:49:05.2611578Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2612112Z         except KeyError:
2025-01-10T13:49:05.2612555Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2613041Z     
2025-01-10T13:49:05.2613322Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2613894Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2614330Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2614826Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2615322Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2615714Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2616148Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2616458Z 
2025-01-10T13:49:05.2616659Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2617164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2617716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2618187Z     ???
2025-01-10T13:49:05.2618499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2618812Z 
2025-01-10T13:49:05.2618920Z >   ???
2025-01-10T13:49:05.2619248Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2619670Z E   
2025-01-10T13:49:05.2619995Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2620538Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2621015Z E          ...
2025-01-10T13:49:05.2621359Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2621906Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2622508Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2623171Z E          ...
2025-01-10T13:49:05.2623477Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2624135Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2624657Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2624975Z 
2025-01-10T13:49:05.2625116Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2625682Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-10T13:49:05.2626155Z 
2025-01-10T13:49:05.2626367Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2626914Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2627612Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2628117Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2628677Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2629210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2629597Z err_msg = None
2025-01-10T13:49:05.2629760Z 
2025-01-10T13:49:05.2629933Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2630351Z         if err_msg is None:
2025-01-10T13:49:05.2630706Z             if left.shape != right.shape:
2025-01-10T13:49:05.2631114Z                 raise_assert_detail(
2025-01-10T13:49:05.2631664Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2632213Z                 )
2025-01-10T13:49:05.2632527Z     
2025-01-10T13:49:05.2632801Z             diff = 0
2025-01-10T13:49:05.2633213Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2633877Z                 # count up differences
2025-01-10T13:49:05.2634506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2635094Z                     diff += 1
2025-01-10T13:49:05.2635431Z     
2025-01-10T13:49:05.2635713Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2636213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2636873Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2637498Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2637926Z E           
2025-01-10T13:49:05.2638269Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2639014Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2640017Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2640602Z 
2025-01-10T13:49:05.2641116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2641762Z 
2025-01-10T13:49:05.2642029Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2642436Z 
2025-01-10T13:49:05.2642790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8965910>
2025-01-10T13:49:05.2643886Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>, attr = 'f_lu'
2025-01-10T13:49:05.2644453Z 
2025-01-10T13:49:05.2644701Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2645318Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2646051Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2646423Z         try:
2025-01-10T13:49:05.2646826Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2647334Z         except KeyError:
2025-01-10T13:49:05.2647780Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2648264Z     
2025-01-10T13:49:05.2648547Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2648950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2649376Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2649867Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2650375Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2650757Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2651369Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2651701Z 
2025-01-10T13:49:05.2651902Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2652423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2652979Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2653453Z     ???
2025-01-10T13:49:05.2653927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2654252Z 
2025-01-10T13:49:05.2654355Z >   ???
2025-01-10T13:49:05.2654697Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2655196Z E   
2025-01-10T13:49:05.2655577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2656181Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2656663Z E          ...
2025-01-10T13:49:05.2657002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2657557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2658148Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2658598Z E          ...
2025-01-10T13:49:05.2658903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2659392Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2659913Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2660228Z 
2025-01-10T13:49:05.2660374Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2660973Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-10T13:49:05.2661476Z 
2025-01-10T13:49:05.2661685Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2662230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2662724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2663220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2663933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2664420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2664812Z err_msg = None
2025-01-10T13:49:05.2664979Z 
2025-01-10T13:49:05.2665153Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2665570Z         if err_msg is None:
2025-01-10T13:49:05.2665920Z             if left.shape != right.shape:
2025-01-10T13:49:05.2666312Z                 raise_assert_detail(
2025-01-10T13:49:05.2666827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2667370Z                 )
2025-01-10T13:49:05.2667682Z     
2025-01-10T13:49:05.2667961Z             diff = 0
2025-01-10T13:49:05.2668366Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2668878Z                 # count up differences
2025-01-10T13:49:05.2669496Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2670319Z                     diff += 1
2025-01-10T13:49:05.2670659Z     
2025-01-10T13:49:05.2670943Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2671449Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2672113Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2672735Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2673184Z E           
2025-01-10T13:49:05.2673528Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2674632Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2675666Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2676253Z 
2025-01-10T13:49:05.2676762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2677400Z 
2025-01-10T13:49:05.2677677Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2678076Z 
2025-01-10T13:49:05.2678434Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89671d0>
2025-01-10T13:49:05.2679578Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2680210Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.2680447Z 
2025-01-10T13:49:05.2680705Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2681328Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2681838Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2682223Z         try:
2025-01-10T13:49:05.2682632Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2683139Z         except KeyError:
2025-01-10T13:49:05.2683588Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2684248Z     
2025-01-10T13:49:05.2684529Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2684942Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2685375Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2685871Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2686365Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2686755Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2687225Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2687648Z             else:
2025-01-10T13:49:05.2687970Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2688414Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2688718Z 
2025-01-10T13:49:05.2688919Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2689435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2689989Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2690456Z     ???
2025-01-10T13:49:05.2690761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2691079Z 
2025-01-10T13:49:05.2691181Z >   ???
2025-01-10T13:49:05.2691550Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2692048Z E   
2025-01-10T13:49:05.2692446Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2693050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2693526Z E          ...
2025-01-10T13:49:05.2694338Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2694904Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2695490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2695961Z E          ...
2025-01-10T13:49:05.2696276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2696773Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2697303Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2697618Z 
2025-01-10T13:49:05.2697770Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2698359Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-10T13:49:05.2698856Z 
2025-01-10T13:49:05.2699259Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2699817Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2700331Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2700986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2701713Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2702567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2703092Z err_msg = None
2025-01-10T13:49:05.2703357Z 
2025-01-10T13:49:05.2703858Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2704562Z         if err_msg is None:
2025-01-10T13:49:05.2705174Z             if left.shape != right.shape:
2025-01-10T13:49:05.2705908Z                 raise_assert_detail(
2025-01-10T13:49:05.2723098Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2723784Z                 )
2025-01-10T13:49:05.2724080Z     
2025-01-10T13:49:05.2724331Z             diff = 0
2025-01-10T13:49:05.2724704Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2725145Z                 # count up differences
2025-01-10T13:49:05.2725679Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2726209Z                     diff += 1
2025-01-10T13:49:05.2726524Z     
2025-01-10T13:49:05.2726792Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2727290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2727939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2728626Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2729165Z E           
2025-01-10T13:49:05.2729560Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2730429Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2731541Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2732146Z 
2025-01-10T13:49:05.2732701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2733389Z 
2025-01-10T13:49:05.2733869Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2734311Z 
2025-01-10T13:49:05.2734699Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8966c00>
2025-01-10T13:49:05.2735468Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2736246Z attr = 'beta_sobolev'
2025-01-10T13:49:05.2736453Z 
2025-01-10T13:49:05.2736675Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2737214Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2737661Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2738002Z         try:
2025-01-10T13:49:05.2738389Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2738866Z         except KeyError:
2025-01-10T13:49:05.2739305Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2739830Z     
2025-01-10T13:49:05.2740136Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2740591Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2741260Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2741850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2742425Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2742841Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2743306Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2743918Z             else:
2025-01-10T13:49:05.2744255Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2744725Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2745058Z 
2025-01-10T13:49:05.2745268Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2745811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2746418Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2746891Z     ???
2025-01-10T13:49:05.2747200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2747517Z 
2025-01-10T13:49:05.2747637Z >   ???
2025-01-10T13:49:05.2747978Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2748426Z E   
2025-01-10T13:49:05.2748770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2749283Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2749703Z E          ...
2025-01-10T13:49:05.2749998Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2750462Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2750993Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2751477Z E          ...
2025-01-10T13:49:05.2751809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2752340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2752917Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2753259Z 
2025-01-10T13:49:05.2753415Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2754230Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-10T13:49:05.2754768Z 
2025-01-10T13:49:05.2754985Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2755565Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2756088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2756618Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2757209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2757721Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2758133Z err_msg = None
2025-01-10T13:49:05.2758308Z 
2025-01-10T13:49:05.2758481Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2758902Z         if err_msg is None:
2025-01-10T13:49:05.2759267Z             if left.shape != right.shape:
2025-01-10T13:49:05.2759669Z                 raise_assert_detail(
2025-01-10T13:49:05.2760356Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2760838Z                 )
2025-01-10T13:49:05.2761109Z     
2025-01-10T13:49:05.2761349Z             diff = 0
2025-01-10T13:49:05.2761699Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2762136Z                 # count up differences
2025-01-10T13:49:05.2762657Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2763249Z                     diff += 1
2025-01-10T13:49:05.2763784Z     
2025-01-10T13:49:05.2764104Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2764646Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2765368Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2766257Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2766710Z E           
2025-01-10T13:49:05.2767063Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2767838Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2768885Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2769484Z 
2025-01-10T13:49:05.2770015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2770665Z 
2025-01-10T13:49:05.2770944Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2771369Z 
2025-01-10T13:49:05.2771731Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8966d80>
2025-01-10T13:49:05.2772513Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be854c080>
2025-01-10T13:49:05.2773038Z attr = 'j_blues'
2025-01-10T13:49:05.2773211Z 
2025-01-10T13:49:05.2773430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2774175Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2774606Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2774979Z         try:
2025-01-10T13:49:05.2775412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2775947Z         except KeyError:
2025-01-10T13:49:05.2776420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2776954Z     
2025-01-10T13:49:05.2777263Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2777705Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2778188Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2778702Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2779201Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2779601Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2780066Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2780506Z             else:
2025-01-10T13:49:05.2780832Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2781304Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2781620Z 
2025-01-10T13:49:05.2781819Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2782329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2782878Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2783349Z     ???
2025-01-10T13:49:05.2783861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2784391Z 
2025-01-10T13:49:05.2784502Z >   ???
2025-01-10T13:49:05.2784842Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2785276Z E   
2025-01-10T13:49:05.2785610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2786114Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2786515Z E          ...
2025-01-10T13:49:05.2786809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2787346Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2787946Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2788429Z E          ...
2025-01-10T13:49:05.2788769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2789510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2790121Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2790465Z 
2025-01-10T13:49:05.2790610Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2791180Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-10T13:49:05.2791660Z 
2025-01-10T13:49:05.2791874Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2792447Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2792966Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2793488Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2794257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2794744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2795131Z err_msg = None
2025-01-10T13:49:05.2795297Z 
2025-01-10T13:49:05.2795472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2795908Z         if err_msg is None:
2025-01-10T13:49:05.2796261Z             if left.shape != right.shape:
2025-01-10T13:49:05.2796660Z                 raise_assert_detail(
2025-01-10T13:49:05.2797133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2797605Z                 )
2025-01-10T13:49:05.2797870Z     
2025-01-10T13:49:05.2798107Z             diff = 0
2025-01-10T13:49:05.2798451Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2798904Z                 # count up differences
2025-01-10T13:49:05.2799511Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2800119Z                     diff += 1
2025-01-10T13:49:05.2800497Z     
2025-01-10T13:49:05.2800828Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2801371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2802112Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2802757Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2803189Z E           
2025-01-10T13:49:05.2803533Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2804474Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2805533Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2806323Z 
2025-01-10T13:49:05.2806826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2807474Z 
2025-01-10T13:49:05.2807745Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2808157Z 
2025-01-10T13:49:05.2808519Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8965af0>
2025-01-10T13:49:05.2809290Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.2809809Z attr = 'lines'
2025-01-10T13:49:05.2809980Z 
2025-01-10T13:49:05.2810190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2810711Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2811204Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2811588Z         try:
2025-01-10T13:49:05.2812254Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2812820Z         except KeyError:
2025-01-10T13:49:05.2813318Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2814112Z     
2025-01-10T13:49:05.2814415Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2814829Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2815255Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2815759Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2816257Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2816655Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2817113Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2817554Z             else:
2025-01-10T13:49:05.2817878Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2818328Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2818632Z 
2025-01-10T13:49:05.2818835Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2819349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2819909Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2820381Z     ???
2025-01-10T13:49:05.2820704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2821029Z 
2025-01-10T13:49:05.2821133Z >   ???
2025-01-10T13:49:05.2821473Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2821908Z E   
2025-01-10T13:49:05.2822241Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2822780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2823256Z E          ...
2025-01-10T13:49:05.2823741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2824303Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2825012Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2825494Z E          ...
2025-01-10T13:49:05.2825806Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2826297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2826826Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2827140Z 
2025-01-10T13:49:05.2827289Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2827893Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-10T13:49:05.2828397Z 
2025-01-10T13:49:05.2828818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89660c0>
2025-01-10T13:49:05.2829603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.2830132Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.2830385Z 
2025-01-10T13:49:05.2830601Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2831135Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2831581Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2831914Z         try:
2025-01-10T13:49:05.2832497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2832974Z         except KeyError:
2025-01-10T13:49:05.2833385Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2834033Z     
2025-01-10T13:49:05.2834344Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2834803Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2835270Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2835822Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2836363Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2836759Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2837225Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2837563Z 
2025-01-10T13:49:05.2837953Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2838499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2838850Z 
2025-01-10T13:49:05.2839084Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.2839589Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.2840030Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2840454Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.2840923Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.2841413Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.2841829Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2842252Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.2842618Z err_msg = None
2025-01-10T13:49:05.2842788Z 
2025-01-10T13:49:05.2842963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2843383Z         if err_msg is None:
2025-01-10T13:49:05.2843912Z             if left.shape != right.shape:
2025-01-10T13:49:05.2844312Z                 raise_assert_detail(
2025-01-10T13:49:05.2844805Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2845360Z                 )
2025-01-10T13:49:05.2845665Z     
2025-01-10T13:49:05.2845942Z             diff = 0
2025-01-10T13:49:05.2846342Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2846853Z                 # count up differences
2025-01-10T13:49:05.2847473Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2848087Z                     diff += 1
2025-01-10T13:49:05.2848424Z     
2025-01-10T13:49:05.2848698Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2849200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2849876Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2850493Z E           AssertionError: Series are different
2025-01-10T13:49:05.2850926Z E           
2025-01-10T13:49:05.2851251Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.2852184Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.2853503Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2855141Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2855829Z 
2025-01-10T13:49:05.2856329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2857422Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-10T13:49:05.2857981Z 
2025-01-10T13:49:05.2858391Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8967a40>
2025-01-10T13:49:05.2859474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.2860072Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.2860336Z 
2025-01-10T13:49:05.2860574Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2861142Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2861608Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2861959Z         try:
2025-01-10T13:49:05.2862357Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2862867Z         except KeyError:
2025-01-10T13:49:05.2863304Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2863920Z     
2025-01-10T13:49:05.2864188Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2864571Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2864984Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2865458Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2865942Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2866323Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2866755Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2867078Z 
2025-01-10T13:49:05.2867269Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2867763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2868105Z 
2025-01-10T13:49:05.2868347Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.2868903Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.2869393Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.2869878Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.2870419Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.2870984Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.2871482Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.2871936Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.2872322Z err_msg = None
2025-01-10T13:49:05.2872498Z 
2025-01-10T13:49:05.2872680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2873127Z         if err_msg is None:
2025-01-10T13:49:05.2873500Z             if left.shape != right.shape:
2025-01-10T13:49:05.2874075Z                 raise_assert_detail(
2025-01-10T13:49:05.2874591Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2875082Z                 )
2025-01-10T13:49:05.2875362Z     
2025-01-10T13:49:05.2875605Z             diff = 0
2025-01-10T13:49:05.2875949Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2876388Z                 # count up differences
2025-01-10T13:49:05.2876918Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2877457Z                     diff += 1
2025-01-10T13:49:05.2877778Z     
2025-01-10T13:49:05.2878040Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2878755Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2879373Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2879959Z E           AssertionError: Series are different
2025-01-10T13:49:05.2880407Z E           
2025-01-10T13:49:05.2880762Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.2881805Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.2883542Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.2885171Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.2885978Z 
2025-01-10T13:49:05.2886515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2887465Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-10T13:49:05.2887911Z 
2025-01-10T13:49:05.2888127Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2888669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2889159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2889651Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2890195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2890672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2891059Z err_msg = None
2025-01-10T13:49:05.2891226Z 
2025-01-10T13:49:05.2891393Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2891867Z         if err_msg is None:
2025-01-10T13:49:05.2892283Z             if left.shape != right.shape:
2025-01-10T13:49:05.2892741Z                 raise_assert_detail(
2025-01-10T13:49:05.2893291Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2893989Z                 )
2025-01-10T13:49:05.2894306Z     
2025-01-10T13:49:05.2894593Z             diff = 0
2025-01-10T13:49:05.2895003Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2895485Z                 # count up differences
2025-01-10T13:49:05.2896039Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2896607Z                     diff += 1
2025-01-10T13:49:05.2896944Z     
2025-01-10T13:49:05.2897224Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2897734Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2898389Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2899015Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2899425Z E           
2025-01-10T13:49:05.2899973Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2900720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2901725Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2902303Z 
2025-01-10T13:49:05.2902962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2903783Z 
2025-01-10T13:49:05.2904100Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2904590Z 
2025-01-10T13:49:05.2905013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8967500>
2025-01-10T13:49:05.2905950Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>, attr = 'nu'
2025-01-10T13:49:05.2906487Z 
2025-01-10T13:49:05.2906745Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2907325Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2907791Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2908144Z         try:
2025-01-10T13:49:05.2908542Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2909050Z         except KeyError:
2025-01-10T13:49:05.2909497Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2909995Z     
2025-01-10T13:49:05.2910271Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2910669Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2911082Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2911549Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2912029Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2912406Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2912840Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2913160Z 
2025-01-10T13:49:05.2913353Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2914009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2914555Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2915020Z     ???
2025-01-10T13:49:05.2915345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2915718Z 
2025-01-10T13:49:05.2915850Z >   ???
2025-01-10T13:49:05.2916235Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2916738Z E   
2025-01-10T13:49:05.2917116Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2917698Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2918181Z E          ...
2025-01-10T13:49:05.2918526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2919043Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2919581Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2920032Z E          ...
2025-01-10T13:49:05.2920336Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2920833Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2921360Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2921673Z 
2025-01-10T13:49:05.2921816Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2922402Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-10T13:49:05.2922873Z 
2025-01-10T13:49:05.2923311Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2924033Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2924529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2925023Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2925580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2926065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2926458Z err_msg = None
2025-01-10T13:49:05.2926619Z 
2025-01-10T13:49:05.2926794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2927221Z         if err_msg is None:
2025-01-10T13:49:05.2927827Z             if left.shape != right.shape:
2025-01-10T13:49:05.2928304Z                 raise_assert_detail(
2025-01-10T13:49:05.2928914Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2929462Z                 )
2025-01-10T13:49:05.2929763Z     
2025-01-10T13:49:05.2930018Z             diff = 0
2025-01-10T13:49:05.2930393Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2930863Z                 # count up differences
2025-01-10T13:49:05.2931424Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2931991Z                     diff += 1
2025-01-10T13:49:05.2932327Z     
2025-01-10T13:49:05.2932605Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2933101Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2933926Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2934523Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2934938Z E           
2025-01-10T13:49:05.2935271Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2936012Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2937025Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2937596Z 
2025-01-10T13:49:05.2938306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2939040Z 
2025-01-10T13:49:05.2939352Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2939837Z 
2025-01-10T13:49:05.2940253Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8967e90>
2025-01-10T13:49:05.2941128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.2941691Z attr = 'wavelength_cm'
2025-01-10T13:49:05.2941910Z 
2025-01-10T13:49:05.2942138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2942699Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2943171Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2943522Z         try:
2025-01-10T13:49:05.2944096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2944606Z         except KeyError:
2025-01-10T13:49:05.2945021Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2945477Z     
2025-01-10T13:49:05.2945745Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2946134Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2946757Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2947235Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2947707Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2948082Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2948515Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2948823Z 
2025-01-10T13:49:05.2949020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2949590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2950228Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2950763Z     ???
2025-01-10T13:49:05.2951133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2951702Z 
2025-01-10T13:49:05.2951839Z >   ???
2025-01-10T13:49:05.2952240Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2952725Z E   
2025-01-10T13:49:05.2953077Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2953771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2954218Z E          ...
2025-01-10T13:49:05.2954529Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2955028Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2955582Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2956014Z E          ...
2025-01-10T13:49:05.2956314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2956775Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2957265Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2957566Z 
2025-01-10T13:49:05.2957715Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2958248Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-10T13:49:05.2958699Z 
2025-01-10T13:49:05.2958907Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2959453Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2959941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2960423Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2961014Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2961567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2962028Z err_msg = None
2025-01-10T13:49:05.2962233Z 
2025-01-10T13:49:05.2962426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2962585Z         if err_msg is None:
2025-01-10T13:49:05.2962749Z             if left.shape != right.shape:
2025-01-10T13:49:05.2962909Z                 raise_assert_detail(
2025-01-10T13:49:05.2963181Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2963316Z                 )
2025-01-10T13:49:05.2963440Z     
2025-01-10T13:49:05.2963569Z             diff = 0
2025-01-10T13:49:05.2963928Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2964080Z                 # count up differences
2025-01-10T13:49:05.2964407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2964533Z                     diff += 1
2025-01-10T13:49:05.2964644Z     
2025-01-10T13:49:05.2964781Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2965010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2965305Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2965500Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2965612Z E           
2025-01-10T13:49:05.2965996Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2966460Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2966916Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2966924Z 
2025-01-10T13:49:05.2967630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2967639Z 
2025-01-10T13:49:05.2967943Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2967950Z 
2025-01-10T13:49:05.2968326Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8967e00>
2025-01-10T13:49:05.2968655Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>, attr = 'f_lu'
2025-01-10T13:49:05.2968661Z 
2025-01-10T13:49:05.2968877Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2969062Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2969189Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2969304Z         try:
2025-01-10T13:49:05.2969528Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2969656Z         except KeyError:
2025-01-10T13:49:05.2969869Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2969986Z     
2025-01-10T13:49:05.2970124Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2970269Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2970414Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2970623Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2970755Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2970889Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2971061Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2971067Z 
2025-01-10T13:49:05.2971261Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.2971442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2971670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2971780Z     ???
2025-01-10T13:49:05.2971950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2971969Z 
2025-01-10T13:49:05.2972071Z >   ???
2025-01-10T13:49:05.2972268Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2972379Z E   
2025-01-10T13:49:05.2972581Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2972766Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2972897Z E          ...
2025-01-10T13:49:05.2973051Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2973292Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2973496Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2973793Z E          ...
2025-01-10T13:49:05.2973952Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2974186Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2974370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2974386Z 
2025-01-10T13:49:05.2974545Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2974920Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-10T13:49:05.2975160Z 
2025-01-10T13:49:05.2975402Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2975645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2975815Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2976068Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2976286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2976442Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2976557Z err_msg = None
2025-01-10T13:49:05.2976572Z 
2025-01-10T13:49:05.2976751Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2977047Z         if err_msg is None:
2025-01-10T13:49:05.2977210Z             if left.shape != right.shape:
2025-01-10T13:49:05.2977347Z                 raise_assert_detail(
2025-01-10T13:49:05.2977594Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2977710Z                 )
2025-01-10T13:49:05.2977815Z     
2025-01-10T13:49:05.2977934Z             diff = 0
2025-01-10T13:49:05.2978113Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2978256Z                 # count up differences
2025-01-10T13:49:05.2978548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2978674Z                     diff += 1
2025-01-10T13:49:05.2978780Z     
2025-01-10T13:49:05.2978921Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2979150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2979442Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2979626Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2979735Z E           
2025-01-10T13:49:05.2979928Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2980356Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2980798Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2980805Z 
2025-01-10T13:49:05.2981324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.2981330Z 
2025-01-10T13:49:05.2981602Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.2981615Z 
2025-01-10T13:49:05.2981983Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8964050>
2025-01-10T13:49:05.2982249Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.2982374Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.2982380Z 
2025-01-10T13:49:05.2982595Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.2982777Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.2982907Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.2983013Z         try:
2025-01-10T13:49:05.2983238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.2983360Z         except KeyError:
2025-01-10T13:49:05.2983582Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.2983844Z     
2025-01-10T13:49:05.2983981Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.2984295Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.2984436Z             if attr == "selected_atoms":
2025-01-10T13:49:05.2984644Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.2984800Z             elif actual.ndim == 1:
2025-01-10T13:49:05.2984959Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.2985161Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.2985284Z             else:
2025-01-10T13:49:05.2985447Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.2985642Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.2985650Z 
2025-01-10T13:49:05.2985875Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.2986088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2986527Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.2986661Z     ???
2025-01-10T13:49:05.2986863Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.2986881Z 
2025-01-10T13:49:05.2987005Z >   ???
2025-01-10T13:49:05.2987233Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.2987358Z E   
2025-01-10T13:49:05.2987591Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.2987795Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2987925Z E          ...
2025-01-10T13:49:05.2988075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2988315Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2988501Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.2988618Z E          ...
2025-01-10T13:49:05.2988751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.2988971Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.2989139Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.2989152Z 
2025-01-10T13:49:05.2989301Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.2989640Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-10T13:49:05.2989646Z 
2025-01-10T13:49:05.2989868Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2990086Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2990239Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2990469Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.2990675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.2990833Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.2990949Z err_msg = None
2025-01-10T13:49:05.2990955Z 
2025-01-10T13:49:05.2991143Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.2991281Z         if err_msg is None:
2025-01-10T13:49:05.2991434Z             if left.shape != right.shape:
2025-01-10T13:49:05.2991563Z                 raise_assert_detail(
2025-01-10T13:49:05.2991805Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.2991921Z                 )
2025-01-10T13:49:05.2992024Z     
2025-01-10T13:49:05.2992137Z             diff = 0
2025-01-10T13:49:05.2992304Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.2992438Z                 # count up differences
2025-01-10T13:49:05.2992701Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.2992823Z                     diff += 1
2025-01-10T13:49:05.2992925Z     
2025-01-10T13:49:05.2993210Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.2993862Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.2994704Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.2995301Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.2995733Z E           
2025-01-10T13:49:05.2996056Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.2996804Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2998162Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.2998876Z 
2025-01-10T13:49:05.2999464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3000214Z 
2025-01-10T13:49:05.3000541Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3001003Z 
2025-01-10T13:49:05.3001390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a51010>
2025-01-10T13:49:05.3002213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.3002766Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3002979Z 
2025-01-10T13:49:05.3003211Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3003952Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3004418Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3004773Z         try:
2025-01-10T13:49:05.3005148Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3005629Z         except KeyError:
2025-01-10T13:49:05.3006065Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3006532Z     
2025-01-10T13:49:05.3006802Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3007191Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3007597Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3008072Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3008550Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3008924Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3009406Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3009895Z             else:
2025-01-10T13:49:05.3010254Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3010767Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3011135Z 
2025-01-10T13:49:05.3011365Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3011948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3012594Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3013087Z     ???
2025-01-10T13:49:05.3013419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3013946Z 
2025-01-10T13:49:05.3014063Z >   ???
2025-01-10T13:49:05.3014416Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3014877Z E   
2025-01-10T13:49:05.3015233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3015771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3016208Z E          ...
2025-01-10T13:49:05.3016509Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3016982Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3017503Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3017925Z E          ...
2025-01-10T13:49:05.3018409Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3018876Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3019370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3019672Z 
2025-01-10T13:49:05.3019810Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3020347Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-10T13:49:05.3020802Z 
2025-01-10T13:49:05.3021024Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3021654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3022226Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3023024Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3023883Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3024491Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3024931Z err_msg = None
2025-01-10T13:49:05.3025112Z 
2025-01-10T13:49:05.3025292Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3025740Z         if err_msg is None:
2025-01-10T13:49:05.3026118Z             if left.shape != right.shape:
2025-01-10T13:49:05.3026546Z                 raise_assert_detail(
2025-01-10T13:49:05.3027053Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3027557Z                 )
2025-01-10T13:49:05.3027841Z     
2025-01-10T13:49:05.3028093Z             diff = 0
2025-01-10T13:49:05.3028466Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3028955Z                 # count up differences
2025-01-10T13:49:05.3029492Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3030034Z                     diff += 1
2025-01-10T13:49:05.3030361Z     
2025-01-10T13:49:05.3030633Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3031111Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3031745Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3032339Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3032748Z E           
2025-01-10T13:49:05.3033103Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3034111Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3035266Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3035918Z 
2025-01-10T13:49:05.3036456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3037142Z 
2025-01-10T13:49:05.3037433Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3037873Z 
2025-01-10T13:49:05.3038263Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a524e0>
2025-01-10T13:49:05.3039081Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf263d760>
2025-01-10T13:49:05.3039618Z attr = 'j_blues'
2025-01-10T13:49:05.3039799Z 
2025-01-10T13:49:05.3040024Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3040560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3041208Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3041574Z         try:
2025-01-10T13:49:05.3041983Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3042468Z         except KeyError:
2025-01-10T13:49:05.3042898Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3043352Z     
2025-01-10T13:49:05.3043759Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3044145Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3044590Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3045151Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3045706Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3046351Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3047464Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3048064Z             else:
2025-01-10T13:49:05.3048587Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3049247Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3049617Z 
2025-01-10T13:49:05.3049916Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3050674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3051368Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3051937Z     ???
2025-01-10T13:49:05.3052488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3052899Z 
2025-01-10T13:49:05.3053044Z >   ???
2025-01-10T13:49:05.3072384Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3072892Z E   
2025-01-10T13:49:05.3073260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3074003Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3074442Z E          ...
2025-01-10T13:49:05.3074753Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3075238Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3075752Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3076176Z E          ...
2025-01-10T13:49:05.3076464Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3076932Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3077427Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3077729Z 
2025-01-10T13:49:05.3077869Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3078416Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-10T13:49:05.3078876Z 
2025-01-10T13:49:05.3079086Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3079735Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3080304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3080881Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3081514Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3082086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3082528Z err_msg = None
2025-01-10T13:49:05.3082707Z 
2025-01-10T13:49:05.3082891Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3083334Z         if err_msg is None:
2025-01-10T13:49:05.3083868Z             if left.shape != right.shape:
2025-01-10T13:49:05.3084288Z                 raise_assert_detail(
2025-01-10T13:49:05.3084797Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3085301Z                 )
2025-01-10T13:49:05.3085591Z     
2025-01-10T13:49:05.3085838Z             diff = 0
2025-01-10T13:49:05.3086205Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3086946Z                 # count up differences
2025-01-10T13:49:05.3087475Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3088020Z                     diff += 1
2025-01-10T13:49:05.3088337Z     
2025-01-10T13:49:05.3088606Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3089084Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3089722Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3090316Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3090742Z E           
2025-01-10T13:49:05.3091116Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3092156Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3093347Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3094177Z 
2025-01-10T13:49:05.3094758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3095439Z 
2025-01-10T13:49:05.3095742Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3096191Z 
2025-01-10T13:49:05.3096592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a529c0>
2025-01-10T13:49:05.3097421Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3097976Z attr = 'lines'
2025-01-10T13:49:05.3098159Z 
2025-01-10T13:49:05.3098380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3098910Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3099363Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3099707Z         try:
2025-01-10T13:49:05.3100091Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3100589Z         except KeyError:
2025-01-10T13:49:05.3101036Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3101497Z     
2025-01-10T13:49:05.3101781Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3102166Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3102581Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3103111Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3103809Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3104262Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3104779Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3105259Z             else:
2025-01-10T13:49:05.3105635Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3106158Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3106488Z 
2025-01-10T13:49:05.3106701Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3107248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3107856Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3108354Z     ???
2025-01-10T13:49:05.3108689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3109025Z 
2025-01-10T13:49:05.3109141Z >   ???
2025-01-10T13:49:05.3109500Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3109953Z E   
2025-01-10T13:49:05.3110291Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3110999Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3111425Z E          ...
2025-01-10T13:49:05.3111726Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3112201Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3112722Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3113138Z E          ...
2025-01-10T13:49:05.3113427Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3114096Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3114591Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3114932Z 
2025-01-10T13:49:05.3115092Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3115941Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-10T13:49:05.3116537Z 
2025-01-10T13:49:05.3116951Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50230>
2025-01-10T13:49:05.3117860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3118460Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3118721Z 
2025-01-10T13:49:05.3118955Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3119513Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3119978Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3120340Z         try:
2025-01-10T13:49:05.3120739Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3121262Z         except KeyError:
2025-01-10T13:49:05.3121699Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3122164Z     
2025-01-10T13:49:05.3122427Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3122820Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3123232Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3123871Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3124360Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3124740Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3125177Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3125496Z 
2025-01-10T13:49:05.3125692Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3126189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3126517Z 
2025-01-10T13:49:05.3126753Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3127306Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3127791Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3128285Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3128896Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3129480Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3129973Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3130423Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3130798Z err_msg = None
2025-01-10T13:49:05.3130973Z 
2025-01-10T13:49:05.3131161Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3131620Z         if err_msg is None:
2025-01-10T13:49:05.3131999Z             if left.shape != right.shape:
2025-01-10T13:49:05.3132420Z                 raise_assert_detail(
2025-01-10T13:49:05.3132929Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3133420Z                 )
2025-01-10T13:49:05.3133892Z     
2025-01-10T13:49:05.3134136Z             diff = 0
2025-01-10T13:49:05.3134490Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3134932Z                 # count up differences
2025-01-10T13:49:05.3135462Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3136214Z                     diff += 1
2025-01-10T13:49:05.3136535Z     
2025-01-10T13:49:05.3136798Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3137266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3137882Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3138476Z E           AssertionError: Series are different
2025-01-10T13:49:05.3138944Z E           
2025-01-10T13:49:05.3139302Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3140561Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3142033Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3143343Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3144253Z 
2025-01-10T13:49:05.3144805Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3145843Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-10T13:49:05.3146323Z 
2025-01-10T13:49:05.3146693Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50440>
2025-01-10T13:49:05.3147469Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3148014Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3148262Z 
2025-01-10T13:49:05.3148488Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3149021Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3149466Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3149836Z         try:
2025-01-10T13:49:05.3150217Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3150734Z         except KeyError:
2025-01-10T13:49:05.3151228Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3151762Z     
2025-01-10T13:49:05.3152078Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3152530Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3152997Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3153530Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3154237Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3154640Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3155100Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3155439Z 
2025-01-10T13:49:05.3155648Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3156183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3156528Z 
2025-01-10T13:49:05.3156773Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3157290Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3157722Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3158363Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3158837Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3159327Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3159746Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3160167Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3160528Z err_msg = None
2025-01-10T13:49:05.3160702Z 
2025-01-10T13:49:05.3160872Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3161287Z         if err_msg is None:
2025-01-10T13:49:05.3161645Z             if left.shape != right.shape:
2025-01-10T13:49:05.3162096Z                 raise_assert_detail(
2025-01-10T13:49:05.3162870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3163434Z                 )
2025-01-10T13:49:05.3163910Z     
2025-01-10T13:49:05.3164211Z             diff = 0
2025-01-10T13:49:05.3164627Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3165139Z                 # count up differences
2025-01-10T13:49:05.3165733Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3166302Z                     diff += 1
2025-01-10T13:49:05.3166640Z     
2025-01-10T13:49:05.3166925Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3167444Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3168110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3168717Z E           AssertionError: Series are different
2025-01-10T13:49:05.3169137Z E           
2025-01-10T13:49:05.3169448Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3170412Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3171829Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3173256Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3174211Z 
2025-01-10T13:49:05.3174792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3175870Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-10T13:49:05.3176382Z 
2025-01-10T13:49:05.3176627Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3177261Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3177808Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3178337Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3178924Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3179653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3180071Z err_msg = None
2025-01-10T13:49:05.3180253Z 
2025-01-10T13:49:05.3180431Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3180875Z         if err_msg is None:
2025-01-10T13:49:05.3181251Z             if left.shape != right.shape:
2025-01-10T13:49:05.3181649Z                 raise_assert_detail(
2025-01-10T13:49:05.3182133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3182626Z                 )
2025-01-10T13:49:05.3182898Z     
2025-01-10T13:49:05.3183143Z             diff = 0
2025-01-10T13:49:05.3183498Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3184109Z                 # count up differences
2025-01-10T13:49:05.3184802Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3185342Z                     diff += 1
2025-01-10T13:49:05.3185665Z     
2025-01-10T13:49:05.3185953Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3186494Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3187227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3187921Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3188397Z E           
2025-01-10T13:49:05.3188788Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3189623Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3190677Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3191296Z 
2025-01-10T13:49:05.3191849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3192527Z 
2025-01-10T13:49:05.3192819Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3193236Z 
2025-01-10T13:49:05.3193794Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a503b0>
2025-01-10T13:49:05.3194645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>, attr = 'nu'
2025-01-10T13:49:05.3195117Z 
2025-01-10T13:49:05.3195346Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3195881Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3196321Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3196661Z         try:
2025-01-10T13:49:05.3197033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3197505Z         except KeyError:
2025-01-10T13:49:05.3197965Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3198488Z     
2025-01-10T13:49:05.3198793Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3199232Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3199698Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3200239Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3200783Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3201201Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3201668Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3202012Z 
2025-01-10T13:49:05.3202228Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3202771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3203561Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3204266Z     ???
2025-01-10T13:49:05.3204594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3204921Z 
2025-01-10T13:49:05.3205029Z >   ???
2025-01-10T13:49:05.3205361Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3205792Z E   
2025-01-10T13:49:05.3206135Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3206643Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3207059Z E          ...
2025-01-10T13:49:05.3207355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3207824Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3208501Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3208921Z E          ...
2025-01-10T13:49:05.3209215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3209738Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3210313Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3210659Z 
2025-01-10T13:49:05.3210812Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3211462Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-10T13:49:05.3212022Z 
2025-01-10T13:49:05.3212268Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3212900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3213421Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3214153Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3214738Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3215256Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3215676Z err_msg = None
2025-01-10T13:49:05.3215857Z 
2025-01-10T13:49:05.3216035Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3216480Z         if err_msg is None:
2025-01-10T13:49:05.3216850Z             if left.shape != right.shape:
2025-01-10T13:49:05.3217249Z                 raise_assert_detail(
2025-01-10T13:49:05.3217726Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3218205Z                 )
2025-01-10T13:49:05.3218474Z     
2025-01-10T13:49:05.3218719Z             diff = 0
2025-01-10T13:49:05.3219072Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3219512Z                 # count up differences
2025-01-10T13:49:05.3220047Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3220580Z                     diff += 1
2025-01-10T13:49:05.3220902Z     
2025-01-10T13:49:05.3221169Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3221717Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3222437Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3223112Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3223590Z E           
2025-01-10T13:49:05.3224134Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3224972Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3226028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3226832Z 
2025-01-10T13:49:05.3227373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3228058Z 
2025-01-10T13:49:05.3228348Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3228766Z 
2025-01-10T13:49:05.3229188Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a504a0>
2025-01-10T13:49:05.3229978Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3230511Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3230711Z 
2025-01-10T13:49:05.3231100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3231644Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3232096Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3232427Z         try:
2025-01-10T13:49:05.3232798Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3233345Z         except KeyError:
2025-01-10T13:49:05.3233986Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3234517Z     
2025-01-10T13:49:05.3234830Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3235277Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3235749Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3236302Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3236834Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3237230Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3237704Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3238038Z 
2025-01-10T13:49:05.3238247Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3238800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3239384Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3239877Z     ???
2025-01-10T13:49:05.3240206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3240533Z 
2025-01-10T13:49:05.3240640Z >   ???
2025-01-10T13:49:05.3240974Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3241411Z E   
2025-01-10T13:49:05.3241758Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3242272Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3242688Z E          ...
2025-01-10T13:49:05.3242982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3243464Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3244139Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3244557Z E          ...
2025-01-10T13:49:05.3244852Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3245366Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3245938Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3246292Z 
2025-01-10T13:49:05.3246447Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3247064Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-10T13:49:05.3247572Z 
2025-01-10T13:49:05.3247797Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3248380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3248914Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3249450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3250041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3250753Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3251165Z err_msg = None
2025-01-10T13:49:05.3251333Z 
2025-01-10T13:49:05.3251510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3252555Z         if err_msg is None:
2025-01-10T13:49:05.3252916Z             if left.shape != right.shape:
2025-01-10T13:49:05.3253319Z                 raise_assert_detail(
2025-01-10T13:49:05.3253999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3254487Z                 )
2025-01-10T13:49:05.3254761Z     
2025-01-10T13:49:05.3255004Z             diff = 0
2025-01-10T13:49:05.3255358Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3255816Z                 # count up differences
2025-01-10T13:49:05.3256654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3257305Z                     diff += 1
2025-01-10T13:49:05.3257675Z     
2025-01-10T13:49:05.3257979Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3258529Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3259198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3259839Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3260284Z E           
2025-01-10T13:49:05.3260635Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3261433Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3262461Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3263041Z 
2025-01-10T13:49:05.3263557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3264366Z 
2025-01-10T13:49:05.3264642Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3265062Z 
2025-01-10T13:49:05.3265421Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a53560>
2025-01-10T13:49:05.3266259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>, attr = 'f_lu'
2025-01-10T13:49:05.3266746Z 
2025-01-10T13:49:05.3267000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3267616Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3268138Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3268532Z         try:
2025-01-10T13:49:05.3268977Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3269539Z         except KeyError:
2025-01-10T13:49:05.3270022Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3270509Z     
2025-01-10T13:49:05.3270796Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3271216Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3271649Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3272155Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3272666Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3273070Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3273533Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3274013Z 
2025-01-10T13:49:05.3274215Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3274917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3275479Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3275953Z     ???
2025-01-10T13:49:05.3276272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3276601Z 
2025-01-10T13:49:05.3276704Z >   ???
2025-01-10T13:49:05.3277044Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3277478Z E   
2025-01-10T13:49:05.3277815Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3278333Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3278805Z E          ...
2025-01-10T13:49:05.3279146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3279897Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3280525Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3281029Z E          ...
2025-01-10T13:49:05.3281388Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3281919Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3282446Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3282759Z 
2025-01-10T13:49:05.3282910Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3283497Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-10T13:49:05.3283504Z 
2025-01-10T13:49:05.3283880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3284104Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3284267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3284491Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3284702Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3284855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3284978Z err_msg = None
2025-01-10T13:49:05.3284985Z 
2025-01-10T13:49:05.3285160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3285289Z         if err_msg is None:
2025-01-10T13:49:05.3285439Z             if left.shape != right.shape:
2025-01-10T13:49:05.3285577Z                 raise_assert_detail(
2025-01-10T13:49:05.3285801Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3285913Z                 )
2025-01-10T13:49:05.3286021Z     
2025-01-10T13:49:05.3286127Z             diff = 0
2025-01-10T13:49:05.3286302Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3286431Z                 # count up differences
2025-01-10T13:49:05.3286717Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3286835Z                     diff += 1
2025-01-10T13:49:05.3286950Z     
2025-01-10T13:49:05.3287081Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3287298Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3287568Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3287747Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3287854Z E           
2025-01-10T13:49:05.3288034Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3288477Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3288907Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3289124Z 
2025-01-10T13:49:05.3289635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3289642Z 
2025-01-10T13:49:05.3289908Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3289921Z 
2025-01-10T13:49:05.3290300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50800>
2025-01-10T13:49:05.3290612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3290755Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3290763Z 
2025-01-10T13:49:05.3291242Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3291461Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3291620Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3291740Z         try:
2025-01-10T13:49:05.3292012Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3292146Z         except KeyError:
2025-01-10T13:49:05.3292405Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3292523Z     
2025-01-10T13:49:05.3292681Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3292857Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3293015Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3293262Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3293406Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3293559Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3293940Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3294063Z             else:
2025-01-10T13:49:05.3294215Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3294397Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3294403Z 
2025-01-10T13:49:05.3294614Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3294809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3295050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3295166Z     ???
2025-01-10T13:49:05.3295349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3295355Z 
2025-01-10T13:49:05.3295461Z >   ???
2025-01-10T13:49:05.3295676Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3295784Z E   
2025-01-10T13:49:05.3296000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3296183Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3296301Z E          ...
2025-01-10T13:49:05.3296442Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3296664Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3296842Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3296958Z E          ...
2025-01-10T13:49:05.3297092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3297303Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3297466Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3297472Z 
2025-01-10T13:49:05.3297605Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3297923Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-10T13:49:05.3297928Z 
2025-01-10T13:49:05.3298128Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3298342Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3298491Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3298904Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3299095Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3299242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3299358Z err_msg = None
2025-01-10T13:49:05.3299364Z 
2025-01-10T13:49:05.3299533Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3299661Z         if err_msg is None:
2025-01-10T13:49:05.3299802Z             if left.shape != right.shape:
2025-01-10T13:49:05.3299934Z                 raise_assert_detail(
2025-01-10T13:49:05.3300159Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3300271Z                 )
2025-01-10T13:49:05.3300532Z     
2025-01-10T13:49:05.3300658Z             diff = 0
2025-01-10T13:49:05.3300827Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3300969Z                 # count up differences
2025-01-10T13:49:05.3301234Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3301353Z                     diff += 1
2025-01-10T13:49:05.3301460Z     
2025-01-10T13:49:05.3301592Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3301813Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3302118Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3302323Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3302448Z E           
2025-01-10T13:49:05.3302649Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3303150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3303808Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3303819Z 
2025-01-10T13:49:05.3304409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3304417Z 
2025-01-10T13:49:05.3304732Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3304738Z 
2025-01-10T13:49:05.3305172Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a51c10>
2025-01-10T13:49:05.3305477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3305617Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3305623Z 
2025-01-10T13:49:05.3305856Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3306045Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3306182Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3306292Z         try:
2025-01-10T13:49:05.3306533Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3306659Z         except KeyError:
2025-01-10T13:49:05.3306891Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3306999Z     
2025-01-10T13:49:05.3307143Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3307292Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3307441Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3307663Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3307806Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3307946Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3308347Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3308464Z             else:
2025-01-10T13:49:05.3308611Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3308785Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3308791Z 
2025-01-10T13:49:05.3308993Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3309185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3309414Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3309522Z     ???
2025-01-10T13:49:05.3309693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3309698Z 
2025-01-10T13:49:05.3309806Z >   ???
2025-01-10T13:49:05.3310163Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3310281Z E   
2025-01-10T13:49:05.3310489Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3310667Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3310784Z E          ...
2025-01-10T13:49:05.3310915Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3311120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3311292Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3311404Z E          ...
2025-01-10T13:49:05.3311534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3311737Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3311896Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3311902Z 
2025-01-10T13:49:05.3312041Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3312353Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-10T13:49:05.3312367Z 
2025-01-10T13:49:05.3312570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3312781Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3312927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3313136Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3313327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3313471Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3313584Z err_msg = None
2025-01-10T13:49:05.3313589Z 
2025-01-10T13:49:05.3313941Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3314087Z         if err_msg is None:
2025-01-10T13:49:05.3314257Z             if left.shape != right.shape:
2025-01-10T13:49:05.3314419Z                 raise_assert_detail(
2025-01-10T13:49:05.3314682Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3314820Z                 )
2025-01-10T13:49:05.3314934Z     
2025-01-10T13:49:05.3315066Z             diff = 0
2025-01-10T13:49:05.3315262Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3315420Z                 # count up differences
2025-01-10T13:49:05.3315731Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3315864Z                     diff += 1
2025-01-10T13:49:05.3315983Z     
2025-01-10T13:49:05.3316142Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3316382Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3316703Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3316913Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3317046Z E           
2025-01-10T13:49:05.3317245Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3317886Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3318348Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3318355Z 
2025-01-10T13:49:05.3318887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3319060Z 
2025-01-10T13:49:05.3319359Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3319374Z 
2025-01-10T13:49:05.3319761Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a514f0>
2025-01-10T13:49:05.3320043Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc5ee4aa0>
2025-01-10T13:49:05.3320166Z attr = 'j_blues'
2025-01-10T13:49:05.3320172Z 
2025-01-10T13:49:05.3320407Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3320598Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3320727Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3320843Z         try:
2025-01-10T13:49:05.3321062Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3321187Z         except KeyError:
2025-01-10T13:49:05.3321401Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3321502Z     
2025-01-10T13:49:05.3321643Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3321788Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3321925Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3322139Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3322272Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3322409Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3322584Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3322690Z             else:
2025-01-10T13:49:05.3322840Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3323004Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3323010Z 
2025-01-10T13:49:05.3323211Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3323394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3323780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3323902Z     ???
2025-01-10T13:49:05.3324074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3324086Z 
2025-01-10T13:49:05.3324194Z >   ???
2025-01-10T13:49:05.3324387Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3324494Z E   
2025-01-10T13:49:05.3324693Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3324864Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3324968Z E          ...
2025-01-10T13:49:05.3325101Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3325296Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3325473Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3325592Z E          ...
2025-01-10T13:49:05.3325739Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3325964Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3326157Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3326166Z 
2025-01-10T13:49:05.3326323Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3326905Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-10T13:49:05.3326912Z 
2025-01-10T13:49:05.3327149Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3327381Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3327551Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3327804Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3328020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3328186Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3328315Z err_msg = None
2025-01-10T13:49:05.3328507Z 
2025-01-10T13:49:05.3328732Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3328874Z         if err_msg is None:
2025-01-10T13:49:05.3329117Z             if left.shape != right.shape:
2025-01-10T13:49:05.3329262Z                 raise_assert_detail(
2025-01-10T13:49:05.3329515Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3329626Z                 )
2025-01-10T13:49:05.3329736Z     
2025-01-10T13:49:05.3329847Z             diff = 0
2025-01-10T13:49:05.3330031Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3330178Z                 # count up differences
2025-01-10T13:49:05.3330469Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3330597Z                     diff += 1
2025-01-10T13:49:05.3330703Z     
2025-01-10T13:49:05.3330848Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3331077Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3331382Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3331575Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3331694Z E           
2025-01-10T13:49:05.3331875Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3332338Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3332794Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3332801Z 
2025-01-10T13:49:05.3333319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3333333Z 
2025-01-10T13:49:05.3333795Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3333804Z 
2025-01-10T13:49:05.3334176Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a51fd0>
2025-01-10T13:49:05.3334451Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3334571Z attr = 'lines'
2025-01-10T13:49:05.3334577Z 
2025-01-10T13:49:05.3334793Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3334977Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3335104Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3335216Z         try:
2025-01-10T13:49:05.3335445Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3335571Z         except KeyError:
2025-01-10T13:49:05.3335787Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3336083Z     
2025-01-10T13:49:05.3336214Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3336363Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3336495Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3336712Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3336845Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3336982Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3337154Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3337261Z             else:
2025-01-10T13:49:05.3337411Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3337571Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3337576Z 
2025-01-10T13:49:05.3337974Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3338198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3338487Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3338604Z     ???
2025-01-10T13:49:05.3338811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3338819Z 
2025-01-10T13:49:05.3338943Z >   ???
2025-01-10T13:49:05.3339171Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3339295Z E   
2025-01-10T13:49:05.3339530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3339733Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3339856Z E          ...
2025-01-10T13:49:05.3340014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3340244Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3340442Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3340562Z E          ...
2025-01-10T13:49:05.3340704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3340918Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3341095Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3341101Z 
2025-01-10T13:49:05.3341250Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3341644Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-10T13:49:05.3341651Z 
2025-01-10T13:49:05.3342044Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a53260>
2025-01-10T13:49:05.3342329Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3342476Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3342482Z 
2025-01-10T13:49:05.3342706Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3342897Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3343032Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3343149Z         try:
2025-01-10T13:49:05.3343382Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3343522Z         except KeyError:
2025-01-10T13:49:05.3343910Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3344021Z     
2025-01-10T13:49:05.3344163Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3344306Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3344443Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3344648Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3344779Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3344915Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3345093Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3345100Z 
2025-01-10T13:49:05.3345297Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3345484Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3345490Z 
2025-01-10T13:49:05.3345923Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3346050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3346217Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3346335Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3346562Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3346685Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3346850Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3346965Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3347082Z err_msg = None
2025-01-10T13:49:05.3347089Z 
2025-01-10T13:49:05.3347256Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3347547Z         if err_msg is None:
2025-01-10T13:49:05.3347695Z             if left.shape != right.shape:
2025-01-10T13:49:05.3347826Z                 raise_assert_detail(
2025-01-10T13:49:05.3348060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3348163Z                 )
2025-01-10T13:49:05.3348268Z     
2025-01-10T13:49:05.3348373Z             diff = 0
2025-01-10T13:49:05.3348550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3348691Z                 # count up differences
2025-01-10T13:49:05.3349005Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3349141Z                     diff += 1
2025-01-10T13:49:05.3349263Z     
2025-01-10T13:49:05.3349410Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3349659Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3349979Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3350171Z E           AssertionError: Series are different
2025-01-10T13:49:05.3350301Z E           
2025-01-10T13:49:05.3350481Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3351198Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3351788Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3352375Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3352390Z 
2025-01-10T13:49:05.3352932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3353327Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-10T13:49:05.3353334Z 
2025-01-10T13:49:05.3353877Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a52750>
2025-01-10T13:49:05.3354159Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3354317Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3354323Z 
2025-01-10T13:49:05.3354548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3354932Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3355069Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3355177Z         try:
2025-01-10T13:49:05.3355404Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3355521Z         except KeyError:
2025-01-10T13:49:05.3355735Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3355836Z     
2025-01-10T13:49:05.3355974Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3356116Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3356256Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3356466Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3356602Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3356906Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3357082Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3357096Z 
2025-01-10T13:49:05.3357300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3357475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3357481Z 
2025-01-10T13:49:05.3357698Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3357822Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3357990Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3358109Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3358334Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3358454Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3358621Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3358749Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3358862Z err_msg = None
2025-01-10T13:49:05.3358868Z 
2025-01-10T13:49:05.3359040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3359157Z         if err_msg is None:
2025-01-10T13:49:05.3359300Z             if left.shape != right.shape:
2025-01-10T13:49:05.3359423Z                 raise_assert_detail(
2025-01-10T13:49:05.3359655Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3359772Z                 )
2025-01-10T13:49:05.3359896Z     
2025-01-10T13:49:05.3360021Z             diff = 0
2025-01-10T13:49:05.3360228Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3360382Z                 # count up differences
2025-01-10T13:49:05.3360698Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3360835Z                     diff += 1
2025-01-10T13:49:05.3360951Z     
2025-01-10T13:49:05.3361112Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3361354Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3361680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3361863Z E           AssertionError: Series are different
2025-01-10T13:49:05.3361992Z E           
2025-01-10T13:49:05.3362172Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3362889Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3363566Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3364562Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3364570Z 
2025-01-10T13:49:05.3365112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3365616Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-10T13:49:05.3365624Z 
2025-01-10T13:49:05.3365846Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3366070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3366225Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3366446Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3366648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3366799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3366910Z err_msg = None
2025-01-10T13:49:05.3366922Z 
2025-01-10T13:49:05.3367088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3367214Z         if err_msg is None:
2025-01-10T13:49:05.3367356Z             if left.shape != right.shape:
2025-01-10T13:49:05.3367486Z                 raise_assert_detail(
2025-01-10T13:49:05.3367709Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3367826Z                 )
2025-01-10T13:49:05.3367928Z     
2025-01-10T13:49:05.3368043Z             diff = 0
2025-01-10T13:49:05.3368213Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3368350Z                 # count up differences
2025-01-10T13:49:05.3368618Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3368740Z                     diff += 1
2025-01-10T13:49:05.3368841Z     
2025-01-10T13:49:05.3368978Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3369193Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3369468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3369651Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3369762Z E           
2025-01-10T13:49:05.3369938Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3370373Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3370806Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3370813Z 
2025-01-10T13:49:05.3371329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3371340Z 
2025-01-10T13:49:05.3371643Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3371824Z 
2025-01-10T13:49:05.3372262Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50a10>
2025-01-10T13:49:05.3372642Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>, attr = 'nu'
2025-01-10T13:49:05.3372648Z 
2025-01-10T13:49:05.3372903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3373126Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3373265Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3373393Z         try:
2025-01-10T13:49:05.3373808Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3373958Z         except KeyError:
2025-01-10T13:49:05.3374217Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3374345Z     
2025-01-10T13:49:05.3374716Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3374912Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3375062Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3375303Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3375438Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3375585Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3375764Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3375771Z 
2025-01-10T13:49:05.3375987Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3376178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3376421Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3376537Z     ???
2025-01-10T13:49:05.3376718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3376724Z 
2025-01-10T13:49:05.3376836Z >   ???
2025-01-10T13:49:05.3377058Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3377172Z E   
2025-01-10T13:49:05.3377388Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3377583Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3377691Z E          ...
2025-01-10T13:49:05.3377839Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3378050Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3378235Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3378348Z E          ...
2025-01-10T13:49:05.3378482Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3378691Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3378850Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3378856Z 
2025-01-10T13:49:05.3378997Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3379333Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-10T13:49:05.3379339Z 
2025-01-10T13:49:05.3379545Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3379755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3379907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3380125Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3380318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3380466Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3380578Z err_msg = None
2025-01-10T13:49:05.3380584Z 
2025-01-10T13:49:05.3380759Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3380879Z         if err_msg is None:
2025-01-10T13:49:05.3381027Z             if left.shape != right.shape:
2025-01-10T13:49:05.3381160Z                 raise_assert_detail(
2025-01-10T13:49:05.3381391Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3381673Z                 )
2025-01-10T13:49:05.3381781Z     
2025-01-10T13:49:05.3381889Z             diff = 0
2025-01-10T13:49:05.3382067Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3382204Z                 # count up differences
2025-01-10T13:49:05.3382472Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3382592Z                     diff += 1
2025-01-10T13:49:05.3382693Z     
2025-01-10T13:49:05.3382827Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3383034Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3383332Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3383893Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3384057Z E           
2025-01-10T13:49:05.3384256Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3384771Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3385267Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3385275Z 
2025-01-10T13:49:05.3385856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3385872Z 
2025-01-10T13:49:05.3386192Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3386207Z 
2025-01-10T13:49:05.3386630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50860>
2025-01-10T13:49:05.3386915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3387048Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3387054Z 
2025-01-10T13:49:05.3387276Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3387471Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3387605Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3387722Z         try:
2025-01-10T13:49:05.3387962Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3388094Z         except KeyError:
2025-01-10T13:49:05.3388323Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3388446Z     
2025-01-10T13:49:05.3402897Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3403115Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3403259Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3403505Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3403834Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3403993Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3404176Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3404192Z 
2025-01-10T13:49:05.3404400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3404588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3404827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3404939Z     ???
2025-01-10T13:49:05.3405114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3405120Z 
2025-01-10T13:49:05.3405227Z >   ???
2025-01-10T13:49:05.3405439Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3405547Z E   
2025-01-10T13:49:05.3405983Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3406168Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3406275Z E          ...
2025-01-10T13:49:05.3406422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3406634Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3406818Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3406950Z E          ...
2025-01-10T13:49:05.3407103Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3407339Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3407528Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3407536Z 
2025-01-10T13:49:05.3407698Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3408267Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-10T13:49:05.3408278Z 
2025-01-10T13:49:05.3408526Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3408771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3408947Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3409199Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3409426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3409595Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3409727Z err_msg = None
2025-01-10T13:49:05.3409734Z 
2025-01-10T13:49:05.3409944Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3410087Z         if err_msg is None:
2025-01-10T13:49:05.3410269Z             if left.shape != right.shape:
2025-01-10T13:49:05.3410411Z                 raise_assert_detail(
2025-01-10T13:49:05.3410665Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3410784Z                 )
2025-01-10T13:49:05.3410898Z     
2025-01-10T13:49:05.3411019Z             diff = 0
2025-01-10T13:49:05.3411201Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3411350Z                 # count up differences
2025-01-10T13:49:05.3411641Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3411773Z                     diff += 1
2025-01-10T13:49:05.3411882Z     
2025-01-10T13:49:05.3412028Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3412259Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3412555Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3412747Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3412860Z E           
2025-01-10T13:49:05.3413036Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3413502Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3414350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3414368Z 
2025-01-10T13:49:05.3414773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3414780Z 
2025-01-10T13:49:05.3414990Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3415220Z 
2025-01-10T13:49:05.3415490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a50a40>
2025-01-10T13:49:05.3415724Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>, attr = 'f_lu'
2025-01-10T13:49:05.3415728Z 
2025-01-10T13:49:05.3415891Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3416022Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3416119Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3416197Z         try:
2025-01-10T13:49:05.3416363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3416450Z         except KeyError:
2025-01-10T13:49:05.3416610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3416685Z     
2025-01-10T13:49:05.3416908Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3417014Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3417117Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3417276Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3417371Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3417475Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3417596Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3417600Z 
2025-01-10T13:49:05.3417746Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3417873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3418041Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3418117Z     ???
2025-01-10T13:49:05.3418247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3418251Z 
2025-01-10T13:49:05.3418326Z >   ???
2025-01-10T13:49:05.3418480Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3418564Z E   
2025-01-10T13:49:05.3418706Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3418838Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3418915Z E          ...
2025-01-10T13:49:05.3419016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3419157Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3419287Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3419365Z E          ...
2025-01-10T13:49:05.3419461Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3419596Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3419714Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3419717Z 
2025-01-10T13:49:05.3419813Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3420056Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-10T13:49:05.3420060Z 
2025-01-10T13:49:05.3420207Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3420357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3420466Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3420612Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3420756Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3420854Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3420940Z err_msg = None
2025-01-10T13:49:05.3420944Z 
2025-01-10T13:49:05.3421071Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3421156Z         if err_msg is None:
2025-01-10T13:49:05.3421273Z             if left.shape != right.shape:
2025-01-10T13:49:05.3421363Z                 raise_assert_detail(
2025-01-10T13:49:05.3421525Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3421734Z                 )
2025-01-10T13:49:05.3421808Z     
2025-01-10T13:49:05.3421890Z             diff = 0
2025-01-10T13:49:05.3422012Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3422109Z                 # count up differences
2025-01-10T13:49:05.3422308Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3422394Z                     diff += 1
2025-01-10T13:49:05.3422467Z     
2025-01-10T13:49:05.3422566Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3422713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3422910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3423112Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3423201Z E           
2025-01-10T13:49:05.3423328Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3423834Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3424149Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3424154Z 
2025-01-10T13:49:05.3424515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3424524Z 
2025-01-10T13:49:05.3424716Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3424729Z 
2025-01-10T13:49:05.3424988Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a97c80>
2025-01-10T13:49:05.3425172Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3425261Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3425265Z 
2025-01-10T13:49:05.3425415Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3425543Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3425631Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3425712Z         try:
2025-01-10T13:49:05.3425867Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3425958Z         except KeyError:
2025-01-10T13:49:05.3426112Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3426187Z     
2025-01-10T13:49:05.3426287Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3426391Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3426498Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3426640Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3426733Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3426825Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3426947Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3427026Z             else:
2025-01-10T13:49:05.3427135Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3427248Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3427252Z 
2025-01-10T13:49:05.3427394Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3427521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3427712Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3427846Z     ???
2025-01-10T13:49:05.3428065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3428259Z 
2025-01-10T13:49:05.3428391Z >   ???
2025-01-10T13:49:05.3428611Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3428731Z E   
2025-01-10T13:49:05.3428944Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3429128Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3429250Z E          ...
2025-01-10T13:49:05.3429374Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3429514Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3429640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3429720Z E          ...
2025-01-10T13:49:05.3429809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3430076Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3430192Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3430196Z 
2025-01-10T13:49:05.3430303Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3430535Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-10T13:49:05.3430539Z 
2025-01-10T13:49:05.3430684Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3430823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3430929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3431074Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3431215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3431317Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3431401Z err_msg = None
2025-01-10T13:49:05.3431405Z 
2025-01-10T13:49:05.3431528Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3431618Z         if err_msg is None:
2025-01-10T13:49:05.3431725Z             if left.shape != right.shape:
2025-01-10T13:49:05.3431815Z                 raise_assert_detail(
2025-01-10T13:49:05.3431988Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3432063Z                 )
2025-01-10T13:49:05.3432141Z     
2025-01-10T13:49:05.3432219Z             diff = 0
2025-01-10T13:49:05.3432342Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3432434Z                 # count up differences
2025-01-10T13:49:05.3432628Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3432714Z                     diff += 1
2025-01-10T13:49:05.3432787Z     
2025-01-10T13:49:05.3432882Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3433019Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3433191Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3433308Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3433380Z E           
2025-01-10T13:49:05.3433484Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3433928Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3434204Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3434209Z 
2025-01-10T13:49:05.3434527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3434652Z 
2025-01-10T13:49:05.3434830Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3434834Z 
2025-01-10T13:49:05.3435061Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a952e0>
2025-01-10T13:49:05.3435233Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3435316Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3435320Z 
2025-01-10T13:49:05.3435455Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3435573Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3435651Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3435722Z         try:
2025-01-10T13:49:05.3435961Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3436046Z         except KeyError:
2025-01-10T13:49:05.3436184Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3436259Z     
2025-01-10T13:49:05.3436340Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3436433Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3436516Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3436650Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3436737Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3436821Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3436929Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3436996Z             else:
2025-01-10T13:49:05.3437090Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3437191Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3437194Z 
2025-01-10T13:49:05.3437332Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3437442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3437597Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3437662Z     ???
2025-01-10T13:49:05.3437774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3437778Z 
2025-01-10T13:49:05.3437848Z >   ???
2025-01-10T13:49:05.3437971Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3438041Z E   
2025-01-10T13:49:05.3438162Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3438275Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3438342Z E          ...
2025-01-10T13:49:05.3438429Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3438552Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3438667Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3438733Z E          ...
2025-01-10T13:49:05.3438818Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3438944Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3439048Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3439052Z 
2025-01-10T13:49:05.3439139Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3439337Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-10T13:49:05.3439341Z 
2025-01-10T13:49:05.3439469Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3439595Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3439691Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3439818Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3439945Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3440152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3440225Z err_msg = None
2025-01-10T13:49:05.3440228Z 
2025-01-10T13:49:05.3440341Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3440417Z         if err_msg is None:
2025-01-10T13:49:05.3440516Z             if left.shape != right.shape:
2025-01-10T13:49:05.3440593Z                 raise_assert_detail(
2025-01-10T13:49:05.3440742Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3440809Z                 )
2025-01-10T13:49:05.3440877Z     
2025-01-10T13:49:05.3440944Z             diff = 0
2025-01-10T13:49:05.3441055Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3441138Z                 # count up differences
2025-01-10T13:49:05.3441382Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3441457Z                     diff += 1
2025-01-10T13:49:05.3441525Z     
2025-01-10T13:49:05.3441613Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3441749Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3441919Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3442026Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3442097Z E           
2025-01-10T13:49:05.3442212Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3442475Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3442738Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3442753Z 
2025-01-10T13:49:05.3443054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3443059Z 
2025-01-10T13:49:05.3443227Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3443231Z 
2025-01-10T13:49:05.3443451Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a971a0>
2025-01-10T13:49:05.3443735Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcb1f54f0>
2025-01-10T13:49:05.3443808Z attr = 'j_blues'
2025-01-10T13:49:05.3443812Z 
2025-01-10T13:49:05.3443947Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3444061Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3444147Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3444225Z         try:
2025-01-10T13:49:05.3444358Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3444437Z         except KeyError:
2025-01-10T13:49:05.3444569Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3444638Z     
2025-01-10T13:49:05.3444717Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3444811Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3444896Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3445028Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3445111Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3445201Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3445305Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3445377Z             else:
2025-01-10T13:49:05.3445470Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3445575Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3445721Z 
2025-01-10T13:49:05.3445852Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3445960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3446107Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3446172Z     ???
2025-01-10T13:49:05.3446280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3446284Z 
2025-01-10T13:49:05.3446349Z >   ???
2025-01-10T13:49:05.3446484Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3446568Z E   
2025-01-10T13:49:05.3446798Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3446986Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3447111Z E          ...
2025-01-10T13:49:05.3447395Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3447532Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3447653Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3447721Z E          ...
2025-01-10T13:49:05.3447805Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3447924Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3448030Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3448034Z 
2025-01-10T13:49:05.3448119Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3448366Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-10T13:49:05.3448370Z 
2025-01-10T13:49:05.3448495Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3448625Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3448722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3448849Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3448976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3449063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3449137Z err_msg = None
2025-01-10T13:49:05.3449140Z 
2025-01-10T13:49:05.3449247Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3449329Z         if err_msg is None:
2025-01-10T13:49:05.3449419Z             if left.shape != right.shape:
2025-01-10T13:49:05.3449503Z                 raise_assert_detail(
2025-01-10T13:49:05.3449643Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3449718Z                 )
2025-01-10T13:49:05.3449787Z     
2025-01-10T13:49:05.3449859Z             diff = 0
2025-01-10T13:49:05.3449976Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3450064Z                 # count up differences
2025-01-10T13:49:05.3450245Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3450320Z                     diff += 1
2025-01-10T13:49:05.3450389Z     
2025-01-10T13:49:05.3450475Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3450617Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3450788Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3450904Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3450972Z E           
2025-01-10T13:49:05.3451086Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3451359Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3451883Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3451891Z 
2025-01-10T13:49:05.3452393Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3452399Z 
2025-01-10T13:49:05.3452571Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3452580Z 
2025-01-10T13:49:05.3452804Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a96960>
2025-01-10T13:49:05.3453072Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3453147Z attr = 'lines'
2025-01-10T13:49:05.3453151Z 
2025-01-10T13:49:05.3453300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3453415Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3453501Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3453566Z         try:
2025-01-10T13:49:05.3453859Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3453938Z         except KeyError:
2025-01-10T13:49:05.3454080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3454147Z     
2025-01-10T13:49:05.3454235Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3454330Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3454415Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3454547Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3454633Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3454721Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3454826Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3454902Z             else:
2025-01-10T13:49:05.3454995Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3455104Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3455108Z 
2025-01-10T13:49:05.3455230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3455352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3455494Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3455565Z     ???
2025-01-10T13:49:05.3455676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3455681Z 
2025-01-10T13:49:05.3455744Z >   ???
2025-01-10T13:49:05.3455879Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3455947Z E   
2025-01-10T13:49:05.3456076Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3456183Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3456263Z E          ...
2025-01-10T13:49:05.3456347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3456479Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3456586Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3456660Z E          ...
2025-01-10T13:49:05.3456740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3456864Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3456970Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3456974Z 
2025-01-10T13:49:05.3457059Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3457360Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-10T13:49:05.3457368Z 
2025-01-10T13:49:05.3457588Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a963f0>
2025-01-10T13:49:05.3457883Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3457967Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3457971Z 
2025-01-10T13:49:05.3458109Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3458217Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3458305Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3458376Z         try:
2025-01-10T13:49:05.3458513Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3458594Z         except KeyError:
2025-01-10T13:49:05.3458728Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3458799Z     
2025-01-10T13:49:05.3458881Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3458975Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3459167Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3459305Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3459393Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3459483Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3459586Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3459591Z 
2025-01-10T13:49:05.3459718Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3459831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3459836Z 
2025-01-10T13:49:05.3459975Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3460060Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3460164Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3460248Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3460389Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3460471Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3460574Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3460653Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3460724Z err_msg = None
2025-01-10T13:49:05.3460733Z 
2025-01-10T13:49:05.3460842Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3460923Z         if err_msg is None:
2025-01-10T13:49:05.3461015Z             if left.shape != right.shape:
2025-01-10T13:49:05.3461103Z                 raise_assert_detail(
2025-01-10T13:49:05.3461249Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3461319Z                 )
2025-01-10T13:49:05.3461383Z     
2025-01-10T13:49:05.3461459Z             diff = 0
2025-01-10T13:49:05.3461566Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3461660Z                 # count up differences
2025-01-10T13:49:05.3461828Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3461912Z                     diff += 1
2025-01-10T13:49:05.3461976Z     
2025-01-10T13:49:05.3462064Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3462203Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3462374Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3462480Z E           AssertionError: Series are different
2025-01-10T13:49:05.3462547Z E           
2025-01-10T13:49:05.3462651Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3463024Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3463447Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3463880Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3463886Z 
2025-01-10T13:49:05.3464325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3464634Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-10T13:49:05.3464639Z 
2025-01-10T13:49:05.3464870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a96ab0>
2025-01-10T13:49:05.3465036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3465200Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3465208Z 
2025-01-10T13:49:05.3465447Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3465654Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3465788Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3465905Z         try:
2025-01-10T13:49:05.3466138Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3466271Z         except KeyError:
2025-01-10T13:49:05.3466518Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3466610Z     
2025-01-10T13:49:05.3466701Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3466796Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3466885Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3467014Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3467098Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3467183Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3467293Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3467298Z 
2025-01-10T13:49:05.3467416Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3467526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3467530Z 
2025-01-10T13:49:05.3467660Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3467747Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3467852Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3467936Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3468074Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3468152Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3468256Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3468329Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3468404Z err_msg = None
2025-01-10T13:49:05.3468408Z 
2025-01-10T13:49:05.3468515Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3468597Z         if err_msg is None:
2025-01-10T13:49:05.3468688Z             if left.shape != right.shape:
2025-01-10T13:49:05.3468774Z                 raise_assert_detail(
2025-01-10T13:49:05.3468918Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3468991Z                 )
2025-01-10T13:49:05.3469054Z     
2025-01-10T13:49:05.3469268Z             diff = 0
2025-01-10T13:49:05.3469381Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3469462Z                 # count up differences
2025-01-10T13:49:05.3469631Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3469703Z                     diff += 1
2025-01-10T13:49:05.3469774Z     
2025-01-10T13:49:05.3469855Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3469989Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3470157Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3470261Z E           AssertionError: Series are different
2025-01-10T13:49:05.3470328Z E           
2025-01-10T13:49:05.3470429Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3470916Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3471295Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3471675Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3471686Z 
2025-01-10T13:49:05.3471993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3472220Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-10T13:49:05.3472224Z 
2025-01-10T13:49:05.3472352Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3472475Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3472571Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3472702Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3472823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3472920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3472991Z err_msg = None
2025-01-10T13:49:05.3472994Z 
2025-01-10T13:49:05.3473101Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3473177Z         if err_msg is None:
2025-01-10T13:49:05.3473270Z             if left.shape != right.shape:
2025-01-10T13:49:05.3473392Z                 raise_assert_detail(
2025-01-10T13:49:05.3473537Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3473754Z                 )
2025-01-10T13:49:05.3473824Z     
2025-01-10T13:49:05.3473892Z             diff = 0
2025-01-10T13:49:05.3474004Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3474085Z                 # count up differences
2025-01-10T13:49:05.3474262Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3474465Z                     diff += 1
2025-01-10T13:49:05.3474529Z     
2025-01-10T13:49:05.3474617Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3474747Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3474916Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3475025Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3475096Z E           
2025-01-10T13:49:05.3475201Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3475569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3475836Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3475846Z 
2025-01-10T13:49:05.3476140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3476145Z 
2025-01-10T13:49:05.3476316Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3476320Z 
2025-01-10T13:49:05.3476539Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a97110>
2025-01-10T13:49:05.3476737Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>, attr = 'nu'
2025-01-10T13:49:05.3476741Z 
2025-01-10T13:49:05.3476883Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3476993Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3477079Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3477144Z         try:
2025-01-10T13:49:05.3477288Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3477363Z         except KeyError:
2025-01-10T13:49:05.3477499Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3477563Z     
2025-01-10T13:49:05.3477652Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3477741Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3477830Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3477956Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3478043Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3478137Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3478242Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3478249Z 
2025-01-10T13:49:05.3478378Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3478487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3478641Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3478707Z     ???
2025-01-10T13:49:05.3478820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3478824Z 
2025-01-10T13:49:05.3478888Z >   ???
2025-01-10T13:49:05.3479017Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3479080Z E   
2025-01-10T13:49:05.3479211Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3479326Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3479394Z E          ...
2025-01-10T13:49:05.3479482Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3479612Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3479725Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3479794Z E          ...
2025-01-10T13:49:05.3479968Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3480086Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3480190Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3480194Z 
2025-01-10T13:49:05.3480279Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3480555Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-10T13:49:05.3480560Z 
2025-01-10T13:49:05.3480686Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3480806Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3480902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3481128Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3481254Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3481344Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3481419Z err_msg = None
2025-01-10T13:49:05.3481422Z 
2025-01-10T13:49:05.3481528Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3481608Z         if err_msg is None:
2025-01-10T13:49:05.3481697Z             if left.shape != right.shape:
2025-01-10T13:49:05.3481780Z                 raise_assert_detail(
2025-01-10T13:49:05.3481925Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3481991Z                 )
2025-01-10T13:49:05.3482060Z     
2025-01-10T13:49:05.3482128Z             diff = 0
2025-01-10T13:49:05.3482237Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3482329Z                 # count up differences
2025-01-10T13:49:05.3482500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3482575Z                     diff += 1
2025-01-10T13:49:05.3482645Z     
2025-01-10T13:49:05.3482728Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3482864Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3483029Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3483140Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3483207Z E           
2025-01-10T13:49:05.3483316Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3483726Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3484217Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3484235Z 
2025-01-10T13:49:05.3484621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3484626Z 
2025-01-10T13:49:05.3484795Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3484799Z 
2025-01-10T13:49:05.3485017Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94e60>
2025-01-10T13:49:05.3485184Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3485260Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3485265Z 
2025-01-10T13:49:05.3485405Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3485516Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3485753Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3485820Z         try:
2025-01-10T13:49:05.3485962Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3486037Z         except KeyError:
2025-01-10T13:49:05.3486175Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3486243Z     
2025-01-10T13:49:05.3486324Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3486419Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3486504Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3486637Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3486716Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3486804Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3487038Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3487044Z 
2025-01-10T13:49:05.3487172Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3487286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3487434Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3487498Z     ???
2025-01-10T13:49:05.3487611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3487615Z 
2025-01-10T13:49:05.3487685Z >   ???
2025-01-10T13:49:05.3487807Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3487874Z E   
2025-01-10T13:49:05.3487994Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3488106Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3488174Z E          ...
2025-01-10T13:49:05.3488264Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3488391Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3488503Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3488575Z E          ...
2025-01-10T13:49:05.3488659Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3488783Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3488891Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3488895Z 
2025-01-10T13:49:05.3488983Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3489217Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-10T13:49:05.3489222Z 
2025-01-10T13:49:05.3489352Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3489473Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3489568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3489698Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3489820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3489918Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3489989Z err_msg = None
2025-01-10T13:49:05.3489993Z 
2025-01-10T13:49:05.3490103Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3490179Z         if err_msg is None:
2025-01-10T13:49:05.3490272Z             if left.shape != right.shape:
2025-01-10T13:49:05.3490351Z                 raise_assert_detail(
2025-01-10T13:49:05.3490496Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3490563Z                 )
2025-01-10T13:49:05.3490632Z     
2025-01-10T13:49:05.3490700Z             diff = 0
2025-01-10T13:49:05.3490811Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3490898Z                 # count up differences
2025-01-10T13:49:05.3491067Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3491231Z                     diff += 1
2025-01-10T13:49:05.3491299Z     
2025-01-10T13:49:05.3491386Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3491517Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3491687Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3491793Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3491864Z E           
2025-01-10T13:49:05.3491968Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3492315Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3492580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3492589Z 
2025-01-10T13:49:05.3492890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3492894Z 
2025-01-10T13:49:05.3493060Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3493064Z 
2025-01-10T13:49:05.3493282Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a974a0>
2025-01-10T13:49:05.3493483Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>, attr = 'f_lu'
2025-01-10T13:49:05.3493487Z 
2025-01-10T13:49:05.3493773Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3493887Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3493978Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3494044Z         try:
2025-01-10T13:49:05.3494183Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3494258Z         except KeyError:
2025-01-10T13:49:05.3494398Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3494462Z     
2025-01-10T13:49:05.3494552Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3494641Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3494729Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3494853Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3494938Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3495022Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3495135Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3495139Z 
2025-01-10T13:49:05.3495265Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3495376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3495525Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3495589Z     ???
2025-01-10T13:49:05.3495698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3495702Z 
2025-01-10T13:49:05.3495765Z >   ???
2025-01-10T13:49:05.3495892Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3495956Z E   
2025-01-10T13:49:05.3496080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3496185Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3496258Z E          ...
2025-01-10T13:49:05.3496340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3496471Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3496581Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3496769Z E          ...
2025-01-10T13:49:05.3496855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3496975Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3497076Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3497080Z 
2025-01-10T13:49:05.3497163Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3497433Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-10T13:49:05.3497437Z 
2025-01-10T13:49:05.3497561Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3497688Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3497781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3498010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3498136Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3498229Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3498304Z err_msg = None
2025-01-10T13:49:05.3498307Z 
2025-01-10T13:49:05.3498411Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3498492Z         if err_msg is None:
2025-01-10T13:49:05.3498580Z             if left.shape != right.shape:
2025-01-10T13:49:05.3498666Z                 raise_assert_detail(
2025-01-10T13:49:05.3498807Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3498878Z                 )
2025-01-10T13:49:05.3498947Z     
2025-01-10T13:49:05.3499015Z             diff = 0
2025-01-10T13:49:05.3499126Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3499211Z                 # count up differences
2025-01-10T13:49:05.3499380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3499456Z                     diff += 1
2025-01-10T13:49:05.3499527Z     
2025-01-10T13:49:05.3499609Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3499743Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3499907Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3500021Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3500087Z E           
2025-01-10T13:49:05.3500195Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3500465Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3500723Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3500732Z 
2025-01-10T13:49:05.3501031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3501035Z 
2025-01-10T13:49:05.3501197Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3501206Z 
2025-01-10T13:49:05.3501421Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94530>
2025-01-10T13:49:05.3501587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3501661Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3501669Z 
2025-01-10T13:49:05.3501806Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3502003Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3502089Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3502156Z         try:
2025-01-10T13:49:05.3502387Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3502527Z         except KeyError:
2025-01-10T13:49:05.3502772Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3502885Z     
2025-01-10T13:49:05.3503030Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3503186Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3503325Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3503548Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3503817Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3503944Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3504188Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3504265Z             else:
2025-01-10T13:49:05.3504363Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3504472Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3504477Z 
2025-01-10T13:49:05.3504596Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3504712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3504854Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3504926Z     ???
2025-01-10T13:49:05.3505035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3505039Z 
2025-01-10T13:49:05.3505103Z >   ???
2025-01-10T13:49:05.3505230Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3505294Z E   
2025-01-10T13:49:05.3505419Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3505529Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3505604Z E          ...
2025-01-10T13:49:05.3505689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3505817Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3505924Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3505993Z E          ...
2025-01-10T13:49:05.3506073Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3506200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3506304Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3506308Z 
2025-01-10T13:49:05.3506391Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3506662Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-10T13:49:05.3506666Z 
2025-01-10T13:49:05.3506793Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3506920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3507013Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3507148Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3507265Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3507361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3507436Z err_msg = None
2025-01-10T13:49:05.3507439Z 
2025-01-10T13:49:05.3507545Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3507625Z         if err_msg is None:
2025-01-10T13:49:05.3507714Z             if left.shape != right.shape:
2025-01-10T13:49:05.3507797Z                 raise_assert_detail(
2025-01-10T13:49:05.3507942Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3508014Z                 )
2025-01-10T13:49:05.3508077Z     
2025-01-10T13:49:05.3508151Z             diff = 0
2025-01-10T13:49:05.3508398Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3508486Z                 # count up differences
2025-01-10T13:49:05.3508651Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3508729Z                     diff += 1
2025-01-10T13:49:05.3508799Z     
2025-01-10T13:49:05.3508884Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3509021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3509188Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3509298Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3509369Z E           
2025-01-10T13:49:05.3509479Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3509811Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3510081Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3510085Z 
2025-01-10T13:49:05.3510383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3510387Z 
2025-01-10T13:49:05.3510550Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3510554Z 
2025-01-10T13:49:05.3510778Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94a10>
2025-01-10T13:49:05.3510939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3511021Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3511025Z 
2025-01-10T13:49:05.3511162Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3511270Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3511354Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3511421Z         try:
2025-01-10T13:49:05.3511559Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3511636Z         except KeyError:
2025-01-10T13:49:05.3511776Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3511839Z     
2025-01-10T13:49:05.3511924Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3512012Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3512103Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3512229Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3512319Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3512404Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3512512Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3512584Z             else:
2025-01-10T13:49:05.3512673Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3512778Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3512782Z 
2025-01-10T13:49:05.3512906Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3513019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3513160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3513229Z     ???
2025-01-10T13:49:05.3513334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3513342Z 
2025-01-10T13:49:05.3513411Z >   ???
2025-01-10T13:49:05.3513533Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3513841Z E   
2025-01-10T13:49:05.3513970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3514075Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3514147Z E          ...
2025-01-10T13:49:05.3514228Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3514355Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3514462Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3514533Z E          ...
2025-01-10T13:49:05.3514612Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3514736Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3514835Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3514839Z 
2025-01-10T13:49:05.3515041Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3515291Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-10T13:49:05.3515307Z 
2025-01-10T13:49:05.3515431Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3515557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3515645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3515778Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3515897Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3515989Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3516060Z err_msg = None
2025-01-10T13:49:05.3516064Z 
2025-01-10T13:49:05.3516173Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3516253Z         if err_msg is None:
2025-01-10T13:49:05.3516347Z             if left.shape != right.shape:
2025-01-10T13:49:05.3516432Z                 raise_assert_detail(
2025-01-10T13:49:05.3516573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3516644Z                 )
2025-01-10T13:49:05.3516711Z     
2025-01-10T13:49:05.3516783Z             diff = 0
2025-01-10T13:49:05.3516888Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3516975Z                 # count up differences
2025-01-10T13:49:05.3517139Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3517216Z                     diff += 1
2025-01-10T13:49:05.3517280Z     
2025-01-10T13:49:05.3517368Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3517499Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3517672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3517785Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3517851Z E           
2025-01-10T13:49:05.3517967Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3518225Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3518486Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3518490Z 
2025-01-10T13:49:05.3518797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3518801Z 
2025-01-10T13:49:05.3519088Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3519092Z 
2025-01-10T13:49:05.3519314Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94380>
2025-01-10T13:49:05.3519475Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf23849b0>
2025-01-10T13:49:05.3519551Z attr = 'j_blues'
2025-01-10T13:49:05.3519555Z 
2025-01-10T13:49:05.3519684Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3519796Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3519874Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3519946Z         try:
2025-01-10T13:49:05.3520077Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3520160Z         except KeyError:
2025-01-10T13:49:05.3520371Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3520437Z     
2025-01-10T13:49:05.3520524Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3520620Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3520709Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3520833Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3520923Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3521007Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3521119Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3521248Z             else:
2025-01-10T13:49:05.3521415Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3521597Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3521603Z 
2025-01-10T13:49:05.3521820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3522013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3522263Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3522387Z     ???
2025-01-10T13:49:05.3522567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3522581Z 
2025-01-10T13:49:05.3522695Z >   ???
2025-01-10T13:49:05.3522869Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3522938Z E   
2025-01-10T13:49:05.3523069Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3523181Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3523246Z E          ...
2025-01-10T13:49:05.3523337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3523460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3523574Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3523754Z E          ...
2025-01-10T13:49:05.3523838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3523971Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3524069Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3524077Z 
2025-01-10T13:49:05.3524168Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3524372Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-10T13:49:05.3524376Z 
2025-01-10T13:49:05.3524503Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3524625Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3524721Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3524856Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3524974Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3525067Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3525137Z err_msg = None
2025-01-10T13:49:05.3525141Z 
2025-01-10T13:49:05.3525257Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3525509Z         if err_msg is None:
2025-01-10T13:49:05.3525605Z             if left.shape != right.shape:
2025-01-10T13:49:05.3525685Z                 raise_assert_detail(
2025-01-10T13:49:05.3525831Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3525897Z                 )
2025-01-10T13:49:05.3525966Z     
2025-01-10T13:49:05.3526035Z             diff = 0
2025-01-10T13:49:05.3526146Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3526233Z                 # count up differences
2025-01-10T13:49:05.3526399Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3526478Z                     diff += 1
2025-01-10T13:49:05.3526542Z     
2025-01-10T13:49:05.3526736Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3526871Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3527048Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3527155Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3527226Z E           
2025-01-10T13:49:05.3527331Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3527594Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3527862Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3527871Z 
2025-01-10T13:49:05.3528173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3528177Z 
2025-01-10T13:49:05.3528345Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3528349Z 
2025-01-10T13:49:05.3528575Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94aa0>
2025-01-10T13:49:05.3528737Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3528811Z attr = 'lines'
2025-01-10T13:49:05.3528816Z 
2025-01-10T13:49:05.3528946Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3529063Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3529141Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3529212Z         try:
2025-01-10T13:49:05.3529350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3529431Z         except KeyError:
2025-01-10T13:49:05.3529570Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3529644Z     
2025-01-10T13:49:05.3529727Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3529821Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3529906Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3530041Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3530127Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3530212Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3530322Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3530389Z             else:
2025-01-10T13:49:05.3530484Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3530583Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3530595Z 
2025-01-10T13:49:05.3530722Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3530830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3531084Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3531149Z     ???
2025-01-10T13:49:05.3531258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3531262Z 
2025-01-10T13:49:05.3531331Z >   ???
2025-01-10T13:49:05.3531455Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3531524Z E   
2025-01-10T13:49:05.3531644Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3531758Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3531825Z E          ...
2025-01-10T13:49:05.3531912Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3532035Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3532223Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3532294Z E          ...
2025-01-10T13:49:05.3532392Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3532508Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3532610Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3532614Z 
2025-01-10T13:49:05.3532703Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3532953Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-10T13:49:05.3532957Z 
2025-01-10T13:49:05.3533179Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94ef0>
2025-01-10T13:49:05.3533340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3533427Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3533432Z 
2025-01-10T13:49:05.3533562Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3533808Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3533888Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3533966Z         try:
2025-01-10T13:49:05.3534100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3534180Z         except KeyError:
2025-01-10T13:49:05.3534319Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3534382Z     
2025-01-10T13:49:05.3534470Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3534558Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3534646Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3534771Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3534854Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3534939Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3535047Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3535052Z 
2025-01-10T13:49:05.3535175Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3535287Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3535295Z 
2025-01-10T13:49:05.3535431Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3535510Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3535619Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3535694Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3535835Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3535912Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3536015Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3536088Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3536163Z err_msg = None
2025-01-10T13:49:05.3536167Z 
2025-01-10T13:49:05.3536276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3536359Z         if err_msg is None:
2025-01-10T13:49:05.3536577Z             if left.shape != right.shape:
2025-01-10T13:49:05.3536657Z                 raise_assert_detail(
2025-01-10T13:49:05.3536800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3536865Z                 )
2025-01-10T13:49:05.3536933Z     
2025-01-10T13:49:05.3537000Z             diff = 0
2025-01-10T13:49:05.3537112Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3537195Z                 # count up differences
2025-01-10T13:49:05.3537363Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3537434Z                     diff += 1
2025-01-10T13:49:05.3537503Z     
2025-01-10T13:49:05.3537584Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3537823Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3537993Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3538104Z E           AssertionError: Series are different
2025-01-10T13:49:05.3538179Z E           
2025-01-10T13:49:05.3538278Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3538743Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3539360Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3539710Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3539715Z 
2025-01-10T13:49:05.3540029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3540278Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-10T13:49:05.3540283Z 
2025-01-10T13:49:05.3540507Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94350>
2025-01-10T13:49:05.3540675Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3540765Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3540774Z 
2025-01-10T13:49:05.3540911Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3541021Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3541103Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3541169Z         try:
2025-01-10T13:49:05.3541307Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3541383Z         except KeyError:
2025-01-10T13:49:05.3541520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3541583Z     
2025-01-10T13:49:05.3541669Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3541757Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3541844Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3541974Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3542065Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3542155Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3542363Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3542367Z 
2025-01-10T13:49:05.3542492Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3542600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3542604Z 
2025-01-10T13:49:05.3542739Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3542819Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3542926Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3543001Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3543140Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3543222Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3543395Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3543477Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3543555Z err_msg = None
2025-01-10T13:49:05.3543560Z 
2025-01-10T13:49:05.3543780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3543859Z         if err_msg is None:
2025-01-10T13:49:05.3543953Z             if left.shape != right.shape:
2025-01-10T13:49:05.3544031Z                 raise_assert_detail(
2025-01-10T13:49:05.3544173Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3544238Z                 )
2025-01-10T13:49:05.3544307Z     
2025-01-10T13:49:05.3544373Z             diff = 0
2025-01-10T13:49:05.3544485Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3544568Z                 # count up differences
2025-01-10T13:49:05.3544737Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3544819Z                     diff += 1
2025-01-10T13:49:05.3544883Z     
2025-01-10T13:49:05.3544968Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3545101Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3545272Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3545371Z E           AssertionError: Series are different
2025-01-10T13:49:05.3545445Z E           
2025-01-10T13:49:05.3545544Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3545915Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3546294Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3546670Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3546680Z 
2025-01-10T13:49:05.3546983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3547185Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-10T13:49:05.3547312Z 
2025-01-10T13:49:05.3547439Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3547564Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3547656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3547787Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3547904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3548000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3548075Z err_msg = None
2025-01-10T13:49:05.3548079Z 
2025-01-10T13:49:05.3548181Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3548387Z         if err_msg is None:
2025-01-10T13:49:05.3548480Z             if left.shape != right.shape:
2025-01-10T13:49:05.3548574Z                 raise_assert_detail(
2025-01-10T13:49:05.3548715Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3548785Z                 )
2025-01-10T13:49:05.3548849Z     
2025-01-10T13:49:05.3548921Z             diff = 0
2025-01-10T13:49:05.3549030Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3549117Z                 # count up differences
2025-01-10T13:49:05.3549281Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3549357Z                     diff += 1
2025-01-10T13:49:05.3549421Z     
2025-01-10T13:49:05.3549508Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3549640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3549811Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3549925Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3549996Z E           
2025-01-10T13:49:05.3550106Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3550365Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3550629Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3550635Z 
2025-01-10T13:49:05.3550935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3550939Z 
2025-01-10T13:49:05.3551109Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3551113Z 
2025-01-10T13:49:05.3551336Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a95550>
2025-01-10T13:49:05.3551530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>, attr = 'nu'
2025-01-10T13:49:05.3551533Z 
2025-01-10T13:49:05.3551672Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3551788Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3551867Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3551940Z         try:
2025-01-10T13:49:05.3552077Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3552157Z         except KeyError:
2025-01-10T13:49:05.3552294Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3552363Z     
2025-01-10T13:49:05.3552453Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3552548Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3552725Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3552859Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3552940Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3553037Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3553149Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3553158Z 
2025-01-10T13:49:05.3553282Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3553402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3553548Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3553818Z     ???
2025-01-10T13:49:05.3553945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3554084Z 
2025-01-10T13:49:05.3554157Z >   ???
2025-01-10T13:49:05.3554286Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3554362Z E   
2025-01-10T13:49:05.3554488Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3554602Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3554669Z E          ...
2025-01-10T13:49:05.3554760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3554891Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3554998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3555070Z E          ...
2025-01-10T13:49:05.3555153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3555280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3555382Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3555385Z 
2025-01-10T13:49:05.3555481Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3555702Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-10T13:49:05.3555710Z 
2025-01-10T13:49:05.3555845Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3555977Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3556080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3556212Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3556334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3556428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3556498Z err_msg = None
2025-01-10T13:49:05.3556502Z 
2025-01-10T13:49:05.3556615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3556695Z         if err_msg is None:
2025-01-10T13:49:05.3556794Z             if left.shape != right.shape:
2025-01-10T13:49:05.3556874Z                 raise_assert_detail(
2025-01-10T13:49:05.3557025Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3557092Z                 )
2025-01-10T13:49:05.3557162Z     
2025-01-10T13:49:05.3557234Z             diff = 0
2025-01-10T13:49:05.3557343Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3557432Z                 # count up differences
2025-01-10T13:49:05.3557599Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3557679Z                     diff += 1
2025-01-10T13:49:05.3557744Z     
2025-01-10T13:49:05.3557835Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3557973Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3558149Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3558258Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3558464Z E           
2025-01-10T13:49:05.3558574Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3558842Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3559110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3559114Z 
2025-01-10T13:49:05.3559484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3559489Z 
2025-01-10T13:49:05.3559672Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3559676Z 
2025-01-10T13:49:05.3559969Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a94c50>
2025-01-10T13:49:05.3560268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3560409Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3560415Z 
2025-01-10T13:49:05.3560655Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3560853Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3560986Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3561106Z         try:
2025-01-10T13:49:05.3561341Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3561480Z         except KeyError:
2025-01-10T13:49:05.3561718Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3561839Z     
2025-01-10T13:49:05.3561980Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3562146Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3562294Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3562523Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3562668Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3562813Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3563000Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3563006Z 
2025-01-10T13:49:05.3563214Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3563408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3563754Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3563832Z     ???
2025-01-10T13:49:05.3563948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3563953Z 
2025-01-10T13:49:05.3564024Z >   ???
2025-01-10T13:49:05.3564158Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3564227Z E   
2025-01-10T13:49:05.3564358Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3564466Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3564539Z E          ...
2025-01-10T13:49:05.3564622Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3564751Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3564859Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3564931Z E          ...
2025-01-10T13:49:05.3565012Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3565135Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3565237Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3565241Z 
2025-01-10T13:49:05.3565337Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3565544Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-10T13:49:05.3565693Z 
2025-01-10T13:49:05.3565823Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3565953Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3566047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3566177Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3566299Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3566391Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3566463Z err_msg = None
2025-01-10T13:49:05.3566467Z 
2025-01-10T13:49:05.3566580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3566761Z         if err_msg is None:
2025-01-10T13:49:05.3566856Z             if left.shape != right.shape:
2025-01-10T13:49:05.3566946Z                 raise_assert_detail(
2025-01-10T13:49:05.3567088Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3567159Z                 )
2025-01-10T13:49:05.3567228Z     
2025-01-10T13:49:05.3567301Z             diff = 0
2025-01-10T13:49:05.3567409Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3567497Z                 # count up differences
2025-01-10T13:49:05.3567664Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3567742Z                     diff += 1
2025-01-10T13:49:05.3567807Z     
2025-01-10T13:49:05.3567897Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3568029Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3568206Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3568319Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3568394Z E           
2025-01-10T13:49:05.3568505Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3568766Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3569028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3569032Z 
2025-01-10T13:49:05.3569345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3569353Z 
2025-01-10T13:49:05.3569518Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3569521Z 
2025-01-10T13:49:05.3569747Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a949e0>
2025-01-10T13:49:05.3569945Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>, attr = 'f_lu'
2025-01-10T13:49:05.3569950Z 
2025-01-10T13:49:05.3570088Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3570198Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3570283Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3570348Z         try:
2025-01-10T13:49:05.3570489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3570571Z         except KeyError:
2025-01-10T13:49:05.3570710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3570780Z     
2025-01-10T13:49:05.3570863Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3571053Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3571138Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3571277Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3571357Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3571448Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3571553Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3571558Z 
2025-01-10T13:49:05.3571690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3571798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3571942Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3572013Z     ???
2025-01-10T13:49:05.3572224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3572230Z 
2025-01-10T13:49:05.3572302Z >   ???
2025-01-10T13:49:05.3572435Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3572513Z E   
2025-01-10T13:49:05.3572638Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3572750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3572820Z E          ...
2025-01-10T13:49:05.3572912Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3573036Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3573154Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3573222Z E          ...
2025-01-10T13:49:05.3573309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3573479Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3573580Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3573584Z 
2025-01-10T13:49:05.3573882Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3574113Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-10T13:49:05.3574123Z 
2025-01-10T13:49:05.3574259Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3574384Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3574488Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3574619Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3574746Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3574842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3574915Z err_msg = None
2025-01-10T13:49:05.3574918Z 
2025-01-10T13:49:05.3575032Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3575112Z         if err_msg is None:
2025-01-10T13:49:05.3575207Z             if left.shape != right.shape:
2025-01-10T13:49:05.3575291Z                 raise_assert_detail(
2025-01-10T13:49:05.3575438Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3575504Z                 )
2025-01-10T13:49:05.3575576Z     
2025-01-10T13:49:05.3575645Z             diff = 0
2025-01-10T13:49:05.3575758Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3575840Z                 # count up differences
2025-01-10T13:49:05.3576015Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3585083Z                     diff += 1
2025-01-10T13:49:05.3585239Z     
2025-01-10T13:49:05.3585414Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3585674Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3585995Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3586196Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3586529Z E           
2025-01-10T13:49:05.3586731Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3587206Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3587672Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3587680Z 
2025-01-10T13:49:05.3588382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3588397Z 
2025-01-10T13:49:05.3588703Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3588711Z 
2025-01-10T13:49:05.3588996Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a944d0>
2025-01-10T13:49:05.3589181Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3589260Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3589264Z 
2025-01-10T13:49:05.3589415Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3589534Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3589623Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3589695Z         try:
2025-01-10T13:49:05.3589845Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3589922Z         except KeyError:
2025-01-10T13:49:05.3590080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3590153Z     
2025-01-10T13:49:05.3590239Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3590343Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3590432Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3590581Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3590666Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3590761Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3590873Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3590947Z             else:
2025-01-10T13:49:05.3591037Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3591151Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3591155Z 
2025-01-10T13:49:05.3591282Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3591408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3591563Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3591636Z     ???
2025-01-10T13:49:05.3591748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3591753Z 
2025-01-10T13:49:05.3591818Z >   ???
2025-01-10T13:49:05.3591950Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3592017Z E   
2025-01-10T13:49:05.3592146Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3592254Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3592327Z E          ...
2025-01-10T13:49:05.3592414Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3592548Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3592656Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3592729Z E          ...
2025-01-10T13:49:05.3592821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3592942Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3593178Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3593182Z 
2025-01-10T13:49:05.3593271Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3593493Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-10T13:49:05.3593497Z 
2025-01-10T13:49:05.3593743Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3593885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3593982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3594121Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3594252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3594457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3594539Z err_msg = None
2025-01-10T13:49:05.3594549Z 
2025-01-10T13:49:05.3594661Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3594745Z         if err_msg is None:
2025-01-10T13:49:05.3594836Z             if left.shape != right.shape:
2025-01-10T13:49:05.3594923Z                 raise_assert_detail(
2025-01-10T13:49:05.3595069Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3595149Z                 )
2025-01-10T13:49:05.3595213Z     
2025-01-10T13:49:05.3595287Z             diff = 0
2025-01-10T13:49:05.3595395Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3595486Z                 # count up differences
2025-01-10T13:49:05.3595661Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3595735Z                     diff += 1
2025-01-10T13:49:05.3595805Z     
2025-01-10T13:49:05.3595899Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3596042Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3596220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3596339Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3596407Z E           
2025-01-10T13:49:05.3596521Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3596790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3597061Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3597070Z 
2025-01-10T13:49:05.3597386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3597390Z 
2025-01-10T13:49:05.3597559Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3597563Z 
2025-01-10T13:49:05.3597793Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a97950>
2025-01-10T13:49:05.3597958Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3598041Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3598045Z 
2025-01-10T13:49:05.3598185Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3598303Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3598393Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3598461Z         try:
2025-01-10T13:49:05.3598605Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3598807Z         except KeyError:
2025-01-10T13:49:05.3598947Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3599011Z     
2025-01-10T13:49:05.3599099Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3599190Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3599282Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3599413Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3599500Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3599585Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3599696Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3599765Z             else:
2025-01-10T13:49:05.3599862Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3600047Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3600052Z 
2025-01-10T13:49:05.3600179Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3600302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3600445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3600516Z     ???
2025-01-10T13:49:05.3600623Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3600627Z 
2025-01-10T13:49:05.3600696Z >   ???
2025-01-10T13:49:05.3600821Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3600893Z E   
2025-01-10T13:49:05.3601016Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3601129Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3601202Z E          ...
2025-01-10T13:49:05.3601289Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3601425Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3601535Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3601611Z E          ...
2025-01-10T13:49:05.3601691Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3601815Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3601916Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3601921Z 
2025-01-10T13:49:05.3602011Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3602352Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-10T13:49:05.3602359Z 
2025-01-10T13:49:05.3602593Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3602813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3602970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3603204Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3603410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3603569Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3603837Z err_msg = None
2025-01-10T13:49:05.3603845Z 
2025-01-10T13:49:05.3603980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3604058Z         if err_msg is None:
2025-01-10T13:49:05.3604154Z             if left.shape != right.shape:
2025-01-10T13:49:05.3604233Z                 raise_assert_detail(
2025-01-10T13:49:05.3604376Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3604448Z                 )
2025-01-10T13:49:05.3604514Z     
2025-01-10T13:49:05.3604591Z             diff = 0
2025-01-10T13:49:05.3604704Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3604797Z                 # count up differences
2025-01-10T13:49:05.3604965Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3605209Z                     diff += 1
2025-01-10T13:49:05.3605273Z     
2025-01-10T13:49:05.3605362Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3605498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3605668Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3605779Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3605854Z E           
2025-01-10T13:49:05.3605962Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3606340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3606609Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3606622Z 
2025-01-10T13:49:05.3606927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3606931Z 
2025-01-10T13:49:05.3607109Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3607113Z 
2025-01-10T13:49:05.3607339Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8cb30>
2025-01-10T13:49:05.3607504Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bd00d1970>
2025-01-10T13:49:05.3607581Z attr = 'j_blues'
2025-01-10T13:49:05.3607588Z 
2025-01-10T13:49:05.3607723Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3607842Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3607928Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3608002Z         try:
2025-01-10T13:49:05.3608139Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3608221Z         except KeyError:
2025-01-10T13:49:05.3608357Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3608427Z     
2025-01-10T13:49:05.3608514Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3608605Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3608696Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3608825Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3608911Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3608995Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3609111Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3609179Z             else:
2025-01-10T13:49:05.3609277Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3609388Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3609392Z 
2025-01-10T13:49:05.3609522Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3609633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3609783Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3609854Z     ???
2025-01-10T13:49:05.3609960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3609964Z 
2025-01-10T13:49:05.3610035Z >   ???
2025-01-10T13:49:05.3610164Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3610233Z E   
2025-01-10T13:49:05.3610356Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3610470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3610540Z E          ...
2025-01-10T13:49:05.3610630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3610851Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3610965Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3611032Z E          ...
2025-01-10T13:49:05.3611118Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3611245Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3611345Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3611348Z 
2025-01-10T13:49:05.3611439Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3611641Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-10T13:49:05.3611644Z 
2025-01-10T13:49:05.3611773Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3611975Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3612082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3612212Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3612334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3612429Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3612500Z err_msg = None
2025-01-10T13:49:05.3612504Z 
2025-01-10T13:49:05.3612615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3612693Z         if err_msg is None:
2025-01-10T13:49:05.3612788Z             if left.shape != right.shape:
2025-01-10T13:49:05.3612867Z                 raise_assert_detail(
2025-01-10T13:49:05.3613016Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3613087Z                 )
2025-01-10T13:49:05.3613157Z     
2025-01-10T13:49:05.3613225Z             diff = 0
2025-01-10T13:49:05.3613336Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3613425Z                 # count up differences
2025-01-10T13:49:05.3613760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3613882Z                     diff += 1
2025-01-10T13:49:05.3613948Z     
2025-01-10T13:49:05.3614038Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3614170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3614341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3614449Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3614522Z E           
2025-01-10T13:49:05.3614628Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3614895Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3615166Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3615171Z 
2025-01-10T13:49:05.3615469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3615473Z 
2025-01-10T13:49:05.3615643Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3615646Z 
2025-01-10T13:49:05.3615868Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8dbb0>
2025-01-10T13:49:05.3616035Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3616237Z attr = 'lines'
2025-01-10T13:49:05.3616246Z 
2025-01-10T13:49:05.3616378Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3616495Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3616575Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3616647Z         try:
2025-01-10T13:49:05.3616782Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3616864Z         except KeyError:
2025-01-10T13:49:05.3617001Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3617072Z     
2025-01-10T13:49:05.3617156Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3617250Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3617335Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3617573Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3617656Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3617755Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3617866Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3617934Z             else:
2025-01-10T13:49:05.3618028Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3618129Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3618133Z 
2025-01-10T13:49:05.3618262Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3618371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3618518Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3618583Z     ???
2025-01-10T13:49:05.3618692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3618696Z 
2025-01-10T13:49:05.3618760Z >   ???
2025-01-10T13:49:05.3618892Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3618964Z E   
2025-01-10T13:49:05.3619089Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3619207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3619275Z E          ...
2025-01-10T13:49:05.3619367Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3619491Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3619605Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3619672Z E          ...
2025-01-10T13:49:05.3619763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3619883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3619988Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3619991Z 
2025-01-10T13:49:05.3620075Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3620340Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-10T13:49:05.3620344Z 
2025-01-10T13:49:05.3620569Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8d850>
2025-01-10T13:49:05.3620736Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3620826Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3620830Z 
2025-01-10T13:49:05.3620961Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3621074Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3621153Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3621224Z         try:
2025-01-10T13:49:05.3621357Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3621441Z         except KeyError:
2025-01-10T13:49:05.3621574Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3621645Z     
2025-01-10T13:49:05.3621788Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3621956Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3622111Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3622466Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3622611Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3622758Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3622939Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3622945Z 
2025-01-10T13:49:05.3623146Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3623335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3623341Z 
2025-01-10T13:49:05.3623477Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3623565Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3623812Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3624018Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3624165Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3624249Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3624357Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3624431Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3624507Z err_msg = None
2025-01-10T13:49:05.3624511Z 
2025-01-10T13:49:05.3624616Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3624697Z         if err_msg is None:
2025-01-10T13:49:05.3624786Z             if left.shape != right.shape:
2025-01-10T13:49:05.3624871Z                 raise_assert_detail(
2025-01-10T13:49:05.3625014Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3625082Z                 )
2025-01-10T13:49:05.3625152Z     
2025-01-10T13:49:05.3625220Z             diff = 0
2025-01-10T13:49:05.3625337Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3625420Z                 # count up differences
2025-01-10T13:49:05.3625594Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3625666Z                     diff += 1
2025-01-10T13:49:05.3625736Z     
2025-01-10T13:49:05.3625819Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3625956Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3626121Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3626227Z E           AssertionError: Series are different
2025-01-10T13:49:05.3626293Z E           
2025-01-10T13:49:05.3626398Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3626781Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3627114Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3627457Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3627462Z 
2025-01-10T13:49:05.3627767Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3628156Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-10T13:49:05.3628160Z 
2025-01-10T13:49:05.3628378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8ed20>
2025-01-10T13:49:05.3628539Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3628631Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3628635Z 
2025-01-10T13:49:05.3628771Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3628881Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3628967Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3629034Z         try:
2025-01-10T13:49:05.3629254Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3629337Z         except KeyError:
2025-01-10T13:49:05.3629478Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3629548Z     
2025-01-10T13:49:05.3629635Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3629724Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3629815Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3629944Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3630030Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3630114Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3630224Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3630228Z 
2025-01-10T13:49:05.3630354Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3630463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3630467Z 
2025-01-10T13:49:05.3630606Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3630690Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3630801Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3630876Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3631017Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3631095Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3631198Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3631277Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3631351Z err_msg = None
2025-01-10T13:49:05.3631355Z 
2025-01-10T13:49:05.3631467Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3631544Z         if err_msg is None:
2025-01-10T13:49:05.3631637Z             if left.shape != right.shape:
2025-01-10T13:49:05.3631717Z                 raise_assert_detail(
2025-01-10T13:49:05.3631863Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3631933Z                 )
2025-01-10T13:49:05.3632005Z     
2025-01-10T13:49:05.3632074Z             diff = 0
2025-01-10T13:49:05.3632182Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3632263Z                 # count up differences
2025-01-10T13:49:05.3632437Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3632510Z                     diff += 1
2025-01-10T13:49:05.3632585Z     
2025-01-10T13:49:05.3632672Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3632803Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3632971Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3633071Z E           AssertionError: Series are different
2025-01-10T13:49:05.3633144Z E           
2025-01-10T13:49:05.3633244Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3633718Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3634218Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3634695Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3634705Z 
2025-01-10T13:49:05.3635011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3635212Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-10T13:49:05.3635216Z 
2025-01-10T13:49:05.3635336Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3635463Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3635556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3635694Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3635814Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3635906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3635978Z err_msg = None
2025-01-10T13:49:05.3635981Z 
2025-01-10T13:49:05.3636088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3636170Z         if err_msg is None:
2025-01-10T13:49:05.3636258Z             if left.shape != right.shape:
2025-01-10T13:49:05.3636342Z                 raise_assert_detail(
2025-01-10T13:49:05.3636481Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3636553Z                 )
2025-01-10T13:49:05.3636617Z     
2025-01-10T13:49:05.3636690Z             diff = 0
2025-01-10T13:49:05.3636794Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3636885Z                 # count up differences
2025-01-10T13:49:05.3637047Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3637127Z                     diff += 1
2025-01-10T13:49:05.3637190Z     
2025-01-10T13:49:05.3637278Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3637408Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3637576Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3637689Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3637755Z E           
2025-01-10T13:49:05.3637865Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3638129Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3638400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3638490Z 
2025-01-10T13:49:05.3638792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3638796Z 
2025-01-10T13:49:05.3638960Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3638964Z 
2025-01-10T13:49:05.3639188Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8e030>
2025-01-10T13:49:05.3639404Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>, attr = 'nu'
2025-01-10T13:49:05.3639414Z 
2025-01-10T13:49:05.3639775Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3639980Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3640130Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3640248Z         try:
2025-01-10T13:49:05.3640480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3640612Z         except KeyError:
2025-01-10T13:49:05.3640846Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3640924Z     
2025-01-10T13:49:05.3641009Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3641105Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3641191Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3641326Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3641407Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3641497Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3641608Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3641612Z 
2025-01-10T13:49:05.3641739Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3641859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3642001Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3642074Z     ???
2025-01-10T13:49:05.3642179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3642183Z 
2025-01-10T13:49:05.3642253Z >   ???
2025-01-10T13:49:05.3642377Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3642450Z E   
2025-01-10T13:49:05.3642577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3642690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3642758Z E          ...
2025-01-10T13:49:05.3642848Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3642973Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3643089Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3643163Z E          ...
2025-01-10T13:49:05.3643247Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3643371Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3643471Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3643475Z 
2025-01-10T13:49:05.3643565Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3643905Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-10T13:49:05.3643910Z 
2025-01-10T13:49:05.3644040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3644162Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3644257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3644389Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3644513Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3644740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3644812Z err_msg = None
2025-01-10T13:49:05.3644816Z 
2025-01-10T13:49:05.3644928Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3645010Z         if err_msg is None:
2025-01-10T13:49:05.3645104Z             if left.shape != right.shape:
2025-01-10T13:49:05.3645184Z                 raise_assert_detail(
2025-01-10T13:49:05.3645328Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3645395Z                 )
2025-01-10T13:49:05.3645465Z     
2025-01-10T13:49:05.3645535Z             diff = 0
2025-01-10T13:49:05.3645646Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3645872Z                 # count up differences
2025-01-10T13:49:05.3646048Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3646133Z                     diff += 1
2025-01-10T13:49:05.3646198Z     
2025-01-10T13:49:05.3646288Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3646417Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3646586Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3646694Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3646766Z E           
2025-01-10T13:49:05.3646873Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3647142Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3647407Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3647416Z 
2025-01-10T13:49:05.3647724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3647728Z 
2025-01-10T13:49:05.3647898Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3647902Z 
2025-01-10T13:49:05.3648120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8dd60>
2025-01-10T13:49:05.3648286Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3648368Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3648375Z 
2025-01-10T13:49:05.3648511Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3648632Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3648713Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3648786Z         try:
2025-01-10T13:49:05.3648924Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3649006Z         except KeyError:
2025-01-10T13:49:05.3649140Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3649213Z     
2025-01-10T13:49:05.3649296Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3649392Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3649479Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3649611Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3649698Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3649785Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3649902Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3649906Z 
2025-01-10T13:49:05.3650119Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3650233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3650375Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3650447Z     ???
2025-01-10T13:49:05.3650551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3650555Z 
2025-01-10T13:49:05.3650625Z >   ???
2025-01-10T13:49:05.3650749Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3650820Z E   
2025-01-10T13:49:05.3650943Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3651055Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3651129Z E          ...
2025-01-10T13:49:05.3651211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3651420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3651530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3651607Z E          ...
2025-01-10T13:49:05.3651687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3651811Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3651912Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3651915Z 
2025-01-10T13:49:05.3652009Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3652208Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-10T13:49:05.3652212Z 
2025-01-10T13:49:05.3652343Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3652474Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3652575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3652709Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3652831Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3652922Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3652991Z err_msg = None
2025-01-10T13:49:05.3652995Z 
2025-01-10T13:49:05.3653106Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3653184Z         if err_msg is None:
2025-01-10T13:49:05.3653282Z             if left.shape != right.shape:
2025-01-10T13:49:05.3653367Z                 raise_assert_detail(
2025-01-10T13:49:05.3653508Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3653581Z                 )
2025-01-10T13:49:05.3653773Z     
2025-01-10T13:49:05.3653847Z             diff = 0
2025-01-10T13:49:05.3653959Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3654047Z                 # count up differences
2025-01-10T13:49:05.3654212Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3654295Z                     diff += 1
2025-01-10T13:49:05.3654358Z     
2025-01-10T13:49:05.3654450Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3654580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3654751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3654860Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3654933Z E           
2025-01-10T13:49:05.3655045Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3655305Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3655569Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3655701Z 
2025-01-10T13:49:05.3656002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3656011Z 
2025-01-10T13:49:05.3656174Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3656178Z 
2025-01-10T13:49:05.3656403Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8f0e0>
2025-01-10T13:49:05.3656600Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>, attr = 'f_lu'
2025-01-10T13:49:05.3656703Z 
2025-01-10T13:49:05.3656842Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3656951Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3657041Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3657108Z         try:
2025-01-10T13:49:05.3657246Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3657325Z         except KeyError:
2025-01-10T13:49:05.3657464Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3657535Z     
2025-01-10T13:49:05.3657619Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3657713Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3657795Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3658000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3658147Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3658302Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3658498Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3658504Z 
2025-01-10T13:49:05.3658720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3658913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3659159Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3659269Z     ???
2025-01-10T13:49:05.3659462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3659468Z 
2025-01-10T13:49:05.3659544Z >   ???
2025-01-10T13:49:05.3659671Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3659741Z E   
2025-01-10T13:49:05.3659865Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3659976Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3660044Z E          ...
2025-01-10T13:49:05.3660131Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3660257Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3660370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3660444Z E          ...
2025-01-10T13:49:05.3660528Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3660649Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3660756Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3660759Z 
2025-01-10T13:49:05.3660848Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3661067Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-10T13:49:05.3661072Z 
2025-01-10T13:49:05.3661203Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3661324Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3661422Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3661550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3661790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3661880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3661956Z err_msg = None
2025-01-10T13:49:05.3661960Z 
2025-01-10T13:49:05.3662067Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3662144Z         if err_msg is None:
2025-01-10T13:49:05.3662238Z             if left.shape != right.shape:
2025-01-10T13:49:05.3662318Z                 raise_assert_detail(
2025-01-10T13:49:05.3662461Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3662535Z                 )
2025-01-10T13:49:05.3662605Z     
2025-01-10T13:49:05.3662674Z             diff = 0
2025-01-10T13:49:05.3662788Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3662946Z                 # count up differences
2025-01-10T13:49:05.3663120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3663197Z                     diff += 1
2025-01-10T13:49:05.3663267Z     
2025-01-10T13:49:05.3663356Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3663487Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3663780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3663889Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3663962Z E           
2025-01-10T13:49:05.3664069Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3664336Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3664600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3664614Z 
2025-01-10T13:49:05.3664913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3664918Z 
2025-01-10T13:49:05.3665085Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3665090Z 
2025-01-10T13:49:05.3665308Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8d670>
2025-01-10T13:49:05.3665474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3665553Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3665557Z 
2025-01-10T13:49:05.3665694Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3665814Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3665893Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3665967Z         try:
2025-01-10T13:49:05.3666104Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3666186Z         except KeyError:
2025-01-10T13:49:05.3666320Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3666389Z     
2025-01-10T13:49:05.3666472Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3666567Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3666653Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3666783Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3666864Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3666959Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3667064Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3667136Z             else:
2025-01-10T13:49:05.3667362Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3667465Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3667470Z 
2025-01-10T13:49:05.3667596Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3667704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3667850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3667916Z     ???
2025-01-10T13:49:05.3668024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3668028Z 
2025-01-10T13:49:05.3668092Z >   ???
2025-01-10T13:49:05.3668221Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3668287Z E   
2025-01-10T13:49:05.3668542Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3668661Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3668730Z E          ...
2025-01-10T13:49:05.3668827Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3668956Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3669071Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3669139Z E          ...
2025-01-10T13:49:05.3669226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3669345Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3669452Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3669456Z 
2025-01-10T13:49:05.3669541Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3669767Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-10T13:49:05.3669771Z 
2025-01-10T13:49:05.3669906Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3670035Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3670138Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3670266Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3670392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3670483Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3670560Z err_msg = None
2025-01-10T13:49:05.3670564Z 
2025-01-10T13:49:05.3670671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3670757Z         if err_msg is None:
2025-01-10T13:49:05.3670848Z             if left.shape != right.shape:
2025-01-10T13:49:05.3670934Z                 raise_assert_detail(
2025-01-10T13:49:05.3671087Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3671156Z                 )
2025-01-10T13:49:05.3671226Z     
2025-01-10T13:49:05.3671295Z             diff = 0
2025-01-10T13:49:05.3671414Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3671498Z                 # count up differences
2025-01-10T13:49:05.3671670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3671743Z                     diff += 1
2025-01-10T13:49:05.3671813Z     
2025-01-10T13:49:05.3671897Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3672035Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3672203Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3672319Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3672386Z E           
2025-01-10T13:49:05.3672503Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3672780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3673131Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3673136Z 
2025-01-10T13:49:05.3673468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3673473Z 
2025-01-10T13:49:05.3673730Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3673734Z 
2025-01-10T13:49:05.3674068Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8fd70>
2025-01-10T13:49:05.3674247Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3674325Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3674328Z 
2025-01-10T13:49:05.3674466Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3674578Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3674664Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3674731Z         try:
2025-01-10T13:49:05.3674874Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3674952Z         except KeyError:
2025-01-10T13:49:05.3675091Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3675160Z     
2025-01-10T13:49:05.3675242Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3675341Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3675431Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3675564Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3675650Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3675742Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3675848Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3675923Z             else:
2025-01-10T13:49:05.3676014Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3676121Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3676125Z 
2025-01-10T13:49:05.3676246Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3676393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3676658Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3676782Z     ???
2025-01-10T13:49:05.3676978Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3676994Z 
2025-01-10T13:49:05.3677117Z >   ???
2025-01-10T13:49:05.3677269Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3677340Z E   
2025-01-10T13:49:05.3677470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3677577Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3677652Z E          ...
2025-01-10T13:49:05.3677743Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3677877Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3677993Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3678068Z E          ...
2025-01-10T13:49:05.3678158Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3678283Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3678393Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3678397Z 
2025-01-10T13:49:05.3678493Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3678707Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-10T13:49:05.3678844Z 
2025-01-10T13:49:05.3678980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3679114Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3679209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3679349Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3679480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3679572Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3679649Z err_msg = None
2025-01-10T13:49:05.3679653Z 
2025-01-10T13:49:05.3679761Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3679919Z         if err_msg is None:
2025-01-10T13:49:05.3680016Z             if left.shape != right.shape:
2025-01-10T13:49:05.3680103Z                 raise_assert_detail(
2025-01-10T13:49:05.3680250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3680324Z                 )
2025-01-10T13:49:05.3680388Z     
2025-01-10T13:49:05.3680464Z             diff = 0
2025-01-10T13:49:05.3680574Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3680668Z                 # count up differences
2025-01-10T13:49:05.3680845Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3680922Z                     diff += 1
2025-01-10T13:49:05.3680994Z     
2025-01-10T13:49:05.3681083Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3681224Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3681395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3681517Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3681587Z E           
2025-01-10T13:49:05.3681709Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3681971Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3682241Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3682247Z 
2025-01-10T13:49:05.3682562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3682567Z 
2025-01-10T13:49:05.3682741Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3682750Z 
2025-01-10T13:49:05.3682977Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8a8e3c0>
2025-01-10T13:49:05.3683150Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc61c0ad0>
2025-01-10T13:49:05.3683224Z attr = 'j_blues'
2025-01-10T13:49:05.3683228Z 
2025-01-10T13:49:05.3683370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3683486Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3683574Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3683764Z         try:
2025-01-10T13:49:05.3683914Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3683993Z         except KeyError:
2025-01-10T13:49:05.3684138Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3684204Z     
2025-01-10T13:49:05.3684295Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3684388Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3684606Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3684736Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3684826Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3684919Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3685030Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3685109Z             else:
2025-01-10T13:49:05.3685202Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3685313Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3685317Z 
2025-01-10T13:49:05.3685444Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3685561Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3685805Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3685883Z     ???
2025-01-10T13:49:05.3685992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3686009Z 
2025-01-10T13:49:05.3686075Z >   ???
2025-01-10T13:49:05.3686208Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3686275Z E   
2025-01-10T13:49:05.3686405Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3686513Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3686588Z E          ...
2025-01-10T13:49:05.3686675Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3686809Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3686920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3686993Z E          ...
2025-01-10T13:49:05.3687076Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3687204Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3687309Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3687318Z 
2025-01-10T13:49:05.3687413Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3687647Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-10T13:49:05.3687651Z 
2025-01-10T13:49:05.3687778Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3687913Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3688008Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3688145Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3688267Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3688366Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3688440Z err_msg = None
2025-01-10T13:49:05.3688449Z 
2025-01-10T13:49:05.3688560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3688648Z         if err_msg is None:
2025-01-10T13:49:05.3688741Z             if left.shape != right.shape:
2025-01-10T13:49:05.3688827Z                 raise_assert_detail(
2025-01-10T13:49:05.3688969Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3689042Z                 )
2025-01-10T13:49:05.3689109Z     
2025-01-10T13:49:05.3689184Z             diff = 0
2025-01-10T13:49:05.3689295Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3689386Z                 # count up differences
2025-01-10T13:49:05.3689556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3689638Z                     diff += 1
2025-01-10T13:49:05.3689706Z     
2025-01-10T13:49:05.3689803Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3689938Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3690223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3690341Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3690411Z E           
2025-01-10T13:49:05.3690525Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3690786Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3691123Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3691132Z 
2025-01-10T13:49:05.3691438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3691442Z 
2025-01-10T13:49:05.3691611Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3691615Z 
2025-01-10T13:49:05.3691843Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c1f40>
2025-01-10T13:49:05.3692007Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3692085Z attr = 'lines'
2025-01-10T13:49:05.3692089Z 
2025-01-10T13:49:05.3692223Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3692339Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3692425Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3692494Z         try:
2025-01-10T13:49:05.3692642Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3692721Z         except KeyError:
2025-01-10T13:49:05.3692868Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3692934Z     
2025-01-10T13:49:05.3693022Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3693115Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3693206Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3693333Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3693420Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3693506Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3693754Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3693828Z             else:
2025-01-10T13:49:05.3693925Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3694036Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3694049Z 
2025-01-10T13:49:05.3694171Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3694291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3694440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3694512Z     ???
2025-01-10T13:49:05.3694620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3694624Z 
2025-01-10T13:49:05.3694695Z >   ???
2025-01-10T13:49:05.3694819Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3694892Z E   
2025-01-10T13:49:05.3695109Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3695315Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3695435Z E          ...
2025-01-10T13:49:05.3695590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3695814Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3696006Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3696133Z E          ...
2025-01-10T13:49:05.3696455Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3696622Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3696728Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3696732Z 
2025-01-10T13:49:05.3696825Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3697105Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-10T13:49:05.3697110Z 
2025-01-10T13:49:05.3697332Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2000>
2025-01-10T13:49:05.3697500Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3697585Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3697589Z 
2025-01-10T13:49:05.3697724Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3697947Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3698037Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3698112Z         try:
2025-01-10T13:49:05.3698253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3698331Z         except KeyError:
2025-01-10T13:49:05.3698475Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3698542Z     
2025-01-10T13:49:05.3698635Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3698725Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3698817Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3698951Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3699034Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3699126Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3699231Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3699236Z 
2025-01-10T13:49:05.3699366Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3699476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3699485Z 
2025-01-10T13:49:05.3699623Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3699707Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3699819Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3699899Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3700041Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3700125Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3700229Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3700311Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3700384Z err_msg = None
2025-01-10T13:49:05.3700388Z 
2025-01-10T13:49:05.3700503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3700581Z         if err_msg is None:
2025-01-10T13:49:05.3700682Z             if left.shape != right.shape:
2025-01-10T13:49:05.3700763Z                 raise_assert_detail(
2025-01-10T13:49:05.3700908Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3700977Z                 )
2025-01-10T13:49:05.3701050Z     
2025-01-10T13:49:05.3701121Z             diff = 0
2025-01-10T13:49:05.3701236Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3701327Z                 # count up differences
2025-01-10T13:49:05.3701496Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3701577Z                     diff += 1
2025-01-10T13:49:05.3701645Z     
2025-01-10T13:49:05.3701734Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3701875Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3702046Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3702262Z E           AssertionError: Series are different
2025-01-10T13:49:05.3702336Z E           
2025-01-10T13:49:05.3702438Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3702812Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3703247Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3703584Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3703712Z 
2025-01-10T13:49:05.3704025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3704307Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-10T13:49:05.3704311Z 
2025-01-10T13:49:05.3704535Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c20c0>
2025-01-10T13:49:05.3704709Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3704796Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3704804Z 
2025-01-10T13:49:05.3704943Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3705056Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3705142Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3705210Z         try:
2025-01-10T13:49:05.3705352Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3705435Z         except KeyError:
2025-01-10T13:49:05.3705569Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3705642Z     
2025-01-10T13:49:05.3705725Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3705821Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3705906Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3706051Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3706141Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3706234Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3706351Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3706355Z 
2025-01-10T13:49:05.3706484Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3706597Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3706606Z 
2025-01-10T13:49:05.3706741Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3706828Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3706932Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3707015Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3707151Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3707237Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3707344Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3707426Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3707624Z err_msg = None
2025-01-10T13:49:05.3707628Z 
2025-01-10T13:49:05.3707744Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3707829Z         if err_msg is None:
2025-01-10T13:49:05.3707922Z             if left.shape != right.shape:
2025-01-10T13:49:05.3708009Z                 raise_assert_detail(
2025-01-10T13:49:05.3708152Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3708226Z                 )
2025-01-10T13:49:05.3708294Z     
2025-01-10T13:49:05.3708369Z             diff = 0
2025-01-10T13:49:05.3708479Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3708570Z                 # count up differences
2025-01-10T13:49:05.3708842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3708925Z                     diff += 1
2025-01-10T13:49:05.3708991Z     
2025-01-10T13:49:05.3709080Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3709219Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3709392Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3709499Z E           AssertionError: Series are different
2025-01-10T13:49:05.3709568Z E           
2025-01-10T13:49:05.3709674Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3710046Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3710422Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3710805Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3710810Z 
2025-01-10T13:49:05.3711119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3711336Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-10T13:49:05.3711344Z 
2025-01-10T13:49:05.3711475Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3711600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3711699Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3711831Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3711956Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3712054Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3712132Z err_msg = None
2025-01-10T13:49:05.3712137Z 
2025-01-10T13:49:05.3712241Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3712331Z         if err_msg is None:
2025-01-10T13:49:05.3712454Z             if left.shape != right.shape:
2025-01-10T13:49:05.3712788Z                 raise_assert_detail(
2025-01-10T13:49:05.3713040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3713160Z                 )
2025-01-10T13:49:05.3713288Z     
2025-01-10T13:49:05.3713376Z             diff = 0
2025-01-10T13:49:05.3713495Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3713582Z                 # count up differences
2025-01-10T13:49:05.3713862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3713938Z                     diff += 1
2025-01-10T13:49:05.3714010Z     
2025-01-10T13:49:05.3714096Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3714232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3714536Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3714659Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3714734Z E           
2025-01-10T13:49:05.3714854Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3715119Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3715379Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3715385Z 
2025-01-10T13:49:05.3715693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3715701Z 
2025-01-10T13:49:05.3715874Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3715879Z 
2025-01-10T13:49:05.3716103Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2300>
2025-01-10T13:49:05.3716305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>, attr = 'nu'
2025-01-10T13:49:05.3716309Z 
2025-01-10T13:49:05.3716448Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3716567Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3716651Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3716726Z         try:
2025-01-10T13:49:05.3716866Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3716950Z         except KeyError:
2025-01-10T13:49:05.3717092Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3717168Z     
2025-01-10T13:49:05.3717258Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3717358Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3717455Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3717586Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3717674Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3717762Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3717875Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3717879Z 
2025-01-10T13:49:05.3718001Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3718118Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3718262Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3718337Z     ???
2025-01-10T13:49:05.3718453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3718457Z 
2025-01-10T13:49:05.3718523Z >   ???
2025-01-10T13:49:05.3718653Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3718850Z E   
2025-01-10T13:49:05.3718985Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3719095Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3719170Z E          ...
2025-01-10T13:49:05.3719255Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3719388Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3719498Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3719574Z E          ...
2025-01-10T13:49:05.3719657Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3719785Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3719890Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3719900Z 
2025-01-10T13:49:05.3720074Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3720335Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-10T13:49:05.3720344Z 
2025-01-10T13:49:05.3720472Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3720603Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3720697Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3720830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3720950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3721047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3721123Z err_msg = None
2025-01-10T13:49:05.3721126Z 
2025-01-10T13:49:05.3721235Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3721323Z         if err_msg is None:
2025-01-10T13:49:05.3721415Z             if left.shape != right.shape:
2025-01-10T13:49:05.3721506Z                 raise_assert_detail(
2025-01-10T13:49:05.3721646Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3721721Z                 )
2025-01-10T13:49:05.3721789Z     
2025-01-10T13:49:05.3721863Z             diff = 0
2025-01-10T13:49:05.3721973Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3722062Z                 # count up differences
2025-01-10T13:49:05.3722229Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3722311Z                     diff += 1
2025-01-10T13:49:05.3722379Z     
2025-01-10T13:49:05.3722470Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3722611Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3722791Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3722907Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3722982Z E           
2025-01-10T13:49:05.3723097Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3723361Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3723761Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3723766Z 
2025-01-10T13:49:05.3724083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3724269Z 
2025-01-10T13:49:05.3724440Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3724445Z 
2025-01-10T13:49:05.3724671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c23c0>
2025-01-10T13:49:05.3724835Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3724917Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3724921Z 
2025-01-10T13:49:05.3725062Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3725177Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3725267Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3725336Z         try:
2025-01-10T13:49:05.3725478Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3725557Z         except KeyError:
2025-01-10T13:49:05.3725806Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3725876Z     
2025-01-10T13:49:05.3725965Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3726061Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3726154Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3726284Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3726373Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3726460Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3726574Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3726577Z 
2025-01-10T13:49:05.3726704Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3726816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3726965Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3727034Z     ???
2025-01-10T13:49:05.3727153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3727158Z 
2025-01-10T13:49:05.3727225Z >   ???
2025-01-10T13:49:05.3727359Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3727426Z E   
2025-01-10T13:49:05.3727558Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3727668Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3727742Z E          ...
2025-01-10T13:49:05.3727828Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3727959Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3728075Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3728144Z E          ...
2025-01-10T13:49:05.3728232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3728355Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3728462Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3728470Z 
2025-01-10T13:49:05.3728557Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3728778Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-10T13:49:05.3728787Z 
2025-01-10T13:49:05.3728909Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3729037Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3729136Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3729264Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3729386Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3729476Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3729553Z err_msg = None
2025-01-10T13:49:05.3729557Z 
2025-01-10T13:49:05.3729668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3729752Z         if err_msg is None:
2025-01-10T13:49:05.3729844Z             if left.shape != right.shape:
2025-01-10T13:49:05.3730022Z                 raise_assert_detail(
2025-01-10T13:49:05.3730164Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3730239Z                 )
2025-01-10T13:49:05.3730306Z     
2025-01-10T13:49:05.3730381Z             diff = 0
2025-01-10T13:49:05.3730494Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3730578Z                 # count up differences
2025-01-10T13:49:05.3730748Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3730822Z                     diff += 1
2025-01-10T13:49:05.3730895Z     
2025-01-10T13:49:05.3730981Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3731172Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3731643Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3731861Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3731950Z E           
2025-01-10T13:49:05.3732068Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3732335Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3732592Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3732603Z 
2025-01-10T13:49:05.3732911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3732919Z 
2025-01-10T13:49:05.3733087Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3733096Z 
2025-01-10T13:49:05.3733317Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2480>
2025-01-10T13:49:05.3733521Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>, attr = 'f_lu'
2025-01-10T13:49:05.3733525Z 
2025-01-10T13:49:05.3733801Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3733922Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3734003Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3734079Z         try:
2025-01-10T13:49:05.3734217Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3734302Z         except KeyError:
2025-01-10T13:49:05.3734445Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3734517Z     
2025-01-10T13:49:05.3734602Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3734704Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3734798Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3734932Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3735020Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3735107Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3735219Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3735224Z 
2025-01-10T13:49:05.3735346Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3735462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3735604Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3735677Z     ???
2025-01-10T13:49:05.3735786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3735789Z 
2025-01-10T13:49:05.3735861Z >   ???
2025-01-10T13:49:05.3735990Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3736201Z E   
2025-01-10T13:49:05.3736333Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3736443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3736520Z E          ...
2025-01-10T13:49:05.3736605Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3736734Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3736846Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3736920Z E          ...
2025-01-10T13:49:05.3737003Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3737131Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3737233Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3737341Z 
2025-01-10T13:49:05.3737437Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3737682Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-10T13:49:05.3737692Z 
2025-01-10T13:49:05.3737816Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3737946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3738038Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3738172Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3738293Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3738388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3738462Z err_msg = None
2025-01-10T13:49:05.3738465Z 
2025-01-10T13:49:05.3738585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3738669Z         if err_msg is None:
2025-01-10T13:49:05.3738762Z             if left.shape != right.shape:
2025-01-10T13:49:05.3738852Z                 raise_assert_detail(
2025-01-10T13:49:05.3738991Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3739064Z                 )
2025-01-10T13:49:05.3739131Z     
2025-01-10T13:49:05.3739205Z             diff = 0
2025-01-10T13:49:05.3739314Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3739403Z                 # count up differences
2025-01-10T13:49:05.3739569Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3739653Z                     diff += 1
2025-01-10T13:49:05.3739720Z     
2025-01-10T13:49:05.3739813Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3739947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3740122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3740237Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3740311Z E           
2025-01-10T13:49:05.3740426Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3740683Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3740946Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3740950Z 
2025-01-10T13:49:05.3741259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3741376Z 
2025-01-10T13:49:05.3741545Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3741549Z 
2025-01-10T13:49:05.3741777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2c30>
2025-01-10T13:49:05.3741939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3742021Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3742025Z 
2025-01-10T13:49:05.3742158Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3742276Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3742358Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3742432Z         try:
2025-01-10T13:49:05.3742575Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3742653Z         except KeyError:
2025-01-10T13:49:05.3742869Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3742942Z     
2025-01-10T13:49:05.3743035Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3743127Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3743219Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3743346Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3743433Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3743520Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3743737Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3743810Z             else:
2025-01-10T13:49:05.3743909Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3744014Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3744023Z 
2025-01-10T13:49:05.3744147Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3744266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3744409Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3744490Z     ???
2025-01-10T13:49:05.3744599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3744603Z 
2025-01-10T13:49:05.3744676Z >   ???
2025-01-10T13:49:05.3744800Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3744871Z E   
2025-01-10T13:49:05.3744996Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3745108Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3745177Z E          ...
2025-01-10T13:49:05.3745268Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3745400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3745510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3745584Z E          ...
2025-01-10T13:49:05.3745670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3745803Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3745911Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3745916Z 
2025-01-10T13:49:05.3746007Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3746244Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-10T13:49:05.3746249Z 
2025-01-10T13:49:05.3746377Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3746500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3746597Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3746732Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3746857Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3746952Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3747025Z err_msg = None
2025-01-10T13:49:05.3747156Z 
2025-01-10T13:49:05.3747272Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3747353Z         if err_msg is None:
2025-01-10T13:49:05.3747449Z             if left.shape != right.shape:
2025-01-10T13:49:05.3747531Z                 raise_assert_detail(
2025-01-10T13:49:05.3747673Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3747742Z                 )
2025-01-10T13:49:05.3747823Z     
2025-01-10T13:49:05.3747902Z             diff = 0
2025-01-10T13:49:05.3748013Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3748106Z                 # count up differences
2025-01-10T13:49:05.3748409Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3748556Z                     diff += 1
2025-01-10T13:49:05.3748831Z     
2025-01-10T13:49:05.3748989Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3749213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3749525Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3749649Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3749732Z E           
2025-01-10T13:49:05.3749845Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3750115Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3750386Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3750395Z 
2025-01-10T13:49:05.3750695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3750699Z 
2025-01-10T13:49:05.3750872Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3750876Z 
2025-01-10T13:49:05.3751108Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2cf0>
2025-01-10T13:49:05.3751275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3751363Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3751367Z 
2025-01-10T13:49:05.3751502Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3751619Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3751709Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3751783Z         try:
2025-01-10T13:49:05.3751919Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3752007Z         except KeyError:
2025-01-10T13:49:05.3752145Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3752218Z     
2025-01-10T13:49:05.3752303Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3752402Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3752496Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3752631Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3752719Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3752806Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3752920Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3752993Z             else:
2025-01-10T13:49:05.3753093Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3753203Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3753208Z 
2025-01-10T13:49:05.3753335Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3753556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3753827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3753896Z     ???
2025-01-10T13:49:05.3754011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3754014Z 
2025-01-10T13:49:05.3754086Z >   ???
2025-01-10T13:49:05.3763484Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3763584Z E   
2025-01-10T13:49:05.3763884Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3764008Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3764084Z E          ...
2025-01-10T13:49:05.3764184Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3764520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3764656Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3764739Z E          ...
2025-01-10T13:49:05.3764826Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3764959Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3765064Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3765069Z 
2025-01-10T13:49:05.3765163Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3765399Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-10T13:49:05.3765403Z 
2025-01-10T13:49:05.3765541Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3765672Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3765782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3765922Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3766050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3766145Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3766220Z err_msg = None
2025-01-10T13:49:05.3766224Z 
2025-01-10T13:49:05.3766344Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3766426Z         if err_msg is None:
2025-01-10T13:49:05.3766529Z             if left.shape != right.shape:
2025-01-10T13:49:05.3766611Z                 raise_assert_detail(
2025-01-10T13:49:05.3766766Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3766889Z                 )
2025-01-10T13:49:05.3767019Z     
2025-01-10T13:49:05.3767149Z             diff = 0
2025-01-10T13:49:05.3767349Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3767513Z                 # count up differences
2025-01-10T13:49:05.3767815Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3767954Z                     diff += 1
2025-01-10T13:49:05.3768064Z     
2025-01-10T13:49:05.3768212Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3768447Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3768664Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3768780Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3768854Z E           
2025-01-10T13:49:05.3768965Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3769237Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3769505Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3769684Z 
2025-01-10T13:49:05.3769999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3770004Z 
2025-01-10T13:49:05.3770186Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3770190Z 
2025-01-10T13:49:05.3770418Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c2ea0>
2025-01-10T13:49:05.3770590Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be819df70>
2025-01-10T13:49:05.3770748Z attr = 'j_blues'
2025-01-10T13:49:05.3770753Z 
2025-01-10T13:49:05.3770893Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3771026Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3771110Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3771183Z         try:
2025-01-10T13:49:05.3771325Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3771412Z         except KeyError:
2025-01-10T13:49:05.3771553Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3771624Z     
2025-01-10T13:49:05.3771708Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3771806Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3771894Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3772034Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3772124Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3772215Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3772327Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3772400Z             else:
2025-01-10T13:49:05.3772505Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3772611Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3772615Z 
2025-01-10T13:49:05.3772755Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3772869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3773022Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3773090Z     ???
2025-01-10T13:49:05.3773201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3773205Z 
2025-01-10T13:49:05.3773276Z >   ???
2025-01-10T13:49:05.3773440Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3773511Z E   
2025-01-10T13:49:05.3773785Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3773896Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3773972Z E          ...
2025-01-10T13:49:05.3774063Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3774194Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3774308Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3774377Z E          ...
2025-01-10T13:49:05.3774464Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3774588Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3774695Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3774699Z 
2025-01-10T13:49:05.3774785Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3775000Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-10T13:49:05.3775004Z 
2025-01-10T13:49:05.3775136Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3775274Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3775495Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3775633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3775757Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3775845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3775924Z err_msg = None
2025-01-10T13:49:05.3775928Z 
2025-01-10T13:49:05.3776037Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3776119Z         if err_msg is None:
2025-01-10T13:49:05.3776213Z             if left.shape != right.shape:
2025-01-10T13:49:05.3776300Z                 raise_assert_detail(
2025-01-10T13:49:05.3776549Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3776626Z                 )
2025-01-10T13:49:05.3776692Z     
2025-01-10T13:49:05.3776769Z             diff = 0
2025-01-10T13:49:05.3776883Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3776974Z                 # count up differences
2025-01-10T13:49:05.3777148Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3777223Z                     diff += 1
2025-01-10T13:49:05.3777293Z     
2025-01-10T13:49:05.3777377Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3777516Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3777682Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3777797Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3777865Z E           
2025-01-10T13:49:05.3777973Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3778240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3778909Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3778914Z 
2025-01-10T13:49:05.3779229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3779233Z 
2025-01-10T13:49:05.3779400Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3779409Z 
2025-01-10T13:49:05.3779636Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c3ce0>
2025-01-10T13:49:05.3779809Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3779886Z attr = 'lines'
2025-01-10T13:49:05.3779889Z 
2025-01-10T13:49:05.3780028Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3780141Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3780227Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3780295Z         try:
2025-01-10T13:49:05.3780435Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3780514Z         except KeyError:
2025-01-10T13:49:05.3780657Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3780723Z     
2025-01-10T13:49:05.3780812Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3780903Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3780994Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3781133Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3781216Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3781398Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3781506Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3781579Z             else:
2025-01-10T13:49:05.3781671Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3781779Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3781783Z 
2025-01-10T13:49:05.3781908Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3782024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3782165Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3782237Z     ???
2025-01-10T13:49:05.3782348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3782352Z 
2025-01-10T13:49:05.3782493Z >   ???
2025-01-10T13:49:05.3782626Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3782696Z E   
2025-01-10T13:49:05.3782824Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3782930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3783004Z E          ...
2025-01-10T13:49:05.3783086Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3783216Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3783324Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3783398Z E          ...
2025-01-10T13:49:05.3783480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3783700Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3783807Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3783811Z 
2025-01-10T13:49:05.3783896Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3784153Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-10T13:49:05.3784162Z 
2025-01-10T13:49:05.3784380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c3da0>
2025-01-10T13:49:05.3784548Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3784633Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3784637Z 
2025-01-10T13:49:05.3784776Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3784884Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3784967Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3785036Z         try:
2025-01-10T13:49:05.3785177Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3785261Z         except KeyError:
2025-01-10T13:49:05.3785470Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3785595Z     
2025-01-10T13:49:05.3785746Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3785904Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3786054Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3786294Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3786431Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3786581Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3786756Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3786762Z 
2025-01-10T13:49:05.3786977Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3787160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3787175Z 
2025-01-10T13:49:05.3787358Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3787445Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3787557Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3787641Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3787777Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3788033Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3788134Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3788214Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3788287Z err_msg = None
2025-01-10T13:49:05.3788291Z 
2025-01-10T13:49:05.3788403Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3788486Z         if err_msg is None:
2025-01-10T13:49:05.3788577Z             if left.shape != right.shape:
2025-01-10T13:49:05.3788662Z                 raise_assert_detail(
2025-01-10T13:49:05.3788807Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3788880Z                 )
2025-01-10T13:49:05.3788944Z     
2025-01-10T13:49:05.3789125Z             diff = 0
2025-01-10T13:49:05.3789237Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3789326Z                 # count up differences
2025-01-10T13:49:05.3789499Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3789580Z                     diff += 1
2025-01-10T13:49:05.3789645Z     
2025-01-10T13:49:05.3789735Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3789866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3790039Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3790147Z E           AssertionError: Series are different
2025-01-10T13:49:05.3790215Z E           
2025-01-10T13:49:05.3790319Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3790694Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3791031Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3791370Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3791375Z 
2025-01-10T13:49:05.3791678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3791932Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-10T13:49:05.3791936Z 
2025-01-10T13:49:05.3792155Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89c3e60>
2025-01-10T13:49:05.3792325Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3792420Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3792424Z 
2025-01-10T13:49:05.3792558Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3792674Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3792754Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3792826Z         try:
2025-01-10T13:49:05.3792969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3793055Z         except KeyError:
2025-01-10T13:49:05.3793187Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3793348Z     
2025-01-10T13:49:05.3793432Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3793527Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3793731Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3793867Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3793954Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3794040Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3794149Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3794153Z 
2025-01-10T13:49:05.3794276Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3794393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3794398Z 
2025-01-10T13:49:05.3794648Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3794737Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3794849Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3794931Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3795075Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3795155Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3795261Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3795336Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3795414Z err_msg = None
2025-01-10T13:49:05.3795418Z 
2025-01-10T13:49:05.3795525Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3795607Z         if err_msg is None:
2025-01-10T13:49:05.3795698Z             if left.shape != right.shape:
2025-01-10T13:49:05.3795789Z                 raise_assert_detail(
2025-01-10T13:49:05.3795932Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3796010Z                 )
2025-01-10T13:49:05.3796075Z     
2025-01-10T13:49:05.3796149Z             diff = 0
2025-01-10T13:49:05.3796259Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3796350Z                 # count up differences
2025-01-10T13:49:05.3796523Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3796597Z                     diff += 1
2025-01-10T13:49:05.3796668Z     
2025-01-10T13:49:05.3796749Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3796888Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3797054Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3797160Z E           AssertionError: Series are different
2025-01-10T13:49:05.3797231Z E           
2025-01-10T13:49:05.3797334Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3797701Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3798088Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3798469Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3798600Z 
2025-01-10T13:49:05.3798910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3799110Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-10T13:49:05.3799114Z 
2025-01-10T13:49:05.3799243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3799368Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3799542Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3799674Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3799806Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3799900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3799971Z err_msg = None
2025-01-10T13:49:05.3799975Z 
2025-01-10T13:49:05.3800083Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3800160Z         if err_msg is None:
2025-01-10T13:49:05.3800254Z             if left.shape != right.shape:
2025-01-10T13:49:05.3800335Z                 raise_assert_detail(
2025-01-10T13:49:05.3800476Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3800544Z                 )
2025-01-10T13:49:05.3800614Z     
2025-01-10T13:49:05.3800682Z             diff = 0
2025-01-10T13:49:05.3800798Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3800885Z                 # count up differences
2025-01-10T13:49:05.3801056Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3801134Z                     diff += 1
2025-01-10T13:49:05.3801203Z     
2025-01-10T13:49:05.3801291Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3801424Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3801594Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3801704Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3801777Z E           
2025-01-10T13:49:05.3801886Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3802155Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3802425Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3802430Z 
2025-01-10T13:49:05.3802725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3802729Z 
2025-01-10T13:49:05.3802899Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3802904Z 
2025-01-10T13:49:05.3803126Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887c0e0>
2025-01-10T13:49:05.3803336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>, attr = 'nu'
2025-01-10T13:49:05.3803340Z 
2025-01-10T13:49:05.3803480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3803777Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3803866Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3803935Z         try:
2025-01-10T13:49:05.3804175Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3804313Z         except KeyError:
2025-01-10T13:49:05.3804559Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3804677Z     
2025-01-10T13:49:05.3804816Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3804913Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3805001Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3805130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3805211Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3805297Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3805550Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3805556Z 
2025-01-10T13:49:05.3805694Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3805804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3805952Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3806021Z     ???
2025-01-10T13:49:05.3806134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3806139Z 
2025-01-10T13:49:05.3806205Z >   ???
2025-01-10T13:49:05.3806331Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3806398Z E   
2025-01-10T13:49:05.3806527Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3806636Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3806709Z E          ...
2025-01-10T13:49:05.3806798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3806928Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3807044Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3807116Z E          ...
2025-01-10T13:49:05.3807203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3807321Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3807428Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3807432Z 
2025-01-10T13:49:05.3807518Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3807740Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-10T13:49:05.3807745Z 
2025-01-10T13:49:05.3807870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3808001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3808100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3808228Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3808357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3808446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3808523Z err_msg = None
2025-01-10T13:49:05.3808527Z 
2025-01-10T13:49:05.3808633Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3808718Z         if err_msg is None:
2025-01-10T13:49:05.3808811Z             if left.shape != right.shape:
2025-01-10T13:49:05.3808896Z                 raise_assert_detail(
2025-01-10T13:49:05.3809037Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3809113Z                 )
2025-01-10T13:49:05.3809185Z     
2025-01-10T13:49:05.3809255Z             diff = 0
2025-01-10T13:49:05.3809371Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3809453Z                 # count up differences
2025-01-10T13:49:05.3809625Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3809841Z                     diff += 1
2025-01-10T13:49:05.3809911Z     
2025-01-10T13:49:05.3809996Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3810132Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3810298Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3810413Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3810481Z E           
2025-01-10T13:49:05.3810590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3810930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3811200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3811205Z 
2025-01-10T13:49:05.3811511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3811515Z 
2025-01-10T13:49:05.3811680Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3811689Z 
2025-01-10T13:49:05.3811909Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887c1a0>
2025-01-10T13:49:05.3812074Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3812155Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3812159Z 
2025-01-10T13:49:05.3812298Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3812412Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3812497Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3812564Z         try:
2025-01-10T13:49:05.3812707Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3812785Z         except KeyError:
2025-01-10T13:49:05.3812925Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3812990Z     
2025-01-10T13:49:05.3813080Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3813174Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3813260Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3813394Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3813476Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3813569Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3813842Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3813852Z 
2025-01-10T13:49:05.3813978Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3814089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3814235Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3814301Z     ???
2025-01-10T13:49:05.3814412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3814415Z 
2025-01-10T13:49:05.3814488Z >   ???
2025-01-10T13:49:05.3814610Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3814680Z E   
2025-01-10T13:49:05.3814805Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3814917Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3814985Z E          ...
2025-01-10T13:49:05.3815078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3815201Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3815439Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3815507Z E          ...
2025-01-10T13:49:05.3815596Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3815716Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3815823Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3815827Z 
2025-01-10T13:49:05.3815918Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3816117Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-10T13:49:05.3816121Z 
2025-01-10T13:49:05.3816253Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3816375Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3816582Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3816713Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3816842Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3816932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3817010Z err_msg = None
2025-01-10T13:49:05.3817014Z 
2025-01-10T13:49:05.3817124Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3817202Z         if err_msg is None:
2025-01-10T13:49:05.3817297Z             if left.shape != right.shape:
2025-01-10T13:49:05.3817377Z                 raise_assert_detail(
2025-01-10T13:49:05.3817521Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3817591Z                 )
2025-01-10T13:49:05.3817660Z     
2025-01-10T13:49:05.3817728Z             diff = 0
2025-01-10T13:49:05.3817843Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3817927Z                 # count up differences
2025-01-10T13:49:05.3818099Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3818176Z                     diff += 1
2025-01-10T13:49:05.3818247Z     
2025-01-10T13:49:05.3818331Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3818468Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3818640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3818751Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3818828Z E           
2025-01-10T13:49:05.3818935Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3819202Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3819465Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3819474Z 
2025-01-10T13:49:05.3819769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3819773Z 
2025-01-10T13:49:05.3819942Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3819946Z 
2025-01-10T13:49:05.3820167Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887c260>
2025-01-10T13:49:05.3820375Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>, attr = 'f_lu'
2025-01-10T13:49:05.3820379Z 
2025-01-10T13:49:05.3820512Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3820718Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3820799Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3820873Z         try:
2025-01-10T13:49:05.3821016Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3821093Z         except KeyError:
2025-01-10T13:49:05.3821231Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3821297Z     
2025-01-10T13:49:05.3821383Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3821471Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3821596Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3821833Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3821986Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3822270Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3822405Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3822410Z 
2025-01-10T13:49:05.3822544Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3822658Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3822805Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3822871Z     ???
2025-01-10T13:49:05.3822982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3822986Z 
2025-01-10T13:49:05.3823050Z >   ???
2025-01-10T13:49:05.3823178Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3823242Z E   
2025-01-10T13:49:05.3823369Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3823475Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3823546Z E          ...
2025-01-10T13:49:05.3823751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3823883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3823997Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3824070Z E          ...
2025-01-10T13:49:05.3824158Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3824278Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3824383Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3824386Z 
2025-01-10T13:49:05.3824476Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3824694Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-10T13:49:05.3824698Z 
2025-01-10T13:49:05.3824821Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3824948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3825044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3825175Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3825303Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3825393Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3825473Z err_msg = None
2025-01-10T13:49:05.3825477Z 
2025-01-10T13:49:05.3825584Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3825666Z         if err_msg is None:
2025-01-10T13:49:05.3825755Z             if left.shape != right.shape:
2025-01-10T13:49:05.3825840Z                 raise_assert_detail(
2025-01-10T13:49:05.3825981Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3826054Z                 )
2025-01-10T13:49:05.3826122Z     
2025-01-10T13:49:05.3826198Z             diff = 0
2025-01-10T13:49:05.3826379Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3826519Z                 # count up differences
2025-01-10T13:49:05.3826780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3827106Z                     diff += 1
2025-01-10T13:49:05.3827209Z     
2025-01-10T13:49:05.3827338Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3827539Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3827795Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3827962Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3828064Z E           
2025-01-10T13:49:05.3828232Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3828846Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3829143Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3829150Z 
2025-01-10T13:49:05.3829465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3829470Z 
2025-01-10T13:49:05.3829639Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3829643Z 
2025-01-10T13:49:05.3829870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887c9e0>
2025-01-10T13:49:05.3830040Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3830120Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3830125Z 
2025-01-10T13:49:05.3830264Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3830381Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3830466Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3830534Z         try:
2025-01-10T13:49:05.3830678Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3830755Z         except KeyError:
2025-01-10T13:49:05.3830893Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3830958Z     
2025-01-10T13:49:05.3831046Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3831138Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3831229Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3831360Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3831449Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3831544Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3831652Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3831731Z             else:
2025-01-10T13:49:05.3831823Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3831932Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3831936Z 
2025-01-10T13:49:05.3832057Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3832170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3832314Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3832388Z     ???
2025-01-10T13:49:05.3832497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3832501Z 
2025-01-10T13:49:05.3832572Z >   ???
2025-01-10T13:49:05.3832702Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3832768Z E   
2025-01-10T13:49:05.3832904Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3833020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3833187Z E          ...
2025-01-10T13:49:05.3833271Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3833401Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3833510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3833583Z E          ...
2025-01-10T13:49:05.3833805Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3833932Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3834031Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3834035Z 
2025-01-10T13:49:05.3834125Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3834338Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-10T13:49:05.3834342Z 
2025-01-10T13:49:05.3834584Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3834716Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3834814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3834947Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3835065Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3835158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3835232Z err_msg = None
2025-01-10T13:49:05.3835236Z 
2025-01-10T13:49:05.3835347Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3835432Z         if err_msg is None:
2025-01-10T13:49:05.3835521Z             if left.shape != right.shape:
2025-01-10T13:49:05.3835607Z                 raise_assert_detail(
2025-01-10T13:49:05.3835754Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3835828Z                 )
2025-01-10T13:49:05.3835893Z     
2025-01-10T13:49:05.3835970Z             diff = 0
2025-01-10T13:49:05.3836077Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3836167Z                 # count up differences
2025-01-10T13:49:05.3836334Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3836414Z                     diff += 1
2025-01-10T13:49:05.3836479Z     
2025-01-10T13:49:05.3836570Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3836701Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3836872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3836987Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3837056Z E           
2025-01-10T13:49:05.3837172Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3837429Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3837696Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3837701Z 
2025-01-10T13:49:05.3838002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3838006Z 
2025-01-10T13:49:05.3838170Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3838177Z 
2025-01-10T13:49:05.3838409Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887cc20>
2025-01-10T13:49:05.3838699Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcaca5700>
2025-01-10T13:49:05.3838776Z attr = 'j_blues'
2025-01-10T13:49:05.3838780Z 
2025-01-10T13:49:05.3838912Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3839029Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3839108Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3839180Z         try:
2025-01-10T13:49:05.3839321Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3839397Z         except KeyError:
2025-01-10T13:49:05.3839537Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3839602Z     
2025-01-10T13:49:05.3839743Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3839915Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3840191Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3840413Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3840554Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3840693Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3840870Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3840988Z             else:
2025-01-10T13:49:05.3841123Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3841297Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3841305Z 
2025-01-10T13:49:05.3841507Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3841686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3841915Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3842031Z     ???
2025-01-10T13:49:05.3842220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3842228Z 
2025-01-10T13:49:05.3842352Z >   ???
2025-01-10T13:49:05.3842562Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3842690Z E   
2025-01-10T13:49:05.3842921Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3843097Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3843210Z E          ...
2025-01-10T13:49:05.3843358Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3843576Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3843970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3844102Z E          ...
2025-01-10T13:49:05.3844244Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3844467Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3844637Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3844644Z 
2025-01-10T13:49:05.3844810Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3845187Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-10T13:49:05.3845202Z 
2025-01-10T13:49:05.3845435Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3845667Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3845832Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3846070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3846290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3846459Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3846589Z err_msg = None
2025-01-10T13:49:05.3846598Z 
2025-01-10T13:49:05.3846797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3846946Z         if err_msg is None:
2025-01-10T13:49:05.3847118Z             if left.shape != right.shape:
2025-01-10T13:49:05.3847257Z                 raise_assert_detail(
2025-01-10T13:49:05.3847761Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3847881Z                 )
2025-01-10T13:49:05.3848010Z     
2025-01-10T13:49:05.3848140Z             diff = 0
2025-01-10T13:49:05.3848337Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3848503Z                 # count up differences
2025-01-10T13:49:05.3848806Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3848942Z                     diff += 1
2025-01-10T13:49:05.3849054Z     
2025-01-10T13:49:05.3849209Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3849443Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3849939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3850150Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3850286Z E           
2025-01-10T13:49:05.3850480Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3850955Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3851434Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3851442Z 
2025-01-10T13:49:05.3852009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3852016Z 
2025-01-10T13:49:05.3852329Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3852336Z 
2025-01-10T13:49:05.3852734Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887d9a0>
2025-01-10T13:49:05.3853048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3853180Z attr = 'lines'
2025-01-10T13:49:05.3853187Z 
2025-01-10T13:49:05.3853432Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3853840Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3853994Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3854124Z         try:
2025-01-10T13:49:05.3854369Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3854506Z         except KeyError:
2025-01-10T13:49:05.3854748Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3854866Z     
2025-01-10T13:49:05.3855007Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3855184Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3855339Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3855575Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3855723Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3855874Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3856072Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3856192Z             else:
2025-01-10T13:49:05.3856357Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3856543Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3856550Z 
2025-01-10T13:49:05.3856773Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3856968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3857231Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3857354Z     ???
2025-01-10T13:49:05.3857772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3857779Z 
2025-01-10T13:49:05.3857896Z >   ???
2025-01-10T13:49:05.3858117Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3858235Z E   
2025-01-10T13:49:05.3858459Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3858657Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3858787Z E          ...
2025-01-10T13:49:05.3858939Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3859163Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3859364Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3859479Z E          ...
2025-01-10T13:49:05.3859627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3860037Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3860236Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3860251Z 
2025-01-10T13:49:05.3860408Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3860867Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-10T13:49:05.3860874Z 
2025-01-10T13:49:05.3861270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887da60>
2025-01-10T13:49:05.3861556Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3861717Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3861725Z 
2025-01-10T13:49:05.3861964Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3862155Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3862245Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3862314Z         try:
2025-01-10T13:49:05.3862473Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3862552Z         except KeyError:
2025-01-10T13:49:05.3862703Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3862769Z     
2025-01-10T13:49:05.3862861Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3862960Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3863052Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3863191Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3863279Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3863369Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3863488Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3863493Z 
2025-01-10T13:49:05.3863852Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3863991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3863997Z 
2025-01-10T13:49:05.3864146Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3864229Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3864346Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3864426Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3864569Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3864649Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3864758Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3864831Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3864910Z err_msg = None
2025-01-10T13:49:05.3864914Z 
2025-01-10T13:49:05.3865032Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3865110Z         if err_msg is None:
2025-01-10T13:49:05.3865208Z             if left.shape != right.shape:
2025-01-10T13:49:05.3865292Z                 raise_assert_detail(
2025-01-10T13:49:05.3865443Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3865724Z                 )
2025-01-10T13:49:05.3865796Z     
2025-01-10T13:49:05.3865866Z             diff = 0
2025-01-10T13:49:05.3865982Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3866065Z                 # count up differences
2025-01-10T13:49:05.3866239Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3866313Z                     diff += 1
2025-01-10T13:49:05.3866385Z     
2025-01-10T13:49:05.3866468Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3866608Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3866781Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3866885Z E           AssertionError: Series are different
2025-01-10T13:49:05.3867070Z E           
2025-01-10T13:49:05.3867177Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3867564Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3867892Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3868233Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3868241Z 
2025-01-10T13:49:05.3868559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3868816Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-10T13:49:05.3868820Z 
2025-01-10T13:49:05.3869048Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887db20>
2025-01-10T13:49:05.3869221Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3869308Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3869312Z 
2025-01-10T13:49:05.3869454Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3869568Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3869660Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3869728Z         try:
2025-01-10T13:49:05.3869873Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3869951Z         except KeyError:
2025-01-10T13:49:05.3870094Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3870159Z     
2025-01-10T13:49:05.3870246Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3870337Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3870431Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3870567Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3870649Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3870738Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3870843Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3870851Z 
2025-01-10T13:49:05.3870980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3871183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3871188Z 
2025-01-10T13:49:05.3871326Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3871408Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3871517Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3871598Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3871732Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3871815Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3871914Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3871993Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3872064Z err_msg = None
2025-01-10T13:49:05.3872144Z 
2025-01-10T13:49:05.3872261Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3872344Z         if err_msg is None:
2025-01-10T13:49:05.3872437Z             if left.shape != right.shape:
2025-01-10T13:49:05.3872517Z                 raise_assert_detail(
2025-01-10T13:49:05.3872662Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3872730Z                 )
2025-01-10T13:49:05.3872799Z     
2025-01-10T13:49:05.3872868Z             diff = 0
2025-01-10T13:49:05.3872981Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3873068Z                 # count up differences
2025-01-10T13:49:05.3873238Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3873318Z                     diff += 1
2025-01-10T13:49:05.3873422Z     
2025-01-10T13:49:05.3873516Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3873782Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3873967Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3874076Z E           AssertionError: Series are different
2025-01-10T13:49:05.3874155Z E           
2025-01-10T13:49:05.3874256Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3874629Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3875009Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3875635Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3875651Z 
2025-01-10T13:49:05.3876198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3876563Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-10T13:49:05.3876568Z 
2025-01-10T13:49:05.3876787Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3876922Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3877171Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3877310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3877438Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3877528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3877606Z err_msg = None
2025-01-10T13:49:05.3877611Z 
2025-01-10T13:49:05.3877721Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3877805Z         if err_msg is None:
2025-01-10T13:49:05.3877899Z             if left.shape != right.shape:
2025-01-10T13:49:05.3877986Z                 raise_assert_detail(
2025-01-10T13:49:05.3878305Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3878383Z                 )
2025-01-10T13:49:05.3878455Z     
2025-01-10T13:49:05.3878533Z             diff = 0
2025-01-10T13:49:05.3878643Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3878732Z                 # count up differences
2025-01-10T13:49:05.3878905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3878981Z                     diff += 1
2025-01-10T13:49:05.3879050Z     
2025-01-10T13:49:05.3879135Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3879277Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3879443Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3879559Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3879629Z E           
2025-01-10T13:49:05.3879747Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3880009Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3880279Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3880284Z 
2025-01-10T13:49:05.3880586Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3880591Z 
2025-01-10T13:49:05.3880763Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3880768Z 
2025-01-10T13:49:05.3880994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887dd60>
2025-01-10T13:49:05.3881203Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>, attr = 'nu'
2025-01-10T13:49:05.3881207Z 
2025-01-10T13:49:05.3881344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3881462Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3881545Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3881618Z         try:
2025-01-10T13:49:05.3881757Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3881840Z         except KeyError:
2025-01-10T13:49:05.3881975Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3882048Z     
2025-01-10T13:49:05.3882133Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3882228Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3882320Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3882456Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3882660Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3882747Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3882860Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3882864Z 
2025-01-10T13:49:05.3882985Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3883103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3883246Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3883318Z     ???
2025-01-10T13:49:05.3883425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3883429Z 
2025-01-10T13:49:05.3883499Z >   ???
2025-01-10T13:49:05.3883750Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3883824Z E   
2025-01-10T13:49:05.3884067Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3884186Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3884267Z E          ...
2025-01-10T13:49:05.3884353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3884487Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3884599Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3884672Z E          ...
2025-01-10T13:49:05.3884756Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3884883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3884985Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3884989Z 
2025-01-10T13:49:05.3885080Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3885304Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-10T13:49:05.3885308Z 
2025-01-10T13:49:05.3885445Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3885576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3885672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3885807Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3885928Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3886022Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3886096Z err_msg = None
2025-01-10T13:49:05.3886101Z 
2025-01-10T13:49:05.3886212Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3886291Z         if err_msg is None:
2025-01-10T13:49:05.3886388Z             if left.shape != right.shape:
2025-01-10T13:49:05.3886468Z                 raise_assert_detail(
2025-01-10T13:49:05.3886619Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3886692Z                 )
2025-01-10T13:49:05.3886763Z     
2025-01-10T13:49:05.3886837Z             diff = 0
2025-01-10T13:49:05.3886947Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3887035Z                 # count up differences
2025-01-10T13:49:05.3887200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3887283Z                     diff += 1
2025-01-10T13:49:05.3887349Z     
2025-01-10T13:49:05.3887442Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3887578Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3887751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3887861Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3887935Z E           
2025-01-10T13:49:05.3888053Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3888311Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3888699Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3888703Z 
2025-01-10T13:49:05.3889001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3889010Z 
2025-01-10T13:49:05.3889265Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3889271Z 
2025-01-10T13:49:05.3889501Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887de20>
2025-01-10T13:49:05.3889672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3889753Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3889757Z 
2025-01-10T13:49:05.3889894Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3890010Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3890090Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3890164Z         try:
2025-01-10T13:49:05.3890300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3890384Z         except KeyError:
2025-01-10T13:49:05.3890526Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3890592Z     
2025-01-10T13:49:05.3890679Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3890774Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3890866Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3890995Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3891086Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3891172Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3891285Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3891289Z 
2025-01-10T13:49:05.3891410Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3891526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3891667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3891740Z     ???
2025-01-10T13:49:05.3891852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3891856Z 
2025-01-10T13:49:05.3891922Z >   ???
2025-01-10T13:49:05.3892051Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3892129Z E   
2025-01-10T13:49:05.3892258Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3892365Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3892444Z E          ...
2025-01-10T13:49:05.3892528Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3892658Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3892776Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3892850Z E          ...
2025-01-10T13:49:05.3892932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3893056Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3893162Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3893166Z 
2025-01-10T13:49:05.3893250Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3893455Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-10T13:49:05.3893459Z 
2025-01-10T13:49:05.3893587Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3893920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3894289Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3894525Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3894736Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3894891Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3895016Z err_msg = None
2025-01-10T13:49:05.3895023Z 
2025-01-10T13:49:05.3895209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3895316Z         if err_msg is None:
2025-01-10T13:49:05.3895411Z             if left.shape != right.shape:
2025-01-10T13:49:05.3895497Z                 raise_assert_detail(
2025-01-10T13:49:05.3895769Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3895844Z                 )
2025-01-10T13:49:05.3895917Z     
2025-01-10T13:49:05.3895992Z             diff = 0
2025-01-10T13:49:05.3896101Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3896191Z                 # count up differences
2025-01-10T13:49:05.3896359Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3896438Z                     diff += 1
2025-01-10T13:49:05.3896508Z     
2025-01-10T13:49:05.3896592Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3896729Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3896897Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3897012Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3897080Z E           
2025-01-10T13:49:05.3897197Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3897453Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3897719Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3897724Z 
2025-01-10T13:49:05.3898031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3898035Z 
2025-01-10T13:49:05.3898204Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3898209Z 
2025-01-10T13:49:05.3898436Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887dee0>
2025-01-10T13:49:05.3898641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>, attr = 'f_lu'
2025-01-10T13:49:05.3898645Z 
2025-01-10T13:49:05.3898781Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3898900Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3898982Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3899054Z         try:
2025-01-10T13:49:05.3899190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3899272Z         except KeyError:
2025-01-10T13:49:05.3899411Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3899481Z     
2025-01-10T13:49:05.3899564Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3899658Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3899749Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3899884Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3900055Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3900146Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3900254Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3900264Z 
2025-01-10T13:49:05.3900385Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3900499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3900640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3900715Z     ???
2025-01-10T13:49:05.3900821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3900825Z 
2025-01-10T13:49:05.3900896Z >   ???
2025-01-10T13:49:05.3901020Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3901092Z E   
2025-01-10T13:49:05.3901291Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3901409Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3901482Z E          ...
2025-01-10T13:49:05.3901571Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3901703Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3901810Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3901885Z E          ...
2025-01-10T13:49:05.3901966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3902091Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3902193Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3902197Z 
2025-01-10T13:49:05.3902287Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3902503Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-10T13:49:05.3902508Z 
2025-01-10T13:49:05.3902645Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3902769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3902878Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3903017Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3903135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3903229Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3903300Z err_msg = None
2025-01-10T13:49:05.3903303Z 
2025-01-10T13:49:05.3903417Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3903495Z         if err_msg is None:
2025-01-10T13:49:05.3903590Z             if left.shape != right.shape:
2025-01-10T13:49:05.3903799Z                 raise_assert_detail(
2025-01-10T13:49:05.3903952Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3904020Z                 )
2025-01-10T13:49:05.3904096Z     
2025-01-10T13:49:05.3904171Z             diff = 0
2025-01-10T13:49:05.3904282Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3904371Z                 # count up differences
2025-01-10T13:49:05.3904536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3904616Z                     diff += 1
2025-01-10T13:49:05.3904681Z     
2025-01-10T13:49:05.3904770Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3904904Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3905074Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3905182Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3905255Z E           
2025-01-10T13:49:05.3905366Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3905630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3906037Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3906041Z 
2025-01-10T13:49:05.3906339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3906344Z 
2025-01-10T13:49:05.3906610Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3906615Z 
2025-01-10T13:49:05.3906844Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887e660>
2025-01-10T13:49:05.3907013Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3907092Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.3907096Z 
2025-01-10T13:49:05.3907228Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3907343Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3907422Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3907495Z         try:
2025-01-10T13:49:05.3907628Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3907715Z         except KeyError:
2025-01-10T13:49:05.3907848Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3907918Z     
2025-01-10T13:49:05.3908001Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3908102Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3908193Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3908324Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3908416Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3908505Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3908616Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3908684Z             else:
2025-01-10T13:49:05.3908785Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3908894Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3908898Z 
2025-01-10T13:49:05.3909025Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3909139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3909289Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3909357Z     ???
2025-01-10T13:49:05.3909475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3909479Z 
2025-01-10T13:49:05.3909550Z >   ???
2025-01-10T13:49:05.3909679Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3909751Z E   
2025-01-10T13:49:05.3909879Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3909993Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3910063Z E          ...
2025-01-10T13:49:05.3910155Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3910285Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3910400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3910469Z E          ...
2025-01-10T13:49:05.3910556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3910678Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3910787Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3910796Z 
2025-01-10T13:49:05.3910885Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3911108Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-10T13:49:05.3911201Z 
2025-01-10T13:49:05.3911340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3911470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3911597Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3911840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3912068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3912236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3912362Z err_msg = None
2025-01-10T13:49:05.3912368Z 
2025-01-10T13:49:05.3912674Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3912807Z         if err_msg is None:
2025-01-10T13:49:05.3912966Z             if left.shape != right.shape:
2025-01-10T13:49:05.3913110Z                 raise_assert_detail(
2025-01-10T13:49:05.3913264Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3913333Z                 )
2025-01-10T13:49:05.3913404Z     
2025-01-10T13:49:05.3913474Z             diff = 0
2025-01-10T13:49:05.3913590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3913782Z                 # count up differences
2025-01-10T13:49:05.3913958Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3914034Z                     diff += 1
2025-01-10T13:49:05.3914106Z     
2025-01-10T13:49:05.3914198Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3914333Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3914511Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3914624Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3914702Z E           
2025-01-10T13:49:05.3914814Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3915079Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3915344Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3915352Z 
2025-01-10T13:49:05.3915659Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3915668Z 
2025-01-10T13:49:05.3915844Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3915848Z 
2025-01-10T13:49:05.3916071Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887e720>
2025-01-10T13:49:05.3916245Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3916321Z attr = 'beta_sobolev'
2025-01-10T13:49:05.3916325Z 
2025-01-10T13:49:05.3916468Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3916587Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3916669Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3916744Z         try:
2025-01-10T13:49:05.3916882Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3916967Z         except KeyError:
2025-01-10T13:49:05.3917107Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3917178Z     
2025-01-10T13:49:05.3917391Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3917488Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3917575Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3917710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3917792Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3917885Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3917992Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3918070Z             else:
2025-01-10T13:49:05.3918169Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3918274Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3918278Z 
2025-01-10T13:49:05.3918405Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3918621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3918772Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3918844Z     ???
2025-01-10T13:49:05.3918959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3918963Z 
2025-01-10T13:49:05.3919029Z >   ???
2025-01-10T13:49:05.3919157Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3919224Z E   
2025-01-10T13:49:05.3919356Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3919471Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3919539Z E          ...
2025-01-10T13:49:05.3919630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3919757Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3919871Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3919939Z E          ...
2025-01-10T13:49:05.3920030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3920149Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3920259Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3920264Z 
2025-01-10T13:49:05.3920350Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3920559Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-10T13:49:05.3920564Z 
2025-01-10T13:49:05.3920694Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3920821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3920921Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3921052Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3921181Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3921272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3921350Z err_msg = None
2025-01-10T13:49:05.3921359Z 
2025-01-10T13:49:05.3921468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3921553Z         if err_msg is None:
2025-01-10T13:49:05.3921647Z             if left.shape != right.shape:
2025-01-10T13:49:05.3921733Z                 raise_assert_detail(
2025-01-10T13:49:05.3921885Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3921955Z                 )
2025-01-10T13:49:05.3922026Z     
2025-01-10T13:49:05.3922096Z             diff = 0
2025-01-10T13:49:05.3922212Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3922298Z                 # count up differences
2025-01-10T13:49:05.3922473Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3922548Z                     diff += 1
2025-01-10T13:49:05.3922624Z     
2025-01-10T13:49:05.3922711Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3922857Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3923121Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3923237Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3923310Z E           
2025-01-10T13:49:05.3923419Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3923780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3924168Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3924180Z 
2025-01-10T13:49:05.3924494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3924499Z 
2025-01-10T13:49:05.3924671Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3924675Z 
2025-01-10T13:49:05.3924898Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887e8a0>
2025-01-10T13:49:05.3925069Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfc2ee10>
2025-01-10T13:49:05.3925142Z attr = 'j_blues'
2025-01-10T13:49:05.3925146Z 
2025-01-10T13:49:05.3925284Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3925396Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3925488Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3925558Z         try:
2025-01-10T13:49:05.3925700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3925785Z         except KeyError:
2025-01-10T13:49:05.3925926Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3925998Z     
2025-01-10T13:49:05.3926084Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3926179Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3926265Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3926399Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3926482Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3926579Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3926686Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3926759Z             else:
2025-01-10T13:49:05.3926851Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3926961Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3926965Z 
2025-01-10T13:49:05.3927087Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3927207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3927353Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3927421Z     ???
2025-01-10T13:49:05.3927534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3927538Z 
2025-01-10T13:49:05.3927603Z >   ???
2025-01-10T13:49:05.3927733Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3927800Z E   
2025-01-10T13:49:05.3927932Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3928042Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3928117Z E          ...
2025-01-10T13:49:05.3928203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3928339Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3928449Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3928712Z E          ...
2025-01-10T13:49:05.3928801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3928924Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3929027Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3929031Z 
2025-01-10T13:49:05.3929117Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3929327Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-10T13:49:05.3929331Z 
2025-01-10T13:49:05.3929457Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3929587Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3929679Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3929893Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3930064Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3930232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3930374Z err_msg = None
2025-01-10T13:49:05.3930380Z 
2025-01-10T13:49:05.3930567Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3930708Z         if err_msg is None:
2025-01-10T13:49:05.3930845Z             if left.shape != right.shape:
2025-01-10T13:49:05.3930935Z                 raise_assert_detail(
2025-01-10T13:49:05.3931079Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3931155Z                 )
2025-01-10T13:49:05.3931220Z     
2025-01-10T13:49:05.3931295Z             diff = 0
2025-01-10T13:49:05.3931403Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3931502Z                 # count up differences
2025-01-10T13:49:05.3931675Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3931755Z                     diff += 1
2025-01-10T13:49:05.3931827Z     
2025-01-10T13:49:05.3931913Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3932052Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3932219Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3932332Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3932402Z E           
2025-01-10T13:49:05.3932514Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3932775Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3933038Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3933046Z 
2025-01-10T13:49:05.3933354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3933358Z 
2025-01-10T13:49:05.3933524Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3933529Z 
2025-01-10T13:49:05.3933901Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887f620>
2025-01-10T13:49:05.3934075Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.3934149Z attr = 'lines'
2025-01-10T13:49:05.3934158Z 
2025-01-10T13:49:05.3934302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3934556Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3934645Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3934714Z         try:
2025-01-10T13:49:05.3934861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3934942Z         except KeyError:
2025-01-10T13:49:05.3935086Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3935156Z     
2025-01-10T13:49:05.3935246Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3935336Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3935428Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3935556Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3935645Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3935741Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3935959Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3936040Z             else:
2025-01-10T13:49:05.3936137Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.3936243Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.3936248Z 
2025-01-10T13:49:05.3936432Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.3936616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3936837Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3936948Z     ???
2025-01-10T13:49:05.3937120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3937134Z 
2025-01-10T13:49:05.3937234Z >   ???
2025-01-10T13:49:05.3937433Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3937544Z E   
2025-01-10T13:49:05.3937751Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3937933Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3938054Z E          ...
2025-01-10T13:49:05.3938199Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3938421Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3938604Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3938729Z E          ...
2025-01-10T13:49:05.3938875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3939106Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3939289Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3939296Z 
2025-01-10T13:49:05.3939460Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3939945Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-10T13:49:05.3939953Z 
2025-01-10T13:49:05.3940361Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887f6e0>
2025-01-10T13:49:05.3940664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.3940825Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.3940832Z 
2025-01-10T13:49:05.3941074Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3941266Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3941402Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3941504Z         try:
2025-01-10T13:49:05.3941722Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3941847Z         except KeyError:
2025-01-10T13:49:05.3942051Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3942156Z     
2025-01-10T13:49:05.3942282Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3942426Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3942555Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3942773Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3942902Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3943044Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3943357Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3943364Z 
2025-01-10T13:49:05.3957147Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3957386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3957394Z 
2025-01-10T13:49:05.3957611Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3957745Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3957909Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3958033Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3958248Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.3958585Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.3958745Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3958873Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.3958980Z err_msg = None
2025-01-10T13:49:05.3958997Z 
2025-01-10T13:49:05.3959162Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3959298Z         if err_msg is None:
2025-01-10T13:49:05.3959455Z             if left.shape != right.shape:
2025-01-10T13:49:05.3959591Z                 raise_assert_detail(
2025-01-10T13:49:05.3959805Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3959911Z                 )
2025-01-10T13:49:05.3960012Z     
2025-01-10T13:49:05.3960121Z             diff = 0
2025-01-10T13:49:05.3960281Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3960409Z                 # count up differences
2025-01-10T13:49:05.3960665Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3960781Z                     diff += 1
2025-01-10T13:49:05.3960878Z     
2025-01-10T13:49:05.3961015Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3961216Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3961465Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3961621Z E           AssertionError: Series are different
2025-01-10T13:49:05.3961724Z E           
2025-01-10T13:49:05.3961874Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.3962443Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3962950Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3963465Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3963472Z 
2025-01-10T13:49:05.3964105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3964506Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-10T13:49:05.3964661Z 
2025-01-10T13:49:05.3965009Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887f7a0>
2025-01-10T13:49:05.3965255Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.3965387Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.3965392Z 
2025-01-10T13:49:05.3965591Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3965765Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3965882Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3965986Z         try:
2025-01-10T13:49:05.3966197Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3966319Z         except KeyError:
2025-01-10T13:49:05.3966519Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3966622Z     
2025-01-10T13:49:05.3966938Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3967086Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3967222Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3967411Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3967542Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3967674Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3967840Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3967845Z 
2025-01-10T13:49:05.3968027Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3968200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3968206Z 
2025-01-10T13:49:05.3968408Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3968538Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3968710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3968830Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3969053Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.3969172Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.3969334Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.3969446Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.3969563Z err_msg = None
2025-01-10T13:49:05.3969568Z 
2025-01-10T13:49:05.3969732Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3969855Z         if err_msg is None:
2025-01-10T13:49:05.3969990Z             if left.shape != right.shape:
2025-01-10T13:49:05.3970121Z                 raise_assert_detail(
2025-01-10T13:49:05.3970335Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3970446Z                 )
2025-01-10T13:49:05.3970544Z     
2025-01-10T13:49:05.3970660Z             diff = 0
2025-01-10T13:49:05.3970824Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3970962Z                 # count up differences
2025-01-10T13:49:05.3971222Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3971337Z                     diff += 1
2025-01-10T13:49:05.3971436Z     
2025-01-10T13:49:05.3971564Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3971764Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3972027Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3972176Z E           AssertionError: Series are different
2025-01-10T13:49:05.3972281Z E           
2025-01-10T13:49:05.3972432Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.3973025Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.3973936Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3974728Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.3974744Z 
2025-01-10T13:49:05.3975246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3975582Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-10T13:49:05.3975588Z 
2025-01-10T13:49:05.3975788Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3975995Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3976150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3976358Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3976564Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3976705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3976830Z err_msg = None
2025-01-10T13:49:05.3976837Z 
2025-01-10T13:49:05.3977002Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3977130Z         if err_msg is None:
2025-01-10T13:49:05.3977269Z             if left.shape != right.shape:
2025-01-10T13:49:05.3977400Z                 raise_assert_detail(
2025-01-10T13:49:05.3977633Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3977744Z                 )
2025-01-10T13:49:05.3977852Z     
2025-01-10T13:49:05.3977961Z             diff = 0
2025-01-10T13:49:05.3978142Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3978274Z                 # count up differences
2025-01-10T13:49:05.3978548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3978663Z                     diff += 1
2025-01-10T13:49:05.3978763Z     
2025-01-10T13:49:05.3978882Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3979085Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3979347Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3979523Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3979630Z E           
2025-01-10T13:49:05.3979806Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3980222Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3980628Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3980783Z 
2025-01-10T13:49:05.3981258Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3981264Z 
2025-01-10T13:49:05.3981510Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3981521Z 
2025-01-10T13:49:05.3981854Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887f9e0>
2025-01-10T13:49:05.3982160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>, attr = 'nu'
2025-01-10T13:49:05.3982165Z 
2025-01-10T13:49:05.3982365Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3982539Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3982757Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3982884Z         try:
2025-01-10T13:49:05.3983113Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3983254Z         except KeyError:
2025-01-10T13:49:05.3983467Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3983574Z     
2025-01-10T13:49:05.3983853Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3984008Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3984150Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3984364Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3984504Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3984645Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3984826Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3984833Z 
2025-01-10T13:49:05.3985033Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3985225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3985459Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3985583Z     ???
2025-01-10T13:49:05.3985761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3985767Z 
2025-01-10T13:49:05.3985881Z >   ???
2025-01-10T13:49:05.3986070Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3986165Z E   
2025-01-10T13:49:05.3986355Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3986517Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3986631Z E          ...
2025-01-10T13:49:05.3986761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3986967Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3987145Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3987259Z E          ...
2025-01-10T13:49:05.3987395Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3987597Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.3987764Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.3987771Z 
2025-01-10T13:49:05.3987915Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.3988305Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-10T13:49:05.3988311Z 
2025-01-10T13:49:05.3988516Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3988729Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3988876Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3989071Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.3989258Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.3989398Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.3989672Z err_msg = None
2025-01-10T13:49:05.3989677Z 
2025-01-10T13:49:05.3989858Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.3989988Z         if err_msg is None:
2025-01-10T13:49:05.3990133Z             if left.shape != right.shape:
2025-01-10T13:49:05.3990275Z                 raise_assert_detail(
2025-01-10T13:49:05.3990496Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.3990601Z                 )
2025-01-10T13:49:05.3990702Z     
2025-01-10T13:49:05.3990811Z             diff = 0
2025-01-10T13:49:05.3990973Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.3991104Z                 # count up differences
2025-01-10T13:49:05.3991356Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.3991612Z                     diff += 1
2025-01-10T13:49:05.3991718Z     
2025-01-10T13:49:05.3991859Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.3992065Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.3992328Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.3992491Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.3992590Z E           
2025-01-10T13:49:05.3992760Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.3993168Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3993742Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.3993758Z 
2025-01-10T13:49:05.3994278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.3994284Z 
2025-01-10T13:49:05.3994534Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.3994540Z 
2025-01-10T13:49:05.3994894Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887faa0>
2025-01-10T13:49:05.3995155Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.3995274Z attr = 'wavelength_cm'
2025-01-10T13:49:05.3995280Z 
2025-01-10T13:49:05.3995481Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.3995664Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.3995787Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.3995887Z         try:
2025-01-10T13:49:05.3996102Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.3996229Z         except KeyError:
2025-01-10T13:49:05.3996448Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.3996554Z     
2025-01-10T13:49:05.3996696Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.3996836Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.3996974Z             if attr == "selected_atoms":
2025-01-10T13:49:05.3997180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.3997313Z             elif actual.ndim == 1:
2025-01-10T13:49:05.3997447Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.3997631Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.3997637Z 
2025-01-10T13:49:05.3997847Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.3998034Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3998250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.3998541Z     ???
2025-01-10T13:49:05.3998722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.3998728Z 
2025-01-10T13:49:05.3998826Z >   ???
2025-01-10T13:49:05.3999025Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.3999123Z E   
2025-01-10T13:49:05.3999323Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.3999500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.3999621Z E          ...
2025-01-10T13:49:05.3999751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.3999946Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4000124Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4000388Z E          ...
2025-01-10T13:49:05.4000526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4000724Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4000884Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4000890Z 
2025-01-10T13:49:05.4001031Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4001362Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-10T13:49:05.4001367Z 
2025-01-10T13:49:05.4001575Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4001791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4001943Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4002164Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4002382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4002535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4002669Z err_msg = None
2025-01-10T13:49:05.4002674Z 
2025-01-10T13:49:05.4002851Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4002982Z         if err_msg is None:
2025-01-10T13:49:05.4003133Z             if left.shape != right.shape:
2025-01-10T13:49:05.4003276Z                 raise_assert_detail(
2025-01-10T13:49:05.4003518Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4003757Z                 )
2025-01-10T13:49:05.4003855Z     
2025-01-10T13:49:05.4003963Z             diff = 0
2025-01-10T13:49:05.4004125Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4004259Z                 # count up differences
2025-01-10T13:49:05.4004529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4004646Z                     diff += 1
2025-01-10T13:49:05.4004750Z     
2025-01-10T13:49:05.4004886Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4005122Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4005410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4005596Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4005710Z E           
2025-01-10T13:49:05.4005897Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4006363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4006839Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4006996Z 
2025-01-10T13:49:05.4007543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4007549Z 
2025-01-10T13:49:05.4007834Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4007840Z 
2025-01-10T13:49:05.4008222Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf887fb60>
2025-01-10T13:49:05.4008570Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>, attr = 'f_lu'
2025-01-10T13:49:05.4008578Z 
2025-01-10T13:49:05.4008801Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4009003Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4009282Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4009404Z         try:
2025-01-10T13:49:05.4009634Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4009771Z         except KeyError:
2025-01-10T13:49:05.4009995Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4010112Z     
2025-01-10T13:49:05.4010251Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4010408Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4010539Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4010731Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4010862Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4010998Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4011175Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4011181Z 
2025-01-10T13:49:05.4011389Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4011589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4011831Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4011952Z     ???
2025-01-10T13:49:05.4012131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4012137Z 
2025-01-10T13:49:05.4012246Z >   ???
2025-01-10T13:49:05.4012451Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4012562Z E   
2025-01-10T13:49:05.4012778Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4012957Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4013078Z E          ...
2025-01-10T13:49:05.4013219Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4013436Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4013772Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4013906Z E          ...
2025-01-10T13:49:05.4014040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4014253Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4014417Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4014423Z 
2025-01-10T13:49:05.4014553Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4014915Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-10T13:49:05.4014928Z 
2025-01-10T13:49:05.4015143Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4015359Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4015512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4015740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4015954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4016110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4016386Z err_msg = None
2025-01-10T13:49:05.4016392Z 
2025-01-10T13:49:05.4016573Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4016700Z         if err_msg is None:
2025-01-10T13:49:05.4016855Z             if left.shape != right.shape:
2025-01-10T13:49:05.4016995Z                 raise_assert_detail(
2025-01-10T13:49:05.4017232Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4017353Z                 )
2025-01-10T13:49:05.4017463Z     
2025-01-10T13:49:05.4017582Z             diff = 0
2025-01-10T13:49:05.4017762Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4017908Z                 # count up differences
2025-01-10T13:49:05.4018197Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4018503Z                     diff += 1
2025-01-10T13:49:05.4018618Z     
2025-01-10T13:49:05.4018763Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4018990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4019282Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4019462Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4019578Z E           
2025-01-10T13:49:05.4019754Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4020164Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4020597Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4020610Z 
2025-01-10T13:49:05.4021079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4021091Z 
2025-01-10T13:49:05.4021344Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4021350Z 
2025-01-10T13:49:05.4021702Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a8320>
2025-01-10T13:49:05.4021978Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.4022104Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4022109Z 
2025-01-10T13:49:05.4022305Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4022483Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4022604Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4022715Z         try:
2025-01-10T13:49:05.4022949Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4023083Z         except KeyError:
2025-01-10T13:49:05.4023313Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4023419Z     
2025-01-10T13:49:05.4023561Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4023838Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4023983Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4024183Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4024313Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4024445Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4024613Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4024719Z             else:
2025-01-10T13:49:05.4024883Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4025057Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4025209Z 
2025-01-10T13:49:05.4025400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4025571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4025783Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4025887Z     ???
2025-01-10T13:49:05.4026052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4026057Z 
2025-01-10T13:49:05.4026166Z >   ???
2025-01-10T13:49:05.4026365Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4026480Z E   
2025-01-10T13:49:05.4026689Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4026874Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4026990Z E          ...
2025-01-10T13:49:05.4027276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4027494Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4027690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4027809Z E          ...
2025-01-10T13:49:05.4027948Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4028159Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4028325Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4028331Z 
2025-01-10T13:49:05.4028481Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4028864Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-10T13:49:05.4028870Z 
2025-01-10T13:49:05.4029064Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4029249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4029395Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4029603Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4029797Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4029941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4030051Z err_msg = None
2025-01-10T13:49:05.4030057Z 
2025-01-10T13:49:05.4030230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4030358Z         if err_msg is None:
2025-01-10T13:49:05.4030511Z             if left.shape != right.shape:
2025-01-10T13:49:05.4030645Z                 raise_assert_detail(
2025-01-10T13:49:05.4030887Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4030997Z                 )
2025-01-10T13:49:05.4031115Z     
2025-01-10T13:49:05.4031233Z             diff = 0
2025-01-10T13:49:05.4031426Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4031575Z                 # count up differences
2025-01-10T13:49:05.4031868Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4031997Z                     diff += 1
2025-01-10T13:49:05.4032107Z     
2025-01-10T13:49:05.4032253Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4032477Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4032773Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4032955Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4033072Z E           
2025-01-10T13:49:05.4033254Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4033863Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4034517Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4034524Z 
2025-01-10T13:49:05.4035053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4035059Z 
2025-01-10T13:49:05.4035340Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4035346Z 
2025-01-10T13:49:05.4035723Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a83e0>
2025-01-10T13:49:05.4036150Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.4036289Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4036295Z 
2025-01-10T13:49:05.4036521Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4036720Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4036852Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4036968Z         try:
2025-01-10T13:49:05.4037198Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4037331Z         except KeyError:
2025-01-10T13:49:05.4037558Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4037673Z     
2025-01-10T13:49:05.4037812Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4037973Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4038112Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4038338Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4038484Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4038634Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4038818Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4038941Z             else:
2025-01-10T13:49:05.4039099Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4039275Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4039281Z 
2025-01-10T13:49:05.4039490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4039675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4039925Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4040036Z     ???
2025-01-10T13:49:05.4040226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4040231Z 
2025-01-10T13:49:05.4040350Z >   ???
2025-01-10T13:49:05.4040557Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4040673Z E   
2025-01-10T13:49:05.4040893Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4041077Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4041200Z E          ...
2025-01-10T13:49:05.4041344Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4041555Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4041742Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4041856Z E          ...
2025-01-10T13:49:05.4041999Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4042204Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4042379Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4042385Z 
2025-01-10T13:49:05.4042533Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4042898Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-10T13:49:05.4042904Z 
2025-01-10T13:49:05.4043130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4043343Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4043791Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4044017Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4044225Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4044375Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4044501Z err_msg = None
2025-01-10T13:49:05.4044507Z 
2025-01-10T13:49:05.4044689Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4044820Z         if err_msg is None:
2025-01-10T13:49:05.4044976Z             if left.shape != right.shape:
2025-01-10T13:49:05.4045111Z                 raise_assert_detail(
2025-01-10T13:49:05.4045499Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4045618Z                 )
2025-01-10T13:49:05.4045737Z     
2025-01-10T13:49:05.4045861Z             diff = 0
2025-01-10T13:49:05.4046055Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4046192Z                 # count up differences
2025-01-10T13:49:05.4046486Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4046608Z                     diff += 1
2025-01-10T13:49:05.4046721Z     
2025-01-10T13:49:05.4046863Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4047091Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4047384Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4047565Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4047685Z E           
2025-01-10T13:49:05.4047865Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4048295Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4048753Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4048767Z 
2025-01-10T13:49:05.4049265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4049271Z 
2025-01-10T13:49:05.4049568Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4049574Z 
2025-01-10T13:49:05.4049932Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a8560>
2025-01-10T13:49:05.4050227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbbd98b0>
2025-01-10T13:49:05.4050347Z attr = 'j_blues'
2025-01-10T13:49:05.4050353Z 
2025-01-10T13:49:05.4050584Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4050771Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4050911Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4051024Z         try:
2025-01-10T13:49:05.4051248Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4051380Z         except KeyError:
2025-01-10T13:49:05.4051607Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4051723Z     
2025-01-10T13:49:05.4051862Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4052019Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4052170Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4052394Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4052708Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4052854Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4053032Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4053153Z             else:
2025-01-10T13:49:05.4053302Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4053481Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4053487Z 
2025-01-10T13:49:05.4053827Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4053995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4054215Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4054310Z     ???
2025-01-10T13:49:05.4054623Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4054630Z 
2025-01-10T13:49:05.4054733Z >   ???
2025-01-10T13:49:05.4054927Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4055034Z E   
2025-01-10T13:49:05.4055233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4055412Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4055529Z E          ...
2025-01-10T13:49:05.4055671Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4055879Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4056065Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4056179Z E          ...
2025-01-10T13:49:05.4056323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4056532Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4056706Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4056711Z 
2025-01-10T13:49:05.4056862Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4057228Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-10T13:49:05.4057241Z 
2025-01-10T13:49:05.4057453Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4057675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4057836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4058055Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4058266Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4058416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4058543Z err_msg = None
2025-01-10T13:49:05.4058549Z 
2025-01-10T13:49:05.4058723Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4058864Z         if err_msg is None:
2025-01-10T13:49:05.4059013Z             if left.shape != right.shape:
2025-01-10T13:49:05.4059162Z                 raise_assert_detail(
2025-01-10T13:49:05.4059398Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4059517Z                 )
2025-01-10T13:49:05.4059627Z     
2025-01-10T13:49:05.4059743Z             diff = 0
2025-01-10T13:49:05.4059926Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4060063Z                 # count up differences
2025-01-10T13:49:05.4060354Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4060479Z                     diff += 1
2025-01-10T13:49:05.4060594Z     
2025-01-10T13:49:05.4060731Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4060957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4061253Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4061443Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4061719Z E           
2025-01-10T13:49:05.4061906Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4062371Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4062842Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4062849Z 
2025-01-10T13:49:05.4063518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4063525Z 
2025-01-10T13:49:05.4063977Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4063984Z 
2025-01-10T13:49:05.4064362Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a92e0>
2025-01-10T13:49:05.4064642Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4064763Z attr = 'lines'
2025-01-10T13:49:05.4064768Z 
2025-01-10T13:49:05.4064998Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4065187Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4065329Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4065439Z         try:
2025-01-10T13:49:05.4065668Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4065796Z         except KeyError:
2025-01-10T13:49:05.4066039Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4066151Z     
2025-01-10T13:49:05.4066297Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4066461Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4066602Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4066826Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4066962Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4067110Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4067287Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4067408Z             else:
2025-01-10T13:49:05.4067560Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4067741Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4067748Z 
2025-01-10T13:49:05.4067957Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4068156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4068406Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4068519Z     ???
2025-01-10T13:49:05.4068713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4068719Z 
2025-01-10T13:49:05.4068828Z >   ???
2025-01-10T13:49:05.4069042Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4069153Z E   
2025-01-10T13:49:05.4069373Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4069552Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4069676Z E          ...
2025-01-10T13:49:05.4069816Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4070017Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4070199Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4070305Z E          ...
2025-01-10T13:49:05.4070440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4070655Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4070827Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4070986Z 
2025-01-10T13:49:05.4071131Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4071583Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-10T13:49:05.4071589Z 
2025-01-10T13:49:05.4071954Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a93a0>
2025-01-10T13:49:05.4072199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4072324Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4072330Z 
2025-01-10T13:49:05.4072533Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4072704Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4072847Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4072964Z         try:
2025-01-10T13:49:05.4073336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4073514Z         except KeyError:
2025-01-10T13:49:05.4073878Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4073990Z     
2025-01-10T13:49:05.4074116Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4074266Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4074401Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4074624Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4074760Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4074909Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4075083Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4075089Z 
2025-01-10T13:49:05.4075302Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4075495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4075509Z 
2025-01-10T13:49:05.4075716Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4075847Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4076003Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4076123Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4076335Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4076461Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4076628Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4076759Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4076880Z err_msg = None
2025-01-10T13:49:05.4076891Z 
2025-01-10T13:49:05.4077065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4077199Z         if err_msg is None:
2025-01-10T13:49:05.4077344Z             if left.shape != right.shape:
2025-01-10T13:49:05.4077488Z                 raise_assert_detail(
2025-01-10T13:49:05.4077726Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4077853Z                 )
2025-01-10T13:49:05.4077963Z     
2025-01-10T13:49:05.4078085Z             diff = 0
2025-01-10T13:49:05.4078262Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4078400Z                 # count up differences
2025-01-10T13:49:05.4078660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4078775Z                     diff += 1
2025-01-10T13:49:05.4078874Z     
2025-01-10T13:49:05.4079005Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4079221Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4079512Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4079686Z E           AssertionError: Series are different
2025-01-10T13:49:05.4079806Z E           
2025-01-10T13:49:05.4079975Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4080805Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4081399Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4082143Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4082159Z 
2025-01-10T13:49:05.4082699Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4083158Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-10T13:49:05.4083164Z 
2025-01-10T13:49:05.4083551Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a9460>
2025-01-10T13:49:05.4083974Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4084127Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4084133Z 
2025-01-10T13:49:05.4084359Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4084549Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4084688Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4084806Z         try:
2025-01-10T13:49:05.4085040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4085173Z         except KeyError:
2025-01-10T13:49:05.4085399Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4085518Z     
2025-01-10T13:49:05.4085656Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4085815Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4085962Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4086179Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4086320Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4086462Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4086651Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4086657Z 
2025-01-10T13:49:05.4086860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4087058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4087063Z 
2025-01-10T13:49:05.4087288Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4087429Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4087607Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4087741Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4087977Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4088107Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4088284Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4088411Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4088547Z err_msg = None
2025-01-10T13:49:05.4088553Z 
2025-01-10T13:49:05.4088727Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4089019Z         if err_msg is None:
2025-01-10T13:49:05.4089170Z             if left.shape != right.shape:
2025-01-10T13:49:05.4089314Z                 raise_assert_detail(
2025-01-10T13:49:05.4089563Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4089682Z                 )
2025-01-10T13:49:05.4089799Z     
2025-01-10T13:49:05.4089918Z             diff = 0
2025-01-10T13:49:05.4090105Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4090246Z                 # count up differences
2025-01-10T13:49:05.4090542Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4090665Z                     diff += 1
2025-01-10T13:49:05.4090782Z     
2025-01-10T13:49:05.4090920Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4091293Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4091588Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4091766Z E           AssertionError: Series are different
2025-01-10T13:49:05.4091880Z E           
2025-01-10T13:49:05.4092050Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4092721Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4093326Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4094052Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4094060Z 
2025-01-10T13:49:05.4094535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4094842Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-10T13:49:05.4094848Z 
2025-01-10T13:49:05.4095047Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4095230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4095381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4095570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4095753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4095888Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4095991Z err_msg = None
2025-01-10T13:49:05.4095996Z 
2025-01-10T13:49:05.4096156Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4096271Z         if err_msg is None:
2025-01-10T13:49:05.4096407Z             if left.shape != right.shape:
2025-01-10T13:49:05.4096523Z                 raise_assert_detail(
2025-01-10T13:49:05.4096741Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4096838Z                 )
2025-01-10T13:49:05.4097093Z     
2025-01-10T13:49:05.4097197Z             diff = 0
2025-01-10T13:49:05.4097365Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4097489Z                 # count up differences
2025-01-10T13:49:05.4097750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4097863Z                     diff += 1
2025-01-10T13:49:05.4097961Z     
2025-01-10T13:49:05.4098092Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4098287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4098548Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4098712Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4098819Z E           
2025-01-10T13:49:05.4099146Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4099568Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4099992Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4099999Z 
2025-01-10T13:49:05.4100471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4100476Z 
2025-01-10T13:49:05.4100744Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4100750Z 
2025-01-10T13:49:05.4101091Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a96a0>
2025-01-10T13:49:05.4101410Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>, attr = 'nu'
2025-01-10T13:49:05.4101416Z 
2025-01-10T13:49:05.4101631Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4101801Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4101930Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4102034Z         try:
2025-01-10T13:49:05.4102245Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4102361Z         except KeyError:
2025-01-10T13:49:05.4102573Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4102673Z     
2025-01-10T13:49:05.4102808Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4102949Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4103096Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4103304Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4103448Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4103588Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4103887Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4103893Z 
2025-01-10T13:49:05.4104092Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4104269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4104506Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4104611Z     ???
2025-01-10T13:49:05.4104785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4104790Z 
2025-01-10T13:49:05.4104895Z >   ???
2025-01-10T13:49:05.4105095Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4105200Z E   
2025-01-10T13:49:05.4105417Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4105602Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4105866Z E          ...
2025-01-10T13:49:05.4106009Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4106214Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4106393Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4106501Z E          ...
2025-01-10T13:49:05.4106637Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4106836Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4106999Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4107004Z 
2025-01-10T13:49:05.4107140Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4107528Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-10T13:49:05.4107534Z 
2025-01-10T13:49:05.4107889Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4108098Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4108257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4108467Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4108671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4108814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4108935Z err_msg = None
2025-01-10T13:49:05.4108940Z 
2025-01-10T13:49:05.4109111Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4109240Z         if err_msg is None:
2025-01-10T13:49:05.4109381Z             if left.shape != right.shape:
2025-01-10T13:49:05.4109515Z                 raise_assert_detail(
2025-01-10T13:49:05.4109754Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4109863Z                 )
2025-01-10T13:49:05.4109980Z     
2025-01-10T13:49:05.4110089Z             diff = 0
2025-01-10T13:49:05.4110267Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4110396Z                 # count up differences
2025-01-10T13:49:05.4110674Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4110790Z                     diff += 1
2025-01-10T13:49:05.4110900Z     
2025-01-10T13:49:05.4111035Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4111265Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4111552Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4111736Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4111847Z E           
2025-01-10T13:49:05.4112036Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4112501Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4112971Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4112978Z 
2025-01-10T13:49:05.4113508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4113514Z 
2025-01-10T13:49:05.4113947Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4113955Z 
2025-01-10T13:49:05.4114338Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a9760>
2025-01-10T13:49:05.4114773Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4114903Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4114908Z 
2025-01-10T13:49:05.4115133Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4115319Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4115457Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4115569Z         try:
2025-01-10T13:49:05.4115801Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4115928Z         except KeyError:
2025-01-10T13:49:05.4116168Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4116284Z     
2025-01-10T13:49:05.4116423Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4116728Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4116875Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4117104Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4117249Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4117397Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4117582Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4117588Z 
2025-01-10T13:49:05.4117798Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4117988Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4118235Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4118347Z     ???
2025-01-10T13:49:05.4118536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4118541Z 
2025-01-10T13:49:05.4118657Z >   ???
2025-01-10T13:49:05.4118869Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4118991Z E   
2025-01-10T13:49:05.4119207Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4119400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4119516Z E          ...
2025-01-10T13:49:05.4119662Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4119873Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4120062Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4120176Z E          ...
2025-01-10T13:49:05.4120322Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4120528Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4120704Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4120710Z 
2025-01-10T13:49:05.4120860Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4121217Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-10T13:49:05.4121229Z 
2025-01-10T13:49:05.4121452Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4121671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4121811Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4122012Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4122200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4122335Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4122438Z err_msg = None
2025-01-10T13:49:05.4122443Z 
2025-01-10T13:49:05.4122605Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4122717Z         if err_msg is None:
2025-01-10T13:49:05.4122852Z             if left.shape != right.shape:
2025-01-10T13:49:05.4122973Z                 raise_assert_detail(
2025-01-10T13:49:05.4123202Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4123427Z                 )
2025-01-10T13:49:05.4123542Z     
2025-01-10T13:49:05.4123794Z             diff = 0
2025-01-10T13:49:05.4123985Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4124126Z                 # count up differences
2025-01-10T13:49:05.4124424Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4124548Z                     diff += 1
2025-01-10T13:49:05.4124664Z     
2025-01-10T13:49:05.4124811Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4125037Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4125335Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4125521Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4125645Z E           
2025-01-10T13:49:05.4125974Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4126451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4126941Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4126948Z 
2025-01-10T13:49:05.4127486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4127493Z 
2025-01-10T13:49:05.4127793Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4127801Z 
2025-01-10T13:49:05.4128189Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a9820>
2025-01-10T13:49:05.4128549Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>, attr = 'f_lu'
2025-01-10T13:49:05.4128555Z 
2025-01-10T13:49:05.4128786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4128978Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4129121Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4129239Z         try:
2025-01-10T13:49:05.4129480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4129611Z         except KeyError:
2025-01-10T13:49:05.4129848Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4129961Z     
2025-01-10T13:49:05.4130107Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4130266Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4130414Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4130632Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4130783Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4130927Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4131113Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4131118Z 
2025-01-10T13:49:05.4131330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4131514Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4131764Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4131875Z     ???
2025-01-10T13:49:05.4132062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4132068Z 
2025-01-10T13:49:05.4132180Z >   ???
2025-01-10T13:49:05.4132395Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4132514Z E   
2025-01-10T13:49:05.4132731Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4132912Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4133208Z E          ...
2025-01-10T13:49:05.4133350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4133568Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4133899Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4134015Z E          ...
2025-01-10T13:49:05.4134157Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4134361Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4134537Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4134543Z 
2025-01-10T13:49:05.4134687Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4135090Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-10T13:49:05.4135244Z 
2025-01-10T13:49:05.4135463Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4135690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4135848Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4136072Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4136286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4136438Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4136564Z err_msg = None
2025-01-10T13:49:05.4136570Z 
2025-01-10T13:49:05.4136749Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4136887Z         if err_msg is None:
2025-01-10T13:49:05.4137036Z             if left.shape != right.shape:
2025-01-10T13:49:05.4137175Z                 raise_assert_detail(
2025-01-10T13:49:05.4137420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4137542Z                 )
2025-01-10T13:49:05.4137658Z     
2025-01-10T13:49:05.4137782Z             diff = 0
2025-01-10T13:49:05.4137968Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4138108Z                 # count up differences
2025-01-10T13:49:05.4138401Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4138525Z                     diff += 1
2025-01-10T13:49:05.4138648Z     
2025-01-10T13:49:05.4138791Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4139026Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4139318Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4139507Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4139623Z E           
2025-01-10T13:49:05.4139823Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4140288Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4140752Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4140760Z 
2025-01-10T13:49:05.4141294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4141300Z 
2025-01-10T13:49:05.4141589Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4141601Z 
2025-01-10T13:49:05.4141980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88a9fa0>
2025-01-10T13:49:05.4142448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4142573Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4142578Z 
2025-01-10T13:49:05.4142802Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4142973Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4143097Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4143203Z         try:
2025-01-10T13:49:05.4143426Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4143543Z         except KeyError:
2025-01-10T13:49:05.4143913Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4144017Z     
2025-01-10T13:49:05.4144143Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4144437Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4144569Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4144774Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4144915Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4145062Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4145232Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4145353Z             else:
2025-01-10T13:49:05.4145499Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4145672Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4145678Z 
2025-01-10T13:49:05.4145882Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4146071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4146308Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4146427Z     ???
2025-01-10T13:49:05.4146620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4146626Z 
2025-01-10T13:49:05.4146737Z >   ???
2025-01-10T13:49:05.4146958Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4147060Z E   
2025-01-10T13:49:05.4147267Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4147444Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4147557Z E          ...
2025-01-10T13:49:05.4147682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4147892Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4148056Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4148164Z E          ...
2025-01-10T13:49:05.4148290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4148478Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4148649Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4148655Z 
2025-01-10T13:49:05.4148792Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4149177Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-10T13:49:05.4149190Z 
2025-01-10T13:49:05.4149390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4149580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4149734Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4149947Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4150125Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4150274Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4150389Z err_msg = None
2025-01-10T13:49:05.4150394Z 
2025-01-10T13:49:05.4150550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4150671Z         if err_msg is None:
2025-01-10T13:49:05.4150819Z             if left.shape != right.shape:
2025-01-10T13:49:05.4151111Z                 raise_assert_detail(
2025-01-10T13:49:05.4151336Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4151446Z                 )
2025-01-10T13:49:05.4151549Z     
2025-01-10T13:49:05.4151674Z             diff = 0
2025-01-10T13:49:05.4151842Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4151979Z                 # count up differences
2025-01-10T13:49:05.4152255Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4152381Z                     diff += 1
2025-01-10T13:49:05.4152484Z     
2025-01-10T13:49:05.4152606Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4152817Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4153173Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4153346Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4153454Z E           
2025-01-10T13:49:05.4153784Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4154192Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4154598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4154612Z 
2025-01-10T13:49:05.4155092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4155106Z 
2025-01-10T13:49:05.4155366Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4155371Z 
2025-01-10T13:49:05.4155741Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88aa060>
2025-01-10T13:49:05.4156008Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4156128Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4156134Z 
2025-01-10T13:49:05.4156339Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4156505Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4156625Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4156735Z         try:
2025-01-10T13:49:05.4156969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4157102Z         except KeyError:
2025-01-10T13:49:05.4157306Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4157412Z     
2025-01-10T13:49:05.4157560Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4157692Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4157822Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4158014Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4158140Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4158267Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4158427Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4158535Z             else:
2025-01-10T13:49:05.4158672Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4158835Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4158841Z 
2025-01-10T13:49:05.4159018Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4159195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4159419Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4159675Z     ???
2025-01-10T13:49:05.4159845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4159852Z 
2025-01-10T13:49:05.4159964Z >   ???
2025-01-10T13:49:05.4160170Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4160281Z E   
2025-01-10T13:49:05.4160490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4160667Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4160788Z E          ...
2025-01-10T13:49:05.4160922Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4161133Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4161311Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4161428Z E          ...
2025-01-10T13:49:05.4161717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4161927Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4162099Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4162105Z 
2025-01-10T13:49:05.4162244Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4162562Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-10T13:49:05.4162573Z 
2025-01-10T13:49:05.4162758Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4162951Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4163085Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4163300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4163504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4163787Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4163911Z err_msg = None
2025-01-10T13:49:05.4163916Z 
2025-01-10T13:49:05.4164079Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4164195Z         if err_msg is None:
2025-01-10T13:49:05.4164345Z             if left.shape != right.shape:
2025-01-10T13:49:05.4164481Z                 raise_assert_detail(
2025-01-10T13:49:05.4164712Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4164826Z                 )
2025-01-10T13:49:05.4164927Z     
2025-01-10T13:49:05.4165042Z             diff = 0
2025-01-10T13:49:05.4165213Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4165358Z                 # count up differences
2025-01-10T13:49:05.4165643Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4165775Z                     diff += 1
2025-01-10T13:49:05.4165880Z     
2025-01-10T13:49:05.4166017Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4166232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4166509Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4166680Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4166785Z E           
2025-01-10T13:49:05.4166949Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4167357Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4167798Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4167979Z 
2025-01-10T13:49:05.4168478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4168492Z 
2025-01-10T13:49:05.4168743Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4168749Z 
2025-01-10T13:49:05.4169084Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88aa1e0>
2025-01-10T13:49:05.4169331Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81acb90>
2025-01-10T13:49:05.4169447Z attr = 'j_blues'
2025-01-10T13:49:05.4169452Z 
2025-01-10T13:49:05.4169657Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4169848Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4170125Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4170241Z         try:
2025-01-10T13:49:05.4170454Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4170594Z         except KeyError:
2025-01-10T13:49:05.4170814Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4170909Z     
2025-01-10T13:49:05.4171035Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4171164Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4171293Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4171485Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4171611Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4171741Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4171912Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4172014Z             else:
2025-01-10T13:49:05.4172153Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4172322Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4172328Z 
2025-01-10T13:49:05.4172523Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4172691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4172912Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4173017Z     ???
2025-01-10T13:49:05.4173182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4173187Z 
2025-01-10T13:49:05.4173290Z >   ???
2025-01-10T13:49:05.4173520Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4173770Z E   
2025-01-10T13:49:05.4173960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4174132Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4174234Z E          ...
2025-01-10T13:49:05.4174362Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4174557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4174728Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4174845Z E          ...
2025-01-10T13:49:05.4174974Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4175172Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4175329Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4175334Z 
2025-01-10T13:49:05.4175468Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4175800Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-10T13:49:05.4175806Z 
2025-01-10T13:49:05.4176009Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4176209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4176365Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4176578Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4176946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4177095Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4177208Z err_msg = None
2025-01-10T13:49:05.4177213Z 
2025-01-10T13:49:05.4177388Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4177510Z         if err_msg is None:
2025-01-10T13:49:05.4177655Z             if left.shape != right.shape:
2025-01-10T13:49:05.4177781Z                 raise_assert_detail(
2025-01-10T13:49:05.4178008Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4178113Z                 )
2025-01-10T13:49:05.4178220Z     
2025-01-10T13:49:05.4178327Z             diff = 0
2025-01-10T13:49:05.4178497Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4178773Z                 # count up differences
2025-01-10T13:49:05.4179044Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4179169Z                     diff += 1
2025-01-10T13:49:05.4179269Z     
2025-01-10T13:49:05.4179400Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4179592Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4179853Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4180017Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4180127Z E           
2025-01-10T13:49:05.4180295Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4180730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4181170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4181183Z 
2025-01-10T13:49:05.4181674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4181679Z 
2025-01-10T13:49:05.4181946Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4181951Z 
2025-01-10T13:49:05.4182302Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88aaf60>
2025-01-10T13:49:05.4182569Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4182688Z attr = 'lines'
2025-01-10T13:49:05.4182694Z 
2025-01-10T13:49:05.4182905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4183091Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4183216Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4183326Z         try:
2025-01-10T13:49:05.4183530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4183798Z         except KeyError:
2025-01-10T13:49:05.4183999Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4184108Z     
2025-01-10T13:49:05.4184235Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4184375Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4184504Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4184719Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4184848Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4184985Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4185156Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4185260Z             else:
2025-01-10T13:49:05.4185560Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4185720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4185725Z 
2025-01-10T13:49:05.4185921Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4186091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4186317Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4186418Z     ???
2025-01-10T13:49:05.4186595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4186601Z 
2025-01-10T13:49:05.4186713Z >   ???
2025-01-10T13:49:05.4186904Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4187012Z E   
2025-01-10T13:49:05.4187339Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4187502Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4187607Z E          ...
2025-01-10T13:49:05.4187740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4187924Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4188090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4188188Z E          ...
2025-01-10T13:49:05.4188310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4188488Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4188639Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4188644Z 
2025-01-10T13:49:05.4188776Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4189170Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-10T13:49:05.4189175Z 
2025-01-10T13:49:05.4189509Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ab020>
2025-01-10T13:49:05.4189751Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4189889Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4189895Z 
2025-01-10T13:49:05.4190084Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4190251Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4190364Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4190466Z         try:
2025-01-10T13:49:05.4190666Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4190779Z         except KeyError:
2025-01-10T13:49:05.4190976Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4191071Z     
2025-01-10T13:49:05.4191194Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4191329Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4191456Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4191653Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4191784Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4191921Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4192099Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4192105Z 
2025-01-10T13:49:05.4192301Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4192489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4192495Z 
2025-01-10T13:49:05.4192727Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4192860Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4193040Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4193171Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4193403Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4193529Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4193841Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4194123Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4194239Z err_msg = None
2025-01-10T13:49:05.4194244Z 
2025-01-10T13:49:05.4194411Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4194534Z         if err_msg is None:
2025-01-10T13:49:05.4194670Z             if left.shape != right.shape:
2025-01-10T13:49:05.4194791Z                 raise_assert_detail(
2025-01-10T13:49:05.4195004Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4195101Z                 )
2025-01-10T13:49:05.4195200Z     
2025-01-10T13:49:05.4195304Z             diff = 0
2025-01-10T13:49:05.4195465Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4195584Z                 # count up differences
2025-01-10T13:49:05.4196010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4196125Z                     diff += 1
2025-01-10T13:49:05.4196244Z     
2025-01-10T13:49:05.4196369Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4196567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4196837Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4197007Z E           AssertionError: Series are different
2025-01-10T13:49:05.4197116Z E           
2025-01-10T13:49:05.4197264Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4197866Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4198375Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4198916Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4198922Z 
2025-01-10T13:49:05.4199445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4199877Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-10T13:49:05.4199888Z 
2025-01-10T13:49:05.4200266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ab0e0>
2025-01-10T13:49:05.4200537Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4200691Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4200695Z 
2025-01-10T13:49:05.4200900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4201078Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4201203Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4201303Z         try:
2025-01-10T13:49:05.4201522Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4201643Z         except KeyError:
2025-01-10T13:49:05.4201864Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4201977Z     
2025-01-10T13:49:05.4202122Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4202265Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4202524Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4202725Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4202850Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4202986Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4203152Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4203158Z 
2025-01-10T13:49:05.4203352Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4203527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4203532Z 
2025-01-10T13:49:05.4203876Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4204000Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4204332Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4204451Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4204679Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4204817Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4204967Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4205081Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4205185Z err_msg = None
2025-01-10T13:49:05.4205190Z 
2025-01-10T13:49:05.4205346Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4205462Z         if err_msg is None:
2025-01-10T13:49:05.4205594Z             if left.shape != right.shape:
2025-01-10T13:49:05.4205709Z                 raise_assert_detail(
2025-01-10T13:49:05.4205928Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4206025Z                 )
2025-01-10T13:49:05.4206131Z     
2025-01-10T13:49:05.4206239Z             diff = 0
2025-01-10T13:49:05.4206403Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4206531Z                 # count up differences
2025-01-10T13:49:05.4206802Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4206918Z                     diff += 1
2025-01-10T13:49:05.4207022Z     
2025-01-10T13:49:05.4207150Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4207345Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4207609Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4207761Z E           AssertionError: Series are different
2025-01-10T13:49:05.4207871Z E           
2025-01-10T13:49:05.4208019Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4208633Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4209226Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4209820Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4209986Z 
2025-01-10T13:49:05.4210455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4210761Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-10T13:49:05.4210766Z 
2025-01-10T13:49:05.4210946Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4211133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4211267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4211460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4211754Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4211916Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4212051Z err_msg = None
2025-01-10T13:49:05.4212057Z 
2025-01-10T13:49:05.4212235Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4212371Z         if err_msg is None:
2025-01-10T13:49:05.4212522Z             if left.shape != right.shape:
2025-01-10T13:49:05.4212665Z                 raise_assert_detail(
2025-01-10T13:49:05.4212905Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4213028Z                 )
2025-01-10T13:49:05.4213141Z     
2025-01-10T13:49:05.4213263Z             diff = 0
2025-01-10T13:49:05.4228632Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4228796Z                 # count up differences
2025-01-10T13:49:05.4229068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4229185Z                     diff += 1
2025-01-10T13:49:05.4229283Z     
2025-01-10T13:49:05.4229407Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4229619Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4229873Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4230032Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4230132Z E           
2025-01-10T13:49:05.4230292Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4230692Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4231096Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4231112Z 
2025-01-10T13:49:05.4231578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4231584Z 
2025-01-10T13:49:05.4231840Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4231845Z 
2025-01-10T13:49:05.4232176Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ab320>
2025-01-10T13:49:05.4232473Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>, attr = 'nu'
2025-01-10T13:49:05.4232479Z 
2025-01-10T13:49:05.4232674Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4232841Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4232964Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4233061Z         try:
2025-01-10T13:49:05.4233272Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4233760Z         except KeyError:
2025-01-10T13:49:05.4233970Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4234064Z     
2025-01-10T13:49:05.4234184Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4234311Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4234434Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4234619Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4234740Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4234860Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4235015Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4235020Z 
2025-01-10T13:49:05.4235200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4235554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4235789Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4235904Z     ???
2025-01-10T13:49:05.4236064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4236070Z 
2025-01-10T13:49:05.4236167Z >   ???
2025-01-10T13:49:05.4236347Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4236446Z E   
2025-01-10T13:49:05.4236631Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4236786Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4236887Z E          ...
2025-01-10T13:49:05.4237005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4237189Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4237345Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4237449Z E          ...
2025-01-10T13:49:05.4237566Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4237746Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4237896Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4237901Z 
2025-01-10T13:49:05.4238025Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4238369Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-10T13:49:05.4238379Z 
2025-01-10T13:49:05.4238567Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4238774Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4238921Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4239132Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4239322Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4239469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4239582Z err_msg = None
2025-01-10T13:49:05.4239588Z 
2025-01-10T13:49:05.4239759Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4239874Z         if err_msg is None:
2025-01-10T13:49:05.4240016Z             if left.shape != right.shape:
2025-01-10T13:49:05.4240156Z                 raise_assert_detail(
2025-01-10T13:49:05.4240385Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4240502Z                 )
2025-01-10T13:49:05.4240607Z     
2025-01-10T13:49:05.4240728Z             diff = 0
2025-01-10T13:49:05.4240889Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4241023Z                 # count up differences
2025-01-10T13:49:05.4241296Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4241429Z                     diff += 1
2025-01-10T13:49:05.4241536Z     
2025-01-10T13:49:05.4241675Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4242080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4242354Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4242541Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4242652Z E           
2025-01-10T13:49:05.4242833Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4243276Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4243994Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4244008Z 
2025-01-10T13:49:05.4244527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4244533Z 
2025-01-10T13:49:05.4244819Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4244825Z 
2025-01-10T13:49:05.4245169Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ab3e0>
2025-01-10T13:49:05.4245423Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4245543Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4245548Z 
2025-01-10T13:49:05.4245748Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4245923Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4246038Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4246141Z         try:
2025-01-10T13:49:05.4246357Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4246471Z         except KeyError:
2025-01-10T13:49:05.4246676Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4246774Z     
2025-01-10T13:49:05.4246902Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4247036Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4247166Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4247358Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4247483Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4247610Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4247775Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4247780Z 
2025-01-10T13:49:05.4247966Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4248138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4248363Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4248462Z     ???
2025-01-10T13:49:05.4248630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4248635Z 
2025-01-10T13:49:05.4248731Z >   ???
2025-01-10T13:49:05.4248920Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4249022Z E   
2025-01-10T13:49:05.4249218Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4249376Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4249484Z E          ...
2025-01-10T13:49:05.4249605Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4249801Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4249967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4250076Z E          ...
2025-01-10T13:49:05.4250197Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4250538Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4250696Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4250701Z 
2025-01-10T13:49:05.4250825Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4251168Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-10T13:49:05.4251173Z 
2025-01-10T13:49:05.4251377Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4251573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4251713Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4251919Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4252225Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4252376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4252503Z err_msg = None
2025-01-10T13:49:05.4252508Z 
2025-01-10T13:49:05.4252668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4252791Z         if err_msg is None:
2025-01-10T13:49:05.4252934Z             if left.shape != right.shape:
2025-01-10T13:49:05.4253059Z                 raise_assert_detail(
2025-01-10T13:49:05.4253263Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4253367Z                 )
2025-01-10T13:49:05.4253464Z     
2025-01-10T13:49:05.4253570Z             diff = 0
2025-01-10T13:49:05.4253877Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4254010Z                 # count up differences
2025-01-10T13:49:05.4254283Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4254401Z                     diff += 1
2025-01-10T13:49:05.4254502Z     
2025-01-10T13:49:05.4254627Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4254829Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4255075Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4255238Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4255336Z E           
2025-01-10T13:49:05.4255504Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4255940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4256352Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4256362Z 
2025-01-10T13:49:05.4256842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4256848Z 
2025-01-10T13:49:05.4257099Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4257105Z 
2025-01-10T13:49:05.4257475Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ab4a0>
2025-01-10T13:49:05.4257784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>, attr = 'f_lu'
2025-01-10T13:49:05.4257795Z 
2025-01-10T13:49:05.4258016Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4258212Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4258339Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4258448Z         try:
2025-01-10T13:49:05.4258825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4258956Z         except KeyError:
2025-01-10T13:49:05.4259159Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4259260Z     
2025-01-10T13:49:05.4259392Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4259531Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4259653Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4259849Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4259972Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4260122Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4260307Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4260314Z 
2025-01-10T13:49:05.4260658Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4260836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4261060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4261174Z     ???
2025-01-10T13:49:05.4261352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4261358Z 
2025-01-10T13:49:05.4261473Z >   ???
2025-01-10T13:49:05.4261670Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4261774Z E   
2025-01-10T13:49:05.4261971Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4262157Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4262279Z E          ...
2025-01-10T13:49:05.4262418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4262619Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4262777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4262886Z E          ...
2025-01-10T13:49:05.4263005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4263197Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4263351Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4263356Z 
2025-01-10T13:49:05.4263487Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4263973Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-10T13:49:05.4263980Z 
2025-01-10T13:49:05.4264190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4264377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4264527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4264747Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4264932Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4265076Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4265195Z err_msg = None
2025-01-10T13:49:05.4265200Z 
2025-01-10T13:49:05.4265374Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4265485Z         if err_msg is None:
2025-01-10T13:49:05.4265620Z             if left.shape != right.shape:
2025-01-10T13:49:05.4265749Z                 raise_assert_detail(
2025-01-10T13:49:05.4265986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4266106Z                 )
2025-01-10T13:49:05.4266216Z     
2025-01-10T13:49:05.4266334Z             diff = 0
2025-01-10T13:49:05.4266514Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4266660Z                 # count up differences
2025-01-10T13:49:05.4266954Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4267083Z                     diff += 1
2025-01-10T13:49:05.4267186Z     
2025-01-10T13:49:05.4267331Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4267706Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4268005Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4268173Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4268288Z E           
2025-01-10T13:49:05.4268456Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4268857Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4269409Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4269421Z 
2025-01-10T13:49:05.4269949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4269955Z 
2025-01-10T13:49:05.4270228Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4270234Z 
2025-01-10T13:49:05.4270587Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88abc20>
2025-01-10T13:49:05.4270837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4270957Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4270962Z 
2025-01-10T13:49:05.4271163Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4271339Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4271455Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4271560Z         try:
2025-01-10T13:49:05.4271775Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4271895Z         except KeyError:
2025-01-10T13:49:05.4272106Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4272211Z     
2025-01-10T13:49:05.4272337Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4272474Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4272611Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4272803Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4272930Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4273061Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4273219Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4273321Z             else:
2025-01-10T13:49:05.4273533Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4273841Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4273852Z 
2025-01-10T13:49:05.4274043Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4274205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4274423Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4274526Z     ???
2025-01-10T13:49:05.4274682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4274687Z 
2025-01-10T13:49:05.4274786Z >   ???
2025-01-10T13:49:05.4274986Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4275094Z E   
2025-01-10T13:49:05.4275293Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4275464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4275574Z E          ...
2025-01-10T13:49:05.4275721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4275913Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4276269Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4276378Z E          ...
2025-01-10T13:49:05.4276515Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4276719Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4276879Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4276884Z 
2025-01-10T13:49:05.4277021Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4277396Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-10T13:49:05.4277403Z 
2025-01-10T13:49:05.4277613Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4277803Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4278140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4278380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4278555Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4278657Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4278734Z err_msg = None
2025-01-10T13:49:05.4278738Z 
2025-01-10T13:49:05.4278854Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4278934Z         if err_msg is None:
2025-01-10T13:49:05.4279034Z             if left.shape != right.shape:
2025-01-10T13:49:05.4279116Z                 raise_assert_detail(
2025-01-10T13:49:05.4279276Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4279345Z                 )
2025-01-10T13:49:05.4279417Z     
2025-01-10T13:49:05.4279488Z             diff = 0
2025-01-10T13:49:05.4279612Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4279699Z                 # count up differences
2025-01-10T13:49:05.4279888Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4279968Z                     diff += 1
2025-01-10T13:49:05.4280034Z     
2025-01-10T13:49:05.4280125Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4280266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4280445Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4280560Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4280634Z E           
2025-01-10T13:49:05.4280745Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4281015Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4281282Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4281287Z 
2025-01-10T13:49:05.4281611Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4281615Z 
2025-01-10T13:49:05.4281791Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4281796Z 
2025-01-10T13:49:05.4282022Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88abce0>
2025-01-10T13:49:05.4282196Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4282278Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4282282Z 
2025-01-10T13:49:05.4282523Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4282646Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4282728Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4282801Z         try:
2025-01-10T13:49:05.4282942Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4283024Z         except KeyError:
2025-01-10T13:49:05.4283163Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4283235Z     
2025-01-10T13:49:05.4283319Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4283415Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4283501Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4283837Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4284069Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4284172Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4284292Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4284366Z             else:
2025-01-10T13:49:05.4284463Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4284568Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4284573Z 
2025-01-10T13:49:05.4284709Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4284824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4284978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4285047Z     ???
2025-01-10T13:49:05.4285161Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4285166Z 
2025-01-10T13:49:05.4285231Z >   ???
2025-01-10T13:49:05.4285365Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4285436Z E   
2025-01-10T13:49:05.4285567Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4285694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4285768Z E          ...
2025-01-10T13:49:05.4285860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4285986Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4286098Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4286165Z E          ...
2025-01-10T13:49:05.4286254Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4286373Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4286479Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4286483Z 
2025-01-10T13:49:05.4286569Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4286785Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-10T13:49:05.4286789Z 
2025-01-10T13:49:05.4286924Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4287056Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4287162Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4287299Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4287451Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4287546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4287630Z err_msg = None
2025-01-10T13:49:05.4287635Z 
2025-01-10T13:49:05.4287751Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4287840Z         if err_msg is None:
2025-01-10T13:49:05.4287939Z             if left.shape != right.shape:
2025-01-10T13:49:05.4288020Z                 raise_assert_detail(
2025-01-10T13:49:05.4288173Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4288242Z                 )
2025-01-10T13:49:05.4288432Z     
2025-01-10T13:49:05.4288503Z             diff = 0
2025-01-10T13:49:05.4288616Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4288701Z                 # count up differences
2025-01-10T13:49:05.4288878Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4288952Z                     diff += 1
2025-01-10T13:49:05.4289022Z     
2025-01-10T13:49:05.4289108Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4289249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4289421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4289537Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4289612Z E           
2025-01-10T13:49:05.4289796Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4290067Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4290330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4290340Z 
2025-01-10T13:49:05.4290644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4290649Z 
2025-01-10T13:49:05.4290830Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4290835Z 
2025-01-10T13:49:05.4291060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88abe60>
2025-01-10T13:49:05.4291232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcf3d4b30>
2025-01-10T13:49:05.4291304Z attr = 'j_blues'
2025-01-10T13:49:05.4291308Z 
2025-01-10T13:49:05.4291447Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4291560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4291647Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4291715Z         try:
2025-01-10T13:49:05.4291860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4291943Z         except KeyError:
2025-01-10T13:49:05.4292082Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4292154Z     
2025-01-10T13:49:05.4292239Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4292339Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4292425Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4292565Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4292652Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4292743Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4292850Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4292925Z             else:
2025-01-10T13:49:05.4293019Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4293128Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4293132Z 
2025-01-10T13:49:05.4293261Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4293370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4293518Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4293584Z     ???
2025-01-10T13:49:05.4293884Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4293892Z 
2025-01-10T13:49:05.4293960Z >   ???
2025-01-10T13:49:05.4294091Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4294278Z E   
2025-01-10T13:49:05.4294410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4294517Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4294590Z E          ...
2025-01-10T13:49:05.4294676Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4294804Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4294918Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4294989Z E          ...
2025-01-10T13:49:05.4295074Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4295193Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4295298Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4295431Z 
2025-01-10T13:49:05.4295524Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4295797Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-10T13:49:05.4295804Z 
2025-01-10T13:49:05.4295930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4296062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4296161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4296291Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4296417Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4296509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4296586Z err_msg = None
2025-01-10T13:49:05.4296590Z 
2025-01-10T13:49:05.4296702Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4296786Z         if err_msg is None:
2025-01-10T13:49:05.4296877Z             if left.shape != right.shape:
2025-01-10T13:49:05.4296968Z                 raise_assert_detail(
2025-01-10T13:49:05.4297110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4297184Z                 )
2025-01-10T13:49:05.4297255Z     
2025-01-10T13:49:05.4297324Z             diff = 0
2025-01-10T13:49:05.4297437Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4297524Z                 # count up differences
2025-01-10T13:49:05.4297697Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4297770Z                     diff += 1
2025-01-10T13:49:05.4297838Z     
2025-01-10T13:49:05.4297922Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4298059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4298229Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4298344Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4298417Z E           
2025-01-10T13:49:05.4298532Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4298797Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4299056Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4299064Z 
2025-01-10T13:49:05.4299374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4299462Z 
2025-01-10T13:49:05.4299632Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4299641Z 
2025-01-10T13:49:05.4299864Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d4c20>
2025-01-10T13:49:05.4300033Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4300105Z attr = 'lines'
2025-01-10T13:49:05.4300109Z 
2025-01-10T13:49:05.4300246Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4300360Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4300445Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4300514Z         try:
2025-01-10T13:49:05.4300655Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4300735Z         except KeyError:
2025-01-10T13:49:05.4300954Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4301022Z     
2025-01-10T13:49:05.4301116Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4301214Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4301299Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4301433Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4301514Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4301610Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4301716Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4301790Z             else:
2025-01-10T13:49:05.4301881Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4301987Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4301991Z 
2025-01-10T13:49:05.4302114Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4302235Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4302380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4302456Z     ???
2025-01-10T13:49:05.4302570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4302575Z 
2025-01-10T13:49:05.4302640Z >   ???
2025-01-10T13:49:05.4302767Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4302838Z E   
2025-01-10T13:49:05.4302970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4303078Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4303151Z E          ...
2025-01-10T13:49:05.4303235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4303363Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4303472Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4303547Z E          ...
2025-01-10T13:49:05.4303801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4303933Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4304047Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4304051Z 
2025-01-10T13:49:05.4304136Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4304453Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-10T13:49:05.4304457Z 
2025-01-10T13:49:05.4304675Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d4ce0>
2025-01-10T13:49:05.4304843Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4304927Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4304931Z 
2025-01-10T13:49:05.4305067Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4305178Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4305264Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4305340Z         try:
2025-01-10T13:49:05.4305476Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4305681Z         except KeyError:
2025-01-10T13:49:05.4305816Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4305896Z     
2025-01-10T13:49:05.4305980Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4306076Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4306161Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4306294Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4306375Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4306467Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4306571Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4306575Z 
2025-01-10T13:49:05.4306702Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4306941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4306946Z 
2025-01-10T13:49:05.4307083Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4307174Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4307279Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4307361Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4307497Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4307581Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4307681Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4307762Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4307834Z err_msg = None
2025-01-10T13:49:05.4307837Z 
2025-01-10T13:49:05.4307951Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4308034Z         if err_msg is None:
2025-01-10T13:49:05.4308127Z             if left.shape != right.shape:
2025-01-10T13:49:05.4308214Z                 raise_assert_detail(
2025-01-10T13:49:05.4308358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4308431Z                 )
2025-01-10T13:49:05.4308496Z     
2025-01-10T13:49:05.4308570Z             diff = 0
2025-01-10T13:49:05.4308678Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4308768Z                 # count up differences
2025-01-10T13:49:05.4308934Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4309014Z                     diff += 1
2025-01-10T13:49:05.4309081Z     
2025-01-10T13:49:05.4309177Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4309317Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4309496Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4309608Z E           AssertionError: Series are different
2025-01-10T13:49:05.4309678Z E           
2025-01-10T13:49:05.4309784Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4310156Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4310495Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4310832Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4310922Z 
2025-01-10T13:49:05.4311232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4311546Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-10T13:49:05.4311550Z 
2025-01-10T13:49:05.4311780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d4da0>
2025-01-10T13:49:05.4311946Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4312112Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4312118Z 
2025-01-10T13:49:05.4312261Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4312384Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4312466Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4312541Z         try:
2025-01-10T13:49:05.4312685Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4312769Z         except KeyError:
2025-01-10T13:49:05.4312904Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4312976Z     
2025-01-10T13:49:05.4313059Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4313156Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4313248Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4313381Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4313470Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4313561Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4313839Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4313845Z 
2025-01-10T13:49:05.4313984Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4314105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4314109Z 
2025-01-10T13:49:05.4314242Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4314331Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4314436Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4314520Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4314663Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4314742Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4314851Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4314933Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4315016Z err_msg = None
2025-01-10T13:49:05.4315021Z 
2025-01-10T13:49:05.4315132Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4315216Z         if err_msg is None:
2025-01-10T13:49:05.4315310Z             if left.shape != right.shape:
2025-01-10T13:49:05.4315398Z                 raise_assert_detail(
2025-01-10T13:49:05.4315541Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4315614Z                 )
2025-01-10T13:49:05.4315681Z     
2025-01-10T13:49:05.4315757Z             diff = 0
2025-01-10T13:49:05.4315874Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4315962Z                 # count up differences
2025-01-10T13:49:05.4316134Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4316209Z                     diff += 1
2025-01-10T13:49:05.4316280Z     
2025-01-10T13:49:05.4316366Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4316504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4316795Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4316902Z E           AssertionError: Series are different
2025-01-10T13:49:05.4316972Z E           
2025-01-10T13:49:05.4317076Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4317449Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4317937Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4318320Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4318325Z 
2025-01-10T13:49:05.4318632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4318891Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-10T13:49:05.4318896Z 
2025-01-10T13:49:05.4319028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4319157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4319258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4319387Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4319510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4319605Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4319679Z err_msg = None
2025-01-10T13:49:05.4319682Z 
2025-01-10T13:49:05.4319794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4319874Z         if err_msg is None:
2025-01-10T13:49:05.4319972Z             if left.shape != right.shape:
2025-01-10T13:49:05.4320054Z                 raise_assert_detail(
2025-01-10T13:49:05.4320200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4320273Z                 )
2025-01-10T13:49:05.4320345Z     
2025-01-10T13:49:05.4320416Z             diff = 0
2025-01-10T13:49:05.4320529Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4320614Z                 # count up differences
2025-01-10T13:49:05.4320785Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4320865Z                     diff += 1
2025-01-10T13:49:05.4320931Z     
2025-01-10T13:49:05.4321020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4321151Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4321323Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4321441Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4321517Z E           
2025-01-10T13:49:05.4321626Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4321980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4322244Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4322248Z 
2025-01-10T13:49:05.4322616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4322621Z 
2025-01-10T13:49:05.4322796Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4322803Z 
2025-01-10T13:49:05.4323025Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d4fe0>
2025-01-10T13:49:05.4323232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>, attr = 'nu'
2025-01-10T13:49:05.4323236Z 
2025-01-10T13:49:05.4323380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4323493Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4323580Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4323835Z         try:
2025-01-10T13:49:05.4323986Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4324064Z         except KeyError:
2025-01-10T13:49:05.4324208Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4324274Z     
2025-01-10T13:49:05.4324373Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4324468Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4324560Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4324696Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4324787Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4324876Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4324983Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4324987Z 
2025-01-10T13:49:05.4325114Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4325227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4325376Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4325445Z     ???
2025-01-10T13:49:05.4325560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4325564Z 
2025-01-10T13:49:05.4325630Z >   ???
2025-01-10T13:49:05.4325764Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4325832Z E   
2025-01-10T13:49:05.4325963Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4326082Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4326152Z E          ...
2025-01-10T13:49:05.4326243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4326373Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4326488Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4326563Z E          ...
2025-01-10T13:49:05.4326653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4326777Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4326884Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4326889Z 
2025-01-10T13:49:05.4326976Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4327267Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-10T13:49:05.4327271Z 
2025-01-10T13:49:05.4327546Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4327670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4327767Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4327896Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4328021Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4328113Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4328192Z err_msg = None
2025-01-10T13:49:05.4328196Z 
2025-01-10T13:49:05.4328304Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4328390Z         if err_msg is None:
2025-01-10T13:49:05.4328583Z             if left.shape != right.shape:
2025-01-10T13:49:05.4328673Z                 raise_assert_detail(
2025-01-10T13:49:05.4328823Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4328892Z                 )
2025-01-10T13:49:05.4328962Z     
2025-01-10T13:49:05.4329031Z             diff = 0
2025-01-10T13:49:05.4329143Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4329227Z                 # count up differences
2025-01-10T13:49:05.4329400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4329472Z                     diff += 1
2025-01-10T13:49:05.4329544Z     
2025-01-10T13:49:05.4329628Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4329765Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4329933Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4330051Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4330125Z E           
2025-01-10T13:49:05.4330231Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4330496Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4330753Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4330758Z 
2025-01-10T13:49:05.4331067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4331071Z 
2025-01-10T13:49:05.4331244Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4331252Z 
2025-01-10T13:49:05.4331475Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d50a0>
2025-01-10T13:49:05.4331646Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4331725Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4331729Z 
2025-01-10T13:49:05.4331869Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4331982Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4332069Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4332137Z         try:
2025-01-10T13:49:05.4332280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4332358Z         except KeyError:
2025-01-10T13:49:05.4332498Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4332573Z     
2025-01-10T13:49:05.4332657Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4332751Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4332929Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4333065Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4333147Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4333240Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4333348Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4333352Z 
2025-01-10T13:49:05.4333478Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4333590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4333993Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4334069Z     ???
2025-01-10T13:49:05.4334179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4334322Z 
2025-01-10T13:49:05.4334398Z >   ???
2025-01-10T13:49:05.4334524Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4334606Z E   
2025-01-10T13:49:05.4334735Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4334851Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4334921Z E          ...
2025-01-10T13:49:05.4335011Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4335136Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4335251Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4335320Z E          ...
2025-01-10T13:49:05.4335410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4335532Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4335640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4335644Z 
2025-01-10T13:49:05.4335740Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4336003Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-10T13:49:05.4336012Z 
2025-01-10T13:49:05.4336147Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4336270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4336368Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4336501Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4336626Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4336723Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4336795Z err_msg = None
2025-01-10T13:49:05.4336800Z 
2025-01-10T13:49:05.4336912Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4336992Z         if err_msg is None:
2025-01-10T13:49:05.4337089Z             if left.shape != right.shape:
2025-01-10T13:49:05.4337170Z                 raise_assert_detail(
2025-01-10T13:49:05.4337322Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4337391Z                 )
2025-01-10T13:49:05.4337462Z     
2025-01-10T13:49:05.4337534Z             diff = 0
2025-01-10T13:49:05.4337647Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4337731Z                 # count up differences
2025-01-10T13:49:05.4337903Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4337983Z                     diff += 1
2025-01-10T13:49:05.4338049Z     
2025-01-10T13:49:05.4338138Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4338272Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4338451Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4338561Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4338635Z E           
2025-01-10T13:49:05.4338890Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4339158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4339424Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4339429Z 
2025-01-10T13:49:05.4339799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4339805Z 
2025-01-10T13:49:05.4339978Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4339983Z 
2025-01-10T13:49:05.4340203Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d5160>
2025-01-10T13:49:05.4340411Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>, attr = 'f_lu'
2025-01-10T13:49:05.4340415Z 
2025-01-10T13:49:05.4340552Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4340663Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4340753Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4340821Z         try:
2025-01-10T13:49:05.4340963Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4341043Z         except KeyError:
2025-01-10T13:49:05.4341185Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4341254Z     
2025-01-10T13:49:05.4341342Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4341434Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4341527Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4341656Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4341743Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4341829Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4341941Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4341945Z 
2025-01-10T13:49:05.4342073Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4342182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4342333Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4342404Z     ???
2025-01-10T13:49:05.4342516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4342523Z 
2025-01-10T13:49:05.4342589Z >   ???
2025-01-10T13:49:05.4342722Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4342791Z E   
2025-01-10T13:49:05.4342923Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4343032Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4343107Z E          ...
2025-01-10T13:49:05.4343197Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4343323Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4343438Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4343507Z E          ...
2025-01-10T13:49:05.4343733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4343860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4343965Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4343969Z 
2025-01-10T13:49:05.4344057Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4344380Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-10T13:49:05.4344499Z 
2025-01-10T13:49:05.4344721Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d5760>
2025-01-10T13:49:05.4344892Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4344986Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:05.4344990Z 
2025-01-10T13:49:05.4345122Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4345238Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4345319Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4345392Z         try:
2025-01-10T13:49:05.4345528Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4345609Z         except KeyError:
2025-01-10T13:49:05.4345742Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4345919Z     
2025-01-10T13:49:05.4346006Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4346102Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4346193Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4346328Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4346415Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4346500Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4346610Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4346679Z             else:
2025-01-10T13:49:05.4346776Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4346881Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4346886Z 
2025-01-10T13:49:05.4347015Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4347125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4347274Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4347341Z     ???
2025-01-10T13:49:05.4347453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4347459Z 
2025-01-10T13:49:05.4347532Z >   ???
2025-01-10T13:49:05.4347707Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4347782Z E   
2025-01-10T13:49:05.4347947Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:49:05.4348318Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4352913Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T13:49:05.4357765Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:49:05.4357964Z E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:49:05.4357969Z 
2025-01-10T13:49:05.4358063Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4358363Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-10T13:49:05.4358368Z 
2025-01-10T13:49:05.4358498Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4358628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4358736Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4358876Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4358997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4359093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4359167Z err_msg = None
2025-01-10T13:49:05.4359170Z 
2025-01-10T13:49:05.4359285Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4359365Z         if err_msg is None:
2025-01-10T13:49:05.4359462Z             if left.shape != right.shape:
2025-01-10T13:49:05.4359544Z                 raise_assert_detail(
2025-01-10T13:49:05.4359691Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4359760Z                 )
2025-01-10T13:49:05.4359833Z     
2025-01-10T13:49:05.4359904Z             diff = 0
2025-01-10T13:49:05.4360018Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4360225Z                 # count up differences
2025-01-10T13:49:05.4360396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4360475Z                     diff += 1
2025-01-10T13:49:05.4360542Z     
2025-01-10T13:49:05.4360634Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4360767Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4360942Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4361054Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4361128Z E           
2025-01-10T13:49:05.4361236Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4361577Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4361849Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4361854Z 
2025-01-10T13:49:05.4362158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4362162Z 
2025-01-10T13:49:05.4362335Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4362339Z 
2025-01-10T13:49:05.4362568Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d5820>
2025-01-10T13:49:05.4362732Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4362828Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:05.4362831Z 
2025-01-10T13:49:05.4362969Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4363086Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4363166Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4363240Z         try:
2025-01-10T13:49:05.4363378Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4363461Z         except KeyError:
2025-01-10T13:49:05.4363721Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4363796Z     
2025-01-10T13:49:05.4363882Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4363980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4364071Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4364209Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4364298Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4364388Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4364504Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4364573Z             else:
2025-01-10T13:49:05.4364670Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4364774Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4364779Z 
2025-01-10T13:49:05.4364906Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4365021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4365169Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4365237Z     ???
2025-01-10T13:49:05.4365350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4365354Z 
2025-01-10T13:49:05.4365425Z >   ???
2025-01-10T13:49:05.4365554Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4365626Z E   
2025-01-10T13:49:05.4365751Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4366031Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4366101Z E          ...
2025-01-10T13:49:05.4366195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4366320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4366433Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4366502Z E          ...
2025-01-10T13:49:05.4366588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4366709Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4366816Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4366820Z 
2025-01-10T13:49:05.4366912Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4367286Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-10T13:49:05.4367291Z 
2025-01-10T13:49:05.4367428Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4367551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4367649Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4367780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4367904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4367999Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4368073Z err_msg = None
2025-01-10T13:49:05.4368077Z 
2025-01-10T13:49:05.4368189Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4368267Z         if err_msg is None:
2025-01-10T13:49:05.4368367Z             if left.shape != right.shape:
2025-01-10T13:49:05.4368448Z                 raise_assert_detail(
2025-01-10T13:49:05.4368600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4368668Z                 )
2025-01-10T13:49:05.4368738Z     
2025-01-10T13:49:05.4368808Z             diff = 0
2025-01-10T13:49:05.4368927Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4369011Z                 # count up differences
2025-01-10T13:49:05.4369182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4369258Z                     diff += 1
2025-01-10T13:49:05.4369329Z     
2025-01-10T13:49:05.4369418Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4369551Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4369726Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4369841Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4369914Z E           
2025-01-10T13:49:05.4370024Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4370293Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4370558Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4370563Z 
2025-01-10T13:49:05.4370868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4370873Z 
2025-01-10T13:49:05.4371043Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4371131Z 
2025-01-10T13:49:05.4371354Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d58e0>
2025-01-10T13:49:05.4371523Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4371604Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4371608Z 
2025-01-10T13:49:05.4371750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4371867Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4371948Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4372023Z         try:
2025-01-10T13:49:05.4372163Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4372245Z         except KeyError:
2025-01-10T13:49:05.4372381Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4372528Z     
2025-01-10T13:49:05.4372615Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4372710Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4372801Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4372938Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4373021Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4373114Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4373223Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4373299Z             else:
2025-01-10T13:49:05.4373396Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4373533Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4373538Z 
2025-01-10T13:49:05.4373756Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4373873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4374022Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4374090Z     ???
2025-01-10T13:49:05.4374204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4374211Z 
2025-01-10T13:49:05.4374277Z >   ???
2025-01-10T13:49:05.4374407Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4374473Z E   
2025-01-10T13:49:05.4374600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4374714Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4374783Z E          ...
2025-01-10T13:49:05.4374872Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4374998Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4375113Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4375188Z E          ...
2025-01-10T13:49:05.4375275Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4375399Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4375505Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4375512Z 
2025-01-10T13:49:05.4375600Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4375878Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-10T13:49:05.4375882Z 
2025-01-10T13:49:05.4376013Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4376137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4376235Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4376367Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4376491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4376585Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4376664Z err_msg = None
2025-01-10T13:49:05.4376668Z 
2025-01-10T13:49:05.4376777Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4376979Z         if err_msg is None:
2025-01-10T13:49:05.4377075Z             if left.shape != right.shape:
2025-01-10T13:49:05.4377169Z                 raise_assert_detail(
2025-01-10T13:49:05.4377316Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4377385Z                 )
2025-01-10T13:49:05.4377456Z     
2025-01-10T13:49:05.4377526Z             diff = 0
2025-01-10T13:49:05.4377638Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4377726Z                 # count up differences
2025-01-10T13:49:05.4377899Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4377974Z                     diff += 1
2025-01-10T13:49:05.4378044Z     
2025-01-10T13:49:05.4378233Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4378375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4378550Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4378668Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4378744Z E           
2025-01-10T13:49:05.4378853Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4379119Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4379380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4379388Z 
2025-01-10T13:49:05.4379691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4379696Z 
2025-01-10T13:49:05.4379868Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4379873Z 
2025-01-10T13:49:05.4380094Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d59a0>
2025-01-10T13:49:05.4381157Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4381247Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4381252Z 
2025-01-10T13:49:05.4381395Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4381508Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4381595Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4381663Z         try:
2025-01-10T13:49:05.4381815Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4381899Z         except KeyError:
2025-01-10T13:49:05.4382039Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4382111Z     
2025-01-10T13:49:05.4382196Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4382293Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4382378Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4382513Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4382596Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4382694Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4382803Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4382879Z             else:
2025-01-10T13:49:05.4382973Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4383083Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4383090Z 
2025-01-10T13:49:05.4383220Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4383332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4383582Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4383765Z     ???
2025-01-10T13:49:05.4383884Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4383888Z 
2025-01-10T13:49:05.4383955Z >   ???
2025-01-10T13:49:05.4384091Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4384158Z E   
2025-01-10T13:49:05.4384287Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4384396Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4384471Z E          ...
2025-01-10T13:49:05.4384557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4384688Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4384953Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4385030Z E          ...
2025-01-10T13:49:05.4385124Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4385245Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4385351Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4385355Z 
2025-01-10T13:49:05.4385441Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4385711Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-10T13:49:05.4385716Z 
2025-01-10T13:49:05.4385844Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4385977Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4386074Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4386208Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4386334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4386428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4386506Z err_msg = None
2025-01-10T13:49:05.4386510Z 
2025-01-10T13:49:05.4386618Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4386703Z         if err_msg is None:
2025-01-10T13:49:05.4386795Z             if left.shape != right.shape:
2025-01-10T13:49:05.4386882Z                 raise_assert_detail(
2025-01-10T13:49:05.4387025Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4387102Z                 )
2025-01-10T13:49:05.4387169Z     
2025-01-10T13:49:05.4387246Z             diff = 0
2025-01-10T13:49:05.4387360Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4387445Z                 # count up differences
2025-01-10T13:49:05.4387623Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4387702Z                     diff += 1
2025-01-10T13:49:05.4387775Z     
2025-01-10T13:49:05.4387861Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4387998Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4388167Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4388282Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4388350Z E           
2025-01-10T13:49:05.4388464Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4388734Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4388992Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4389114Z 
2025-01-10T13:49:05.4389421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4389426Z 
2025-01-10T13:49:05.4389592Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4389601Z 
2025-01-10T13:49:05.4389821Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d5b20>
2025-01-10T13:49:05.4389989Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be83d5eb0>
2025-01-10T13:49:05.4390063Z attr = 'j_blues'
2025-01-10T13:49:05.4390066Z 
2025-01-10T13:49:05.4390276Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4390391Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4390481Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4390550Z         try:
2025-01-10T13:49:05.4390694Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4390772Z         except KeyError:
2025-01-10T13:49:05.4390912Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4390979Z     
2025-01-10T13:49:05.4391069Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4391159Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4391249Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4391385Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4391467Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4391558Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4391669Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4391743Z             else:
2025-01-10T13:49:05.4391834Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4391946Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4391950Z 
2025-01-10T13:49:05.4392076Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4392192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4392334Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4392407Z     ???
2025-01-10T13:49:05.4392519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4392523Z 
2025-01-10T13:49:05.4392591Z >   ???
2025-01-10T13:49:05.4392720Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4392787Z E   
2025-01-10T13:49:05.4392918Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4393028Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4393105Z E          ...
2025-01-10T13:49:05.4393189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4393324Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4393434Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4393508Z E          ...
2025-01-10T13:49:05.4393591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4393840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4393947Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4393951Z 
2025-01-10T13:49:05.4394036Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4394292Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-10T13:49:05.4394296Z 
2025-01-10T13:49:05.4394421Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4394557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4394772Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4394911Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4395031Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4395127Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4395205Z err_msg = None
2025-01-10T13:49:05.4395209Z 
2025-01-10T13:49:05.4395316Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4395399Z         if err_msg is None:
2025-01-10T13:49:05.4395489Z             if left.shape != right.shape:
2025-01-10T13:49:05.4395574Z                 raise_assert_detail(
2025-01-10T13:49:05.4395715Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4395890Z                 )
2025-01-10T13:49:05.4395959Z     
2025-01-10T13:49:05.4396036Z             diff = 0
2025-01-10T13:49:05.4396143Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4396235Z                 # count up differences
2025-01-10T13:49:05.4396403Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4396485Z                     diff += 1
2025-01-10T13:49:05.4396556Z     
2025-01-10T13:49:05.4396643Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4396780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4396948Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4397061Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4397129Z E           
2025-01-10T13:49:05.4397244Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4397507Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4397775Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4397779Z 
2025-01-10T13:49:05.4398082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4398086Z 
2025-01-10T13:49:05.4398255Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4398259Z 
2025-01-10T13:49:05.4398488Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d68a0>
2025-01-10T13:49:05.4398652Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4398736Z attr = 'lines'
2025-01-10T13:49:05.4398740Z 
2025-01-10T13:49:05.4398879Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4398990Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4399078Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4399147Z         try:
2025-01-10T13:49:05.4399288Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4399368Z         except KeyError:
2025-01-10T13:49:05.4399507Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4399574Z     
2025-01-10T13:49:05.4399661Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4399752Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4399843Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4399973Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4400061Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4400234Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4400346Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4400422Z             else:
2025-01-10T13:49:05.4400513Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4400623Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4400628Z 
2025-01-10T13:49:05.4400749Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4400864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4401005Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4401077Z     ???
2025-01-10T13:49:05.4401185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4401189Z 
2025-01-10T13:49:05.4401260Z >   ???
2025-01-10T13:49:05.4401458Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4401533Z E   
2025-01-10T13:49:05.4401658Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4401773Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4401849Z E          ...
2025-01-10T13:49:05.4401935Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4402063Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4402174Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4402248Z E          ...
2025-01-10T13:49:05.4402329Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4402453Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4402555Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4402558Z 
2025-01-10T13:49:05.4402649Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4402946Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-10T13:49:05.4402955Z 
2025-01-10T13:49:05.4403178Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d6960>
2025-01-10T13:49:05.4403346Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4403432Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4403435Z 
2025-01-10T13:49:05.4403573Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4403811Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4403898Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4403966Z         try:
2025-01-10T13:49:05.4404106Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4404183Z         except KeyError:
2025-01-10T13:49:05.4404322Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4404389Z     
2025-01-10T13:49:05.4404481Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4404580Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4404665Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4404801Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4404884Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4404977Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4405083Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4405087Z 
2025-01-10T13:49:05.4405214Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4405327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4405331Z 
2025-01-10T13:49:05.4405469Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4405554Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4405665Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4405751Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4405889Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4406093Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4406196Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4406277Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4406350Z err_msg = None
2025-01-10T13:49:05.4406353Z 
2025-01-10T13:49:05.4406466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4406543Z         if err_msg is None:
2025-01-10T13:49:05.4406639Z             if left.shape != right.shape:
2025-01-10T13:49:05.4406722Z                 raise_assert_detail(
2025-01-10T13:49:05.4406872Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4406940Z                 )
2025-01-10T13:49:05.4407010Z     
2025-01-10T13:49:05.4407085Z             diff = 0
2025-01-10T13:49:05.4407312Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4407405Z                 # count up differences
2025-01-10T13:49:05.4407576Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4407656Z                     diff += 1
2025-01-10T13:49:05.4407723Z     
2025-01-10T13:49:05.4407810Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4407942Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4408117Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4408217Z E           AssertionError: Series are different
2025-01-10T13:49:05.4408292Z E           
2025-01-10T13:49:05.4408390Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4408768Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4409105Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4409437Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4409447Z 
2025-01-10T13:49:05.4409752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4410051Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-10T13:49:05.4410055Z 
2025-01-10T13:49:05.4410279Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d6a20>
2025-01-10T13:49:05.4410448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4410534Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4410538Z 
2025-01-10T13:49:05.4410676Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4410793Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4410874Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4410950Z         try:
2025-01-10T13:49:05.4411091Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4411172Z         except KeyError:
2025-01-10T13:49:05.4411307Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4411463Z     
2025-01-10T13:49:05.4411546Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4411641Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4411725Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4411860Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4411941Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4412035Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4412141Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4412151Z 
2025-01-10T13:49:05.4412270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4412386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4412391Z 
2025-01-10T13:49:05.4412596Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4412685Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4412792Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4412877Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4413019Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4413104Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4413208Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4413288Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4413371Z err_msg = None
2025-01-10T13:49:05.4413375Z 
2025-01-10T13:49:05.4413480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4413562Z         if err_msg is None:
2025-01-10T13:49:05.4413771Z             if left.shape != right.shape:
2025-01-10T13:49:05.4413861Z                 raise_assert_detail(
2025-01-10T13:49:05.4414010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4414086Z                 )
2025-01-10T13:49:05.4414151Z     
2025-01-10T13:49:05.4414225Z             diff = 0
2025-01-10T13:49:05.4414334Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4414425Z                 # count up differences
2025-01-10T13:49:05.4414592Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4414671Z                     diff += 1
2025-01-10T13:49:05.4414738Z     
2025-01-10T13:49:05.4414826Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4414961Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4415129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4415235Z E           AssertionError: Series are different
2025-01-10T13:49:05.4415307Z E           
2025-01-10T13:49:05.4415410Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4415782Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4416161Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4416542Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4416664Z 
2025-01-10T13:49:05.4416967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4417214Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-10T13:49:05.4417218Z 
2025-01-10T13:49:05.4417350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4417474Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4417671Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4417803Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4417931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4418023Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4427068Z err_msg = None
2025-01-10T13:49:05.4427080Z 
2025-01-10T13:49:05.4427238Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4427330Z         if err_msg is None:
2025-01-10T13:49:05.4427429Z             if left.shape != right.shape:
2025-01-10T13:49:05.4427515Z                 raise_assert_detail(
2025-01-10T13:49:05.4427670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4427740Z                 )
2025-01-10T13:49:05.4427809Z     
2025-01-10T13:49:05.4427885Z             diff = 0
2025-01-10T13:49:05.4428015Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4428103Z                 # count up differences
2025-01-10T13:49:05.4428288Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4428362Z                     diff += 1
2025-01-10T13:49:05.4428433Z     
2025-01-10T13:49:05.4428522Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4428672Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4428846Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4428963Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4429035Z E           
2025-01-10T13:49:05.4429152Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4429420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4429698Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4429703Z 
2025-01-10T13:49:05.4430037Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4430041Z 
2025-01-10T13:49:05.4430213Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4430217Z 
2025-01-10T13:49:05.4430456Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d6c60>
2025-01-10T13:49:05.4430664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>, attr = 'nu'
2025-01-10T13:49:05.4430668Z 
2025-01-10T13:49:05.4430815Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4431138Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4431222Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4431301Z         try:
2025-01-10T13:49:05.4431443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4431526Z         except KeyError:
2025-01-10T13:49:05.4431666Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4431739Z     
2025-01-10T13:49:05.4431825Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4431924Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4432010Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4432148Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4432231Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4432429Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4432542Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4432551Z 
2025-01-10T13:49:05.4432683Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4432801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4432948Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4433025Z     ???
2025-01-10T13:49:05.4433132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4433136Z 
2025-01-10T13:49:05.4433209Z >   ???
2025-01-10T13:49:05.4433336Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4433408Z E   
2025-01-10T13:49:05.4433533Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4433770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4433842Z E          ...
2025-01-10T13:49:05.4433942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4434069Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4434188Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4434263Z E          ...
2025-01-10T13:49:05.4434346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4434475Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4434580Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4434584Z 
2025-01-10T13:49:05.4434678Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4434952Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-10T13:49:05.4434956Z 
2025-01-10T13:49:05.4435090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4435221Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4435326Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4435465Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4435589Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4435688Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4435760Z err_msg = None
2025-01-10T13:49:05.4435763Z 
2025-01-10T13:49:05.4435883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4435962Z         if err_msg is None:
2025-01-10T13:49:05.4436062Z             if left.shape != right.shape:
2025-01-10T13:49:05.4436145Z                 raise_assert_detail(
2025-01-10T13:49:05.4436294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4436362Z                 )
2025-01-10T13:49:05.4436436Z     
2025-01-10T13:49:05.4436506Z             diff = 0
2025-01-10T13:49:05.4436633Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4436729Z                 # count up differences
2025-01-10T13:49:05.4437047Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4437130Z                     diff += 1
2025-01-10T13:49:05.4437196Z     
2025-01-10T13:49:05.4437288Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4437423Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4437596Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4437707Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4437782Z E           
2025-01-10T13:49:05.4437891Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4438261Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4438537Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4438542Z 
2025-01-10T13:49:05.4438846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4438851Z 
2025-01-10T13:49:05.4439026Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4439031Z 
2025-01-10T13:49:05.4439257Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d6d20>
2025-01-10T13:49:05.4439428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4439512Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4439516Z 
2025-01-10T13:49:05.4439653Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4439773Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4439855Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4439929Z         try:
2025-01-10T13:49:05.4440066Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4440154Z         except KeyError:
2025-01-10T13:49:05.4440291Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4440364Z     
2025-01-10T13:49:05.4440448Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4440546Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4440639Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4440770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4440861Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4440947Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4441058Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4441066Z 
2025-01-10T13:49:05.4441187Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4441301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4441443Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4441510Z     ???
2025-01-10T13:49:05.4441622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4441626Z 
2025-01-10T13:49:05.4441692Z >   ???
2025-01-10T13:49:05.4441824Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4441890Z E   
2025-01-10T13:49:05.4442017Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4442129Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4442200Z E          ...
2025-01-10T13:49:05.4442295Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4442420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4442637Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4442705Z E          ...
2025-01-10T13:49:05.4442791Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4442910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4443015Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4443019Z 
2025-01-10T13:49:05.4443104Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4443357Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-10T13:49:05.4443362Z 
2025-01-10T13:49:05.4443493Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4443866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4443974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4444109Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4444233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4444322Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4444400Z err_msg = None
2025-01-10T13:49:05.4444404Z 
2025-01-10T13:49:05.4444511Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4444594Z         if err_msg is None:
2025-01-10T13:49:05.4444682Z             if left.shape != right.shape:
2025-01-10T13:49:05.4444769Z                 raise_assert_detail(
2025-01-10T13:49:05.4444915Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4444983Z                 )
2025-01-10T13:49:05.4445056Z     
2025-01-10T13:49:05.4445129Z             diff = 0
2025-01-10T13:49:05.4445240Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4445324Z                 # count up differences
2025-01-10T13:49:05.4445503Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4445577Z                     diff += 1
2025-01-10T13:49:05.4445648Z     
2025-01-10T13:49:05.4445732Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4445870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4446036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4446150Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4446220Z E           
2025-01-10T13:49:05.4446331Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4446598Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4446862Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4446866Z 
2025-01-10T13:49:05.4447170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4447175Z 
2025-01-10T13:49:05.4447343Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4447347Z 
2025-01-10T13:49:05.4447567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d6de0>
2025-01-10T13:49:05.4447775Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>, attr = 'f_lu'
2025-01-10T13:49:05.4447779Z 
2025-01-10T13:49:05.4448029Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4448147Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4448228Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4448300Z         try:
2025-01-10T13:49:05.4448437Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4448519Z         except KeyError:
2025-01-10T13:49:05.4448658Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4448724Z     
2025-01-10T13:49:05.4448811Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4448903Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4448992Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4449121Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4449283Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4449374Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4449484Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4449492Z 
2025-01-10T13:49:05.4449617Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4449734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4449876Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4449947Z     ???
2025-01-10T13:49:05.4450058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4450062Z 
2025-01-10T13:49:05.4450127Z >   ???
2025-01-10T13:49:05.4450257Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4450323Z E   
2025-01-10T13:49:05.4450450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4450555Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4450633Z E          ...
2025-01-10T13:49:05.4450717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4450847Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4450958Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4451032Z E          ...
2025-01-10T13:49:05.4451113Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4451235Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4451339Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4451343Z 
2025-01-10T13:49:05.4451429Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4451739Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-10T13:49:05.4451743Z 
2025-01-10T13:49:05.4451963Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d73e0>
2025-01-10T13:49:05.4452137Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4452225Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:05.4452229Z 
2025-01-10T13:49:05.4452363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4452474Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4452556Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4452626Z         try:
2025-01-10T13:49:05.4452759Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4452840Z         except KeyError:
2025-01-10T13:49:05.4452974Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4453045Z     
2025-01-10T13:49:05.4453128Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4453220Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4453305Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4453438Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4453524Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4453723Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4453829Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4454023Z             else:
2025-01-10T13:49:05.4454124Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4454232Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4454236Z 
2025-01-10T13:49:05.4454362Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4454469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4454614Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4454680Z     ???
2025-01-10T13:49:05.4454789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4454793Z 
2025-01-10T13:49:05.4454859Z >   ???
2025-01-10T13:49:05.4455041Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4455208Z E   
2025-01-10T13:49:05.4455381Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:05.4455757Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4460659Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:49:05.4465783Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:05.4466066Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:05.4466071Z 
2025-01-10T13:49:05.4466161Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4466448Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-10T13:49:05.4466452Z 
2025-01-10T13:49:05.4466582Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4466707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4466805Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4466939Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4467064Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4467163Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4467235Z err_msg = None
2025-01-10T13:49:05.4467240Z 
2025-01-10T13:49:05.4467355Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4467432Z         if err_msg is None:
2025-01-10T13:49:05.4467526Z             if left.shape != right.shape:
2025-01-10T13:49:05.4467607Z                 raise_assert_detail(
2025-01-10T13:49:05.4467753Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4467820Z                 )
2025-01-10T13:49:05.4467893Z     
2025-01-10T13:49:05.4467962Z             diff = 0
2025-01-10T13:49:05.4468078Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4468166Z                 # count up differences
2025-01-10T13:49:05.4468336Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4468419Z                     diff += 1
2025-01-10T13:49:05.4468486Z     
2025-01-10T13:49:05.4468575Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4468708Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4468881Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4468991Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4469066Z E           
2025-01-10T13:49:05.4469171Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4469439Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4469703Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4469795Z 
2025-01-10T13:49:05.4470100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4470105Z 
2025-01-10T13:49:05.4470273Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4470277Z 
2025-01-10T13:49:05.4470497Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d74a0>
2025-01-10T13:49:05.4470668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4470755Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:05.4470841Z 
2025-01-10T13:49:05.4470981Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4471100Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4471183Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4471256Z         try:
2025-01-10T13:49:05.4471392Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4471475Z         except KeyError:
2025-01-10T13:49:05.4471609Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4471680Z     
2025-01-10T13:49:05.4471764Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4471860Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4471945Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4472077Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4472158Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4472249Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4472364Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4472434Z             else:
2025-01-10T13:49:05.4472534Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4472639Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4472643Z 
2025-01-10T13:49:05.4472769Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4472880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4473027Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4473095Z     ???
2025-01-10T13:49:05.4473207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4473211Z 
2025-01-10T13:49:05.4473276Z >   ???
2025-01-10T13:49:05.4473404Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4473476Z E   
2025-01-10T13:49:05.4473719Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4473837Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4473907Z E          ...
2025-01-10T13:49:05.4474005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4474133Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4474246Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4474315Z E          ...
2025-01-10T13:49:05.4474403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4474523Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4474629Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4474633Z 
2025-01-10T13:49:05.4474719Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4474996Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-10T13:49:05.4475001Z 
2025-01-10T13:49:05.4475140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4475264Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4475489Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4475620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4475744Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4475834Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4475911Z err_msg = None
2025-01-10T13:49:05.4475915Z 
2025-01-10T13:49:05.4476022Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4476105Z         if err_msg is None:
2025-01-10T13:49:05.4476205Z             if left.shape != right.shape:
2025-01-10T13:49:05.4476286Z                 raise_assert_detail(
2025-01-10T13:49:05.4476540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4476613Z                 )
2025-01-10T13:49:05.4476684Z     
2025-01-10T13:49:05.4476756Z             diff = 0
2025-01-10T13:49:05.4476872Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4476958Z                 # count up differences
2025-01-10T13:49:05.4477134Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4477207Z                     diff += 1
2025-01-10T13:49:05.4477276Z     
2025-01-10T13:49:05.4477361Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4477501Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4477671Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4477787Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4477860Z E           
2025-01-10T13:49:05.4477966Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4478231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4478492Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4478496Z 
2025-01-10T13:49:05.4478801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4478805Z 
2025-01-10T13:49:05.4478973Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4478977Z 
2025-01-10T13:49:05.4479201Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d7560>
2025-01-10T13:49:05.4479373Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4479456Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4479460Z 
2025-01-10T13:49:05.4479600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4479715Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4479801Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4479868Z         try:
2025-01-10T13:49:05.4480011Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4480098Z         except KeyError:
2025-01-10T13:49:05.4480235Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4480307Z     
2025-01-10T13:49:05.4480392Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4480488Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4480579Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4480716Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4480886Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4480978Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4481086Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4481158Z             else:
2025-01-10T13:49:05.4481248Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4481355Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4481359Z 
2025-01-10T13:49:05.4481485Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4481597Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4481748Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4481815Z     ???
2025-01-10T13:49:05.4481927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4481932Z 
2025-01-10T13:49:05.4482089Z >   ???
2025-01-10T13:49:05.4482223Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4482292Z E   
2025-01-10T13:49:05.4482421Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4482529Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4482602Z E          ...
2025-01-10T13:49:05.4482687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4482819Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4482932Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4483000Z E          ...
2025-01-10T13:49:05.4483088Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4483208Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4483316Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4483319Z 
2025-01-10T13:49:05.4483405Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4483838Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-10T13:49:05.4483847Z 
2025-01-10T13:49:05.4483974Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4484103Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4484201Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4484327Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4484453Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4484544Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4484619Z err_msg = None
2025-01-10T13:49:05.4484623Z 
2025-01-10T13:49:05.4484731Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4484817Z         if err_msg is None:
2025-01-10T13:49:05.4484911Z             if left.shape != right.shape:
2025-01-10T13:49:05.4484997Z                 raise_assert_detail(
2025-01-10T13:49:05.4485140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4485212Z                 )
2025-01-10T13:49:05.4485277Z     
2025-01-10T13:49:05.4485354Z             diff = 0
2025-01-10T13:49:05.4485469Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4485551Z                 # count up differences
2025-01-10T13:49:05.4485725Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4485798Z                     diff += 1
2025-01-10T13:49:05.4485869Z     
2025-01-10T13:49:05.4485955Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4486093Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4486260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4486374Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4486441Z E           
2025-01-10T13:49:05.4486676Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4486938Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4487199Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4487204Z 
2025-01-10T13:49:05.4487639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4487645Z 
2025-01-10T13:49:05.4487817Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4487828Z 
2025-01-10T13:49:05.4488051Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d7620>
2025-01-10T13:49:05.4488218Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4488294Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4488299Z 
2025-01-10T13:49:05.4488436Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4488546Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4488631Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4488697Z         try:
2025-01-10T13:49:05.4488838Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4488915Z         except KeyError:
2025-01-10T13:49:05.4489058Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4489124Z     
2025-01-10T13:49:05.4489212Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4489315Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4489400Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4489534Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4489617Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4489710Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4489815Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4489891Z             else:
2025-01-10T13:49:05.4489982Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4490089Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4490093Z 
2025-01-10T13:49:05.4490215Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4490331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4490475Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4490549Z     ???
2025-01-10T13:49:05.4490663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4490667Z 
2025-01-10T13:49:05.4490734Z >   ???
2025-01-10T13:49:05.4490867Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4490933Z E   
2025-01-10T13:49:05.4491064Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4491171Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4491243Z E          ...
2025-01-10T13:49:05.4491327Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4491456Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4491566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4491641Z E          ...
2025-01-10T13:49:05.4491722Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4491853Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4491958Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4492068Z 
2025-01-10T13:49:05.4492157Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4492423Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-10T13:49:05.4492429Z 
2025-01-10T13:49:05.4492555Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4492686Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4492810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4492946Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4493084Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4493259Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4493347Z err_msg = None
2025-01-10T13:49:05.4493356Z 
2025-01-10T13:49:05.4493466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4493548Z         if err_msg is None:
2025-01-10T13:49:05.4493751Z             if left.shape != right.shape:
2025-01-10T13:49:05.4493839Z                 raise_assert_detail(
2025-01-10T13:49:05.4493986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4494061Z                 )
2025-01-10T13:49:05.4494128Z     
2025-01-10T13:49:05.4494203Z             diff = 0
2025-01-10T13:49:05.4494312Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4494403Z                 # count up differences
2025-01-10T13:49:05.4494574Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4494653Z                     diff += 1
2025-01-10T13:49:05.4494723Z     
2025-01-10T13:49:05.4494812Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4494957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4495129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4495243Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4495312Z E           
2025-01-10T13:49:05.4495428Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4495687Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4495954Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4495961Z 
2025-01-10T13:49:05.4496271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4496275Z 
2025-01-10T13:49:05.4496441Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4496445Z 
2025-01-10T13:49:05.4496671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88d77a0>
2025-01-10T13:49:05.4496836Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcfa03200>
2025-01-10T13:49:05.4496914Z attr = 'j_blues'
2025-01-10T13:49:05.4496918Z 
2025-01-10T13:49:05.4497057Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4497172Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4497257Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4497328Z         try:
2025-01-10T13:49:05.4497470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4497674Z         except KeyError:
2025-01-10T13:49:05.4497814Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4497880Z     
2025-01-10T13:49:05.4497967Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4498059Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4498150Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4498280Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4498369Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4498459Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4498565Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4498640Z             else:
2025-01-10T13:49:05.4498736Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4498955Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4498960Z 
2025-01-10T13:49:05.4499086Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4499208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4499351Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4499423Z     ???
2025-01-10T13:49:05.4499530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4499534Z 
2025-01-10T13:49:05.4499604Z >   ???
2025-01-10T13:49:05.4499728Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4499800Z E   
2025-01-10T13:49:05.4499929Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4500036Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4500109Z E          ...
2025-01-10T13:49:05.4500193Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4500326Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4500434Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4500510Z E          ...
2025-01-10T13:49:05.4500592Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4500718Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4500818Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4500823Z 
2025-01-10T13:49:05.4500918Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4501117Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-10T13:49:05.4501121Z 
2025-01-10T13:49:05.4501245Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4501372Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4501463Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4501604Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4501724Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4501820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4501891Z err_msg = None
2025-01-10T13:49:05.4501895Z 
2025-01-10T13:49:05.4502008Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4502091Z         if err_msg is None:
2025-01-10T13:49:05.4502187Z             if left.shape != right.shape:
2025-01-10T13:49:05.4502272Z                 raise_assert_detail(
2025-01-10T13:49:05.4502412Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4502485Z                 )
2025-01-10T13:49:05.4502550Z     
2025-01-10T13:49:05.4502625Z             diff = 0
2025-01-10T13:49:05.4502731Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4502823Z                 # count up differences
2025-01-10T13:49:05.4502989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4503165Z                     diff += 1
2025-01-10T13:49:05.4503231Z     
2025-01-10T13:49:05.4503322Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4503451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4503729Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4503847Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4503914Z E           
2025-01-10T13:49:05.4504026Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4504413Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4504682Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4504690Z 
2025-01-10T13:49:05.4504993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4504998Z 
2025-01-10T13:49:05.4505163Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4505167Z 
2025-01-10T13:49:05.4505392Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fc560>
2025-01-10T13:49:05.4505554Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4505630Z attr = 'lines'
2025-01-10T13:49:05.4505634Z 
2025-01-10T13:49:05.4505769Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4505887Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4505972Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4506048Z         try:
2025-01-10T13:49:05.4506190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4506267Z         except KeyError:
2025-01-10T13:49:05.4506408Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4506473Z     
2025-01-10T13:49:05.4506559Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4506650Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4506742Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4506871Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4506958Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4507044Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4507159Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4507229Z             else:
2025-01-10T13:49:05.4507326Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4507432Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4507441Z 
2025-01-10T13:49:05.4507564Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4507681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4507822Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4507894Z     ???
2025-01-10T13:49:05.4508000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4508003Z 
2025-01-10T13:49:05.4508075Z >   ???
2025-01-10T13:49:05.4508199Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4508271Z E   
2025-01-10T13:49:05.4508396Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4508513Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4508581Z E          ...
2025-01-10T13:49:05.4508669Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4508949Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4509061Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4509135Z E          ...
2025-01-10T13:49:05.4509216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4509342Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4509444Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4509448Z 
2025-01-10T13:49:05.4509545Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4509778Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-10T13:49:05.4509783Z 
2025-01-10T13:49:05.4510011Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fc620>
2025-01-10T13:49:05.4510251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4510345Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4510353Z 
2025-01-10T13:49:05.4510493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4510603Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4510690Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4510759Z         try:
2025-01-10T13:49:05.4510898Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4510974Z         except KeyError:
2025-01-10T13:49:05.4511112Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4511177Z     
2025-01-10T13:49:05.4511263Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4511353Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4511445Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4511574Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4511663Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4511753Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4511859Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4511863Z 
2025-01-10T13:49:05.4511987Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4512092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4512096Z 
2025-01-10T13:49:05.4512230Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4512314Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4512432Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4512509Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4512654Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4512739Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4512844Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4512925Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4513009Z err_msg = None
2025-01-10T13:49:05.4513013Z 
2025-01-10T13:49:05.4513127Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4513208Z         if err_msg is None:
2025-01-10T13:49:05.4513304Z             if left.shape != right.shape:
2025-01-10T13:49:05.4513386Z                 raise_assert_detail(
2025-01-10T13:49:05.4513532Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4513772Z                 )
2025-01-10T13:49:05.4513846Z     
2025-01-10T13:49:05.4513919Z             diff = 0
2025-01-10T13:49:05.4514030Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4514116Z                 # count up differences
2025-01-10T13:49:05.4514288Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4514369Z                     diff += 1
2025-01-10T13:49:05.4514434Z     
2025-01-10T13:49:05.4514521Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4514791Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4514964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4515065Z E           AssertionError: Series are different
2025-01-10T13:49:05.4515137Z E           
2025-01-10T13:49:05.4515233Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4515709Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4516049Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4516384Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4516390Z 
2025-01-10T13:49:05.4516702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4516940Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-10T13:49:05.4516944Z 
2025-01-10T13:49:05.4517168Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fc6e0>
2025-01-10T13:49:05.4517335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4517421Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4517425Z 
2025-01-10T13:49:05.4517562Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4517671Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4517757Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4517824Z         try:
2025-01-10T13:49:05.4517966Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4518043Z         except KeyError:
2025-01-10T13:49:05.4518183Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4518253Z     
2025-01-10T13:49:05.4518342Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4518436Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4518522Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4518660Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4518741Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4518833Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4518939Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4518943Z 
2025-01-10T13:49:05.4519069Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4519179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4519183Z 
2025-01-10T13:49:05.4519317Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4519402Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4519506Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4519590Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4519727Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4519916Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4520017Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4520097Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4520167Z err_msg = None
2025-01-10T13:49:05.4520171Z 
2025-01-10T13:49:05.4520281Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4520357Z         if err_msg is None:
2025-01-10T13:49:05.4520456Z             if left.shape != right.shape:
2025-01-10T13:49:05.4520541Z                 raise_assert_detail(
2025-01-10T13:49:05.4520679Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4520752Z                 )
2025-01-10T13:49:05.4520817Z     
2025-01-10T13:49:05.4520893Z             diff = 0
2025-01-10T13:49:05.4521077Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4521171Z                 # count up differences
2025-01-10T13:49:05.4521341Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4521419Z                     diff += 1
2025-01-10T13:49:05.4521484Z     
2025-01-10T13:49:05.4521573Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4521704Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4521875Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4521973Z E           AssertionError: Series are different
2025-01-10T13:49:05.4522047Z E           
2025-01-10T13:49:05.4522149Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4522522Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4522901Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4523281Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4523289Z 
2025-01-10T13:49:05.4523590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4524032Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-10T13:49:05.4524038Z 
2025-01-10T13:49:05.4524163Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4524292Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4524390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4524518Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4524649Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4524740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4524817Z err_msg = None
2025-01-10T13:49:05.4524965Z 
2025-01-10T13:49:05.4525074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4525159Z         if err_msg is None:
2025-01-10T13:49:05.4525249Z             if left.shape != right.shape:
2025-01-10T13:49:05.4525334Z                 raise_assert_detail(
2025-01-10T13:49:05.4525471Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4525543Z                 )
2025-01-10T13:49:05.4525611Z     
2025-01-10T13:49:05.4525680Z             diff = 0
2025-01-10T13:49:05.4525791Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4525873Z                 # count up differences
2025-01-10T13:49:05.4526049Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4526123Z                     diff += 1
2025-01-10T13:49:05.4526298Z     
2025-01-10T13:49:05.4526384Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4526519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4526689Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4526803Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4526871Z E           
2025-01-10T13:49:05.4526987Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4527251Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4527514Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4527522Z 
2025-01-10T13:49:05.4527820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4527825Z 
2025-01-10T13:49:05.4527993Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4528002Z 
2025-01-10T13:49:05.4528223Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fc920>
2025-01-10T13:49:05.4528426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>, attr = 'nu'
2025-01-10T13:49:05.4528430Z 
2025-01-10T13:49:05.4528564Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4528681Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4528761Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4528837Z         try:
2025-01-10T13:49:05.4528975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4529063Z         except KeyError:
2025-01-10T13:49:05.4529199Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4529271Z     
2025-01-10T13:49:05.4529353Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4529448Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4529539Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4529669Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4529757Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4529845Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4529956Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4529960Z 
2025-01-10T13:49:05.4530081Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4530200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4530343Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4530513Z     ???
2025-01-10T13:49:05.4530620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4530624Z 
2025-01-10T13:49:05.4530695Z >   ???
2025-01-10T13:49:05.4530826Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4530891Z E   
2025-01-10T13:49:05.4531021Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4531129Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4531202Z E          ...
2025-01-10T13:49:05.4531287Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4531418Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4531526Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4531598Z E          ...
2025-01-10T13:49:05.4531754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4531883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4531988Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4531992Z 
2025-01-10T13:49:05.4532084Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4532292Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-10T13:49:05.4532296Z 
2025-01-10T13:49:05.4532419Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4532547Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4532639Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4532773Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4532892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4532988Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4533059Z err_msg = None
2025-01-10T13:49:05.4533066Z 
2025-01-10T13:49:05.4533178Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4533261Z         if err_msg is None:
2025-01-10T13:49:05.4533350Z             if left.shape != right.shape:
2025-01-10T13:49:05.4533435Z                 raise_assert_detail(
2025-01-10T13:49:05.4533573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4533764Z                 )
2025-01-10T13:49:05.4533832Z     
2025-01-10T13:49:05.4533906Z             diff = 0
2025-01-10T13:49:05.4534013Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4534102Z                 # count up differences
2025-01-10T13:49:05.4534269Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4534347Z                     diff += 1
2025-01-10T13:49:05.4534414Z     
2025-01-10T13:49:05.4534513Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4534644Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4534821Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4534934Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4535003Z E           
2025-01-10T13:49:05.4535115Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4535375Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4535641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4535766Z 
2025-01-10T13:49:05.4536075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4536080Z 
2025-01-10T13:49:05.4536244Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4536249Z 
2025-01-10T13:49:05.4536477Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fc9e0>
2025-01-10T13:49:05.4536640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4536723Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4536728Z 
2025-01-10T13:49:05.4536860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4536974Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4537153Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4537228Z         try:
2025-01-10T13:49:05.4537368Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4537450Z         except KeyError:
2025-01-10T13:49:05.4537590Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4537655Z     
2025-01-10T13:49:05.4537741Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4537830Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4537923Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4538049Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4538136Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4538221Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4538331Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4538339Z 
2025-01-10T13:49:05.4538462Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4538580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4538729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4538799Z     ???
2025-01-10T13:49:05.4538915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4538919Z 
2025-01-10T13:49:05.4538984Z >   ???
2025-01-10T13:49:05.4539113Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4539179Z E   
2025-01-10T13:49:05.4539307Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4539415Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4539491Z E          ...
2025-01-10T13:49:05.4539576Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4539706Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4539815Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4539892Z E          ...
2025-01-10T13:49:05.4539982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4540104Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4540214Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4540218Z 
2025-01-10T13:49:05.4540306Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4540508Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-10T13:49:05.4540512Z 
2025-01-10T13:49:05.4540635Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4540763Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4540855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4540989Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4541116Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4541206Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4541282Z err_msg = None
2025-01-10T13:49:05.4541375Z 
2025-01-10T13:49:05.4541485Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4541568Z         if err_msg is None:
2025-01-10T13:49:05.4541656Z             if left.shape != right.shape:
2025-01-10T13:49:05.4541739Z                 raise_assert_detail(
2025-01-10T13:49:05.4541877Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4541950Z                 )
2025-01-10T13:49:05.4542015Z     
2025-01-10T13:49:05.4542088Z             diff = 0
2025-01-10T13:49:05.4542196Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4542284Z                 # count up differences
2025-01-10T13:49:05.4542456Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4542529Z                     diff += 1
2025-01-10T13:49:05.4542704Z     
2025-01-10T13:49:05.4542793Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4542929Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4543098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4543224Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4543297Z E           
2025-01-10T13:49:05.4543410Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4543777Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4544047Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4544054Z 
2025-01-10T13:49:05.4544354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4544358Z 
2025-01-10T13:49:05.4544520Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4544524Z 
2025-01-10T13:49:05.4544749Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fcaa0>
2025-01-10T13:49:05.4544955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>, attr = 'f_lu'
2025-01-10T13:49:05.4544959Z 
2025-01-10T13:49:05.4545093Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4545208Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4545288Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4545365Z         try:
2025-01-10T13:49:05.4545500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4545584Z         except KeyError:
2025-01-10T13:49:05.4545717Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4545788Z     
2025-01-10T13:49:05.4545871Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4545964Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4546049Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4546182Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4546272Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4546356Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4546467Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4546471Z 
2025-01-10T13:49:05.4546591Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4546708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4546848Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4547056Z     ???
2025-01-10T13:49:05.4547165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4547169Z 
2025-01-10T13:49:05.4547240Z >   ???
2025-01-10T13:49:05.4547365Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4547437Z E   
2025-01-10T13:49:05.4547562Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4547673Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4547748Z E          ...
2025-01-10T13:49:05.4547830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4547957Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4548064Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4548136Z E          ...
2025-01-10T13:49:05.4548320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4548449Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4548552Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4548556Z 
2025-01-10T13:49:05.4548647Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4548887Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-10T13:49:05.4548897Z 
2025-01-10T13:49:05.4549115Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fd0a0>
2025-01-10T13:49:05.4549281Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4549369Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:05.4549374Z 
2025-01-10T13:49:05.4549508Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4549617Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4549701Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4549771Z         try:
2025-01-10T13:49:05.4549910Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4549988Z         except KeyError:
2025-01-10T13:49:05.4550128Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4550193Z     
2025-01-10T13:49:05.4550279Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4550377Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4550463Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4550593Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4550675Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4550766Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4550868Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4550942Z             else:
2025-01-10T13:49:05.4551034Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4551141Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4551148Z 
2025-01-10T13:49:05.4551270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4551383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4551520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4551591Z     ???
2025-01-10T13:49:05.4551700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4551705Z 
2025-01-10T13:49:05.4551769Z >   ???
2025-01-10T13:49:05.4551954Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4552020Z E   
2025-01-10T13:49:05.4552189Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:05.4552560Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4557771Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:49:05.4562684Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:05.4562870Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:05.4562874Z 
2025-01-10T13:49:05.4562961Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4563291Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-10T13:49:05.4563296Z 
2025-01-10T13:49:05.4563426Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4563553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4563776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4563911Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4564037Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4564126Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4564204Z err_msg = None
2025-01-10T13:49:05.4564208Z 
2025-01-10T13:49:05.4564427Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4564513Z         if err_msg is None:
2025-01-10T13:49:05.4564608Z             if left.shape != right.shape:
2025-01-10T13:49:05.4564700Z                 raise_assert_detail(
2025-01-10T13:49:05.4564845Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4564913Z                 )
2025-01-10T13:49:05.4564983Z     
2025-01-10T13:49:05.4565053Z             diff = 0
2025-01-10T13:49:05.4565164Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4565247Z                 # count up differences
2025-01-10T13:49:05.4565418Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4565493Z                     diff += 1
2025-01-10T13:49:05.4565564Z     
2025-01-10T13:49:05.4565649Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4565788Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4565957Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4566075Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4566149Z E           
2025-01-10T13:49:05.4566257Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4566521Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4566783Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4566788Z 
2025-01-10T13:49:05.4567091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4567099Z 
2025-01-10T13:49:05.4567271Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4567275Z 
2025-01-10T13:49:05.4567493Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fd160>
2025-01-10T13:49:05.4567664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4567749Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:05.4567752Z 
2025-01-10T13:49:05.4567891Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4568004Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4568088Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4568156Z         try:
2025-01-10T13:49:05.4568298Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4568385Z         except KeyError:
2025-01-10T13:49:05.4568521Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4568711Z     
2025-01-10T13:49:05.4568794Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4568896Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4568981Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4569114Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4569194Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4569290Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4569396Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4569472Z             else:
2025-01-10T13:49:05.4569563Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4569674Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4569679Z 
2025-01-10T13:49:05.4569806Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4570010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4570160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4570231Z     ???
2025-01-10T13:49:05.4570343Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4570347Z 
2025-01-10T13:49:05.4570411Z >   ???
2025-01-10T13:49:05.4570544Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4570609Z E   
2025-01-10T13:49:05.4570743Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4570854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4570929Z E          ...
2025-01-10T13:49:05.4571015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4571145Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4571260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4571334Z E          ...
2025-01-10T13:49:05.4571425Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4571545Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4571658Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4571662Z 
2025-01-10T13:49:05.4571746Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4571950Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-10T13:49:05.4571954Z 
2025-01-10T13:49:05.4572081Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4572210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4572302Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4572441Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4572570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4572661Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4572740Z err_msg = None
2025-01-10T13:49:05.4572744Z 
2025-01-10T13:49:05.4572852Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4572935Z         if err_msg is None:
2025-01-10T13:49:05.4573026Z             if left.shape != right.shape:
2025-01-10T13:49:05.4573114Z                 raise_assert_detail(
2025-01-10T13:49:05.4573254Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4573327Z                 )
2025-01-10T13:49:05.4573391Z     
2025-01-10T13:49:05.4573465Z             diff = 0
2025-01-10T13:49:05.4573689Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4573784Z                 # count up differences
2025-01-10T13:49:05.4573955Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4574034Z                     diff += 1
2025-01-10T13:49:05.4574104Z     
2025-01-10T13:49:05.4574189Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4574465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4574634Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4574747Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4574818Z E           
2025-01-10T13:49:05.4574930Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4575188Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4575556Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4575566Z 
2025-01-10T13:49:05.4575872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4575877Z 
2025-01-10T13:49:05.4576042Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4576047Z 
2025-01-10T13:49:05.4576272Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fd220>
2025-01-10T13:49:05.4576445Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4576522Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4576526Z 
2025-01-10T13:49:05.4576671Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4576788Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4576875Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4576942Z         try:
2025-01-10T13:49:05.4577083Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4577164Z         except KeyError:
2025-01-10T13:49:05.4577303Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4577368Z     
2025-01-10T13:49:05.4577459Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4577549Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4577642Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4577776Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4577858Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4577948Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4578058Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4578132Z             else:
2025-01-10T13:49:05.4578226Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4578336Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4578343Z 
2025-01-10T13:49:05.4578467Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4578583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4578732Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4578803Z     ???
2025-01-10T13:49:05.4578911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4578920Z 
2025-01-10T13:49:05.4578987Z >   ???
2025-01-10T13:49:05.4579116Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4579185Z E   
2025-01-10T13:49:05.4579314Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4579424Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4579496Z E          ...
2025-01-10T13:49:05.4579584Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4579713Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4579916Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4579988Z E          ...
2025-01-10T13:49:05.4580069Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4580196Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4580298Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4580307Z 
2025-01-10T13:49:05.4580395Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4580596Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-10T13:49:05.4580600Z 
2025-01-10T13:49:05.4580726Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4580858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4581024Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4581163Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4581286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4581378Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4581450Z err_msg = None
2025-01-10T13:49:05.4581459Z 
2025-01-10T13:49:05.4581567Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4581649Z         if err_msg is None:
2025-01-10T13:49:05.4581740Z             if left.shape != right.shape:
2025-01-10T13:49:05.4581827Z                 raise_assert_detail(
2025-01-10T13:49:05.4581969Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4582042Z                 )
2025-01-10T13:49:05.4582107Z     
2025-01-10T13:49:05.4582183Z             diff = 0
2025-01-10T13:49:05.4582292Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4582383Z                 # count up differences
2025-01-10T13:49:05.4582548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4582631Z                     diff += 1
2025-01-10T13:49:05.4582697Z     
2025-01-10T13:49:05.4582788Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4582925Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4583094Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4583210Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4583280Z E           
2025-01-10T13:49:05.4583391Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4583768Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4584037Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4584041Z 
2025-01-10T13:49:05.4584344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4584348Z 
2025-01-10T13:49:05.4584515Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4584519Z 
2025-01-10T13:49:05.4584746Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fd2e0>
2025-01-10T13:49:05.4584913Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4584997Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4585001Z 
2025-01-10T13:49:05.4585134Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4585369Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4585457Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4585524Z         try:
2025-01-10T13:49:05.4585665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4585744Z         except KeyError:
2025-01-10T13:49:05.4585884Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4585949Z     
2025-01-10T13:49:05.4586035Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4586124Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4586214Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4586347Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4586433Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4586624Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4586737Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4586809Z             else:
2025-01-10T13:49:05.4586906Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4587014Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4587018Z 
2025-01-10T13:49:05.4587140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4587257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4587396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4587468Z     ???
2025-01-10T13:49:05.4587575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4587580Z 
2025-01-10T13:49:05.4587654Z >   ???
2025-01-10T13:49:05.4587778Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4587852Z E   
2025-01-10T13:49:05.4587977Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4588091Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4588168Z E          ...
2025-01-10T13:49:05.4588252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4588383Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4588490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4588564Z E          ...
2025-01-10T13:49:05.4588646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4588775Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4588876Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4588880Z 
2025-01-10T13:49:05.4588970Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4589165Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-10T13:49:05.4589169Z 
2025-01-10T13:49:05.4589305Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4589436Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4589531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4589666Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4589787Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4589883Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4589956Z err_msg = None
2025-01-10T13:49:05.4589960Z 
2025-01-10T13:49:05.4590070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4590148Z         if err_msg is None:
2025-01-10T13:49:05.4590247Z             if left.shape != right.shape:
2025-01-10T13:49:05.4590331Z                 raise_assert_detail(
2025-01-10T13:49:05.4590485Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4590557Z                 )
2025-01-10T13:49:05.4590621Z     
2025-01-10T13:49:05.4590793Z             diff = 0
2025-01-10T13:49:05.4590901Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4590991Z                 # count up differences
2025-01-10T13:49:05.4591157Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4591238Z                     diff += 1
2025-01-10T13:49:05.4591303Z     
2025-01-10T13:49:05.4591392Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4591524Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4591696Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4591806Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4591879Z E           
2025-01-10T13:49:05.4592079Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4592347Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4592612Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4592617Z 
2025-01-10T13:49:05.4592916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4592920Z 
2025-01-10T13:49:05.4593089Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4593095Z 
2025-01-10T13:49:05.4593321Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fd460>
2025-01-10T13:49:05.4593488Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bc883fad0>
2025-01-10T13:49:05.4593565Z attr = 'j_blues'
2025-01-10T13:49:05.4593569Z 
2025-01-10T13:49:05.4593796Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4593914Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4593996Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4594068Z         try:
2025-01-10T13:49:05.4594204Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4594287Z         except KeyError:
2025-01-10T13:49:05.4594421Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4594494Z     
2025-01-10T13:49:05.4594583Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4594671Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4594762Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4594894Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4594983Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4595069Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4595183Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4595252Z             else:
2025-01-10T13:49:05.4595350Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4595454Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4595458Z 
2025-01-10T13:49:05.4595589Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4595697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4595844Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4595915Z     ???
2025-01-10T13:49:05.4596024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4596027Z 
2025-01-10T13:49:05.4596098Z >   ???
2025-01-10T13:49:05.4596225Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4596428Z E   
2025-01-10T13:49:05.4596551Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4596663Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4596732Z E          ...
2025-01-10T13:49:05.4596821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4596947Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4597059Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4597127Z E          ...
2025-01-10T13:49:05.4597215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4597341Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4597441Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4597444Z 
2025-01-10T13:49:05.4597636Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4597860Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-10T13:49:05.4597867Z 
2025-01-10T13:49:05.4597998Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4598123Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4598219Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4598347Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4598469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4598564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4598639Z err_msg = None
2025-01-10T13:49:05.4598643Z 
2025-01-10T13:49:05.4598755Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4598835Z         if err_msg is None:
2025-01-10T13:49:05.4598930Z             if left.shape != right.shape:
2025-01-10T13:49:05.4599011Z                 raise_assert_detail(
2025-01-10T13:49:05.4599161Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4599228Z                 )
2025-01-10T13:49:05.4599299Z     
2025-01-10T13:49:05.4599369Z             diff = 0
2025-01-10T13:49:05.4599484Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4599568Z                 # count up differences
2025-01-10T13:49:05.4599740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4599820Z                     diff += 1
2025-01-10T13:49:05.4599889Z     
2025-01-10T13:49:05.4599979Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4600111Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4600285Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4600393Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4600469Z E           
2025-01-10T13:49:05.4600578Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4600841Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4601106Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4601110Z 
2025-01-10T13:49:05.4601407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4601411Z 
2025-01-10T13:49:05.4601698Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4601702Z 
2025-01-10T13:49:05.4601923Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe1e0>
2025-01-10T13:49:05.4602089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4602159Z attr = 'lines'
2025-01-10T13:49:05.4602168Z 
2025-01-10T13:49:05.4602299Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4602417Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4602498Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4602572Z         try:
2025-01-10T13:49:05.4602711Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4602793Z         except KeyError:
2025-01-10T13:49:05.4603004Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4603077Z     
2025-01-10T13:49:05.4603159Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4603258Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4603342Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4603474Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4603556Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4603835Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4603971Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4604040Z             else:
2025-01-10T13:49:05.4604137Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4604241Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4604245Z 
2025-01-10T13:49:05.4604387Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4604496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4604650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4604718Z     ???
2025-01-10T13:49:05.4604840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4604844Z 
2025-01-10T13:49:05.4604911Z >   ???
2025-01-10T13:49:05.4605046Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4605120Z E   
2025-01-10T13:49:05.4605245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4605360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4605429Z E          ...
2025-01-10T13:49:05.4605519Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4605645Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4605761Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4605832Z E          ...
2025-01-10T13:49:05.4605924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4606046Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4606152Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4606159Z 
2025-01-10T13:49:05.4606245Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4606474Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-10T13:49:05.4606478Z 
2025-01-10T13:49:05.4606696Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe2a0>
2025-01-10T13:49:05.4615256Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4615353Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4615359Z 
2025-01-10T13:49:05.4615514Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4615647Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4615731Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4615806Z         try:
2025-01-10T13:49:05.4615969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4616056Z         except KeyError:
2025-01-10T13:49:05.4616376Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4616453Z     
2025-01-10T13:49:05.4616538Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4616635Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4616722Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4616870Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4616960Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4617053Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4617175Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4617179Z 
2025-01-10T13:49:05.4617307Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4617429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4617433Z 
2025-01-10T13:49:05.4617679Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4617774Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4617888Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4617976Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4618126Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4618207Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4618315Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4618394Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4618474Z err_msg = None
2025-01-10T13:49:05.4618478Z 
2025-01-10T13:49:05.4618595Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4618678Z         if err_msg is None:
2025-01-10T13:49:05.4618772Z             if left.shape != right.shape:
2025-01-10T13:49:05.4618863Z                 raise_assert_detail(
2025-01-10T13:49:05.4619013Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4619092Z                 )
2025-01-10T13:49:05.4619161Z     
2025-01-10T13:49:05.4619237Z             diff = 0
2025-01-10T13:49:05.4619357Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4619445Z                 # count up differences
2025-01-10T13:49:05.4619626Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4619700Z                     diff += 1
2025-01-10T13:49:05.4619771Z     
2025-01-10T13:49:05.4619859Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4620000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4620172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4620282Z E           AssertionError: Series are different
2025-01-10T13:49:05.4620354Z E           
2025-01-10T13:49:05.4620460Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4620840Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4621185Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4621523Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4621651Z 
2025-01-10T13:49:05.4621978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4622205Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-10T13:49:05.4622210Z 
2025-01-10T13:49:05.4622436Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe360>
2025-01-10T13:49:05.4622602Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4622694Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4622698Z 
2025-01-10T13:49:05.4622911Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4623033Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4623114Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4623191Z         try:
2025-01-10T13:49:05.4623338Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4623416Z         except KeyError:
2025-01-10T13:49:05.4623558Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4623779Z     
2025-01-10T13:49:05.4623873Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4623966Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4624059Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4624191Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4624282Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4624369Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4624483Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4624493Z 
2025-01-10T13:49:05.4624620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4624742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4624750Z 
2025-01-10T13:49:05.4624889Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4624974Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4625084Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4625161Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4625303Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4625382Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4625489Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4625562Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4625641Z err_msg = None
2025-01-10T13:49:05.4625647Z 
2025-01-10T13:49:05.4625761Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4625839Z         if err_msg is None:
2025-01-10T13:49:05.4625939Z             if left.shape != right.shape:
2025-01-10T13:49:05.4626020Z                 raise_assert_detail(
2025-01-10T13:49:05.4626169Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4626238Z                 )
2025-01-10T13:49:05.4626308Z     
2025-01-10T13:49:05.4626380Z             diff = 0
2025-01-10T13:49:05.4626497Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4626584Z                 # count up differences
2025-01-10T13:49:05.4626762Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4626836Z                     diff += 1
2025-01-10T13:49:05.4626909Z     
2025-01-10T13:49:05.4626993Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4627135Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4627310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4627540Z E           AssertionError: Series are different
2025-01-10T13:49:05.4627614Z E           
2025-01-10T13:49:05.4627713Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4628090Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4628559Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4628944Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4628949Z 
2025-01-10T13:49:05.4629262Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4629451Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-10T13:49:05.4629455Z 
2025-01-10T13:49:05.4629590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4629723Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4629822Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4629958Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4630077Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4630172Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4630245Z err_msg = None
2025-01-10T13:49:05.4630249Z 
2025-01-10T13:49:05.4630360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4630439Z         if err_msg is None:
2025-01-10T13:49:05.4630534Z             if left.shape != right.shape:
2025-01-10T13:49:05.4630615Z                 raise_assert_detail(
2025-01-10T13:49:05.4630764Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4630838Z                 )
2025-01-10T13:49:05.4630910Z     
2025-01-10T13:49:05.4630984Z             diff = 0
2025-01-10T13:49:05.4631093Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4631185Z                 # count up differences
2025-01-10T13:49:05.4631353Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4631432Z                     diff += 1
2025-01-10T13:49:05.4631499Z     
2025-01-10T13:49:05.4631588Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4631717Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4631887Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4631996Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4632070Z E           
2025-01-10T13:49:05.4632188Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4632448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4632800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4632805Z 
2025-01-10T13:49:05.4633097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4633106Z 
2025-01-10T13:49:05.4633341Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4633346Z 
2025-01-10T13:49:05.4633573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe5a0>
2025-01-10T13:49:05.4633875Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>, attr = 'nu'
2025-01-10T13:49:05.4633880Z 
2025-01-10T13:49:05.4634020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4634133Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4634222Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4634289Z         try:
2025-01-10T13:49:05.4634429Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4634508Z         except KeyError:
2025-01-10T13:49:05.4634650Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4634721Z     
2025-01-10T13:49:05.4634804Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4634899Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4634989Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4635122Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4635208Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4635299Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4635405Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4635409Z 
2025-01-10T13:49:05.4635536Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4635646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4635796Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4635863Z     ???
2025-01-10T13:49:05.4635974Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4635978Z 
2025-01-10T13:49:05.4636048Z >   ???
2025-01-10T13:49:05.4636176Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4636247Z E   
2025-01-10T13:49:05.4636376Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4636495Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4636567Z E          ...
2025-01-10T13:49:05.4636660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4636791Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4636906Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4636975Z E          ...
2025-01-10T13:49:05.4637062Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4637182Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4637292Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4637296Z 
2025-01-10T13:49:05.4637390Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4637593Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-10T13:49:05.4637596Z 
2025-01-10T13:49:05.4637734Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4637862Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4638118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4638248Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4638373Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4638465Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4638543Z err_msg = None
2025-01-10T13:49:05.4638547Z 
2025-01-10T13:49:05.4638660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4638738Z         if err_msg is None:
2025-01-10T13:49:05.4638835Z             if left.shape != right.shape:
2025-01-10T13:49:05.4638916Z                 raise_assert_detail(
2025-01-10T13:49:05.4639167Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4639239Z                 )
2025-01-10T13:49:05.4639311Z     
2025-01-10T13:49:05.4639385Z             diff = 0
2025-01-10T13:49:05.4639500Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4639585Z                 # count up differences
2025-01-10T13:49:05.4639757Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4639830Z                     diff += 1
2025-01-10T13:49:05.4639902Z     
2025-01-10T13:49:05.4639991Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4640124Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4640296Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4640413Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4640488Z E           
2025-01-10T13:49:05.4640600Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4640870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4641133Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4641143Z 
2025-01-10T13:49:05.4641446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4641450Z 
2025-01-10T13:49:05.4641627Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4641632Z 
2025-01-10T13:49:05.4641857Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe660>
2025-01-10T13:49:05.4642030Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4642107Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4642111Z 
2025-01-10T13:49:05.4642250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4642367Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4642449Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4642522Z         try:
2025-01-10T13:49:05.4642658Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4642742Z         except KeyError:
2025-01-10T13:49:05.4642878Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4642951Z     
2025-01-10T13:49:05.4643034Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4643133Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4643221Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4643356Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4643552Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4643775Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4643886Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4643895Z 
2025-01-10T13:49:05.4644018Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4644136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4644279Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4644351Z     ???
2025-01-10T13:49:05.4644460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4644464Z 
2025-01-10T13:49:05.4644534Z >   ???
2025-01-10T13:49:05.4644659Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4644732Z E   
2025-01-10T13:49:05.4644971Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4645087Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4645160Z E          ...
2025-01-10T13:49:05.4645250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4645380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4645490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4645563Z E          ...
2025-01-10T13:49:05.4645645Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4645771Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4645872Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4645876Z 
2025-01-10T13:49:05.4645967Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4646171Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-10T13:49:05.4646175Z 
2025-01-10T13:49:05.4646314Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4646443Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4646547Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4646683Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4646804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4646900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4646973Z err_msg = None
2025-01-10T13:49:05.4646977Z 
2025-01-10T13:49:05.4647091Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4647169Z         if err_msg is None:
2025-01-10T13:49:05.4647264Z             if left.shape != right.shape:
2025-01-10T13:49:05.4647348Z                 raise_assert_detail(
2025-01-10T13:49:05.4647499Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4647568Z                 )
2025-01-10T13:49:05.4647642Z     
2025-01-10T13:49:05.4647716Z             diff = 0
2025-01-10T13:49:05.4647828Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4647918Z                 # count up differences
2025-01-10T13:49:05.4648087Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4648166Z                     diff += 1
2025-01-10T13:49:05.4648232Z     
2025-01-10T13:49:05.4648323Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4648459Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4648636Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4648745Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4648818Z E           
2025-01-10T13:49:05.4648930Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4649197Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4649584Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4649589Z 
2025-01-10T13:49:05.4649893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4649897Z 
2025-01-10T13:49:05.4650142Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4650147Z 
2025-01-10T13:49:05.4650377Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fe720>
2025-01-10T13:49:05.4650580Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>, attr = 'f_lu'
2025-01-10T13:49:05.4650585Z 
2025-01-10T13:49:05.4650725Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4650843Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4650927Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4650996Z         try:
2025-01-10T13:49:05.4651140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4651218Z         except KeyError:
2025-01-10T13:49:05.4651356Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4651422Z     
2025-01-10T13:49:05.4651513Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4651605Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4651704Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4651839Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4651924Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4652015Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4652127Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4652131Z 
2025-01-10T13:49:05.4652258Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4652369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4652520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4652587Z     ???
2025-01-10T13:49:05.4652698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4652702Z 
2025-01-10T13:49:05.4652769Z >   ???
2025-01-10T13:49:05.4652901Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4652972Z E   
2025-01-10T13:49:05.4653099Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4653214Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4653287Z E          ...
2025-01-10T13:49:05.4653379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4653506Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4653730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4653800Z E          ...
2025-01-10T13:49:05.4653888Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4654011Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4654118Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4654123Z 
2025-01-10T13:49:05.4654208Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4654412Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-10T13:49:05.4654416Z 
2025-01-10T13:49:05.4654548Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4654674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4654899Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4655029Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4655153Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4655243Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4655320Z err_msg = None
2025-01-10T13:49:05.4655324Z 
2025-01-10T13:49:05.4655440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4655517Z         if err_msg is None:
2025-01-10T13:49:05.4655613Z             if left.shape != right.shape:
2025-01-10T13:49:05.4655695Z                 raise_assert_detail(
2025-01-10T13:49:05.4655944Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4656016Z                 )
2025-01-10T13:49:05.4656094Z     
2025-01-10T13:49:05.4656164Z             diff = 0
2025-01-10T13:49:05.4656277Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4656361Z                 # count up differences
2025-01-10T13:49:05.4656532Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4656606Z                     diff += 1
2025-01-10T13:49:05.4656676Z     
2025-01-10T13:49:05.4656762Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4656900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4657071Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4657180Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4657253Z E           
2025-01-10T13:49:05.4657366Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4657627Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4657889Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4657898Z 
2025-01-10T13:49:05.4658196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4658200Z 
2025-01-10T13:49:05.4658374Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4658378Z 
2025-01-10T13:49:05.4658598Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88feea0>
2025-01-10T13:49:05.4658772Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4658851Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4658855Z 
2025-01-10T13:49:05.4658997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4659109Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4659197Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4659269Z         try:
2025-01-10T13:49:05.4659408Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4659490Z         except KeyError:
2025-01-10T13:49:05.4659628Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4659699Z     
2025-01-10T13:49:05.4659783Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4659881Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4659967Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4660101Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4660273Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4660364Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4660470Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4660544Z             else:
2025-01-10T13:49:05.4660635Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4660743Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4660747Z 
2025-01-10T13:49:05.4660875Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4660987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4661133Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4661202Z     ???
2025-01-10T13:49:05.4661408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4661413Z 
2025-01-10T13:49:05.4661481Z >   ???
2025-01-10T13:49:05.4661609Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4661678Z E   
2025-01-10T13:49:05.4661809Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4661916Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4661990Z E          ...
2025-01-10T13:49:05.4662075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4662205Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4662319Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4662386Z E          ...
2025-01-10T13:49:05.4662472Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4662590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4662696Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4662703Z 
2025-01-10T13:49:05.4662792Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4662991Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-10T13:49:05.4662999Z 
2025-01-10T13:49:05.4663125Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4663256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4663354Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4663482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4663735Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4663829Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4663907Z err_msg = None
2025-01-10T13:49:05.4663911Z 
2025-01-10T13:49:05.4664022Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4664107Z         if err_msg is None:
2025-01-10T13:49:05.4664197Z             if left.shape != right.shape:
2025-01-10T13:49:05.4664285Z                 raise_assert_detail(
2025-01-10T13:49:05.4664422Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4664495Z                 )
2025-01-10T13:49:05.4664565Z     
2025-01-10T13:49:05.4664636Z             diff = 0
2025-01-10T13:49:05.4664748Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4664829Z                 # count up differences
2025-01-10T13:49:05.4664999Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4665073Z                     diff += 1
2025-01-10T13:49:05.4665143Z     
2025-01-10T13:49:05.4665227Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4665367Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4665540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4665653Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4665897Z E           
2025-01-10T13:49:05.4666009Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4666272Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4666531Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4666536Z 
2025-01-10T13:49:05.4666938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4666947Z 
2025-01-10T13:49:05.4667117Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4667128Z 
2025-01-10T13:49:05.4667349Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fef60>
2025-01-10T13:49:05.4667516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4667591Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4667595Z 
2025-01-10T13:49:05.4667732Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4667842Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4667927Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4667995Z         try:
2025-01-10T13:49:05.4668135Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4668213Z         except KeyError:
2025-01-10T13:49:05.4668355Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4668424Z     
2025-01-10T13:49:05.4668513Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4668612Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4668699Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4668831Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4668913Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4669003Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4669108Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4669181Z             else:
2025-01-10T13:49:05.4669277Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4669386Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4669391Z 
2025-01-10T13:49:05.4669514Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4669631Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4669770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4669846Z     ???
2025-01-10T13:49:05.4669960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4669964Z 
2025-01-10T13:49:05.4670030Z >   ???
2025-01-10T13:49:05.4670161Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4670227Z E   
2025-01-10T13:49:05.4670358Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4670464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4670537Z E          ...
2025-01-10T13:49:05.4670622Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4670752Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4670861Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4670938Z E          ...
2025-01-10T13:49:05.4671023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4671149Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4671346Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4671350Z 
2025-01-10T13:49:05.4671435Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4671631Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-10T13:49:05.4671635Z 
2025-01-10T13:49:05.4671759Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4671889Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4671982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4672117Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4672237Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4672408Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4672488Z err_msg = None
2025-01-10T13:49:05.4672495Z 
2025-01-10T13:49:05.4672602Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4672683Z         if err_msg is None:
2025-01-10T13:49:05.4672774Z             if left.shape != right.shape:
2025-01-10T13:49:05.4672861Z                 raise_assert_detail(
2025-01-10T13:49:05.4672999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4673072Z                 )
2025-01-10T13:49:05.4673137Z     
2025-01-10T13:49:05.4673211Z             diff = 0
2025-01-10T13:49:05.4673319Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4673406Z                 # count up differences
2025-01-10T13:49:05.4673727Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4673815Z                     diff += 1
2025-01-10T13:49:05.4673889Z     
2025-01-10T13:49:05.4673973Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4674110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4674280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4674391Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4674459Z E           
2025-01-10T13:49:05.4674570Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4674828Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4675095Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4675103Z 
2025-01-10T13:49:05.4675407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4675412Z 
2025-01-10T13:49:05.4675576Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4675580Z 
2025-01-10T13:49:05.4675806Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ff0e0>
2025-01-10T13:49:05.4675969Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bf8597050>
2025-01-10T13:49:05.4676046Z attr = 'j_blues'
2025-01-10T13:49:05.4676050Z 
2025-01-10T13:49:05.4676186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4676296Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4676384Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4676453Z         try:
2025-01-10T13:49:05.4676594Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4676790Z         except KeyError:
2025-01-10T13:49:05.4676931Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4676998Z     
2025-01-10T13:49:05.4677086Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4677175Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4677265Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4677392Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4677479Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4677566Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4677678Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4677751Z             else:
2025-01-10T13:49:05.4677842Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4678056Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4678061Z 
2025-01-10T13:49:05.4678186Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4678305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4678445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4678516Z     ???
2025-01-10T13:49:05.4678625Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4678629Z 
2025-01-10T13:49:05.4678700Z >   ???
2025-01-10T13:49:05.4678822Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4678894Z E   
2025-01-10T13:49:05.4679025Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4679132Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4679206Z E          ...
2025-01-10T13:49:05.4679289Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4679425Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4679535Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4679616Z E          ...
2025-01-10T13:49:05.4679699Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4679826Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4679928Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4679932Z 
2025-01-10T13:49:05.4680022Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4680210Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-10T13:49:05.4680220Z 
2025-01-10T13:49:05.4680344Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4680471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4680562Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4680700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4680821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4680919Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4680991Z err_msg = None
2025-01-10T13:49:05.4680995Z 
2025-01-10T13:49:05.4681105Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4681182Z         if err_msg is None:
2025-01-10T13:49:05.4681276Z             if left.shape != right.shape:
2025-01-10T13:49:05.4681364Z                 raise_assert_detail(
2025-01-10T13:49:05.4681503Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4681576Z                 )
2025-01-10T13:49:05.4681642Z     
2025-01-10T13:49:05.4681719Z             diff = 0
2025-01-10T13:49:05.4681827Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4681919Z                 # count up differences
2025-01-10T13:49:05.4682085Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4682255Z                     diff += 1
2025-01-10T13:49:05.4682321Z     
2025-01-10T13:49:05.4682411Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4682544Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4682715Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4682825Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4682900Z E           
2025-01-10T13:49:05.4683012Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4683362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4683753Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4683762Z 
2025-01-10T13:49:05.4684061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4684070Z 
2025-01-10T13:49:05.4684234Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4684238Z 
2025-01-10T13:49:05.4684466Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88ffe60>
2025-01-10T13:49:05.4684628Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4684705Z attr = 'lines'
2025-01-10T13:49:05.4684711Z 
2025-01-10T13:49:05.4684849Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4684964Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4685047Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4685120Z         try:
2025-01-10T13:49:05.4685256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4685338Z         except KeyError:
2025-01-10T13:49:05.4685478Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4685543Z     
2025-01-10T13:49:05.4685630Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4685719Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4685809Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4685936Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4686022Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4686108Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4686221Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4686289Z             else:
2025-01-10T13:49:05.4686385Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4686490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4686494Z 
2025-01-10T13:49:05.4686620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4686736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4686876Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4686952Z     ???
2025-01-10T13:49:05.4687059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4687062Z 
2025-01-10T13:49:05.4687133Z >   ???
2025-01-10T13:49:05.4687254Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4687327Z E   
2025-01-10T13:49:05.4687454Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4687569Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4687641Z E          ...
2025-01-10T13:49:05.4687731Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4687975Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4688088Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4688162Z E          ...
2025-01-10T13:49:05.4688245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4688369Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4688470Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4688474Z 
2025-01-10T13:49:05.4688563Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4688781Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-10T13:49:05.4688785Z 
2025-01-10T13:49:05.4689008Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fff20>
2025-01-10T13:49:05.4689269Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4689362Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4689370Z 
2025-01-10T13:49:05.4689504Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4689613Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4689698Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4689766Z         try:
2025-01-10T13:49:05.4689905Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4689982Z         except KeyError:
2025-01-10T13:49:05.4690121Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4690189Z     
2025-01-10T13:49:05.4690279Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4690369Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4690459Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4690590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4690676Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4690766Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4690881Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4690885Z 
2025-01-10T13:49:05.4691015Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4691122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4691126Z 
2025-01-10T13:49:05.4691263Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4691345Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4691455Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4691531Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4691670Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4691753Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4691861Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4691948Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4692021Z err_msg = None
2025-01-10T13:49:05.4692025Z 
2025-01-10T13:49:05.4692136Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4692212Z         if err_msg is None:
2025-01-10T13:49:05.4692308Z             if left.shape != right.shape:
2025-01-10T13:49:05.4692389Z                 raise_assert_detail(
2025-01-10T13:49:05.4692532Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4692601Z                 )
2025-01-10T13:49:05.4692671Z     
2025-01-10T13:49:05.4692740Z             diff = 0
2025-01-10T13:49:05.4692852Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4692936Z                 # count up differences
2025-01-10T13:49:05.4693107Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4693182Z                     diff += 1
2025-01-10T13:49:05.4693254Z     
2025-01-10T13:49:05.4693343Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4693564Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4693836Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4693937Z E           AssertionError: Series are different
2025-01-10T13:49:05.4694011Z E           
2025-01-10T13:49:05.4694109Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4694591Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4694929Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4695261Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4695266Z 
2025-01-10T13:49:05.4695571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4695798Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-10T13:49:05.4695802Z 
2025-01-10T13:49:05.4696023Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf88fffe0>
2025-01-10T13:49:05.4696190Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4696275Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4696279Z 
2025-01-10T13:49:05.4696417Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4696529Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4696613Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4696681Z         try:
2025-01-10T13:49:05.4696823Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4696903Z         except KeyError:
2025-01-10T13:49:05.4697044Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4697109Z     
2025-01-10T13:49:05.4697199Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4697294Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4697380Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4697518Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4697599Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4697688Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4697793Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4697798Z 
2025-01-10T13:49:05.4697922Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4698033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4698037Z 
2025-01-10T13:49:05.4698173Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4698259Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4698363Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4698447Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4698584Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4698787Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4698890Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4698970Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4699041Z err_msg = None
2025-01-10T13:49:05.4699045Z 
2025-01-10T13:49:05.4699155Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4699233Z         if err_msg is None:
2025-01-10T13:49:05.4699326Z             if left.shape != right.shape:
2025-01-10T13:49:05.4699406Z                 raise_assert_detail(
2025-01-10T13:49:05.4699549Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4699622Z                 )
2025-01-10T13:49:05.4699689Z     
2025-01-10T13:49:05.4699765Z             diff = 0
2025-01-10T13:49:05.4699947Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4700038Z                 # count up differences
2025-01-10T13:49:05.4700208Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4700288Z                     diff += 1
2025-01-10T13:49:05.4700354Z     
2025-01-10T13:49:05.4700442Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4700576Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4700748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4700851Z E           AssertionError: Series are different
2025-01-10T13:49:05.4700925Z E           
2025-01-10T13:49:05.4701024Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4701399Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4701779Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4702159Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4702166Z 
2025-01-10T13:49:05.4702465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4702656Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-10T13:49:05.4702660Z 
2025-01-10T13:49:05.4702784Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4702912Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4703006Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4703143Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4703271Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4703361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4703441Z err_msg = None
2025-01-10T13:49:05.4703542Z 
2025-01-10T13:49:05.4703845Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4703944Z         if err_msg is None:
2025-01-10T13:49:05.4704037Z             if left.shape != right.shape:
2025-01-10T13:49:05.4704125Z                 raise_assert_detail(
2025-01-10T13:49:05.4704264Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4704339Z                 )
2025-01-10T13:49:05.4704404Z     
2025-01-10T13:49:05.4704478Z             diff = 0
2025-01-10T13:49:05.4704590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4704674Z                 # count up differences
2025-01-10T13:49:05.4704844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4704919Z                     diff += 1
2025-01-10T13:49:05.4705107Z     
2025-01-10T13:49:05.4705195Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4705330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4705500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4705613Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4705681Z E           
2025-01-10T13:49:05.4705793Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4706056Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4706324Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4706332Z 
2025-01-10T13:49:05.4706643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4706648Z 
2025-01-10T13:49:05.4706816Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4706820Z 
2025-01-10T13:49:05.4707046Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8924260>
2025-01-10T13:49:05.4707247Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>, attr = 'nu'
2025-01-10T13:49:05.4707251Z 
2025-01-10T13:49:05.4707383Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4707501Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4707581Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4707658Z         try:
2025-01-10T13:49:05.4707794Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4707881Z         except KeyError:
2025-01-10T13:49:05.4708014Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4708085Z     
2025-01-10T13:49:05.4708168Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4708264Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4708351Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4708484Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4708572Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4708660Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4708772Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4708776Z 
2025-01-10T13:49:05.4708898Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4709022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4709168Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4709360Z     ???
2025-01-10T13:49:05.4709469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4709473Z 
2025-01-10T13:49:05.4709548Z >   ???
2025-01-10T13:49:05.4709671Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4709742Z E   
2025-01-10T13:49:05.4709872Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4709982Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4710059Z E          ...
2025-01-10T13:49:05.4710145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4710277Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4710388Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4710460Z E          ...
2025-01-10T13:49:05.4710620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4710753Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4710857Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4710862Z 
2025-01-10T13:49:05.4710953Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4711153Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-10T13:49:05.4711162Z 
2025-01-10T13:49:05.4711288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4711419Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4711510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4711648Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4711769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4711866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4711938Z err_msg = None
2025-01-10T13:49:05.4711945Z 
2025-01-10T13:49:05.4712055Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4712132Z         if err_msg is None:
2025-01-10T13:49:05.4712228Z             if left.shape != right.shape:
2025-01-10T13:49:05.4712312Z                 raise_assert_detail(
2025-01-10T13:49:05.4712451Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4712523Z                 )
2025-01-10T13:49:05.4712589Z     
2025-01-10T13:49:05.4712663Z             diff = 0
2025-01-10T13:49:05.4712771Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4712861Z                 # count up differences
2025-01-10T13:49:05.4713027Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4713105Z                     diff += 1
2025-01-10T13:49:05.4713174Z     
2025-01-10T13:49:05.4713267Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4713398Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4713575Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4713795Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4713865Z E           
2025-01-10T13:49:05.4713978Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4714236Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4714503Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4714623Z 
2025-01-10T13:49:05.4714928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4714932Z 
2025-01-10T13:49:05.4715100Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4715104Z 
2025-01-10T13:49:05.4715329Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8924320>
2025-01-10T13:49:05.4715495Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4715577Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4715581Z 
2025-01-10T13:49:05.4715713Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4715828Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4716029Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4716108Z         try:
2025-01-10T13:49:05.4716249Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4716330Z         except KeyError:
2025-01-10T13:49:05.4716469Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4716536Z     
2025-01-10T13:49:05.4716623Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4716712Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4716802Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4716929Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4717017Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4717102Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4717214Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4717218Z 
2025-01-10T13:49:05.4717338Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4717455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4717603Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4717673Z     ???
2025-01-10T13:49:05.4717784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4717788Z 
2025-01-10T13:49:05.4717852Z >   ???
2025-01-10T13:49:05.4717980Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4718048Z E   
2025-01-10T13:49:05.4718177Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4718283Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4718357Z E          ...
2025-01-10T13:49:05.4718441Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4718569Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4718677Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4718750Z E          ...
2025-01-10T13:49:05.4718836Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4718961Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4719070Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4719074Z 
2025-01-10T13:49:05.4719164Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4719355Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-10T13:49:05.4719359Z 
2025-01-10T13:49:05.4719483Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4719609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4719700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4719832Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4719960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4720049Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4720221Z err_msg = None
2025-01-10T13:49:05.4720225Z 
2025-01-10T13:49:05.4720334Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4720417Z         if err_msg is None:
2025-01-10T13:49:05.4720505Z             if left.shape != right.shape:
2025-01-10T13:49:05.4720590Z                 raise_assert_detail(
2025-01-10T13:49:05.4720727Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4720799Z                 )
2025-01-10T13:49:05.4720864Z     
2025-01-10T13:49:05.4720939Z             diff = 0
2025-01-10T13:49:05.4721048Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4721137Z                 # count up differences
2025-01-10T13:49:05.4721302Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4721381Z                     diff += 1
2025-01-10T13:49:05.4721529Z     
2025-01-10T13:49:05.4721618Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4721761Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4721928Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4722043Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4722110Z E           
2025-01-10T13:49:05.4722221Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4722477Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4722742Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4722749Z 
2025-01-10T13:49:05.4723052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4723056Z 
2025-01-10T13:49:05.4723221Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4723226Z 
2025-01-10T13:49:05.4723456Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89243e0>
2025-01-10T13:49:05.4723768Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>, attr = 'f_lu'
2025-01-10T13:49:05.4723778Z 
2025-01-10T13:49:05.4723913Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4724029Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4724113Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4724186Z         try:
2025-01-10T13:49:05.4724321Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4724407Z         except KeyError:
2025-01-10T13:49:05.4724541Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4724614Z     
2025-01-10T13:49:05.4724696Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4724790Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4724874Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4725006Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4725089Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4725179Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4725290Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4725294Z 
2025-01-10T13:49:05.4725415Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4725530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4725673Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4725886Z     ???
2025-01-10T13:49:05.4725997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4726001Z 
2025-01-10T13:49:05.4726072Z >   ???
2025-01-10T13:49:05.4726198Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4726270Z E   
2025-01-10T13:49:05.4726395Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4726508Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4726582Z E          ...
2025-01-10T13:49:05.4726667Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4726794Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4726904Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4726976Z E          ...
2025-01-10T13:49:05.4727162Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4727291Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4727394Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4727399Z 
2025-01-10T13:49:05.4727488Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4727682Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-10T13:49:05.4727686Z 
2025-01-10T13:49:05.4727815Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4727942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4728033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4728168Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4728289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4728384Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4728456Z err_msg = None
2025-01-10T13:49:05.4728463Z 
2025-01-10T13:49:05.4728574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4728651Z         if err_msg is None:
2025-01-10T13:49:05.4728745Z             if left.shape != right.shape:
2025-01-10T13:49:05.4728825Z                 raise_assert_detail(
2025-01-10T13:49:05.4728967Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4729039Z                 )
2025-01-10T13:49:05.4729105Z     
2025-01-10T13:49:05.4729181Z             diff = 0
2025-01-10T13:49:05.4729288Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4729380Z                 # count up differences
2025-01-10T13:49:05.4729546Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4729625Z                     diff += 1
2025-01-10T13:49:05.4729696Z     
2025-01-10T13:49:05.4729791Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4729924Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4730100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4730207Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4730280Z E           
2025-01-10T13:49:05.4730388Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4730651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4730921Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4731012Z 
2025-01-10T13:49:05.4731309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4731313Z 
2025-01-10T13:49:05.4731482Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4731486Z 
2025-01-10T13:49:05.4731712Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8924b60>
2025-01-10T13:49:05.4731876Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4731964Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4731969Z 
2025-01-10T13:49:05.4732102Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4732219Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4732372Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4732449Z         try:
2025-01-10T13:49:05.4732584Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4732671Z         except KeyError:
2025-01-10T13:49:05.4732805Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4732876Z     
2025-01-10T13:49:05.4732966Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4733055Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4733144Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4733272Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4733359Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4733444Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4733555Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4733720Z             else:
2025-01-10T13:49:05.4733818Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4733927Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4733931Z 
2025-01-10T13:49:05.4734057Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4734171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4734317Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4734388Z     ???
2025-01-10T13:49:05.4734503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4734506Z 
2025-01-10T13:49:05.4734578Z >   ???
2025-01-10T13:49:05.4734700Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4734773Z E   
2025-01-10T13:49:05.4734896Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4735010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4735078Z E          ...
2025-01-10T13:49:05.4735170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4735298Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4735410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4735482Z E          ...
2025-01-10T13:49:05.4735570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4735696Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4735794Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4735798Z 
2025-01-10T13:49:05.4735888Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4736082Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-10T13:49:05.4736085Z 
2025-01-10T13:49:05.4736214Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4736337Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4736433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4736566Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4736809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4736905Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4736977Z err_msg = None
2025-01-10T13:49:05.4736981Z 
2025-01-10T13:49:05.4737092Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4737170Z         if err_msg is None:
2025-01-10T13:49:05.4737265Z             if left.shape != right.shape:
2025-01-10T13:49:05.4737344Z                 raise_assert_detail(
2025-01-10T13:49:05.4737486Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4737555Z                 )
2025-01-10T13:49:05.4737629Z     
2025-01-10T13:49:05.4737698Z             diff = 0
2025-01-10T13:49:05.4737809Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4737994Z                 # count up differences
2025-01-10T13:49:05.4738172Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4738255Z                     diff += 1
2025-01-10T13:49:05.4738320Z     
2025-01-10T13:49:05.4738409Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4738541Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4738713Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4738821Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4738896Z E           
2025-01-10T13:49:05.4739001Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4739266Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4739532Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4739540Z 
2025-01-10T13:49:05.4739836Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4739841Z 
2025-01-10T13:49:05.4740011Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4740015Z 
2025-01-10T13:49:05.4740235Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8924c20>
2025-01-10T13:49:05.4740403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4740487Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4740491Z 
2025-01-10T13:49:05.4740622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4740739Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4740819Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4740892Z         try:
2025-01-10T13:49:05.4741028Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4741109Z         except KeyError:
2025-01-10T13:49:05.4741243Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4741315Z     
2025-01-10T13:49:05.4741399Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4741498Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4741585Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4741716Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4741797Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4741891Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4742003Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4742072Z             else:
2025-01-10T13:49:05.4742259Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4742360Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4742364Z 
2025-01-10T13:49:05.4742490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4742600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4742744Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4742811Z     ???
2025-01-10T13:49:05.4742922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4742926Z 
2025-01-10T13:49:05.4742992Z >   ???
2025-01-10T13:49:05.4743122Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4743193Z E   
2025-01-10T13:49:05.4743316Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4743520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4743691Z E          ...
2025-01-10T13:49:05.4743788Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4743913Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4744030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4744098Z E          ...
2025-01-10T13:49:05.4744185Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4744303Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4744414Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4744419Z 
2025-01-10T13:49:05.4744503Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4744696Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-10T13:49:05.4744700Z 
2025-01-10T13:49:05.4744832Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4744954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4745054Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4745185Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4745310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4745399Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4745477Z err_msg = None
2025-01-10T13:49:05.4745480Z 
2025-01-10T13:49:05.4745585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4745669Z         if err_msg is None:
2025-01-10T13:49:05.4745762Z             if left.shape != right.shape:
2025-01-10T13:49:05.4745842Z                 raise_assert_detail(
2025-01-10T13:49:05.4745985Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4746056Z                 )
2025-01-10T13:49:05.4746127Z     
2025-01-10T13:49:05.4746196Z             diff = 0
2025-01-10T13:49:05.4746311Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4746395Z                 # count up differences
2025-01-10T13:49:05.4746563Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4746638Z                     diff += 1
2025-01-10T13:49:05.4746709Z     
2025-01-10T13:49:05.4746797Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4746937Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4747105Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4747217Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4747291Z E           
2025-01-10T13:49:05.4747397Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4747661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4748041Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4748047Z 
2025-01-10T13:49:05.4748347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4748351Z 
2025-01-10T13:49:05.4748519Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4748523Z 
2025-01-10T13:49:05.4748838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8924da0>
2025-01-10T13:49:05.4749009Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bcbc60e00>
2025-01-10T13:49:05.4749085Z attr = 'j_blues'
2025-01-10T13:49:05.4749089Z 
2025-01-10T13:49:05.4749226Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4749338Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4749423Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4749491Z         try:
2025-01-10T13:49:05.4749630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4749713Z         except KeyError:
2025-01-10T13:49:05.4749845Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4749916Z     
2025-01-10T13:49:05.4749999Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4750094Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4750178Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4750314Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4750395Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4750490Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4750596Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4750671Z             else:
2025-01-10T13:49:05.4750761Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4750867Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4750870Z 
2025-01-10T13:49:05.4750996Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4751107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4751256Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4751323Z     ???
2025-01-10T13:49:05.4751436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4751439Z 
2025-01-10T13:49:05.4751508Z >   ???
2025-01-10T13:49:05.4751635Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4751705Z E   
2025-01-10T13:49:05.4751834Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4751942Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4752016Z E          ...
2025-01-10T13:49:05.4752100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4752231Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4752346Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4752414Z E          ...
2025-01-10T13:49:05.4752505Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4752625Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4752729Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4752733Z 
2025-01-10T13:49:05.4752818Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4753027Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-10T13:49:05.4753031Z 
2025-01-10T13:49:05.4753246Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4753372Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4753469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4753699Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4753838Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4753934Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4754011Z err_msg = None
2025-01-10T13:49:05.4754014Z 
2025-01-10T13:49:05.4754122Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4754204Z         if err_msg is None:
2025-01-10T13:49:05.4754413Z             if left.shape != right.shape:
2025-01-10T13:49:05.4754503Z                 raise_assert_detail(
2025-01-10T13:49:05.4754653Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4754728Z                 )
2025-01-10T13:49:05.4754793Z     
2025-01-10T13:49:05.4754868Z             diff = 0
2025-01-10T13:49:05.4754984Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4755068Z                 # count up differences
2025-01-10T13:49:05.4755241Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4755314Z                     diff += 1
2025-01-10T13:49:05.4755385Z     
2025-01-10T13:49:05.4755471Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4755611Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4755783Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4755900Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4755968Z E           
2025-01-10T13:49:05.4756087Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4756352Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4756611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4756617Z 
2025-01-10T13:49:05.4756924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4756929Z 
2025-01-10T13:49:05.4757098Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4757105Z 
2025-01-10T13:49:05.4757334Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8925b20>
2025-01-10T13:49:05.4757505Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4757576Z attr = 'lines'
2025-01-10T13:49:05.4757580Z 
2025-01-10T13:49:05.4757719Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4757830Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4757916Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4757984Z         try:
2025-01-10T13:49:05.4758126Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4758204Z         except KeyError:
2025-01-10T13:49:05.4758343Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4758413Z     
2025-01-10T13:49:05.4758502Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4758593Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4758807Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4758940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4759022Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4759118Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4759232Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4759309Z             else:
2025-01-10T13:49:05.4759402Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4759517Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4759520Z 
2025-01-10T13:49:05.4759646Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4759767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4759990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4760066Z     ???
2025-01-10T13:49:05.4760182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4760189Z 
2025-01-10T13:49:05.4760256Z >   ???
2025-01-10T13:49:05.4760386Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4760454Z E   
2025-01-10T13:49:05.4760584Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4760695Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4760770Z E          ...
2025-01-10T13:49:05.4760855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4760991Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4761102Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4761176Z E          ...
2025-01-10T13:49:05.4761258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4761388Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4761491Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4761504Z 
2025-01-10T13:49:05.4761593Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4761848Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-10T13:49:05.4761853Z 
2025-01-10T13:49:05.4762074Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8925be0>
2025-01-10T13:49:05.4762245Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4762334Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4762338Z 
2025-01-10T13:49:05.4762478Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4762588Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4762675Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4762744Z         try:
2025-01-10T13:49:05.4762893Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4762976Z         except KeyError:
2025-01-10T13:49:05.4763115Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4763190Z     
2025-01-10T13:49:05.4763275Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4763375Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4763461Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4763711Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4763799Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4763891Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4763996Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4764001Z 
2025-01-10T13:49:05.4764127Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4764237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4764246Z 
2025-01-10T13:49:05.4764384Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4764472Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4764713Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4764798Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4764936Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4765021Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4765126Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4765209Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4765283Z err_msg = None
2025-01-10T13:49:05.4765287Z 
2025-01-10T13:49:05.4765399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4765482Z         if err_msg is None:
2025-01-10T13:49:05.4765572Z             if left.shape != right.shape:
2025-01-10T13:49:05.4765658Z                 raise_assert_detail(
2025-01-10T13:49:05.4765933Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4766012Z                 )
2025-01-10T13:49:05.4766081Z     
2025-01-10T13:49:05.4766156Z             diff = 0
2025-01-10T13:49:05.4766269Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4766360Z                 # count up differences
2025-01-10T13:49:05.4766529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4766609Z                     diff += 1
2025-01-10T13:49:05.4766675Z     
2025-01-10T13:49:05.4766764Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4766900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4767075Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4767182Z E           AssertionError: Series are different
2025-01-10T13:49:05.4767251Z E           
2025-01-10T13:49:05.4767360Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4767732Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4768070Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4768408Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4768415Z 
2025-01-10T13:49:05.4768723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4768973Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-10T13:49:05.4768978Z 
2025-01-10T13:49:05.4769199Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8925ca0>
2025-01-10T13:49:05.4769371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4769464Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4769468Z 
2025-01-10T13:49:05.4769604Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4769724Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4769806Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4769965Z         try:
2025-01-10T13:49:05.4770105Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4770190Z         except KeyError:
2025-01-10T13:49:05.4770326Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4770399Z     
2025-01-10T13:49:05.4770482Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4770577Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4770663Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4770797Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4770885Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4770973Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4771084Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4771089Z 
2025-01-10T13:49:05.4771305Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4771435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4771442Z 
2025-01-10T13:49:05.4771577Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4771666Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4771771Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4771855Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4771997Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4772077Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4772189Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4772266Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4772345Z err_msg = None
2025-01-10T13:49:05.4772349Z 
2025-01-10T13:49:05.4772459Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4772548Z         if err_msg is None:
2025-01-10T13:49:05.4772646Z             if left.shape != right.shape:
2025-01-10T13:49:05.4772734Z                 raise_assert_detail(
2025-01-10T13:49:05.4772875Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4772952Z                 )
2025-01-10T13:49:05.4773018Z     
2025-01-10T13:49:05.4773095Z             diff = 0
2025-01-10T13:49:05.4773207Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4773299Z                 # count up differences
2025-01-10T13:49:05.4773475Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4773549Z                     diff += 1
2025-01-10T13:49:05.4773737Z     
2025-01-10T13:49:05.4773823Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4773963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4774135Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4774245Z E           AssertionError: Series are different
2025-01-10T13:49:05.4774314Z E           
2025-01-10T13:49:05.4774418Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4774787Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4775166Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4775668Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4775673Z 
2025-01-10T13:49:05.4775976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4776177Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-10T13:49:05.4776181Z 
2025-01-10T13:49:05.4776411Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4776542Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4776648Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4776777Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4776903Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4777001Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4797139Z err_msg = None
2025-01-10T13:49:05.4797160Z 
2025-01-10T13:49:05.4797426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4797553Z         if err_msg is None:
2025-01-10T13:49:05.4797696Z             if left.shape != right.shape:
2025-01-10T13:49:05.4797815Z                 raise_assert_detail(
2025-01-10T13:49:05.4798061Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4798175Z                 )
2025-01-10T13:49:05.4798279Z     
2025-01-10T13:49:05.4798408Z             diff = 0
2025-01-10T13:49:05.4798569Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4798659Z                 # count up differences
2025-01-10T13:49:05.4798847Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4798921Z                     diff += 1
2025-01-10T13:49:05.4798991Z     
2025-01-10T13:49:05.4799085Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4799232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4799419Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4799540Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4799615Z E           
2025-01-10T13:49:05.4799729Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4800004Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4800272Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4800283Z 
2025-01-10T13:49:05.4800610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4800615Z 
2025-01-10T13:49:05.4800797Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4800805Z 
2025-01-10T13:49:05.4801034Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8925ee0>
2025-01-10T13:49:05.4801443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>, attr = 'nu'
2025-01-10T13:49:05.4801447Z 
2025-01-10T13:49:05.4801587Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4801711Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4801799Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4801867Z         try:
2025-01-10T13:49:05.4802017Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4802096Z         except KeyError:
2025-01-10T13:49:05.4802241Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4802308Z     
2025-01-10T13:49:05.4802400Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4802493Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4802586Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4802836Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4802932Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4803024Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4803140Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4803144Z 
2025-01-10T13:49:05.4803274Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4803390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4803545Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4803830Z     ???
2025-01-10T13:49:05.4803969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4803975Z 
2025-01-10T13:49:05.4804040Z >   ???
2025-01-10T13:49:05.4804175Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4804240Z E   
2025-01-10T13:49:05.4804375Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4804484Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4804556Z E          ...
2025-01-10T13:49:05.4804652Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4804784Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4804898Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4804967Z E          ...
2025-01-10T13:49:05.4805053Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4805172Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4805278Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4805282Z 
2025-01-10T13:49:05.4805369Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4805592Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-10T13:49:05.4805596Z 
2025-01-10T13:49:05.4805725Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4805860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4805963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4806097Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4806222Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4806312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4806389Z err_msg = None
2025-01-10T13:49:05.4806392Z 
2025-01-10T13:49:05.4806508Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4806591Z         if err_msg is None:
2025-01-10T13:49:05.4806686Z             if left.shape != right.shape:
2025-01-10T13:49:05.4806776Z                 raise_assert_detail(
2025-01-10T13:49:05.4806928Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4807004Z                 )
2025-01-10T13:49:05.4807070Z     
2025-01-10T13:49:05.4807145Z             diff = 0
2025-01-10T13:49:05.4807386Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4807472Z                 # count up differences
2025-01-10T13:49:05.4807654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4807732Z                     diff += 1
2025-01-10T13:49:05.4807802Z     
2025-01-10T13:49:05.4807890Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4808031Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4808202Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4808320Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4808390Z E           
2025-01-10T13:49:05.4808504Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4808883Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4809151Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4809156Z 
2025-01-10T13:49:05.4809469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4809473Z 
2025-01-10T13:49:05.4809641Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4809653Z 
2025-01-10T13:49:05.4809880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8925fa0>
2025-01-10T13:49:05.4810057Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4810136Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4810140Z 
2025-01-10T13:49:05.4810281Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4810395Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4810484Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4810552Z         try:
2025-01-10T13:49:05.4810694Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4810775Z         except KeyError:
2025-01-10T13:49:05.4810921Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4810986Z     
2025-01-10T13:49:05.4811076Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4811171Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4811267Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4811402Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4811487Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4811578Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4811684Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4811688Z 
2025-01-10T13:49:05.4811819Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4811930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4812076Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4812143Z     ???
2025-01-10T13:49:05.4812254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4812258Z 
2025-01-10T13:49:05.4812322Z >   ???
2025-01-10T13:49:05.4812454Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4812523Z E   
2025-01-10T13:49:05.4812651Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4812765Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4812926Z E          ...
2025-01-10T13:49:05.4813021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4813147Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4813262Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4813330Z E          ...
2025-01-10T13:49:05.4813416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4813534Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4813810Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4813817Z 
2025-01-10T13:49:05.4813907Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4814113Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-10T13:49:05.4814118Z 
2025-01-10T13:49:05.4814370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4814507Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4814613Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4814750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4814885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4814975Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4815050Z err_msg = None
2025-01-10T13:49:05.4815053Z 
2025-01-10T13:49:05.4815166Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4815241Z         if err_msg is None:
2025-01-10T13:49:05.4815337Z             if left.shape != right.shape:
2025-01-10T13:49:05.4815418Z                 raise_assert_detail(
2025-01-10T13:49:05.4815573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4815642Z                 )
2025-01-10T13:49:05.4815715Z     
2025-01-10T13:49:05.4815788Z             diff = 0
2025-01-10T13:49:05.4815901Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4815986Z                 # count up differences
2025-01-10T13:49:05.4816158Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4816231Z                     diff += 1
2025-01-10T13:49:05.4816302Z     
2025-01-10T13:49:05.4816388Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4816527Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4816700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4816814Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4816889Z E           
2025-01-10T13:49:05.4817001Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4817268Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4817531Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4817545Z 
2025-01-10T13:49:05.4817849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4817853Z 
2025-01-10T13:49:05.4818028Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4818035Z 
2025-01-10T13:49:05.4818260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8926060>
2025-01-10T13:49:05.4818605Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>, attr = 'f_lu'
2025-01-10T13:49:05.4818610Z 
2025-01-10T13:49:05.4818746Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4818867Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4818948Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4819022Z         try:
2025-01-10T13:49:05.4819167Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4819244Z         except KeyError:
2025-01-10T13:49:05.4819384Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4819450Z     
2025-01-10T13:49:05.4819542Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4819633Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4819809Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4819943Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4820030Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4820121Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4820232Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4820236Z 
2025-01-10T13:49:05.4820359Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4820475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4820623Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4820690Z     ???
2025-01-10T13:49:05.4820801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4820805Z 
2025-01-10T13:49:05.4820871Z >   ???
2025-01-10T13:49:05.4821001Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4821067Z E   
2025-01-10T13:49:05.4821201Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4821309Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4821386Z E          ...
2025-01-10T13:49:05.4821471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4821602Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4821712Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4821789Z E          ...
2025-01-10T13:49:05.4821876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4821997Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4822105Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4822109Z 
2025-01-10T13:49:05.4822197Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4822409Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-10T13:49:05.4822413Z 
2025-01-10T13:49:05.4822546Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4822679Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4822777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4822915Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4823043Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4823132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4823213Z err_msg = None
2025-01-10T13:49:05.4823217Z 
2025-01-10T13:49:05.4823324Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4823406Z         if err_msg is None:
2025-01-10T13:49:05.4823498Z             if left.shape != right.shape:
2025-01-10T13:49:05.4823584Z                 raise_assert_detail(
2025-01-10T13:49:05.4823918Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4823994Z                 )
2025-01-10T13:49:05.4824060Z     
2025-01-10T13:49:05.4824255Z             diff = 0
2025-01-10T13:49:05.4824365Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4824456Z                 # count up differences
2025-01-10T13:49:05.4824626Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4824701Z                     diff += 1
2025-01-10T13:49:05.4824774Z     
2025-01-10T13:49:05.4824859Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4824996Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4825165Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4825281Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4825349Z E           
2025-01-10T13:49:05.4825464Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4825828Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4826101Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4826105Z 
2025-01-10T13:49:05.4826411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4826415Z 
2025-01-10T13:49:05.4826579Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4826586Z 
2025-01-10T13:49:05.4826811Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89267e0>
2025-01-10T13:49:05.4826979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4827061Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4827065Z 
2025-01-10T13:49:05.4827203Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4827315Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4827403Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4827471Z         try:
2025-01-10T13:49:05.4827612Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4827690Z         except KeyError:
2025-01-10T13:49:05.4827831Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4827897Z     
2025-01-10T13:49:05.4827984Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4828077Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4828170Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4828299Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4828391Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4828485Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4828593Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4828666Z             else:
2025-01-10T13:49:05.4828757Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4828866Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4828870Z 
2025-01-10T13:49:05.4828993Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4829109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4829253Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4829323Z     ???
2025-01-10T13:49:05.4829432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4829440Z 
2025-01-10T13:49:05.4829513Z >   ???
2025-01-10T13:49:05.4829645Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4829815Z E   
2025-01-10T13:49:05.4829947Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4830055Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4830130Z E          ...
2025-01-10T13:49:05.4830213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4830344Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4830453Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4830527Z E          ...
2025-01-10T13:49:05.4830608Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4830732Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4830833Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4830837Z 
2025-01-10T13:49:05.4831008Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4831227Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-10T13:49:05.4831233Z 
2025-01-10T13:49:05.4831360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4831486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4831580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4831715Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4831834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4831927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4831998Z err_msg = None
2025-01-10T13:49:05.4832002Z 
2025-01-10T13:49:05.4832113Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4832199Z         if err_msg is None:
2025-01-10T13:49:05.4832291Z             if left.shape != right.shape:
2025-01-10T13:49:05.4832378Z                 raise_assert_detail(
2025-01-10T13:49:05.4832523Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4832595Z                 )
2025-01-10T13:49:05.4832659Z     
2025-01-10T13:49:05.4832733Z             diff = 0
2025-01-10T13:49:05.4832839Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4832927Z                 # count up differences
2025-01-10T13:49:05.4833094Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4833176Z                     diff += 1
2025-01-10T13:49:05.4833241Z     
2025-01-10T13:49:05.4833330Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4833465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4833814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4833936Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4834005Z E           
2025-01-10T13:49:05.4834120Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4834379Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4834647Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4834651Z 
2025-01-10T13:49:05.4834963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4834967Z 
2025-01-10T13:49:05.4835341Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4835346Z 
2025-01-10T13:49:05.4835572Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89268a0>
2025-01-10T13:49:05.4835733Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4835811Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4835815Z 
2025-01-10T13:49:05.4835949Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4836067Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4836148Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4836222Z         try:
2025-01-10T13:49:05.4836364Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4836441Z         except KeyError:
2025-01-10T13:49:05.4836706Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4836774Z     
2025-01-10T13:49:05.4836862Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4836956Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4837048Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4837176Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4837262Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4837348Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4837458Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4837526Z             else:
2025-01-10T13:49:05.4837624Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4837728Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4837736Z 
2025-01-10T13:49:05.4837858Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4837971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4838115Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4838187Z     ???
2025-01-10T13:49:05.4838298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4838302Z 
2025-01-10T13:49:05.4838372Z >   ???
2025-01-10T13:49:05.4838504Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4838575Z E   
2025-01-10T13:49:05.4838698Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4838809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4838879Z E          ...
2025-01-10T13:49:05.4838967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4839095Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4839203Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4839275Z E          ...
2025-01-10T13:49:05.4839356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4839486Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4839588Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4839596Z 
2025-01-10T13:49:05.4839687Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4839891Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-10T13:49:05.4839895Z 
2025-01-10T13:49:05.4840026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4840147Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4840244Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4840379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4840497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4840595Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4840667Z err_msg = None
2025-01-10T13:49:05.4840671Z 
2025-01-10T13:49:05.4840870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4840949Z         if err_msg is None:
2025-01-10T13:49:05.4841046Z             if left.shape != right.shape:
2025-01-10T13:49:05.4841126Z                 raise_assert_detail(
2025-01-10T13:49:05.4841274Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4841341Z                 )
2025-01-10T13:49:05.4841411Z     
2025-01-10T13:49:05.4841485Z             diff = 0
2025-01-10T13:49:05.4841592Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4841680Z                 # count up differences
2025-01-10T13:49:05.4841844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4841923Z                     diff += 1
2025-01-10T13:49:05.4841989Z     
2025-01-10T13:49:05.4842154Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4842289Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4842464Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4842572Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4842646Z E           
2025-01-10T13:49:05.4842755Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4843017Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4843284Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4843292Z 
2025-01-10T13:49:05.4843591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4843781Z 
2025-01-10T13:49:05.4843979Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4843984Z 
2025-01-10T13:49:05.4844209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8926a20>
2025-01-10T13:49:05.4844370Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3bea948da0>
2025-01-10T13:49:05.4844447Z attr = 'j_blues'
2025-01-10T13:49:05.4844450Z 
2025-01-10T13:49:05.4844592Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4844709Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4844791Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4844867Z         try:
2025-01-10T13:49:05.4845005Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4845092Z         except KeyError:
2025-01-10T13:49:05.4845225Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4845296Z     
2025-01-10T13:49:05.4845377Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4845471Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4845561Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4845691Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4845778Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4845862Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4845973Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4846042Z             else:
2025-01-10T13:49:05.4846140Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4846247Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4846250Z 
2025-01-10T13:49:05.4846378Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4846654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4846802Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4846868Z     ???
2025-01-10T13:49:05.4846983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4846987Z 
2025-01-10T13:49:05.4847057Z >   ???
2025-01-10T13:49:05.4847179Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4847249Z E   
2025-01-10T13:49:05.4847373Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4847486Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4847554Z E          ...
2025-01-10T13:49:05.4847642Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4847874Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4847991Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4848059Z E          ...
2025-01-10T13:49:05.4848151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4848271Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4848378Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4848382Z 
2025-01-10T13:49:05.4848474Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4848730Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-10T13:49:05.4848735Z 
2025-01-10T13:49:05.4848865Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4848988Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4849083Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4849214Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4849337Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4849433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4849506Z err_msg = None
2025-01-10T13:49:05.4849509Z 
2025-01-10T13:49:05.4849622Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4849700Z         if err_msg is None:
2025-01-10T13:49:05.4849795Z             if left.shape != right.shape:
2025-01-10T13:49:05.4849875Z                 raise_assert_detail(
2025-01-10T13:49:05.4850020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4850087Z                 )
2025-01-10T13:49:05.4850157Z     
2025-01-10T13:49:05.4850226Z             diff = 0
2025-01-10T13:49:05.4850335Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4850419Z                 # count up differences
2025-01-10T13:49:05.4850591Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4850668Z                     diff += 1
2025-01-10T13:49:05.4850740Z     
2025-01-10T13:49:05.4850831Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4850963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4851136Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4851244Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4851316Z E           
2025-01-10T13:49:05.4851422Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4851687Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4851951Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4852045Z 
2025-01-10T13:49:05.4852346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4852350Z 
2025-01-10T13:49:05.4852518Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4852522Z 
2025-01-10T13:49:05.4852741Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf89277a0>
2025-01-10T13:49:05.4852906Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4852977Z attr = 'lines'
2025-01-10T13:49:05.4852981Z 
2025-01-10T13:49:05.4853193Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4853311Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4853395Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4853468Z         try:
2025-01-10T13:49:05.4853849Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4853937Z         except KeyError:
2025-01-10T13:49:05.4854074Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4854145Z     
2025-01-10T13:49:05.4854226Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4854322Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4854405Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4854538Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4854621Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4854711Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4854820Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4854895Z             else:
2025-01-10T13:49:05.4854991Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4855099Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4855103Z 
2025-01-10T13:49:05.4855230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4855337Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4855482Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4855549Z     ???
2025-01-10T13:49:05.4855660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4855665Z 
2025-01-10T13:49:05.4855730Z >   ???
2025-01-10T13:49:05.4855858Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4855922Z E   
2025-01-10T13:49:05.4856052Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4856167Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4856240Z E          ...
2025-01-10T13:49:05.4856328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4856455Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4856568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4856636Z E          ...
2025-01-10T13:49:05.4856723Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4856845Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4856950Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4856954Z 
2025-01-10T13:49:05.4857039Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4857352Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-10T13:49:05.4857357Z 
2025-01-10T13:49:05.4857581Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8927860>
2025-01-10T13:49:05.4857749Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4857840Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4857965Z 
2025-01-10T13:49:05.4858100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4858214Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4858293Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4858368Z         try:
2025-01-10T13:49:05.4858502Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4858589Z         except KeyError:
2025-01-10T13:49:05.4858722Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4858794Z     
2025-01-10T13:49:05.4858875Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4858971Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4859059Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4859308Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4859397Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4859485Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4859597Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4859601Z 
2025-01-10T13:49:05.4859725Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4859839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4859843Z 
2025-01-10T13:49:05.4859974Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4860061Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4860172Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4860248Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4860389Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:05.4860471Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:05.4860579Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4860659Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:05.4860736Z err_msg = None
2025-01-10T13:49:05.4860740Z 
2025-01-10T13:49:05.4860847Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4860932Z         if err_msg is None:
2025-01-10T13:49:05.4861022Z             if left.shape != right.shape:
2025-01-10T13:49:05.4861108Z                 raise_assert_detail(
2025-01-10T13:49:05.4861246Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4861323Z                 )
2025-01-10T13:49:05.4861393Z     
2025-01-10T13:49:05.4861463Z             diff = 0
2025-01-10T13:49:05.4861577Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4861661Z                 # count up differences
2025-01-10T13:49:05.4861835Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4861910Z                     diff += 1
2025-01-10T13:49:05.4861979Z     
2025-01-10T13:49:05.4862067Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4862208Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4862375Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4862480Z E           AssertionError: Series are different
2025-01-10T13:49:05.4862549Z E           
2025-01-10T13:49:05.4862652Z E           Series values are different (4.04858 %)
2025-01-10T13:49:05.4863029Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4863359Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4863947Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4863955Z 
2025-01-10T13:49:05.4864265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4864684Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-10T13:49:05.4864693Z 
2025-01-10T13:49:05.4864921Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8927920>
2025-01-10T13:49:05.4865085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4865180Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4865184Z 
2025-01-10T13:49:05.4865316Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4865432Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4865519Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4865586Z         try:
2025-01-10T13:49:05.4865727Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4865803Z         except KeyError:
2025-01-10T13:49:05.4865944Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4866010Z     
2025-01-10T13:49:05.4866101Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4866192Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4866286Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4866417Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4866508Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4866593Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4866705Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4866709Z 
2025-01-10T13:49:05.4866836Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4866946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4866950Z 
2025-01-10T13:49:05.4867085Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4867167Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4867279Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4867356Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4867497Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:05.4867579Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:05.4867685Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:05.4867762Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:05.4867843Z err_msg = None
2025-01-10T13:49:05.4867847Z 
2025-01-10T13:49:05.4867957Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4868034Z         if err_msg is None:
2025-01-10T13:49:05.4868127Z             if left.shape != right.shape:
2025-01-10T13:49:05.4868205Z                 raise_assert_detail(
2025-01-10T13:49:05.4868353Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4868421Z                 )
2025-01-10T13:49:05.4868494Z     
2025-01-10T13:49:05.4868566Z             diff = 0
2025-01-10T13:49:05.4868679Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4868763Z                 # count up differences
2025-01-10T13:49:05.4869051Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4869125Z                     diff += 1
2025-01-10T13:49:05.4869194Z     
2025-01-10T13:49:05.4869277Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4869412Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4869585Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4869685Z E           AssertionError: Series are different
2025-01-10T13:49:05.4869758Z E           
2025-01-10T13:49:05.4869856Z E           Series values are different (6.47773 %)
2025-01-10T13:49:05.4870306Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.4870689Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4871062Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.4871070Z 
2025-01-10T13:49:05.4871373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4871618Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-10T13:49:05.4871623Z 
2025-01-10T13:49:05.4871750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4871878Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4871972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4872106Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4872228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4872323Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4872397Z err_msg = None
2025-01-10T13:49:05.4872401Z 
2025-01-10T13:49:05.4872509Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4872590Z         if err_msg is None:
2025-01-10T13:49:05.4872678Z             if left.shape != right.shape:
2025-01-10T13:49:05.4872763Z                 raise_assert_detail(
2025-01-10T13:49:05.4872902Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4872974Z                 )
2025-01-10T13:49:05.4873045Z     
2025-01-10T13:49:05.4873120Z             diff = 0
2025-01-10T13:49:05.4873227Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4873314Z                 # count up differences
2025-01-10T13:49:05.4873481Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4873562Z                     diff += 1
2025-01-10T13:49:05.4873798Z     
2025-01-10T13:49:05.4873894Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4874144Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4874317Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4874430Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4874498Z E           
2025-01-10T13:49:05.4874609Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4874870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4875236Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4875245Z 
2025-01-10T13:49:05.4875546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4875550Z 
2025-01-10T13:49:05.4875717Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4875721Z 
2025-01-10T13:49:05.4875947Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8927b60>
2025-01-10T13:49:05.4876146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>, attr = 'nu'
2025-01-10T13:49:05.4876149Z 
2025-01-10T13:49:05.4876287Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4876398Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4876487Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4876556Z         try:
2025-01-10T13:49:05.4876696Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4876781Z         except KeyError:
2025-01-10T13:49:05.4876914Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4876984Z     
2025-01-10T13:49:05.4877067Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4877166Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4877250Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4877382Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4877463Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4877554Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4877664Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4877668Z 
2025-01-10T13:49:05.4877794Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4877909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4878056Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4878129Z     ???
2025-01-10T13:49:05.4878236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4878240Z 
2025-01-10T13:49:05.4878311Z >   ???
2025-01-10T13:49:05.4878437Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4878507Z E   
2025-01-10T13:49:05.4878631Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4878745Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4878814Z E          ...
2025-01-10T13:49:05.4878904Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4879029Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4879142Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4879210Z E          ...
2025-01-10T13:49:05.4879305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4879433Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4879641Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4879646Z 
2025-01-10T13:49:05.4879737Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4880019Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-10T13:49:05.4880024Z 
2025-01-10T13:49:05.4880155Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4880281Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4880377Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4880505Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4880707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4880805Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4880882Z err_msg = None
2025-01-10T13:49:05.4880886Z 
2025-01-10T13:49:05.4880999Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4881076Z         if err_msg is None:
2025-01-10T13:49:05.4881170Z             if left.shape != right.shape:
2025-01-10T13:49:05.4881250Z                 raise_assert_detail(
2025-01-10T13:49:05.4881396Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4881462Z                 )
2025-01-10T13:49:05.4881532Z     
2025-01-10T13:49:05.4881604Z             diff = 0
2025-01-10T13:49:05.4881717Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4881801Z                 # count up differences
2025-01-10T13:49:05.4881971Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4882052Z                     diff += 1
2025-01-10T13:49:05.4882117Z     
2025-01-10T13:49:05.4882205Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4882340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4882517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4882628Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4882706Z E           
2025-01-10T13:49:05.4882812Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4883075Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4883342Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4883350Z 
2025-01-10T13:49:05.4883852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4883859Z 
2025-01-10T13:49:05.4884042Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4884047Z 
2025-01-10T13:49:05.4884271Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8927c20>
2025-01-10T13:49:05.4884439Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4884520Z attr = 'wavelength_cm'
2025-01-10T13:49:05.4884524Z 
2025-01-10T13:49:05.4884657Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4884778Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4884858Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4884930Z         try:
2025-01-10T13:49:05.4885188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4885271Z         except KeyError:
2025-01-10T13:49:05.4885409Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4885480Z     
2025-01-10T13:49:05.4885563Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4885658Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4885745Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4885877Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4885958Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4886051Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4886160Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4886164Z 
2025-01-10T13:49:05.4886390Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4886511Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4886658Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4886729Z     ???
2025-01-10T13:49:05.4886840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4886844Z 
2025-01-10T13:49:05.4886914Z >   ???
2025-01-10T13:49:05.4887040Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4887112Z E   
2025-01-10T13:49:05.4887238Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4887352Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4887425Z E          ...
2025-01-10T13:49:05.4887508Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4887640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4887748Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4887825Z E          ...
2025-01-10T13:49:05.4887907Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4888037Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4888137Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4888141Z 
2025-01-10T13:49:05.4888232Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4888482Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-10T13:49:05.4888486Z 
2025-01-10T13:49:05.4888619Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4888745Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4888836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4888970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4889093Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4889186Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4889261Z err_msg = None
2025-01-10T13:49:05.4889265Z 
2025-01-10T13:49:05.4889376Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4889453Z         if err_msg is None:
2025-01-10T13:49:05.4889550Z             if left.shape != right.shape:
2025-01-10T13:49:05.4889631Z                 raise_assert_detail(
2025-01-10T13:49:05.4889774Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4889847Z                 )
2025-01-10T13:49:05.4889915Z     
2025-01-10T13:49:05.4889990Z             diff = 0
2025-01-10T13:49:05.4890098Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4890187Z                 # count up differences
2025-01-10T13:49:05.4890357Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4890436Z                     diff += 1
2025-01-10T13:49:05.4890502Z     
2025-01-10T13:49:05.4890590Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4890815Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4890987Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4891095Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4891170Z E           
2025-01-10T13:49:05.4891283Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4891538Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4891874Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4891882Z 
2025-01-10T13:49:05.4892184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4892193Z 
2025-01-10T13:49:05.4892357Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4892361Z 
2025-01-10T13:49:05.4892588Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf8927ce0>
2025-01-10T13:49:05.4892786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>, attr = 'f_lu'
2025-01-10T13:49:05.4892790Z 
2025-01-10T13:49:05.4892928Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4893041Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4893126Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4893193Z         try:
2025-01-10T13:49:05.4893336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4893413Z         except KeyError:
2025-01-10T13:49:05.4893551Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4893728Z     
2025-01-10T13:49:05.4893812Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4893906Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4893992Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4894124Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4894205Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4894296Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4894402Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4894406Z 
2025-01-10T13:49:05.4894535Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:05.4894642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4894791Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4894858Z     ???
2025-01-10T13:49:05.4894968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4894972Z 
2025-01-10T13:49:05.4895042Z >   ???
2025-01-10T13:49:05.4895165Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4895236Z E   
2025-01-10T13:49:05.4895359Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4895469Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4895537Z E          ...
2025-01-10T13:49:05.4895626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4895749Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4895862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4895933Z E          ...
2025-01-10T13:49:05.4896021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4896263Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4896369Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4896373Z 
2025-01-10T13:49:05.4896463Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4896743Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-10T13:49:05.4896748Z 
2025-01-10T13:49:05.4896878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4897001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4897099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4897230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4897459Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4897554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4897638Z err_msg = None
2025-01-10T13:49:05.4897643Z 
2025-01-10T13:49:05.4897758Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4897836Z         if err_msg is None:
2025-01-10T13:49:05.4897933Z             if left.shape != right.shape:
2025-01-10T13:49:05.4898015Z                 raise_assert_detail(
2025-01-10T13:49:05.4898160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4898228Z                 )
2025-01-10T13:49:05.4898298Z     
2025-01-10T13:49:05.4898367Z             diff = 0
2025-01-10T13:49:05.4898479Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4898563Z                 # count up differences
2025-01-10T13:49:05.4898742Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4898815Z                     diff += 1
2025-01-10T13:49:05.4898885Z     
2025-01-10T13:49:05.4898979Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4899111Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4899284Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4899393Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4899466Z E           
2025-01-10T13:49:05.4899574Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4899838Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4900101Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4900114Z 
2025-01-10T13:49:05.4900411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4900415Z 
2025-01-10T13:49:05.4900584Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4900587Z 
2025-01-10T13:49:05.4900808Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf874c4a0>
2025-01-10T13:49:05.4900979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4901059Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4901063Z 
2025-01-10T13:49:05.4901205Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4901325Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4901406Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4901619Z         try:
2025-01-10T13:49:05.4901757Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4901840Z         except KeyError:
2025-01-10T13:49:05.4901974Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4902043Z     
2025-01-10T13:49:05.4902126Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4902222Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4902308Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4902446Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4902527Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4902619Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4902725Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4902801Z             else:
2025-01-10T13:49:05.4902974Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4903083Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4903091Z 
2025-01-10T13:49:05.4903221Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4903331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4903478Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4903545Z     ???
2025-01-10T13:49:05.4903752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4903757Z 
2025-01-10T13:49:05.4903823Z >   ???
2025-01-10T13:49:05.4903951Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4904018Z E   
2025-01-10T13:49:05.4904148Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4904260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4904330Z E          ...
2025-01-10T13:49:05.4904419Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4904543Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4904660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4904727Z E          ...
2025-01-10T13:49:05.4904813Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4904933Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4905038Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4905042Z 
2025-01-10T13:49:05.4905126Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4905405Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-10T13:49:05.4905410Z 
2025-01-10T13:49:05.4905541Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4905667Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4905768Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4905902Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4906027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4906116Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4906193Z err_msg = None
2025-01-10T13:49:05.4906197Z 
2025-01-10T13:49:05.4906302Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4906383Z         if err_msg is None:
2025-01-10T13:49:05.4906476Z             if left.shape != right.shape:
2025-01-10T13:49:05.4906561Z                 raise_assert_detail(
2025-01-10T13:49:05.4906705Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4906773Z                 )
2025-01-10T13:49:05.4906844Z     
2025-01-10T13:49:05.4906917Z             diff = 0
2025-01-10T13:49:05.4907028Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4907112Z                 # count up differences
2025-01-10T13:49:05.4907414Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4907488Z                     diff += 1
2025-01-10T13:49:05.4907557Z     
2025-01-10T13:49:05.4907640Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4907775Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4907943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4908056Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4908125Z E           
2025-01-10T13:49:05.4908238Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4908606Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4908874Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4908879Z 
2025-01-10T13:49:05.4909182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4909187Z 
2025-01-10T13:49:05.4909360Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4909365Z 
2025-01-10T13:49:05.4909585Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf874c560>
2025-01-10T13:49:05.4909755Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4909832Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4909840Z 
2025-01-10T13:49:05.4909980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4910092Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4910177Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4910245Z         try:
2025-01-10T13:49:05.4910386Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4910463Z         except KeyError:
2025-01-10T13:49:05.4910603Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4910674Z     
2025-01-10T13:49:05.4910756Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4910851Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4910936Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4911069Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4911155Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4911247Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4911355Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4911431Z             else:
2025-01-10T13:49:05.4911523Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4911633Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4911637Z 
2025-01-10T13:49:05.4911757Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4911871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4912019Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4912086Z     ???
2025-01-10T13:49:05.4912196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4912200Z 
2025-01-10T13:49:05.4912266Z >   ???
2025-01-10T13:49:05.4912392Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4912461Z E   
2025-01-10T13:49:05.4912590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4912785Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4912859Z E          ...
2025-01-10T13:49:05.4912942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4913071Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4913180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4913253Z E          ...
2025-01-10T13:49:05.4913339Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4913458Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4913562Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4913566Z 
2025-01-10T13:49:05.4913745Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4914014Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-10T13:49:05.4914127Z 
2025-01-10T13:49:05.4914256Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4914388Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4914480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4914612Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:05.4914741Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:05.4914829Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:05.4914904Z err_msg = None
2025-01-10T13:49:05.4914909Z 
2025-01-10T13:49:05.4915013Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:05.4915096Z         if err_msg is None:
2025-01-10T13:49:05.4915186Z             if left.shape != right.shape:
2025-01-10T13:49:05.4915275Z                 raise_assert_detail(
2025-01-10T13:49:05.4915414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:05.4915491Z                 )
2025-01-10T13:49:05.4915556Z     
2025-01-10T13:49:05.4915631Z             diff = 0
2025-01-10T13:49:05.4915739Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:05.4915828Z                 # count up differences
2025-01-10T13:49:05.4915999Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:05.4916073Z                     diff += 1
2025-01-10T13:49:05.4916143Z     
2025-01-10T13:49:05.4916227Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:05.4916361Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:05.4916527Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:05.4916639Z E           AssertionError: numpy array are different
2025-01-10T13:49:05.4916711Z E           
2025-01-10T13:49:05.4916824Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:05.4917080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4917348Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.4917352Z 
2025-01-10T13:49:05.4917653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:05.4917657Z 
2025-01-10T13:49:05.4917826Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:05.4917830Z 
2025-01-10T13:49:05.4918055Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f3bf874c6e0>
2025-01-10T13:49:05.4918340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3be81b1400>
2025-01-10T13:49:05.4918414Z attr = 'j_blues'
2025-01-10T13:49:05.4918419Z 
2025-01-10T13:49:05.4918555Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:05.4918666Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:05.4918750Z         key = f"plasma/{attr}"
2025-01-10T13:49:05.4918817Z         try:
2025-01-10T13:49:05.4918958Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:05.4919035Z         except KeyError:
2025-01-10T13:49:05.4919173Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:05.4919239Z     
2025-01-10T13:49:05.4919326Z         if hasattr(plasma, attr):
2025-01-10T13:49:05.4919510Z             actual = getattr(plasma, attr)
2025-01-10T13:49:05.4919610Z             if attr == "selected_atoms":
2025-01-10T13:49:05.4919745Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:05.4919839Z             elif actual.ndim == 1:
2025-01-10T13:49:05.4919933Z                 actual = pd.Series(actual)
2025-01-10T13:49:05.4920039Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:05.4920114Z             else:
2025-01-10T13:49:05.4920207Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4920318Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:05.4920322Z 
2025-01-10T13:49:05.4920447Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:05.4920563Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4920704Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4920778Z     ???
2025-01-10T13:49:05.4920889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4920900Z 
2025-01-10T13:49:05.4920971Z >   ???
2025-01-10T13:49:05.4921103Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.4921172Z E   
2025-01-10T13:49:05.4921302Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.4921410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4921486Z E          ...
2025-01-10T13:49:05.4921571Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4921699Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4921807Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.4921881Z E          ...
2025-01-10T13:49:05.4921962Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.4922085Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.4922188Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.4922192Z 
2025-01-10T13:49:05.4922286Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4922458Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-10T13:49:05.4922463Z 
2025-01-10T13:49:05.4922696Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4922789Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:05.4923058Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bf2436bd0>
2025-01-10T13:49:05.4923063Z 
2025-01-10T13:49:05.4923212Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4923378Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4923501Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4923764Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4923892Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4923983Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4924070Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4924293Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4924298Z 
2025-01-10T13:49:05.4924401Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4924515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4924519Z 
2025-01-10T13:49:05.4924836Z args = (<function assert_allclose.<locals>.compare at 0x7f3bf2999da0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-10T13:49:05.4924913Z         0.01476858],
2025-01-10T13:49:05.4925043Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-10T13:49:05.4925118Z         0.01473787]]))
2025-01-10T13:49:05.4925379Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4925484Z 
2025-01-10T13:49:05.4925560Z     @wraps(func)
2025-01-10T13:49:05.4925647Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4925730Z         with self._recreate_cm():
2025-01-10T13:49:05.4925823Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4925905Z E           AssertionError: 
2025-01-10T13:49:05.4926017Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4926085Z E           
2025-01-10T13:49:05.4926192Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:49:05.4926306Z E           Max absolute difference among violations: 1.
2025-01-10T13:49:05.4926420Z E           Max relative difference among violations: 1.
2025-01-10T13:49:05.4926565Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.4926675Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.4926788Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:05.4926930Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.4927043Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.4927144Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:05.4927148Z 
2025-01-10T13:49:05.4927357Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4927515Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-10T13:49:05.4927519Z 
2025-01-10T13:49:05.4927747Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4927838Z attr = 'lines_lower_level_index'
2025-01-10T13:49:05.4928179Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bc93b0d70>
2025-01-10T13:49:05.4928184Z 
2025-01-10T13:49:05.4928579Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4928789Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4928997Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4929159Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4929338Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4929438Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4929666Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4929816Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4929821Z 
2025-01-10T13:49:05.4929989Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4930166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4930170Z 
2025-01-10T13:49:05.4930583Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcb6d28e0>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-10T13:49:05.4930960Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4931067Z 
2025-01-10T13:49:05.4931174Z     @wraps(func)
2025-01-10T13:49:05.4931322Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4931438Z         with self._recreate_cm():
2025-01-10T13:49:05.4931574Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4931737Z E           AssertionError: 
2025-01-10T13:49:05.4931940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4932075Z E           
2025-01-10T13:49:05.4932208Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:49:05.4932374Z E           Max absolute difference among violations: 4005
2025-01-10T13:49:05.4932596Z E           Max relative difference among violations: 26.00649351
2025-01-10T13:49:05.4932807Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:05.4933041Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:05.4933045Z 
2025-01-10T13:49:05.4933318Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4933527Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-10T13:49:05.4933531Z 
2025-01-10T13:49:05.4934016Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4934187Z attr = 'lines_upper_level_index'
2025-01-10T13:49:05.4934486Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bd0013440>
2025-01-10T13:49:05.4934490Z 
2025-01-10T13:49:05.4934698Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4934909Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4935124Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4935304Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4935488Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4935611Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4935785Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4935980Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4935984Z 
2025-01-10T13:49:05.4936132Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4936308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4936312Z 
2025-01-10T13:49:05.4936732Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd04ca340>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-10T13:49:05.4937062Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4937067Z 
2025-01-10T13:49:05.4937235Z     @wraps(func)
2025-01-10T13:49:05.4937367Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4937516Z         with self._recreate_cm():
2025-01-10T13:49:05.4937655Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4937801Z E           AssertionError: 
2025-01-10T13:49:05.4937922Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4938112Z E           
2025-01-10T13:49:05.4938242Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:49:05.4938441Z E           Max absolute difference among violations: 4046
2025-01-10T13:49:05.4938601Z E           Max relative difference among violations: 24.82208589
2025-01-10T13:49:05.4938773Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:05.4938970Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:05.4939026Z 
2025-01-10T13:49:05.4939253Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4939488Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-10T13:49:05.4939492Z 
2025-01-10T13:49:05.4939750Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4940003Z attr = 'beta_sobolev'
2025-01-10T13:49:05.4940345Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be3e71640>
2025-01-10T13:49:05.4940350Z 
2025-01-10T13:49:05.4940593Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4940781Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4940964Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4941146Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4941337Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4941523Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4941642Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4941918Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4941923Z 
2025-01-10T13:49:05.4942061Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4942293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4942298Z 
2025-01-10T13:49:05.4942612Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd04c9940>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4942748Z        [1., 1., .....,
2025-01-10T13:49:05.4942889Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4942993Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4943180Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:49:05.4943473Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4943477Z 
2025-01-10T13:49:05.4943728Z     @wraps(func)
2025-01-10T13:49:05.4943842Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4943996Z         with self._recreate_cm():
2025-01-10T13:49:05.4944251Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4944427Z E           AssertionError: 
2025-01-10T13:49:05.4944586Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4944741Z E           
2025-01-10T13:49:05.4944949Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:05.4945108Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:49:05.4945304Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:49:05.4945437Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4945614Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4945764Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.4945933Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4946045Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.4946199Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.4946203Z 
2025-01-10T13:49:05.4946495Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4946701Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-10T13:49:05.4946706Z 
2025-01-10T13:49:05.4946996Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4947103Z attr = 'lines'
2025-01-10T13:49:05.4947438Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bcba6a270>
2025-01-10T13:49:05.4947442Z 
2025-01-10T13:49:05.4947619Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4947919Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4948099Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4948256Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4948441Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4948544Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4948899Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4949031Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4949035Z 
2025-01-10T13:49:05.4949202Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4949340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4949344Z 
2025-01-10T13:49:05.4949863Z args = (<function assert_allclose.<locals>.compare at 0x7f3bccab3ec0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-10T13:49:05.4950090Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-10T13:49:05.4950370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4950374Z 
2025-01-10T13:49:05.4950618Z     @wraps(func)
2025-01-10T13:49:05.4950749Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4950884Z         with self._recreate_cm():
2025-01-10T13:49:05.4951060Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4951229Z E           AssertionError: 
2025-01-10T13:49:05.4951365Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4951516Z E           
2025-01-10T13:49:05.4951646Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:49:05.4951875Z E           Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:49:05.4952090Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:49:05.4952288Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:05.4952455Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:49:05.4952626Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:05.4952893Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:05.4953024Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:49:05.4953242Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:05.4953248Z 
2025-01-10T13:49:05.4953511Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4954876Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-10T13:49:05.4954881Z 
2025-01-10T13:49:05.4955216Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4955334Z attr = 'f_lu'
2025-01-10T13:49:05.4955688Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bcba68410>
2025-01-10T13:49:05.4955692Z 
2025-01-10T13:49:05.4955865Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4956096Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4956308Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4956502Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4956687Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4956802Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4956954Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4957068Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4957072Z 
2025-01-10T13:49:05.4957314Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4957452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4957456Z 
2025-01-10T13:49:05.4957982Z args = (<function assert_allclose.<locals>.compare at 0x7f3bccab2340>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-10T13:49:05.4958157Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-10T13:49:05.4958421Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4958543Z 
2025-01-10T13:49:05.4958778Z     @wraps(func)
2025-01-10T13:49:05.4958888Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4959037Z         with self._recreate_cm():
2025-01-10T13:49:05.4959151Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4959300Z E           AssertionError: 
2025-01-10T13:49:05.4959475Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4959623Z E           
2025-01-10T13:49:05.4959790Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:49:05.4959945Z E           Max absolute difference among violations: 2.92713618
2025-01-10T13:49:05.4960142Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:49:05.4960493Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:05.4960665Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:49:05.4960862Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:05.4961032Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:49:05.4961037Z 
2025-01-10T13:49:05.4961266Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4961519Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-10T13:49:05.4961523Z 
2025-01-10T13:49:05.4961828Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f3bf8129040>
2025-01-10T13:49:05.4961936Z attr = 'tau_sobolevs'
2025-01-10T13:49:05.4962284Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bf2ba6390>
2025-01-10T13:49:05.4962289Z 
2025-01-10T13:49:05.4962459Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:05.4962717Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:05.4962880Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:05.4963076Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:05.4963240Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:05.4963390Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:05.4963570Z                 actual = actual.cgs.value
2025-01-10T13:49:05.4963856Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:05.4963861Z 
2025-01-10T13:49:05.4964048Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:05.4964187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4964191Z 
2025-01-10T13:49:05.4964709Z args = (<function assert_allclose.<locals>.compare at 0x7f3bf2998ae0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-10T13:49:05.4964834Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-10T13:49:05.4965226Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.4965235Z 
2025-01-10T13:49:05.4965387Z     @wraps(func)
2025-01-10T13:49:05.4965496Z     def inner(*args, **kwds):
2025-01-10T13:49:05.4965648Z         with self._recreate_cm():
2025-01-10T13:49:05.4965747Z >           return func(*args, **kwds)
2025-01-10T13:49:05.4965959Z E           AssertionError: 
2025-01-10T13:49:05.4966110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.4966242Z E           
2025-01-10T13:49:05.4966373Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:49:05.4966561Z E           Max absolute difference among violations: 282815.33818472
2025-01-10T13:49:05.4966770Z E           Max relative difference among violations: 4.12352828e+47
2025-01-10T13:49:05.4967036Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:05.4967187Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:49:05.4967353Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:05.4967694Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:05.4967854Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:49:05.4968083Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:05.4968088Z 
2025-01-10T13:49:05.4968314Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.4968542Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-10T13:49:05.4968545Z 
2025-01-10T13:49:05.4968812Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.4968980Z attr = 'iterations_w'
2025-01-10T13:49:05.4969451Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be797e810>
2025-01-10T13:49:05.4969457Z 
2025-01-10T13:49:05.4969584Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.4969723Z         "attr",
2025-01-10T13:49:05.4969837Z         [
2025-01-10T13:49:05.4970010Z             "iterations_w",
2025-01-10T13:49:05.4970135Z             "iterations_t_rad",
2025-01-10T13:49:05.4970319Z             "iterations_electron_densities",
2025-01-10T13:49:05.4970447Z             "iterations_t_inner",
2025-01-10T13:49:05.4970657Z         ],
2025-01-10T13:49:05.4970798Z     )
2025-01-10T13:49:05.4971024Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.4971184Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:05.4971354Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.4971532Z             actual = actual.value
2025-01-10T13:49:05.4971653Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4971842Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.4972052Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.4972061Z 
2025-01-10T13:49:05.4972271Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:05.4972440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4972649Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4972780Z     ???
2025-01-10T13:49:05.4972919Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4972923Z 
2025-01-10T13:49:05.4973118Z >   ???
2025-01-10T13:49:05.4973341Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4973471Z E   
2025-01-10T13:49:05.4973781Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.4973924Z E   [index]: [0, 1]
2025-01-10T13:49:05.4974044Z E   [left]:  [0.40039163797855976, 0.45013644671958974]
2025-01-10T13:49:05.4974325Z E   [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:49:05.4974523Z E   At positional index 1, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:49:05.4974567Z 
2025-01-10T13:49:05.4974684Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4974907Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.4975363Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.4975936Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.4976121Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:05.4976125Z 
2025-01-10T13:49:05.4976129Z 
2025-01-10T13:49:05.4976431Z Packets:                                                                                   4031/? [04:49<00:00,  7.41it/s] [A
2025-01-10T13:49:05.4976436Z 
2025-01-10T13:49:05.4976744Z Packets:                                                                                   14317/? [04:49<00:00, 58.83it/s][A
2025-01-10T13:49:05.4976868Z 
2025-01-10T13:49:05.4977116Z Packets:                                                                                   24936/? [04:49<00:00, 134.58it/s][A
2025-01-10T13:49:05.4977121Z 
2025-01-10T13:49:05.4977470Z Packets:                                                                                   35660/? [04:49<00:00, 243.67it/s][A
2025-01-10T13:49:05.4978105Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:49<00:00, 101.83s/it]
2025-01-10T13:49:05.4978110Z 
2025-01-10T13:49:05.4978412Z Packets:                                                                                   44030/? [04:49<00:00, 243.67it/s][A
2025-01-10T13:49:05.4978417Z 
2025-01-10T13:49:05.4978855Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-10T13:49:05.4978860Z 
2025-01-10T13:49:05.4979146Z Packets:   ███████████████████▏                                                            9614/40000 [00:00<00:00, 34813.69it/s][A
2025-01-10T13:49:05.4979164Z 
2025-01-10T13:49:05.4979565Z Packets:   ██████████████████████████▏                                                     13096/40000 [00:00<00:00, 34643.21it/s][A
2025-01-10T13:49:05.4979570Z 
2025-01-10T13:49:05.4979924Z Packets:   █████████████████████████████████▎                                              16634/40000 [00:00<00:00, 34878.68it/s][A
2025-01-10T13:49:05.4979928Z 
2025-01-10T13:49:05.4980237Z Packets:   ████████████████████████████████████████▎                                       20125/40000 [00:00<00:00, 34880.32it/s][A
2025-01-10T13:49:05.4980242Z 
2025-01-10T13:49:05.4980587Z Packets:   ███████████████████████████████████████████████▎                                23644/40000 [00:00<00:00, 34975.65it/s][A
2025-01-10T13:49:05.4980592Z 
2025-01-10T13:49:05.4980912Z Packets:   ██████████████████████████████████████████████████████▍                         27234/40000 [00:00<00:00, 35260.29it/s][A
2025-01-10T13:49:05.4981009Z 
2025-01-10T13:49:05.4981359Z Packets:   █████████████████████████████████████████████████████████████▌                  30765/40000 [00:00<00:00, 35236.98it/s][A
2025-01-10T13:49:05.4981364Z 
2025-01-10T13:49:05.4981752Z Packets:   ████████████████████████████████████████████████████████████████████▌           34296/40000 [00:00<00:00, 35256.78it/s][A
2025-01-10T13:49:05.4981757Z 
2025-01-10T13:49:05.4982095Z Packets:   ███████████████████████████████████████████████████████████████████████████▋    37871/40000 [00:01<00:00, 35404.70it/s][A
2025-01-10T13:49:05.4982308Z Iterations:                                                                                6/? [04:51<00:00, 68.01s/it] 
2025-01-10T13:49:05.4982312Z 
2025-01-10T13:49:05.4988889Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35404.70it/s][A
2025-01-10T13:49:05.4989222Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.4990001Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.4990191Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-10T13:49:05.4990196Z 
2025-01-10T13:49:05.4990420Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.4990511Z attr = 'iterations_t_rad'
2025-01-10T13:49:05.4990782Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3becaa1040>
2025-01-10T13:49:05.4990787Z 
2025-01-10T13:49:05.4990888Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.4990964Z         "attr",
2025-01-10T13:49:05.4991031Z         [
2025-01-10T13:49:05.4991226Z             "iterations_w",
2025-01-10T13:49:05.4991310Z             "iterations_t_rad",
2025-01-10T13:49:05.4991414Z             "iterations_electron_densities",
2025-01-10T13:49:05.4991505Z             "iterations_t_inner",
2025-01-10T13:49:05.4991577Z         ],
2025-01-10T13:49:05.4991644Z     )
2025-01-10T13:49:05.4991849Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.4991961Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:05.4992050Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.4992131Z             actual = actual.value
2025-01-10T13:49:05.4992225Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4992350Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.4992531Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.4992535Z 
2025-01-10T13:49:05.4992659Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:05.4992780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4992934Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4993008Z     ???
2025-01-10T13:49:05.4993125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4993128Z 
2025-01-10T13:49:05.4993194Z >   ???
2025-01-10T13:49:05.4993378Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4993443Z E   
2025-01-10T13:49:05.4993766Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.4993844Z E   [index]: [0, 1]
2025-01-10T13:49:05.4993948Z E   [left]:  [9967.488442185557, 10090.925208074616]
2025-01-10T13:49:05.4994046Z E   [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:49:05.4994227Z E   At positional index 1, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:49:05.4994231Z 
2025-01-10T13:49:05.4994323Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4994512Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-10T13:49:05.4994516Z 
2025-01-10T13:49:05.4994740Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.4994835Z attr = 'iterations_electron_densities'
2025-01-10T13:49:05.4995114Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebed3c80>
2025-01-10T13:49:05.4995118Z 
2025-01-10T13:49:05.4995210Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.4995284Z         "attr",
2025-01-10T13:49:05.4995351Z         [
2025-01-10T13:49:05.4995432Z             "iterations_w",
2025-01-10T13:49:05.4995515Z             "iterations_t_rad",
2025-01-10T13:49:05.4995611Z             "iterations_electron_densities",
2025-01-10T13:49:05.4995696Z             "iterations_t_inner",
2025-01-10T13:49:05.4995763Z         ],
2025-01-10T13:49:05.4995833Z     )
2025-01-10T13:49:05.4996035Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.4996152Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:05.4996358Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.4996444Z             actual = actual.value
2025-01-10T13:49:05.4996533Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:05.4996661Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.4996839Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.4996843Z 
2025-01-10T13:49:05.4996964Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:05.4997079Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4997230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.4997301Z     ???
2025-01-10T13:49:05.4997409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.4997413Z 
2025-01-10T13:49:05.4997484Z >   ???
2025-01-10T13:49:05.4997784Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.4997858Z E   
2025-01-10T13:49:05.4998021Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.4998099Z E   [index]: [0, 1]
2025-01-10T13:49:05.4998195Z E   [left]:  [2869544645.3209715, 2880986026.9779425]
2025-01-10T13:49:05.4998296Z E   [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:49:05.4998460Z E   At positional index 1, first diff: 2880986026.9779425 != 2881024886.0882792
2025-01-10T13:49:05.4998469Z 
2025-01-10T13:49:05.4998554Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.4998720Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-10T13:49:05.4998724Z 
2025-01-10T13:49:05.4998938Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.4999024Z attr = 'nu_bar_estimator'
2025-01-10T13:49:05.4999297Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebeb2f90>
2025-01-10T13:49:05.4999302Z 
2025-01-10T13:49:05.4999395Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.4999468Z         "attr",
2025-01-10T13:49:05.4999539Z         [
2025-01-10T13:49:05.4999617Z             "nu_bar_estimator",
2025-01-10T13:49:05.4999697Z             "j_estimator",
2025-01-10T13:49:05.4999770Z             "t_radiative",
2025-01-10T13:49:05.4999853Z             "dilution_factor",
2025-01-10T13:49:05.4999933Z             "output_nus",
2025-01-10T13:49:05.5000012Z             "output_energies",
2025-01-10T13:49:05.5000087Z         ],
2025-01-10T13:49:05.5000152Z     )
2025-01-10T13:49:05.5000334Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5000448Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5000530Z             actual = getattr(
2025-01-10T13:49:05.5000718Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5000796Z                 attr,
2025-01-10T13:49:05.5000864Z             )
2025-01-10T13:49:05.5000984Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5001134Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5001249Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5001325Z             actual = getattr(
2025-01-10T13:49:05.5001498Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5001572Z                 attr,
2025-01-10T13:49:05.5001642Z             )
2025-01-10T13:49:05.5001713Z         else:
2025-01-10T13:49:05.5001844Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5001915Z     
2025-01-10T13:49:05.5001999Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5002081Z             actual = actual.value
2025-01-10T13:49:05.5002165Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5002289Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5002464Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5002557Z 
2025-01-10T13:49:05.5002678Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5002787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5002933Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5003003Z     ???
2025-01-10T13:49:05.5003107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5003111Z 
2025-01-10T13:49:05.5003184Z >   ???
2025-01-10T13:49:05.5003280Z E   AssertionError: Series are different
2025-01-10T13:49:05.5003349Z E   
2025-01-10T13:49:05.5003440Z E   Series values are different (100.0 %)
2025-01-10T13:49:05.5003569Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.5005013Z E   [left]:  [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-10T13:49:05.5006226Z E   [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:49:05.5006423Z E   At positional index 0, first diff: 1.0190851489144414e+29 != 1.0202042777991753e+29
2025-01-10T13:49:05.5006428Z 
2025-01-10T13:49:05.5006515Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5006678Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-10T13:49:05.5006682Z 
2025-01-10T13:49:05.5006903Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.5006979Z attr = 'j_estimator'
2025-01-10T13:49:05.5007254Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebee0380>
2025-01-10T13:49:05.5007258Z 
2025-01-10T13:49:05.5007346Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5007419Z         "attr",
2025-01-10T13:49:05.5007486Z         [
2025-01-10T13:49:05.5007572Z             "nu_bar_estimator",
2025-01-10T13:49:05.5007649Z             "j_estimator",
2025-01-10T13:49:05.5007730Z             "t_radiative",
2025-01-10T13:49:05.5007807Z             "dilution_factor",
2025-01-10T13:49:05.5007886Z             "output_nus",
2025-01-10T13:49:05.5007967Z             "output_energies",
2025-01-10T13:49:05.5008040Z         ],
2025-01-10T13:49:05.5008105Z     )
2025-01-10T13:49:05.5008285Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5008399Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5008475Z             actual = getattr(
2025-01-10T13:49:05.5008668Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5008737Z                 attr,
2025-01-10T13:49:05.5008809Z             )
2025-01-10T13:49:05.5008923Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5009075Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5009185Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5009266Z             actual = getattr(
2025-01-10T13:49:05.5009436Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5009511Z                 attr,
2025-01-10T13:49:05.5009578Z             )
2025-01-10T13:49:05.5009652Z         else:
2025-01-10T13:49:05.5009897Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5009969Z     
2025-01-10T13:49:05.5010056Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5010135Z             actual = actual.value
2025-01-10T13:49:05.5010222Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5010341Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5010521Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5010525Z 
2025-01-10T13:49:05.5010638Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5010750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5010890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5010961Z     ???
2025-01-10T13:49:05.5011139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5011144Z 
2025-01-10T13:49:05.5011222Z >   ???
2025-01-10T13:49:05.5011322Z E   AssertionError: Series are different
2025-01-10T13:49:05.5011388Z E   
2025-01-10T13:49:05.5011484Z E   Series values are different (100.0 %)
2025-01-10T13:49:05.5011610Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.5012573Z E   [left]:  [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-10T13:49:05.5013522Z E   [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:49:05.5013801Z E   At positional index 0, first diff: 116548101693134.0 != 116635492761989.08
2025-01-10T13:49:05.5013805Z 
2025-01-10T13:49:05.5013896Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5014049Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-10T13:49:05.5014053Z 
2025-01-10T13:49:05.5014267Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.5014346Z attr = 't_radiative'
2025-01-10T13:49:05.5014613Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebee97c0>
2025-01-10T13:49:05.5014617Z 
2025-01-10T13:49:05.5014705Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5014782Z         "attr",
2025-01-10T13:49:05.5014853Z         [
2025-01-10T13:49:05.5014937Z             "nu_bar_estimator",
2025-01-10T13:49:05.5015018Z             "j_estimator",
2025-01-10T13:49:05.5015096Z             "t_radiative",
2025-01-10T13:49:05.5015179Z             "dilution_factor",
2025-01-10T13:49:05.5015254Z             "output_nus",
2025-01-10T13:49:05.5015336Z             "output_energies",
2025-01-10T13:49:05.5015403Z         ],
2025-01-10T13:49:05.5015473Z     )
2025-01-10T13:49:05.5015645Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5015756Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5015834Z             actual = getattr(
2025-01-10T13:49:05.5016022Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5016090Z                 attr,
2025-01-10T13:49:05.5016162Z             )
2025-01-10T13:49:05.5016276Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5016430Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5016543Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5016744Z             actual = getattr(
2025-01-10T13:49:05.5016913Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5016983Z                 attr,
2025-01-10T13:49:05.5017055Z             )
2025-01-10T13:49:05.5017121Z         else:
2025-01-10T13:49:05.5017256Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5017321Z     
2025-01-10T13:49:05.5017410Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5017491Z             actual = actual.value
2025-01-10T13:49:05.5017578Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5017697Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5017873Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5017982Z 
2025-01-10T13:49:05.5018105Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5018210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5018358Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5018424Z     ???
2025-01-10T13:49:05.5018533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5018536Z 
2025-01-10T13:49:05.5018602Z >   ???
2025-01-10T13:49:05.5018700Z E   AssertionError: Series are different
2025-01-10T13:49:05.5018766Z E   
2025-01-10T13:49:05.5018864Z E   Series values are different (90.0 %)
2025-01-10T13:49:05.5018985Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.5019983Z E   [left]:  [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-10T13:49:05.5020970Z E   [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:49:05.5021136Z E   At positional index 0, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:49:05.5021141Z 
2025-01-10T13:49:05.5021230Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5021390Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-10T13:49:05.5021399Z 
2025-01-10T13:49:05.5021614Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.5021698Z attr = 'dilution_factor'
2025-01-10T13:49:05.5021962Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebee8d70>
2025-01-10T13:49:05.5021969Z 
2025-01-10T13:49:05.5022064Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5022132Z         "attr",
2025-01-10T13:49:05.5022203Z         [
2025-01-10T13:49:05.5022278Z             "nu_bar_estimator",
2025-01-10T13:49:05.5022357Z             "j_estimator",
2025-01-10T13:49:05.5022429Z             "t_radiative",
2025-01-10T13:49:05.5022512Z             "dilution_factor",
2025-01-10T13:49:05.5022585Z             "output_nus",
2025-01-10T13:49:05.5022668Z             "output_energies",
2025-01-10T13:49:05.5022734Z         ],
2025-01-10T13:49:05.5022805Z     )
2025-01-10T13:49:05.5022984Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5023091Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5023175Z             actual = getattr(
2025-01-10T13:49:05.5023358Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5023534Z                 attr,
2025-01-10T13:49:05.5023910Z             )
2025-01-10T13:49:05.5024030Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5024175Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5024287Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5024362Z             actual = getattr(
2025-01-10T13:49:05.5024532Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5024601Z                 attr,
2025-01-10T13:49:05.5024671Z             )
2025-01-10T13:49:05.5024738Z         else:
2025-01-10T13:49:05.5024872Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5024942Z     
2025-01-10T13:49:05.5025138Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5025228Z             actual = actual.value
2025-01-10T13:49:05.5025310Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5025438Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5025611Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5025615Z 
2025-01-10T13:49:05.5025733Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5025840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5025985Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5026051Z     ???
2025-01-10T13:49:05.5026158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5026163Z 
2025-01-10T13:49:05.5026232Z >   ???
2025-01-10T13:49:05.5026324Z E   AssertionError: Series are different
2025-01-10T13:49:05.5026396Z E   
2025-01-10T13:49:05.5026487Z E   Series values are different (95.0 %)
2025-01-10T13:49:05.5026615Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.5027694Z E   [left]:  [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-10T13:49:05.5028774Z E   [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:49:05.5028949Z E   At positional index 0, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:49:05.5028953Z 
2025-01-10T13:49:05.5029040Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5029198Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-10T13:49:05.5029202Z 
2025-01-10T13:49:05.5029411Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.5029492Z attr = 'output_nus'
2025-01-10T13:49:05.5029755Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebeeb800>
2025-01-10T13:49:05.5029765Z 
2025-01-10T13:49:05.5029852Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5029925Z         "attr",
2025-01-10T13:49:05.5029990Z         [
2025-01-10T13:49:05.5030073Z             "nu_bar_estimator",
2025-01-10T13:49:05.5030147Z             "j_estimator",
2025-01-10T13:49:05.5030226Z             "t_radiative",
2025-01-10T13:49:05.5030306Z             "dilution_factor",
2025-01-10T13:49:05.5030384Z             "output_nus",
2025-01-10T13:49:05.5030461Z             "output_energies",
2025-01-10T13:49:05.5030646Z         ],
2025-01-10T13:49:05.5030715Z     )
2025-01-10T13:49:05.5030892Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5030998Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5031081Z             actual = getattr(
2025-01-10T13:49:05.5031267Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5031343Z                 attr,
2025-01-10T13:49:05.5031419Z             )
2025-01-10T13:49:05.5031529Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5031679Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5031785Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5031867Z             actual = getattr(
2025-01-10T13:49:05.5032108Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5032186Z                 attr,
2025-01-10T13:49:05.5032257Z             )
2025-01-10T13:49:05.5032328Z         else:
2025-01-10T13:49:05.5032457Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5032529Z     
2025-01-10T13:49:05.5032613Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5032698Z             actual = actual.value
2025-01-10T13:49:05.5032781Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5032905Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5033088Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5033092Z 
2025-01-10T13:49:05.5033213Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5033321Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5033471Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5033539Z     ???
2025-01-10T13:49:05.5033755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5033763Z 
2025-01-10T13:49:05.5033832Z >   ???
2025-01-10T13:49:05.5033932Z E   AssertionError: Series are different
2025-01-10T13:49:05.5034002Z E   
2025-01-10T13:49:05.5034103Z E   Series values are different (5.1125 %)
2025-01-10T13:49:05.5034477Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5039633Z E   [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:49:05.5045106Z E   [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:49:05.5045302Z E   At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:49:05.5045306Z 
2025-01-10T13:49:05.5045401Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5045572Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-10T13:49:05.5045577Z 
2025-01-10T13:49:05.5045802Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f3becaa5460>
2025-01-10T13:49:05.5045886Z attr = 'output_energies'
2025-01-10T13:49:05.5046160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bebee9520>
2025-01-10T13:49:05.5046164Z 
2025-01-10T13:49:05.5046251Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5046326Z         "attr",
2025-01-10T13:49:05.5046392Z         [
2025-01-10T13:49:05.5046474Z             "nu_bar_estimator",
2025-01-10T13:49:05.5046553Z             "j_estimator",
2025-01-10T13:49:05.5046626Z             "t_radiative",
2025-01-10T13:49:05.5046711Z             "dilution_factor",
2025-01-10T13:49:05.5046785Z             "output_nus",
2025-01-10T13:49:05.5046867Z             "output_energies",
2025-01-10T13:49:05.5046934Z         ],
2025-01-10T13:49:05.5047004Z     )
2025-01-10T13:49:05.5047188Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:05.5047309Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:05.5047385Z             actual = getattr(
2025-01-10T13:49:05.5047693Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:05.5047765Z                 attr,
2025-01-10T13:49:05.5047838Z             )
2025-01-10T13:49:05.5047952Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:05.5048107Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:05.5048222Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:05.5048296Z             actual = getattr(
2025-01-10T13:49:05.5048477Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:05.5048547Z                 attr,
2025-01-10T13:49:05.5048619Z             )
2025-01-10T13:49:05.5048686Z         else:
2025-01-10T13:49:05.5048925Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:05.5048997Z     
2025-01-10T13:49:05.5049087Z         if hasattr(actual, "value"):
2025-01-10T13:49:05.5049173Z             actual = actual.value
2025-01-10T13:49:05.5049262Z         actual = pd.Series(actual)
2025-01-10T13:49:05.5049386Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:05.5049569Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:05.5049573Z 
2025-01-10T13:49:05.5049694Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:05.5049802Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5049951Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:05.5050019Z     ???
2025-01-10T13:49:05.5050130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5050134Z 
2025-01-10T13:49:05.5050201Z >   ???
2025-01-10T13:49:05.5050304Z E   AssertionError: Series are different
2025-01-10T13:49:05.5050372Z E   
2025-01-10T13:49:05.5050474Z E   Series values are different (1.3025 %)
2025-01-10T13:49:05.5050844Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5057211Z E   [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:05.5063847Z E   [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:05.5064078Z E   At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:49:05.5064088Z 
2025-01-10T13:49:05.5064178Z testing.pyx:173: AssertionError
2025-01-10T13:49:05.5064369Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-10T13:49:05.5064373Z 
2025-01-10T13:49:05.5064631Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f3bf866eed0>
2025-01-10T13:49:05.5064829Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bc665c140>
2025-01-10T13:49:05.5064833Z 
2025-01-10T13:49:05.5064956Z     def test_spectrum_real_packets(self, simulation):
2025-01-10T13:49:05.5065112Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:05.5065301Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:05.5065480Z     
2025-01-10T13:49:05.5065667Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:05.5065795Z         result = solver.spectrum_real_packets.luminosity
2025-01-10T13:49:05.5065971Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:05.5066069Z         expected = self.get_expected_data(key)
2025-01-10T13:49:05.5066141Z     
2025-01-10T13:49:05.5066246Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5066318Z     
2025-01-10T13:49:05.5066403Z >       assert_quantity_allclose(
2025-01-10T13:49:05.5066482Z             result,
2025-01-10T13:49:05.5066557Z             luminosity,
2025-01-10T13:49:05.5066631Z         )
2025-01-10T13:49:05.5066635Z 
2025-01-10T13:49:05.5066851Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-10T13:49:05.5066970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5067317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5067412Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5067526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5067530Z 
2025-01-10T13:49:05.5067993Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc64e51c0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:49:05.5068098Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5068353Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5068356Z 
2025-01-10T13:49:05.5068438Z     @wraps(func)
2025-01-10T13:49:05.5068516Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5068604Z         with self._recreate_cm():
2025-01-10T13:49:05.5068700Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5068784Z E           AssertionError: 
2025-01-10T13:49:05.5068896Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5068965Z E           
2025-01-10T13:49:05.5069071Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:05.5069209Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:05.5069324Z E           Max relative difference among violations: 1.
2025-01-10T13:49:05.5069492Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5069581Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5069748Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5069836Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5069840Z 
2025-01-10T13:49:05.5070038Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5070244Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-10T13:49:05.5070248Z 
2025-01-10T13:49:05.5070507Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f3bf866f440>
2025-01-10T13:49:05.5070699Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bc665c140>
2025-01-10T13:49:05.5070703Z 
2025-01-10T13:49:05.5070852Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-10T13:49:05.5070994Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:05.5071186Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:05.5071251Z     
2025-01-10T13:49:05.5071439Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:05.5071590Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-10T13:49:05.5071795Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-10T13:49:05.5071985Z         expected = self.get_expected_data(key)
2025-01-10T13:49:05.5072050Z     
2025-01-10T13:49:05.5072159Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5072224Z     
2025-01-10T13:49:05.5072310Z >       assert_quantity_allclose(
2025-01-10T13:49:05.5072379Z             result,
2025-01-10T13:49:05.5072460Z             luminosity,
2025-01-10T13:49:05.5072527Z         )
2025-01-10T13:49:05.5072531Z 
2025-01-10T13:49:05.5072656Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-10T13:49:05.5072763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5073094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5073261Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5073377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5073387Z 
2025-01-10T13:49:05.5073975Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8f51260>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-10T13:49:05.5074076Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5074356Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5074361Z 
2025-01-10T13:49:05.5074433Z     @wraps(func)
2025-01-10T13:49:05.5074518Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5074598Z         with self._recreate_cm():
2025-01-10T13:49:05.5074690Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5074771Z E           AssertionError: 
2025-01-10T13:49:05.5074881Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5074956Z E           
2025-01-10T13:49:05.5075056Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:49:05.5075201Z E           Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:49:05.5075325Z E           Max relative difference among violations: 1.03027212
2025-01-10T13:49:05.5075493Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5075577Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5075745Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5075826Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5075830Z 
2025-01-10T13:49:05.5076034Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5076201Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-10T13:49:05.5076211Z 
2025-01-10T13:49:05.5076476Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f3bf866f680>
2025-01-10T13:49:05.5076676Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bc665c140>
2025-01-10T13:49:05.5076683Z 
2025-01-10T13:49:05.5076775Z     def test_solve(self, simulation):
2025-01-10T13:49:05.5076924Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:05.5077110Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:05.5077181Z     
2025-01-10T13:49:05.5077363Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:05.5077523Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-10T13:49:05.5077604Z             transport_state
2025-01-10T13:49:05.5077677Z         )
2025-01-10T13:49:05.5077861Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:05.5077977Z         expected_real = self.get_expected_data(key_real)
2025-01-10T13:49:05.5078052Z     
2025-01-10T13:49:05.5078183Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-10T13:49:05.5078386Z     
2025-01-10T13:49:05.5078472Z >       assert_quantity_allclose(
2025-01-10T13:49:05.5078565Z             result_real.luminosity,
2025-01-10T13:49:05.5078646Z             luminosity_real,
2025-01-10T13:49:05.5078721Z         )
2025-01-10T13:49:05.5078725Z 
2025-01-10T13:49:05.5078852Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-10T13:49:05.5078968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5079306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5079397Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5079508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5079512Z 
2025-01-10T13:49:05.5080095Z args = (<function assert_allclose.<locals>.compare at 0x7f3bf299ade0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:49:05.5080208Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5080460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5080464Z 
2025-01-10T13:49:05.5080542Z     @wraps(func)
2025-01-10T13:49:05.5080623Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5080711Z         with self._recreate_cm():
2025-01-10T13:49:05.5080796Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5080882Z E           AssertionError: 
2025-01-10T13:49:05.5080992Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5081061Z E           
2025-01-10T13:49:05.5081166Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:05.5081303Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:05.5081420Z E           Max relative difference among violations: 1.
2025-01-10T13:49:05.5081586Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5081678Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5081843Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5081929Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5081933Z 
2025-01-10T13:49:05.5082132Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5082309Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-10T13:49:05.5082313Z 
2025-01-10T13:49:05.5082527Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f3bf8674260>
2025-01-10T13:49:05.5082717Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be97d1f70>
2025-01-10T13:49:05.5082721Z 
2025-01-10T13:49:05.5082834Z     def test_j_blue_estimators(self, simulation):
2025-01-10T13:49:05.5082984Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-10T13:49:05.5083090Z         expected = self.get_expected_data(key)
2025-01-10T13:49:05.5083158Z     
2025-01-10T13:49:05.5083245Z >       npt.assert_allclose(
2025-01-10T13:49:05.5083459Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-10T13:49:05.5083544Z             expected.values,
2025-01-10T13:49:05.5083742Z         )
2025-01-10T13:49:05.5083754Z 
2025-01-10T13:49:05.5083847Z tardis/tests/test_tardis_full.py:70: 
2025-01-10T13:49:05.5083959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5083964Z 
2025-01-10T13:49:05.5084232Z args = (<function assert_allclose.<locals>.compare at 0x7f3beae51580>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5084308Z        [0., 0., .....,
2025-01-10T13:49:05.5084381Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5084463Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5084537Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:05.5084909Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5084914Z 
2025-01-10T13:49:05.5084986Z     @wraps(func)
2025-01-10T13:49:05.5085070Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5085156Z         with self._recreate_cm():
2025-01-10T13:49:05.5085240Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5085326Z E           AssertionError: 
2025-01-10T13:49:05.5085429Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5085503Z E           
2025-01-10T13:49:05.5085607Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:49:05.5085751Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:49:05.5085877Z E           Max relative difference among violations: 8.78746214
2025-01-10T13:49:05.5086087Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5086175Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5086270Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5086374Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5086459Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5086549Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5086553Z 
2025-01-10T13:49:05.5086748Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5086905Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5087195Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5087272Z 	
2025-01-10T13:49:05.5087829Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-10T13:49:05.5088009Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5088434Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-10T13:49:05.5088609Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5089086Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-10T13:49:05.5089325Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.5089768Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.5089946Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5090167Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:05.5090335Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5090408Z 	
2025-01-10T13:49:05.5090561Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5090729Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5090796Z 	
2025-01-10T13:49:05.5090898Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:49:05.5090987Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:49:05.5091081Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5091188Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5091345Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5091417Z 	
2025-01-10T13:49:05.5091564Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:05.5091727Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5091793Z 	
2025-01-10T13:49:05.5091905Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:49:05.5091990Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:49:05.5092079Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:49:05.5092162Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:49:05.5092247Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:49:05.5092436Z  ([1mbase.py[0m:650)
2025-01-10T13:49:05.5092599Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5092665Z 	
2025-01-10T13:49:05.5092749Z 	Current t_inner = 9974.969 K
2025-01-10T13:49:05.5092873Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:49:05.5092974Z  ([1mbase.py[0m:652)
2025-01-10T13:49:05.5093138Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5093203Z 	
2025-01-10T13:49:05.5093360Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5093516Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5093588Z 	
2025-01-10T13:49:05.5093788Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:49:05.5093883Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:49:05.5094080Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5094192Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5094349Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5094422Z 	
2025-01-10T13:49:05.5094569Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:05.5094733Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5094799Z 	
2025-01-10T13:49:05.5094907Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5094996Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:49:05.5095075Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:49:05.5095161Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:49:05.5095241Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:49:05.5095349Z  ([1mbase.py[0m:650)
2025-01-10T13:49:05.5095504Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5095575Z 	
2025-01-10T13:49:05.5095658Z 	Current t_inner = 10736.783 K
2025-01-10T13:49:05.5095779Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:49:05.5095880Z  ([1mbase.py[0m:652)
2025-01-10T13:49:05.5096049Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5096119Z 	
2025-01-10T13:49:05.5096271Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5096425Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5096495Z 	
2025-01-10T13:49:05.5096592Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:49:05.5096681Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:49:05.5096777Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5096878Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5097044Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5097263Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:49:05.5097430Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5097497Z 	
2025-01-10T13:49:05.5097651Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:05.5097807Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5097880Z 	
2025-01-10T13:49:05.5097986Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5098076Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:49:05.5098157Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:49:05.5098244Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:49:05.5098330Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:49:05.5098433Z  ([1mbase.py[0m:650)
2025-01-10T13:49:05.5098594Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5098661Z 	
2025-01-10T13:49:05.5098749Z 	Current t_inner = 10718.619 K
2025-01-10T13:49:05.5098865Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:49:05.5098969Z  ([1mbase.py[0m:652)
2025-01-10T13:49:05.5099125Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5099195Z 	
2025-01-10T13:49:05.5099346Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5099506Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5099692Z 	
2025-01-10T13:49:05.5099789Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:49:05.5099877Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:49:05.5099969Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5100072Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5100231Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5100446Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:49:05.5100601Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5100671Z 	
2025-01-10T13:49:05.5100812Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:05.5100976Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5101041Z 	
2025-01-10T13:49:05.5101146Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5101308Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:49:05.5101401Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:49:05.5101488Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:49:05.5101573Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:49:05.5101675Z  ([1mbase.py[0m:650)
2025-01-10T13:49:05.5101842Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5101907Z 	
2025-01-10T13:49:05.5101994Z 	Current t_inner = 10696.651 K
2025-01-10T13:49:05.5102113Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:49:05.5102213Z  ([1mbase.py[0m:652)
2025-01-10T13:49:05.5102379Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5102445Z 	
2025-01-10T13:49:05.5102542Z 	Simulation finished in 4 iterations 
2025-01-10T13:49:05.5102623Z 	Simulation took 12.56 s
2025-01-10T13:49:05.5102726Z  ([1mbase.py[0m:542)
2025-01-10T13:49:05.5102882Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5102957Z 	
2025-01-10T13:49:05.5103106Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5103267Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5103336Z 	
2025-01-10T13:49:05.5103432Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:49:05.5103520Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:49:05.5103728Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5103832Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5103999Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:05.5104004Z 
2025-01-10T13:49:05.5104007Z 
2025-01-10T13:49:05.5104260Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-10T13:49:05.5104265Z 
2025-01-10T13:49:05.5104485Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-10T13:49:05.5104489Z 
2025-01-10T13:49:05.5104752Z Packets:   ████▎                                                                           10668/200000 [00:00<00:01, 106671.20it/s][A
2025-01-10T13:49:05.5104763Z 
2025-01-10T13:49:05.5105014Z Packets:   ████████▋                                                                       21611/200000 [00:00<00:01, 108290.69it/s][A
2025-01-10T13:49:05.5105018Z 
2025-01-10T13:49:05.5105262Z Packets:   █████████████                                                                   32685/200000 [00:00<00:01, 109404.70it/s][A
2025-01-10T13:49:05.5105268Z 
2025-01-10T13:49:05.5105523Z Packets:   █████████████████▍                                                              43684/200000 [00:00<00:01, 109634.77it/s][A
2025-01-10T13:49:05.5105528Z 
2025-01-10T13:49:05.5105781Z Packets:   █████████████████████▉                                                          54756/200000 [00:00<00:01, 110022.92it/s][A
2025-01-10T13:49:05.5105785Z 
2025-01-10T13:49:05.5106062Z Packets:   ██████████████████████████▎                                                     65759/200000 [00:00<00:01, 109448.25it/s][A
2025-01-10T13:49:05.5106187Z 
2025-01-10T13:49:05.5106463Z Packets:   ██████████████████████████████▋                                                 76705/200000 [00:00<00:01, 109123.95it/s][A
2025-01-10T13:49:05.5106467Z 
2025-01-10T13:49:05.5106735Z Packets:   ███████████████████████████████████                                             87618/200000 [00:00<00:01, 108205.35it/s][A
2025-01-10T13:49:05.5106739Z 
2025-01-10T13:49:05.5107023Z Packets:   ███████████████████████████████████████▍                                        98604/200000 [00:00<00:00, 108713.72it/s][A
2025-01-10T13:49:05.5107028Z 
2025-01-10T13:49:05.5107316Z Packets:   ███████████████████████████████████████████▊                                    109568/200000 [00:01<00:00, 108997.38it/s][A
2025-01-10T13:49:05.5107320Z 
2025-01-10T13:49:05.5107736Z Packets:   ████████████████████████████████████████████████▏                               120491/200000 [00:01<00:00, 109066.95it/s][A
2025-01-10T13:49:05.5107742Z 
2025-01-10T13:49:05.5108043Z Packets:   ████████████████████████████████████████████████████▋                           131606/200000 [00:01<00:00, 109697.18it/s][A
2025-01-10T13:49:05.5108059Z 
2025-01-10T13:49:05.5108352Z Packets:   █████████████████████████████████████████████████████████                       142577/200000 [00:01<00:00, 109686.07it/s][A
2025-01-10T13:49:05.5108357Z 
2025-01-10T13:49:05.5108661Z Packets:   █████████████████████████████████████████████████████████████▍                  153713/200000 [00:01<00:00, 110187.59it/s][A
2025-01-10T13:49:05.5108665Z 
2025-01-10T13:49:05.5108976Z Packets:   █████████████████████████████████████████████████████████████████▉              164733/200000 [00:01<00:00, 110031.72it/s][A
2025-01-10T13:49:05.5108980Z 
2025-01-10T13:49:05.5109304Z Packets:   ██████████████████████████████████████████████████████████████████████▎         175737/200000 [00:01<00:00, 109732.15it/s][A
2025-01-10T13:49:05.5109309Z 
2025-01-10T13:49:05.5109632Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     186711/200000 [00:01<00:00, 109620.79it/s][A
2025-01-10T13:49:05.5109651Z 
2025-01-10T13:49:05.5109966Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 197674/200000 [00:01<00:00, 109613.24it/s][A
2025-01-10T13:49:05.5110120Z Iterations:                                                                                13/? [05:52<00:00, 12.16s/it]
2025-01-10T13:49:05.5110124Z 
2025-01-10T13:49:05.5110463Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 109613.24it/s][A
2025-01-10T13:49:05.5110467Z 
2025-01-10T13:49:05.5110702Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:05.5110707Z 
2025-01-10T13:49:05.5110959Z Packets:   ████▍                                                                           10962/200000 [00:00<00:01, 109413.76it/s][A
2025-01-10T13:49:05.5111049Z 
2025-01-10T13:49:05.5111300Z Packets:   ████████▊                                                                       21929/200000 [00:00<00:01, 109559.21it/s][A
2025-01-10T13:49:05.5111304Z 
2025-01-10T13:49:05.5111547Z Packets:   █████████████▏                                                                  32927/200000 [00:00<00:01, 109750.60it/s][A
2025-01-10T13:49:05.5111551Z 
2025-01-10T13:49:05.5111803Z Packets:   █████████████████▌                                                              43903/200000 [00:00<00:01, 109725.85it/s][A
2025-01-10T13:49:05.5111807Z 
2025-01-10T13:49:05.5112066Z Packets:   █████████████████████▉                                                          54876/200000 [00:00<00:01, 109436.75it/s][A
2025-01-10T13:49:05.5112070Z 
2025-01-10T13:49:05.5112419Z Packets:   ██████████████████████████▎                                                     65865/200000 [00:00<00:01, 109588.99it/s][A
2025-01-10T13:49:05.5112424Z 
2025-01-10T13:49:05.5112697Z Packets:   ██████████████████████████████▋                                                 76842/200000 [00:00<00:01, 109644.79it/s][A
2025-01-10T13:49:05.5112709Z 
2025-01-10T13:49:05.5112981Z Packets:   ███████████████████████████████████▏                                            87877/200000 [00:00<00:01, 109868.54it/s][A
2025-01-10T13:49:05.5112985Z 
2025-01-10T13:49:05.5113263Z Packets:   ███████████████████████████████████████▌                                        98864/200000 [00:00<00:00, 109777.12it/s][A
2025-01-10T13:49:05.5113267Z 
2025-01-10T13:49:05.5113558Z Packets:   ███████████████████████████████████████████▉                                    109917/200000 [00:01<00:00, 110007.81it/s][A
2025-01-10T13:49:05.5113563Z 
2025-01-10T13:49:05.5113983Z Packets:   ████████████████████████████████████████████████▎                               120918/200000 [00:01<00:00, 109977.08it/s][A
2025-01-10T13:49:05.5113988Z 
2025-01-10T13:49:05.5114287Z Packets:   ████████████████████████████████████████████████████▊                           131935/200000 [00:01<00:00, 110034.24it/s][A
2025-01-10T13:49:05.5114303Z 
2025-01-10T13:49:05.5114605Z Packets:   █████████████████████████████████████████████████████████▏                      142939/200000 [00:01<00:00, 110017.91it/s][A
2025-01-10T13:49:05.5114609Z 
2025-01-10T13:49:05.5114914Z Packets:   █████████████████████████████████████████████████████████████▌                  153941/200000 [00:01<00:00, 109950.67it/s][A
2025-01-10T13:49:05.5114918Z 
2025-01-10T13:49:05.5115227Z Packets:   █████████████████████████████████████████████████████████████████▉              164937/200000 [00:01<00:00, 109824.09it/s][A
2025-01-10T13:49:05.5115232Z 
2025-01-10T13:49:05.5115543Z Packets:   ██████████████████████████████████████████████████████████████████████▎         175920/200000 [00:01<00:00, 109502.80it/s][A
2025-01-10T13:49:05.5115686Z 
2025-01-10T13:49:05.5116015Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     186953/200000 [00:01<00:00, 109750.12it/s][A
2025-01-10T13:49:05.5116131Z 
2025-01-10T13:49:05.5116459Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏197933/200000 [00:01<00:00, 109763.38it/s][A
2025-01-10T13:49:05.5116612Z Iterations:                                                                                14/? [05:55<00:00,  9.43s/it]
2025-01-10T13:49:05.5116616Z 
2025-01-10T13:49:05.5116939Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 109763.38it/s][A
2025-01-10T13:49:05.5116943Z 
2025-01-10T13:49:05.5117175Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:05.5117179Z 
2025-01-10T13:49:05.5117434Z Packets:   ████▍                                                                           10985/200000 [00:00<00:01, 109849.58it/s][A
2025-01-10T13:49:05.5117438Z 
2025-01-10T13:49:05.5117692Z Packets:   ████████▊                                                                       22030/200000 [00:00<00:01, 110197.73it/s][A
2025-01-10T13:49:05.5117697Z 
2025-01-10T13:49:05.5117943Z Packets:   █████████████▏                                                                  33052/200000 [00:00<00:01, 110207.59it/s][A
2025-01-10T13:49:05.5117947Z 
2025-01-10T13:49:05.5118201Z Packets:   █████████████████▋                                                              44073/200000 [00:00<00:01, 110125.14it/s][A
2025-01-10T13:49:05.5118205Z 
2025-01-10T13:49:05.5118460Z Packets:   ██████████████████████                                                          55086/200000 [00:00<00:01, 110060.35it/s][A
2025-01-10T13:49:05.5118464Z 
2025-01-10T13:49:05.5118738Z Packets:   ██████████████████████████▍                                                     66113/200000 [00:00<00:01, 110131.08it/s][A
2025-01-10T13:49:05.5118742Z 
2025-01-10T13:49:05.5119009Z Packets:   ██████████████████████████████▊                                                 77156/200000 [00:00<00:01, 110226.04it/s][A
2025-01-10T13:49:05.5119098Z 
2025-01-10T13:49:05.5119373Z Packets:   ███████████████████████████████████▎                                            88206/200000 [00:00<00:01, 110312.84it/s][A
2025-01-10T13:49:05.5119377Z 
2025-01-10T13:49:05.5119656Z Packets:   ███████████████████████████████████████▋                                        99270/200000 [00:00<00:00, 110409.28it/s][A
2025-01-10T13:49:05.5119660Z 
2025-01-10T13:49:05.5119951Z Packets:   ████████████████████████████████████████████▏                                   110395/200000 [00:01<00:00, 110668.56it/s][A
2025-01-10T13:49:05.5119956Z 
2025-01-10T13:49:05.5120245Z Packets:   ████████████████████████████████████████████████▌                               121493/200000 [00:01<00:00, 110762.93it/s][A
2025-01-10T13:49:05.5120331Z 
2025-01-10T13:49:05.5120632Z Packets:   █████████████████████████████████████████████████████                           132602/200000 [00:01<00:00, 110862.21it/s][A
2025-01-10T13:49:05.5120649Z 
2025-01-10T13:49:05.5120947Z Packets:   █████████████████████████████████████████████████████████▍                      143689/200000 [00:01<00:00, 110624.68it/s][A
2025-01-10T13:49:05.5120951Z 
2025-01-10T13:49:05.5121261Z Packets:   █████████████████████████████████████████████████████████████▉                  154778/200000 [00:01<00:00, 110704.09it/s][A
2025-01-10T13:49:05.5121265Z 
2025-01-10T13:49:05.5121576Z Packets:   ██████████████████████████████████████████████████████████████████▎             165849/200000 [00:01<00:00, 110507.18it/s][A
2025-01-10T13:49:05.5121581Z 
2025-01-10T13:49:05.5121889Z Packets:   ██████████████████████████████████████████████████████████████████████▊         176900/200000 [00:01<00:00, 110205.92it/s][A
2025-01-10T13:49:05.5121893Z 
2025-01-10T13:49:05.5122230Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    187921/200000 [00:01<00:00, 109977.63it/s][A
2025-01-10T13:49:05.5122248Z 
2025-01-10T13:49:05.5122565Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌198923/200000 [00:01<00:00, 109988.78it/s][A
2025-01-10T13:49:05.5122714Z Iterations:                                                                                15/? [05:58<00:00,  7.53s/it]
2025-01-10T13:49:05.5122717Z 
2025-01-10T13:49:05.5123039Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 109988.78it/s][A
2025-01-10T13:49:05.5123044Z 
2025-01-10T13:49:05.5123274Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:05.5123278Z 
2025-01-10T13:49:05.5123532Z Packets:   ████▍                                                                           11000/200000 [00:00<00:01, 109578.18it/s][A
2025-01-10T13:49:05.5123536Z 
2025-01-10T13:49:05.5123936Z Packets:   ████████▊                                                                       22047/200000 [00:00<00:01, 110101.09it/s][A
2025-01-10T13:49:05.5124086Z 
2025-01-10T13:49:05.5124346Z Packets:   █████████████▎                                                                  33132/200000 [00:00<00:01, 110439.80it/s][A
2025-01-10T13:49:05.5124350Z 
2025-01-10T13:49:05.5124602Z Packets:   █████████████████▋                                                              44177/200000 [00:00<00:01, 109645.40it/s][A
2025-01-10T13:49:05.5124606Z 
2025-01-10T13:49:05.5124859Z Packets:   ██████████████████████                                                          55234/200000 [00:00<00:01, 109976.35it/s][A
2025-01-10T13:49:05.5124863Z 
2025-01-10T13:49:05.5125238Z Packets:   ██████████████████████████▍                                                     66233/200000 [00:00<00:01, 109980.39it/s][A
2025-01-10T13:49:05.5125243Z 
2025-01-10T13:49:05.5125517Z Packets:   ██████████████████████████████▉                                                 77259/200000 [00:00<00:01, 110071.12it/s][A
2025-01-10T13:49:05.5125532Z 
2025-01-10T13:49:05.5125806Z Packets:   ███████████████████████████████████▎                                            88293/200000 [00:00<00:01, 110156.45it/s][A
2025-01-10T13:49:05.5125810Z 
2025-01-10T13:49:05.5126088Z Packets:   ███████████████████████████████████████▋                                        99309/200000 [00:00<00:00, 109475.27it/s][A
2025-01-10T13:49:05.5126092Z 
2025-01-10T13:49:05.5126380Z Packets:   ████████████████████████████████████████████                                    110258/200000 [00:01<00:00, 109239.18it/s][A
2025-01-10T13:49:05.5126384Z 
2025-01-10T13:49:05.5126672Z Packets:   ████████████████████████████████████████████████▍                               121183/200000 [00:01<00:00, 108897.40it/s][A
2025-01-10T13:49:05.5126676Z 
2025-01-10T13:49:05.5126983Z Packets:   ████████████████████████████████████████████████████▊                           132074/200000 [00:01<00:00, 108814.76it/s][A
2025-01-10T13:49:05.5126999Z 
2025-01-10T13:49:05.5127297Z Packets:   █████████████████████████████████████████████████████████▏                      142963/200000 [00:01<00:00, 108836.07it/s][A
2025-01-10T13:49:05.5127302Z 
2025-01-10T13:49:05.5127606Z Packets:   █████████████████████████████████████████████████████████████▌                  153847/200000 [00:01<00:00, 108605.35it/s][A
2025-01-10T13:49:05.5127610Z 
2025-01-10T13:49:05.5127915Z Packets:   █████████████████████████████████████████████████████████████████▉              164738/200000 [00:01<00:00, 108696.79it/s][A
2025-01-10T13:49:05.5127920Z 
2025-01-10T13:49:05.5128232Z Packets:   ██████████████████████████████████████████████████████████████████████▎         175687/200000 [00:01<00:00, 108932.86it/s][A
2025-01-10T13:49:05.5128237Z 
2025-01-10T13:49:05.5128569Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     186581/200000 [00:01<00:00, 108798.86it/s][A
2025-01-10T13:49:05.5128661Z 
2025-01-10T13:49:05.5128984Z Packets:   ██████████████████████████████████████████████████████████████████████████████▉ 197489/200000 [00:01<00:00, 108880.85it/s][A
2025-01-10T13:49:05.5129130Z Iterations:                                                                                16/? [06:01<00:00,  6.21s/it]
2025-01-10T13:49:05.5129134Z 
2025-01-10T13:49:05.5129457Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108880.85it/s][A
2025-01-10T13:49:05.5129461Z 
2025-01-10T13:49:05.5129695Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:05.5129699Z 
2025-01-10T13:49:05.5130022Z Packets:   █▋                                                                              10889/500000 [00:00<00:14, 34139.52it/s][A
2025-01-10T13:49:05.5130026Z 
2025-01-10T13:49:05.5130270Z Packets:   ██▎                                                                             14357/500000 [00:00<00:14, 34305.53it/s][A
2025-01-10T13:49:05.5130284Z 
2025-01-10T13:49:05.5130515Z Packets:   ██▊                                                                             17826/500000 [00:00<00:14, 34422.77it/s][A
2025-01-10T13:49:05.5130519Z 
2025-01-10T13:49:05.5130763Z Packets:   ███▍                                                                            21283/500000 [00:00<00:13, 34372.68it/s][A
2025-01-10T13:49:05.5130767Z 
2025-01-10T13:49:05.5130995Z Packets:   ███▉                                                                            24728/500000 [00:00<00:13, 34365.67it/s][A
2025-01-10T13:49:05.5130999Z 
2025-01-10T13:49:05.5131241Z Packets:   ████▌                                                                           28169/500000 [00:00<00:13, 34218.60it/s][A
2025-01-10T13:49:05.5131245Z 
2025-01-10T13:49:05.5131492Z Packets:   █████                                                                           31595/500000 [00:00<00:13, 34229.52it/s][A
2025-01-10T13:49:05.5131502Z 
2025-01-10T13:49:05.5131738Z Packets:   █████▌                                                                          35025/500000 [00:01<00:13, 34249.67it/s][A
2025-01-10T13:49:05.5131742Z 
2025-01-10T13:49:05.5131979Z Packets:   ██████▏                                                                         38477/500000 [00:01<00:13, 34329.47it/s][A
2025-01-10T13:49:05.5131983Z 
2025-01-10T13:49:05.5132219Z Packets:   ██████▋                                                                         41911/500000 [00:01<00:13, 33444.68it/s][A
2025-01-10T13:49:05.5132223Z 
2025-01-10T13:49:05.5132455Z Packets:   ███████▎                                                                        45444/500000 [00:01<00:13, 33996.45it/s][A
2025-01-10T13:49:05.5132459Z 
2025-01-10T13:49:05.5132709Z Packets:   ███████▊                                                                        48975/500000 [00:01<00:13, 34382.76it/s][A
2025-01-10T13:49:05.5132714Z 
2025-01-10T13:49:05.5133038Z Packets:   ████████▍                                                                       52510/500000 [00:01<00:12, 34664.45it/s][A
2025-01-10T13:49:05.5133043Z 
2025-01-10T13:49:05.5133283Z Packets:   ████████▉                                                                       55982/500000 [00:01<00:12, 34679.47it/s][A
2025-01-10T13:49:05.5133287Z 
2025-01-10T13:49:05.5133528Z Packets:   █████████▌                                                                      59484/500000 [00:01<00:12, 34780.13it/s][A
2025-01-10T13:49:05.5133532Z 
2025-01-10T13:49:05.5133885Z Packets:   ██████████                                                                      62985/500000 [00:01<00:12, 34848.15it/s][A
2025-01-10T13:49:05.5133889Z 
2025-01-10T13:49:05.5134250Z Packets:   ██████████▋                                                                     66512/500000 [00:01<00:12, 34972.46it/s][A
2025-01-10T13:49:05.5134255Z 
2025-01-10T13:49:05.5134503Z Packets:   ███████████▏                                                                    70011/500000 [00:02<00:12, 34776.05it/s][A
2025-01-10T13:49:05.5134520Z 
2025-01-10T13:49:05.5134759Z Packets:   ███████████▊                                                                    73490/500000 [00:02<00:12, 34635.09it/s][A
2025-01-10T13:49:05.5134764Z 
2025-01-10T13:49:05.5135010Z Packets:   ████████████▎                                                                   76955/500000 [00:02<00:12, 33399.95it/s][A
2025-01-10T13:49:05.5135014Z 
2025-01-10T13:49:05.5135254Z Packets:   ████████████▊                                                                   80377/500000 [00:02<00:12, 33633.87it/s][A
2025-01-10T13:49:05.5135258Z 
2025-01-10T13:49:05.5135504Z Packets:   █████████████▍                                                                  83789/500000 [00:02<00:12, 33775.61it/s][A
2025-01-10T13:49:05.5135517Z 
2025-01-10T13:49:05.5135764Z Packets:   █████████████▉                                                                  87184/500000 [00:02<00:12, 33825.39it/s][A
2025-01-10T13:49:05.5135778Z 
2025-01-10T13:49:05.5136023Z Packets:   ██████████████▍                                                                 90578/500000 [00:02<00:12, 33856.91it/s][A
2025-01-10T13:49:05.5136027Z 
2025-01-10T13:49:05.5136275Z Packets:   ███████████████                                                                 94006/500000 [00:02<00:11, 33973.76it/s][A
2025-01-10T13:49:05.5136279Z 
2025-01-10T13:49:05.5136525Z Packets:   ███████████████▌                                                                97406/500000 [00:02<00:11, 33835.54it/s][A
2025-01-10T13:49:05.5136534Z 
2025-01-10T13:49:05.5136785Z Packets:   ████████████████▏                                                               100791/500000 [00:02<00:11, 33737.66it/s][A
2025-01-10T13:49:05.5136790Z 
2025-01-10T13:49:05.5137056Z Packets:   ████████████████▋                                                               104214/500000 [00:03<00:11, 33882.67it/s][A
2025-01-10T13:49:05.5137068Z 
2025-01-10T13:49:05.5137317Z Packets:   █████████████████▏                                                              107633/500000 [00:03<00:11, 33972.47it/s][A
2025-01-10T13:49:05.5137321Z 
2025-01-10T13:49:05.5137575Z Packets:   █████████████████▊                                                              111031/500000 [00:03<00:11, 32887.27it/s][A
2025-01-10T13:49:05.5137579Z 
2025-01-10T13:49:05.5137835Z Packets:   ██████████████████▎                                                             114483/500000 [00:03<00:11, 33363.83it/s][A
2025-01-10T13:49:05.5137839Z 
2025-01-10T13:49:05.5138089Z Packets:   ██████████████████▊                                                             117911/500000 [00:03<00:11, 33631.47it/s][A
2025-01-10T13:49:05.5138093Z 
2025-01-10T13:49:05.5138358Z Packets:   ███████████████████▍                                                            121370/500000 [00:03<00:11, 33912.70it/s][A
2025-01-10T13:49:05.5138363Z 
2025-01-10T13:49:05.5138733Z Packets:   ███████████████████▉                                                            124853/500000 [00:03<00:10, 34185.16it/s][A
2025-01-10T13:49:05.5138743Z 
2025-01-10T13:49:05.5138997Z Packets:   ████████████████████▌                                                           128379/500000 [00:03<00:10, 34505.28it/s][A
2025-01-10T13:49:05.5139001Z 
2025-01-10T13:49:05.5139260Z Packets:   █████████████████████                                                           131853/500000 [00:03<00:10, 34574.86it/s][A
2025-01-10T13:49:05.5139264Z 
2025-01-10T13:49:05.5139513Z Packets:   █████████████████████▋                                                          135321/500000 [00:03<00:10, 34604.76it/s][A
2025-01-10T13:49:05.5139517Z 
2025-01-10T13:49:05.5139862Z Packets:   ██████████████████████▏                                                         138808/500000 [00:04<00:10, 34682.14it/s][A
2025-01-10T13:49:05.5139866Z 
2025-01-10T13:49:05.5140128Z Packets:   ██████████████████████▊                                                         142318/500000 [00:04<00:10, 34806.96it/s][A
2025-01-10T13:49:05.5140141Z 
2025-01-10T13:49:05.5140396Z Packets:   ███████████████████████▎                                                        145800/500000 [00:04<00:10, 33569.87it/s][A
2025-01-10T13:49:05.5140400Z 
2025-01-10T13:49:05.5140661Z Packets:   ███████████████████████▉                                                        149334/500000 [00:04<00:10, 34085.29it/s][A
2025-01-10T13:49:05.5140665Z 
2025-01-10T13:49:05.5140921Z Packets:   ████████████████████████▍                                                       152879/500000 [00:04<00:10, 34486.78it/s][A
2025-01-10T13:49:05.5140926Z 
2025-01-10T13:49:05.5141190Z Packets:   █████████████████████████                                                       156402/500000 [00:04<00:09, 34706.53it/s][A
2025-01-10T13:49:05.5141204Z 
2025-01-10T13:49:05.5141469Z Packets:   █████████████████████████▌                                                      159936/500000 [00:04<00:09, 34894.21it/s][A
2025-01-10T13:49:05.5141483Z 
2025-01-10T13:49:05.5141742Z Packets:   ██████████████████████████▏                                                     163429/500000 [00:04<00:09, 34841.60it/s][A
2025-01-10T13:49:05.5141746Z 
2025-01-10T13:49:05.5142010Z Packets:   ██████████████████████████▋                                                     166954/500000 [00:04<00:09, 34963.25it/s][A
2025-01-10T13:49:05.5142014Z 
2025-01-10T13:49:05.5142279Z Packets:   ███████████████████████████▎                                                    170525/500000 [00:04<00:09, 35183.65it/s][A
2025-01-10T13:49:05.5142283Z 
2025-01-10T13:49:05.5142542Z Packets:   ███████████████████████████▊                                                    174045/500000 [00:05<00:09, 35103.58it/s][A
2025-01-10T13:49:05.5142546Z 
2025-01-10T13:49:05.5142821Z Packets:   ████████████████████████████▍                                                   177557/500000 [00:05<00:09, 35037.29it/s][A
2025-01-10T13:49:05.5142926Z 
2025-01-10T13:49:05.5143191Z Packets:   ████████████████████████████▉                                                   181062/500000 [00:05<00:09, 33566.80it/s][A
2025-01-10T13:49:05.5143195Z 
2025-01-10T13:49:05.5143460Z Packets:   █████████████████████████████▌                                                  184521/500000 [00:05<00:09, 33859.78it/s][A
2025-01-10T13:49:05.5143464Z 
2025-01-10T13:49:05.5143840Z Packets:   ██████████████████████████████                                                  188026/500000 [00:05<00:09, 34206.67it/s][A
2025-01-10T13:49:05.5143845Z 
2025-01-10T13:49:05.5144111Z Packets:   ██████████████████████████████▋                                                 191552/500000 [00:05<00:08, 34516.18it/s][A
2025-01-10T13:49:05.5144115Z 
2025-01-10T13:49:05.5144508Z Packets:   ███████████████████████████████▏                                                195010/500000 [00:05<00:08, 34522.10it/s][A
2025-01-10T13:49:05.5144513Z 
2025-01-10T13:49:05.5144795Z Packets:   ███████████████████████████████▊                                                198519/500000 [00:05<00:08, 34690.49it/s][A
2025-01-10T13:49:05.5144805Z 
2025-01-10T13:49:05.5145070Z Packets:   ████████████████████████████████▎                                               201992/500000 [00:05<00:08, 34566.66it/s][A
2025-01-10T13:49:05.5145074Z 
2025-01-10T13:49:05.5145346Z Packets:   ████████████████████████████████▉                                               205482/500000 [00:05<00:08, 34664.88it/s][A
2025-01-10T13:49:05.5145351Z 
2025-01-10T13:49:05.5145619Z Packets:   █████████████████████████████████▍                                              208977/500000 [00:06<00:08, 34747.88it/s][A
2025-01-10T13:49:05.5145623Z 
2025-01-10T13:49:05.5145908Z Packets:   █████████████████████████████████▉                                              212474/500000 [00:06<00:08, 34810.78it/s][A
2025-01-10T13:49:05.5145912Z 
2025-01-10T13:49:05.5146187Z Packets:   ██████████████████████████████████▌                                             215956/500000 [00:06<00:08, 33574.01it/s][A
2025-01-10T13:49:05.5146201Z 
2025-01-10T13:49:05.5146470Z Packets:   ███████████████████████████████████                                             219412/500000 [00:06<00:08, 33853.43it/s][A
2025-01-10T13:49:05.5146475Z 
2025-01-10T13:49:05.5146749Z Packets:   ███████████████████████████████████▋                                            222859/500000 [00:06<00:08, 34034.67it/s][A
2025-01-10T13:49:05.5146753Z 
2025-01-10T13:49:05.5147023Z Packets:   ████████████████████████████████████▏                                           226351/500000 [00:06<00:07, 34292.59it/s][A
2025-01-10T13:49:05.5147033Z 
2025-01-10T13:49:05.5147299Z Packets:   ████████████████████████████████████▊                                           229801/500000 [00:06<00:07, 34354.18it/s][A
2025-01-10T13:49:05.5147315Z 
2025-01-10T13:49:05.5147592Z Packets:   █████████████████████████████████████▎                                          233347/500000 [00:06<00:07, 34682.65it/s][A
2025-01-10T13:49:05.5147709Z 
2025-01-10T13:49:05.5147984Z Packets:   █████████████████████████████████████▉                                          236850/500000 [00:06<00:07, 34782.38it/s][A
2025-01-10T13:49:05.5147989Z 
2025-01-10T13:49:05.5148264Z Packets:   ██████████████████████████████████████▍                                         240330/500000 [00:07<00:07, 34699.83it/s][A
2025-01-10T13:49:05.5148268Z 
2025-01-10T13:49:05.5148545Z Packets:   ███████████████████████████████████████                                         243814/500000 [00:07<00:07, 34737.68it/s][A
2025-01-10T13:49:05.5148549Z 
2025-01-10T13:49:05.5148823Z Packets:   ███████████████████████████████████████▌                                        247289/500000 [00:07<00:07, 34661.61it/s][A
2025-01-10T13:49:05.5148827Z 
2025-01-10T13:49:05.5149189Z Packets:   ████████████████████████████████████████                                        250771/500000 [00:07<00:07, 34707.48it/s][A
2025-01-10T13:49:05.5149204Z 
2025-01-10T13:49:05.5149482Z Packets:   ████████████████████████████████████████▋                                       254243/500000 [00:07<00:07, 33369.82it/s][A
2025-01-10T13:49:05.5149491Z 
2025-01-10T13:49:05.5149765Z Packets:   █████████████████████████████████████████▏                                      257728/500000 [00:07<00:07, 33797.95it/s][A
2025-01-10T13:49:05.5149769Z 
2025-01-10T13:49:05.5150050Z Packets:   █████████████████████████████████████████▊                                      261274/500000 [00:07<00:06, 34284.52it/s][A
2025-01-10T13:49:05.5150054Z 
2025-01-10T13:49:05.5150330Z Packets:   ██████████████████████████████████████████▎                                     264782/500000 [00:07<00:06, 34518.18it/s][A
2025-01-10T13:49:05.5150334Z 
2025-01-10T13:49:05.5150625Z Packets:   ██████████████████████████████████████████▉                                     268310/500000 [00:07<00:06, 34741.51it/s][A
2025-01-10T13:49:05.5150630Z 
2025-01-10T13:49:05.5150921Z Packets:   ███████████████████████████████████████████▍                                    271807/500000 [00:07<00:06, 34808.63it/s][A
2025-01-10T13:49:05.5150925Z 
2025-01-10T13:49:05.5151199Z Packets:   ████████████████████████████████████████████                                    275291/500000 [00:08<00:06, 34781.82it/s][A
2025-01-10T13:49:05.5151203Z 
2025-01-10T13:49:05.5151489Z Packets:   ████████████████████████████████████████████▌                                   278772/500000 [00:08<00:06, 34705.69it/s][A
2025-01-10T13:49:05.5151493Z 
2025-01-10T13:49:05.5151775Z Packets:   █████████████████████████████████████████████▏                                  282304/500000 [00:08<00:06, 34888.95it/s][A
2025-01-10T13:49:05.5151779Z 
2025-01-10T13:49:05.5152076Z Packets:   █████████████████████████████████████████████▋                                  285794/500000 [00:08<00:06, 34773.42it/s][A
2025-01-10T13:49:05.5152080Z 
2025-01-10T13:49:05.5152368Z Packets:   ██████████████████████████████████████████████▎                                 289273/500000 [00:08<00:06, 33296.38it/s][A
2025-01-10T13:49:05.5152457Z 
2025-01-10T13:49:05.5152744Z Packets:   ██████████████████████████████████████████████▊                                 292745/500000 [00:08<00:06, 33708.81it/s][A
2025-01-10T13:49:05.5152748Z 
2025-01-10T13:49:05.5153038Z Packets:   ███████████████████████████████████████████████▍                                296174/500000 [00:08<00:06, 33877.68it/s][A
2025-01-10T13:49:05.5153042Z 
2025-01-10T13:49:05.5153331Z Packets:   ███████████████████████████████████████████████▉                                299641/500000 [00:08<00:05, 34109.97it/s][A
2025-01-10T13:49:05.5153335Z 
2025-01-10T13:49:05.5153741Z Packets:   ████████████████████████████████████████████████▌                               303182/500000 [00:08<00:05, 34494.66it/s][A
2025-01-10T13:49:05.5153868Z 
2025-01-10T13:49:05.5154167Z Packets:   █████████████████████████████████████████████████                               306724/500000 [00:08<00:05, 34764.40it/s][A
2025-01-10T13:49:05.5154185Z 
2025-01-10T13:49:05.5154472Z Packets:   █████████████████████████████████████████████████▋                              310204/500000 [00:09<00:05, 34716.75it/s][A
2025-01-10T13:49:05.5154477Z 
2025-01-10T13:49:05.5154770Z Packets:   ██████████████████████████████████████████████████▏                             313679/500000 [00:09<00:05, 34708.11it/s][A
2025-01-10T13:49:05.5154774Z 
2025-01-10T13:49:05.5155064Z Packets:   ██████████████████████████████████████████████████▊                             317188/500000 [00:09<00:05, 34816.74it/s][A
2025-01-10T13:49:05.5155068Z 
2025-01-10T13:49:05.5155354Z Packets:   ███████████████████████████████████████████████████▎                            320677/500000 [00:09<00:05, 34837.02it/s][A
2025-01-10T13:49:05.5155358Z 
2025-01-10T13:49:05.5155661Z Packets:   ███████████████████████████████████████████████████▊                            324162/500000 [00:09<00:05, 33124.84it/s][A
2025-01-10T13:49:05.5155677Z 
2025-01-10T13:49:05.5155966Z Packets:   ████████████████████████████████████████████████████▍                           327617/500000 [00:09<00:05, 33536.14it/s][A
2025-01-10T13:49:05.5155975Z 
2025-01-10T13:49:05.5156260Z Packets:   ████████████████████████████████████████████████████▉                           331055/500000 [00:09<00:05, 33778.02it/s][A
2025-01-10T13:49:05.5156264Z 
2025-01-10T13:49:05.5156558Z Packets:   █████████████████████████████████████████████████████▌                          334568/500000 [00:09<00:04, 34174.44it/s][A
2025-01-10T13:49:05.5156562Z 
2025-01-10T13:49:05.5156848Z Packets:   ██████████████████████████████████████████████████████                          338070/500000 [00:09<00:04, 34423.00it/s][A
2025-01-10T13:49:05.5156853Z 
2025-01-10T13:49:05.5157237Z Packets:   ██████████████████████████████████████████████████████▋                         341552/500000 [00:09<00:04, 34540.38it/s][A
2025-01-10T13:49:05.5157242Z 
2025-01-10T13:49:05.5157671Z Packets:   ███████████████████████████████████████████████████████▏                        345067/500000 [00:10<00:04, 34719.37it/s][A
2025-01-10T13:49:05.5157675Z 
2025-01-10T13:49:05.5157967Z Packets:   ███████████████████████████████████████████████████████▊                        348543/500000 [00:10<00:04, 34622.41it/s][A
2025-01-10T13:49:05.5157970Z 
2025-01-10T13:49:05.5158264Z Packets:   ████████████████████████████████████████████████████████▎                       352017/500000 [00:10<00:04, 34653.16it/s][A
2025-01-10T13:49:05.5158268Z 
2025-01-10T13:49:05.5158560Z Packets:   ████████████████████████████████████████████████████████▉                       355525/500000 [00:10<00:04, 34778.80it/s][A
2025-01-10T13:49:05.5158569Z 
2025-01-10T13:49:05.5158875Z Packets:   █████████████████████████████████████████████████████████▍                      359005/500000 [00:10<00:04, 32977.56it/s][A
2025-01-10T13:49:05.5158879Z 
2025-01-10T13:49:05.5159178Z Packets:   █████████████████████████████████████████████████████████▉                      362445/500000 [00:10<00:04, 33381.44it/s][A
2025-01-10T13:49:05.5159195Z 
2025-01-10T13:49:05.5159490Z Packets:   ██████████████████████████████████████████████████████████▌                     365799/500000 [00:10<00:04, 33405.47it/s][A
2025-01-10T13:49:05.5159494Z 
2025-01-10T13:49:05.5159792Z Packets:   ███████████████████████████████████████████████████████████                     369373/500000 [00:10<00:03, 34088.10it/s][A
2025-01-10T13:49:05.5159796Z 
2025-01-10T13:49:05.5160094Z Packets:   ███████████████████████████████████████████████████████████▋                    372898/500000 [00:10<00:03, 34430.83it/s][A
2025-01-10T13:49:05.5160098Z 
2025-01-10T13:49:05.5160390Z Packets:   ████████████████████████████████████████████████████████████▏                   376393/500000 [00:10<00:03, 34582.67it/s][A
2025-01-10T13:49:05.5160407Z 
2025-01-10T13:49:05.5160711Z Packets:   ████████████████████████████████████████████████████████████▊                   379857/500000 [00:11<00:03, 34545.88it/s][A
2025-01-10T13:49:05.5160824Z 
2025-01-10T13:49:05.5161128Z Packets:   █████████████████████████████████████████████████████████████▎                  383316/500000 [00:11<00:03, 34507.62it/s][A
2025-01-10T13:49:05.5161132Z 
2025-01-10T13:49:05.5161438Z Packets:   █████████████████████████████████████████████████████████████▉                  386807/500000 [00:11<00:03, 34625.94it/s][A
2025-01-10T13:49:05.5161442Z 
2025-01-10T13:49:05.5161745Z Packets:   ██████████████████████████████████████████████████████████████▍                 390287/500000 [00:11<00:03, 34677.82it/s][A
2025-01-10T13:49:05.5161749Z 
2025-01-10T13:49:05.5162203Z Packets:   ███████████████████████████████████████████████████████████████                 393757/500000 [00:11<00:03, 33300.46it/s][A
2025-01-10T13:49:05.5162217Z 
2025-01-10T13:49:05.5162968Z Packets:   ███████████████████████████████████████████████████████████████▌                397259/500000 [00:11<00:03, 33799.46it/s][A
2025-01-10T13:49:05.5163003Z 
2025-01-10T13:49:05.5163763Z Packets:   ████████████████████████████████████████████████████████████████                400712/500000 [00:11<00:02, 34013.07it/s][A
2025-01-10T13:49:05.5163775Z 
2025-01-10T13:49:05.5164395Z Packets:   ████████████████████████████████████████████████████████████████▋               404181/500000 [00:11<00:02, 34212.53it/s][A
2025-01-10T13:49:05.5164404Z 
2025-01-10T13:49:05.5165024Z Packets:   █████████████████████████████████████████████████████████████████▏              407644/500000 [00:11<00:02, 34334.42it/s][A
2025-01-10T13:49:05.5165033Z 
2025-01-10T13:49:05.5165634Z Packets:   █████████████████████████████████████████████████████████████████▊              411145/500000 [00:11<00:02, 34534.78it/s][A
2025-01-10T13:49:05.5165649Z 
2025-01-10T13:49:05.5166276Z Packets:   ██████████████████████████████████████████████████████████████████▎             414634/500000 [00:12<00:02, 34639.79it/s][A
2025-01-10T13:49:05.5166286Z 
2025-01-10T13:49:05.5166911Z Packets:   ██████████████████████████████████████████████████████████████████▉             418135/500000 [00:12<00:02, 34749.04it/s][A
2025-01-10T13:49:05.5166919Z 
2025-01-10T13:49:05.5167529Z Packets:   ███████████████████████████████████████████████████████████████████▍            421646/500000 [00:12<00:02, 34850.02it/s][A
2025-01-10T13:49:05.5167538Z 
2025-01-10T13:49:05.5168157Z Packets:   ████████████████████████████████████████████████████████████████████            425168/500000 [00:12<00:02, 34960.25it/s][A
2025-01-10T13:49:05.5168166Z 
2025-01-10T13:49:05.5168780Z Packets:   ████████████████████████████████████████████████████████████████████▌           428665/500000 [00:12<00:02, 33102.96it/s][A
2025-01-10T13:49:05.5168788Z 
2025-01-10T13:49:05.5169459Z Packets:   █████████████████████████████████████████████████████████████████████▏          432145/500000 [00:12<00:02, 33591.45it/s][A
2025-01-10T13:49:05.5169471Z 
2025-01-10T13:49:05.5170130Z Packets:   █████████████████████████████████████████████████████████████████████▋          435651/500000 [00:12<00:01, 34012.62it/s][A
2025-01-10T13:49:05.5170320Z 
2025-01-10T13:49:05.5170910Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439106/500000 [00:12<00:01, 34168.97it/s][A
2025-01-10T13:49:05.5170919Z 
2025-01-10T13:49:05.5171245Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442615/500000 [00:12<00:01, 34439.46it/s][A
2025-01-10T13:49:05.5171249Z 
2025-01-10T13:49:05.5171570Z Packets:   ███████████████████████████████████████████████████████████████████████▎        446066/500000 [00:13<00:01, 34369.35it/s][A
2025-01-10T13:49:05.5171575Z 
2025-01-10T13:49:05.5171885Z Packets:   ███████████████████████████████████████████████████████████████████████▉        449523/500000 [00:13<00:01, 34427.79it/s][A
2025-01-10T13:49:05.5171906Z 
2025-01-10T13:49:05.5172223Z Packets:   ████████████████████████████████████████████████████████████████████████▍       453053/500000 [00:13<00:01, 34687.52it/s][A
2025-01-10T13:49:05.5172243Z 
2025-01-10T13:49:05.5172558Z Packets:   █████████████████████████████████████████████████████████████████████████       456565/500000 [00:13<00:01, 34816.47it/s][A
2025-01-10T13:49:05.5172562Z 
2025-01-10T13:49:05.5172870Z Packets:   █████████████████████████████████████████████████████████████████████████▌      460058/500000 [00:13<00:01, 34849.36it/s][A
2025-01-10T13:49:05.5172874Z 
2025-01-10T13:49:05.5173190Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     463545/500000 [00:13<00:01, 34247.81it/s][A
2025-01-10T13:49:05.5173194Z 
2025-01-10T13:49:05.5173507Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466973/500000 [00:13<00:00, 33554.26it/s][A
2025-01-10T13:49:05.5173511Z 
2025-01-10T13:49:05.5174005Z Packets:   ███████████████████████████████████████████████████████████████████████████▎    470484/500000 [00:13<00:00, 34008.82it/s][A
2025-01-10T13:49:05.5174162Z 
2025-01-10T13:49:05.5174523Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473973/500000 [00:13<00:00, 34267.95it/s][A
2025-01-10T13:49:05.5174528Z 
2025-01-10T13:49:05.5174845Z Packets:   ████████████████████████████████████████████████████████████████████████████▍   477420/500000 [00:13<00:00, 34327.27it/s][A
2025-01-10T13:49:05.5174849Z 
2025-01-10T13:49:05.5175170Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   480943/500000 [00:14<00:00, 34594.47it/s][A
2025-01-10T13:49:05.5175174Z 
2025-01-10T13:49:05.5175506Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  484437/500000 [00:14<00:00, 34697.08it/s][A
2025-01-10T13:49:05.5175510Z 
2025-01-10T13:49:05.5175943Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487922/500000 [00:14<00:00, 34741.86it/s][A
2025-01-10T13:49:05.5175949Z 
2025-01-10T13:49:05.5176290Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491455/500000 [00:14<00:00, 34914.80it/s][A
2025-01-10T13:49:05.5176294Z 
2025-01-10T13:49:05.5176615Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏495005/500000 [00:14<00:00, 35089.28it/s][A
2025-01-10T13:49:05.5176619Z 
2025-01-10T13:49:05.5176939Z Packets:   ███████████████████████████████████████████████████████████████████████████████▊498526/500000 [00:14<00:00, 35124.72it/s][A
2025-01-10T13:49:05.5177096Z Iterations:                                                                                17/? [06:18<00:00,  9.32s/it]
2025-01-10T13:49:05.5177100Z 
2025-01-10T13:49:05.5177421Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 35124.72it/s][A
2025-01-10T13:49:05.5177607Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5177767Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-10T13:49:05.5178213Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-10T13:49:05.5178600Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-10T13:49:05.5179042Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-10T13:49:05.5179742Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.5180167Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:05.5180297Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5180385Z 	Starting iteration 1 of 5
2025-01-10T13:49:05.5180498Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5180592Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:49:05.5180687Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:49:05.5180775Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5180785Z 
2025-01-10T13:49:05.5180886Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:05.5180978Z 	Plasma stratification:
2025-01-10T13:49:05.5181080Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:05.5181191Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:49:05.5181277Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:49:05.5181362Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:49:05.5181443Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:49:05.5181536Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:49:05.5181540Z 
2025-01-10T13:49:05.5181640Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:05.5181732Z 	Current t_inner = 9974.969 K
2025-01-10T13:49:05.5181850Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:49:05.5181854Z 
2025-01-10T13:49:05.5181962Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5182048Z 	Starting iteration 2 of 5
2025-01-10T13:49:05.5182150Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5182246Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:49:05.5182334Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:49:05.5182427Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5182431Z 
2025-01-10T13:49:05.5182531Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:05.5182618Z 	Plasma stratification:
2025-01-10T13:49:05.5182723Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:05.5182838Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5182924Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:49:05.5183011Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:49:05.5183098Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:49:05.5183184Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:49:05.5183187Z 
2025-01-10T13:49:05.5183293Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:05.5183375Z 	Current t_inner = 10736.783 K
2025-01-10T13:49:05.5183495Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:49:05.5183499Z 
2025-01-10T13:49:05.5183715Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5183808Z 	Starting iteration 3 of 5
2025-01-10T13:49:05.5183910Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5184005Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:49:05.5184093Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:49:05.5184190Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5184198Z 
2025-01-10T13:49:05.5184420Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-10T13:49:05.5184651Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:05.5184739Z 	Plasma stratification:
2025-01-10T13:49:05.5184839Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:05.5184946Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5185028Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:49:05.5185113Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:49:05.5185195Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:49:05.5185281Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:49:05.5185285Z 
2025-01-10T13:49:05.5185384Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:05.5185471Z 	Current t_inner = 10718.619 K
2025-01-10T13:49:05.5185582Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:49:05.5185585Z 
2025-01-10T13:49:05.5185809Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5185894Z 	Starting iteration 4 of 5
2025-01-10T13:49:05.5186000Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5186097Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:49:05.5186186Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:49:05.5186278Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5186282Z 
2025-01-10T13:49:05.5186507Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-10T13:49:05.5186614Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:05.5186697Z 	Plasma stratification:
2025-01-10T13:49:05.5186806Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:05.5186907Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:05.5186994Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:49:05.5187075Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:49:05.5187169Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:49:05.5187256Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:49:05.5187260Z 
2025-01-10T13:49:05.5187366Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:05.5187451Z 	Current t_inner = 10696.651 K
2025-01-10T13:49:05.5187564Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:49:05.5187568Z 
2025-01-10T13:49:05.5187674Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:05.5187766Z 	Simulation finished in 4 iterations 
2025-01-10T13:49:05.5187853Z 	Simulation took 12.56 s
2025-01-10T13:49:05.5187857Z 
2025-01-10T13:49:05.5187957Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5188043Z 	Starting iteration 5 of 5
2025-01-10T13:49:05.5188143Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5188237Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:49:05.5188324Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:49:05.5188416Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5188603Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-10T13:49:05.5188607Z 
2025-01-10T13:49:05.5188827Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f3bf86746b0>
2025-01-10T13:49:05.5189027Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be97d1f70>
2025-01-10T13:49:05.5189031Z 
2025-01-10T13:49:05.5189125Z     def test_spectrum(self, simulation):
2025-01-10T13:49:05.5189299Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:05.5189397Z         expected = self.get_expected_data(key)
2025-01-10T13:49:05.5189469Z     
2025-01-10T13:49:05.5189577Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5189650Z     
2025-01-10T13:49:05.5189734Z >       assert_quantity_allclose(
2025-01-10T13:49:05.5189907Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-10T13:49:05.5189986Z             luminosity,
2025-01-10T13:49:05.5190057Z         )
2025-01-10T13:49:05.5190062Z 
2025-01-10T13:49:05.5190159Z tardis/tests/test_tardis_full.py:81: 
2025-01-10T13:49:05.5190274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5190708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5190797Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5190909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5190913Z 
2025-01-10T13:49:05.5191380Z args = (<function assert_allclose.<locals>.compare at 0x7f3beae50220>, array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39,...), array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, ...,
2025-01-10T13:49:05.5191490Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5191750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5191825Z 
2025-01-10T13:49:05.5191906Z     @wraps(func)
2025-01-10T13:49:05.5191991Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5192077Z         with self._recreate_cm():
2025-01-10T13:49:05.5192168Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5192250Z E           AssertionError: 
2025-01-10T13:49:05.5192365Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5192434Z E           
2025-01-10T13:49:05.5192539Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:49:05.5192679Z E           Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:49:05.5192810Z E           Max relative difference among violations: 5.17890748
2025-01-10T13:49:05.5192985Z E            ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5193071Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5193247Z E            DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5193330Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5193334Z 
2025-01-10T13:49:05.5193543Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5193843Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-10T13:49:05.5193848Z 
2025-01-10T13:49:05.5194065Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f3bf86748f0>
2025-01-10T13:49:05.5194259Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be97d1f70>
2025-01-10T13:49:05.5194269Z 
2025-01-10T13:49:05.5194376Z     def test_virtual_spectrum(self, simulation):
2025-01-10T13:49:05.5194555Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-10T13:49:05.5194654Z         expected = self.get_expected_data(key)
2025-01-10T13:49:05.5194725Z     
2025-01-10T13:49:05.5194829Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5194899Z     
2025-01-10T13:49:05.5194985Z >       assert_quantity_allclose(
2025-01-10T13:49:05.5195166Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-10T13:49:05.5195244Z             luminosity,
2025-01-10T13:49:05.5195317Z         )
2025-01-10T13:49:05.5195320Z 
2025-01-10T13:49:05.5195415Z tardis/tests/test_tardis_full.py:92: 
2025-01-10T13:49:05.5195528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5195863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5195950Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5196060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5196064Z 
2025-01-10T13:49:05.5196530Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcd5c7c40>, array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39,...), array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, ...,
2025-01-10T13:49:05.5196636Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5196887Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5197020Z 
2025-01-10T13:49:05.5197105Z     @wraps(func)
2025-01-10T13:49:05.5197185Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5197272Z         with self._recreate_cm():
2025-01-10T13:49:05.5197362Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5197443Z E           AssertionError: 
2025-01-10T13:49:05.5197551Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5197620Z E           
2025-01-10T13:49:05.5197722Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:49:05.5197859Z E           Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:49:05.5197993Z E           Max relative difference among violations: 23978.84555943
2025-01-10T13:49:05.5198263Z E            ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5198355Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5198523Z E            DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5198610Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5198614Z 
2025-01-10T13:49:05.5198813Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5199056Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-10T13:49:05.5199060Z 
2025-01-10T13:49:05.5199387Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8675250>
2025-01-10T13:49:05.5199578Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be8719010>
2025-01-10T13:49:05.5199785Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-10T13:49:05.5199788Z 
2025-01-10T13:49:05.5199921Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:05.5200032Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5200113Z         j_blue_estimator = (
2025-01-10T13:49:05.5200332Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:05.5200404Z         )
2025-01-10T13:49:05.5200548Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:05.5200670Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:05.5200674Z 
2025-01-10T13:49:05.5200804Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:05.5200920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5200923Z 
2025-01-10T13:49:05.5201187Z args = (<function assert_allclose.<locals>.compare at 0x7f3bbdfd4040>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5201265Z        [0., 0., .....,
2025-01-10T13:49:05.5201343Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5201422Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5201499Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:05.5201756Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5201760Z 
2025-01-10T13:49:05.5201841Z     @wraps(func)
2025-01-10T13:49:05.5201921Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5202010Z         with self._recreate_cm():
2025-01-10T13:49:05.5202097Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5202183Z E           AssertionError: 
2025-01-10T13:49:05.5202287Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5202361Z E           
2025-01-10T13:49:05.5202465Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:05.5202608Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:05.5202738Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:49:05.5202845Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5202930Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5203127Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5203237Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5203322Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5203408Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5203412Z 
2025-01-10T13:49:05.5203788Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5204048Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-10T13:49:05.5204054Z 
2025-01-10T13:49:05.5204376Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8675880>
2025-01-10T13:49:05.5204691Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be8719010>
2025-01-10T13:49:05.5204878Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-10T13:49:05.5204886Z 
2025-01-10T13:49:05.5204993Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:05.5205099Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5205295Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:05.5205457Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5205555Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5205677Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5205681Z 
2025-01-10T13:49:05.5205810Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:05.5205922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5206255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5206350Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5206461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5206469Z 
2025-01-10T13:49:05.5206934Z args = (<function assert_allclose.<locals>.compare at 0x7f3bda9127a0>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:49:05.5207042Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5207295Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5207299Z 
2025-01-10T13:49:05.5207376Z     @wraps(func)
2025-01-10T13:49:05.5207457Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5207544Z         with self._recreate_cm():
2025-01-10T13:49:05.5207635Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5207718Z E           AssertionError: 
2025-01-10T13:49:05.5207828Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5207897Z E           
2025-01-10T13:49:05.5207998Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:05.5208135Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:05.5208265Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:49:05.5208433Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5208522Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5208687Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5208778Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5208782Z 
2025-01-10T13:49:05.5208985Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5209214Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-10T13:49:05.5209221Z 
2025-01-10T13:49:05.5209547Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8676000>
2025-01-10T13:49:05.5209857Z simulation = <tardis.simulation.base.Simulation object at 0x7f3be8719010>
2025-01-10T13:49:05.5210066Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-10T13:49:05.5210072Z 
2025-01-10T13:49:05.5210207Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:05.5210315Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5210500Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:05.5210663Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5210768Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5210882Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5210886Z 
2025-01-10T13:49:05.5211093Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:05.5211205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5211545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5211631Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5211743Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5211746Z 
2025-01-10T13:49:05.5212205Z args = (<function assert_allclose.<locals>.compare at 0x7f3bbdfd7b00>, array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39,...), array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, ...,
2025-01-10T13:49:05.5212311Z        2.25671263e+31, 2.27943572e+31, 2.24394350e+31]))
2025-01-10T13:49:05.5212570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5212574Z 
2025-01-10T13:49:05.5212644Z     @wraps(func)
2025-01-10T13:49:05.5212732Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5212816Z         with self._recreate_cm():
2025-01-10T13:49:05.5212909Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5212989Z E           AssertionError: 
2025-01-10T13:49:05.5213096Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5213164Z E           
2025-01-10T13:49:05.5213265Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.5213401Z E           Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:49:05.5213533Z E           Max relative difference among violations: 6.79985816
2025-01-10T13:49:05.5213848Z E            ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:49:05.5213932Z E                  2.292907e+31, 2.257206e+31])
2025-01-10T13:49:05.5214104Z E            DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:49:05.5214190Z E                  2.279436e+31, 2.243943e+31])
2025-01-10T13:49:05.5214196Z 
2025-01-10T13:49:05.5214396Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5214552Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:05.5214556Z 
2025-01-10T13:49:05.5214559Z 
2025-01-10T13:49:05.5214946Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:14<00:00, 111051.64it/s][A
2025-01-10T13:49:05.5215175Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-10T13:49:05.5215179Z 
2025-01-10T13:49:05.5215502Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8675a60>
2025-01-10T13:49:05.5215698Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bcbae6030>
2025-01-10T13:49:05.5215892Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-10T13:49:05.5215895Z 
2025-01-10T13:49:05.5216032Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:05.5216135Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5216347Z         j_blue_estimator = (
2025-01-10T13:49:05.5216562Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:05.5216636Z         )
2025-01-10T13:49:05.5216786Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:05.5216904Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:05.5216909Z 
2025-01-10T13:49:05.5217041Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:05.5217149Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5217153Z 
2025-01-10T13:49:05.5217419Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd04cb7e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5217489Z        [0., 0., .....,
2025-01-10T13:49:05.5217692Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5217770Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5217850Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:05.5218103Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5218112Z 
2025-01-10T13:49:05.5218185Z     @wraps(func)
2025-01-10T13:49:05.5218268Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5218348Z         with self._recreate_cm():
2025-01-10T13:49:05.5218436Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5218516Z E           AssertionError: 
2025-01-10T13:49:05.5218621Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5218690Z E           
2025-01-10T13:49:05.5218799Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:05.5218933Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:05.5219064Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:49:05.5219164Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5219255Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5219346Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5219450Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5219538Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5219620Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5219623Z 
2025-01-10T13:49:05.5219825Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5220044Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-10T13:49:05.5220048Z 
2025-01-10T13:49:05.5220372Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf86761b0>
2025-01-10T13:49:05.5220567Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bcbae6030>
2025-01-10T13:49:05.5220742Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-10T13:49:05.5220749Z 
2025-01-10T13:49:05.5220862Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:05.5220965Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5221163Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:05.5221317Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5221420Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5221536Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5221540Z 
2025-01-10T13:49:05.5221673Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:05.5221781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5222116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5222208Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5222314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5222404Z 
2025-01-10T13:49:05.5222871Z args = (<function assert_allclose.<locals>.compare at 0x7f3be2cdb4c0>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:49:05.5222971Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5223226Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5223230Z 
2025-01-10T13:49:05.5223302Z     @wraps(func)
2025-01-10T13:49:05.5223388Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5223473Z         with self._recreate_cm():
2025-01-10T13:49:05.5223561Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5224077Z E           AssertionError: 
2025-01-10T13:49:05.5224392Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5224501Z E           
2025-01-10T13:49:05.5224672Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:05.5224860Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:05.5225092Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:49:05.5225307Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5225458Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5225657Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5225824Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5225829Z 
2025-01-10T13:49:05.5226121Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5226394Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-10T13:49:05.5226402Z 
2025-01-10T13:49:05.5226787Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf86767e0>
2025-01-10T13:49:05.5227017Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bcbae6030>
2025-01-10T13:49:05.5227298Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-10T13:49:05.5227302Z 
2025-01-10T13:49:05.5227452Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:05.5227678Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5227899Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:05.5237945Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5238079Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5238205Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5238210Z 
2025-01-10T13:49:05.5238367Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:05.5238489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5238862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5238955Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5239072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5239076Z 
2025-01-10T13:49:05.5239548Z args = (<function assert_allclose.<locals>.compare at 0x7f3bda603060>, array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39,...), array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, ...,
2025-01-10T13:49:05.5239660Z        1.35260736e+31, 1.33049749e+31, 1.29446216e+31]))
2025-01-10T13:49:05.5239923Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5239927Z 
2025-01-10T13:49:05.5240005Z     @wraps(func)
2025-01-10T13:49:05.5240093Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5240177Z         with self._recreate_cm():
2025-01-10T13:49:05.5240439Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5240524Z E           AssertionError: 
2025-01-10T13:49:05.5240642Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5240711Z E           
2025-01-10T13:49:05.5240814Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.5240954Z E           Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:49:05.5241087Z E           Max relative difference among violations: 96.4428449
2025-01-10T13:49:05.5241262Z E            ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:49:05.5241349Z E                  1.375141e+31, 1.337928e+31])
2025-01-10T13:49:05.5241521Z E            DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:49:05.5241709Z E                  1.330497e+31, 1.294462e+31])
2025-01-10T13:49:05.5241714Z 
2025-01-10T13:49:05.5241935Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5242179Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-10T13:49:05.5242183Z 
2025-01-10T13:49:05.5242520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8675d00>
2025-01-10T13:49:05.5242717Z simulation = <tardis.simulation.base.Simulation object at 0x7f3beae3dc10>
2025-01-10T13:49:05.5242917Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-10T13:49:05.5242921Z 
2025-01-10T13:49:05.5243057Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:05.5243165Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5243255Z         j_blue_estimator = (
2025-01-10T13:49:05.5243478Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:05.5243552Z         )
2025-01-10T13:49:05.5243826Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:05.5243955Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:05.5243960Z 
2025-01-10T13:49:05.5244095Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:05.5244216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5244220Z 
2025-01-10T13:49:05.5244496Z args = (<function assert_allclose.<locals>.compare at 0x7f3becce5120>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5244568Z        [0., 0., .....,
2025-01-10T13:49:05.5244650Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5244723Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5244803Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:05.5245060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5245067Z 
2025-01-10T13:49:05.5245146Z     @wraps(func)
2025-01-10T13:49:05.5245228Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5245319Z         with self._recreate_cm():
2025-01-10T13:49:05.5245410Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5245499Z E           AssertionError: 
2025-01-10T13:49:05.5245608Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5245677Z E           
2025-01-10T13:49:05.5245791Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:05.5245930Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:05.5246061Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:49:05.5246164Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5246253Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5246338Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5246449Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5246532Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5246769Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5246774Z 
2025-01-10T13:49:05.5246982Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5247200Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-10T13:49:05.5247204Z 
2025-01-10T13:49:05.5247531Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf86763f0>
2025-01-10T13:49:05.5247728Z simulation = <tardis.simulation.base.Simulation object at 0x7f3beae3dc10>
2025-01-10T13:49:05.5247906Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-10T13:49:05.5247911Z 
2025-01-10T13:49:05.5248018Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:05.5248123Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5248418Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:05.5248581Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5248690Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5248805Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5248809Z 
2025-01-10T13:49:05.5248945Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:05.5249053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5249390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5249478Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5249588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5249591Z 
2025-01-10T13:49:05.5250060Z args = (<function assert_allclose.<locals>.compare at 0x7f3becce71a0>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:49:05.5250170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5250427Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5250432Z 
2025-01-10T13:49:05.5250504Z     @wraps(func)
2025-01-10T13:49:05.5250590Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5250673Z         with self._recreate_cm():
2025-01-10T13:49:05.5250763Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5250844Z E           AssertionError: 
2025-01-10T13:49:05.5250953Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5251021Z E           
2025-01-10T13:49:05.5251123Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:05.5251258Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:05.5251392Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:49:05.5251567Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5251657Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5251826Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5251908Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5251912Z 
2025-01-10T13:49:05.5252114Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5252342Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-10T13:49:05.5252345Z 
2025-01-10T13:49:05.5252672Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf86769f0>
2025-01-10T13:49:05.5252864Z simulation = <tardis.simulation.base.Simulation object at 0x7f3beae3dc10>
2025-01-10T13:49:05.5253072Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-10T13:49:05.5253076Z 
2025-01-10T13:49:05.5253218Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:05.5253406Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5253724Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:05.5253886Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5253991Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5254107Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5254111Z 
2025-01-10T13:49:05.5254247Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:05.5254356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5254686Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5254889Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5255000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5255009Z 
2025-01-10T13:49:05.5255474Z args = (<function assert_allclose.<locals>.compare at 0x7f3c02ea25c0>, array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39,...), array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, ...,
2025-01-10T13:49:05.5255580Z        1.27325829e+31, 1.26097974e+31, 1.22258748e+31]))
2025-01-10T13:49:05.5255839Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5255843Z 
2025-01-10T13:49:05.5255914Z     @wraps(func)
2025-01-10T13:49:05.5256000Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5256087Z         with self._recreate_cm():
2025-01-10T13:49:05.5256171Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5256260Z E           AssertionError: 
2025-01-10T13:49:05.5256365Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5256440Z E           
2025-01-10T13:49:05.5256535Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.5256677Z E           Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:49:05.5256806Z E           Max relative difference among violations: 98.22574798
2025-01-10T13:49:05.5256977Z E            ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:49:05.5257063Z E                  1.193005e+31, 1.164854e+31])
2025-01-10T13:49:05.5257237Z E            DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:49:05.5257318Z E                  1.260980e+31, 1.222587e+31])
2025-01-10T13:49:05.5257328Z 
2025-01-10T13:49:05.5257523Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5257684Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:05.5257687Z 
2025-01-10T13:49:05.5257694Z 
2025-01-10T13:49:05.5258107Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 108794.38it/s][A
2025-01-10T13:49:05.5258348Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-10T13:49:05.5258352Z 
2025-01-10T13:49:05.5258673Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8675c10>
2025-01-10T13:49:05.5258874Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bebe5a9c0>
2025-01-10T13:49:05.5259077Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-10T13:49:05.5259081Z 
2025-01-10T13:49:05.5259211Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:05.5259321Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5259403Z         j_blue_estimator = (
2025-01-10T13:49:05.5259634Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:05.5259702Z         )
2025-01-10T13:49:05.5259852Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:05.5260090Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:05.5260095Z 
2025-01-10T13:49:05.5260231Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:05.5260344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5260357Z 
2025-01-10T13:49:05.5260629Z args = (<function assert_allclose.<locals>.compare at 0x7f3be2cdae80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5260706Z        [0., 0., .....,
2025-01-10T13:49:05.5260781Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5260858Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5260933Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:05.5261276Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5261281Z 
2025-01-10T13:49:05.5261356Z     @wraps(func)
2025-01-10T13:49:05.5261442Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5261528Z         with self._recreate_cm():
2025-01-10T13:49:05.5261620Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5261701Z E           AssertionError: 
2025-01-10T13:49:05.5261812Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5261884Z E           
2025-01-10T13:49:05.5261989Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:05.5262131Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:05.5262257Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:49:05.5262365Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5262449Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5262539Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5262647Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5262735Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.5262820Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.5262824Z 
2025-01-10T13:49:05.5263031Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5263251Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-10T13:49:05.5263255Z 
2025-01-10T13:49:05.5263574Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8676330>
2025-01-10T13:49:05.5263881Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bebe5a9c0>
2025-01-10T13:49:05.5264060Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-10T13:49:05.5264064Z 
2025-01-10T13:49:05.5264176Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:05.5264276Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5264475Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:05.5264632Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5264738Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5264860Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5264864Z 
2025-01-10T13:49:05.5264991Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:05.5265105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5265440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5265536Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5265642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5265646Z 
2025-01-10T13:49:05.5266122Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc658a700>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:49:05.5266347Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5266597Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5266601Z 
2025-01-10T13:49:05.5266678Z     @wraps(func)
2025-01-10T13:49:05.5266760Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5266847Z         with self._recreate_cm():
2025-01-10T13:49:05.5266930Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5267015Z E           AssertionError: 
2025-01-10T13:49:05.5267117Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5267191Z E           
2025-01-10T13:49:05.5267286Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:05.5267426Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:05.5267669Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:49:05.5267846Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5267945Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5268113Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.5268200Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5268204Z 
2025-01-10T13:49:05.5268401Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5268635Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-10T13:49:05.5268639Z 
2025-01-10T13:49:05.5268958Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f3bf8676930>
2025-01-10T13:49:05.5269155Z simulation = <tardis.simulation.base.Simulation object at 0x7f3bebe5a9c0>
2025-01-10T13:49:05.5269367Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-10T13:49:05.5269371Z 
2025-01-10T13:49:05.5269509Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:05.5269622Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5269810Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:05.5269969Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:05.5270069Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:05.5270189Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:05.5270193Z 
2025-01-10T13:49:05.5270322Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:05.5270435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5270770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:05.5270859Z     np.testing.assert_allclose(
2025-01-10T13:49:05.5270970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5270977Z 
2025-01-10T13:49:05.5271435Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc6589300>, array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39,...), array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, ...,
2025-01-10T13:49:05.5271546Z        2.08252810e+31, 2.08867593e+31, 2.06027793e+31]))
2025-01-10T13:49:05.5271795Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5271799Z 
2025-01-10T13:49:05.5271879Z     @wraps(func)
2025-01-10T13:49:05.5271959Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5272045Z         with self._recreate_cm():
2025-01-10T13:49:05.5272135Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5272215Z E           AssertionError: 
2025-01-10T13:49:05.5272327Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5272396Z E           
2025-01-10T13:49:05.5272497Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.5272720Z E           Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:49:05.5272851Z E           Max relative difference among violations: 5.96359613
2025-01-10T13:49:05.5273012Z E            ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:49:05.5273100Z E                  2.124305e+31, 2.101081e+31])
2025-01-10T13:49:05.5273263Z E            DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:49:05.5273352Z E                  2.088676e+31, 2.060278e+31])
2025-01-10T13:49:05.5273356Z 
2025-01-10T13:49:05.5273555Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5273804Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-10T13:49:05.5273808Z 
2025-01-10T13:49:05.5274666Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:05.5274958Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3bcee50080>
2025-01-10T13:49:05.5275312Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:05.5275316Z 
2025-01-10T13:49:05.5275405Z     def test_montecarlo_main_loop(
2025-01-10T13:49:05.5275496Z         montecarlo_main_loop_config,
2025-01-10T13:49:05.5275578Z         regression_data,
2025-01-10T13:49:05.5275653Z         atomic_dataset,
2025-01-10T13:49:05.5275725Z     ):
2025-01-10T13:49:05.5275830Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:05.5275985Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:49:05.5276076Z             montecarlo_main_loop_config,
2025-01-10T13:49:05.5276166Z             atom_data=atomic_dataset,
2025-01-10T13:49:05.5276260Z             virtual_packet_logging=False,
2025-01-10T13:49:05.5276348Z             legacy_mode_enabled=True,
2025-01-10T13:49:05.5276416Z         )
2025-01-10T13:49:05.5276545Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:49:05.5276652Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:49:05.5276724Z     
2025-01-10T13:49:05.5276852Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:49:05.5276951Z             montecarlo_main_loop_simulation
2025-01-10T13:49:05.5277023Z         )
2025-01-10T13:49:05.5277088Z     
2025-01-10T13:49:05.5277178Z         # Load compare data from refdata
2025-01-10T13:49:05.5277252Z     
2025-01-10T13:49:05.5277346Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:05.5277473Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:05.5277545Z         ]
2025-01-10T13:49:05.5277641Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:05.5277780Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:05.5277852Z         ]
2025-01-10T13:49:05.5277967Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:05.5278115Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:05.5278182Z         ]
2025-01-10T13:49:05.5278292Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:05.5278417Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:05.5278490Z         ]
2025-01-10T13:49:05.5278573Z         expected_hdf_store.close()
2025-01-10T13:49:05.5278787Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-10T13:49:05.5278959Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:05.5279104Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:05.5279188Z         actual_nu_bar_estimator = (
2025-01-10T13:49:05.5279450Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:49:05.5279522Z         )
2025-01-10T13:49:05.5279701Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:49:05.5279774Z     
2025-01-10T13:49:05.5279845Z         # Compare
2025-01-10T13:49:05.5279933Z >       npt.assert_allclose(
2025-01-10T13:49:05.5280088Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-10T13:49:05.5280159Z         )
2025-01-10T13:49:05.5280163Z 
2025-01-10T13:49:05.5280345Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-10T13:49:05.5280460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5280464Z 
2025-01-10T13:49:05.5280972Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd1b2b880>, array([9.40997647e+28, 8.06632443e+28, 7.20256533e+28,....88449508e+28, 3.76156653e+28, 3.64401717e+28,
2025-01-10T13:49:05.5281118Z        3.53517538e+28, 3.45355503e+28, 3.34541304e+28, 3.26838651e+28]))
2025-01-10T13:49:05.5281380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5281384Z 
2025-01-10T13:49:05.5281456Z     @wraps(func)
2025-01-10T13:49:05.5281540Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5281622Z         with self._recreate_cm():
2025-01-10T13:49:05.5281710Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5281793Z E           AssertionError: 
2025-01-10T13:49:05.5281905Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:49:05.5281974Z E           
2025-01-10T13:49:05.5282075Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:05.5282212Z E           Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:49:05.5282342Z E           Max relative difference among violations: 0.00054397
2025-01-10T13:49:05.5282500Z E            ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:49:05.5282620Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:49:05.5282747Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:49:05.5282901Z E            DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:49:05.5283015Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:49:05.5283132Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:49:05.5283136Z 
2025-01-10T13:49:05.5283341Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5283493Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:05.5283862Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.5284314Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.5284503Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5284720Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:05.5284884Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5284958Z 	
2025-01-10T13:49:05.5285050Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5285135Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5285239Z  ([1mbase.py[0m:542)
2025-01-10T13:49:05.5285405Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5285470Z 	
2025-01-10T13:49:05.5285630Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5285787Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5285856Z 	
2025-01-10T13:49:05.5285947Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:05.5286045Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:05.5286137Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5286377Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5286536Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:05.5286540Z 
2025-01-10T13:49:05.5286543Z 
2025-01-10T13:49:05.5286777Z Packets:                                                                                   11353/? [00:10<00:00, 1047.01it/s][A
2025-01-10T13:49:05.5286781Z 
2025-01-10T13:49:05.5287005Z Packets:                                                                                   21816/? [00:10<00:00, 2393.95it/s][A
2025-01-10T13:49:05.5287009Z 
2025-01-10T13:49:05.5287223Z Packets:                                                                                   32601/? [00:11<00:00, 4317.20it/s][A
2025-01-10T13:49:05.5287235Z 
2025-01-10T13:49:05.5287555Z Packets:                                                                                   43253/? [00:11<00:00, 6871.44it/s][A
2025-01-10T13:49:05.5287560Z 
2025-01-10T13:49:05.5287794Z Packets:                                                                                   54112/? [00:11<00:00, 10411.70it/s][A
2025-01-10T13:49:05.5287802Z 
2025-01-10T13:49:05.5288020Z Packets:                                                                                   64984/? [00:11<00:00, 15068.12it/s][A
2025-01-10T13:49:05.5288024Z 
2025-01-10T13:49:05.5288245Z Packets:                                                                                   75738/? [00:11<00:00, 20928.67it/s][A
2025-01-10T13:49:05.5288249Z 
2025-01-10T13:49:05.5288470Z Packets:                                                                                   86568/? [00:11<00:00, 28182.31it/s][A
2025-01-10T13:49:05.5288474Z 
2025-01-10T13:49:05.5288690Z Packets:                                                                                   97456/? [00:11<00:00, 36738.39it/s][A
2025-01-10T13:49:05.5288843Z Iterations:                                                                                40/? [07:57<00:00,  5.64s/it]
2025-01-10T13:49:05.5288850Z 
2025-01-10T13:49:05.5289079Z Packets:                                                                                   104009/? [00:11<00:00, 36738.39it/s][A
2025-01-10T13:49:05.5289231Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:05.5289735Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.5289951Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:05.5290064Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:05.5290157Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5290239Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5290244Z 
2025-01-10T13:49:05.5290352Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5290440Z 	Starting iteration 1 of 1
2025-01-10T13:49:05.5290539Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5290637Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:05.5290724Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:05.5290817Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5290982Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-10T13:49:05.5290987Z 
2025-01-10T13:49:05.5291665Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:05.5291944Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be798f260>
2025-01-10T13:49:05.5292294Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:05.5292298Z 
2025-01-10T13:49:05.5292407Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-10T13:49:05.5292577Z         montecarlo_main_loop_config,
2025-01-10T13:49:05.5292664Z         regression_data,
2025-01-10T13:49:05.5292743Z         atomic_dataset,
2025-01-10T13:49:05.5292810Z     ):
2025-01-10T13:49:05.5292920Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:05.5293093Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-10T13:49:05.5293164Z     
2025-01-10T13:49:05.5293316Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:49:05.5293412Z             montecarlo_main_loop_config,
2025-01-10T13:49:05.5293498Z             atom_data=atomic_dataset,
2025-01-10T13:49:05.5293591Z             virtual_packet_logging=True,
2025-01-10T13:49:05.5293810Z             legacy_mode_enabled=True,
2025-01-10T13:49:05.5293886Z         )
2025-01-10T13:49:05.5294185Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:49:05.5294306Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:49:05.5294379Z     
2025-01-10T13:49:05.5294520Z         transport = montecarlo_main_loop_simulation.transport
2025-01-10T13:49:05.5294585Z     
2025-01-10T13:49:05.5294794Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-10T13:49:05.5294865Z     
2025-01-10T13:49:05.5294991Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:49:05.5295091Z             montecarlo_main_loop_simulation
2025-01-10T13:49:05.5295158Z         )
2025-01-10T13:49:05.5295229Z     
2025-01-10T13:49:05.5295318Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:05.5295447Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:05.5295514Z         ]
2025-01-10T13:49:05.5295615Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:05.5295751Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:05.5295823Z         ]
2025-01-10T13:49:05.5295941Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:05.5296092Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:05.5296159Z         ]
2025-01-10T13:49:05.5296268Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:05.5296399Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:05.5296465Z         ]
2025-01-10T13:49:05.5296582Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-10T13:49:05.5296719Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-10T13:49:05.5296790Z         ]
2025-01-10T13:49:05.5296915Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-10T13:49:05.5297074Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-10T13:49:05.5297141Z         ]
2025-01-10T13:49:05.5297212Z     
2025-01-10T13:49:05.5297323Z         transport_state = transport.transport_state
2025-01-10T13:49:05.5297395Z     
2025-01-10T13:49:05.5297563Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:05.5297709Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:05.5297849Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-10T13:49:05.5297971Z         actual_j_estimator = transport_state.j_estimator
2025-01-10T13:49:05.5298123Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-10T13:49:05.5298298Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-10T13:49:05.5298369Z     
2025-01-10T13:49:05.5298456Z         expected_hdf_store.close()
2025-01-10T13:49:05.5298532Z         # Compare
2025-01-10T13:49:05.5298614Z >       npt.assert_allclose(
2025-01-10T13:49:05.5298704Z             actual_nu_bar_estimator,
2025-01-10T13:49:05.5298789Z             expected_nu_bar_estimator,
2025-01-10T13:49:05.5298872Z             rtol=1e-12,
2025-01-10T13:49:05.5298945Z             atol=1e-15,
2025-01-10T13:49:05.5299016Z         )
2025-01-10T13:49:05.5299133Z 
2025-01-10T13:49:05.5299322Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-10T13:49:05.5299443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5299447Z 
2025-01-10T13:49:05.5299886Z args = (<function assert_allclose.<locals>.compare at 0x7f3bea4bfce0>, array([9.39540882e+28, 8.06337668e+28, 7.18835599e+28,....86491193e+28, 3.76603462e+28, 3.65184134e+28,
2025-01-10T13:49:05.5300022Z        3.55625311e+28, 3.45809153e+28, 3.35093337e+28, 3.25549805e+28]))
2025-01-10T13:49:05.5300297Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-10T13:49:05.5300302Z 
2025-01-10T13:49:05.5300374Z     @wraps(func)
2025-01-10T13:49:05.5300463Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5300619Z         with self._recreate_cm():
2025-01-10T13:49:05.5300714Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5300797Z E           AssertionError: 
2025-01-10T13:49:05.5300922Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:49:05.5300996Z E           
2025-01-10T13:49:05.5301091Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:05.5301229Z E           Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:49:05.5301355Z E           Max relative difference among violations: 0.00029157
2025-01-10T13:49:05.5301516Z E            ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:49:05.5301631Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:49:05.5301757Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:49:05.5301913Z E            DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:49:05.5302032Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:49:05.5302150Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:49:05.5302157Z 
2025-01-10T13:49:05.5302363Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5302521Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:05.5302774Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.5303219Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.5303396Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5303739Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:05.5303910Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5303983Z 	
2025-01-10T13:49:05.5304079Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5304163Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5304266Z  ([1mbase.py[0m:542)
2025-01-10T13:49:05.5304434Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5304505Z 	
2025-01-10T13:49:05.5304660Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5304821Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5304887Z 	
2025-01-10T13:49:05.5304983Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:49:05.5305071Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:49:05.5305165Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5305267Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5305424Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:05.5305428Z 
2025-01-10T13:49:05.5305431Z 
2025-01-10T13:49:05.5305673Z Packets:                                                                                   108171/? [00:14<00:00, 10302.09it/s][A
2025-01-10T13:49:05.5305677Z 
2025-01-10T13:49:05.5305906Z Packets:                                                                                   115659/? [00:14<00:00, 12358.18it/s][A
2025-01-10T13:49:05.5306030Z 
2025-01-10T13:49:05.5306262Z Packets:                                                                                   121933/? [00:14<00:00, 14368.62it/s][A
2025-01-10T13:49:05.5306266Z 
2025-01-10T13:49:05.5306487Z Packets:                                                                                   127335/? [00:14<00:00, 16440.58it/s][A
2025-01-10T13:49:05.5306492Z 
2025-01-10T13:49:05.5306718Z Packets:                                                                                   132170/? [00:15<00:00, 18521.23it/s][A
2025-01-10T13:49:05.5306722Z 
2025-01-10T13:49:05.5306946Z Packets:                                                                                   136592/? [00:15<00:00, 20537.38it/s][A
2025-01-10T13:49:05.5306950Z 
2025-01-10T13:49:05.5307274Z Packets:                                                                                   140696/? [00:15<00:00, 22654.92it/s][A
2025-01-10T13:49:05.5307283Z 
2025-01-10T13:49:05.5307513Z Packets:                                                                                   144625/? [00:15<00:00, 24723.52it/s][A
2025-01-10T13:49:05.5307517Z 
2025-01-10T13:49:05.5307740Z Packets:                                                                                   148431/? [00:15<00:00, 26631.57it/s][A
2025-01-10T13:49:05.5307744Z 
2025-01-10T13:49:05.5307970Z Packets:                                                                                   152143/? [00:15<00:00, 28342.72it/s][A
2025-01-10T13:49:05.5307974Z 
2025-01-10T13:49:05.5308196Z Packets:                                                                                   155789/? [00:15<00:00, 29706.07it/s][A
2025-01-10T13:49:05.5308200Z 
2025-01-10T13:49:05.5308422Z Packets:                                                                                   159371/? [00:15<00:00, 30987.32it/s][A
2025-01-10T13:49:05.5308426Z 
2025-01-10T13:49:05.5308650Z Packets:                                                                                   162931/? [00:15<00:00, 31862.25it/s][A
2025-01-10T13:49:05.5308657Z 
2025-01-10T13:49:05.5308872Z Packets:                                                                                   166475/? [00:16<00:00, 32796.05it/s][A
2025-01-10T13:49:05.5308881Z 
2025-01-10T13:49:05.5309099Z Packets:                                                                                   170005/? [00:16<00:00, 33449.67it/s][A
2025-01-10T13:49:05.5309103Z 
2025-01-10T13:49:05.5309328Z Packets:                                                                                   173532/? [00:16<00:00, 33645.83it/s][A
2025-01-10T13:49:05.5309331Z 
2025-01-10T13:49:05.5309552Z Packets:                                                                                   177075/? [00:16<00:00, 34148.71it/s][A
2025-01-10T13:49:05.5309559Z 
2025-01-10T13:49:05.5309782Z Packets:                                                                                   180598/? [00:16<00:00, 34460.16it/s][A
2025-01-10T13:49:05.5309789Z 
2025-01-10T13:49:05.5310012Z Packets:                                                                                   184146/? [00:16<00:00, 34756.14it/s][A
2025-01-10T13:49:05.5310016Z 
2025-01-10T13:49:05.5310235Z Packets:                                                                                   187669/? [00:16<00:00, 34850.70it/s][A
2025-01-10T13:49:05.5310240Z 
2025-01-10T13:49:05.5310465Z Packets:                                                                                   191192/? [00:16<00:00, 34962.66it/s][A
2025-01-10T13:49:05.5310470Z 
2025-01-10T13:49:05.5310689Z Packets:                                                                                   194712/? [00:16<00:00, 34912.46it/s][A
2025-01-10T13:49:05.5310692Z 
2025-01-10T13:49:05.5310921Z Packets:                                                                                   198220/? [00:16<00:00, 34623.93it/s][A
2025-01-10T13:49:05.5310925Z 
2025-01-10T13:49:05.5311233Z Packets:                                                                                   201732/? [00:17<00:00, 34763.05it/s][A
2025-01-10T13:49:05.5311379Z Iterations:                                                                                41/? [08:02<00:00,  5.59s/it]
2025-01-10T13:49:05.5311384Z 
2025-01-10T13:49:05.5311609Z Packets:                                                                                   204009/? [00:17<00:00, 34763.05it/s][A
2025-01-10T13:49:05.5311760Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:05.5312264Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.5312562Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:05.5312672Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:05.5312772Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5312853Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5312857Z 
2025-01-10T13:49:05.5312963Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5313046Z 	Starting iteration 1 of 1
2025-01-10T13:49:05.5313152Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5313241Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:49:05.5313333Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:49:05.5313421Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5313575Z __________________________ test_boundary_interactions __________________________
2025-01-10T13:49:05.5313580Z 
2025-01-10T13:49:05.5314506Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f3c02d24620<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f3be8f8b430>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f3bcfc59b10>])
2025-01-10T13:49:05.5314782Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3beaa00680>
2025-01-10T13:49:05.5314790Z 
2025-01-10T13:49:05.5314960Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-10T13:49:05.5315054Z         no_of_packets = len(rpacket_tracker)
2025-01-10T13:49:05.5315125Z     
2025-01-10T13:49:05.5315404Z         max_boundary_interaction_size = max([tracker.boundary_interaction.size for tracker in rpacket_tracker])
2025-01-10T13:49:05.5315512Z         obtained_boundary_interaction = np.full(
2025-01-10T13:49:05.5315629Z             (no_of_packets, max_boundary_interaction_size),
2025-01-10T13:49:05.5315706Z             [-1],
2025-01-10T13:49:05.5315844Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-10T13:49:05.5315910Z         )
2025-01-10T13:49:05.5315981Z     
2025-01-10T13:49:05.5316096Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-10T13:49:05.5316196Z             obtained_boundary_interaction[
2025-01-10T13:49:05.5316305Z                 i, : tracker.boundary_interaction.size
2025-01-10T13:49:05.5316402Z             ] = tracker.boundary_interaction
2025-01-10T13:49:05.5316467Z     
2025-01-10T13:49:05.5316628Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-01-10T13:49:05.5316716Z             obtained_boundary_interaction
2025-01-10T13:49:05.5316788Z         )
2025-01-10T13:49:05.5316871Z >       npt.assert_array_equal(
2025-01-10T13:49:05.5317031Z             obtained_boundary_interaction, expected_boundary_interaction
2025-01-10T13:49:05.5317098Z         )
2025-01-10T13:49:05.5317107Z 
2025-01-10T13:49:05.5317279Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:153: 
2025-01-10T13:49:05.5317397Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5317670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/numpy/_utils/__init__.py:85: in wrapper
2025-01-10T13:49:05.5317757Z     return fun(*args, **kwargs)
2025-01-10T13:49:05.5318008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5318012Z 
2025-01-10T13:49:05.5318239Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:05.5318340Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-01-10T13:49:05.5318525Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-01-10T13:49:05.5318714Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-01-10T13:49:05.5318724Z 
2025-01-10T13:49:05.5318798Z     @wraps(func)
2025-01-10T13:49:05.5318883Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5318966Z         with self._recreate_cm():
2025-01-10T13:49:05.5319055Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5319239Z E           AssertionError: 
2025-01-10T13:49:05.5319329Z E           Arrays are not equal
2025-01-10T13:49:05.5319397Z E           
2025-01-10T13:49:05.5319503Z E           (shapes (4000, 62), (4000, 64) mismatch)
2025-01-10T13:49:05.5319648Z E            ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:05.5319743Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:05.5319853Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:05.5320003Z E            DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:05.5320094Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:05.5320194Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:05.5320198Z 
2025-01-10T13:49:05.5320407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5320568Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-10T13:49:05.5320572Z 
2025-01-10T13:49:05.5321266Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:05.5321543Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f3be952db80>
2025-01-10T13:49:05.5321897Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:05.5322302Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f3bea4f5bb0>
2025-01-10T13:49:05.5322306Z 
2025-01-10T13:49:05.5322406Z     def test_montecarlo_main_loop_weighted(
2025-01-10T13:49:05.5322497Z         montecarlo_main_loop_config,
2025-01-10T13:49:05.5322578Z         regression_data,
2025-01-10T13:49:05.5322659Z         atomic_dataset,
2025-01-10T13:49:05.5322748Z         simple_weighted_packet_source,
2025-01-10T13:49:05.5322824Z     ):
2025-01-10T13:49:05.5322929Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:05.5323105Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-10T13:49:05.5323194Z             montecarlo_main_loop_config,
2025-01-10T13:49:05.5323284Z             atom_data=atomic_dataset,
2025-01-10T13:49:05.5323377Z             virtual_packet_logging=False,
2025-01-10T13:49:05.5323460Z             legacy_mode_enabled=True,
2025-01-10T13:49:05.5323533Z         )
2025-01-10T13:49:05.5323829Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-10T13:49:05.5323924Z             simple_weighted_packet_source
2025-01-10T13:49:05.5323990Z         )
2025-01-10T13:49:05.5324143Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-10T13:49:05.5324279Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-10T13:49:05.5324351Z     
2025-01-10T13:49:05.5324457Z         # Get the montecarlo simple regression data
2025-01-10T13:49:05.5324660Z         regression_data_dir = (
2025-01-10T13:49:05.5324835Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-10T13:49:05.5324980Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-10T13:49:05.5325047Z         )
2025-01-10T13:49:05.5325210Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-10T13:49:05.5325284Z     
2025-01-10T13:49:05.5325371Z         # Load compare data from refdata
2025-01-10T13:49:05.5325443Z     
2025-01-10T13:49:05.5325530Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:05.5325660Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:05.5325727Z         ]
2025-01-10T13:49:05.5325827Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:05.5326059Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:05.5326134Z         ]
2025-01-10T13:49:05.5326250Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:05.5326400Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:05.5326466Z         ]
2025-01-10T13:49:05.5326576Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:05.5326702Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:05.5326779Z         ]
2025-01-10T13:49:05.5326873Z         expected_hdf_store.close()
2025-01-10T13:49:05.5326953Z         transport_state = (
2025-01-10T13:49:05.5327137Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-10T13:49:05.5327205Z         )
2025-01-10T13:49:05.5327376Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:05.5327514Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:05.5327606Z         actual_nu_bar_estimator = (
2025-01-10T13:49:05.5327747Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:49:05.5327823Z         )
2025-01-10T13:49:05.5328002Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:49:05.5328073Z     
2025-01-10T13:49:05.5328144Z         # Compare
2025-01-10T13:49:05.5328231Z         npt.assert_allclose(
2025-01-10T13:49:05.5328380Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-10T13:49:05.5328452Z         )
2025-01-10T13:49:05.5328647Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-10T13:49:05.5328804Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-10T13:49:05.5328808Z 
2025-01-10T13:49:05.5329045Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-10T13:49:05.5329159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5329166Z 
2025-01-10T13:49:05.5329635Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc88222a0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-10T13:49:05.5329752Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-10T13:49:05.5330017Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5330021Z 
2025-01-10T13:49:05.5330102Z     @wraps(func)
2025-01-10T13:49:05.5330183Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5330272Z         with self._recreate_cm():
2025-01-10T13:49:05.5330358Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5330448Z E           AssertionError: 
2025-01-10T13:49:05.5330555Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:49:05.5330629Z E           
2025-01-10T13:49:05.5330732Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:49:05.5330881Z E           Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:49:05.5331009Z E           Max relative difference among violations: 2.11614526
2025-01-10T13:49:05.5331279Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:05.5331373Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:05.5331557Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:05.5331650Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:05.5331654Z 
2025-01-10T13:49:05.5331858Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5332018Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:05.5332281Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:05.5332807Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:05.5332993Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5333217Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:05.5333382Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5333455Z 	
2025-01-10T13:49:05.5333553Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5333756Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5333868Z  ([1mbase.py[0m:542)
2025-01-10T13:49:05.5334033Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5334104Z 	
2025-01-10T13:49:05.5334259Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:05.5334426Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5334493Z 	
2025-01-10T13:49:05.5334590Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:05.5334682Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:05.5334780Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5334883Z  ([1mbase.py[0m:657)
2025-01-10T13:49:05.5335045Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:05.5335053Z 
2025-01-10T13:49:05.5335056Z 
2025-01-10T13:49:05.5335302Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-10T13:49:05.5335306Z 
2025-01-10T13:49:05.5335527Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-10T13:49:05.5335532Z 
2025-01-10T13:49:05.5335790Z Packets:   ████████▍                                                                       10469/100000 [00:00<00:00, 104674.88it/s][A
2025-01-10T13:49:05.5335795Z 
2025-01-10T13:49:05.5336049Z Packets:   █████████████████                                                               21318/100000 [00:00<00:00, 106915.09it/s][A
2025-01-10T13:49:05.5336054Z 
2025-01-10T13:49:05.5336328Z Packets:   █████████████████████████▋                                                      32040/100000 [00:00<00:00, 107050.51it/s][A
2025-01-10T13:49:05.5336340Z 
2025-01-10T13:49:05.5336619Z Packets:   ██████████████████████████████████▏                                             42759/100000 [00:00<00:00, 107105.01it/s][A
2025-01-10T13:49:05.5336623Z 
2025-01-10T13:49:05.5336903Z Packets:   ██████████████████████████████████████████▊                                     53508/100000 [00:00<00:00, 107242.68it/s][A
2025-01-10T13:49:05.5336908Z 
2025-01-10T13:49:05.5337201Z Packets:   ███████████████████████████████████████████████████▍                            64310/100000 [00:00<00:00, 107505.69it/s][A
2025-01-10T13:49:05.5337205Z 
2025-01-10T13:49:05.5337508Z Packets:   ████████████████████████████████████████████████████████████                    75061/100000 [00:00<00:00, 107477.31it/s][A
2025-01-10T13:49:05.5337512Z 
2025-01-10T13:49:05.5337946Z Packets:   ████████████████████████████████████████████████████████████████████▋           85908/100000 [00:00<00:00, 107790.27it/s][A
2025-01-10T13:49:05.5337951Z 
2025-01-10T13:49:05.5338382Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  96688/100000 [00:00<00:00, 104295.76it/s][A
2025-01-10T13:49:05.5338531Z Iterations:                                                                                45/? [08:53<00:00,  8.26s/it]
2025-01-10T13:49:05.5338536Z 
2025-01-10T13:49:05.5338869Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 104295.76it/s][A
2025-01-10T13:49:05.5339028Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:05.5339530Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:05.5339766Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:05.5339872Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:05.5339981Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:05.5340061Z 	Simulation took 0.00 s
2025-01-10T13:49:05.5340065Z 
2025-01-10T13:49:05.5340174Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:05.5340257Z 	Starting iteration 1 of 1
2025-01-10T13:49:05.5340367Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:05.5340456Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:05.5340551Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:05.5340646Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:05.5340859Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-10T13:49:05.5340863Z 
2025-01-10T13:49:05.5341131Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843ac30>
2025-01-10T13:49:05.5341415Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5341686Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-10T13:49:05.5341770Z attribute = 'plot_data'
2025-01-10T13:49:05.5341774Z 
2025-01-10T13:49:05.5341869Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5341942Z         "attribute",
2025-01-10T13:49:05.5342015Z         [
2025-01-10T13:49:05.5342090Z             "plot_data",
2025-01-10T13:49:05.5342170Z             "plot_colors",
2025-01-10T13:49:05.5342250Z             "new_bin_edges",
2025-01-10T13:49:05.5342319Z         ],
2025-01-10T13:49:05.5342391Z     )
2025-01-10T13:49:05.5342476Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5342554Z         self,
2025-01-10T13:49:05.5342642Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5342718Z         request,
2025-01-10T13:49:05.5342789Z         attribute,
2025-01-10T13:49:05.5342860Z     ):
2025-01-10T13:49:05.5342928Z         """
2025-01-10T13:49:05.5343072Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5343139Z     
2025-01-10T13:49:05.5343325Z         Parameters:
2025-01-10T13:49:05.5343400Z         -----------
2025-01-10T13:49:05.5343585Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5343778Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5343947Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5344014Z         """
2025-01-10T13:49:05.5344124Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5344266Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5344411Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5344574Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5344720Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5344954Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5345079Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5345207Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5345211Z 
2025-01-10T13:49:05.5345354Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5345470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5345473Z 
2025-01-10T13:49:05.5345915Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcb6d00e0>, array([11843.96225504, 11843.96225504, 11843.96225504,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:49:05.5346051Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:49:05.5346312Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5346317Z 
2025-01-10T13:49:05.5346394Z     @wraps(func)
2025-01-10T13:49:05.5346479Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5346562Z         with self._recreate_cm():
2025-01-10T13:49:05.5346654Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5346736Z E           AssertionError: 
2025-01-10T13:49:05.5346846Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5346916Z E           
2025-01-10T13:49:05.5347010Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:49:05.5347175Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.5347292Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.5347417Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.5347574Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.5347690Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.5347812Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.5347816Z 
2025-01-10T13:49:05.5348023Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5348177Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5348411Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5348664Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5348812Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5349115Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5349321Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-10T13:49:05.5349326Z 
2025-01-10T13:49:05.5349597Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843b0b0>
2025-01-10T13:49:05.5349876Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5350268Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-10T13:49:05.5350350Z attribute = 'plot_data'
2025-01-10T13:49:05.5350359Z 
2025-01-10T13:49:05.5350450Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5350529Z         "attribute",
2025-01-10T13:49:05.5350596Z         [
2025-01-10T13:49:05.5350676Z             "plot_data",
2025-01-10T13:49:05.5350753Z             "plot_colors",
2025-01-10T13:49:05.5350834Z             "new_bin_edges",
2025-01-10T13:49:05.5350902Z         ],
2025-01-10T13:49:05.5350975Z     )
2025-01-10T13:49:05.5351062Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5351137Z         self,
2025-01-10T13:49:05.5351223Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5351299Z         request,
2025-01-10T13:49:05.5351449Z         attribute,
2025-01-10T13:49:05.5351526Z     ):
2025-01-10T13:49:05.5351594Z         """
2025-01-10T13:49:05.5351739Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5351806Z     
2025-01-10T13:49:05.5351885Z         Parameters:
2025-01-10T13:49:05.5351962Z         -----------
2025-01-10T13:49:05.5352141Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5352246Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5352406Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5352481Z         """
2025-01-10T13:49:05.5352587Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5352727Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5352873Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5353039Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5353185Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5353316Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5353434Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5353557Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5353561Z 
2025-01-10T13:49:05.5353807Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5353917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5353921Z 
2025-01-10T13:49:05.5354262Z args = (<function assert_allclose.<locals>.compare at 0x7f3bf2863b00>, array([11843.96225504, 11843.96225504, 11843.96225504,...47464 ,
2025-01-10T13:49:05.5354397Z        12229.96880815, 12113.40540961, 12605.43283975, 12605.43283975,
2025-01-10T13:49:05.5354483Z        11152.96259546, 11172.04481521]))
2025-01-10T13:49:05.5354740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5354747Z 
2025-01-10T13:49:05.5354825Z     @wraps(func)
2025-01-10T13:49:05.5354909Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5354996Z         with self._recreate_cm():
2025-01-10T13:49:05.5355084Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5355166Z E           AssertionError: 
2025-01-10T13:49:05.5355277Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5355346Z E           
2025-01-10T13:49:05.5355440Z E           (shapes (560,), (558,) mismatch)
2025-01-10T13:49:05.5355594Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.5355713Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.5355833Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.5355995Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.5356108Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.5356378Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.5356382Z 
2025-01-10T13:49:05.5356586Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5356796Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-10T13:49:05.5356800Z 
2025-01-10T13:49:05.5357061Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843b2f0>
2025-01-10T13:49:05.5357340Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5357615Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-10T13:49:05.5357696Z attribute = 'plot_data'
2025-01-10T13:49:05.5357700Z 
2025-01-10T13:49:05.5357893Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5357969Z         "attribute",
2025-01-10T13:49:05.5358042Z         [
2025-01-10T13:49:05.5358127Z             "plot_data",
2025-01-10T13:49:05.5358202Z             "plot_colors",
2025-01-10T13:49:05.5358283Z             "new_bin_edges",
2025-01-10T13:49:05.5358349Z         ],
2025-01-10T13:49:05.5358421Z     )
2025-01-10T13:49:05.5358505Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5358580Z         self,
2025-01-10T13:49:05.5358670Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5358745Z         request,
2025-01-10T13:49:05.5358816Z         attribute,
2025-01-10T13:49:05.5358891Z     ):
2025-01-10T13:49:05.5358958Z         """
2025-01-10T13:49:05.5359093Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5359160Z     
2025-01-10T13:49:05.5359238Z         Parameters:
2025-01-10T13:49:05.5359309Z         -----------
2025-01-10T13:49:05.5359492Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5359587Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5359752Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5359828Z         """
2025-01-10T13:49:05.5359935Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5360076Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5360220Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5360384Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5360528Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5360655Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5360772Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5360893Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5360897Z 
2025-01-10T13:49:05.5361039Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5361155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5361162Z 
2025-01-10T13:49:05.5361643Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8f536a0>, array([11202.14920452, 13552.38987987, 11630.95782059,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:49:05.5361742Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:49:05.5362002Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5362007Z 
2025-01-10T13:49:05.5362081Z     @wraps(func)
2025-01-10T13:49:05.5362167Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5362250Z         with self._recreate_cm():
2025-01-10T13:49:05.5362337Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5362417Z E           AssertionError: 
2025-01-10T13:49:05.5362531Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5362607Z E           
2025-01-10T13:49:05.5362696Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:49:05.5362939Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.5363054Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.5363178Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.5363334Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.5363450Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.5363570Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.5363576Z 
2025-01-10T13:49:05.5363871Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5364209Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-10T13:49:05.5364213Z 
2025-01-10T13:49:05.5364477Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843b530>
2025-01-10T13:49:05.5364767Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5365034Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-10T13:49:05.5365118Z attribute = 'plot_data'
2025-01-10T13:49:05.5365122Z 
2025-01-10T13:49:05.5365209Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5365288Z         "attribute",
2025-01-10T13:49:05.5365358Z         [
2025-01-10T13:49:05.5365436Z             "plot_data",
2025-01-10T13:49:05.5365511Z             "plot_colors",
2025-01-10T13:49:05.5365593Z             "new_bin_edges",
2025-01-10T13:49:05.5365665Z         ],
2025-01-10T13:49:05.5365736Z     )
2025-01-10T13:49:05.5365825Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5365897Z         self,
2025-01-10T13:49:05.5365986Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5366057Z         request,
2025-01-10T13:49:05.5366136Z         attribute,
2025-01-10T13:49:05.5366204Z     ):
2025-01-10T13:49:05.5366276Z         """
2025-01-10T13:49:05.5366407Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5366477Z     
2025-01-10T13:49:05.5366549Z         Parameters:
2025-01-10T13:49:05.5366630Z         -----------
2025-01-10T13:49:05.5366800Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5366900Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5367060Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5367132Z         """
2025-01-10T13:49:05.5367241Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5367381Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5367532Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5367694Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5367846Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5367966Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5368086Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5368200Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5368205Z 
2025-01-10T13:49:05.5368350Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5368458Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5368462Z 
2025-01-10T13:49:05.5368935Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc939d3a0>, array([11202.14920452, 13552.38987987, 11630.95782059,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:49:05.5369041Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:49:05.5369294Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5369412Z 
2025-01-10T13:49:05.5369496Z     @wraps(func)
2025-01-10T13:49:05.5369576Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5369664Z         with self._recreate_cm():
2025-01-10T13:49:05.5369751Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5369837Z E           AssertionError: 
2025-01-10T13:49:05.5369939Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5370013Z E           
2025-01-10T13:49:05.5370103Z E           (shapes (153,), (159,) mismatch)
2025-01-10T13:49:05.5370258Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.5370378Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.5370569Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.5370732Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.5370846Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.5370968Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.5370972Z 
2025-01-10T13:49:05.5371168Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5371379Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-10T13:49:05.5371382Z 
2025-01-10T13:49:05.5371646Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843b7a0>
2025-01-10T13:49:05.5371923Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5372193Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-10T13:49:05.5372274Z attribute = 'plot_data'
2025-01-10T13:49:05.5372278Z 
2025-01-10T13:49:05.5372371Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5372447Z         "attribute",
2025-01-10T13:49:05.5372519Z         [
2025-01-10T13:49:05.5372592Z             "plot_data",
2025-01-10T13:49:05.5372671Z             "plot_colors",
2025-01-10T13:49:05.5372748Z             "new_bin_edges",
2025-01-10T13:49:05.5372820Z         ],
2025-01-10T13:49:05.5372887Z     )
2025-01-10T13:49:05.5372975Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5373044Z         self,
2025-01-10T13:49:05.5373136Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5373221Z         request,
2025-01-10T13:49:05.5373295Z         attribute,
2025-01-10T13:49:05.5373372Z     ):
2025-01-10T13:49:05.5373443Z         """
2025-01-10T13:49:05.5373587Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5373776Z     
2025-01-10T13:49:05.5373858Z         Parameters:
2025-01-10T13:49:05.5373934Z         -----------
2025-01-10T13:49:05.5374115Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5374241Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5374407Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5374475Z         """
2025-01-10T13:49:05.5374587Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5374723Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5374874Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5375039Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5375184Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5375312Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5375429Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5375556Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5375561Z 
2025-01-10T13:49:05.5375827Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5375947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5375951Z 
2025-01-10T13:49:05.5376382Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcf98a020>, array([11843.96225504, 11843.96225504, 11843.96225504,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:49:05.5376524Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:49:05.5376777Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5376782Z 
2025-01-10T13:49:05.5376855Z     @wraps(func)
2025-01-10T13:49:05.5376940Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5377023Z         with self._recreate_cm():
2025-01-10T13:49:05.5377215Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5377299Z E           AssertionError: 
2025-01-10T13:49:05.5377410Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5377484Z E           
2025-01-10T13:49:05.5377577Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:49:05.5377731Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.5377849Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.5377977Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.5378132Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.5378249Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.5378368Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.5378372Z 
2025-01-10T13:49:05.5378577Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5378726Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5378972Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5379215Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5379367Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5379669Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5379876Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-10T13:49:05.5379881Z 
2025-01-10T13:49:05.5380144Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843b9e0>
2025-01-10T13:49:05.5380426Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5380696Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-10T13:49:05.5380781Z attribute = 'plot_data'
2025-01-10T13:49:05.5380785Z 
2025-01-10T13:49:05.5380880Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5380954Z         "attribute",
2025-01-10T13:49:05.5381027Z         [
2025-01-10T13:49:05.5381111Z             "plot_data",
2025-01-10T13:49:05.5381187Z             "plot_colors",
2025-01-10T13:49:05.5381269Z             "new_bin_edges",
2025-01-10T13:49:05.5381338Z         ],
2025-01-10T13:49:05.5381411Z     )
2025-01-10T13:49:05.5381521Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5381658Z         self,
2025-01-10T13:49:05.5381812Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5381947Z         request,
2025-01-10T13:49:05.5382029Z         attribute,
2025-01-10T13:49:05.5382104Z     ):
2025-01-10T13:49:05.5382174Z         """
2025-01-10T13:49:05.5382317Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5382389Z     
2025-01-10T13:49:05.5382469Z         Parameters:
2025-01-10T13:49:05.5382545Z         -----------
2025-01-10T13:49:05.5382831Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5382926Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5383091Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5383170Z         """
2025-01-10T13:49:05.5383278Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5383420Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5383564Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5383834Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5383987Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5384226Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5384347Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5384474Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5384479Z 
2025-01-10T13:49:05.5384624Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5384740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5384744Z 
2025-01-10T13:49:05.5385214Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcb668220>, array([12467.89648692, 12467.89648692, 12357.74827994,...), array([13692.75973672, 11362.93720064, 12466.53861691, ...,
2025-01-10T13:49:05.5385312Z        12605.43283975, 11152.96259546, 11172.04481521]))
2025-01-10T13:49:05.5385571Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5385576Z 
2025-01-10T13:49:05.5385650Z     @wraps(func)
2025-01-10T13:49:05.5385742Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5385827Z         with self._recreate_cm():
2025-01-10T13:49:05.5385919Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5386008Z E           AssertionError: 
2025-01-10T13:49:05.5386118Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5386197Z E           
2025-01-10T13:49:05.5386290Z E           (shapes (1481,), (1466,) mismatch)
2025-01-10T13:49:05.5386466Z E            ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:49:05.5386551Z E                  11398.237865, 11111.204868])
2025-01-10T13:49:05.5386722Z E            DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:49:05.5386803Z E                  11152.962595, 11172.044815])
2025-01-10T13:49:05.5386807Z 
2025-01-10T13:49:05.5387010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5387165Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5387414Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5387763Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5387920Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5388281Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5388494Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-10T13:49:05.5388498Z 
2025-01-10T13:49:05.5388765Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843bc20>
2025-01-10T13:49:05.5389055Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5389334Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-10T13:49:05.5389415Z attribute = 'plot_data'
2025-01-10T13:49:05.5389537Z 
2025-01-10T13:49:05.5389631Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5389711Z         "attribute",
2025-01-10T13:49:05.5389780Z         [
2025-01-10T13:49:05.5389865Z             "plot_data",
2025-01-10T13:49:05.5389942Z             "plot_colors",
2025-01-10T13:49:05.5390025Z             "new_bin_edges",
2025-01-10T13:49:05.5390093Z         ],
2025-01-10T13:49:05.5390165Z     )
2025-01-10T13:49:05.5390250Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5390325Z         self,
2025-01-10T13:49:05.5390414Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5390489Z         request,
2025-01-10T13:49:05.5390561Z         attribute,
2025-01-10T13:49:05.5390634Z     ):
2025-01-10T13:49:05.5390702Z         """
2025-01-10T13:49:05.5390843Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5391005Z     
2025-01-10T13:49:05.5391088Z         Parameters:
2025-01-10T13:49:05.5391160Z         -----------
2025-01-10T13:49:05.5391348Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5391448Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5391613Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5391686Z         """
2025-01-10T13:49:05.5391791Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5391938Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5392087Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5392255Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5392403Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5392535Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5392659Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5392786Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5392793Z 
2025-01-10T13:49:05.5392944Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5393058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5393062Z 
2025-01-10T13:49:05.5393540Z args = (<function assert_allclose.<locals>.compare at 0x7f3bcb6d19e0>, array([11202.14920452, 13552.38987987, 11630.95782059,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:49:05.5393834Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:49:05.5394103Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5394108Z 
2025-01-10T13:49:05.5394182Z     @wraps(func)
2025-01-10T13:49:05.5394275Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5394371Z         with self._recreate_cm():
2025-01-10T13:49:05.5394459Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5394554Z E           AssertionError: 
2025-01-10T13:49:05.5394661Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5394738Z E           
2025-01-10T13:49:05.5394828Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:49:05.5394989Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.5395107Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.5395234Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.5395391Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.5395511Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.5395633Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.5395646Z 
2025-01-10T13:49:05.5395848Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5396199Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-10T13:49:05.5396203Z 
2025-01-10T13:49:05.5396467Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf843be00>
2025-01-10T13:49:05.5396755Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>
2025-01-10T13:49:05.5397025Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-10T13:49:05.5397114Z attribute = 'plot_data'
2025-01-10T13:49:05.5397118Z 
2025-01-10T13:49:05.5397208Z     @pytest.mark.parametrize(
2025-01-10T13:49:05.5397291Z         "attribute",
2025-01-10T13:49:05.5397360Z         [
2025-01-10T13:49:05.5397445Z             "plot_data",
2025-01-10T13:49:05.5397530Z             "plot_colors",
2025-01-10T13:49:05.5397709Z             "new_bin_edges",
2025-01-10T13:49:05.5397789Z         ],
2025-01-10T13:49:05.5397859Z     )
2025-01-10T13:49:05.5397957Z     def test_prepare_plot_data(
2025-01-10T13:49:05.5398031Z         self,
2025-01-10T13:49:05.5398131Z         plotter_prepare_plot_data,
2025-01-10T13:49:05.5398203Z         request,
2025-01-10T13:49:05.5398280Z         attribute,
2025-01-10T13:49:05.5398348Z     ):
2025-01-10T13:49:05.5398426Z         """
2025-01-10T13:49:05.5398559Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:05.5398634Z     
2025-01-10T13:49:05.5398709Z         Parameters:
2025-01-10T13:49:05.5398789Z         -----------
2025-01-10T13:49:05.5398967Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:05.5399071Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5399232Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:05.5399306Z         """
2025-01-10T13:49:05.5399418Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5399552Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:05.5399711Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:05.5399870Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:05.5400025Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:05.5400147Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:05.5400271Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:05.5400389Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:05.5400394Z 
2025-01-10T13:49:05.5400543Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:05.5400660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5400664Z 
2025-01-10T13:49:05.5401143Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8f53920>, array([12467.89648692, 12357.74827994, 11118.74739262,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:49:05.5401251Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:49:05.5401509Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5401513Z 
2025-01-10T13:49:05.5401595Z     @wraps(func)
2025-01-10T13:49:05.5401674Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5401765Z         with self._recreate_cm():
2025-01-10T13:49:05.5401850Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5401936Z E           AssertionError: 
2025-01-10T13:49:05.5402049Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5402118Z E           
2025-01-10T13:49:05.5402213Z E           (shapes (381,), (379,) mismatch)
2025-01-10T13:49:05.5402372Z E            ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:49:05.5402493Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:49:05.5402698Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:49:05.5402857Z E            DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:49:05.5402972Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:49:05.5403096Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:49:05.5403100Z 
2025-01-10T13:49:05.5403299Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5403460Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5403798Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5404161Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5404320Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5404627Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5404835Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-10T13:49:05.5404839Z 
2025-01-10T13:49:05.5405101Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851c0b0>
2025-01-10T13:49:05.5405411Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3bbdcdde50>
2025-01-10T13:49:05.5405901Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5406144Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-10T13:49:05.5406152Z 
2025-01-10T13:49:05.5406245Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5406407Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:05.5406484Z     ):
2025-01-10T13:49:05.5406553Z         """
2025-01-10T13:49:05.5406688Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5406754Z     
2025-01-10T13:49:05.5406887Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5406956Z     
2025-01-10T13:49:05.5407038Z         Parameters:
2025-01-10T13:49:05.5407110Z         -----------
2025-01-10T13:49:05.5407270Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:05.5407428Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:05.5407524Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5407601Z         """
2025-01-10T13:49:05.5407692Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:05.5407808Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5407975Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:05.5408130Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5408226Z             expected_values = expected.get(
2025-01-10T13:49:05.5408316Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5408400Z             ).values.flatten()
2025-01-10T13:49:05.5408534Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:05.5408601Z     
2025-01-10T13:49:05.5408745Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5408917Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5409055Z                     expected_values,
2025-01-10T13:49:05.5409206Z                     actual_values,
2025-01-10T13:49:05.5409316Z                     rtol=0.3,
2025-01-10T13:49:05.5409402Z                     atol=3,
2025-01-10T13:49:05.5409472Z                 )
2025-01-10T13:49:05.5409481Z 
2025-01-10T13:49:05.5409633Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:05.5409885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5409889Z 
2025-01-10T13:49:05.5410300Z args = (<function assert_allclose.<locals>.compare at 0x7f3bea4bf740>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5410381Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5410645Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5410650Z 
2025-01-10T13:49:05.5410734Z     @wraps(func)
2025-01-10T13:49:05.5410816Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5410909Z         with self._recreate_cm():
2025-01-10T13:49:05.5410996Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5411161Z E           AssertionError: 
2025-01-10T13:49:05.5411266Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5411344Z E           
2025-01-10T13:49:05.5411442Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5411562Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5411688Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5411849Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5411937Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5412097Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5412189Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5412194Z 
2025-01-10T13:49:05.5412397Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5412558Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5412802Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5413239Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-10T13:49:05.5413390Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5413998Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:49:05.5414205Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-10T13:49:05.5414209Z 
2025-01-10T13:49:05.5414471Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851c170>
2025-01-10T13:49:05.5414777Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be3919250>
2025-01-10T13:49:05.5415265Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5415518Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-10T13:49:05.5415523Z 
2025-01-10T13:49:05.5415609Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5415771Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:05.5415848Z     ):
2025-01-10T13:49:05.5415917Z         """
2025-01-10T13:49:05.5416053Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5416121Z     
2025-01-10T13:49:05.5416251Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5416320Z     
2025-01-10T13:49:05.5416400Z         Parameters:
2025-01-10T13:49:05.5416473Z         -----------
2025-01-10T13:49:05.5416641Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:05.5416795Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:05.5416895Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5417109Z         """
2025-01-10T13:49:05.5417211Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:05.5417319Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5417490Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:05.5417645Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5417741Z             expected_values = expected.get(
2025-01-10T13:49:05.5417836Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5417918Z             ).values.flatten()
2025-01-10T13:49:05.5418053Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:05.5418122Z     
2025-01-10T13:49:05.5418256Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5418452Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5418545Z                     expected_values,
2025-01-10T13:49:05.5418624Z                     actual_values,
2025-01-10T13:49:05.5418709Z                     rtol=0.3,
2025-01-10T13:49:05.5418782Z                     atol=3,
2025-01-10T13:49:05.5418860Z                 )
2025-01-10T13:49:05.5418864Z 
2025-01-10T13:49:05.5419006Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:05.5419124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5419128Z 
2025-01-10T13:49:05.5419534Z args = (<function assert_allclose.<locals>.compare at 0x7f3bda6e4a40>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5419616Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5419879Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5419887Z 
2025-01-10T13:49:05.5419960Z     @wraps(func)
2025-01-10T13:49:05.5420051Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5420137Z         with self._recreate_cm():
2025-01-10T13:49:05.5420232Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5420316Z E           AssertionError: 
2025-01-10T13:49:05.5420425Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5420502Z E           
2025-01-10T13:49:05.5420594Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5420715Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5420850Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5421008Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5421100Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5421263Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5421354Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5421358Z 
2025-01-10T13:49:05.5421568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5421770Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-10T13:49:05.5421781Z 
2025-01-10T13:49:05.5422042Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851c560>
2025-01-10T13:49:05.5422355Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be3918380>
2025-01-10T13:49:05.5422841Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5423086Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-10T13:49:05.5423090Z 
2025-01-10T13:49:05.5423181Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5423344Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:05.5423522Z     ):
2025-01-10T13:49:05.5423720Z         """
2025-01-10T13:49:05.5423858Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5423927Z     
2025-01-10T13:49:05.5424129Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5424229Z     
2025-01-10T13:49:05.5424369Z         Parameters:
2025-01-10T13:49:05.5424477Z         -----------
2025-01-10T13:49:05.5424824Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:05.5425060Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:05.5425186Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5425322Z         """
2025-01-10T13:49:05.5425445Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:05.5425668Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5426054Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:05.5426242Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5426410Z             expected_values = expected.get(
2025-01-10T13:49:05.5426545Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5426726Z             ).values.flatten()
2025-01-10T13:49:05.5426902Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:05.5427034Z     
2025-01-10T13:49:05.5427193Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5427374Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5427471Z                     expected_values,
2025-01-10T13:49:05.5427675Z                     actual_values,
2025-01-10T13:49:05.5427817Z                     rtol=0.3,
2025-01-10T13:49:05.5427921Z                     atol=3,
2025-01-10T13:49:05.5428074Z                 )
2025-01-10T13:49:05.5428078Z 
2025-01-10T13:49:05.5428243Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:05.5428485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5428493Z 
2025-01-10T13:49:05.5428933Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc6428540>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.5429104Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:49:05.5429392Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5429433Z 
2025-01-10T13:49:05.5429524Z     @wraps(func)
2025-01-10T13:49:05.5429725Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5429841Z         with self._recreate_cm():
2025-01-10T13:49:05.5430008Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5430120Z E           AssertionError: 
2025-01-10T13:49:05.5430277Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5430423Z E           
2025-01-10T13:49:05.5430602Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:05.5430770Z E           Max absolute difference among violations: 24
2025-01-10T13:49:05.5430951Z E           Max relative difference among violations: 0.65
2025-01-10T13:49:05.5431140Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:05.5431323Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.5431563Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.5431695Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.5431699Z 
2025-01-10T13:49:05.5431968Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5432152Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5432497Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5432799Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5433158Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5433524Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5433877Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-10T13:49:05.5433882Z 
2025-01-10T13:49:05.5434256Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851c620>
2025-01-10T13:49:05.5434627Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be3e4a4e0>
2025-01-10T13:49:05.5435305Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5435584Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-10T13:49:05.5435628Z 
2025-01-10T13:49:05.5442986Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5443202Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:05.5443279Z     ):
2025-01-10T13:49:05.5443349Z         """
2025-01-10T13:49:05.5443496Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5443563Z     
2025-01-10T13:49:05.5443859Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5443932Z     
2025-01-10T13:49:05.5444008Z         Parameters:
2025-01-10T13:49:05.5444090Z         -----------
2025-01-10T13:49:05.5444262Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:05.5444423Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:05.5444521Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5444606Z         """
2025-01-10T13:49:05.5444698Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:05.5444811Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5444984Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:05.5445137Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5445233Z             expected_values = expected.get(
2025-01-10T13:49:05.5445324Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5445408Z             ).values.flatten()
2025-01-10T13:49:05.5445548Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:05.5445620Z     
2025-01-10T13:49:05.5445751Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5445848Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5445937Z                     expected_values,
2025-01-10T13:49:05.5446021Z                     actual_values,
2025-01-10T13:49:05.5446100Z                     rtol=0.3,
2025-01-10T13:49:05.5446178Z                     atol=3,
2025-01-10T13:49:05.5446247Z                 )
2025-01-10T13:49:05.5446256Z 
2025-01-10T13:49:05.5446412Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:05.5446531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5446535Z 
2025-01-10T13:49:05.5446947Z args = (<function assert_allclose.<locals>.compare at 0x7f3be9642340>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5447034Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5447297Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5447301Z 
2025-01-10T13:49:05.5447381Z     @wraps(func)
2025-01-10T13:49:05.5447463Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5447555Z         with self._recreate_cm():
2025-01-10T13:49:05.5447643Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5447732Z E           AssertionError: 
2025-01-10T13:49:05.5448011Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5448089Z E           
2025-01-10T13:49:05.5448182Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5448304Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5448438Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5448600Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5448697Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5448851Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5448940Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5448944Z 
2025-01-10T13:49:05.5449278Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5449444Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5449723Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5450072Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5450228Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5450584Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5450788Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-10T13:49:05.5450792Z 
2025-01-10T13:49:05.5451059Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851c7a0>
2025-01-10T13:49:05.5451372Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be9610860>
2025-01-10T13:49:05.5451867Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5452115Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-10T13:49:05.5452119Z 
2025-01-10T13:49:05.5452213Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5452373Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:05.5452448Z     ):
2025-01-10T13:49:05.5452516Z         """
2025-01-10T13:49:05.5452649Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5452715Z     
2025-01-10T13:49:05.5452848Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5452914Z     
2025-01-10T13:49:05.5452993Z         Parameters:
2025-01-10T13:49:05.5453068Z         -----------
2025-01-10T13:49:05.5453233Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:05.5453384Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:05.5453483Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5453550Z         """
2025-01-10T13:49:05.5453800Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:05.5453916Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5454083Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:05.5454236Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5454331Z             expected_values = expected.get(
2025-01-10T13:49:05.5454420Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5454502Z             ).values.flatten()
2025-01-10T13:49:05.5454639Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:05.5454709Z     
2025-01-10T13:49:05.5454846Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5454937Z                 np.testing.assert_allclose(
2025-01-10T13:49:05.5455157Z                     expected_values,
2025-01-10T13:49:05.5455236Z                     actual_values,
2025-01-10T13:49:05.5455315Z                     rtol=0.3,
2025-01-10T13:49:05.5455388Z                     atol=3,
2025-01-10T13:49:05.5455461Z                 )
2025-01-10T13:49:05.5455534Z             else:
2025-01-10T13:49:05.5455669Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:49:05.5455748Z     
2025-01-10T13:49:05.5455854Z         labels = expected["plot_data_hdf/scalars"]
2025-01-10T13:49:05.5455978Z         for index1, data in enumerate(fig.get_children()):
2025-01-10T13:49:05.5456077Z             if isinstance(data.get_label(), str):
2025-01-10T13:49:05.5456155Z                 assert (
2025-01-10T13:49:05.5456377Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-10T13:49:05.5456467Z                     == data.get_label()
2025-01-10T13:49:05.5456536Z                 )
2025-01-10T13:49:05.5456637Z             if isinstance(data, Line2D):
2025-01-10T13:49:05.5456728Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5456816Z                     data.get_xydata(),
2025-01-10T13:49:05.5456949Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-10T13:49:05.5457028Z                     rtol=0.3,
2025-01-10T13:49:05.5457105Z                     atol=3,
2025-01-10T13:49:05.5457172Z                 )
2025-01-10T13:49:05.5457176Z 
2025-01-10T13:49:05.5457326Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-10T13:49:05.5457441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5457445Z 
2025-01-10T13:49:05.5457699Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc657dd00>, array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:05.5457777Z        [1.19e+04, 9.00e+0...,
2025-01-10T13:49:05.5457855Z        [1.82e+04, 0.00e+00],
2025-01-10T13:49:05.5457926Z        [1.91e+04, 0.00e+00],
2025-01-10T13:49:05.5458006Z        [1.91e+04, 0.00e+00],
2025-01-10T13:49:05.5458080Z        [2.00e+04, 0.00e+00]]))
2025-01-10T13:49:05.5458337Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5458341Z 
2025-01-10T13:49:05.5458419Z     @wraps(func)
2025-01-10T13:49:05.5458498Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5458586Z         with self._recreate_cm():
2025-01-10T13:49:05.5458669Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5458754Z E           AssertionError: 
2025-01-10T13:49:05.5458854Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5458927Z E           
2025-01-10T13:49:05.5459019Z E           Mismatched elements: 2 / 40 (5%)
2025-01-10T13:49:05.5459143Z E           Max absolute difference among violations: 4.
2025-01-10T13:49:05.5459270Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:49:05.5459366Z E            ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:05.5459449Z E                  [1.19e+04, 9.00e+00],
2025-01-10T13:49:05.5459535Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:49:05.5459631Z E            DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:49:05.5459708Z E                  [1.19e+04, 1.10e+01],
2025-01-10T13:49:05.5459794Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:49:05.5459798Z 
2025-01-10T13:49:05.5459998Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5460158Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5460392Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5460647Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5460799Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5461107Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5461408Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-10T13:49:05.5461412Z 
2025-01-10T13:49:05.5461673Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851d490>
2025-01-10T13:49:05.5461992Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be31106e0>
2025-01-10T13:49:05.5462085Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5462236Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:05.5462368Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:05.5462648Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5462889Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-10T13:49:05.5462897Z 
2025-01-10T13:49:05.5462994Z     def test_generate_plot_ply(
2025-01-10T13:49:05.5463163Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5463231Z     ):
2025-01-10T13:49:05.5463307Z         """
2025-01-10T13:49:05.5463433Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5463505Z     
2025-01-10T13:49:05.5463765Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5463839Z     
2025-01-10T13:49:05.5463915Z         Parameters:
2025-01-10T13:49:05.5463993Z         ----------
2025-01-10T13:49:05.5464149Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:05.5464291Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:05.5464384Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5464461Z         """
2025-01-10T13:49:05.5464551Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5464659Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5464838Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5464905Z     
2025-01-10T13:49:05.5465055Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5465148Z             expected_values = expected.get(
2025-01-10T13:49:05.5465236Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5465315Z             ).values.flatten()
2025-01-10T13:49:05.5465458Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:05.5465525Z     
2025-01-10T13:49:05.5465659Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5465749Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5465835Z                     expected_values,
2025-01-10T13:49:05.5465917Z                     actual_values,
2025-01-10T13:49:05.5465997Z                     rtol=0.3,
2025-01-10T13:49:05.5466073Z                     atol=3,
2025-01-10T13:49:05.5466150Z                 )
2025-01-10T13:49:05.5466154Z 
2025-01-10T13:49:05.5466302Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:05.5466413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5466416Z 
2025-01-10T13:49:05.5466818Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd995ea20>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5466897Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5467150Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5467154Z 
2025-01-10T13:49:05.5467225Z     @wraps(func)
2025-01-10T13:49:05.5467313Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5467396Z         with self._recreate_cm():
2025-01-10T13:49:05.5467485Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5467688Z E           AssertionError: 
2025-01-10T13:49:05.5467788Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5467862Z E           
2025-01-10T13:49:05.5467955Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5468077Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5468202Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5468356Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5468445Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5468603Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5468687Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5468691Z 
2025-01-10T13:49:05.5468998Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5469159Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5469395Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5469821Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-10T13:49:05.5469968Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5470403Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:49:05.5470602Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-10T13:49:05.5470606Z 
2025-01-10T13:49:05.5470868Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851d580>
2025-01-10T13:49:05.5471187Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3bbdce5430>
2025-01-10T13:49:05.5471283Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5471435Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:05.5471564Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:05.5471769Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5472008Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-10T13:49:05.5472012Z 
2025-01-10T13:49:05.5472104Z     def test_generate_plot_ply(
2025-01-10T13:49:05.5472265Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5472337Z     ):
2025-01-10T13:49:05.5472404Z         """
2025-01-10T13:49:05.5472534Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5472608Z     
2025-01-10T13:49:05.5472732Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5472802Z     
2025-01-10T13:49:05.5472879Z         Parameters:
2025-01-10T13:49:05.5472958Z         ----------
2025-01-10T13:49:05.5473114Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:05.5473253Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:05.5473346Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5473418Z         """
2025-01-10T13:49:05.5473508Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5473723Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5473896Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5473967Z     
2025-01-10T13:49:05.5474111Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5474208Z             expected_values = expected.get(
2025-01-10T13:49:05.5474331Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5474413Z             ).values.flatten()
2025-01-10T13:49:05.5474696Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:05.5474764Z     
2025-01-10T13:49:05.5474896Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5474986Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5475072Z                     expected_values,
2025-01-10T13:49:05.5475150Z                     actual_values,
2025-01-10T13:49:05.5475230Z                     rtol=0.3,
2025-01-10T13:49:05.5475302Z                     atol=3,
2025-01-10T13:49:05.5475374Z                 )
2025-01-10T13:49:05.5475379Z 
2025-01-10T13:49:05.5475520Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:05.5475636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5475640Z 
2025-01-10T13:49:05.5476166Z args = (<function assert_allclose.<locals>.compare at 0x7f3bca45f880>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5476252Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5476507Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5476512Z 
2025-01-10T13:49:05.5476584Z     @wraps(func)
2025-01-10T13:49:05.5476668Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5476749Z         with self._recreate_cm():
2025-01-10T13:49:05.5476838Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5476917Z E           AssertionError: 
2025-01-10T13:49:05.5477023Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5477091Z E           
2025-01-10T13:49:05.5477189Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5477306Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5477434Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5477587Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5477693Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5477848Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5477944Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5477948Z 
2025-01-10T13:49:05.5478152Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5478354Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-10T13:49:05.5478358Z 
2025-01-10T13:49:05.5478627Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851d9a0>
2025-01-10T13:49:05.5478936Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3bd9ab6360>
2025-01-10T13:49:05.5479038Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5479184Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:05.5479333Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:05.5479544Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5479793Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-10T13:49:05.5479798Z 
2025-01-10T13:49:05.5479890Z     def test_generate_plot_ply(
2025-01-10T13:49:05.5480057Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5480131Z     ):
2025-01-10T13:49:05.5480202Z         """
2025-01-10T13:49:05.5480341Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5480409Z     
2025-01-10T13:49:05.5480548Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5480616Z     
2025-01-10T13:49:05.5480704Z         Parameters:
2025-01-10T13:49:05.5480777Z         ----------
2025-01-10T13:49:05.5480942Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:05.5481167Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:05.5481265Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5481334Z         """
2025-01-10T13:49:05.5481435Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5481546Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5481718Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5481790Z     
2025-01-10T13:49:05.5481937Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5482036Z             expected_values = expected.get(
2025-01-10T13:49:05.5482119Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5482206Z             ).values.flatten()
2025-01-10T13:49:05.5482416Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:05.5482493Z     
2025-01-10T13:49:05.5482622Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5482722Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5482801Z                     expected_values,
2025-01-10T13:49:05.5482884Z                     actual_values,
2025-01-10T13:49:05.5482958Z                     rtol=0.3,
2025-01-10T13:49:05.5483037Z                     atol=3,
2025-01-10T13:49:05.5483112Z                 )
2025-01-10T13:49:05.5483116Z 
2025-01-10T13:49:05.5483257Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:05.5483375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5483379Z 
2025-01-10T13:49:05.5483900Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd995fce0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.5483987Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:49:05.5484240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5484247Z 
2025-01-10T13:49:05.5484324Z     @wraps(func)
2025-01-10T13:49:05.5484404Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5484495Z         with self._recreate_cm():
2025-01-10T13:49:05.5484584Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5484666Z E           AssertionError: 
2025-01-10T13:49:05.5484773Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5484842Z E           
2025-01-10T13:49:05.5484940Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:05.5485054Z E           Max absolute difference among violations: 24
2025-01-10T13:49:05.5485176Z E           Max relative difference among violations: 0.65
2025-01-10T13:49:05.5485334Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:05.5485432Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.5485596Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.5485686Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.5485690Z 
2025-01-10T13:49:05.5485896Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5486049Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5486284Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5486531Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5486683Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5486985Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5487188Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-10T13:49:05.5487312Z 
2025-01-10T13:49:05.5487573Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851da60>
2025-01-10T13:49:05.5487896Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be8511700>
2025-01-10T13:49:05.5487998Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5488144Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:05.5488281Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:05.5488481Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5488726Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-10T13:49:05.5488730Z 
2025-01-10T13:49:05.5488915Z     def test_generate_plot_ply(
2025-01-10T13:49:05.5489089Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5489163Z     ):
2025-01-10T13:49:05.5489237Z         """
2025-01-10T13:49:05.5489365Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5489438Z     
2025-01-10T13:49:05.5489568Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5489633Z     
2025-01-10T13:49:05.5489717Z         Parameters:
2025-01-10T13:49:05.5489789Z         ----------
2025-01-10T13:49:05.5489955Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:05.5490091Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:05.5490193Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5490263Z         """
2025-01-10T13:49:05.5490360Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5490465Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5490648Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5490720Z     
2025-01-10T13:49:05.5490870Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5490966Z             expected_values = expected.get(
2025-01-10T13:49:05.5491057Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5491142Z             ).values.flatten()
2025-01-10T13:49:05.5491275Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:05.5491347Z     
2025-01-10T13:49:05.5491474Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5491573Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5491655Z                     expected_values,
2025-01-10T13:49:05.5491740Z                     actual_values,
2025-01-10T13:49:05.5491816Z                     rtol=0.3,
2025-01-10T13:49:05.5491893Z                     atol=3,
2025-01-10T13:49:05.5491961Z                 )
2025-01-10T13:49:05.5491965Z 
2025-01-10T13:49:05.5492117Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:05.5492227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5492239Z 
2025-01-10T13:49:05.5492637Z args = (<function assert_allclose.<locals>.compare at 0x7f3bca45f420>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5492721Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:05.5492975Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5492979Z 
2025-01-10T13:49:05.5493057Z     @wraps(func)
2025-01-10T13:49:05.5493137Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5493223Z         with self._recreate_cm():
2025-01-10T13:49:05.5493306Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5493392Z E           AssertionError: 
2025-01-10T13:49:05.5493494Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5493570Z E           
2025-01-10T13:49:05.5493805Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5494067Z E           Max absolute difference among violations: 26
2025-01-10T13:49:05.5494199Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.5494352Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.5494447Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.5494602Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.5494690Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.5494694Z 
2025-01-10T13:49:05.5494894Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5495050Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5495420Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5495766Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5495921Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5496271Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5496475Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-10T13:49:05.5496479Z 
2025-01-10T13:49:05.5496742Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f3bf851dc10>
2025-01-10T13:49:05.5497061Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f3be9608c50>
2025-01-10T13:49:05.5497156Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5497307Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:05.5497444Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:05.5497644Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f3bcba69160>)
2025-01-10T13:49:05.5497887Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-10T13:49:05.5497891Z 
2025-01-10T13:49:05.5497977Z     def test_generate_plot_ply(
2025-01-10T13:49:05.5498147Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5498216Z     ):
2025-01-10T13:49:05.5498290Z         """
2025-01-10T13:49:05.5498414Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:05.5498488Z     
2025-01-10T13:49:05.5498613Z         Compares generated plot data with regression data.
2025-01-10T13:49:05.5498687Z     
2025-01-10T13:49:05.5498762Z         Parameters:
2025-01-10T13:49:05.5498843Z         ----------
2025-01-10T13:49:05.5499004Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:05.5499142Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:05.5499243Z         request: Pytest's request fixture.
2025-01-10T13:49:05.5499311Z         """
2025-01-10T13:49:05.5499411Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5499516Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5499692Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5499759Z     
2025-01-10T13:49:05.5499908Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:05.5500001Z             expected_values = expected.get(
2025-01-10T13:49:05.5500093Z                 "plot_data_hdf/" + item
2025-01-10T13:49:05.5500176Z             ).values.flatten()
2025-01-10T13:49:05.5500321Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:05.5500390Z     
2025-01-10T13:49:05.5500523Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:05.5500726Z                 np.testing.assert_allclose(
2025-01-10T13:49:05.5500808Z                     expected_values,
2025-01-10T13:49:05.5500893Z                     actual_values,
2025-01-10T13:49:05.5500968Z                     rtol=0.3,
2025-01-10T13:49:05.5501053Z                     atol=3,
2025-01-10T13:49:05.5501123Z                 )
2025-01-10T13:49:05.5501199Z             else:
2025-01-10T13:49:05.5501331Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:49:05.5501439Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5501544Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5501634Z             if data.stackgroup:
2025-01-10T13:49:05.5501708Z                 assert (
2025-01-10T13:49:05.5501796Z                     data.stackgroup
2025-01-10T13:49:05.5501940Z                     == getattr(
2025-01-10T13:49:05.5502059Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5502168Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5502242Z                     ).decode()
2025-01-10T13:49:05.5502316Z                 )
2025-01-10T13:49:05.5502393Z             if data.name:
2025-01-10T13:49:05.5502472Z                 assert (
2025-01-10T13:49:05.5502548Z                     data.name
2025-01-10T13:49:05.5502626Z                     == getattr(
2025-01-10T13:49:05.5502728Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5502825Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5502897Z                     ).decode()
2025-01-10T13:49:05.5502970Z                 )
2025-01-10T13:49:05.5503063Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5503139Z                 data.x,
2025-01-10T13:49:05.5503249Z                 expected.get(group + "x").values.flatten(),
2025-01-10T13:49:05.5503327Z                 rtol=0.3,
2025-01-10T13:49:05.5503398Z                 atol=3,
2025-01-10T13:49:05.5503474Z             )
2025-01-10T13:49:05.5503567Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5503835Z                 data.y,
2025-01-10T13:49:05.5503947Z                 expected.get(group + "y").values.flatten(),
2025-01-10T13:49:05.5504020Z                 rtol=0.3,
2025-01-10T13:49:05.5504096Z                 atol=3,
2025-01-10T13:49:05.5504161Z             )
2025-01-10T13:49:05.5504166Z 
2025-01-10T13:49:05.5504312Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-10T13:49:05.5504423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5504427Z 
2025-01-10T13:49:05.5504823Z args = (<function assert_allclose.<locals>.compare at 0x7f3bca45ea20>, array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]), array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5504902Z         0,  0,  0]))
2025-01-10T13:49:05.5505155Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:05.5505162Z 
2025-01-10T13:49:05.5505239Z     @wraps(func)
2025-01-10T13:49:05.5505321Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5505408Z         with self._recreate_cm():
2025-01-10T13:49:05.5505491Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5505577Z E           AssertionError: 
2025-01-10T13:49:05.5505677Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.5505752Z E           
2025-01-10T13:49:05.5505844Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.5505960Z E           Max absolute difference among violations: 4
2025-01-10T13:49:05.5506088Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:49:05.5506235Z E            ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:49:05.5506396Z E            DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5506589Z E                   0,  0,  0])
2025-01-10T13:49:05.5506594Z 
2025-01-10T13:49:05.5506800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5506953Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:05.5507188Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:05.5507438Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:05.5507592Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:05.5507893Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:05.5508122Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-10T13:49:05.5508232Z 
2025-01-10T13:49:05.5508512Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8528fe0>
2025-01-10T13:49:05.5508824Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5509151Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bd1bcafc0>
2025-01-10T13:49:05.5509431Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-10T13:49:05.5509435Z 
2025-01-10T13:49:05.5509534Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5509604Z         self,
2025-01-10T13:49:05.5509704Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5509789Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5509864Z         request,
2025-01-10T13:49:05.5509937Z     ):
2025-01-10T13:49:05.5510042Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5510230Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5510315Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5510502Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5510586Z             plot_object = getattr(
2025-01-10T13:49:05.5510714Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5510783Z             )
2025-01-10T13:49:05.5510885Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5511043Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5511151Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5511247Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5511379Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5511456Z                 )
2025-01-10T13:49:05.5511460Z 
2025-01-10T13:49:05.5511610Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5511726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5511732Z 
2025-01-10T13:49:05.5512202Z args = (<function assert_allclose.<locals>.compare at 0x7f3bd9c48fe0>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:05.5512308Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5512564Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5512569Z 
2025-01-10T13:49:05.5512645Z     @wraps(func)
2025-01-10T13:49:05.5512726Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5512820Z         with self._recreate_cm():
2025-01-10T13:49:05.5512911Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5512993Z E           AssertionError: 
2025-01-10T13:49:05.5513109Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5513179Z E           
2025-01-10T13:49:05.5513283Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5513505Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.5513751Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5513921Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5514014Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5514180Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5514270Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5514274Z 
2025-01-10T13:49:05.5514475Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5514698Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-10T13:49:05.5514702Z 
2025-01-10T13:49:05.5515079Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529760>
2025-01-10T13:49:05.5515393Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5515729Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bce927ec0>
2025-01-10T13:49:05.5516005Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-10T13:49:05.5516010Z 
2025-01-10T13:49:05.5516104Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5516178Z         self,
2025-01-10T13:49:05.5516270Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5516362Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5516432Z         request,
2025-01-10T13:49:05.5516502Z     ):
2025-01-10T13:49:05.5516603Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5516790Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5516873Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5517051Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5517138Z             plot_object = getattr(
2025-01-10T13:49:05.5517267Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5517334Z             )
2025-01-10T13:49:05.5517436Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5517592Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5517703Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5517804Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5517928Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5518005Z                 )
2025-01-10T13:49:05.5518009Z 
2025-01-10T13:49:05.5518150Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5518267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5518272Z 
2025-01-10T13:49:05.5518742Z args = (<function assert_allclose.<locals>.compare at 0x7f3bbe83aa20>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:05.5518849Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5519102Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5519112Z 
2025-01-10T13:49:05.5519186Z     @wraps(func)
2025-01-10T13:49:05.5519273Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5519356Z         with self._recreate_cm():
2025-01-10T13:49:05.5519449Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5519529Z E           AssertionError: 
2025-01-10T13:49:05.5519639Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5519711Z E           
2025-01-10T13:49:05.5519815Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5519948Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.5520197Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5520364Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5520453Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5520625Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5520707Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5520711Z 
2025-01-10T13:49:05.5520912Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5521128Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-10T13:49:05.5521132Z 
2025-01-10T13:49:05.5521473Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529bb0>
2025-01-10T13:49:05.5521781Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5522117Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc8348440>
2025-01-10T13:49:05.5522394Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-10T13:49:05.5522404Z 
2025-01-10T13:49:05.5522494Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5522573Z         self,
2025-01-10T13:49:05.5522668Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5522762Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5522832Z         request,
2025-01-10T13:49:05.5522904Z     ):
2025-01-10T13:49:05.5523006Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5523189Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5523274Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5523453Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5523539Z             plot_object = getattr(
2025-01-10T13:49:05.5523782Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5523851Z             )
2025-01-10T13:49:05.5523951Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5524117Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5524220Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5524318Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5524443Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5524515Z                 )
2025-01-10T13:49:05.5524519Z 
2025-01-10T13:49:05.5524661Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5524778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5524781Z 
2025-01-10T13:49:05.5525240Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8315260>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:05.5525346Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5525602Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5525606Z 
2025-01-10T13:49:05.5525677Z     @wraps(func)
2025-01-10T13:49:05.5525762Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5525844Z         with self._recreate_cm():
2025-01-10T13:49:05.5525936Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5526016Z E           AssertionError: 
2025-01-10T13:49:05.5526125Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5526193Z E           
2025-01-10T13:49:05.5526298Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5526433Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.5526698Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5526867Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5526950Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5527117Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5527201Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5527205Z 
2025-01-10T13:49:05.5527404Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5527622Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-10T13:49:05.5527626Z 
2025-01-10T13:49:05.5528002Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529ca0>
2025-01-10T13:49:05.5528314Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5528647Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3b85561fa0>
2025-01-10T13:49:05.5528927Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-10T13:49:05.5528931Z 
2025-01-10T13:49:05.5529019Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5529091Z         self,
2025-01-10T13:49:05.5529182Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5529272Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5529341Z         request,
2025-01-10T13:49:05.5529414Z     ):
2025-01-10T13:49:05.5529516Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5529697Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5529781Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5529957Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5530047Z             plot_object = getattr(
2025-01-10T13:49:05.5530167Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5530239Z             )
2025-01-10T13:49:05.5530336Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5530499Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5530599Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5530694Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5530818Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5530891Z                 )
2025-01-10T13:49:05.5530895Z 
2025-01-10T13:49:05.5531040Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5531156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5531160Z 
2025-01-10T13:49:05.5531626Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795ea20>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:05.5531726Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5531984Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5531989Z 
2025-01-10T13:49:05.5532061Z     @wraps(func)
2025-01-10T13:49:05.5532144Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5532225Z         with self._recreate_cm():
2025-01-10T13:49:05.5532315Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5532396Z E           AssertionError: 
2025-01-10T13:49:05.5532506Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5532573Z E           
2025-01-10T13:49:05.5532672Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5532813Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.5532938Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5533198Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5533282Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5533447Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5533528Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5533531Z 
2025-01-10T13:49:05.5533868Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5534090Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-10T13:49:05.5534094Z 
2025-01-10T13:49:05.5534360Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529d60>
2025-01-10T13:49:05.5534777Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5535108Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc834acc0>
2025-01-10T13:49:05.5535391Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-10T13:49:05.5535395Z 
2025-01-10T13:49:05.5535487Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5535560Z         self,
2025-01-10T13:49:05.5535651Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5535740Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5535810Z         request,
2025-01-10T13:49:05.5535883Z     ):
2025-01-10T13:49:05.5535985Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5536166Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5536253Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5536427Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5536516Z             plot_object = getattr(
2025-01-10T13:49:05.5536638Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5536712Z             )
2025-01-10T13:49:05.5536806Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5536966Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5537065Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5537161Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5537283Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5537357Z                 )
2025-01-10T13:49:05.5537361Z 
2025-01-10T13:49:05.5537509Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5537617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5537621Z 
2025-01-10T13:49:05.5538088Z args = (<function assert_allclose.<locals>.compare at 0x7f3bbe83bec0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:05.5538189Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5538445Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5538449Z 
2025-01-10T13:49:05.5538519Z     @wraps(func)
2025-01-10T13:49:05.5538604Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5538686Z         with self._recreate_cm():
2025-01-10T13:49:05.5538777Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5538861Z E           AssertionError: 
2025-01-10T13:49:05.5538965Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5539038Z E           
2025-01-10T13:49:05.5539134Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5539280Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.5539412Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5539694Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5539778Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5539948Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5540029Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5540033Z 
2025-01-10T13:49:05.5540231Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5540455Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-10T13:49:05.5540459Z 
2025-01-10T13:49:05.5540722Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529e50>
2025-01-10T13:49:05.5541102Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5541428Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc8348ef0>
2025-01-10T13:49:05.5541710Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-10T13:49:05.5541714Z 
2025-01-10T13:49:05.5541801Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5541875Z         self,
2025-01-10T13:49:05.5541965Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5542056Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5542130Z         request,
2025-01-10T13:49:05.5542195Z     ):
2025-01-10T13:49:05.5542301Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5542478Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5542565Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5542738Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5542825Z             plot_object = getattr(
2025-01-10T13:49:05.5542942Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5543016Z             )
2025-01-10T13:49:05.5543110Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5543272Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5543373Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5543472Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5543761Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5543834Z                 )
2025-01-10T13:49:05.5543838Z 
2025-01-10T13:49:05.5543985Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5544096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5544101Z 
2025-01-10T13:49:05.5544566Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e5940>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:05.5544666Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5544923Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5544927Z 
2025-01-10T13:49:05.5544997Z     @wraps(func)
2025-01-10T13:49:05.5545081Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5545167Z         with self._recreate_cm():
2025-01-10T13:49:05.5545251Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5545336Z E           AssertionError: 
2025-01-10T13:49:05.5545439Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5545512Z E           
2025-01-10T13:49:05.5545608Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5545751Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.5545881Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5546048Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5546263Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5546433Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5546514Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5546524Z 
2025-01-10T13:49:05.5546720Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5546942Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-10T13:49:05.5546946Z 
2025-01-10T13:49:05.5547207Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529f10>
2025-01-10T13:49:05.5547636Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5547964Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc835d3d0>
2025-01-10T13:49:05.5548250Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-10T13:49:05.5548254Z 
2025-01-10T13:49:05.5548351Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5548419Z         self,
2025-01-10T13:49:05.5548513Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5548600Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5548675Z         request,
2025-01-10T13:49:05.5548742Z     ):
2025-01-10T13:49:05.5548848Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5549027Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5549114Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5549284Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5549374Z             plot_object = getattr(
2025-01-10T13:49:05.5549494Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5549571Z             )
2025-01-10T13:49:05.5549665Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5549827Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5549933Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5550024Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5550152Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5550221Z                 )
2025-01-10T13:49:05.5550225Z 
2025-01-10T13:49:05.5550371Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5550480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5550484Z 
2025-01-10T13:49:05.5550951Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e59e0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:05.5551052Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5551307Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5551311Z 
2025-01-10T13:49:05.5551388Z     @wraps(func)
2025-01-10T13:49:05.5551466Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5551552Z         with self._recreate_cm():
2025-01-10T13:49:05.5551637Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5551721Z E           AssertionError: 
2025-01-10T13:49:05.5551825Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5551898Z E           
2025-01-10T13:49:05.5551994Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5552134Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.5552268Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5552435Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5552613Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5552776Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5552861Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5552865Z 
2025-01-10T13:49:05.5553059Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5553282Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-10T13:49:05.5553286Z 
2025-01-10T13:49:05.5553551Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a030>
2025-01-10T13:49:05.5553968Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5554402Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc834cef0>
2025-01-10T13:49:05.5554689Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-10T13:49:05.5554693Z 
2025-01-10T13:49:05.5554788Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5554859Z         self,
2025-01-10T13:49:05.5554955Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5555039Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5555116Z         request,
2025-01-10T13:49:05.5555182Z     ):
2025-01-10T13:49:05.5555288Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5555463Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5555552Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5555725Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5555817Z             plot_object = getattr(
2025-01-10T13:49:05.5555935Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5556008Z             )
2025-01-10T13:49:05.5556111Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5556269Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5556374Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5556464Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5556593Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5556662Z                 )
2025-01-10T13:49:05.5556665Z 
2025-01-10T13:49:05.5556811Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5556918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5556922Z 
2025-01-10T13:49:05.5557393Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e5bc0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:05.5557497Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5557750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5557755Z 
2025-01-10T13:49:05.5557832Z     @wraps(func)
2025-01-10T13:49:05.5557911Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5557998Z         with self._recreate_cm():
2025-01-10T13:49:05.5558081Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5558170Z E           AssertionError: 
2025-01-10T13:49:05.5558274Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5558348Z E           
2025-01-10T13:49:05.5558443Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5558581Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.5558719Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5558880Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5559086Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5559248Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.5559337Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5559341Z 
2025-01-10T13:49:05.5559535Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5559755Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-10T13:49:05.5559759Z 
2025-01-10T13:49:05.5560019Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a0f0>
2025-01-10T13:49:05.5560332Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5560755Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bbd3e6990>
2025-01-10T13:49:05.5561032Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-10T13:49:05.5561040Z 
2025-01-10T13:49:05.5561135Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5561203Z         self,
2025-01-10T13:49:05.5561298Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5561386Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5561462Z         request,
2025-01-10T13:49:05.5561529Z     ):
2025-01-10T13:49:05.5561636Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5561812Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5561904Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5562079Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5562161Z             plot_object = getattr(
2025-01-10T13:49:05.5562290Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5562358Z             )
2025-01-10T13:49:05.5562460Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5562619Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5562726Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5562818Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5562944Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5563012Z                 )
2025-01-10T13:49:05.5563016Z 
2025-01-10T13:49:05.5563160Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5563269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5563278Z 
2025-01-10T13:49:05.5563856Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795ea20>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:05.5563961Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5564213Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5564217Z 
2025-01-10T13:49:05.5564298Z     @wraps(func)
2025-01-10T13:49:05.5564377Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5564464Z         with self._recreate_cm():
2025-01-10T13:49:05.5564547Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5564632Z E           AssertionError: 
2025-01-10T13:49:05.5564737Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5564812Z E           
2025-01-10T13:49:05.5564912Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5565043Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.5565172Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5565338Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5565429Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5565714Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5565802Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5565806Z 
2025-01-10T13:49:05.5566004Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5566225Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-10T13:49:05.5566230Z 
2025-01-10T13:49:05.5566497Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a1b0>
2025-01-10T13:49:05.5566801Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5567225Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bdac574a0>
2025-01-10T13:49:05.5567503Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-10T13:49:05.5567510Z 
2025-01-10T13:49:05.5567606Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5567675Z         self,
2025-01-10T13:49:05.5567770Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5567853Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5567930Z         request,
2025-01-10T13:49:05.5567996Z     ):
2025-01-10T13:49:05.5568103Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5568285Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5568366Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5568541Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5568622Z             plot_object = getattr(
2025-01-10T13:49:05.5568751Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5568819Z             )
2025-01-10T13:49:05.5568919Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5569078Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5569189Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5569284Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5569412Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5569481Z                 )
2025-01-10T13:49:05.5569491Z 
2025-01-10T13:49:05.5569630Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5569744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5569749Z 
2025-01-10T13:49:05.5570208Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e6520>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:05.5570312Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5570562Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5570569Z 
2025-01-10T13:49:05.5570646Z     @wraps(func)
2025-01-10T13:49:05.5570725Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5570814Z         with self._recreate_cm():
2025-01-10T13:49:05.5570902Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5570982Z E           AssertionError: 
2025-01-10T13:49:05.5571091Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5571160Z E           
2025-01-10T13:49:05.5571261Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5571402Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.5571535Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5571701Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5571794Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5572061Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5572149Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5572153Z 
2025-01-10T13:49:05.5572354Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5572578Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-10T13:49:05.5572582Z 
2025-01-10T13:49:05.5572850Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a270>
2025-01-10T13:49:05.5573155Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5573480Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc83bae10>
2025-01-10T13:49:05.5573990Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-10T13:49:05.5574000Z 
2025-01-10T13:49:05.5574098Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5574168Z         self,
2025-01-10T13:49:05.5574295Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5574386Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5574457Z         request,
2025-01-10T13:49:05.5574529Z     ):
2025-01-10T13:49:05.5574629Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5574813Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5574896Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5575068Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5575150Z             plot_object = getattr(
2025-01-10T13:49:05.5575273Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5575344Z             )
2025-01-10T13:49:05.5575443Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5575599Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5575714Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5575810Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5575933Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5576010Z                 )
2025-01-10T13:49:05.5576013Z 
2025-01-10T13:49:05.5576154Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5576267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5576271Z 
2025-01-10T13:49:05.5576729Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e4b80>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:05.5576834Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5577084Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5577096Z 
2025-01-10T13:49:05.5577169Z     @wraps(func)
2025-01-10T13:49:05.5577254Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5577336Z         with self._recreate_cm():
2025-01-10T13:49:05.5577423Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5577503Z E           AssertionError: 
2025-01-10T13:49:05.5577611Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5577680Z E           
2025-01-10T13:49:05.5577782Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5577916Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.5578048Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5578215Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5578304Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5578465Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5578667Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5578670Z 
2025-01-10T13:49:05.5578874Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5579096Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-10T13:49:05.5579100Z 
2025-01-10T13:49:05.5579366Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a330>
2025-01-10T13:49:05.5579669Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5579997Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bdacafc80>
2025-01-10T13:49:05.5580346Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-10T13:49:05.5580355Z 
2025-01-10T13:49:05.5580449Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5580524Z         self,
2025-01-10T13:49:05.5580617Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5580707Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5580777Z         request,
2025-01-10T13:49:05.5580851Z     ):
2025-01-10T13:49:05.5580952Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5581133Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5581215Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5581391Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5581474Z             plot_object = getattr(
2025-01-10T13:49:05.5581599Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5581668Z             )
2025-01-10T13:49:05.5581770Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5581931Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5582037Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5582133Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5582255Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5582329Z                 )
2025-01-10T13:49:05.5582333Z 
2025-01-10T13:49:05.5582473Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5582588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5582592Z 
2025-01-10T13:49:05.5583049Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8316700>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:05.5583154Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5583410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5583417Z 
2025-01-10T13:49:05.5583488Z     @wraps(func)
2025-01-10T13:49:05.5583572Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5583773Z         with self._recreate_cm():
2025-01-10T13:49:05.5583862Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5583941Z E           AssertionError: 
2025-01-10T13:49:05.5584050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5584117Z E           
2025-01-10T13:49:05.5584219Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.5584350Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.5584480Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.5584642Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5584734Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5584903Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5585116Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5585120Z 
2025-01-10T13:49:05.5585324Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5585544Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-10T13:49:05.5585548Z 
2025-01-10T13:49:05.5585815Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a3f0>
2025-01-10T13:49:05.5586116Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5586444Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc830fe00>
2025-01-10T13:49:05.5586825Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-10T13:49:05.5586830Z 
2025-01-10T13:49:05.5586921Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5586999Z         self,
2025-01-10T13:49:05.5587091Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5587181Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5587252Z         request,
2025-01-10T13:49:05.5587322Z     ):
2025-01-10T13:49:05.5587422Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5587603Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5587685Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5587862Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5587942Z             plot_object = getattr(
2025-01-10T13:49:05.5588067Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5588139Z             )
2025-01-10T13:49:05.5588238Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5588399Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5588504Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5588599Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5588722Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5588796Z                 )
2025-01-10T13:49:05.5588800Z 
2025-01-10T13:49:05.5588938Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5589052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5589055Z 
2025-01-10T13:49:05.5589522Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8317560>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:05.5589621Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5589877Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5589884Z 
2025-01-10T13:49:05.5589956Z     @wraps(func)
2025-01-10T13:49:05.5590039Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5590121Z         with self._recreate_cm():
2025-01-10T13:49:05.5590210Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5590291Z E           AssertionError: 
2025-01-10T13:49:05.5590400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5590467Z E           
2025-01-10T13:49:05.5590567Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5590708Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.5590838Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5591008Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5591095Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5591265Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5591431Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5591435Z 
2025-01-10T13:49:05.5591635Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5591855Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-10T13:49:05.5591859Z 
2025-01-10T13:49:05.5592127Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a510>
2025-01-10T13:49:05.5592435Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5592754Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc830f530>
2025-01-10T13:49:05.5593112Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-10T13:49:05.5593117Z 
2025-01-10T13:49:05.5593210Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5593286Z         self,
2025-01-10T13:49:05.5593380Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5593469Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5593539Z         request,
2025-01-10T13:49:05.5593724Z     ):
2025-01-10T13:49:05.5593829Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5594012Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5594099Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5594269Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5594355Z             plot_object = getattr(
2025-01-10T13:49:05.5594473Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5594545Z             )
2025-01-10T13:49:05.5594638Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5594805Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5594908Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5595010Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5595136Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5595209Z                 )
2025-01-10T13:49:05.5595212Z 
2025-01-10T13:49:05.5595352Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5595467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5595472Z 
2025-01-10T13:49:05.5595938Z args = (<function assert_allclose.<locals>.compare at 0x7f3bbe83bec0>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:05.5596039Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5596296Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5596300Z 
2025-01-10T13:49:05.5596370Z     @wraps(func)
2025-01-10T13:49:05.5596456Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5596538Z         with self._recreate_cm():
2025-01-10T13:49:05.5596630Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5596710Z E           AssertionError: 
2025-01-10T13:49:05.5596819Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5596891Z E           
2025-01-10T13:49:05.5596986Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5597127Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.5597257Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5597426Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5597509Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5597681Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5597761Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5597906Z 
2025-01-10T13:49:05.5598109Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5598328Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-10T13:49:05.5598338Z 
2025-01-10T13:49:05.5598602Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a660>
2025-01-10T13:49:05.5598909Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5599226Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3b85562480>
2025-01-10T13:49:05.5599505Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-10T13:49:05.5599508Z 
2025-01-10T13:49:05.5599698Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5599777Z         self,
2025-01-10T13:49:05.5599872Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5599963Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5600033Z         request,
2025-01-10T13:49:05.5600103Z     ):
2025-01-10T13:49:05.5600209Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5600386Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5600474Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5600645Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5600731Z             plot_object = getattr(
2025-01-10T13:49:05.5600849Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5600922Z             )
2025-01-10T13:49:05.5601018Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5601180Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5601282Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5601380Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5601502Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5601576Z                 )
2025-01-10T13:49:05.5601579Z 
2025-01-10T13:49:05.5601729Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5602606Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5602611Z 
2025-01-10T13:49:05.5603268Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-10T13:49:05.5603272Z 
2025-01-10T13:49:05.5603588Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5603592Z 
2025-01-10T13:49:05.5604354Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-10T13:49:05.5604362Z 
2025-01-10T13:49:05.5604667Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5604671Z 
2025-01-10T13:49:05.5605309Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-10T13:49:05.5605313Z 
2025-01-10T13:49:05.5605614Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5605623Z 
2025-01-10T13:49:05.5606264Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-10T13:49:05.5606269Z 
2025-01-10T13:49:05.5606698Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5606702Z 
2025-01-10T13:49:05.5607396Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-10T13:49:05.5607400Z 
2025-01-10T13:49:05.5607707Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5607711Z 
2025-01-10T13:49:05.5608370Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-10T13:49:05.5608374Z 
2025-01-10T13:49:05.5608776Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5608784Z 
2025-01-10T13:49:05.5609437Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-10T13:49:05.5609441Z 
2025-01-10T13:49:05.5609749Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5609753Z 
2025-01-10T13:49:05.5610391Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-10T13:49:05.5610395Z 
2025-01-10T13:49:05.5610699Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5610703Z 
2025-01-10T13:49:05.5611347Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-10T13:49:05.5611359Z 
2025-01-10T13:49:05.5611664Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5611667Z 
2025-01-10T13:49:05.5612354Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-10T13:49:05.5612358Z 
2025-01-10T13:49:05.5612658Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5612662Z 
2025-01-10T13:49:05.5613316Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-10T13:49:05.5613319Z 
2025-01-10T13:49:05.5613721Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5613728Z 
2025-01-10T13:49:05.5614365Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-10T13:49:05.5614369Z 
2025-01-10T13:49:05.5614675Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5614679Z 
2025-01-10T13:49:05.5615326Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-10T13:49:05.5615330Z 
2025-01-10T13:49:05.5615635Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5615639Z 
2025-01-10T13:49:05.5616286Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-10T13:49:05.5616405Z 
2025-01-10T13:49:05.5616713Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5616717Z 
2025-01-10T13:49:05.5617366Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-10T13:49:05.5617370Z 
2025-01-10T13:49:05.5617678Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5617682Z 
2025-01-10T13:49:05.5618424Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-10T13:49:05.5618432Z 
2025-01-10T13:49:05.5618743Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5618747Z 
2025-01-10T13:49:05.5619440Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-10T13:49:05.5619444Z 
2025-01-10T13:49:05.5619744Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5619748Z 
2025-01-10T13:49:05.5620394Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-10T13:49:05.5620398Z 
2025-01-10T13:49:05.5620699Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5620712Z 
2025-01-10T13:49:05.5621402Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-10T13:49:05.5621406Z 
2025-01-10T13:49:05.5621711Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5621715Z 
2025-01-10T13:49:05.5622397Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-10T13:49:05.5622401Z 
2025-01-10T13:49:05.5622716Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5622719Z 
2025-01-10T13:49:05.5623404Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-10T13:49:05.5623411Z 
2025-01-10T13:49:05.5623836Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5623841Z 
2025-01-10T13:49:05.5624531Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-10T13:49:05.5624535Z 
2025-01-10T13:49:05.5624840Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5624844Z 
2025-01-10T13:49:05.5625527Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-10T13:49:05.5625641Z 
2025-01-10T13:49:05.5625952Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5625956Z 
2025-01-10T13:49:05.5626591Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-10T13:49:05.5626603Z 
2025-01-10T13:49:05.5626905Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5626909Z 
2025-01-10T13:49:05.5627692Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-10T13:49:05.5627697Z 
2025-01-10T13:49:05.5628003Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5628011Z 
2025-01-10T13:49:05.5628657Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-10T13:49:05.5628661Z 
2025-01-10T13:49:05.5628966Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5628970Z 
2025-01-10T13:49:05.5629607Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-10T13:49:05.5629611Z 
2025-01-10T13:49:05.5629923Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5629927Z 
2025-01-10T13:49:05.5630609Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-10T13:49:05.5630616Z 
2025-01-10T13:49:05.5630918Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5630921Z 
2025-01-10T13:49:05.5631557Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-10T13:49:05.5631561Z 
2025-01-10T13:49:05.5631863Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5631867Z 
2025-01-10T13:49:05.5632507Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-10T13:49:05.5632514Z 
2025-01-10T13:49:05.5632820Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5632824Z 
2025-01-10T13:49:05.5633504Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-10T13:49:05.5633508Z 
2025-01-10T13:49:05.5633923Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5633928Z 
2025-01-10T13:49:05.5634581Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-10T13:49:05.5634589Z 
2025-01-10T13:49:05.5634889Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5635050Z 
2025-01-10T13:49:05.5635691Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-10T13:49:05.5635696Z 
2025-01-10T13:49:05.5635999Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5636009Z 
2025-01-10T13:49:05.5636688Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-10T13:49:05.5636692Z 
2025-01-10T13:49:05.5637001Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5637120Z 
2025-01-10T13:49:05.5637807Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-10T13:49:05.5637815Z 
2025-01-10T13:49:05.5638121Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5638125Z 
2025-01-10T13:49:05.5638773Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-10T13:49:05.5638776Z 
2025-01-10T13:49:05.5639079Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5639083Z 
2025-01-10T13:49:05.5639724Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-10T13:49:05.5639728Z 
2025-01-10T13:49:05.5640038Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5640043Z 
2025-01-10T13:49:05.5640722Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-10T13:49:05.5640726Z 
2025-01-10T13:49:05.5641037Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5641041Z 
2025-01-10T13:49:05.5641724Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-10T13:49:05.5641733Z 
2025-01-10T13:49:05.5642037Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5642043Z 
2025-01-10T13:49:05.5642685Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-10T13:49:05.5642689Z 
2025-01-10T13:49:05.5642991Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5642995Z 
2025-01-10T13:49:05.5643781Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-10T13:49:05.5643786Z 
2025-01-10T13:49:05.5644097Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:05.5644104Z 
2025-01-10T13:49:05.5644745Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-10T13:49:05.5644864Z 
2025-01-10T13:49:05.5644987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5644991Z 
2025-01-10T13:49:05.5645453Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e53a0>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:05.5645559Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5645817Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5645821Z 
2025-01-10T13:49:05.5645892Z     @wraps(func)
2025-01-10T13:49:05.5645976Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5646160Z         with self._recreate_cm():
2025-01-10T13:49:05.5646255Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5646339Z E           AssertionError: 
2025-01-10T13:49:05.5646451Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5646519Z E           
2025-01-10T13:49:05.5646622Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5646759Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.5646893Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5647066Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5647151Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5647322Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5647407Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5647411Z 
2025-01-10T13:49:05.5647617Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5647841Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-10T13:49:05.5647848Z 
2025-01-10T13:49:05.5648117Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852a750>
2025-01-10T13:49:05.5648428Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>
2025-01-10T13:49:05.5648771Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc834ed50>
2025-01-10T13:49:05.5649053Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-10T13:49:05.5649056Z 
2025-01-10T13:49:05.5649147Z     def test_calculate_plotting_data(
2025-01-10T13:49:05.5649226Z         self,
2025-01-10T13:49:05.5649319Z         plotter_calculate_plotting_data,
2025-01-10T13:49:05.5649414Z         calculate_plotting_data_hdf,
2025-01-10T13:49:05.5649484Z         request,
2025-01-10T13:49:05.5649558Z     ):
2025-01-10T13:49:05.5649664Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5649853Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:05.5649938Z         group = "plot_data_hdf/"
2025-01-10T13:49:05.5650118Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:05.5650210Z             plot_object = getattr(
2025-01-10T13:49:05.5650333Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:05.5650407Z             )
2025-01-10T13:49:05.5650504Z             if attribute_type == "attributes_np":
2025-01-10T13:49:05.5650668Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:05.5650771Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:05.5650876Z >               np.testing.assert_allclose(
2025-01-10T13:49:05.5651011Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:05.5651085Z                 )
2025-01-10T13:49:05.5651173Z 
2025-01-10T13:49:05.5651317Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:05.5651434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5651439Z 
2025-01-10T13:49:05.5651906Z args = (<function assert_allclose.<locals>.compare at 0x7f3bc8315a80>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:05.5652003Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5652261Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5652266Z 
2025-01-10T13:49:05.5652338Z     @wraps(func)
2025-01-10T13:49:05.5652425Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5652580Z         with self._recreate_cm():
2025-01-10T13:49:05.5652674Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5652754Z E           AssertionError: 
2025-01-10T13:49:05.5652870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5652939Z E           
2025-01-10T13:49:05.5653044Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.5653187Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.5653318Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.5653493Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5653580Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5653868Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.5653953Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5653956Z 
2025-01-10T13:49:05.5654169Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5654371Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-10T13:49:05.5654378Z 
2025-01-10T13:49:05.5654653Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf85296a0>
2025-01-10T13:49:05.5654980Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bdac55040>
2025-01-10T13:49:05.5655073Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5655164Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5655267Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5655406Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5655621Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5655873Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-10T13:49:05.5655878Z 
2025-01-10T13:49:05.5655967Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5656148Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5656225Z     ):
2025-01-10T13:49:05.5656320Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5656433Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5656606Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5656677Z     
2025-01-10T13:49:05.5656786Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5656889Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5657032Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5657146Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5657217Z             )
2025-01-10T13:49:05.5657291Z     
2025-01-10T13:49:05.5657391Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5657509Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5657592Z             if data.stackgroup:
2025-01-10T13:49:05.5657672Z                 assert (
2025-01-10T13:49:05.5657884Z                     data.stackgroup
2025-01-10T13:49:05.5657959Z                     == getattr(
2025-01-10T13:49:05.5658070Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5658165Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5658330Z                     ).decode()
2025-01-10T13:49:05.5658454Z                 )
2025-01-10T13:49:05.5658777Z             if data.name:
2025-01-10T13:49:05.5665612Z                 assert (
2025-01-10T13:49:05.5665729Z                     data.name
2025-01-10T13:49:05.5665809Z                     == getattr(
2025-01-10T13:49:05.5665927Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5666019Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5666094Z                     ).decode()
2025-01-10T13:49:05.5666333Z                 )
2025-01-10T13:49:05.5666434Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5666584Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5666651Z             )
2025-01-10T13:49:05.5666746Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5666873Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5666942Z             )
2025-01-10T13:49:05.5666946Z 
2025-01-10T13:49:05.5667111Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5667231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5667235Z 
2025-01-10T13:49:05.5667725Z args = (<function assert_allclose.<locals>.compare at 0x7f3bced1a480>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:05.5667829Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5668095Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5668104Z 
2025-01-10T13:49:05.5668178Z     @wraps(func)
2025-01-10T13:49:05.5668265Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5668348Z         with self._recreate_cm():
2025-01-10T13:49:05.5668442Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5668529Z E           AssertionError: 
2025-01-10T13:49:05.5668637Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5668710Z E           
2025-01-10T13:49:05.5668808Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5668955Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.5669082Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5669257Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5669347Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5669515Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5669603Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5669608Z 
2025-01-10T13:49:05.5669825Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5670042Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-10T13:49:05.5670046Z 
2025-01-10T13:49:05.5670319Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852ab40>
2025-01-10T13:49:05.5670641Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3b85562c60>
2025-01-10T13:49:05.5670735Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5670825Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5670927Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5671032Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5671237Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5671601Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-10T13:49:05.5671605Z 
2025-01-10T13:49:05.5671697Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5671865Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5671937Z     ):
2025-01-10T13:49:05.5672031Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5672139Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5672309Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5672379Z     
2025-01-10T13:49:05.5672487Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5672585Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5672800Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5672913Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5672985Z             )
2025-01-10T13:49:05.5673055Z     
2025-01-10T13:49:05.5673153Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5673264Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5673352Z             if data.stackgroup:
2025-01-10T13:49:05.5673424Z                 assert (
2025-01-10T13:49:05.5673509Z                     data.stackgroup
2025-01-10T13:49:05.5673582Z                     == getattr(
2025-01-10T13:49:05.5673829Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5673926Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5674004Z                     ).decode()
2025-01-10T13:49:05.5674071Z                 )
2025-01-10T13:49:05.5674153Z             if data.name:
2025-01-10T13:49:05.5674223Z                 assert (
2025-01-10T13:49:05.5674338Z                     data.name
2025-01-10T13:49:05.5674412Z                     == getattr(
2025-01-10T13:49:05.5674519Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5674612Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5674691Z                     ).decode()
2025-01-10T13:49:05.5674764Z                 )
2025-01-10T13:49:05.5674855Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5674988Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5675056Z             )
2025-01-10T13:49:05.5675147Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5675265Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5675337Z             )
2025-01-10T13:49:05.5675341Z 
2025-01-10T13:49:05.5675486Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5675601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5675608Z 
2025-01-10T13:49:05.5676074Z args = (<function assert_allclose.<locals>.compare at 0x7f3b855e53a0>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:05.5676180Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5676444Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5676448Z 
2025-01-10T13:49:05.5676520Z     @wraps(func)
2025-01-10T13:49:05.5676604Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5676685Z         with self._recreate_cm():
2025-01-10T13:49:05.5676773Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5676853Z E           AssertionError: 
2025-01-10T13:49:05.5676963Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5677031Z E           
2025-01-10T13:49:05.5677132Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5677274Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.5677405Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5677697Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5677781Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5677947Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5678028Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5678032Z 
2025-01-10T13:49:05.5678237Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5678438Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-10T13:49:05.5678441Z 
2025-01-10T13:49:05.5678709Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852afc0>
2025-01-10T13:49:05.5679144Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bced33890>
2025-01-10T13:49:05.5679244Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5679338Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5679439Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5679539Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5679738Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5679979Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-10T13:49:05.5679983Z 
2025-01-10T13:49:05.5680066Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5680235Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5680301Z     ):
2025-01-10T13:49:05.5680399Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5680501Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5680679Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5680749Z     
2025-01-10T13:49:05.5680857Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5680954Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5681095Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5681204Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5681274Z             )
2025-01-10T13:49:05.5681343Z     
2025-01-10T13:49:05.5681439Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5681545Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5681628Z             if data.stackgroup:
2025-01-10T13:49:05.5681706Z                 assert (
2025-01-10T13:49:05.5681787Z                     data.stackgroup
2025-01-10T13:49:05.5681863Z                     == getattr(
2025-01-10T13:49:05.5681970Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5682067Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5682145Z                     ).decode()
2025-01-10T13:49:05.5682215Z                 )
2025-01-10T13:49:05.5682295Z             if data.name:
2025-01-10T13:49:05.5682369Z                 assert (
2025-01-10T13:49:05.5682446Z                     data.name
2025-01-10T13:49:05.5682517Z                     == getattr(
2025-01-10T13:49:05.5682620Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5682707Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5682786Z                     ).decode()
2025-01-10T13:49:05.5682853Z                 )
2025-01-10T13:49:05.5682945Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5683070Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5683141Z             )
2025-01-10T13:49:05.5683228Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5683352Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5683420Z             )
2025-01-10T13:49:05.5683428Z 
2025-01-10T13:49:05.5683762Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5683887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5683892Z 
2025-01-10T13:49:05.5684350Z args = (<function assert_allclose.<locals>.compare at 0x7f3bced1ab60>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:05.5684452Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5684705Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5684710Z 
2025-01-10T13:49:05.5684787Z     @wraps(func)
2025-01-10T13:49:05.5684865Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5684953Z         with self._recreate_cm():
2025-01-10T13:49:05.5685153Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5685237Z E           AssertionError: 
2025-01-10T13:49:05.5685351Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5685420Z E           
2025-01-10T13:49:05.5685521Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5685657Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.5685784Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5685946Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5686034Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5686199Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5686284Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5686288Z 
2025-01-10T13:49:05.5686500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5686700Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-10T13:49:05.5686707Z 
2025-01-10T13:49:05.5686975Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b080>
2025-01-10T13:49:05.5687289Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bdac65fa0>
2025-01-10T13:49:05.5687385Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5687468Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5687575Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5687668Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5687871Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5688108Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-10T13:49:05.5688117Z 
2025-01-10T13:49:05.5688203Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5688371Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5688440Z     ):
2025-01-10T13:49:05.5688538Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5688642Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5688816Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5688881Z     
2025-01-10T13:49:05.5688991Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5689082Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5689225Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5689327Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5689400Z             )
2025-01-10T13:49:05.5689464Z     
2025-01-10T13:49:05.5689565Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5689674Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5689756Z             if data.stackgroup:
2025-01-10T13:49:05.5689832Z                 assert (
2025-01-10T13:49:05.5690027Z                     data.stackgroup
2025-01-10T13:49:05.5690104Z                     == getattr(
2025-01-10T13:49:05.5690206Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5690301Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5690372Z                     ).decode()
2025-01-10T13:49:05.5690445Z                 )
2025-01-10T13:49:05.5690518Z             if data.name:
2025-01-10T13:49:05.5690593Z                 assert (
2025-01-10T13:49:05.5690665Z                     data.name
2025-01-10T13:49:05.5690740Z                     == getattr(
2025-01-10T13:49:05.5690838Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5690932Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5691008Z                     ).decode()
2025-01-10T13:49:05.5691152Z                 )
2025-01-10T13:49:05.5691249Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5691371Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5691446Z             )
2025-01-10T13:49:05.5691531Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5691652Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5691720Z             )
2025-01-10T13:49:05.5691723Z 
2025-01-10T13:49:05.5691870Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5691977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5691981Z 
2025-01-10T13:49:05.5692444Z args = (<function assert_allclose.<locals>.compare at 0x7f3bced1b560>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:05.5692545Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5692799Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5692806Z 
2025-01-10T13:49:05.5692884Z     @wraps(func)
2025-01-10T13:49:05.5692963Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5693049Z         with self._recreate_cm():
2025-01-10T13:49:05.5693131Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5693215Z E           AssertionError: 
2025-01-10T13:49:05.5693317Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5693390Z E           
2025-01-10T13:49:05.5693484Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5693732Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.5693863Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5694024Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5694115Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5694280Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5694367Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5694370Z 
2025-01-10T13:49:05.5694568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5694769Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-10T13:49:05.5694773Z 
2025-01-10T13:49:05.5695038Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf8529460>
2025-01-10T13:49:05.5695355Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bced52900>
2025-01-10T13:49:05.5695452Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5695536Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5695641Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5695735Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5695944Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5696301Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-10T13:49:05.5696306Z 
2025-01-10T13:49:05.5696402Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5696564Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5696635Z     ):
2025-01-10T13:49:05.5696726Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5696832Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5697005Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5697070Z     
2025-01-10T13:49:05.5697179Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5697271Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5697517Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5697623Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5697695Z             )
2025-01-10T13:49:05.5697762Z     
2025-01-10T13:49:05.5697866Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5697967Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5698052Z             if data.stackgroup:
2025-01-10T13:49:05.5698122Z                 assert (
2025-01-10T13:49:05.5698207Z                     data.stackgroup
2025-01-10T13:49:05.5698280Z                     == getattr(
2025-01-10T13:49:05.5698384Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5698482Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5698554Z                     ).decode()
2025-01-10T13:49:05.5698626Z                 )
2025-01-10T13:49:05.5698699Z             if data.name:
2025-01-10T13:49:05.5698774Z                 assert (
2025-01-10T13:49:05.5698848Z                     data.name
2025-01-10T13:49:05.5698924Z                     == getattr(
2025-01-10T13:49:05.5699022Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5699118Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5699191Z                     ).decode()
2025-01-10T13:49:05.5699268Z                 )
2025-01-10T13:49:05.5699362Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5699483Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5699554Z             )
2025-01-10T13:49:05.5699642Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5699765Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5699833Z             )
2025-01-10T13:49:05.5699837Z 
2025-01-10T13:49:05.5699983Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5700090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5700094Z 
2025-01-10T13:49:05.5700562Z args = (<function assert_allclose.<locals>.compare at 0x7f3bced69440>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:05.5700667Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5700917Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5700921Z 
2025-01-10T13:49:05.5700997Z     @wraps(func)
2025-01-10T13:49:05.5701075Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5701162Z         with self._recreate_cm():
2025-01-10T13:49:05.5701245Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5701330Z E           AssertionError: 
2025-01-10T13:49:05.5701431Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5701503Z E           
2025-01-10T13:49:05.5701602Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5701746Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.5701876Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.5702202Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5702289Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5702453Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5702539Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5702543Z 
2025-01-10T13:49:05.5702740Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5702942Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-10T13:49:05.5702946Z 
2025-01-10T13:49:05.5703209Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf85287a0>
2025-01-10T13:49:05.5703796Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bd04c6120>
2025-01-10T13:49:05.5703904Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5703995Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5704098Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5704189Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5704394Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5704630Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-10T13:49:05.5704634Z 
2025-01-10T13:49:05.5704724Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5704889Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5704960Z     ):
2025-01-10T13:49:05.5705051Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5705159Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5705329Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5705399Z     
2025-01-10T13:49:05.5705509Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5705604Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5705749Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5705850Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5705922Z             )
2025-01-10T13:49:05.5705987Z     
2025-01-10T13:49:05.5706087Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5706197Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5706283Z             if data.stackgroup:
2025-01-10T13:49:05.5706355Z                 assert (
2025-01-10T13:49:05.5706438Z                     data.stackgroup
2025-01-10T13:49:05.5706511Z                     == getattr(
2025-01-10T13:49:05.5706617Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5706713Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5706795Z                     ).decode()
2025-01-10T13:49:05.5706870Z                 )
2025-01-10T13:49:05.5706944Z             if data.name:
2025-01-10T13:49:05.5707019Z                 assert (
2025-01-10T13:49:05.5707092Z                     data.name
2025-01-10T13:49:05.5707168Z                     == getattr(
2025-01-10T13:49:05.5707264Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5707357Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5707429Z                     ).decode()
2025-01-10T13:49:05.5707501Z                 )
2025-01-10T13:49:05.5707589Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5707714Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5707780Z             )
2025-01-10T13:49:05.5707871Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5707993Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5708069Z             )
2025-01-10T13:49:05.5708073Z 
2025-01-10T13:49:05.5708217Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5708486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5708490Z 
2025-01-10T13:49:05.5708953Z args = (<function assert_allclose.<locals>.compare at 0x7f3bf2a73420>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:05.5709049Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5709301Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5709305Z 
2025-01-10T13:49:05.5709376Z     @wraps(func)
2025-01-10T13:49:05.5709460Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5709540Z         with self._recreate_cm():
2025-01-10T13:49:05.5709730Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5709820Z E           AssertionError: 
2025-01-10T13:49:05.5709924Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5709999Z E           
2025-01-10T13:49:05.5710096Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5710235Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.5710366Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.5710533Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5710615Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5710782Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5710863Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5710867Z 
2025-01-10T13:49:05.5711069Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5711275Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-10T13:49:05.5711279Z 
2025-01-10T13:49:05.5711542Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b500>
2025-01-10T13:49:05.5711854Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc83f8bf0>
2025-01-10T13:49:05.5711947Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5712036Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5712132Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5712229Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5712428Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5712670Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-10T13:49:05.5712675Z 
2025-01-10T13:49:05.5712764Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5712925Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5712999Z     ):
2025-01-10T13:49:05.5713090Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5713199Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5713366Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5713436Z     
2025-01-10T13:49:05.5713539Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5713774Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5713915Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5714020Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5714088Z             )
2025-01-10T13:49:05.5714157Z     
2025-01-10T13:49:05.5714261Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5714362Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5714452Z             if data.stackgroup:
2025-01-10T13:49:05.5714522Z                 assert (
2025-01-10T13:49:05.5714726Z                     data.stackgroup
2025-01-10T13:49:05.5714797Z                     == getattr(
2025-01-10T13:49:05.5714901Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5714995Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5715073Z                     ).decode()
2025-01-10T13:49:05.5715141Z                 )
2025-01-10T13:49:05.5715219Z             if data.name:
2025-01-10T13:49:05.5715288Z                 assert (
2025-01-10T13:49:05.5715366Z                     data.name
2025-01-10T13:49:05.5715437Z                     == getattr(
2025-01-10T13:49:05.5715539Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5715630Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5715708Z                     ).decode()
2025-01-10T13:49:05.5715779Z                 )
2025-01-10T13:49:05.5715971Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5716100Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5716171Z             )
2025-01-10T13:49:05.5716263Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5716380Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5716453Z             )
2025-01-10T13:49:05.5716457Z 
2025-01-10T13:49:05.5716598Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5716712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5716715Z 
2025-01-10T13:49:05.5717182Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795cfe0>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:05.5717277Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5717534Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5717538Z 
2025-01-10T13:49:05.5717613Z     @wraps(func)
2025-01-10T13:49:05.5717697Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5717778Z         with self._recreate_cm():
2025-01-10T13:49:05.5717868Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5717948Z E           AssertionError: 
2025-01-10T13:49:05.5718055Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5718124Z E           
2025-01-10T13:49:05.5718225Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5718360Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.5718493Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.5718660Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5718744Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5718914Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5718998Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5719002Z 
2025-01-10T13:49:05.5719205Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5719401Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-10T13:49:05.5719405Z 
2025-01-10T13:49:05.5719672Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b5c0>
2025-01-10T13:49:05.5719989Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc838a930>
2025-01-10T13:49:05.5720080Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5720169Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5720267Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5720368Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:05.5720567Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5720896Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-10T13:49:05.5720900Z 
2025-01-10T13:49:05.5720984Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5721148Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5721214Z     ):
2025-01-10T13:49:05.5721311Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5721413Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5721590Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5721659Z     
2025-01-10T13:49:05.5721763Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5721860Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5722074Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5722182Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5722249Z             )
2025-01-10T13:49:05.5722322Z     
2025-01-10T13:49:05.5722420Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5722525Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5722605Z             if data.stackgroup:
2025-01-10T13:49:05.5722680Z                 assert (
2025-01-10T13:49:05.5722759Z                     data.stackgroup
2025-01-10T13:49:05.5722836Z                     == getattr(
2025-01-10T13:49:05.5722935Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5723032Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5723109Z                     ).decode()
2025-01-10T13:49:05.5723177Z                 )
2025-01-10T13:49:05.5723256Z             if data.name:
2025-01-10T13:49:05.5723326Z                 assert (
2025-01-10T13:49:05.5723403Z                     data.name
2025-01-10T13:49:05.5723477Z                     == getattr(
2025-01-10T13:49:05.5723580Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5723788Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5723868Z                     ).decode()
2025-01-10T13:49:05.5723934Z                 )
2025-01-10T13:49:05.5724028Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5724151Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5724223Z             )
2025-01-10T13:49:05.5724309Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5724431Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5724504Z             )
2025-01-10T13:49:05.5724507Z 
2025-01-10T13:49:05.5724649Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5724762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5724765Z 
2025-01-10T13:49:05.5725227Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795db20>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:05.5725331Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5725580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5725584Z 
2025-01-10T13:49:05.5725660Z     @wraps(func)
2025-01-10T13:49:05.5725744Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5725826Z         with self._recreate_cm():
2025-01-10T13:49:05.5725912Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5725991Z E           AssertionError: 
2025-01-10T13:49:05.5726095Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5726163Z E           
2025-01-10T13:49:05.5726263Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5726399Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.5726530Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.5726839Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5726929Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5727088Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.5727175Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5727179Z 
2025-01-10T13:49:05.5727378Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5727575Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-10T13:49:05.5727579Z 
2025-01-10T13:49:05.5727846Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b680>
2025-01-10T13:49:05.5728257Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc835d8e0>
2025-01-10T13:49:05.5728356Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5728445Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5728546Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5728646Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5728854Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5729096Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-10T13:49:05.5729100Z 
2025-01-10T13:49:05.5729183Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5729350Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5729417Z     ):
2025-01-10T13:49:05.5729513Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5729617Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5729793Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5729859Z     
2025-01-10T13:49:05.5729969Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5730065Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5730296Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5730470Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5730573Z             )
2025-01-10T13:49:05.5730673Z     
2025-01-10T13:49:05.5730826Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5730996Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5731084Z             if data.stackgroup:
2025-01-10T13:49:05.5731160Z                 assert (
2025-01-10T13:49:05.5731242Z                     data.stackgroup
2025-01-10T13:49:05.5731319Z                     == getattr(
2025-01-10T13:49:05.5731420Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5731521Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5731593Z                     ).decode()
2025-01-10T13:49:05.5731669Z                 )
2025-01-10T13:49:05.5731743Z             if data.name:
2025-01-10T13:49:05.5731818Z                 assert (
2025-01-10T13:49:05.5731889Z                     data.name
2025-01-10T13:49:05.5731966Z                     == getattr(
2025-01-10T13:49:05.5732071Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5732157Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5732237Z                     ).decode()
2025-01-10T13:49:05.5732305Z                 )
2025-01-10T13:49:05.5732397Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5732520Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5732592Z             )
2025-01-10T13:49:05.5732678Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5732804Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5732870Z             )
2025-01-10T13:49:05.5732874Z 
2025-01-10T13:49:05.5733027Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5733279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5733284Z 
2025-01-10T13:49:05.5733903Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795c680>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:05.5734007Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5734257Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5734261Z 
2025-01-10T13:49:05.5734339Z     @wraps(func)
2025-01-10T13:49:05.5734416Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5734502Z         with self._recreate_cm():
2025-01-10T13:49:05.5734721Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5734812Z E           AssertionError: 
2025-01-10T13:49:05.5734915Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5734994Z E           
2025-01-10T13:49:05.5735089Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5735229Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.5735359Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5735523Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5735610Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5735773Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5735858Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5735862Z 
2025-01-10T13:49:05.5736060Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5736265Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-10T13:49:05.5736269Z 
2025-01-10T13:49:05.5736535Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b740>
2025-01-10T13:49:05.5736851Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc8391190>
2025-01-10T13:49:05.5736947Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5737030Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5737134Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5737229Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5737437Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5737674Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-10T13:49:05.5737679Z 
2025-01-10T13:49:05.5737767Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5737933Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5738005Z     ):
2025-01-10T13:49:05.5738103Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5738208Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5738382Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5738447Z     
2025-01-10T13:49:05.5738557Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5738648Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5738793Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5738895Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5738967Z             )
2025-01-10T13:49:05.5739031Z     
2025-01-10T13:49:05.5739133Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5739234Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5739324Z             if data.stackgroup:
2025-01-10T13:49:05.5739394Z                 assert (
2025-01-10T13:49:05.5739480Z                     data.stackgroup
2025-01-10T13:49:05.5739692Z                     == getattr(
2025-01-10T13:49:05.5739795Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5739894Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5739967Z                     ).decode()
2025-01-10T13:49:05.5740038Z                 )
2025-01-10T13:49:05.5740113Z             if data.name:
2025-01-10T13:49:05.5740188Z                 assert (
2025-01-10T13:49:05.5740260Z                     data.name
2025-01-10T13:49:05.5740337Z                     == getattr(
2025-01-10T13:49:05.5740433Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5740527Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5740598Z                     ).decode()
2025-01-10T13:49:05.5740671Z                 )
2025-01-10T13:49:05.5740841Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5740971Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5741042Z             )
2025-01-10T13:49:05.5741133Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5741259Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5741327Z             )
2025-01-10T13:49:05.5741332Z 
2025-01-10T13:49:05.5741478Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5741588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5741592Z 
2025-01-10T13:49:05.5742057Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795ff60>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:05.5742153Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5742411Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5742416Z 
2025-01-10T13:49:05.5742494Z     @wraps(func)
2025-01-10T13:49:05.5742573Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5742660Z         with self._recreate_cm():
2025-01-10T13:49:05.5742744Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5742830Z E           AssertionError: 
2025-01-10T13:49:05.5742932Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5743006Z E           
2025-01-10T13:49:05.5743099Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5743236Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.5743360Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5743530Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5743727Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5743905Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5743994Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5744002Z 
2025-01-10T13:49:05.5744198Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5744405Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-10T13:49:05.5744408Z 
2025-01-10T13:49:05.5744672Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b800>
2025-01-10T13:49:05.5744989Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bdacadd60>
2025-01-10T13:49:05.5745081Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5745169Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5745268Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5745365Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5745574Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5745956Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-10T13:49:05.5745961Z 
2025-01-10T13:49:05.5746049Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5746213Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5746285Z     ):
2025-01-10T13:49:05.5746376Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5746484Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5746654Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5746725Z     
2025-01-10T13:49:05.5746829Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5746925Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5747066Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5747270Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5747346Z             )
2025-01-10T13:49:05.5747416Z     
2025-01-10T13:49:05.5747517Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5747618Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5747703Z             if data.stackgroup:
2025-01-10T13:49:05.5747774Z                 assert (
2025-01-10T13:49:05.5747857Z                     data.stackgroup
2025-01-10T13:49:05.5747929Z                     == getattr(
2025-01-10T13:49:05.5748035Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5748126Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5748204Z                     ).decode()
2025-01-10T13:49:05.5748274Z                 )
2025-01-10T13:49:05.5748355Z             if data.name:
2025-01-10T13:49:05.5748425Z                 assert (
2025-01-10T13:49:05.5748502Z                     data.name
2025-01-10T13:49:05.5748583Z                     == getattr(
2025-01-10T13:49:05.5748681Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5748778Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5748849Z                     ).decode()
2025-01-10T13:49:05.5748921Z                 )
2025-01-10T13:49:05.5749017Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5749153Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5749220Z             )
2025-01-10T13:49:05.5749315Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5749434Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5749507Z             )
2025-01-10T13:49:05.5749511Z 
2025-01-10T13:49:05.5749659Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5749773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5749777Z 
2025-01-10T13:49:05.5750252Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795cea0>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:05.5750354Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5750610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5750615Z 
2025-01-10T13:49:05.5750686Z     @wraps(func)
2025-01-10T13:49:05.5750774Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5750855Z         with self._recreate_cm():
2025-01-10T13:49:05.5750943Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5751022Z E           AssertionError: 
2025-01-10T13:49:05.5751131Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5751205Z E           
2025-01-10T13:49:05.5751299Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5751445Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.5751567Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5751868Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5751950Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5752119Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5752200Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5752204Z 
2025-01-10T13:49:05.5752409Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5752609Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-10T13:49:05.5752619Z 
2025-01-10T13:49:05.5752885Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b8c0>
2025-01-10T13:49:05.5753278Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc83507d0>
2025-01-10T13:49:05.5753373Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5753461Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5753564Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5753775Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5753983Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5754233Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-10T13:49:05.5754237Z 
2025-01-10T13:49:05.5754320Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5754488Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5754561Z     ):
2025-01-10T13:49:05.5754649Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5754756Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5754928Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5755000Z     
2025-01-10T13:49:05.5755104Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5755203Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5755342Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5755451Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5755517Z             )
2025-01-10T13:49:05.5755590Z     
2025-01-10T13:49:05.5755686Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5755792Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5755873Z             if data.stackgroup:
2025-01-10T13:49:05.5755948Z                 assert (
2025-01-10T13:49:05.5756033Z                     data.stackgroup
2025-01-10T13:49:05.5756105Z                     == getattr(
2025-01-10T13:49:05.5756211Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5756305Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5756382Z                     ).decode()
2025-01-10T13:49:05.5756449Z                 )
2025-01-10T13:49:05.5756532Z             if data.name:
2025-01-10T13:49:05.5756601Z                 assert (
2025-01-10T13:49:05.5756677Z                     data.name
2025-01-10T13:49:05.5756749Z                     == getattr(
2025-01-10T13:49:05.5756857Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5756945Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5757023Z                     ).decode()
2025-01-10T13:49:05.5757090Z                 )
2025-01-10T13:49:05.5757183Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5757312Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5757378Z             )
2025-01-10T13:49:05.5757473Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5757592Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5757667Z             )
2025-01-10T13:49:05.5757670Z 
2025-01-10T13:49:05.5757812Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5758052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5758056Z 
2025-01-10T13:49:05.5758521Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795d080>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:05.5758621Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5758877Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5758883Z 
2025-01-10T13:49:05.5758955Z     @wraps(func)
2025-01-10T13:49:05.5759040Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5759121Z         with self._recreate_cm():
2025-01-10T13:49:05.5759210Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5759392Z E           AssertionError: 
2025-01-10T13:49:05.5759505Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5759579Z E           
2025-01-10T13:49:05.5759680Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.5759814Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.5759944Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.5760108Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5760198Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5760374Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5760455Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5760459Z 
2025-01-10T13:49:05.5760665Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5760868Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-10T13:49:05.5760872Z 
2025-01-10T13:49:05.5761144Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852b980>
2025-01-10T13:49:05.5761463Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc83252e0>
2025-01-10T13:49:05.5761561Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5761646Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5761748Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5761850Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5762057Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5762306Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-10T13:49:05.5762310Z 
2025-01-10T13:49:05.5762392Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5762563Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5762630Z     ):
2025-01-10T13:49:05.5762726Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5762832Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5763007Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5763073Z     
2025-01-10T13:49:05.5763184Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5763289Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5763429Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5763535Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5763721Z             )
2025-01-10T13:49:05.5763793Z     
2025-01-10T13:49:05.5763888Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5763994Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5764079Z             if data.stackgroup:
2025-01-10T13:49:05.5764158Z                 assert (
2025-01-10T13:49:05.5764237Z                     data.stackgroup
2025-01-10T13:49:05.5764447Z                     == getattr(
2025-01-10T13:49:05.5764551Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5764648Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5764721Z                     ).decode()
2025-01-10T13:49:05.5764794Z                 )
2025-01-10T13:49:05.5764873Z             if data.name:
2025-01-10T13:49:05.5764943Z                 assert (
2025-01-10T13:49:05.5765022Z                     data.name
2025-01-10T13:49:05.5765094Z                     == getattr(
2025-01-10T13:49:05.5765197Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5765286Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5765363Z                     ).decode()
2025-01-10T13:49:05.5765430Z                 )
2025-01-10T13:49:05.5765662Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5765789Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5765868Z             )
2025-01-10T13:49:05.5765955Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5766078Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5766145Z             )
2025-01-10T13:49:05.5766148Z 
2025-01-10T13:49:05.5766296Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5766416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5766420Z 
2025-01-10T13:49:05.5766885Z args = (<function assert_allclose.<locals>.compare at 0x7f3be8913ba0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:05.5766986Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5767244Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5767249Z 
2025-01-10T13:49:05.5767327Z     @wraps(func)
2025-01-10T13:49:05.5767408Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5767496Z         with self._recreate_cm():
2025-01-10T13:49:05.5767579Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5767664Z E           AssertionError: 
2025-01-10T13:49:05.5767772Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5767842Z E           
2025-01-10T13:49:05.5767948Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5768085Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.5768221Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.5768388Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5768477Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5768647Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5768734Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5768741Z 
2025-01-10T13:49:05.5768940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5769143Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-10T13:49:05.5769146Z 
2025-01-10T13:49:05.5769413Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852ba40>
2025-01-10T13:49:05.5769728Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3b855a62a0>
2025-01-10T13:49:05.5769826Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5769908Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5770011Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5770105Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5770314Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5770553Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-10T13:49:05.5770642Z 
2025-01-10T13:49:05.5770734Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5770901Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5770968Z     ):
2025-01-10T13:49:05.5771063Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5771168Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5771346Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5771411Z     
2025-01-10T13:49:05.5771523Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5771613Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5771757Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5771950Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5772026Z             )
2025-01-10T13:49:05.5772090Z     
2025-01-10T13:49:05.5772196Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5772297Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5772386Z             if data.stackgroup:
2025-01-10T13:49:05.5772464Z                 assert (
2025-01-10T13:49:05.5772544Z                     data.stackgroup
2025-01-10T13:49:05.5772620Z                     == getattr(
2025-01-10T13:49:05.5772720Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5772819Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5772892Z                     ).decode()
2025-01-10T13:49:05.5772963Z                 )
2025-01-10T13:49:05.5773038Z             if data.name:
2025-01-10T13:49:05.5773113Z                 assert (
2025-01-10T13:49:05.5773186Z                     data.name
2025-01-10T13:49:05.5773268Z                     == getattr(
2025-01-10T13:49:05.5773367Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5773463Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5773534Z                     ).decode()
2025-01-10T13:49:05.5773706Z                 )
2025-01-10T13:49:05.5773802Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5773926Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5774000Z             )
2025-01-10T13:49:05.5774085Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5774210Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5774306Z             )
2025-01-10T13:49:05.5774309Z 
2025-01-10T13:49:05.5774455Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5774566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5774569Z 
2025-01-10T13:49:05.5775036Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795eb60>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:05.5775142Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5775393Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5775398Z 
2025-01-10T13:49:05.5775474Z     @wraps(func)
2025-01-10T13:49:05.5775552Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5775638Z         with self._recreate_cm():
2025-01-10T13:49:05.5775721Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5775804Z E           AssertionError: 
2025-01-10T13:49:05.5775907Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5775979Z E           
2025-01-10T13:49:05.5776075Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5776214Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.5776346Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.5776518Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5776737Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5776902Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5776987Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5776992Z 
2025-01-10T13:49:05.5777190Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5777396Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-10T13:49:05.5777400Z 
2025-01-10T13:49:05.5777664Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852bb00>
2025-01-10T13:49:05.5778086Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3bc835ee10>
2025-01-10T13:49:05.5778181Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5778270Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5778379Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5778471Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5778677Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5778916Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-10T13:49:05.5778920Z 
2025-01-10T13:49:05.5779009Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5779174Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5779246Z     ):
2025-01-10T13:49:05.5779338Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5779448Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5779626Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5779698Z     
2025-01-10T13:49:05.5779809Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5779902Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5780046Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5780151Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5780225Z             )
2025-01-10T13:49:05.5780290Z     
2025-01-10T13:49:05.5780390Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5780490Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5780577Z             if data.stackgroup:
2025-01-10T13:49:05.5780648Z                 assert (
2025-01-10T13:49:05.5780732Z                     data.stackgroup
2025-01-10T13:49:05.5780805Z                     == getattr(
2025-01-10T13:49:05.5780914Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5781009Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5781089Z                     ).decode()
2025-01-10T13:49:05.5781161Z                 )
2025-01-10T13:49:05.5781241Z             if data.name:
2025-01-10T13:49:05.5781316Z                 assert (
2025-01-10T13:49:05.5781387Z                     data.name
2025-01-10T13:49:05.5781463Z                     == getattr(
2025-01-10T13:49:05.5781561Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5781655Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5781727Z                     ).decode()
2025-01-10T13:49:05.5781798Z                 )
2025-01-10T13:49:05.5781889Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5782029Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5782100Z             )
2025-01-10T13:49:05.5782197Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5782316Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5782393Z             )
2025-01-10T13:49:05.5782397Z 
2025-01-10T13:49:05.5782543Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5782739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5782743Z 
2025-01-10T13:49:05.5783210Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795cb80>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:05.5783306Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5783568Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5783572Z 
2025-01-10T13:49:05.5783835Z     @wraps(func)
2025-01-10T13:49:05.5783925Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5784008Z         with self._recreate_cm():
2025-01-10T13:49:05.5784098Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5784293Z E           AssertionError: 
2025-01-10T13:49:05.5784401Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5784482Z E           
2025-01-10T13:49:05.5784580Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5784723Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.5784854Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.5785023Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5785105Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5785276Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5785357Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5785361Z 
2025-01-10T13:49:05.5785565Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5785775Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-10T13:49:05.5785779Z 
2025-01-10T13:49:05.5786042Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f3bf852bbc0>
2025-01-10T13:49:05.5786367Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f3b855658b0>
2025-01-10T13:49:05.5786458Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:05.5786549Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:05.5786647Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:05.5786748Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:05.5786951Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f3b855632c0>)
2025-01-10T13:49:05.5787197Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-10T13:49:05.5787201Z 
2025-01-10T13:49:05.5787289Z     def test_generate_plot_mpl(
2025-01-10T13:49:05.5787456Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:05.5787528Z     ):
2025-01-10T13:49:05.5787619Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:05.5787731Z         regression_data = RegressionData(request)
2025-01-10T13:49:05.5787902Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:05.5787975Z     
2025-01-10T13:49:05.5788081Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:05.5788178Z             np.testing.assert_array_equal(
2025-01-10T13:49:05.5788316Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:05.5788427Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:05.5788495Z             )
2025-01-10T13:49:05.5788565Z     
2025-01-10T13:49:05.5788668Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:05.5788769Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:05.5788859Z             if data.stackgroup:
2025-01-10T13:49:05.5788931Z                 assert (
2025-01-10T13:49:05.5789018Z                     data.stackgroup
2025-01-10T13:49:05.5789217Z                     == getattr(
2025-01-10T13:49:05.5789326Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5789418Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:05.5789497Z                     ).decode()
2025-01-10T13:49:05.5789564Z                 )
2025-01-10T13:49:05.5789645Z             if data.name:
2025-01-10T13:49:05.5789718Z                 assert (
2025-01-10T13:49:05.5789799Z                     data.name
2025-01-10T13:49:05.5789872Z                     == getattr(
2025-01-10T13:49:05.5789977Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:05.5790066Z                         "_" + str(index) + "name",
2025-01-10T13:49:05.5790147Z                     ).decode()
2025-01-10T13:49:05.5790220Z                 )
2025-01-10T13:49:05.5790392Z             np.testing.assert_allclose(
2025-01-10T13:49:05.5790526Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:05.5790598Z             )
2025-01-10T13:49:05.5790691Z >           np.testing.assert_allclose(
2025-01-10T13:49:05.5790811Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:05.5790882Z             )
2025-01-10T13:49:05.5790886Z 
2025-01-10T13:49:05.5791026Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:05.5791144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:05.5791148Z 
2025-01-10T13:49:05.5791614Z args = (<function assert_allclose.<locals>.compare at 0x7f3be795d3a0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:05.5791716Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:05.5791976Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:05.5791980Z 
2025-01-10T13:49:05.5792050Z     @wraps(func)
2025-01-10T13:49:05.5792139Z     def inner(*args, **kwds):
2025-01-10T13:49:05.5792225Z         with self._recreate_cm():
2025-01-10T13:49:05.5792314Z >           return func(*args, **kwds)
2025-01-10T13:49:05.5792394Z E           AssertionError: 
2025-01-10T13:49:05.5792501Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5792570Z E           
2025-01-10T13:49:05.5792672Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.5792808Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.5792943Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.5793115Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5793202Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5793380Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.5793462Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.5793468Z 
2025-01-10T13:49:05.5793788Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:05.5793904Z =============================== warnings summary ===============================
2025-01-10T13:49:05.5794026Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:49:05.5794133Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:49:05.5794451Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-10T13:49:05.5794532Z   
2025-01-10T13:49:05.5795661Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-10T13:49:05.5795666Z 
2025-01-10T13:49:05.5796028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-10T13:49:05.5796385Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-10T13:49:05.5796458Z   
2025-01-10T13:49:05.5796609Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-10T13:49:05.5796768Z   given by the platformdirs library.  To remove this warning and
2025-01-10T13:49:05.5796936Z   see the appropriate new directories, set the environment variable
2025-01-10T13:49:05.5797080Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-10T13:49:05.5797235Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-10T13:49:05.5797239Z 
2025-01-10T13:49:05.5797334Z tardis/plasma/properties/__init__.py:17
2025-01-10T13:49:05.5797736Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-10T13:49:05.5797806Z   
2025-01-10T13:49:05.5798364Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-10T13:49:05.5798369Z 
2025-01-10T13:49:05.5802636Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-10T13:49:05.5802941Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:05.5803177Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-10T13:49:05.5803246Z   
2025-01-10T13:49:05.5803316Z   
2025-01-10T13:49:05.5803531Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:05.5803975Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:49:05.5803981Z 
2025-01-10T13:49:05.5804197Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-10T13:49:05.5804421Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-10T13:49:05.5804658Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-10T13:49:05.5804846Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-10T13:49:05.5805171Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-10T13:49:05.5805238Z   
2025-01-10T13:49:05.5805357Z   The current CMFGEN model parser is deprecated
2025-01-10T13:49:05.5805361Z 
2025-01-10T13:49:05.5805471Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-10T13:49:05.5805655Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-10T13:49:05.5805959Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-10T13:49:05.5806034Z   
2025-01-10T13:49:05.5806138Z   The current CMFGEN model parser is deprecated
2025-01-10T13:49:05.5806142Z 
2025-01-10T13:49:05.5806356Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-10T13:49:05.5806743Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-10T13:49:05.5806812Z   
2025-01-10T13:49:05.5807238Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-10T13:49:05.5807244Z 
2025-01-10T13:49:05.5807346Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:49:05.5807468Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:49:05.5807644Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:49:05.5807921Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-10T13:49:05.5807987Z   
2025-01-10T13:49:05.5808095Z   v_inner_boundary < 0, assuming default value
2025-01-10T13:49:05.5808104Z 
2025-01-10T13:49:05.5808202Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:49:05.5808319Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:49:05.5808679Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:49:05.5808948Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-10T13:49:05.5809019Z   
2025-01-10T13:49:05.5809116Z   v_outer_boundary < 0, assuming default value
2025-01-10T13:49:05.5809121Z 
2025-01-10T13:49:05.5809450Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:05.5809762Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:05.5810074Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:05.5810484Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:05.5811039Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5811579Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5812107Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5812554Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5812917Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5813179Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-10T13:49:05.5813248Z   
2025-01-10T13:49:05.5814779Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:49:05.5814785Z 
2025-01-10T13:49:05.5815240Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5815537Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-10T13:49:05.5815608Z   
2025-01-10T13:49:05.5815883Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-10T13:49:05.5816331Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-10T13:49:05.5816401Z   
2025-01-10T13:49:05.5816926Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-10T13:49:05.5816931Z 
2025-01-10T13:49:05.5817303Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:05.5817626Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1374: DeprecationWarning:
2025-01-10T13:49:05.5817699Z   
2025-01-10T13:49:05.5819086Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:49:05.5819207Z 
2025-01-10T13:49:05.5819357Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-10T13:49:05.5819648Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:05.5819715Z   
2025-01-10T13:49:05.5819814Z   Property "atomic_mass" not found
2025-01-10T13:49:05.5819818Z 
2025-01-10T13:49:05.5820346Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-10T13:49:05.5820733Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-10T13:49:05.5821021Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:05.5821086Z   
2025-01-10T13:49:05.5821190Z   Property "j_blues_norm_factor" not found
2025-01-10T13:49:05.5821194Z 
2025-01-10T13:49:05.5821605Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-10T13:49:05.5821977Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-10T13:49:05.5822250Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:05.5822321Z   
2025-01-10T13:49:05.5822413Z   Property "j_blue_estimator" not found
2025-01-10T13:49:05.5822424Z 
2025-01-10T13:49:05.5822808Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-10T13:49:05.5823153Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-10T13:49:05.5823424Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:05.5823496Z   
2025-01-10T13:49:05.5823580Z   Property "volume" not found
2025-01-10T13:49:05.5823585Z 
2025-01-10T13:49:05.5824124Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-10T13:49:05.5824461Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-10T13:49:05.5824735Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:05.5824805Z   
2025-01-10T13:49:05.5824890Z   Property "r_inner" not found
2025-01-10T13:49:05.5824895Z 
2025-01-10T13:49:05.5825110Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-10T13:49:05.5825316Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-10T13:49:05.5825525Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-10T13:49:05.5825761Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-10T13:49:05.5825829Z   
2025-01-10T13:49:05.5826015Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-10T13:49:05.5826020Z 
2025-01-10T13:49:05.5826257Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-10T13:49:05.5826492Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-10T13:49:05.5826728Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-10T13:49:05.5826973Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-10T13:49:05.5827429Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-10T13:49:05.5827501Z   
2025-01-10T13:49:05.5827792Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:49:05.5827796Z 
2025-01-10T13:49:05.5828011Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:49:05.5828208Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-10T13:49:05.5828279Z   
2025-01-10T13:49:05.5828609Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-10T13:49:05.5828613Z 
2025-01-10T13:49:05.5828815Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:49:05.5829116Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-10T13:49:05.5829184Z   
2025-01-10T13:49:05.5829537Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-10T13:49:05.5829542Z 
2025-01-10T13:49:05.5829740Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-10T13:49:05.5829937Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-10T13:49:05.5830147Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-10T13:49:05.5830218Z   
2025-01-10T13:49:05.5830502Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:49:05.5830507Z 
2025-01-10T13:49:05.5830674Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:05.5830974Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-10T13:49:05.5831039Z   
2025-01-10T13:49:05.5831146Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:05.5831154Z 
2025-01-10T13:49:05.5831316Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:05.5831607Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-10T13:49:05.5831672Z   
2025-01-10T13:49:05.5831774Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:05.5831778Z 
2025-01-10T13:49:05.5831941Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:05.5832226Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-10T13:49:05.5832296Z   
2025-01-10T13:49:05.5832391Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:05.5832394Z 
2025-01-10T13:49:05.5832733Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-10T13:49:05.5833011Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-10T13:49:05.5833085Z   
2025-01-10T13:49:05.5834040Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-10T13:49:05.5834052Z 
2025-01-10T13:49:05.5834406Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5834759Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5835100Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5835447Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5835781Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5836267Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5836627Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:05.5836691Z   
2025-01-10T13:49:05.5836893Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-10T13:49:05.5837070Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:05.5837312Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:05.5837315Z 
2025-01-10T13:49:05.5837762Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5838113Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5838457Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:05.5838531Z   
2025-01-10T13:49:05.5838711Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-10T13:49:05.5838879Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:05.5839117Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:05.5839121Z 
2025-01-10T13:49:05.5839462Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:05.5839810Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:05.5839877Z   
2025-01-10T13:49:05.5840059Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-10T13:49:05.5840227Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:05.5840463Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:05.5840467Z 
2025-01-10T13:49:05.5840899Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-10T13:49:05.5841222Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-10T13:49:05.5841293Z   
2025-01-10T13:49:05.5841569Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-10T13:49:05.5841577Z 
2025-01-10T13:49:05.5841842Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:05.5842054Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-10T13:49:05.5842124Z   
2025-01-10T13:49:05.5842190Z   
2025-01-10T13:49:05.5842396Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:05.5842654Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:49:05.5842658Z 
2025-01-10T13:49:05.5842909Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:05.5843120Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-10T13:49:05.5843184Z   
2025-01-10T13:49:05.5843252Z   
2025-01-10T13:49:05.5843447Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:05.5843728Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-10T13:49:05.5843733Z 
2025-01-10T13:49:05.5843990Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:05.5844241Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-10T13:49:05.5844431Z   
2025-01-10T13:49:05.5844620Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-10T13:49:05.5844623Z 
2025-01-10T13:49:05.5844824Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-10T13:49:05.5844829Z 
2025-01-10T13:49:05.5844993Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-10T13:49:05.5845119Z Coverage HTML written to dir coverage_html_report
2025-01-10T13:49:05.5845215Z Coverage XML written to file coverage.xml
2025-01-10T13:49:05.5845219Z 
2025-01-10T13:49:05.5845349Z =========================== short test summary info ============================
2025-01-10T13:49:05.5845888Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-10T13:49:05.5845899Z 
2025-01-10T13:49:05.5846029Z MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:49:05.5846151Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:05.5846218Z        ...
2025-01-10T13:49:05.5846310Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:05.5846428Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:05.5846541Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:05.5846608Z        ...
2025-01-10T13:49:05.5846692Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:05.5846806Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:05.5846913Z At positional index 54, first diff: 12 != 14
2025-01-10T13:49:05.5847196Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-10T13:49:05.5847296Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.5847300Z 
2025-01-10T13:49:05.5847398Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:05.5847519Z Max absolute difference among violations: 0.99984222
2025-01-10T13:49:05.5847650Z Max relative difference among violations: 6337.12154973
2025-01-10T13:49:05.5847743Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.5847827Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.5847902Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.5848003Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.5848074Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.5848155Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.5848651Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5848655Z 
2025-01-10T13:49:05.5848787Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5848902Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5848968Z        ...
2025-01-10T13:49:05.5849051Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5849180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5849289Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5849355Z        ...
2025-01-10T13:49:05.5849440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5849558Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5849664Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5850179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5850184Z 
2025-01-10T13:49:05.5850283Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5850666Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5851085Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5851496Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5852011Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5852019Z 
2025-01-10T13:49:05.5852107Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5852479Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5852858Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5853233Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5853824Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5853830Z 
2025-01-10T13:49:05.5853959Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5854074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5854145Z        ...
2025-01-10T13:49:05.5854223Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5854356Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5854461Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5854532Z        ...
2025-01-10T13:49:05.5854610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5854732Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5854829Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5855353Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5855358Z 
2025-01-10T13:49:05.5855485Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5855585Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5855662Z        ...
2025-01-10T13:49:05.5855741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5855864Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5856086Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5856157Z        ...
2025-01-10T13:49:05.5856235Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5856355Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5856449Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5856934Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5856938Z 
2025-01-10T13:49:05.5857061Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5857161Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5857233Z        ...
2025-01-10T13:49:05.5857419Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5857544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5857651Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5857721Z        ...
2025-01-10T13:49:05.5857798Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5857919Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5858011Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5858526Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5858530Z 
2025-01-10T13:49:05.5858655Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5858755Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5858826Z        ...
2025-01-10T13:49:05.5858902Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5859027Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5859130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5859206Z        ...
2025-01-10T13:49:05.5859282Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5859403Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5859499Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5860010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5860014Z 
2025-01-10T13:49:05.5860140Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5860238Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5860306Z        ...
2025-01-10T13:49:05.5860382Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5860505Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5860606Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5860677Z        ...
2025-01-10T13:49:05.5860756Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5860876Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5860968Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5861459Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5861464Z 
2025-01-10T13:49:05.5861590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5861689Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5861761Z        ...
2025-01-10T13:49:05.5861837Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5861958Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5862063Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5868162Z        ...
2025-01-10T13:49:05.5868288Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5868632Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5868740Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5869252Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5869257Z 
2025-01-10T13:49:05.5869390Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5869507Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5869577Z        ...
2025-01-10T13:49:05.5869665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5869789Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5869899Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5870079Z        ...
2025-01-10T13:49:05.5870162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5870284Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5870388Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5870886Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5870891Z 
2025-01-10T13:49:05.5870981Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5871353Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5871692Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5872022Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5872522Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5872526Z 
2025-01-10T13:49:05.5872622Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5872983Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5873359Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5873891Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5874525Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5874530Z 
2025-01-10T13:49:05.5874664Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5874773Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5874844Z        ...
2025-01-10T13:49:05.5874926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5875054Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5875164Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5875233Z        ...
2025-01-10T13:49:05.5875418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5875538Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5875645Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5876151Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5876156Z 
2025-01-10T13:49:05.5876284Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5876385Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5876456Z        ...
2025-01-10T13:49:05.5876533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5876658Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5876780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5876844Z        ...
2025-01-10T13:49:05.5876928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5877045Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5877147Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5877624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5877628Z 
2025-01-10T13:49:05.5877751Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5877852Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5877924Z        ...
2025-01-10T13:49:05.5877999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5878123Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5878231Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5878295Z        ...
2025-01-10T13:49:05.5878374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5878491Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5878591Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5879081Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5879088Z 
2025-01-10T13:49:05.5879212Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5879311Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5879381Z        ...
2025-01-10T13:49:05.5879457Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5879576Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5879683Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5879746Z        ...
2025-01-10T13:49:05.5879830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5879945Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5880047Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5880538Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5880628Z 
2025-01-10T13:49:05.5880755Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5880857Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5880926Z        ...
2025-01-10T13:49:05.5881002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5881123Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5881231Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5881296Z        ...
2025-01-10T13:49:05.5881377Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5881489Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5881588Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5882133Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5882142Z 
2025-01-10T13:49:05.5882267Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5882365Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5882436Z        ...
2025-01-10T13:49:05.5882513Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5882632Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5882740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5882804Z        ...
2025-01-10T13:49:05.5882885Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5882998Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5883095Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5883563Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5883570Z 
2025-01-10T13:49:05.5883800Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5883901Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5883970Z        ...
2025-01-10T13:49:05.5884045Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5884162Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5884262Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5884332Z        ...
2025-01-10T13:49:05.5884411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5884524Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5884621Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5885103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5885108Z 
2025-01-10T13:49:05.5885201Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5885569Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5885897Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5886225Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5886834Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5886844Z 
2025-01-10T13:49:05.5886930Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5887409Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5887776Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5888149Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5888611Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5888618Z 
2025-01-10T13:49:05.5888737Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5888847Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5888911Z        ...
2025-01-10T13:49:05.5888997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5889118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5889220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5889288Z        ...
2025-01-10T13:49:05.5889366Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5889484Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5889576Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5890082Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5890087Z 
2025-01-10T13:49:05.5890208Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5890317Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5890381Z        ...
2025-01-10T13:49:05.5890461Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5890579Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5890680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5890748Z        ...
2025-01-10T13:49:05.5890823Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5890942Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5891033Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5891495Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5891502Z 
2025-01-10T13:49:05.5891618Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5891722Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5891871Z        ...
2025-01-10T13:49:05.5891951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5892065Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5892171Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5892239Z        ...
2025-01-10T13:49:05.5892315Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5892432Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5892524Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5893021Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5893026Z 
2025-01-10T13:49:05.5893213Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5893320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5893389Z        ...
2025-01-10T13:49:05.5893510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5893851Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5894022Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5894136Z        ...
2025-01-10T13:49:05.5894269Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5894480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5894590Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5895095Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5895100Z 
2025-01-10T13:49:05.5895223Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5895337Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5895404Z        ...
2025-01-10T13:49:05.5895490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5895611Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5895720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5895790Z        ...
2025-01-10T13:49:05.5895867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5895985Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5896080Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5896561Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5896565Z 
2025-01-10T13:49:05.5896690Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5896807Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5896872Z        ...
2025-01-10T13:49:05.5896958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5897082Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5897191Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5897261Z        ...
2025-01-10T13:49:05.5897340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5897460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5897557Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5898063Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5898067Z 
2025-01-10T13:49:05.5898185Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5898291Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5898356Z        ...
2025-01-10T13:49:05.5898445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5898562Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5898811Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5898882Z        ...
2025-01-10T13:49:05.5898958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5899077Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5899172Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5899687Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5899691Z 
2025-01-10T13:49:05.5899780Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5900249Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5900585Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5900909Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5901424Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5901431Z 
2025-01-10T13:49:05.5901523Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5901884Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5902256Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5902629Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5903108Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5903113Z 
2025-01-10T13:49:05.5903238Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5903340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5903411Z        ...
2025-01-10T13:49:05.5903492Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5903742Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5903983Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5904049Z        ...
2025-01-10T13:49:05.5904131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5904248Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5904347Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5904864Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5904869Z 
2025-01-10T13:49:05.5904994Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5905095Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5905165Z        ...
2025-01-10T13:49:05.5905343Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5905470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5905582Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5905646Z        ...
2025-01-10T13:49:05.5905730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5905845Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5905942Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5906422Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5906427Z 
2025-01-10T13:49:05.5906550Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5906648Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5906717Z        ...
2025-01-10T13:49:05.5906801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5906924Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5907031Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5907098Z        ...
2025-01-10T13:49:05.5907180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5907297Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5907397Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5907912Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5907916Z 
2025-01-10T13:49:05.5908038Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5908139Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5908209Z        ...
2025-01-10T13:49:05.5908284Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5908406Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5908516Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5908580Z        ...
2025-01-10T13:49:05.5908665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5908781Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5908880Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5909392Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5909396Z 
2025-01-10T13:49:05.5909518Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5909617Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5909687Z        ...
2025-01-10T13:49:05.5909763Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5909883Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5909993Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5910057Z        ...
2025-01-10T13:49:05.5910137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5910369Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5910466Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5910962Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5910967Z 
2025-01-10T13:49:05.5911089Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5911190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5911260Z        ...
2025-01-10T13:49:05.5911336Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5911456Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5911565Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5911723Z        ...
2025-01-10T13:49:05.5911809Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5911924Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5912026Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5912588Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5912592Z 
2025-01-10T13:49:05.5912717Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5912817Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5912895Z        ...
2025-01-10T13:49:05.5912980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5913100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5913213Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5913281Z        ...
2025-01-10T13:49:05.5913369Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5913483Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5913588Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5914289Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5914293Z 
2025-01-10T13:49:05.5914391Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5914765Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5915095Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5915432Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5916010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5916014Z 
2025-01-10T13:49:05.5916105Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5916470Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5916962Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5917429Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5917987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5917992Z 
2025-01-10T13:49:05.5918119Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5918220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5918290Z        ...
2025-01-10T13:49:05.5918369Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5918492Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5918597Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5918668Z        ...
2025-01-10T13:49:05.5918745Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5918870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5918964Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5919556Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5919560Z 
2025-01-10T13:49:05.5919684Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5919782Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5919852Z        ...
2025-01-10T13:49:05.5919933Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5920053Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5920156Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5920233Z        ...
2025-01-10T13:49:05.5920309Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5920433Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5920527Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5921082Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5921086Z 
2025-01-10T13:49:05.5921208Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5921307Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5921377Z        ...
2025-01-10T13:49:05.5921453Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5921575Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5921677Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5921754Z        ...
2025-01-10T13:49:05.5921831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5921952Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5922157Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5922744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5922748Z 
2025-01-10T13:49:05.5922872Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5922971Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5923040Z        ...
2025-01-10T13:49:05.5923115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5923242Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5923346Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5923417Z        ...
2025-01-10T13:49:05.5923567Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5923797Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5923897Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5924482Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5924486Z 
2025-01-10T13:49:05.5924608Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5924708Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5924779Z        ...
2025-01-10T13:49:05.5924856Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5924977Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5925082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5925153Z        ...
2025-01-10T13:49:05.5925234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5925359Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5925461Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5926044Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5926049Z 
2025-01-10T13:49:05.5926173Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5926275Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5926347Z        ...
2025-01-10T13:49:05.5926425Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5926547Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5926656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5926725Z        ...
2025-01-10T13:49:05.5926801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5926925Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5927019Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5927548Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5927551Z 
2025-01-10T13:49:05.5927679Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5927781Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5927854Z        ...
2025-01-10T13:49:05.5927931Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5928054Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5928156Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5928228Z        ...
2025-01-10T13:49:05.5928305Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5928430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5928525Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5929063Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5929184Z 
2025-01-10T13:49:05.5929281Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5929647Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5930075Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5930414Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5930952Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5930957Z 
2025-01-10T13:49:05.5931054Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5931425Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5931795Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5932175Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5932684Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5932688Z 
2025-01-10T13:49:05.5932806Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5932909Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5932973Z        ...
2025-01-10T13:49:05.5933055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5933172Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5933279Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5933344Z        ...
2025-01-10T13:49:05.5933427Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5933549Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5933793Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5934483Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5934488Z 
2025-01-10T13:49:05.5934606Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5934713Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5934777Z        ...
2025-01-10T13:49:05.5934858Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5934976Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5935086Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5935150Z        ...
2025-01-10T13:49:05.5935234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5935457Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5935554Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5936067Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5936075Z 
2025-01-10T13:49:05.5936193Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5936297Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5936361Z        ...
2025-01-10T13:49:05.5936445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5936560Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5936667Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5936733Z        ...
2025-01-10T13:49:05.5936814Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5936926Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5937027Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5937573Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5937581Z 
2025-01-10T13:49:05.5937699Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5937802Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5937868Z        ...
2025-01-10T13:49:05.5937951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5938069Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5938177Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5938242Z        ...
2025-01-10T13:49:05.5938326Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5938440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5938543Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5939090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5939097Z 
2025-01-10T13:49:05.5939218Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5939324Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5939389Z        ...
2025-01-10T13:49:05.5939472Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5939589Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5939701Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5939767Z        ...
2025-01-10T13:49:05.5939848Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5939962Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5940060Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5940587Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5940673Z 
2025-01-10T13:49:05.5940797Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5940902Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5940967Z        ...
2025-01-10T13:49:05.5941050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5941166Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5941276Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5941341Z        ...
2025-01-10T13:49:05.5941430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5941544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5941644Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5942248Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5942256Z 
2025-01-10T13:49:05.5942378Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5942484Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5942549Z        ...
2025-01-10T13:49:05.5942635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5942749Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5942857Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5942922Z        ...
2025-01-10T13:49:05.5943005Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5943120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5943220Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5943881Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5943886Z 
2025-01-10T13:49:05.5943976Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5944352Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5944680Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5945005Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5945548Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5945552Z 
2025-01-10T13:49:05.5945642Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5946011Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5946384Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5946876Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5947484Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5947491Z 
2025-01-10T13:49:05.5947621Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5947722Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5947792Z        ...
2025-01-10T13:49:05.5947869Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5947990Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5948092Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5948162Z        ...
2025-01-10T13:49:05.5948243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5948357Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5948455Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5949004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5949011Z 
2025-01-10T13:49:05.5949135Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5949234Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5949306Z        ...
2025-01-10T13:49:05.5949382Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5949503Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5949605Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5949677Z        ...
2025-01-10T13:49:05.5949759Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5949873Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5949972Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5950482Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5950487Z 
2025-01-10T13:49:05.5950610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5950714Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5950783Z        ...
2025-01-10T13:49:05.5950860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5950983Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5951084Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5951153Z        ...
2025-01-10T13:49:05.5951237Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5951351Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5951450Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5951993Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5951998Z 
2025-01-10T13:49:05.5952122Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5952312Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5952383Z        ...
2025-01-10T13:49:05.5952458Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5952580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5952681Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5952753Z        ...
2025-01-10T13:49:05.5952837Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5952951Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5953050Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5953593Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5953821Z 
2025-01-10T13:49:05.5953952Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5954052Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5954125Z        ...
2025-01-10T13:49:05.5954203Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5954325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5954428Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5954499Z        ...
2025-01-10T13:49:05.5954580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5954694Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5954796Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5955321Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5955326Z 
2025-01-10T13:49:05.5955454Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5955553Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5955629Z        ...
2025-01-10T13:49:05.5955706Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5955828Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5955929Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5956000Z        ...
2025-01-10T13:49:05.5956084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5956199Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5956297Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5956848Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5956852Z 
2025-01-10T13:49:05.5956982Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5957086Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5957158Z        ...
2025-01-10T13:49:05.5957237Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5957356Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5957456Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5957528Z        ...
2025-01-10T13:49:05.5957608Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5957723Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5957821Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5958381Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5958386Z 
2025-01-10T13:49:05.5958480Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5958848Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5959312Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5959711Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5960275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5960284Z 
2025-01-10T13:49:05.5960374Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5960741Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5961110Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5961491Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5962030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5962034Z 
2025-01-10T13:49:05.5962154Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5962258Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5962325Z        ...
2025-01-10T13:49:05.5962406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5962527Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5962630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5962701Z        ...
2025-01-10T13:49:05.5962777Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5962896Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5962991Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5963574Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5963578Z 
2025-01-10T13:49:05.5963803Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5963909Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5964090Z        ...
2025-01-10T13:49:05.5964173Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5964295Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5964398Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5964470Z        ...
2025-01-10T13:49:05.5964547Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5964670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5964764Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5965308Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5965312Z 
2025-01-10T13:49:05.5965431Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5965642Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5965711Z        ...
2025-01-10T13:49:05.5965799Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5965918Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5966022Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5966094Z        ...
2025-01-10T13:49:05.5966169Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5966290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5966383Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5966957Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5966962Z 
2025-01-10T13:49:05.5967079Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5967188Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5967253Z        ...
2025-01-10T13:49:05.5967335Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5967459Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5967562Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5967634Z        ...
2025-01-10T13:49:05.5967711Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5967834Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5967928Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5968499Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5968503Z 
2025-01-10T13:49:05.5968621Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5968727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5968795Z        ...
2025-01-10T13:49:05.5968882Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5969010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5969111Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5969182Z        ...
2025-01-10T13:49:05.5969257Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5969377Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5969472Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5970029Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5970034Z 
2025-01-10T13:49:05.5970150Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5970253Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5970317Z        ...
2025-01-10T13:49:05.5970401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5970521Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5970733Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5970803Z        ...
2025-01-10T13:49:05.5970879Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5970998Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5971089Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5971609Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5971613Z 
2025-01-10T13:49:05.5971732Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5971839Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5971903Z        ...
2025-01-10T13:49:05.5972057Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5972187Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5972299Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5972372Z        ...
2025-01-10T13:49:05.5972451Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5972578Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5972675Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5973214Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5973218Z 
2025-01-10T13:49:05.5973308Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5973783Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5974121Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5974472Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5975009Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5975015Z 
2025-01-10T13:49:05.5975112Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5975477Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5975853Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5976347Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5976858Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5976863Z 
2025-01-10T13:49:05.5976994Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5977100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5977170Z        ...
2025-01-10T13:49:05.5977375Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5977497Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5977611Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5977676Z        ...
2025-01-10T13:49:05.5977758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5977875Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5977974Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5978520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5978525Z 
2025-01-10T13:49:05.5978651Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5978752Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5978823Z        ...
2025-01-10T13:49:05.5978908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5979025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5979140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5979206Z        ...
2025-01-10T13:49:05.5979287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5979402Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5979503Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5980010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5980014Z 
2025-01-10T13:49:05.5980136Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5980236Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5980306Z        ...
2025-01-10T13:49:05.5980389Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5980510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5980621Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5980689Z        ...
2025-01-10T13:49:05.5980770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5980884Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5980987Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5981527Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5981531Z 
2025-01-10T13:49:05.5981654Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5981754Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5981824Z        ...
2025-01-10T13:49:05.5981906Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5982025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5982133Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5982199Z        ...
2025-01-10T13:49:05.5982365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5982481Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5982583Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5983100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5983104Z 
2025-01-10T13:49:05.5983228Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5983330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5983403Z        ...
2025-01-10T13:49:05.5983491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5983716Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5983941Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5984012Z        ...
2025-01-10T13:49:05.5984101Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5984223Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5984328Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5984863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5984868Z 
2025-01-10T13:49:05.5984996Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5985104Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5985175Z        ...
2025-01-10T13:49:05.5985259Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5985375Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5985486Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5985555Z        ...
2025-01-10T13:49:05.5985638Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5985757Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5985858Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5986398Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5986403Z 
2025-01-10T13:49:05.5986499Z Series values are different (4.04858 %)
2025-01-10T13:49:05.5986878Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5987212Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5987547Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.5988089Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.5988096Z 
2025-01-10T13:49:05.5988184Z Series values are different (6.47773 %)
2025-01-10T13:49:05.5988556Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.5989038Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5989477Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.5990000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5990004Z 
2025-01-10T13:49:05.5990133Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5990235Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5990307Z        ...
2025-01-10T13:49:05.5990385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5990510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5990617Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5990689Z        ...
2025-01-10T13:49:05.5990767Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5990891Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5990987Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5991542Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5991547Z 
2025-01-10T13:49:05.5991677Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5991778Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5991849Z        ...
2025-01-10T13:49:05.5991926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5992047Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5992154Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5992225Z        ...
2025-01-10T13:49:05.5992303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5992424Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5992520Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5993045Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5993050Z 
2025-01-10T13:49:05.5993174Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5993274Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5993344Z        ...
2025-01-10T13:49:05.5993422Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5993547Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5993752Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5993826Z        ...
2025-01-10T13:49:05.5993908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5994029Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5994244Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5994796Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5994800Z 
2025-01-10T13:49:05.5994924Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5995023Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5995093Z        ...
2025-01-10T13:49:05.5995170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5995295Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5995399Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5995468Z        ...
2025-01-10T13:49:05.5995648Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5995770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5995869Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5996416Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5996420Z 
2025-01-10T13:49:05.5996544Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5996644Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5996714Z        ...
2025-01-10T13:49:05.5996793Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5996917Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5997019Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5997089Z        ...
2025-01-10T13:49:05.5997167Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5997290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5997385Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5997918Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5997923Z 
2025-01-10T13:49:05.5998043Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5998149Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5998220Z        ...
2025-01-10T13:49:05.5998297Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5998417Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5998520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5998590Z        ...
2025-01-10T13:49:05.5998665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5998791Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.5998886Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.5999420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.5999428Z 
2025-01-10T13:49:05.5999547Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.5999652Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.5999723Z        ...
2025-01-10T13:49:05.5999800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.5999924Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6000028Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6000097Z        ...
2025-01-10T13:49:05.6000173Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6000293Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6000390Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6000935Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6001029Z 
2025-01-10T13:49:05.6001121Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6001491Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6001908Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6002246Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6002785Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6002789Z 
2025-01-10T13:49:05.6002881Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6003249Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6003740Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6004121Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6004639Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6004648Z 
2025-01-10T13:49:05.6004769Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6004879Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6004945Z        ...
2025-01-10T13:49:05.6005027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6005143Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6005253Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6005319Z        ...
2025-01-10T13:49:05.6005401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6005520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6005620Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6006173Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6006296Z 
2025-01-10T13:49:05.6006419Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6006526Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6006593Z        ...
2025-01-10T13:49:05.6006677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6006793Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6006902Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6006967Z        ...
2025-01-10T13:49:05.6007050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6007165Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6007366Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6007889Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6007903Z 
2025-01-10T13:49:05.6008023Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6008128Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6008195Z        ...
2025-01-10T13:49:05.6008275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6008390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6008500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6008565Z        ...
2025-01-10T13:49:05.6008646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6008762Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6008865Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6009411Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6009423Z 
2025-01-10T13:49:05.6009541Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6009647Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6009712Z        ...
2025-01-10T13:49:05.6009794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6009910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6010018Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6010084Z        ...
2025-01-10T13:49:05.6010168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6010281Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6010381Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6010931Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6010944Z 
2025-01-10T13:49:05.6011062Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6011169Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6011234Z        ...
2025-01-10T13:49:05.6011315Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6011433Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6011542Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6011608Z        ...
2025-01-10T13:49:05.6011689Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6011805Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6011904Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6012438Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6012532Z 
2025-01-10T13:49:05.6012652Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6012757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6012826Z        ...
2025-01-10T13:49:05.6012908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6013025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6013132Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6013197Z        ...
2025-01-10T13:49:05.6013279Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6013394Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6013493Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6014227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6014240Z 
2025-01-10T13:49:05.6014365Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6014471Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6014537Z        ...
2025-01-10T13:49:05.6014618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6014733Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6014843Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6014908Z        ...
2025-01-10T13:49:05.6014990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6015107Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6015206Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6015744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6015754Z 
2025-01-10T13:49:05.6015842Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6016216Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6016540Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6016874Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6017416Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6017420Z 
2025-01-10T13:49:05.6017507Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6017876Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6018250Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6018730Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6019320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6019328Z 
2025-01-10T13:49:05.6019454Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6019555Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6019625Z        ...
2025-01-10T13:49:05.6019704Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6019827Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6019930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6020003Z        ...
2025-01-10T13:49:05.6020081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6020201Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6020297Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6020861Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6020866Z 
2025-01-10T13:49:05.6020993Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6021093Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6021163Z        ...
2025-01-10T13:49:05.6021240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6021361Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6021466Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6021537Z        ...
2025-01-10T13:49:05.6021614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6021734Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6021829Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6022353Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6022357Z 
2025-01-10T13:49:05.6022480Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6022585Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6022656Z        ...
2025-01-10T13:49:05.6022732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6022853Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6022958Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6023027Z        ...
2025-01-10T13:49:05.6023104Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6023223Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6023317Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6024012Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6024018Z 
2025-01-10T13:49:05.6024142Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6024393Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6024465Z        ...
2025-01-10T13:49:05.6024542Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6024667Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6024770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6024840Z        ...
2025-01-10T13:49:05.6024917Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6025036Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6025128Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6025681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6025685Z 
2025-01-10T13:49:05.6025926Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6026031Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6026107Z        ...
2025-01-10T13:49:05.6026184Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6026305Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6026410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6026480Z        ...
2025-01-10T13:49:05.6026556Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6026675Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6026771Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6027302Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6027306Z 
2025-01-10T13:49:05.6027432Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6027533Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6027607Z        ...
2025-01-10T13:49:05.6027684Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6027804Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6027906Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6027975Z        ...
2025-01-10T13:49:05.6028053Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6028174Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6028267Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6028803Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6028809Z 
2025-01-10T13:49:05.6028934Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6029038Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6029108Z        ...
2025-01-10T13:49:05.6029188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6029310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6029413Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6029483Z        ...
2025-01-10T13:49:05.6029561Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6029681Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6029775Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6030331Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6030335Z 
2025-01-10T13:49:05.6030428Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6030794Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6031208Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6031611Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6032163Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6032168Z 
2025-01-10T13:49:05.6032262Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6032632Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6033001Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6033378Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6034004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6034010Z 
2025-01-10T13:49:05.6034133Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6034239Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6034308Z        ...
2025-01-10T13:49:05.6034391Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6034508Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6034617Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6034681Z        ...
2025-01-10T13:49:05.6034764Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6034886Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6034980Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6035542Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6035546Z 
2025-01-10T13:49:05.6035665Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6035775Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6035842Z        ...
2025-01-10T13:49:05.6036041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6036161Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6036270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6036335Z        ...
2025-01-10T13:49:05.6036416Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6036537Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6036631Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6037159Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6037163Z 
2025-01-10T13:49:05.6037283Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6037490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6037561Z        ...
2025-01-10T13:49:05.6037642Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6037763Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6037871Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6037937Z        ...
2025-01-10T13:49:05.6038020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6038136Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6038236Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6038793Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6038796Z 
2025-01-10T13:49:05.6038915Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6039021Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6039091Z        ...
2025-01-10T13:49:05.6039173Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6039292Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6039399Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6039464Z        ...
2025-01-10T13:49:05.6039545Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6039663Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6039761Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6040315Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6040319Z 
2025-01-10T13:49:05.6040438Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6040542Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6040608Z        ...
2025-01-10T13:49:05.6040693Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6040809Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6040923Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6040989Z        ...
2025-01-10T13:49:05.6041070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6041186Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6041286Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6041824Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6041828Z 
2025-01-10T13:49:05.6041948Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6042052Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6042119Z        ...
2025-01-10T13:49:05.6042204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6042320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6042515Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6042581Z        ...
2025-01-10T13:49:05.6042666Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6042782Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6042880Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6043457Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6043462Z 
2025-01-10T13:49:05.6043580Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6043799Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6043866Z        ...
2025-01-10T13:49:05.6044062Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6044182Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6044293Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6044363Z        ...
2025-01-10T13:49:05.6044446Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6044567Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6044661Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6045246Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6045251Z 
2025-01-10T13:49:05.6045340Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6045718Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6046051Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6046375Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6046953Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6046960Z 
2025-01-10T13:49:05.6047063Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6047426Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6047803Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6048304Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6048858Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6048863Z 
2025-01-10T13:49:05.6048992Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6049164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6049238Z        ...
2025-01-10T13:49:05.6049316Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6049442Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6049551Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6049618Z        ...
2025-01-10T13:49:05.6049700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6049814Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6049914Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6050503Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6050508Z 
2025-01-10T13:49:05.6050634Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6050734Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6050807Z        ...
2025-01-10T13:49:05.6050890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6051014Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6051122Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6051188Z        ...
2025-01-10T13:49:05.6051270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6051387Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6051487Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6052041Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6052045Z 
2025-01-10T13:49:05.6052170Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6052269Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6052344Z        ...
2025-01-10T13:49:05.6052421Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6052544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6052658Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6052725Z        ...
2025-01-10T13:49:05.6052806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6052920Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6053022Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6053841Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6053846Z 
2025-01-10T13:49:05.6054016Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:49:05.6054388Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6059203Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T13:49:05.6063917Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:49:05.6064106Z At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:49:05.6064737Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6064853Z 
2025-01-10T13:49:05.6064983Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6065091Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6065159Z        ...
2025-01-10T13:49:05.6065245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6065365Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6065475Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6065542Z        ...
2025-01-10T13:49:05.6065626Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6065746Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6065847Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6066553Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6066562Z 
2025-01-10T13:49:05.6066686Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6066792Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6066858Z        ...
2025-01-10T13:49:05.6066940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6067057Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6067173Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6067240Z        ...
2025-01-10T13:49:05.6067327Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6067443Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6067544Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6068135Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6068143Z 
2025-01-10T13:49:05.6068263Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6068369Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6068434Z        ...
2025-01-10T13:49:05.6068516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6068632Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6068740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6068807Z        ...
2025-01-10T13:49:05.6068890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6069006Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6069108Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6069678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6069685Z 
2025-01-10T13:49:05.6069807Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6069912Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6069978Z        ...
2025-01-10T13:49:05.6070059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6070176Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6070286Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6070352Z        ...
2025-01-10T13:49:05.6070435Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6070551Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6070651Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6071210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6071296Z 
2025-01-10T13:49:05.6071418Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6071528Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6071594Z        ...
2025-01-10T13:49:05.6071677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6071792Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6071900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6071965Z        ...
2025-01-10T13:49:05.6072049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6072165Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6072264Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6072923Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6072932Z 
2025-01-10T13:49:05.6073027Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6073398Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6073834Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6074164Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6074754Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6074759Z 
2025-01-10T13:49:05.6074846Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6075218Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6075597Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6075978Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6076509Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6076627Z 
2025-01-10T13:49:05.6076756Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6076859Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6076931Z        ...
2025-01-10T13:49:05.6077013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6077138Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6077242Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6077312Z        ...
2025-01-10T13:49:05.6077394Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6077511Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6077712Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6078285Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6078292Z 
2025-01-10T13:49:05.6078417Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6078519Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6078591Z        ...
2025-01-10T13:49:05.6078669Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6078792Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6078895Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6078968Z        ...
2025-01-10T13:49:05.6079050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6079165Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6079268Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6079810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6079818Z 
2025-01-10T13:49:05.6079943Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6080044Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6080114Z        ...
2025-01-10T13:49:05.6080191Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6080314Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6080415Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6080486Z        ...
2025-01-10T13:49:05.6080569Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6080689Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6080793Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6081471Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6081479Z 
2025-01-10T13:49:05.6081652Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:05.6082016Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6087135Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:49:05.6092152Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:05.6092330Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:05.6092938Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6092943Z 
2025-01-10T13:49:05.6093066Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6093179Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6093245Z        ...
2025-01-10T13:49:05.6093403Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6093523Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6093750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6093820Z        ...
2025-01-10T13:49:05.6093903Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6094021Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6094120Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6094691Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6094695Z 
2025-01-10T13:49:05.6094815Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6095050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6095121Z        ...
2025-01-10T13:49:05.6095208Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6095328Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6095434Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6095499Z        ...
2025-01-10T13:49:05.6095581Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6095696Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6095798Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6096368Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6096373Z 
2025-01-10T13:49:05.6096493Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6096604Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6096672Z        ...
2025-01-10T13:49:05.6096755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6096875Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6096982Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6097047Z        ...
2025-01-10T13:49:05.6097131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6097247Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6097345Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6097897Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6097901Z 
2025-01-10T13:49:05.6098019Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6098127Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6098193Z        ...
2025-01-10T13:49:05.6098275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6098395Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6098503Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6098569Z        ...
2025-01-10T13:49:05.6098652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6098768Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6098868Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6099349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6099354Z 
2025-01-10T13:49:05.6099473Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6099589Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6099656Z        ...
2025-01-10T13:49:05.6099742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6099860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6100089Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6100158Z        ...
2025-01-10T13:49:05.6100241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6100358Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6100461Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6100958Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6100962Z 
2025-01-10T13:49:05.6101054Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6101516Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6101855Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6102185Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6102683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6102693Z 
2025-01-10T13:49:05.6102782Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6103153Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6103532Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6104044Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6104508Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6104512Z 
2025-01-10T13:49:05.6104639Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6104741Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6104822Z        ...
2025-01-10T13:49:05.6104901Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6105024Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6105246Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6105319Z        ...
2025-01-10T13:49:05.6105405Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6105522Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6105624Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6106128Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6106132Z 
2025-01-10T13:49:05.6106258Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6106358Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6106429Z        ...
2025-01-10T13:49:05.6106605Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6106733Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6106842Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6106914Z        ...
2025-01-10T13:49:05.6106998Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6107112Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6107213Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6107678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6107683Z 
2025-01-10T13:49:05.6107808Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6107910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6107982Z        ...
2025-01-10T13:49:05.6108059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6108184Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6108287Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6108364Z        ...
2025-01-10T13:49:05.6108442Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6108564Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6108666Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6109263Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6109268Z 
2025-01-10T13:49:05.6109436Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:05.6109803Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6114916Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T13:49:05.6119936Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:05.6120119Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:05.6120652Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6120661Z 
2025-01-10T13:49:05.6126831Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6126971Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6127046Z        ...
2025-01-10T13:49:05.6127134Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6127277Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6127394Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6127461Z        ...
2025-01-10T13:49:05.6127547Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6127664Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6127782Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6128313Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6128526Z 
2025-01-10T13:49:05.6128667Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6128774Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6128848Z        ...
2025-01-10T13:49:05.6128929Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6129055Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6129167Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6129234Z        ...
2025-01-10T13:49:05.6129317Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6129433Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6129534Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6130137Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6130147Z 
2025-01-10T13:49:05.6130279Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6130384Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6130456Z        ...
2025-01-10T13:49:05.6130534Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6130657Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6130765Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6130830Z        ...
2025-01-10T13:49:05.6130911Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6131025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6131125Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6131605Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6131612Z 
2025-01-10T13:49:05.6131738Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6131838Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6131908Z        ...
2025-01-10T13:49:05.6131985Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6132106Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6132215Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6132280Z        ...
2025-01-10T13:49:05.6132361Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6132475Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6132574Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6133063Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6133068Z 
2025-01-10T13:49:05.6133201Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6133303Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6133376Z        ...
2025-01-10T13:49:05.6133453Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6133576Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6133814Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6133880Z        ...
2025-01-10T13:49:05.6133959Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6134075Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6134175Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6134687Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6134691Z 
2025-01-10T13:49:05.6134788Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6135329Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6135666Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6136098Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6136633Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6136638Z 
2025-01-10T13:49:05.6136727Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6137099Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6137468Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6137844Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6138330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6138335Z 
2025-01-10T13:49:05.6138459Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6138568Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6138638Z        ...
2025-01-10T13:49:05.6138716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6138844Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6138951Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6139021Z        ...
2025-01-10T13:49:05.6139099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6139222Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6139320Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6139844Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6139848Z 
2025-01-10T13:49:05.6139968Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6140157Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6140228Z        ...
2025-01-10T13:49:05.6140304Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6140424Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6140528Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6140599Z        ...
2025-01-10T13:49:05.6140676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6140798Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6140893Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6141374Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6141451Z 
2025-01-10T13:49:05.6141574Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6141684Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6141757Z        ...
2025-01-10T13:49:05.6141835Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6141957Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6142061Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6142131Z        ...
2025-01-10T13:49:05.6142206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6142325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6142419Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6142932Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6142936Z 
2025-01-10T13:49:05.6143059Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6143163Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6143231Z        ...
2025-01-10T13:49:05.6143312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6143431Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6143535Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6143722Z        ...
2025-01-10T13:49:05.6143800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6143921Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6144013Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6144520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6144525Z 
2025-01-10T13:49:05.6144646Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6144750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6144815Z        ...
2025-01-10T13:49:05.6144904Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6145025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6145127Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6145197Z        ...
2025-01-10T13:49:05.6145272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6145391Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6145486Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6145991Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6145996Z 
2025-01-10T13:49:05.6146120Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6146234Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6146300Z        ...
2025-01-10T13:49:05.6146384Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6146628Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6146733Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6146804Z        ...
2025-01-10T13:49:05.6146881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6147003Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6147100Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6147588Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6147592Z 
2025-01-10T13:49:05.6147712Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6147819Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6147988Z        ...
2025-01-10T13:49:05.6148074Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6148197Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6148305Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6148376Z        ...
2025-01-10T13:49:05.6148452Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6148574Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6148670Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6149166Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6149171Z 
2025-01-10T13:49:05.6149261Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6149633Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6149968Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6150295Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6150793Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6150799Z 
2025-01-10T13:49:05.6150892Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6151250Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6151620Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6152071Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6152535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6152539Z 
2025-01-10T13:49:05.6152662Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6152769Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6152907Z        ...
2025-01-10T13:49:05.6152992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6153119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6153229Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6153295Z        ...
2025-01-10T13:49:05.6153379Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6153495Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6153705Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6154231Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6154235Z 
2025-01-10T13:49:05.6154361Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6154468Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6154534Z        ...
2025-01-10T13:49:05.6154624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6154742Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6154856Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6154922Z        ...
2025-01-10T13:49:05.6155004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6155117Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6155216Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6155681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6155686Z 
2025-01-10T13:49:05.6155809Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6155915Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6155980Z        ...
2025-01-10T13:49:05.6156061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6156177Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6156285Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6156353Z        ...
2025-01-10T13:49:05.6156435Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6156546Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6156646Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6157144Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6157148Z 
2025-01-10T13:49:05.6157271Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6157373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6157452Z        ...
2025-01-10T13:49:05.6157534Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6157651Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6157758Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6157976Z        ...
2025-01-10T13:49:05.6158059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6158172Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6158270Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6158770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6158774Z 
2025-01-10T13:49:05.6158896Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6158995Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6159066Z        ...
2025-01-10T13:49:05.6159147Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6159260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6159469Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6159537Z        ...
2025-01-10T13:49:05.6159625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6159741Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6159840Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6160321Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6160326Z 
2025-01-10T13:49:05.6160447Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6160546Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6160618Z        ...
2025-01-10T13:49:05.6160700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6160815Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6160926Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6160992Z        ...
2025-01-10T13:49:05.6161073Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6161190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6161288Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6161802Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6161806Z 
2025-01-10T13:49:05.6161930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6162030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6162100Z        ...
2025-01-10T13:49:05.6162182Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6162295Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6162401Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6162471Z        ...
2025-01-10T13:49:05.6162552Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6162668Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6162769Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6163298Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6163303Z 
2025-01-10T13:49:05.6163398Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6163880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6164208Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6164689Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6165224Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6165229Z 
2025-01-10T13:49:05.6165413Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6165780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6166152Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6166524Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6167030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6167035Z 
2025-01-10T13:49:05.6167159Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6167259Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6167339Z        ...
2025-01-10T13:49:05.6167417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6167539Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6167641Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6167715Z        ...
2025-01-10T13:49:05.6167794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6167918Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6168012Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6168560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6168564Z 
2025-01-10T13:49:05.6168687Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6168789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6168859Z        ...
2025-01-10T13:49:05.6168936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6169056Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6169158Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6169231Z        ...
2025-01-10T13:49:05.6169311Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6169432Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6169614Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6170120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6170124Z 
2025-01-10T13:49:05.6170248Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6170349Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6170419Z        ...
2025-01-10T13:49:05.6170495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6170615Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6170718Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6170796Z        ...
2025-01-10T13:49:05.6170947Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6171074Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6171172Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6171712Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6171716Z 
2025-01-10T13:49:05.6171839Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6171938Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6172009Z        ...
2025-01-10T13:49:05.6172084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6172207Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6172310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6172381Z        ...
2025-01-10T13:49:05.6172456Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6172579Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6172673Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6173219Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6173224Z 
2025-01-10T13:49:05.6173347Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6173448Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6173518Z        ...
2025-01-10T13:49:05.6173708Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6173833Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6173936Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6174006Z        ...
2025-01-10T13:49:05.6174082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6174206Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6174301Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6174853Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6174861Z 
2025-01-10T13:49:05.6174985Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6175085Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6175154Z        ...
2025-01-10T13:49:05.6175230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6175350Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6175452Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6175526Z        ...
2025-01-10T13:49:05.6175601Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6175723Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6175821Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6176404Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6176527Z 
2025-01-10T13:49:05.6176656Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6176757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6176826Z        ...
2025-01-10T13:49:05.6176903Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6177023Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6177125Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6177197Z        ...
2025-01-10T13:49:05.6177272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6177391Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6177606Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6178201Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6178209Z 
2025-01-10T13:49:05.6178302Z Series values are different (4.04858 %)
2025-01-10T13:49:05.6178665Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6178996Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6179329Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:05.6179920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:05.6179924Z 
2025-01-10T13:49:05.6180017Z Series values are different (6.47773 %)
2025-01-10T13:49:05.6180386Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6180753Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6181128Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:05.6181773Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6181778Z 
2025-01-10T13:49:05.6181898Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6182009Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6182075Z        ...
2025-01-10T13:49:05.6182158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6182277Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6182386Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6182451Z        ...
2025-01-10T13:49:05.6182534Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6182729Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6182826Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6183438Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6183446Z 
2025-01-10T13:49:05.6183564Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6183776Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6183844Z        ...
2025-01-10T13:49:05.6183926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6184042Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6184149Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6184214Z        ...
2025-01-10T13:49:05.6184297Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6184421Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6184519Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6185090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6185098Z 
2025-01-10T13:49:05.6185216Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6185325Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6185391Z        ...
2025-01-10T13:49:05.6185471Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6185588Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6185696Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6185761Z        ...
2025-01-10T13:49:05.6185841Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6185960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6186058Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6186668Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6186676Z 
2025-01-10T13:49:05.6186794Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6186901Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6186966Z        ...
2025-01-10T13:49:05.6187050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6187163Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6187271Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6187337Z        ...
2025-01-10T13:49:05.6187419Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6187540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6187637Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6188241Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6188372Z 
2025-01-10T13:49:05.6188493Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6188599Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6188663Z        ...
2025-01-10T13:49:05.6188744Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6188857Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6188962Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6189033Z        ...
2025-01-10T13:49:05.6189109Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6189229Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6189325Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6190014Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:05.6190022Z 
2025-01-10T13:49:05.6190143Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:05.6190252Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6190317Z        ...
2025-01-10T13:49:05.6190398Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6190514Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6190620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6190693Z        ...
2025-01-10T13:49:05.6190770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:05.6190889Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:05.6190985Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:05.6191298Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-10T13:49:05.6191394Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6191400Z 
2025-01-10T13:49:05.6191500Z Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:49:05.6191605Z Max absolute difference among violations: 1.
2025-01-10T13:49:05.6191711Z Max relative difference among violations: 1.
2025-01-10T13:49:05.6191851Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.6191959Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.6192063Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:05.6192203Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.6192303Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:05.6192401Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:05.6192695Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-10T13:49:05.6192792Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6192796Z 
2025-01-10T13:49:05.6192889Z Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:49:05.6192997Z Max absolute difference among violations: 4005
2025-01-10T13:49:05.6193125Z Max relative difference among violations: 26.00649351
2025-01-10T13:49:05.6193242Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:05.6193367Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:05.6193772Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-10T13:49:05.6193869Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6193873Z 
2025-01-10T13:49:05.6193965Z Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:49:05.6194075Z Max absolute difference among violations: 4046
2025-01-10T13:49:05.6194204Z Max relative difference among violations: 24.82208589
2025-01-10T13:49:05.6194434Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:05.6194554Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:05.6194814Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-10T13:49:05.6194912Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6194916Z 
2025-01-10T13:49:05.6195012Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:05.6195133Z Max absolute difference among violations: 0.99984222
2025-01-10T13:49:05.6195260Z Max relative difference among violations: 6337.12154973
2025-01-10T13:49:05.6195352Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.6195434Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.6195510Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.6195710Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.6195786Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:05.6195863Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:05.6196105Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-10T13:49:05.6196202Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6196206Z 
2025-01-10T13:49:05.6196296Z Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:49:05.6196432Z Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:49:05.6196557Z Max relative difference among violations: 18196.0085861
2025-01-10T13:49:05.6196721Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:05.6196801Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:49:05.6196937Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:05.6197103Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:05.6197183Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:49:05.6197314Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:05.6197553Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-10T13:49:05.6197651Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6197655Z 
2025-01-10T13:49:05.6197743Z Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:49:05.6197870Z Max absolute difference among violations: 2.92713618
2025-01-10T13:49:05.6197996Z Max relative difference among violations: 18196.0085861
2025-01-10T13:49:05.6198153Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:05.6198233Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:49:05.6198392Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:05.6198471Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:49:05.6198731Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-10T13:49:05.6198829Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6198837Z 
2025-01-10T13:49:05.6198927Z Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:49:05.6199060Z Max absolute difference among violations: 282815.33818472
2025-01-10T13:49:05.6199187Z Max relative difference among violations: 4.12352828e+47
2025-01-10T13:49:05.6199348Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:05.6199427Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:49:05.6199556Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:05.6199720Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:05.6199793Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:49:05.6199923Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:05.6200412Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6200505Z 
2025-01-10T13:49:05.6200672Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.6200744Z [index]: [0, 1]
2025-01-10T13:49:05.6200848Z [left]:  [0.40039163797855976, 0.45013644671958974]
2025-01-10T13:49:05.6200956Z [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:49:05.6201123Z At positional index 1, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:49:05.6201615Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6201619Z 
2025-01-10T13:49:05.6201773Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.6201847Z [index]: [0, 1]
2025-01-10T13:49:05.6201938Z [left]:  [9967.488442185557, 10090.925208074616]
2025-01-10T13:49:05.6202124Z [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:49:05.6202289Z At positional index 1, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:49:05.6202829Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:05.6202833Z 
2025-01-10T13:49:05.6202991Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:05.6203061Z [index]: [0, 1]
2025-01-10T13:49:05.6203155Z [left]:  [2869544645.3209715, 2880986026.9779425]
2025-01-10T13:49:05.6203246Z [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:49:05.6203411Z At positional index 1, first diff: 2880986026.9779425 != 2881024886.0882792
2025-01-10T13:49:05.6203883Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-10T13:49:05.6203888Z 
2025-01-10T13:49:05.6203986Z Series values are different (100.0 %)
2025-01-10T13:49:05.6204108Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.6205306Z [left]:  [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-10T13:49:05.6206516Z [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:49:05.6206708Z At positional index 0, first diff: 1.0190851489144414e+29 != 1.0202042777991753e+29
2025-01-10T13:49:05.6207072Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-10T13:49:05.6207077Z 
2025-01-10T13:49:05.6207169Z Series values are different (100.0 %)
2025-01-10T13:49:05.6207290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.6208267Z [left]:  [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-10T13:49:05.6209218Z [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:49:05.6209499Z At positional index 0, first diff: 116548101693134.0 != 116635492761989.08
2025-01-10T13:49:05.6209858Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-10T13:49:05.6209862Z 
2025-01-10T13:49:05.6209946Z Series values are different (90.0 %)
2025-01-10T13:49:05.6210066Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.6211162Z [left]:  [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-10T13:49:05.6212177Z [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:49:05.6212343Z At positional index 0, first diff: 10090.925208074616 != 10091.396322818851
2025-01-10T13:49:05.6212708Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-10T13:49:05.6212713Z 
2025-01-10T13:49:05.6212806Z Series values are different (95.0 %)
2025-01-10T13:49:05.6212919Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:05.6214118Z [left]:  [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-10T13:49:05.6215199Z [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:49:05.6215362Z At positional index 0, first diff: 0.45013644671958974 != 0.4500690173218345
2025-01-10T13:49:05.6215721Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-10T13:49:05.6215725Z 
2025-01-10T13:49:05.6215818Z Series values are different (5.1125 %)
2025-01-10T13:49:05.6216187Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6221476Z [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:49:05.6226820Z [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:49:05.6227000Z At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:49:05.6227375Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-10T13:49:05.6227380Z 
2025-01-10T13:49:05.6227481Z Series values are different (1.3025 %)
2025-01-10T13:49:05.6227850Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:05.6234562Z [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:05.6240954Z [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:05.6241267Z At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:49:05.6241626Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-10T13:49:05.6241725Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6241729Z 
2025-01-10T13:49:05.6241817Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:05.6241955Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:05.6242058Z Max relative difference among violations: 1.
2025-01-10T13:49:05.6242225Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6242302Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6242473Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6242553Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6242942Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-10T13:49:05.6243041Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6243044Z 
2025-01-10T13:49:05.6243131Z Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:49:05.6243262Z Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:49:05.6243383Z Max relative difference among violations: 1.03027212
2025-01-10T13:49:05.6243545Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6243718Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6243882Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6243954Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6244260Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-10T13:49:05.6244361Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6244365Z 
2025-01-10T13:49:05.6244451Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:05.6244580Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:05.6244681Z Max relative difference among violations: 1.
2025-01-10T13:49:05.6244839Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6244910Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6245070Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6245142Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6245433Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-10T13:49:05.6245524Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6245536Z 
2025-01-10T13:49:05.6245630Z Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:49:05.6245762Z Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:49:05.6246012Z Max relative difference among violations: 8.78746214
2025-01-10T13:49:05.6246113Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6246188Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6246271Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6246369Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6246446Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6246519Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6246783Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-10T13:49:05.6246878Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6246887Z 
2025-01-10T13:49:05.6246974Z Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:49:05.6247204Z Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:49:05.6247325Z Max relative difference among violations: 5.17890748
2025-01-10T13:49:05.6247490Z  ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6247564Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6247725Z  DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6247796Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6248084Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-10T13:49:05.6248176Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6248180Z 
2025-01-10T13:49:05.6248273Z Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:49:05.6248394Z Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:49:05.6248521Z Max relative difference among violations: 23978.84555943
2025-01-10T13:49:05.6248681Z  ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6248752Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6248912Z  DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6248987Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6249440Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-10T13:49:05.6249531Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6249535Z 
2025-01-10T13:49:05.6249635Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:05.6249760Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:05.6249885Z Max relative difference among violations: 8.35741234
2025-01-10T13:49:05.6249981Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6250054Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6250134Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6250231Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6250309Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6250382Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6250812Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-10T13:49:05.6250903Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6250907Z 
2025-01-10T13:49:05.6250999Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:05.6251123Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:05.6251244Z Max relative difference among violations: 5.83764686
2025-01-10T13:49:05.6251397Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6251475Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6251637Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6251713Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6252166Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-10T13:49:05.6252343Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6252347Z 
2025-01-10T13:49:05.6252440Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.6252565Z Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:49:05.6252693Z Max relative difference among violations: 6.79985816
2025-01-10T13:49:05.6252847Z  ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:49:05.6252926Z        2.292907e+31, 2.257206e+31])
2025-01-10T13:49:05.6253085Z  DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:49:05.6253157Z        2.279436e+31, 2.243943e+31])
2025-01-10T13:49:05.6253815Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-10T13:49:05.6253916Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6253921Z 
2025-01-10T13:49:05.6254021Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:05.6254145Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:05.6254265Z Max relative difference among violations: 4.08461732
2025-01-10T13:49:05.6254356Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6254434Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6254507Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6254604Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6254678Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6254759Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6255178Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-10T13:49:05.6255273Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6255277Z 
2025-01-10T13:49:05.6255372Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:05.6255496Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:05.6255621Z Max relative difference among violations: 3.08310014
2025-01-10T13:49:05.6255775Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6255851Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6256005Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6256084Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6256529Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-10T13:49:05.6256619Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6256623Z 
2025-01-10T13:49:05.6256714Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.6256840Z Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:49:05.6256960Z Max relative difference among violations: 96.4428449
2025-01-10T13:49:05.6257116Z  ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:49:05.6257194Z        1.375141e+31, 1.337928e+31])
2025-01-10T13:49:05.6257351Z  DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:49:05.6257427Z        1.330497e+31, 1.294462e+31])
2025-01-10T13:49:05.6257862Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-10T13:49:05.6257963Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6257967Z 
2025-01-10T13:49:05.6258067Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:05.6258191Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:05.6258309Z Max relative difference among violations: 4.08461732
2025-01-10T13:49:05.6258404Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6258483Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6258557Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6258772Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6258844Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6258921Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6259333Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-10T13:49:05.6259429Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6259433Z 
2025-01-10T13:49:05.6259522Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:05.6259645Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:05.6259765Z Max relative difference among violations: 3.08310014
2025-01-10T13:49:05.6259922Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6260074Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6260233Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6260313Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6260754Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-10T13:49:05.6260852Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6260855Z 
2025-01-10T13:49:05.6260947Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.6261071Z Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:49:05.6261199Z Max relative difference among violations: 98.22574798
2025-01-10T13:49:05.6261353Z  ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:49:05.6261429Z        1.193005e+31, 1.164854e+31])
2025-01-10T13:49:05.6261585Z  DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:49:05.6261667Z        1.260980e+31, 1.222587e+31])
2025-01-10T13:49:05.6262100Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-10T13:49:05.6262202Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6262206Z 
2025-01-10T13:49:05.6262296Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:05.6262425Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:05.6262546Z Max relative difference among violations: 8.35741234
2025-01-10T13:49:05.6262637Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6262714Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6262787Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6262885Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6262957Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:05.6263034Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:05.6263455Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-10T13:49:05.6263557Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6263562Z 
2025-01-10T13:49:05.6263781Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:05.6263914Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:05.6264039Z Max relative difference among violations: 5.83764686
2025-01-10T13:49:05.6264192Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6264271Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6264426Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:05.6264504Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6264948Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-10T13:49:05.6265048Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6265052Z 
2025-01-10T13:49:05.6265137Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:05.6265402Z Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:49:05.6265519Z Max relative difference among violations: 5.96359613
2025-01-10T13:49:05.6265677Z  ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:49:05.6265755Z        2.124305e+31, 2.101081e+31])
2025-01-10T13:49:05.6265910Z  DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:49:05.6265986Z        2.088676e+31, 2.060278e+31])
2025-01-10T13:49:05.6266327Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-10T13:49:05.6266428Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:49:05.6266432Z 
2025-01-10T13:49:05.6266513Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:05.6266752Z Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:49:05.6266872Z Max relative difference among violations: 0.00054397
2025-01-10T13:49:05.6267030Z  ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:49:05.6267145Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:49:05.6267271Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:49:05.6267425Z  DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:49:05.6267534Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:49:05.6267653Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:49:05.6268032Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-10T13:49:05.6268140Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:49:05.6268143Z 
2025-01-10T13:49:05.6268226Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:05.6268358Z Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:49:05.6268474Z Max relative difference among violations: 0.00029157
2025-01-10T13:49:05.6268630Z  ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:49:05.6268742Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:49:05.6268856Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:49:05.6269007Z  DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:49:05.6269111Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:49:05.6269228Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:49:05.6269558Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-01-10T13:49:05.6269640Z Arrays are not equal
2025-01-10T13:49:05.6269644Z 
2025-01-10T13:49:05.6269732Z (shapes (4000, 62), (4000, 64) mismatch)
2025-01-10T13:49:05.6269879Z  ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:05.6269959Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:05.6270062Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:05.6270208Z  DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:05.6270284Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:05.6270383Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:05.6270801Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-10T13:49:05.6270899Z Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:49:05.6270903Z 
2025-01-10T13:49:05.6270988Z Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:49:05.6271121Z Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:49:05.6271241Z Max relative difference among violations: 2.11614526
2025-01-10T13:49:05.6271418Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:05.6271588Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:05.6271763Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:05.6271843Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:05.6272303Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-10T13:49:05.6272404Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6272408Z 
2025-01-10T13:49:05.6272487Z (shapes (515,), (508,) mismatch)
2025-01-10T13:49:05.6272635Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.6272743Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.6272862Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.6273078Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.6273192Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.6273311Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.6273871Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-10T13:49:05.6273971Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6273975Z 
2025-01-10T13:49:05.6274052Z (shapes (560,), (558,) mismatch)
2025-01-10T13:49:05.6274198Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.6274302Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.6274445Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.6274588Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.6274700Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.6274817Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.6275273Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-10T13:49:05.6275372Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6275375Z 
2025-01-10T13:49:05.6275451Z (shapes (136,), (147,) mismatch)
2025-01-10T13:49:05.6275598Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.6275702Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.6275820Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.6275963Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.6276071Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.6276185Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.6276637Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-10T13:49:05.6276738Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6276742Z 
2025-01-10T13:49:05.6276816Z (shapes (153,), (159,) mismatch)
2025-01-10T13:49:05.6276962Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.6277066Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.6277183Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.6277330Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.6277437Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.6277547Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.6278009Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-10T13:49:05.6278224Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6278227Z 
2025-01-10T13:49:05.6278304Z (shapes (515,), (508,) mismatch)
2025-01-10T13:49:05.6278449Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:05.6278554Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:05.6278669Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:05.6278812Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:05.6278920Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:05.6279031Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:05.6279586Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-10T13:49:05.6279685Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6279692Z 
2025-01-10T13:49:05.6279772Z (shapes (1481,), (1466,) mismatch)
2025-01-10T13:49:05.6279934Z  ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:49:05.6280008Z        11398.237865, 11111.204868])
2025-01-10T13:49:05.6280169Z  DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:49:05.6280239Z        11152.962595, 11172.044815])
2025-01-10T13:49:05.6280690Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-10T13:49:05.6280783Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6280787Z 
2025-01-10T13:49:05.6280868Z (shapes (136,), (147,) mismatch)
2025-01-10T13:49:05.6281012Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:05.6281119Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:05.6281237Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:05.6281384Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:05.6281492Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:05.6281603Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:05.6282051Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-10T13:49:05.6282142Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6282146Z 
2025-01-10T13:49:05.6282231Z (shapes (381,), (379,) mismatch)
2025-01-10T13:49:05.6282370Z  ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:49:05.6282479Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:49:05.6282598Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:49:05.6282741Z  DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:49:05.6282853Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:49:05.6282965Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:49:05.6283389Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-10T13:49:05.6283480Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6283484Z 
2025-01-10T13:49:05.6283573Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6283777Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6283903Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6284056Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6284139Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6284290Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6284483Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6284911Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-10T13:49:05.6285003Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6285007Z 
2025-01-10T13:49:05.6285094Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6285196Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6285319Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6285462Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6285542Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6285689Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6285884Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6286311Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-10T13:49:05.6286402Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6286406Z 
2025-01-10T13:49:05.6286493Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:05.6286592Z Max absolute difference among violations: 24
2025-01-10T13:49:05.6286702Z Max relative difference among violations: 0.65
2025-01-10T13:49:05.6286847Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:05.6286928Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.6287081Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.6287154Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.6287578Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-10T13:49:05.6287666Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6287670Z 
2025-01-10T13:49:05.6287759Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6287859Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6287981Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6288119Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6288197Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6288341Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6288420Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6288838Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-10T13:49:05.6288925Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6288929Z 
2025-01-10T13:49:05.6289019Z Mismatched elements: 2 / 40 (5%)
2025-01-10T13:49:05.6289120Z Max absolute difference among violations: 4.
2025-01-10T13:49:05.6289241Z Max relative difference among violations: 1.33333333
2025-01-10T13:49:05.6289326Z  ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:05.6289405Z        [1.19e+04, 9.00e+00],
2025-01-10T13:49:05.6289478Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:49:05.6289566Z  DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:49:05.6289638Z        [1.19e+04, 1.10e+01],
2025-01-10T13:49:05.6289717Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:49:05.6290131Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:49:05.6290222Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6290226Z 
2025-01-10T13:49:05.6290312Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6290411Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6290539Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6290678Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6290859Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6291000Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6291080Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6291496Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:49:05.6291588Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6291592Z 
2025-01-10T13:49:05.6291677Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6291778Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6291899Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6292038Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6292191Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6292338Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6292419Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6292834Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:49:05.6292928Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6292932Z 
2025-01-10T13:49:05.6293011Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:05.6293116Z Max absolute difference among violations: 24
2025-01-10T13:49:05.6293226Z Max relative difference among violations: 0.65
2025-01-10T13:49:05.6293370Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:05.6293449Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.6293696Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:05.6293780Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:05.6294192Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:49:05.6294289Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6294293Z 
2025-01-10T13:49:05.6294374Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6294483Z Max absolute difference among violations: 26
2025-01-10T13:49:05.6294598Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:05.6294743Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:05.6294824Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:05.6294964Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:05.6295042Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:05.6295453Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:49:05.6295546Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:05.6295554Z 
2025-01-10T13:49:05.6295636Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:05.6295741Z Max absolute difference among violations: 4
2025-01-10T13:49:05.6295857Z Max relative difference among violations: 1.33333333
2025-01-10T13:49:05.6295997Z  ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:49:05.6296146Z  DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:05.6296216Z         0,  0,  0])
2025-01-10T13:49:05.6296692Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-10T13:49:05.6296785Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6296789Z 
2025-01-10T13:49:05.6296877Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6297006Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.6297126Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6297402Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6297482Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6297638Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6297718Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6298191Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-10T13:49:05.6298283Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6298287Z 
2025-01-10T13:49:05.6298375Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6298496Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.6298618Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6298938Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6299019Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6299178Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6299255Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6299721Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-10T13:49:05.6299813Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6299816Z 
2025-01-10T13:49:05.6299905Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6300027Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.6300147Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6300297Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6300374Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6300532Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6300609Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6301075Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-10T13:49:05.6301171Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6301175Z 
2025-01-10T13:49:05.6301263Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6301384Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:05.6301508Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6301658Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6301734Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6301888Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6301967Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6302426Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-10T13:49:05.6302538Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6302542Z 
2025-01-10T13:49:05.6302634Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6302765Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.6302898Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6303053Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6303132Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6303289Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6303370Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6303976Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-10T13:49:05.6304076Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6304197Z 
2025-01-10T13:49:05.6304286Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6304419Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.6304552Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6304706Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6304789Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6304945Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6305027Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6305492Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-10T13:49:05.6305589Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6305593Z 
2025-01-10T13:49:05.6305782Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6305914Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.6306048Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6306200Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6306276Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6306429Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6306508Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6306972Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-10T13:49:05.6307068Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6307071Z 
2025-01-10T13:49:05.6307155Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6307288Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:05.6307414Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6307570Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6307657Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6307812Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:05.6307889Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6308348Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-10T13:49:05.6308445Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6308449Z 
2025-01-10T13:49:05.6308534Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6308660Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.6308776Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6308942Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6309014Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6309178Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6309259Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6309721Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-10T13:49:05.6309817Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6309821Z 
2025-01-10T13:49:05.6309906Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6310032Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.6310149Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6310310Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6310382Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6310546Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6310624Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6311224Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-10T13:49:05.6311322Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6311326Z 
2025-01-10T13:49:05.6311409Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6311534Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.6311650Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6311812Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6311886Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6312048Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6312120Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6312685Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-10T13:49:05.6312788Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6312792Z 
2025-01-10T13:49:05.6312875Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:05.6313002Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:05.6313117Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:05.6313278Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6313349Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6313509Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6313580Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6314154Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-10T13:49:05.6314256Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6314261Z 
2025-01-10T13:49:05.6314346Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6314482Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.6314605Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6314764Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6314836Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6314995Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6315067Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6315541Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-10T13:49:05.6315633Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6315644Z 
2025-01-10T13:49:05.6315730Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6315858Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.6315980Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6316147Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6316219Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6316382Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6316454Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6316929Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-10T13:49:05.6317021Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6317025Z 
2025-01-10T13:49:05.6317119Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6317249Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.6317374Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6317533Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6317730Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6317892Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6317963Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6318436Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-10T13:49:05.6318527Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6318530Z 
2025-01-10T13:49:05.6318622Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:05.6318748Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:05.6318883Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:05.6319044Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6319223Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6319389Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:05.6319465Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6319903Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:49:05.6319994Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6319998Z 
2025-01-10T13:49:05.6320086Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6320211Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.6320330Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6320488Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6320564Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6320724Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6320798Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6321230Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:49:05.6321324Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6321328Z 
2025-01-10T13:49:05.6321419Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6321543Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.6321664Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6321817Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6321894Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6322055Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6322127Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6322561Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-10T13:49:05.6322657Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6322663Z 
2025-01-10T13:49:05.6322751Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6322873Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.6322992Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6323145Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6323220Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6323376Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6323454Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6323980Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-10T13:49:05.6324072Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6324076Z 
2025-01-10T13:49:05.6324172Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6324296Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:05.6324535Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6324691Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6324768Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6324924Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6325002Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6325421Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:49:05.6325520Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6325523Z 
2025-01-10T13:49:05.6325616Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6325739Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.6325969Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.6326124Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6326206Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6326360Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6326442Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6326863Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:49:05.6326961Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6326964Z 
2025-01-10T13:49:05.6327056Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6327179Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.6327309Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.6327462Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6327541Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6327696Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6327778Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6328197Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-10T13:49:05.6328298Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6328302Z 
2025-01-10T13:49:05.6328386Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6328519Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.6328647Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.6328801Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6328882Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6329042Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6329123Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6329543Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:49:05.6329646Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6329649Z 
2025-01-10T13:49:05.6329735Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6329868Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:05.6329997Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:05.6330151Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6330230Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6330386Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:05.6330466Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6330891Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-10T13:49:05.6330990Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6331076Z 
2025-01-10T13:49:05.6331165Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6331296Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.6331413Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6331574Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6331651Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6331808Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6331885Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6332302Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-10T13:49:05.6332400Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6332481Z 
2025-01-10T13:49:05.6332567Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6332697Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.6332816Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6332976Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6333048Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6333209Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6333285Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6333832Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-10T13:49:05.6333933Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6333937Z 
2025-01-10T13:49:05.6334021Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6334148Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.6334266Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6334428Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6334502Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6334662Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6334736Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6335170Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-10T13:49:05.6335270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6335273Z 
2025-01-10T13:49:05.6335354Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:05.6335482Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:05.6335597Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:05.6335760Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6335833Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6335994Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6336069Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6336495Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-10T13:49:05.6336594Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6336597Z 
2025-01-10T13:49:05.6336681Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6336807Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.6336931Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.6337091Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6337162Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6337326Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6337399Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6337831Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-10T13:49:05.6338064Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6338073Z 
2025-01-10T13:49:05.6338159Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6338288Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.6338408Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.6338567Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6338640Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6338804Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6338876Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6339406Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-10T13:49:05.6339501Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6339513Z 
2025-01-10T13:49:05.6339603Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6339731Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.6339850Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.6340013Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6340085Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6340245Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6340321Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6340746Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-10T13:49:05.6340841Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:05.6340845Z 
2025-01-10T13:49:05.6340935Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:05.6341062Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:05.6341186Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:05.6341345Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6341417Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6341581Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:05.6341653Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:05.6341932Z = 275 failed, 1163 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 251 warnings in 757.08s (0:12:37) =
2025-01-10T13:49:07.8934323Z ##[error]Process completed with exit code 1.
2025-01-10T13:49:07.9015035Z Post job cleanup.
2025-01-10T13:49:07.9046032Z Post job cleanup.
2025-01-10T13:49:08.0426606Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-10T13:49:08.0433031Z Removing micromamba run shell ...
2025-01-10T13:49:08.0437046Z ##[group]Deinitialize micromamba for bash
2025-01-10T13:49:08.0457993Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:49:08.0566376Z Resetting RC file "/home/runner/.bashrc"
2025-01-10T13:49:08.0566966Z Deleting config for root prefix 
2025-01-10T13:49:08.0567470Z Clearing mamba executable environment variable
2025-01-10T13:49:08.0569241Z Removing the following in your "/home/runner/.bashrc" file
2025-01-10T13:49:08.0569740Z # >>> mamba initialize >>>
2025-01-10T13:49:08.0569974Z ...
2025-01-10T13:49:08.0570150Z # <<< mamba initialize <<<
2025-01-10T13:49:08.0601760Z Removing mamba initialize block from .bash_profile
2025-01-10T13:49:08.0618030Z ##[endgroup]
2025-01-10T13:49:08.0622568Z Removing environment tardis from auto-activate bash ...
2025-01-10T13:49:08.0755691Z Post job cleanup.
2025-01-10T13:49:08.0795059Z Post job cleanup.
2025-01-10T13:49:08.1781651Z [command]/usr/bin/git version
2025-01-10T13:49:08.1818516Z git version 2.47.1
2025-01-10T13:49:08.1861346Z Temporarily overriding HOME='/home/runner/work/_temp/0336e634-a337-4367-ac81-80a1dc56bce9' before making global git config changes
2025-01-10T13:49:08.1862603Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:49:08.1874537Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:49:08.1910177Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:49:08.1947030Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:49:08.2206693Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:49:08.2230829Z http.https://github.com/.extraheader
2025-01-10T13:49:08.2247438Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:49:08.2282534Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:49:08.2663579Z Post job cleanup.
2025-01-10T13:49:08.3638251Z [command]/usr/bin/git version
2025-01-10T13:49:08.3675682Z git version 2.47.1
2025-01-10T13:49:08.3726237Z Temporarily overriding HOME='/home/runner/work/_temp/d9dcc79c-721b-40fc-9d91-5e67f1f5221e' before making global git config changes
2025-01-10T13:49:08.3727366Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:49:08.3731552Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T13:49:08.3767031Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:49:08.3799957Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:49:08.4037419Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:49:08.4058859Z http.https://github.com/.extraheader
2025-01-10T13:49:08.4071558Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:49:08.4102900Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:49:08.4439619Z Cleaning up orphan processes
