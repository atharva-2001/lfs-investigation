2025-01-14T13:08:25.6993386Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-14T13:08:25.6995639Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-14T13:08:25.7033036Z shell: /usr/bin/bash -l {0}
2025-01-14T13:08:25.7033296Z env:
2025-01-14T13:08:25.7033469Z   CACHE_NUMBER: 0
2025-01-14T13:08:25.7034089Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:25.7034734Z   CODECOV_TOKEN: 
2025-01-14T13:08:25.7034952Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-14T13:08:25.7035252Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:25.7035593Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:25.7035963Z ##[endgroup]
2025-01-14T13:08:34.5221078Z ============================= test session starts ==============================
2025-01-14T13:08:34.5222030Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-14T13:08:34.5222580Z rootdir: /home/runner/work/tardis/tardis
2025-01-14T13:08:34.5222982Z configfile: pyproject.toml
2025-01-14T13:08:34.5223485Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-14T13:08:34.5224086Z collected 1796 items / 2 deselected / 1794 selected
2025-01-14T13:08:34.5224390Z 
2025-01-14T13:08:39.7614116Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-14T13:08:42.8644519Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-14T13:08:44.5552433Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-14T13:08:46.3973216Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-14T13:08:46.4065907Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-14T13:08:47.7380503Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-14T13:08:48.0832140Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-14T13:08:48.0848494Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-14T13:08:51.6870212Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-14T13:08:51.7001146Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-14T13:08:51.7276636Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-14T13:09:31.7366808Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-14T13:09:31.7514674Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-14T13:09:31.7630672Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-14T13:09:31.7953870Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-14T13:09:31.8181156Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-14T13:09:32.1396447Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-14T13:09:32.4686186Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-14T13:09:32.4879376Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-14T13:09:32.6846855Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-14T13:09:32.6916782Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-14T13:09:46.5898922Z tardis/model/tests/test_base.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 10%]
2025-01-14T13:09:48.8271231Z EEEEEEEEEEEE                                                             [ 10%]
2025-01-14T13:09:51.9757879Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-14T13:09:52.4001029Z tardis/model/tests/test_density.py EE                                    [ 11%]
2025-01-14T13:09:53.9376508Z tardis/opacities/tests/test_opacity_solver.py EEEEE                      [ 11%]
2025-01-14T13:09:55.2696099Z tardis/opacities/tests/test_opacity_state_numba.py EEEEE                 [ 11%]
2025-01-14T13:09:56.5056853Z tardis/opacities/tests/test_tau_sobolev.py EE                            [ 12%]
2025-01-14T13:09:59.3231121Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-14T13:10:45.4254398Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-14T13:10:57.0253136Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-14T13:10:58.5198563Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-14T13:11:01.5623723Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-14T13:11:03.4091249Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-14T13:11:06.4479128Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-14T13:11:09.4867800Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-14T13:11:10.2864127Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-14T13:11:13.3317747Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-14T13:11:16.3414928Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-14T13:11:19.5353985Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-14T13:11:21.4376153Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-14T13:11:24.9272626Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-14T13:11:28.2417581Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-14T13:11:28.5900032Z ...................s.....s....ssss.......                                [ 60%]
2025-01-14T13:11:37.7038918Z tardis/plasma/tests/test_hdf_plasma.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 62%]
2025-01-14T13:11:39.6713265Z EEEEEE                                                                   [ 62%]
2025-01-14T13:11:39.8085722Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-14T13:14:09.0463541Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-14T13:14:09.0491420Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-14T13:14:33.1257340Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-14T13:14:46.5272521Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-14T13:14:47.2916582Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-14T13:14:53.4168413Z tardis/simulation/tests/test_simulation.py EEEEEEEEEE...                 [ 65%]
2025-01-14T13:14:53.4361018Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-14T13:14:53.9443734Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-14T13:14:53.9520144Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-14T13:14:55.6205226Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-14T13:14:55.6442931Z ..........                                                               [ 69%]
2025-01-14T13:14:55.8233974Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-14T13:14:55.8590941Z .........                                                                [ 72%]
2025-01-14T13:14:59.0132942Z tardis/spectrum/tests/test_spectrum_solver.py EEEE                       [ 72%]
2025-01-14T13:15:05.8925687Z tardis/tests/test_tardis_full.py FEEE                                    [ 72%]
2025-01-14T13:15:18.0494731Z tardis/tests/test_tardis_full_formal_integral.py EEEEEEEEEEEEEEEE        [ 73%]
2025-01-14T13:15:18.1247506Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-14T13:15:22.5361501Z tardis/transport/montecarlo/tests/test_base.py xEEEEEEEEEEEEEEEEEEEEE    [ 77%]
2025-01-14T13:15:25.0179034Z tardis/transport/montecarlo/tests/test_interaction.py EEEEEEE            [ 77%]
2025-01-14T13:15:25.2542174Z tardis/transport/montecarlo/tests/test_macro_atom.py EEEE                [ 77%]
2025-01-14T13:15:25.2722970Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-14T13:15:25.3142407Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-14T13:15:30.2120380Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-14T13:15:30.2190047Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-14T13:15:30.6873204Z tardis/transport/montecarlo/tests/test_numba_interface.py EEEEExE        [ 82%]
2025-01-14T13:15:31.1771114Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-14T13:15:34.8050166Z tardis/transport/montecarlo/tests/test_packet.py .................xxxxxX [ 84%]
2025-01-14T13:15:35.9191029Z XXEEEEEEEEE                                                              [ 84%]
2025-01-14T13:15:35.9479726Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-14T13:15:36.3166198Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-14T13:16:12.4462456Z .FFFF                                                                    [ 85%]
2025-01-14T13:16:19.9623352Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py .FFFEE         [ 85%]
2025-01-14T13:16:20.1322910Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-14T13:16:22.2482812Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-14T13:16:22.9501874Z tardis/transport/montecarlo/tests/test_vpacket.py EExE                   [ 86%]
2025-01-14T13:16:22.9679999Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-14T13:16:25.3853776Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-14T13:16:25.3856144Z                                                                          [ 86%]
2025-01-14T13:16:26.3357444Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-14T13:16:27.7159120Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-14T13:16:30.4476892Z ......                                                                   [ 88%]
2025-01-14T13:16:33.8363104Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-14T13:16:36.0597621Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-14T13:16:37.7585110Z tardis/visualization/tools/tests/test_rpacket_plot.py EEEEEEEEEEEEEEEEEE [ 92%]
2025-01-14T13:16:38.2787863Z EEEE                                                                     [ 92%]
2025-01-14T13:16:42.0562993Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-14T13:16:44.3435707Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-14T13:16:44.7904561Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-14T13:16:44.8644462Z ....                                                                     [ 96%]
2025-01-14T13:16:51.9777467Z tardis/visualization/widgets/tests/test_line_info.py EEEEEEEEEEEEEEEEEEE [ 97%]
2025-01-14T13:17:00.1912373Z EEEEEEEEEEEEEEEEEE                                                       [ 98%]
2025-01-14T13:17:09.0913431Z tardis/visualization/widgets/tests/test_shell_info.py EEEEEEEEEEEEEEEEEE [ 99%]
2025-01-14T13:17:20.8218969Z EEEEEE                                                                   [100%]
2025-01-14T13:17:20.8220916Z 
2025-01-14T13:17:20.8221377Z ==================================== ERRORS ====================================
2025-01-14T13:17:20.8222331Z _________ ERROR at setup of TestModelFromPaper1Config.test_abundances __________
2025-01-14T13:17:20.8222851Z 
2025-01-14T13:17:20.8224117Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8226185Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8226979Z 
2025-01-14T13:17:20.8227161Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8227831Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8228442Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8229100Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8229733Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8230149Z >       sim.run_final()
2025-01-14T13:17:20.8230361Z 
2025-01-14T13:17:20.8230511Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8231163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8232057Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8232819Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8233617Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8234491Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8235380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8235782Z 
2025-01-14T13:17:20.8236489Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8237692Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8238813Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8240022Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8241241Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8242362Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8242879Z 
2025-01-14T13:17:20.8243081Z     def initialize_transport_state(
2025-01-14T13:17:20.8243731Z         self,
2025-01-14T13:17:20.8264572Z         simulation_state,
2025-01-14T13:17:20.8265000Z         opacity_state,
2025-01-14T13:17:20.8265368Z         macro_atom_state,
2025-01-14T13:17:20.8265744Z         plasma,
2025-01-14T13:17:20.8266071Z         no_of_packets,
2025-01-14T13:17:20.8266429Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8266814Z         iteration=0,
2025-01-14T13:17:20.8267462Z     ):
2025-01-14T13:17:20.8267852Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8268400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8268829Z         else:
2025-01-14T13:17:20.8269147Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8269520Z     
2025-01-14T13:17:20.8269917Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8270488Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8270933Z         )
2025-01-14T13:17:20.8271221Z     
2025-01-14T13:17:20.8271810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8272411Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8273030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8273879Z         else:
2025-01-14T13:17:20.8274202Z             continuum_state = None
2025-01-14T13:17:20.8274653Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8275183Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8275683Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8276176Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8276677Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8277168Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8277658Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8278088Z         ).to_numba(
2025-01-14T13:17:20.8278427Z             macro_atom_state,
2025-01-14T13:17:20.8278830Z             self.line_interaction_type,
2025-01-14T13:17:20.8279240Z         )
2025-01-14T13:17:20.8279581Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8280418Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8281177Z         ]
2025-01-14T13:17:20.8282101Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8282823Z 
2025-01-14T13:17:20.8283104Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8283823Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.8284892Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.8286210Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.8287268Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.8288899Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.8290324Z _________ ERROR at setup of TestModelFromPaper1Config.test_velocities __________
2025-01-14T13:17:20.8290828Z 
2025-01-14T13:17:20.8292167Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8294134Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8294937Z 
2025-01-14T13:17:20.8295105Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8295680Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8296284Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8296895Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8297533Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8297948Z >       sim.run_final()
2025-01-14T13:17:20.8298171Z 
2025-01-14T13:17:20.8298314Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8298967Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8299503Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8300080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8300657Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8301243Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8302104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8302463Z 
2025-01-14T13:17:20.8302946Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8303949Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8305064Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8306125Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8307079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8307778Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8308179Z 
2025-01-14T13:17:20.8308329Z     def initialize_transport_state(
2025-01-14T13:17:20.8308730Z         self,
2025-01-14T13:17:20.8309050Z         simulation_state,
2025-01-14T13:17:20.8309412Z         opacity_state,
2025-01-14T13:17:20.8309756Z         macro_atom_state,
2025-01-14T13:17:20.8310097Z         plasma,
2025-01-14T13:17:20.8310404Z         no_of_packets,
2025-01-14T13:17:20.8310748Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8311135Z         iteration=0,
2025-01-14T13:17:20.8311451Z     ):
2025-01-14T13:17:20.8312120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8312671Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8313114Z         else:
2025-01-14T13:17:20.8313440Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8313822Z     
2025-01-14T13:17:20.8314224Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8314778Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8315208Z         )
2025-01-14T13:17:20.8315481Z     
2025-01-14T13:17:20.8315857Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8316426Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8317038Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8317585Z         else:
2025-01-14T13:17:20.8317906Z             continuum_state = None
2025-01-14T13:17:20.8318362Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8318884Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8319393Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8319880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8320381Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8320865Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8321325Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8321918Z         ).to_numba(
2025-01-14T13:17:20.8322242Z             macro_atom_state,
2025-01-14T13:17:20.8322644Z             self.line_interaction_type,
2025-01-14T13:17:20.8323061Z         )
2025-01-14T13:17:20.8323417Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8324241Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8325009Z         ]
2025-01-14T13:17:20.8325724Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8326442Z 
2025-01-14T13:17:20.8326716Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8327457Z __________ ERROR at setup of TestModelFromPaper1Config.test_densities __________
2025-01-14T13:17:20.8328157Z 
2025-01-14T13:17:20.8329307Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8331268Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8332232Z 
2025-01-14T13:17:20.8332397Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8332964Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8333558Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8334365Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8335032Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8335457Z >       sim.run_final()
2025-01-14T13:17:20.8335691Z 
2025-01-14T13:17:20.8335835Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8336260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8336786Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8337356Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8337917Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8338493Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8339500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8339886Z 
2025-01-14T13:17:20.8340350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8341358Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8342443Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8343519Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8344472Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8345169Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8345568Z 
2025-01-14T13:17:20.8345727Z     def initialize_transport_state(
2025-01-14T13:17:20.8346124Z         self,
2025-01-14T13:17:20.8346437Z         simulation_state,
2025-01-14T13:17:20.8346803Z         opacity_state,
2025-01-14T13:17:20.8347148Z         macro_atom_state,
2025-01-14T13:17:20.8347494Z         plasma,
2025-01-14T13:17:20.8347802Z         no_of_packets,
2025-01-14T13:17:20.8348153Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8348547Z         iteration=0,
2025-01-14T13:17:20.8348879Z     ):
2025-01-14T13:17:20.8349265Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8349778Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8350213Z         else:
2025-01-14T13:17:20.8350516Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8350877Z     
2025-01-14T13:17:20.8351260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8351960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8352398Z         )
2025-01-14T13:17:20.8352674Z     
2025-01-14T13:17:20.8353063Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8353649Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8354261Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8354811Z         else:
2025-01-14T13:17:20.8355137Z             continuum_state = None
2025-01-14T13:17:20.8355579Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8356093Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8356586Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8357072Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8357788Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8358273Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8358744Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8359172Z         ).to_numba(
2025-01-14T13:17:20.8359500Z             macro_atom_state,
2025-01-14T13:17:20.8359899Z             self.line_interaction_type,
2025-01-14T13:17:20.8360311Z         )
2025-01-14T13:17:20.8360648Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8361460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8362397Z         ]
2025-01-14T13:17:20.8363112Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8364007Z 
2025-01-14T13:17:20.8364270Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8365035Z _______ ERROR at setup of TestModelFromPaper1Config.test_time_explosion ________
2025-01-14T13:17:20.8365540Z 
2025-01-14T13:17:20.8366707Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8368669Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8369479Z 
2025-01-14T13:17:20.8369644Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8370208Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8370804Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8371436Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8372245Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8372692Z >       sim.run_final()
2025-01-14T13:17:20.8372909Z 
2025-01-14T13:17:20.8373061Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8373487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8374017Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8374579Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8375142Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8375717Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8376333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8376696Z 
2025-01-14T13:17:20.8377172Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8378186Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8379094Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8380149Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8381090Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8381911Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8382312Z 
2025-01-14T13:17:20.8382472Z     def initialize_transport_state(
2025-01-14T13:17:20.8382874Z         self,
2025-01-14T13:17:20.8383191Z         simulation_state,
2025-01-14T13:17:20.8383559Z         opacity_state,
2025-01-14T13:17:20.8383908Z         macro_atom_state,
2025-01-14T13:17:20.8384258Z         plasma,
2025-01-14T13:17:20.8384569Z         no_of_packets,
2025-01-14T13:17:20.8384916Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8385306Z         iteration=0,
2025-01-14T13:17:20.8385625Z     ):
2025-01-14T13:17:20.8385998Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8386534Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8387161Z         else:
2025-01-14T13:17:20.8387474Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8387836Z     
2025-01-14T13:17:20.8388229Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8389113Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8389558Z         )
2025-01-14T13:17:20.8389837Z     
2025-01-14T13:17:20.8390224Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8390804Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8391414Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8392114Z         else:
2025-01-14T13:17:20.8392430Z             continuum_state = None
2025-01-14T13:17:20.8393113Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8393623Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8394121Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8394620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8395136Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8395624Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8396096Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8396519Z         ).to_numba(
2025-01-14T13:17:20.8396836Z             macro_atom_state,
2025-01-14T13:17:20.8397223Z             self.line_interaction_type,
2025-01-14T13:17:20.8397628Z         )
2025-01-14T13:17:20.8397961Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8398783Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8399544Z         ]
2025-01-14T13:17:20.8400268Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8400982Z 
2025-01-14T13:17:20.8401249Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8402174Z _________ ERROR at setup of TestModelFromASCIIDensity.test_velocities __________
2025-01-14T13:17:20.8402680Z 
2025-01-14T13:17:20.8403844Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8405850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8406656Z 
2025-01-14T13:17:20.8406822Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8407388Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8407992Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8408604Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8409224Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8409637Z >       sim.run_final()
2025-01-14T13:17:20.8409854Z 
2025-01-14T13:17:20.8410002Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8410427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8410941Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8411509Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8412233Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8412825Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8413452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8413824Z 
2025-01-14T13:17:20.8414306Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8415310Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8416447Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8417490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8418444Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8419137Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8419536Z 
2025-01-14T13:17:20.8419699Z     def initialize_transport_state(
2025-01-14T13:17:20.8420103Z         self,
2025-01-14T13:17:20.8420399Z         simulation_state,
2025-01-14T13:17:20.8420752Z         opacity_state,
2025-01-14T13:17:20.8421093Z         macro_atom_state,
2025-01-14T13:17:20.8421441Z         plasma,
2025-01-14T13:17:20.8421912Z         no_of_packets,
2025-01-14T13:17:20.8422461Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8422848Z         iteration=0,
2025-01-14T13:17:20.8423172Z     ):
2025-01-14T13:17:20.8423555Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8424099Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8424523Z         else:
2025-01-14T13:17:20.8424832Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8425202Z     
2025-01-14T13:17:20.8425596Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8426149Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8426574Z         )
2025-01-14T13:17:20.8426844Z     
2025-01-14T13:17:20.8427217Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8427791Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8428405Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8428945Z         else:
2025-01-14T13:17:20.8429274Z             continuum_state = None
2025-01-14T13:17:20.8429724Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8430234Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8430736Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8431224Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8431902Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8432381Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8432843Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8433276Z         ).to_numba(
2025-01-14T13:17:20.8433598Z             macro_atom_state,
2025-01-14T13:17:20.8433989Z             self.line_interaction_type,
2025-01-14T13:17:20.8434388Z         )
2025-01-14T13:17:20.8434765Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8435586Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8436360Z         ]
2025-01-14T13:17:20.8437074Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8437796Z 
2025-01-14T13:17:20.8438051Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8438789Z _________ ERROR at setup of TestModelFromASCIIDensity.test_abundances __________
2025-01-14T13:17:20.8439281Z 
2025-01-14T13:17:20.8440425Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8442577Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8443391Z 
2025-01-14T13:17:20.8443567Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8444142Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8444735Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8445355Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8446184Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8446604Z >       sim.run_final()
2025-01-14T13:17:20.8446823Z 
2025-01-14T13:17:20.8446973Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8447402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8447923Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8448490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8449055Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8449630Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8450237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8450781Z 
2025-01-14T13:17:20.8451257Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8452414Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8453357Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8454423Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8455372Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8456044Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8456440Z 
2025-01-14T13:17:20.8456597Z     def initialize_transport_state(
2025-01-14T13:17:20.8456996Z         self,
2025-01-14T13:17:20.8457301Z         simulation_state,
2025-01-14T13:17:20.8457652Z         opacity_state,
2025-01-14T13:17:20.8457999Z         macro_atom_state,
2025-01-14T13:17:20.8458364Z         plasma,
2025-01-14T13:17:20.8458676Z         no_of_packets,
2025-01-14T13:17:20.8459026Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8459408Z         iteration=0,
2025-01-14T13:17:20.8459723Z     ):
2025-01-14T13:17:20.8460111Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8460650Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8461077Z         else:
2025-01-14T13:17:20.8461384Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8461890Z     
2025-01-14T13:17:20.8462287Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8462845Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8463271Z         )
2025-01-14T13:17:20.8463540Z     
2025-01-14T13:17:20.8463912Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8464489Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8465111Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8465664Z         else:
2025-01-14T13:17:20.8465986Z             continuum_state = None
2025-01-14T13:17:20.8466437Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8466964Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8467455Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8467935Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8468444Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8468922Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8469378Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8469798Z         ).to_numba(
2025-01-14T13:17:20.8470124Z             macro_atom_state,
2025-01-14T13:17:20.8470521Z             self.line_interaction_type,
2025-01-14T13:17:20.8470926Z         )
2025-01-14T13:17:20.8471263Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8472225Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8473002Z         ]
2025-01-14T13:17:20.8473711Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8474660Z 
2025-01-14T13:17:20.8474925Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8475656Z _________ ERROR at setup of TestModelFromArtisDensity.test_velocities __________
2025-01-14T13:17:20.8476155Z 
2025-01-14T13:17:20.8477317Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8479281Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8480084Z 
2025-01-14T13:17:20.8480525Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8481086Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8481856Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8482504Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8483122Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8483550Z >       sim.run_final()
2025-01-14T13:17:20.8483769Z 
2025-01-14T13:17:20.8483920Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8484349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8484872Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8485425Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8485986Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8486563Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8487171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8487539Z 
2025-01-14T13:17:20.8488025Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8489113Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8490035Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8491075Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8492209Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8492898Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8493285Z 
2025-01-14T13:17:20.8493458Z     def initialize_transport_state(
2025-01-14T13:17:20.8493860Z         self,
2025-01-14T13:17:20.8494171Z         simulation_state,
2025-01-14T13:17:20.8494532Z         opacity_state,
2025-01-14T13:17:20.8494887Z         macro_atom_state,
2025-01-14T13:17:20.8495235Z         plasma,
2025-01-14T13:17:20.8495548Z         no_of_packets,
2025-01-14T13:17:20.8495901Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8496301Z         iteration=0,
2025-01-14T13:17:20.8496620Z     ):
2025-01-14T13:17:20.8496980Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8497517Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8497994Z         else:
2025-01-14T13:17:20.8498300Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8498660Z     
2025-01-14T13:17:20.8499044Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8499604Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8500041Z         )
2025-01-14T13:17:20.8500315Z     
2025-01-14T13:17:20.8500761Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8501343Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8502136Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8502683Z         else:
2025-01-14T13:17:20.8502985Z             continuum_state = None
2025-01-14T13:17:20.8503426Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8504230Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8504734Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8505211Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8505708Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8506197Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8506669Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8507098Z         ).to_numba(
2025-01-14T13:17:20.8507431Z             macro_atom_state,
2025-01-14T13:17:20.8507827Z             self.line_interaction_type,
2025-01-14T13:17:20.8508239Z         )
2025-01-14T13:17:20.8508584Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8509597Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8510373Z         ]
2025-01-14T13:17:20.8511074Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8511939Z 
2025-01-14T13:17:20.8512220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8512958Z _________ ERROR at setup of TestModelFromArtisDensity.test_abundances __________
2025-01-14T13:17:20.8513459Z 
2025-01-14T13:17:20.8514612Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8516556Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8517352Z 
2025-01-14T13:17:20.8517513Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8518152Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8518757Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8519387Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8520014Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8520433Z >       sim.run_final()
2025-01-14T13:17:20.8520647Z 
2025-01-14T13:17:20.8520790Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8521215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8521902Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8522469Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8523030Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8523604Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8524226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8524583Z 
2025-01-14T13:17:20.8525060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8526067Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8526977Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8528030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8528956Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8529653Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8530050Z 
2025-01-14T13:17:20.8530212Z     def initialize_transport_state(
2025-01-14T13:17:20.8530629Z         self,
2025-01-14T13:17:20.8530947Z         simulation_state,
2025-01-14T13:17:20.8531317Z         opacity_state,
2025-01-14T13:17:20.8531843Z         macro_atom_state,
2025-01-14T13:17:20.8532178Z         plasma,
2025-01-14T13:17:20.8532367Z         no_of_packets,
2025-01-14T13:17:20.8532565Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8532954Z         iteration=0,
2025-01-14T13:17:20.8533134Z     ):
2025-01-14T13:17:20.8533357Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8533675Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8533916Z         else:
2025-01-14T13:17:20.8534098Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8534304Z     
2025-01-14T13:17:20.8534531Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8534889Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8535132Z         )
2025-01-14T13:17:20.8535292Z     
2025-01-14T13:17:20.8535520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8535849Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8536318Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8536627Z         else:
2025-01-14T13:17:20.8536812Z             continuum_state = None
2025-01-14T13:17:20.8537081Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8537376Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8537661Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8537941Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8538225Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8538501Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8538764Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8539004Z         ).to_numba(
2025-01-14T13:17:20.8539193Z             macro_atom_state,
2025-01-14T13:17:20.8539420Z             self.line_interaction_type,
2025-01-14T13:17:20.8539653Z         )
2025-01-14T13:17:20.8539855Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8540306Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8540737Z         ]
2025-01-14T13:17:20.8541132Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8541513Z 
2025-01-14T13:17:20.8541866Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8542311Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_velocities _____
2025-01-14T13:17:20.8542605Z 
2025-01-14T13:17:20.8543238Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8544299Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8544736Z 
2025-01-14T13:17:20.8544827Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8545150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8545486Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8545829Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8546176Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8546409Z >       sim.run_final()
2025-01-14T13:17:20.8546532Z 
2025-01-14T13:17:20.8546619Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8546861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8547162Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8547480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8547797Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8548127Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8548471Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8548666Z 
2025-01-14T13:17:20.8549056Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8549618Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8550117Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8550692Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8551203Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8551763Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8552008Z 
2025-01-14T13:17:20.8552103Z     def initialize_transport_state(
2025-01-14T13:17:20.8552333Z         self,
2025-01-14T13:17:20.8552648Z         simulation_state,
2025-01-14T13:17:20.8552853Z         opacity_state,
2025-01-14T13:17:20.8553048Z         macro_atom_state,
2025-01-14T13:17:20.8553253Z         plasma,
2025-01-14T13:17:20.8553448Z         no_of_packets,
2025-01-14T13:17:20.8553653Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8553871Z         iteration=0,
2025-01-14T13:17:20.8554053Z     ):
2025-01-14T13:17:20.8554267Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8554573Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8554813Z         else:
2025-01-14T13:17:20.8554989Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8555196Z     
2025-01-14T13:17:20.8555417Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8555725Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8555964Z         )
2025-01-14T13:17:20.8556123Z     
2025-01-14T13:17:20.8556340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8556669Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8557009Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8557314Z         else:
2025-01-14T13:17:20.8557495Z             continuum_state = None
2025-01-14T13:17:20.8557751Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8558033Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8558307Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8558579Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8558859Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8559127Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8559391Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8559624Z         ).to_numba(
2025-01-14T13:17:20.8559812Z             macro_atom_state,
2025-01-14T13:17:20.8560035Z             self.line_interaction_type,
2025-01-14T13:17:20.8560268Z         )
2025-01-14T13:17:20.8560466Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8560912Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8561338Z         ]
2025-01-14T13:17:20.8562008Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8562704Z 
2025-01-14T13:17:20.8562956Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8563688Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_abundances _____
2025-01-14T13:17:20.8564166Z 
2025-01-14T13:17:20.8564804Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8565854Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8566290Z 
2025-01-14T13:17:20.8566380Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8566845Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8567186Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8567532Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8567875Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8568109Z >       sim.run_final()
2025-01-14T13:17:20.8568229Z 
2025-01-14T13:17:20.8568317Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8568557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8568848Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8569160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8569472Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8570143Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8570730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8570971Z 
2025-01-14T13:17:20.8571234Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8571972Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8572482Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8573058Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8573570Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8573952Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8574170Z 
2025-01-14T13:17:20.8574265Z     def initialize_transport_state(
2025-01-14T13:17:20.8574500Z         self,
2025-01-14T13:17:20.8574677Z         simulation_state,
2025-01-14T13:17:20.8574880Z         opacity_state,
2025-01-14T13:17:20.8575075Z         macro_atom_state,
2025-01-14T13:17:20.8575276Z         plasma,
2025-01-14T13:17:20.8575457Z         no_of_packets,
2025-01-14T13:17:20.8575661Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8575879Z         iteration=0,
2025-01-14T13:17:20.8576061Z     ):
2025-01-14T13:17:20.8576286Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8576588Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8576835Z         else:
2025-01-14T13:17:20.8577016Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8577222Z     
2025-01-14T13:17:20.8577443Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8577753Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8577994Z         )
2025-01-14T13:17:20.8578153Z     
2025-01-14T13:17:20.8578376Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8578751Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8579335Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8579854Z         else:
2025-01-14T13:17:20.8580153Z             continuum_state = None
2025-01-14T13:17:20.8580484Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8580774Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8581047Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8581321Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8581776Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8582062Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8582329Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8582567Z         ).to_numba(
2025-01-14T13:17:20.8582754Z             macro_atom_state,
2025-01-14T13:17:20.8582982Z             self.line_interaction_type,
2025-01-14T13:17:20.8583222Z         )
2025-01-14T13:17:20.8583419Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8583876Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8584464Z         ]
2025-01-14T13:17:20.8584867Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8585249Z 
2025-01-14T13:17:20.8585403Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8585846Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_velocities __
2025-01-14T13:17:20.8586150Z 
2025-01-14T13:17:20.8586789Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8588223Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8588938Z 
2025-01-14T13:17:20.8589032Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8589352Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8589687Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8590035Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8590377Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8590611Z >       sim.run_final()
2025-01-14T13:17:20.8590732Z 
2025-01-14T13:17:20.8590818Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8591060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8591352Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8591849Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8592179Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8592505Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8592843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8593048Z 
2025-01-14T13:17:20.8593311Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8593862Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8594369Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8594950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8595463Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8595844Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8596061Z 
2025-01-14T13:17:20.8596161Z     def initialize_transport_state(
2025-01-14T13:17:20.8596393Z         self,
2025-01-14T13:17:20.8596623Z         simulation_state,
2025-01-14T13:17:20.8623686Z         opacity_state,
2025-01-14T13:17:20.8624060Z         macro_atom_state,
2025-01-14T13:17:20.8624412Z         plasma,
2025-01-14T13:17:20.8624707Z         no_of_packets,
2025-01-14T13:17:20.8625044Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8625285Z         iteration=0,
2025-01-14T13:17:20.8625463Z     ):
2025-01-14T13:17:20.8625679Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8625982Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8626340Z         else:
2025-01-14T13:17:20.8626636Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8626983Z     
2025-01-14T13:17:20.8627320Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8627644Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8627882Z         )
2025-01-14T13:17:20.8628041Z     
2025-01-14T13:17:20.8628254Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8628573Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8629073Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8629372Z         else:
2025-01-14T13:17:20.8629549Z             continuum_state = None
2025-01-14T13:17:20.8629799Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8630081Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8630353Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8630619Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8630896Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8631161Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8631416Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8631856Z         ).to_numba(
2025-01-14T13:17:20.8632193Z             macro_atom_state,
2025-01-14T13:17:20.8632419Z             self.line_interaction_type,
2025-01-14T13:17:20.8632644Z         )
2025-01-14T13:17:20.8632838Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8633305Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8633725Z         ]
2025-01-14T13:17:20.8634120Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8634510Z 
2025-01-14T13:17:20.8634715Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8635495Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_abundances __
2025-01-14T13:17:20.8635950Z 
2025-01-14T13:17:20.8636596Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8637662Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8638104Z 
2025-01-14T13:17:20.8638201Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8638523Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8638859Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8639210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8639562Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8639801Z >       sim.run_final()
2025-01-14T13:17:20.8639929Z 
2025-01-14T13:17:20.8640012Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8640258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8640558Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8640887Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8641205Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8641532Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8641990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8642186Z 
2025-01-14T13:17:20.8642460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8643012Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8643519Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8644451Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8645161Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8645547Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8645777Z 
2025-01-14T13:17:20.8645866Z     def initialize_transport_state(
2025-01-14T13:17:20.8646099Z         self,
2025-01-14T13:17:20.8646281Z         simulation_state,
2025-01-14T13:17:20.8646622Z         opacity_state,
2025-01-14T13:17:20.8646817Z         macro_atom_state,
2025-01-14T13:17:20.8647011Z         plasma,
2025-01-14T13:17:20.8647195Z         no_of_packets,
2025-01-14T13:17:20.8647401Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8647620Z         iteration=0,
2025-01-14T13:17:20.8647806Z     ):
2025-01-14T13:17:20.8648028Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8648337Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8648584Z         else:
2025-01-14T13:17:20.8648766Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8648975Z     
2025-01-14T13:17:20.8649200Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8649515Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8649880Z         )
2025-01-14T13:17:20.8650043Z     
2025-01-14T13:17:20.8650261Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8650576Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8650928Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8651237Z         else:
2025-01-14T13:17:20.8651420Z             continuum_state = None
2025-01-14T13:17:20.8651817Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8652318Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8652798Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8653155Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8653444Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8653727Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8653988Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8654233Z         ).to_numba(
2025-01-14T13:17:20.8654425Z             macro_atom_state,
2025-01-14T13:17:20.8654650Z             self.line_interaction_type,
2025-01-14T13:17:20.8654881Z         )
2025-01-14T13:17:20.8655082Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8655537Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8655967Z         ]
2025-01-14T13:17:20.8656368Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8656750Z 
2025-01-14T13:17:20.8656905Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8657325Z __________ ERROR at setup of TestModelFromUniformDensity.test_density __________
2025-01-14T13:17:20.8657594Z 
2025-01-14T13:17:20.8658229Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8659288Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8659720Z 
2025-01-14T13:17:20.8659807Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8660126Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8660458Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8660837Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8661412Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8661932Z >       sim.run_final()
2025-01-14T13:17:20.8662139Z 
2025-01-14T13:17:20.8662283Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8662537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8662839Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8663154Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8663467Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8663961Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8664303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8664499Z 
2025-01-14T13:17:20.8664763Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8665311Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8665961Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8666552Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8667067Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8667575Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8667792Z 
2025-01-14T13:17:20.8667886Z     def initialize_transport_state(
2025-01-14T13:17:20.8668114Z         self,
2025-01-14T13:17:20.8668302Z         simulation_state,
2025-01-14T13:17:20.8668507Z         opacity_state,
2025-01-14T13:17:20.8668703Z         macro_atom_state,
2025-01-14T13:17:20.8668897Z         plasma,
2025-01-14T13:17:20.8669083Z         no_of_packets,
2025-01-14T13:17:20.8669354Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8669731Z         iteration=0,
2025-01-14T13:17:20.8670035Z     ):
2025-01-14T13:17:20.8670395Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8670703Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8670935Z         else:
2025-01-14T13:17:20.8671109Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8671320Z     
2025-01-14T13:17:20.8671544Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8672050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8672295Z         )
2025-01-14T13:17:20.8672455Z     
2025-01-14T13:17:20.8672674Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8673004Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8673347Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8673648Z         else:
2025-01-14T13:17:20.8673833Z             continuum_state = None
2025-01-14T13:17:20.8674088Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8674374Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8674650Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8674926Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8675209Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8675494Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8675763Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8676005Z         ).to_numba(
2025-01-14T13:17:20.8676197Z             macro_atom_state,
2025-01-14T13:17:20.8676419Z             self.line_interaction_type,
2025-01-14T13:17:20.8676645Z         )
2025-01-14T13:17:20.8676833Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8677290Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8677710Z         ]
2025-01-14T13:17:20.8678106Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8678634Z 
2025-01-14T13:17:20.8678887Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8679573Z ____ ERROR at setup of TestModelFromInitialTinner.test_initial_temperature _____
2025-01-14T13:17:20.8679860Z 
2025-01-14T13:17:20.8680492Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8681823Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8682258Z 
2025-01-14T13:17:20.8682358Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8682677Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8683006Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8683358Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8683703Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8683943Z >       sim.run_final()
2025-01-14T13:17:20.8684067Z 
2025-01-14T13:17:20.8684154Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8684392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8684823Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8685138Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8685457Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8685778Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8686118Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8686314Z 
2025-01-14T13:17:20.8686576Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8687469Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8688155Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8688739Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8689251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8689635Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8689850Z 
2025-01-14T13:17:20.8689945Z     def initialize_transport_state(
2025-01-14T13:17:20.8690178Z         self,
2025-01-14T13:17:20.8690355Z         simulation_state,
2025-01-14T13:17:20.8690563Z         opacity_state,
2025-01-14T13:17:20.8690759Z         macro_atom_state,
2025-01-14T13:17:20.8690954Z         plasma,
2025-01-14T13:17:20.8691139Z         no_of_packets,
2025-01-14T13:17:20.8691337Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8691648Z         iteration=0,
2025-01-14T13:17:20.8691833Z     ):
2025-01-14T13:17:20.8692046Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8692345Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8692582Z         else:
2025-01-14T13:17:20.8692759Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8692972Z     
2025-01-14T13:17:20.8693196Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8693521Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8693761Z         )
2025-01-14T13:17:20.8693920Z     
2025-01-14T13:17:20.8694143Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8694463Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8694806Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8695107Z         else:
2025-01-14T13:17:20.8695286Z             continuum_state = None
2025-01-14T13:17:20.8695537Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8695981Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8696458Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8696880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8697171Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8697451Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8697724Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8697966Z         ).to_numba(
2025-01-14T13:17:20.8698156Z             macro_atom_state,
2025-01-14T13:17:20.8698514Z             self.line_interaction_type,
2025-01-14T13:17:20.8698749Z         )
2025-01-14T13:17:20.8698943Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8699394Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8699812Z         ]
2025-01-14T13:17:20.8700204Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8700592Z 
2025-01-14T13:17:20.8700740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8701189Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_velocities _
2025-01-14T13:17:20.8701499Z 
2025-01-14T13:17:20.8702365Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8703425Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8703855Z 
2025-01-14T13:17:20.8703951Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8704268Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8704848Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8705449Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8705804Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8706038Z >       sim.run_final()
2025-01-14T13:17:20.8706159Z 
2025-01-14T13:17:20.8706245Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8706490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8706779Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8707093Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8707429Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8707754Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8708091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8708285Z 
2025-01-14T13:17:20.8708546Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8709088Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8709594Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8710175Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8710695Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8711073Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8711292Z 
2025-01-14T13:17:20.8711384Z     def initialize_transport_state(
2025-01-14T13:17:20.8711796Z         self,
2025-01-14T13:17:20.8711983Z         simulation_state,
2025-01-14T13:17:20.8712187Z         opacity_state,
2025-01-14T13:17:20.8712384Z         macro_atom_state,
2025-01-14T13:17:20.8712577Z         plasma,
2025-01-14T13:17:20.8712751Z         no_of_packets,
2025-01-14T13:17:20.8712945Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8713309Z         iteration=0,
2025-01-14T13:17:20.8713607Z     ):
2025-01-14T13:17:20.8713957Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8714363Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8714607Z         else:
2025-01-14T13:17:20.8714781Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8714995Z     
2025-01-14T13:17:20.8715218Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8715531Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8715927Z         )
2025-01-14T13:17:20.8716088Z     
2025-01-14T13:17:20.8716306Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8716625Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8716973Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8717273Z         else:
2025-01-14T13:17:20.8717453Z             continuum_state = None
2025-01-14T13:17:20.8717701Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8717985Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8718257Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8718527Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8718806Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8719209Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8719465Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8719699Z         ).to_numba(
2025-01-14T13:17:20.8719892Z             macro_atom_state,
2025-01-14T13:17:20.8720112Z             self.line_interaction_type,
2025-01-14T13:17:20.8720342Z         )
2025-01-14T13:17:20.8720537Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8720982Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8721462Z         ]
2025-01-14T13:17:20.8722264Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8722845Z 
2025-01-14T13:17:20.8722999Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8723452Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_abundances _
2025-01-14T13:17:20.8723771Z 
2025-01-14T13:17:20.8724410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8725474Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8725903Z 
2025-01-14T13:17:20.8725998Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8726314Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8726642Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8726984Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8727323Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8727554Z >       sim.run_final()
2025-01-14T13:17:20.8727674Z 
2025-01-14T13:17:20.8727766Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8728008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8728295Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8728612Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8728925Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8729246Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8729580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8729770Z 
2025-01-14T13:17:20.8730031Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8730572Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8731319Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8732325Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8732859Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8733236Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8733595Z 
2025-01-14T13:17:20.8733688Z     def initialize_transport_state(
2025-01-14T13:17:20.8733915Z         self,
2025-01-14T13:17:20.8734094Z         simulation_state,
2025-01-14T13:17:20.8734297Z         opacity_state,
2025-01-14T13:17:20.8734493Z         macro_atom_state,
2025-01-14T13:17:20.8734689Z         plasma,
2025-01-14T13:17:20.8734866Z         no_of_packets,
2025-01-14T13:17:20.8735063Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8735287Z         iteration=0,
2025-01-14T13:17:20.8735470Z     ):
2025-01-14T13:17:20.8735685Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8735988Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8736229Z         else:
2025-01-14T13:17:20.8736524Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8736733Z     
2025-01-14T13:17:20.8736957Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8737268Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8737512Z         )
2025-01-14T13:17:20.8737672Z     
2025-01-14T13:17:20.8737885Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8738206Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8738548Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8738849Z         else:
2025-01-14T13:17:20.8739033Z             continuum_state = None
2025-01-14T13:17:20.8739284Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8739789Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8740270Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8740649Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8740939Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8741206Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8741464Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8741887Z         ).to_numba(
2025-01-14T13:17:20.8742082Z             macro_atom_state,
2025-01-14T13:17:20.8742304Z             self.line_interaction_type,
2025-01-14T13:17:20.8742531Z         )
2025-01-14T13:17:20.8742723Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8743171Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8743588Z         ]
2025-01-14T13:17:20.8743987Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8744371Z 
2025-01-14T13:17:20.8744520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8744964Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_densities _
2025-01-14T13:17:20.8745287Z 
2025-01-14T13:17:20.8745919Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8746979Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8747412Z 
2025-01-14T13:17:20.8747508Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8747827Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8748156Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8748497Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8748986Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8749381Z >       sim.run_final()
2025-01-14T13:17:20.8749591Z 
2025-01-14T13:17:20.8749733Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8750039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8750474Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8750791Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8751116Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8751438Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8751964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8752162Z 
2025-01-14T13:17:20.8752426Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8752972Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8753476Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8754186Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8754710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8755098Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8755315Z 
2025-01-14T13:17:20.8755408Z     def initialize_transport_state(
2025-01-14T13:17:20.8755636Z         self,
2025-01-14T13:17:20.8755815Z         simulation_state,
2025-01-14T13:17:20.8756020Z         opacity_state,
2025-01-14T13:17:20.8756094Z         macro_atom_state,
2025-01-14T13:17:20.8756176Z         plasma,
2025-01-14T13:17:20.8756251Z         no_of_packets,
2025-01-14T13:17:20.8756339Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8756411Z         iteration=0,
2025-01-14T13:17:20.8756483Z     ):
2025-01-14T13:17:20.8756607Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8756707Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8756786Z         else:
2025-01-14T13:17:20.8756863Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8756935Z     
2025-01-14T13:17:20.8757067Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8757175Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8757242Z         )
2025-01-14T13:17:20.8757317Z     
2025-01-14T13:17:20.8757492Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8757690Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8757944Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8758064Z         else:
2025-01-14T13:17:20.8758200Z             continuum_state = None
2025-01-14T13:17:20.8758371Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8758546Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8758683Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8758801Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8758902Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8758997Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8759091Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8759169Z         ).to_numba(
2025-01-14T13:17:20.8759247Z             macro_atom_state,
2025-01-14T13:17:20.8759333Z             self.line_interaction_type,
2025-01-14T13:17:20.8759397Z         )
2025-01-14T13:17:20.8759500Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8759766Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8759842Z         ]
2025-01-14T13:17:20.8760143Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8760152Z 
2025-01-14T13:17:20.8760297Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8760465Z ________________ ERROR at setup of test_ascii_reader_power_law _________________
2025-01-14T13:17:20.8760470Z 
2025-01-14T13:17:20.8761141Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8761718Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8761724Z 
2025-01-14T13:17:20.8761815Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8761973Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8762069Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8762245Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8762335Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8762523Z >       sim.run_final()
2025-01-14T13:17:20.8762527Z 
2025-01-14T13:17:20.8762612Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8762719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8762830Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8762970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8763069Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8763221Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8763331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8763335Z 
2025-01-14T13:17:20.8763605Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8763806Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8764033Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8764314Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8764481Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8764618Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8764622Z 
2025-01-14T13:17:20.8764713Z     def initialize_transport_state(
2025-01-14T13:17:20.8764781Z         self,
2025-01-14T13:17:20.8764862Z         simulation_state,
2025-01-14T13:17:20.8764937Z         opacity_state,
2025-01-14T13:17:20.8765017Z         macro_atom_state,
2025-01-14T13:17:20.8765086Z         plasma,
2025-01-14T13:17:20.8765163Z         no_of_packets,
2025-01-14T13:17:20.8765249Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8765321Z         iteration=0,
2025-01-14T13:17:20.8765388Z     ):
2025-01-14T13:17:20.8765510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8765610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8765679Z         else:
2025-01-14T13:17:20.8765761Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8765828Z     
2025-01-14T13:17:20.8765970Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8766065Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8766136Z         )
2025-01-14T13:17:20.8766201Z     
2025-01-14T13:17:20.8766333Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8766444Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8766598Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8766672Z         else:
2025-01-14T13:17:20.8766754Z             continuum_state = None
2025-01-14T13:17:20.8766858Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8766965Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8767060Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8767195Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8767370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8767684Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8767841Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8767958Z         ).to_numba(
2025-01-14T13:17:20.8768092Z             macro_atom_state,
2025-01-14T13:17:20.8768235Z             self.line_interaction_type,
2025-01-14T13:17:20.8768361Z         )
2025-01-14T13:17:20.8768475Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8768749Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8768822Z         ]
2025-01-14T13:17:20.8769121Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8769125Z 
2025-01-14T13:17:20.8769391Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8769553Z _____________ ERROR at setup of test_ascii_reader_exponential_law ______________
2025-01-14T13:17:20.8769558Z 
2025-01-14T13:17:20.8770197Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8770554Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8770564Z 
2025-01-14T13:17:20.8770655Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8770811Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8770906Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8771083Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8771173Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8771252Z >       sim.run_final()
2025-01-14T13:17:20.8771256Z 
2025-01-14T13:17:20.8771337Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8771453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8771663Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8771814Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8771908Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8772068Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8772177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8772182Z 
2025-01-14T13:17:20.8772445Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8772645Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8772870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8773142Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8773303Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8773442Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8773446Z 
2025-01-14T13:17:20.8773536Z     def initialize_transport_state(
2025-01-14T13:17:20.8773605Z         self,
2025-01-14T13:17:20.8773685Z         simulation_state,
2025-01-14T13:17:20.8773759Z         opacity_state,
2025-01-14T13:17:20.8773841Z         macro_atom_state,
2025-01-14T13:17:20.8773914Z         plasma,
2025-01-14T13:17:20.8773989Z         no_of_packets,
2025-01-14T13:17:20.8774068Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8774143Z         iteration=0,
2025-01-14T13:17:20.8774209Z     ):
2025-01-14T13:17:20.8774337Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8774435Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8774508Z         else:
2025-01-14T13:17:20.8774586Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8774785Z     
2025-01-14T13:17:20.8774919Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8775017Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8775133Z         )
2025-01-14T13:17:20.8775256Z     
2025-01-14T13:17:20.8775477Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8775662Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8775920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8776038Z         else:
2025-01-14T13:17:20.8776181Z             continuum_state = None
2025-01-14T13:17:20.8776313Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8776427Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8776646Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8776756Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8776852Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8776962Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8777054Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8777132Z         ).to_numba(
2025-01-14T13:17:20.8777208Z             macro_atom_state,
2025-01-14T13:17:20.8777298Z             self.line_interaction_type,
2025-01-14T13:17:20.8777371Z         )
2025-01-14T13:17:20.8777470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8777742Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8777809Z         ]
2025-01-14T13:17:20.8778111Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8778121Z 
2025-01-14T13:17:20.8778266Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8778448Z ______ ERROR at setup of test_radial_1D_geometry_volume[0-1.00977478e+45] ______
2025-01-14T13:17:20.8778458Z 
2025-01-14T13:17:20.8779083Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8779438Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8779443Z 
2025-01-14T13:17:20.8779534Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8779685Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8779780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8779954Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8780047Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8780118Z >       sim.run_final()
2025-01-14T13:17:20.8780126Z 
2025-01-14T13:17:20.8780212Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8780328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8780427Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8780569Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8780662Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8780821Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8780930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8780935Z 
2025-01-14T13:17:20.8781205Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8781405Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8781748Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8782019Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8782305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8782446Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8782451Z 
2025-01-14T13:17:20.8782537Z     def initialize_transport_state(
2025-01-14T13:17:20.8782610Z         self,
2025-01-14T13:17:20.8782688Z         simulation_state,
2025-01-14T13:17:20.8782775Z         opacity_state,
2025-01-14T13:17:20.8782854Z         macro_atom_state,
2025-01-14T13:17:20.8782930Z         plasma,
2025-01-14T13:17:20.8783003Z         no_of_packets,
2025-01-14T13:17:20.8783088Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8783160Z         iteration=0,
2025-01-14T13:17:20.8783346Z     ):
2025-01-14T13:17:20.8783470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8783569Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8783638Z         else:
2025-01-14T13:17:20.8783725Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8783797Z     
2025-01-14T13:17:20.8783928Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8784026Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8784092Z         )
2025-01-14T13:17:20.8784163Z     
2025-01-14T13:17:20.8784287Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8784402Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8784550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8784628Z         else:
2025-01-14T13:17:20.8784711Z             continuum_state = None
2025-01-14T13:17:20.8784866Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8785055Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8785211Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8785383Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8785556Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8785715Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8785865Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8785996Z         ).to_numba(
2025-01-14T13:17:20.8786077Z             macro_atom_state,
2025-01-14T13:17:20.8786168Z             self.line_interaction_type,
2025-01-14T13:17:20.8786235Z         )
2025-01-14T13:17:20.8786340Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8786605Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8786676Z         ]
2025-01-14T13:17:20.8786974Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8786990Z 
2025-01-14T13:17:20.8787147Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8787325Z _____ ERROR at setup of test_radial_1D_geometry_volume[10-1.98154804e+45] ______
2025-01-14T13:17:20.8787330Z 
2025-01-14T13:17:20.8787959Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8788313Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8788317Z 
2025-01-14T13:17:20.8788405Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8788565Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8788661Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8788839Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8788936Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8789173Z >       sim.run_final()
2025-01-14T13:17:20.8789182Z 
2025-01-14T13:17:20.8789330Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8789519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8789687Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8789922Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8790083Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8790294Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8790406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8790411Z 
2025-01-14T13:17:20.8790673Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8790976Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8791202Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8791488Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8791841Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8791986Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8791991Z 
2025-01-14T13:17:20.8792085Z     def initialize_transport_state(
2025-01-14T13:17:20.8792155Z         self,
2025-01-14T13:17:20.8792238Z         simulation_state,
2025-01-14T13:17:20.8792311Z         opacity_state,
2025-01-14T13:17:20.8792393Z         macro_atom_state,
2025-01-14T13:17:20.8792463Z         plasma,
2025-01-14T13:17:20.8792538Z         no_of_packets,
2025-01-14T13:17:20.8792623Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8792698Z         iteration=0,
2025-01-14T13:17:20.8792770Z     ):
2025-01-14T13:17:20.8792895Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8792996Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8793070Z         else:
2025-01-14T13:17:20.8793151Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8793219Z     
2025-01-14T13:17:20.8793361Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8793458Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8793532Z         )
2025-01-14T13:17:20.8793598Z     
2025-01-14T13:17:20.8793733Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8793845Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8794003Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8794072Z         else:
2025-01-14T13:17:20.8794160Z             continuum_state = None
2025-01-14T13:17:20.8794270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8794377Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8794474Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8794583Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8794684Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8794777Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8794875Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8794945Z         ).to_numba(
2025-01-14T13:17:20.8795028Z             macro_atom_state,
2025-01-14T13:17:20.8795116Z             self.line_interaction_type,
2025-01-14T13:17:20.8795187Z         )
2025-01-14T13:17:20.8795286Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8795560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8795635Z         ]
2025-01-14T13:17:20.8795942Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8795948Z 
2025-01-14T13:17:20.8796098Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8796415Z _____ ERROR at setup of test_radial_1D_geometry_volume[19-3.13361319e+45] ______
2025-01-14T13:17:20.8796420Z 
2025-01-14T13:17:20.8797058Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8797405Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8797423Z 
2025-01-14T13:17:20.8797582Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8797851Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8798164Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8798472Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8798570Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8798650Z >       sim.run_final()
2025-01-14T13:17:20.8798655Z 
2025-01-14T13:17:20.8798737Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8798851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8798947Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8799093Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8799186Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8799344Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8799449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8799453Z 
2025-01-14T13:17:20.8801410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8801804Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8802036Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8802323Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8802486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8802630Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8802634Z 
2025-01-14T13:17:20.8802723Z     def initialize_transport_state(
2025-01-14T13:17:20.8802801Z         self,
2025-01-14T13:17:20.8802880Z         simulation_state,
2025-01-14T13:17:20.8802961Z         opacity_state,
2025-01-14T13:17:20.8803038Z         macro_atom_state,
2025-01-14T13:17:20.8803113Z         plasma,
2025-01-14T13:17:20.8803194Z         no_of_packets,
2025-01-14T13:17:20.8803353Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8803481Z         iteration=0,
2025-01-14T13:17:20.8803593Z     ):
2025-01-14T13:17:20.8803807Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8803972Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8804091Z         else:
2025-01-14T13:17:20.8804221Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8804338Z     
2025-01-14T13:17:20.8804518Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8804625Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8804693Z         )
2025-01-14T13:17:20.8804766Z     
2025-01-14T13:17:20.8804896Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8805015Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8805169Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8805240Z         else:
2025-01-14T13:17:20.8805330Z             continuum_state = None
2025-01-14T13:17:20.8805428Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8805540Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8805776Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8805888Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8805986Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8806083Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8806173Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8806249Z         ).to_numba(
2025-01-14T13:17:20.8806328Z             macro_atom_state,
2025-01-14T13:17:20.8806419Z             self.line_interaction_type,
2025-01-14T13:17:20.8806487Z         )
2025-01-14T13:17:20.8806592Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8806861Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8807041Z         ]
2025-01-14T13:17:20.8807346Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8807357Z 
2025-01-14T13:17:20.8807505Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8807702Z _ ERROR at setup of test_composition_elemental_number_density[index0-539428198] _
2025-01-14T13:17:20.8807707Z 
2025-01-14T13:17:20.8808340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8808698Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8808703Z 
2025-01-14T13:17:20.8808799Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8808959Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8809061Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8809237Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8809332Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8809408Z >       sim.run_final()
2025-01-14T13:17:20.8809412Z 
2025-01-14T13:17:20.8809497Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8809605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8809708Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8809852Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8809951Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8810107Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8810212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8810220Z 
2025-01-14T13:17:20.8810488Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8810688Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8810917Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8811314Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8811728Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8811963Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8811977Z 
2025-01-14T13:17:20.8812123Z     def initialize_transport_state(
2025-01-14T13:17:20.8812243Z         self,
2025-01-14T13:17:20.8812374Z         simulation_state,
2025-01-14T13:17:20.8812457Z         opacity_state,
2025-01-14T13:17:20.8812533Z         macro_atom_state,
2025-01-14T13:17:20.8812608Z         plasma,
2025-01-14T13:17:20.8812688Z         no_of_packets,
2025-01-14T13:17:20.8812775Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8812847Z         iteration=0,
2025-01-14T13:17:20.8812918Z     ):
2025-01-14T13:17:20.8813177Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8813277Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8813346Z         else:
2025-01-14T13:17:20.8813430Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8813496Z     
2025-01-14T13:17:20.8813634Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8813729Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8813803Z         )
2025-01-14T13:17:20.8813877Z     
2025-01-14T13:17:20.8814003Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8814123Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8814277Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8814457Z         else:
2025-01-14T13:17:20.8814540Z             continuum_state = None
2025-01-14T13:17:20.8814644Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8814751Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8814851Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8814957Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8815058Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8815150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8815243Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8815316Z         ).to_numba(
2025-01-14T13:17:20.8815398Z             macro_atom_state,
2025-01-14T13:17:20.8815489Z             self.line_interaction_type,
2025-01-14T13:17:20.8815555Z         )
2025-01-14T13:17:20.8815662Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8815928Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8816006Z         ]
2025-01-14T13:17:20.8816306Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8816316Z 
2025-01-14T13:17:20.8816467Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8816656Z _ ERROR at setup of test_composition_elemental_number_density[index1-409675383] _
2025-01-14T13:17:20.8816661Z 
2025-01-14T13:17:20.8817289Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8817642Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8817647Z 
2025-01-14T13:17:20.8817733Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8817895Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8817990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8818171Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8818257Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8818337Z >       sim.run_final()
2025-01-14T13:17:20.8818341Z 
2025-01-14T13:17:20.8818420Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8818602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8818780Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8819014Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8819177Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8819434Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8819624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8819638Z 
2025-01-14T13:17:20.8819905Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8820203Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8820423Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8820698Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8820860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8820995Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8821000Z 
2025-01-14T13:17:20.8821090Z     def initialize_transport_state(
2025-01-14T13:17:20.8821159Z         self,
2025-01-14T13:17:20.8821241Z         simulation_state,
2025-01-14T13:17:20.8821314Z         opacity_state,
2025-01-14T13:17:20.8821393Z         macro_atom_state,
2025-01-14T13:17:20.8821544Z         plasma,
2025-01-14T13:17:20.8821809Z         no_of_packets,
2025-01-14T13:17:20.8821897Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8821976Z         iteration=0,
2025-01-14T13:17:20.8822052Z     ):
2025-01-14T13:17:20.8822185Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8822281Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8822354Z         else:
2025-01-14T13:17:20.8822437Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8822507Z     
2025-01-14T13:17:20.8822649Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8822746Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8822818Z         )
2025-01-14T13:17:20.8822884Z     
2025-01-14T13:17:20.8823015Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8823127Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8823284Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8823358Z         else:
2025-01-14T13:17:20.8823444Z             continuum_state = None
2025-01-14T13:17:20.8823544Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8823661Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8823752Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8823860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8823964Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8824064Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8824159Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8824234Z         ).to_numba(
2025-01-14T13:17:20.8824316Z             macro_atom_state,
2025-01-14T13:17:20.8824401Z             self.line_interaction_type,
2025-01-14T13:17:20.8824473Z         )
2025-01-14T13:17:20.8824572Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8824850Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8824917Z         ]
2025-01-14T13:17:20.8825219Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8825228Z 
2025-01-14T13:17:20.8825383Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8825578Z _ ERROR at setup of test_composition_elemental_number_density[index2-314387928] _
2025-01-14T13:17:20.8825583Z 
2025-01-14T13:17:20.8826215Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8826624Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8826640Z 
2025-01-14T13:17:20.8826802Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8827061Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8827227Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8827711Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8827809Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8827889Z >       sim.run_final()
2025-01-14T13:17:20.8827893Z 
2025-01-14T13:17:20.8827975Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8828092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8828187Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8828331Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8828424Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8828581Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8828803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8828808Z 
2025-01-14T13:17:20.8829078Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8829289Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8829509Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8829784Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8829941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8830078Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8830082Z 
2025-01-14T13:17:20.8830173Z     def initialize_transport_state(
2025-01-14T13:17:20.8830246Z         self,
2025-01-14T13:17:20.8830322Z         simulation_state,
2025-01-14T13:17:20.8830401Z         opacity_state,
2025-01-14T13:17:20.8830482Z         macro_atom_state,
2025-01-14T13:17:20.8830564Z         plasma,
2025-01-14T13:17:20.8830640Z         no_of_packets,
2025-01-14T13:17:20.8830728Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8830813Z         iteration=0,
2025-01-14T13:17:20.8830882Z     ):
2025-01-14T13:17:20.8831010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8831107Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8831180Z         else:
2025-01-14T13:17:20.8831258Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8831335Z     
2025-01-14T13:17:20.8844801Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8845006Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8845147Z         )
2025-01-14T13:17:20.8845262Z     
2025-01-14T13:17:20.8845519Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8845718Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8846001Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8846119Z         else:
2025-01-14T13:17:20.8846263Z             continuum_state = None
2025-01-14T13:17:20.8846430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8846554Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8846654Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8846768Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8846875Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8846970Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8847063Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8847191Z         ).to_numba(
2025-01-14T13:17:20.8847333Z             macro_atom_state,
2025-01-14T13:17:20.8847477Z             self.line_interaction_type,
2025-01-14T13:17:20.8847597Z         )
2025-01-14T13:17:20.8847765Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8848261Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8848333Z         ]
2025-01-14T13:17:20.8848850Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8848857Z 
2025-01-14T13:17:20.8849025Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8849219Z _ ERROR at setup of test_composition_elemental_number_density[index3-56066111] _
2025-01-14T13:17:20.8849225Z 
2025-01-14T13:17:20.8849871Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8850224Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8850336Z 
2025-01-14T13:17:20.8850439Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8850597Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8850710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8850894Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8850983Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8851067Z >       sim.run_final()
2025-01-14T13:17:20.8851072Z 
2025-01-14T13:17:20.8851155Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8851272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8851372Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8851524Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8851738Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8851903Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8852015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8852026Z 
2025-01-14T13:17:20.8852299Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8852514Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8852893Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8853333Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8853612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8853853Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8853862Z 
2025-01-14T13:17:20.8854006Z     def initialize_transport_state(
2025-01-14T13:17:20.8854136Z         self,
2025-01-14T13:17:20.8854270Z         simulation_state,
2025-01-14T13:17:20.8854421Z         opacity_state,
2025-01-14T13:17:20.8854555Z         macro_atom_state,
2025-01-14T13:17:20.8854671Z         plasma,
2025-01-14T13:17:20.8854808Z         no_of_packets,
2025-01-14T13:17:20.8854966Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8855106Z         iteration=0,
2025-01-14T13:17:20.8855226Z     ):
2025-01-14T13:17:20.8855459Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8855632Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8855767Z         else:
2025-01-14T13:17:20.8855903Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8856029Z     
2025-01-14T13:17:20.8856272Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8856446Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8856568Z         )
2025-01-14T13:17:20.8856694Z     
2025-01-14T13:17:20.8856925Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8857144Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8857418Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8857540Z         else:
2025-01-14T13:17:20.8857892Z             continuum_state = None
2025-01-14T13:17:20.8858065Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8858238Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8858377Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8858545Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8858695Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8858856Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8859008Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8859125Z         ).to_numba(
2025-01-14T13:17:20.8859243Z             macro_atom_state,
2025-01-14T13:17:20.8859375Z             self.line_interaction_type,
2025-01-14T13:17:20.8859625Z         )
2025-01-14T13:17:20.8859781Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8860185Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8860293Z         ]
2025-01-14T13:17:20.8860792Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8860801Z 
2025-01-14T13:17:20.8861017Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8861296Z _ ERROR at setup of test_composition_elemental_number_density[index4-42580098] _
2025-01-14T13:17:20.8861302Z 
2025-01-14T13:17:20.8862509Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8863143Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8863160Z 
2025-01-14T13:17:20.8863314Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8863579Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8863747Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8864042Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8864196Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8864323Z >       sim.run_final()
2025-01-14T13:17:20.8864331Z 
2025-01-14T13:17:20.8864476Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8864650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8864819Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8865052Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8865213Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8865481Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8865660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8865673Z 
2025-01-14T13:17:20.8866137Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8866469Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8866802Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8867204Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8867440Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8867646Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8867661Z 
2025-01-14T13:17:20.8867802Z     def initialize_transport_state(
2025-01-14T13:17:20.8867940Z         self,
2025-01-14T13:17:20.8868068Z         simulation_state,
2025-01-14T13:17:20.8868202Z         opacity_state,
2025-01-14T13:17:20.8868327Z         macro_atom_state,
2025-01-14T13:17:20.8868620Z         plasma,
2025-01-14T13:17:20.8868728Z         no_of_packets,
2025-01-14T13:17:20.8868855Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8868961Z         iteration=0,
2025-01-14T13:17:20.8869066Z     ):
2025-01-14T13:17:20.8869251Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8869404Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8869503Z         else:
2025-01-14T13:17:20.8869625Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8869721Z     
2025-01-14T13:17:20.8869924Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8870067Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8870166Z         )
2025-01-14T13:17:20.8870272Z     
2025-01-14T13:17:20.8870457Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8870808Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8871039Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8871161Z         else:
2025-01-14T13:17:20.8871283Z             continuum_state = None
2025-01-14T13:17:20.8871439Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8871746Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8871893Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8872068Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8872234Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8872373Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8872516Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8872633Z         ).to_numba(
2025-01-14T13:17:20.8872750Z             macro_atom_state,
2025-01-14T13:17:20.8872901Z             self.line_interaction_type,
2025-01-14T13:17:20.8873007Z         )
2025-01-14T13:17:20.8873175Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8873601Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8873716Z         ]
2025-01-14T13:17:20.8874180Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8874187Z 
2025-01-14T13:17:20.8874409Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8874691Z _ ERROR at setup of test_composition_elemental_number_density[index5-32676283] _
2025-01-14T13:17:20.8874698Z 
2025-01-14T13:17:20.8875740Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8876314Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8876328Z 
2025-01-14T13:17:20.8876468Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8876699Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8876840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8877110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8877240Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8877378Z >       sim.run_final()
2025-01-14T13:17:20.8877384Z 
2025-01-14T13:17:20.8877509Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8877687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8877842Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8878072Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8878226Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8878469Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8878640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8878810Z 
2025-01-14T13:17:20.8879242Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8879569Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8879936Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8880347Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8880592Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8880799Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8880806Z 
2025-01-14T13:17:20.8881093Z     def initialize_transport_state(
2025-01-14T13:17:20.8881201Z         self,
2025-01-14T13:17:20.8881327Z         simulation_state,
2025-01-14T13:17:20.8881449Z         opacity_state,
2025-01-14T13:17:20.8881719Z         macro_atom_state,
2025-01-14T13:17:20.8881837Z         plasma,
2025-01-14T13:17:20.8881960Z         no_of_packets,
2025-01-14T13:17:20.8882092Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8882211Z         iteration=0,
2025-01-14T13:17:20.8882320Z     ):
2025-01-14T13:17:20.8882512Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8882651Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8882764Z         else:
2025-01-14T13:17:20.8882888Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8883000Z     
2025-01-14T13:17:20.8883202Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8883347Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8883450Z         )
2025-01-14T13:17:20.8883575Z     
2025-01-14T13:17:20.8883796Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8883983Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8884234Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8884337Z         else:
2025-01-14T13:17:20.8884470Z             continuum_state = None
2025-01-14T13:17:20.8884635Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8884815Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8884966Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8885145Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8885302Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8885457Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8885605Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8885728Z         ).to_numba(
2025-01-14T13:17:20.8885866Z             macro_atom_state,
2025-01-14T13:17:20.8886014Z             self.line_interaction_type,
2025-01-14T13:17:20.8886132Z         )
2025-01-14T13:17:20.8886300Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8886775Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8886889Z         ]
2025-01-14T13:17:20.8887422Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8887430Z 
2025-01-14T13:17:20.8887672Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8888006Z _ ERROR at setup of test_composition_elemental_number_density[index6-841032262] _
2025-01-14T13:17:20.8888013Z 
2025-01-14T13:17:20.8889132Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8889746Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8889926Z 
2025-01-14T13:17:20.8890090Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8890353Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8890519Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8890816Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8890965Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8891088Z >       sim.run_final()
2025-01-14T13:17:20.8891095Z 
2025-01-14T13:17:20.8891233Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8891420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8891717Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8891968Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8892304Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8892567Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8892752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8892759Z 
2025-01-14T13:17:20.8893223Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8893530Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8893909Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8894386Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8894666Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8894901Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8894915Z 
2025-01-14T13:17:20.8895061Z     def initialize_transport_state(
2025-01-14T13:17:20.8895181Z         self,
2025-01-14T13:17:20.8895311Z         simulation_state,
2025-01-14T13:17:20.8895449Z         opacity_state,
2025-01-14T13:17:20.8895577Z         macro_atom_state,
2025-01-14T13:17:20.8895696Z         plasma,
2025-01-14T13:17:20.8895818Z         no_of_packets,
2025-01-14T13:17:20.8895959Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8896081Z         iteration=0,
2025-01-14T13:17:20.8896200Z     ):
2025-01-14T13:17:20.8896404Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8896564Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8896686Z         else:
2025-01-14T13:17:20.8896817Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8896934Z     
2025-01-14T13:17:20.8897157Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8897319Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8897440Z         )
2025-01-14T13:17:20.8897556Z     
2025-01-14T13:17:20.8897770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8897961Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8898225Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8898348Z         else:
2025-01-14T13:17:20.8898487Z             continuum_state = None
2025-01-14T13:17:20.8898660Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8898839Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8898995Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8899170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8899339Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8899501Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8899653Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8899783Z         ).to_numba(
2025-01-14T13:17:20.8899924Z             macro_atom_state,
2025-01-14T13:17:20.8900072Z             self.line_interaction_type,
2025-01-14T13:17:20.8900184Z         )
2025-01-14T13:17:20.8900509Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8900979Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8901105Z         ]
2025-01-14T13:17:20.8901778Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8901789Z 
2025-01-14T13:17:20.8902031Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8902352Z _ ERROR at setup of test_composition_elemental_number_density[index7-638732300] _
2025-01-14T13:17:20.8902359Z 
2025-01-14T13:17:20.8903465Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8904181Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8904196Z 
2025-01-14T13:17:20.8904334Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8904555Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8904700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8904961Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8905107Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8905230Z >       sim.run_final()
2025-01-14T13:17:20.8905237Z 
2025-01-14T13:17:20.8905377Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8905549Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8905703Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8905910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8906064Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8906298Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8906479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8906486Z 
2025-01-14T13:17:20.8906920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8907262Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8907643Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8908082Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8908342Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8908569Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8908576Z 
2025-01-14T13:17:20.8908718Z     def initialize_transport_state(
2025-01-14T13:17:20.8908823Z         self,
2025-01-14T13:17:20.8908941Z         simulation_state,
2025-01-14T13:17:20.8909055Z         opacity_state,
2025-01-14T13:17:20.8909164Z         macro_atom_state,
2025-01-14T13:17:20.8909272Z         plasma,
2025-01-14T13:17:20.8909381Z         no_of_packets,
2025-01-14T13:17:20.8909520Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8909636Z         iteration=0,
2025-01-14T13:17:20.8909757Z     ):
2025-01-14T13:17:20.8909955Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8910113Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8910227Z         else:
2025-01-14T13:17:20.8910363Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8910473Z     
2025-01-14T13:17:20.8910706Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8910869Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8910990Z         )
2025-01-14T13:17:20.8911100Z     
2025-01-14T13:17:20.8911317Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8911796Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8912027Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8912136Z         else:
2025-01-14T13:17:20.8912259Z             continuum_state = None
2025-01-14T13:17:20.8912418Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8912583Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8912730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8912893Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8913056Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8913208Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8913365Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8913671Z         ).to_numba(
2025-01-14T13:17:20.8913805Z             macro_atom_state,
2025-01-14T13:17:20.8913950Z             self.line_interaction_type,
2025-01-14T13:17:20.8914080Z         )
2025-01-14T13:17:20.8914256Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8914740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8914859Z         ]
2025-01-14T13:17:20.8915386Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8915394Z 
2025-01-14T13:17:20.8915664Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8916008Z _ ERROR at setup of test_composition_elemental_number_density[index8-490167906] _
2025-01-14T13:17:20.8916016Z 
2025-01-14T13:17:20.8917119Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8917758Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8917767Z 
2025-01-14T13:17:20.8917914Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8918176Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8918335Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8918632Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8918776Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8918905Z >       sim.run_final()
2025-01-14T13:17:20.8918912Z 
2025-01-14T13:17:20.8919047Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8919234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8919410Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8919641Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8919800Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8920061Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8920248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8920255Z 
2025-01-14T13:17:20.8920708Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8921061Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8921434Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8922058Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8922335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8922573Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8922580Z 
2025-01-14T13:17:20.8922733Z     def initialize_transport_state(
2025-01-14T13:17:20.8923041Z         self,
2025-01-14T13:17:20.8923179Z         simulation_state,
2025-01-14T13:17:20.8923304Z         opacity_state,
2025-01-14T13:17:20.8923436Z         macro_atom_state,
2025-01-14T13:17:20.8923553Z         plasma,
2025-01-14T13:17:20.8923680Z         no_of_packets,
2025-01-14T13:17:20.8923816Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8923944Z         iteration=0,
2025-01-14T13:17:20.8924057Z     ):
2025-01-14T13:17:20.8924270Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8924430Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8924550Z         else:
2025-01-14T13:17:20.8924687Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8924798Z     
2025-01-14T13:17:20.8925030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8925342Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8925462Z         )
2025-01-14T13:17:20.8925574Z     
2025-01-14T13:17:20.8925801Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8925985Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8926243Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8926360Z         else:
2025-01-14T13:17:20.8926505Z             continuum_state = None
2025-01-14T13:17:20.8926672Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8926851Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8927002Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8927182Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8927348Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8927502Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8927667Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8927785Z         ).to_numba(
2025-01-14T13:17:20.8927920Z             macro_atom_state,
2025-01-14T13:17:20.8928072Z             self.line_interaction_type,
2025-01-14T13:17:20.8928191Z         )
2025-01-14T13:17:20.8928358Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8928831Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8928945Z         ]
2025-01-14T13:17:20.8929462Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8929470Z 
2025-01-14T13:17:20.8929712Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8930033Z _ ERROR at setup of test_composition_elemental_number_density[index9-269136275] _
2025-01-14T13:17:20.8930041Z 
2025-01-14T13:17:20.8931069Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8931828Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8931837Z 
2025-01-14T13:17:20.8931989Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8932234Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8932397Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8932683Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8932828Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8932954Z >       sim.run_final()
2025-01-14T13:17:20.8932961Z 
2025-01-14T13:17:20.8933086Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8933271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8933443Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8933687Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8934015Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8934274Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8934441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8934448Z 
2025-01-14T13:17:20.8934885Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8935238Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8935614Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8936085Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8936504Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8936739Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8936753Z 
2025-01-14T13:17:20.8936899Z     def initialize_transport_state(
2025-01-14T13:17:20.8937014Z         self,
2025-01-14T13:17:20.8937127Z         simulation_state,
2025-01-14T13:17:20.8937242Z         opacity_state,
2025-01-14T13:17:20.8937351Z         macro_atom_state,
2025-01-14T13:17:20.8937459Z         plasma,
2025-01-14T13:17:20.8937565Z         no_of_packets,
2025-01-14T13:17:20.8937691Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8937806Z         iteration=0,
2025-01-14T13:17:20.8937907Z     ):
2025-01-14T13:17:20.8938107Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8938253Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8938363Z         else:
2025-01-14T13:17:20.8938493Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8938618Z     
2025-01-14T13:17:20.8938844Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8939005Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8939116Z         )
2025-01-14T13:17:20.8939239Z     
2025-01-14T13:17:20.8939450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8939639Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8939891Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8940010Z         else:
2025-01-14T13:17:20.8940146Z             continuum_state = None
2025-01-14T13:17:20.8940314Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8940495Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8940643Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8940821Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8940979Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8941145Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8941294Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8941419Z         ).to_numba(
2025-01-14T13:17:20.8941735Z             macro_atom_state,
2025-01-14T13:17:20.8941894Z             self.line_interaction_type,
2025-01-14T13:17:20.8942007Z         )
2025-01-14T13:17:20.8942178Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8942645Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8942764Z         ]
2025-01-14T13:17:20.8943296Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8943304Z 
2025-01-14T13:17:20.8943549Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8943888Z _ ERROR at setup of test_composition_elemental_number_density[index10-204398856] _
2025-01-14T13:17:20.8943904Z 
2025-01-14T13:17:20.8945023Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8945823Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8945831Z 
2025-01-14T13:17:20.8945985Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8946236Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8946400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8946689Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8946834Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8946957Z >       sim.run_final()
2025-01-14T13:17:20.8946964Z 
2025-01-14T13:17:20.8947250Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8947423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8947572Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8947806Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8947969Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8948226Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8948409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8948415Z 
2025-01-14T13:17:20.8948875Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8949222Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8949610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8950084Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8950371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8950600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8950615Z 
2025-01-14T13:17:20.8950785Z     def initialize_transport_state(
2025-01-14T13:17:20.8950924Z         self,
2025-01-14T13:17:20.8951053Z         simulation_state,
2025-01-14T13:17:20.8951177Z         opacity_state,
2025-01-14T13:17:20.8951305Z         macro_atom_state,
2025-01-14T13:17:20.8951425Z         plasma,
2025-01-14T13:17:20.8951694Z         no_of_packets,
2025-01-14T13:17:20.8951840Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8951961Z         iteration=0,
2025-01-14T13:17:20.8952079Z     ):
2025-01-14T13:17:20.8952283Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8952442Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8952556Z         else:
2025-01-14T13:17:20.8952698Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8952811Z     
2025-01-14T13:17:20.8953043Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8953203Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8953330Z         )
2025-01-14T13:17:20.8953443Z     
2025-01-14T13:17:20.8953663Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8953857Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8954112Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8954233Z         else:
2025-01-14T13:17:20.8954368Z             continuum_state = None
2025-01-14T13:17:20.8954538Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8954715Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8954869Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8955043Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8955217Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8955369Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8955525Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8955830Z         ).to_numba(
2025-01-14T13:17:20.8955969Z             macro_atom_state,
2025-01-14T13:17:20.8956117Z             self.line_interaction_type,
2025-01-14T13:17:20.8956236Z         )
2025-01-14T13:17:20.8956412Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8956864Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8956982Z         ]
2025-01-14T13:17:20.8957507Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8957514Z 
2025-01-14T13:17:20.8957762Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8958092Z _ ERROR at setup of test_composition_elemental_number_density[index11-156857199] _
2025-01-14T13:17:20.8958242Z 
2025-01-14T13:17:20.8959319Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8959922Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8959930Z 
2025-01-14T13:17:20.8960074Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8960334Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8960488Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8960818Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8960964Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8961083Z >       sim.run_final()
2025-01-14T13:17:20.8961096Z 
2025-01-14T13:17:20.8961220Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8961399Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8961706Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8961943Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8962107Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8962362Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8962530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8962536Z 
2025-01-14T13:17:20.8962980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8963310Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8963660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8964143Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8964417Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8964652Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8964660Z 
2025-01-14T13:17:20.8964807Z     def initialize_transport_state(
2025-01-14T13:17:20.8964920Z         self,
2025-01-14T13:17:20.8965054Z         simulation_state,
2025-01-14T13:17:20.8965176Z         opacity_state,
2025-01-14T13:17:20.8965307Z         macro_atom_state,
2025-01-14T13:17:20.8965419Z         plasma,
2025-01-14T13:17:20.8965546Z         no_of_packets,
2025-01-14T13:17:20.8965681Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8965806Z         iteration=0,
2025-01-14T13:17:20.8965917Z     ):
2025-01-14T13:17:20.8966122Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8966272Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8966396Z         else:
2025-01-14T13:17:20.8966526Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8966643Z     
2025-01-14T13:17:20.8966876Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8967188Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8967305Z         )
2025-01-14T13:17:20.8967415Z     
2025-01-14T13:17:20.8967631Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8967809Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8968068Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8968182Z         else:
2025-01-14T13:17:20.8968323Z             continuum_state = None
2025-01-14T13:17:20.8968489Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8968671Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8968818Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8969147Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8969308Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8969469Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8969633Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8969749Z         ).to_numba(
2025-01-14T13:17:20.8969878Z             macro_atom_state,
2025-01-14T13:17:20.8970019Z             self.line_interaction_type,
2025-01-14T13:17:20.8970186Z         )
2025-01-14T13:17:20.8970365Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8970840Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8970955Z         ]
2025-01-14T13:17:20.8971480Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8971489Z 
2025-01-14T13:17:20.8971869Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8972208Z _ ERROR at setup of test_composition_elemental_number_density[index12-45482957] _
2025-01-14T13:17:20.8972216Z 
2025-01-14T13:17:20.8973316Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8973936Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8973944Z 
2025-01-14T13:17:20.8974097Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8974343Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8974503Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8974795Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8974946Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8975082Z >       sim.run_final()
2025-01-14T13:17:20.8975089Z 
2025-01-14T13:17:20.8975226Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8975411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8975585Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8975827Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8975982Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8976243Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8976421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8976428Z 
2025-01-14T13:17:20.8976892Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8977245Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8977631Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8978123Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8978394Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8978785Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8978793Z 
2025-01-14T13:17:20.8978941Z     def initialize_transport_state(
2025-01-14T13:17:20.8979062Z         self,
2025-01-14T13:17:20.8979191Z         simulation_state,
2025-01-14T13:17:20.8979321Z         opacity_state,
2025-01-14T13:17:20.8979449Z         macro_atom_state,
2025-01-14T13:17:20.8979571Z         plasma,
2025-01-14T13:17:20.8979692Z         no_of_packets,
2025-01-14T13:17:20.8979831Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8979958Z         iteration=0,
2025-01-14T13:17:20.8980071Z     ):
2025-01-14T13:17:20.8980283Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8980583Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8980702Z         else:
2025-01-14T13:17:20.8980833Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8980948Z     
2025-01-14T13:17:20.8981193Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8981357Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8981471Z         )
2025-01-14T13:17:20.8981725Z     
2025-01-14T13:17:20.8981938Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8982121Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8982372Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8982489Z         else:
2025-01-14T13:17:20.8982624Z             continuum_state = None
2025-01-14T13:17:20.8982792Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8982974Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8983119Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8983303Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8983465Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8983632Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8983782Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8983906Z         ).to_numba(
2025-01-14T13:17:20.8984037Z             macro_atom_state,
2025-01-14T13:17:20.8984182Z             self.line_interaction_type,
2025-01-14T13:17:20.8984292Z         )
2025-01-14T13:17:20.8984464Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8984928Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8985049Z         ]
2025-01-14T13:17:20.8985565Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8985578Z 
2025-01-14T13:17:20.8985828Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8986147Z _ ERROR at setup of test_composition_elemental_number_density[index13-34542591] _
2025-01-14T13:17:20.8986154Z 
2025-01-14T13:17:20.8987230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8987802Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8987809Z 
2025-01-14T13:17:20.8987937Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8988180Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8988327Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8988609Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8988758Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8988879Z >       sim.run_final()
2025-01-14T13:17:20.8988886Z 
2025-01-14T13:17:20.8989024Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8989360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8989524Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8989749Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8989914Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8990159Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8990341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8990348Z 
2025-01-14T13:17:20.8990800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8991143Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8991817Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8992253Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8992520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8992740Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8992747Z 
2025-01-14T13:17:20.8992877Z     def initialize_transport_state(
2025-01-14T13:17:20.8992979Z         self,
2025-01-14T13:17:20.8993103Z         simulation_state,
2025-01-14T13:17:20.8993223Z         opacity_state,
2025-01-14T13:17:20.8993338Z         macro_atom_state,
2025-01-14T13:17:20.8993452Z         plasma,
2025-01-14T13:17:20.8993570Z         no_of_packets,
2025-01-14T13:17:20.8993709Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8993821Z         iteration=0,
2025-01-14T13:17:20.8993927Z     ):
2025-01-14T13:17:20.8994114Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8994271Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8994376Z         else:
2025-01-14T13:17:20.8994497Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8994607Z     
2025-01-14T13:17:20.8994823Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8994971Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8995075Z         )
2025-01-14T13:17:20.8995172Z     
2025-01-14T13:17:20.8995364Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8995526Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8995768Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8995876Z         else:
2025-01-14T13:17:20.8995996Z             continuum_state = None
2025-01-14T13:17:20.8996161Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8996335Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8996482Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8996637Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8996797Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8996957Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8997114Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8997227Z         ).to_numba(
2025-01-14T13:17:20.8997352Z             macro_atom_state,
2025-01-14T13:17:20.8997493Z             self.line_interaction_type,
2025-01-14T13:17:20.8997632Z         )
2025-01-14T13:17:20.8997828Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8998283Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8998391Z         ]
2025-01-14T13:17:20.8998859Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8998873Z 
2025-01-14T13:17:20.8999118Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8999437Z _ ERROR at setup of test_composition_elemental_number_density[index14-26508241] _
2025-01-14T13:17:20.8999637Z 
2025-01-14T13:17:20.9000648Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9001232Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9001240Z 
2025-01-14T13:17:20.9001382Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9001772Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9001930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9002210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9002495Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9002625Z >       sim.run_final()
2025-01-14T13:17:20.9002632Z 
2025-01-14T13:17:20.9002771Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9002957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9003117Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9003335Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9003490Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9003745Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9003927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9003933Z 
2025-01-14T13:17:20.9004365Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9004708Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9005083Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9005534Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9005802Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9006015Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9006022Z 
2025-01-14T13:17:20.9006167Z     def initialize_transport_state(
2025-01-14T13:17:20.9006278Z         self,
2025-01-14T13:17:20.9006412Z         simulation_state,
2025-01-14T13:17:20.9006536Z         opacity_state,
2025-01-14T13:17:20.9006665Z         macro_atom_state,
2025-01-14T13:17:20.9006779Z         plasma,
2025-01-14T13:17:20.9006906Z         no_of_packets,
2025-01-14T13:17:20.9007037Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9007163Z         iteration=0,
2025-01-14T13:17:20.9007278Z     ):
2025-01-14T13:17:20.9007479Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9007627Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9007747Z         else:
2025-01-14T13:17:20.9007885Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9008001Z     
2025-01-14T13:17:20.9008216Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9008366Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9008485Z         )
2025-01-14T13:17:20.9008595Z     
2025-01-14T13:17:20.9008803Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9008975Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9009197Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9009305Z         else:
2025-01-14T13:17:20.9009440Z             continuum_state = None
2025-01-14T13:17:20.9009597Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9009785Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9009920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9010081Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9010385Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9010536Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9010682Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9010793Z         ).to_numba(
2025-01-14T13:17:20.9010924Z             macro_atom_state,
2025-01-14T13:17:20.9011062Z             self.line_interaction_type,
2025-01-14T13:17:20.9011171Z         )
2025-01-14T13:17:20.9011321Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9011902Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9012016Z         ]
2025-01-14T13:17:20.9012497Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9012655Z 
2025-01-14T13:17:20.9012887Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9013198Z _ ERROR at setup of test_composition_elemental_number_density[index15-34001569] _
2025-01-14T13:17:20.9013211Z 
2025-01-14T13:17:20.9014185Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9014714Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9014721Z 
2025-01-14T13:17:20.9014858Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9015099Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9015244Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9015506Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9015640Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9015755Z >       sim.run_final()
2025-01-14T13:17:20.9015766Z 
2025-01-14T13:17:20.9015886Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9016047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9016195Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9016407Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9016547Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9016785Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9016940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9016946Z 
2025-01-14T13:17:20.9017349Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9017657Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9018014Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9018448Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9018693Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9018894Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9018901Z 
2025-01-14T13:17:20.9019025Z     def initialize_transport_state(
2025-01-14T13:17:20.9019133Z         self,
2025-01-14T13:17:20.9019252Z         simulation_state,
2025-01-14T13:17:20.9019373Z         opacity_state,
2025-01-14T13:17:20.9019491Z         macro_atom_state,
2025-01-14T13:17:20.9019608Z         plasma,
2025-01-14T13:17:20.9019721Z         no_of_packets,
2025-01-14T13:17:20.9019850Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9019969Z         iteration=0,
2025-01-14T13:17:20.9020078Z     ):
2025-01-14T13:17:20.9020271Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9020414Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9020680Z         else:
2025-01-14T13:17:20.9020806Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9020916Z     
2025-01-14T13:17:20.9021122Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9021271Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9021378Z         )
2025-01-14T13:17:20.9021488Z     
2025-01-14T13:17:20.9021833Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9022013Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9022253Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9022367Z         else:
2025-01-14T13:17:20.9022491Z             continuum_state = None
2025-01-14T13:17:20.9022805Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9022971Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9023114Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9023284Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9023431Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9023579Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9023721Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9023834Z         ).to_numba(
2025-01-14T13:17:20.9023961Z             macro_atom_state,
2025-01-14T13:17:20.9024099Z             self.line_interaction_type,
2025-01-14T13:17:20.9024203Z         )
2025-01-14T13:17:20.9024360Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9024786Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9024897Z         ]
2025-01-14T13:17:20.9025365Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9025378Z 
2025-01-14T13:17:20.9025589Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9025878Z _ ERROR at setup of test_composition_elemental_number_density[index16-25822910] _
2025-01-14T13:17:20.9025885Z 
2025-01-14T13:17:20.9026822Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9027362Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9027370Z 
2025-01-14T13:17:20.9027513Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9027759Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9027914Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9028183Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9028321Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9028436Z >       sim.run_final()
2025-01-14T13:17:20.9028442Z 
2025-01-14T13:17:20.9028568Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9028736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9028885Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9029082Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9029240Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9029493Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9029675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9029683Z 
2025-01-14T13:17:20.9030122Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9030449Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9030788Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9031383Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9031775Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9032000Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9032007Z 
2025-01-14T13:17:20.9032146Z     def initialize_transport_state(
2025-01-14T13:17:20.9032256Z         self,
2025-01-14T13:17:20.9032379Z         simulation_state,
2025-01-14T13:17:20.9032493Z         opacity_state,
2025-01-14T13:17:20.9032618Z         macro_atom_state,
2025-01-14T13:17:20.9032736Z         plasma,
2025-01-14T13:17:20.9032850Z         no_of_packets,
2025-01-14T13:17:20.9033159Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9033275Z         iteration=0,
2025-01-14T13:17:20.9033377Z     ):
2025-01-14T13:17:20.9033566Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9033714Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9033816Z         else:
2025-01-14T13:17:20.9033937Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9034035Z     
2025-01-14T13:17:20.9034240Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9034383Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9034488Z         )
2025-01-14T13:17:20.9034587Z     
2025-01-14T13:17:20.9034788Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9034965Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9035212Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9035326Z         else:
2025-01-14T13:17:20.9035463Z             continuum_state = None
2025-01-14T13:17:20.9035614Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9035780Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9035936Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9036100Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9036250Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9036403Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9036554Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9036659Z         ).to_numba(
2025-01-14T13:17:20.9036778Z             macro_atom_state,
2025-01-14T13:17:20.9036913Z             self.line_interaction_type,
2025-01-14T13:17:20.9037032Z         )
2025-01-14T13:17:20.9037190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9037614Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9037741Z         ]
2025-01-14T13:17:20.9038229Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9038236Z 
2025-01-14T13:17:20.9038466Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9038756Z _ ERROR at setup of test_composition_elemental_number_density[index17-19816693] _
2025-01-14T13:17:20.9038762Z 
2025-01-14T13:17:20.9039763Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9040334Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9040342Z 
2025-01-14T13:17:20.9040472Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9040704Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9040848Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9041105Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9041390Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9041506Z >       sim.run_final()
2025-01-14T13:17:20.9041512Z 
2025-01-14T13:17:20.9041768Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9041936Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9042077Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9042287Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9042439Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9042680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9042846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9043001Z 
2025-01-14T13:17:20.9043413Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9043732Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9044083Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9044505Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9044737Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9044939Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9044946Z 
2025-01-14T13:17:20.9045075Z     def initialize_transport_state(
2025-01-14T13:17:20.9045178Z         self,
2025-01-14T13:17:20.9045299Z         simulation_state,
2025-01-14T13:17:20.9045408Z         opacity_state,
2025-01-14T13:17:20.9045522Z         macro_atom_state,
2025-01-14T13:17:20.9045623Z         plasma,
2025-01-14T13:17:20.9045741Z         no_of_packets,
2025-01-14T13:17:20.9045858Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9045970Z         iteration=0,
2025-01-14T13:17:20.9046067Z     ):
2025-01-14T13:17:20.9046253Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9046390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9046495Z         else:
2025-01-14T13:17:20.9046610Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9046715Z     
2025-01-14T13:17:20.9046932Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9047093Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9047213Z         )
2025-01-14T13:17:20.9047324Z     
2025-01-14T13:17:20.9047542Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9047725Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9047984Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9048106Z         else:
2025-01-14T13:17:20.9048246Z             continuum_state = None
2025-01-14T13:17:20.9048414Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9048599Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9048754Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9048931Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9049094Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9049252Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9049410Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9049527Z         ).to_numba(
2025-01-14T13:17:20.9049661Z             macro_atom_state,
2025-01-14T13:17:20.9049804Z             self.line_interaction_type,
2025-01-14T13:17:20.9049922Z         )
2025-01-14T13:17:20.9050090Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9050565Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9050686Z         ]
2025-01-14T13:17:20.9051220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9051371Z 
2025-01-14T13:17:20.9051750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9052051Z ______ ERROR at setup of test_simulation_state_mass[index0-1.4471412e+31] ______
2025-01-14T13:17:20.9052059Z 
2025-01-14T13:17:20.9053166Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9053781Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9053790Z 
2025-01-14T13:17:20.9053945Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9054363Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9054529Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9054830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9054978Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9055102Z >       sim.run_final()
2025-01-14T13:17:20.9055114Z 
2025-01-14T13:17:20.9055248Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9055431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9055596Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9055836Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9055995Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9056256Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9056433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9056446Z 
2025-01-14T13:17:20.9056902Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9057224Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9057589Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9058047Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9058308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9058528Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9058534Z 
2025-01-14T13:17:20.9058671Z     def initialize_transport_state(
2025-01-14T13:17:20.9058786Z         self,
2025-01-14T13:17:20.9058902Z         simulation_state,
2025-01-14T13:17:20.9059025Z         opacity_state,
2025-01-14T13:17:20.9059142Z         macro_atom_state,
2025-01-14T13:17:20.9059266Z         plasma,
2025-01-14T13:17:20.9059379Z         no_of_packets,
2025-01-14T13:17:20.9059511Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9059620Z         iteration=0,
2025-01-14T13:17:20.9059728Z     ):
2025-01-14T13:17:20.9059915Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9060068Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9060181Z         else:
2025-01-14T13:17:20.9060296Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9060398Z     
2025-01-14T13:17:20.9060613Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9060764Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9060898Z         )
2025-01-14T13:17:20.9061006Z     
2025-01-14T13:17:20.9061190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9061357Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9061710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9061834Z         else:
2025-01-14T13:17:20.9061952Z             continuum_state = None
2025-01-14T13:17:20.9062102Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9062435Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9062575Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9062734Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9062874Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9063013Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9063142Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9063249Z         ).to_numba(
2025-01-14T13:17:20.9063362Z             macro_atom_state,
2025-01-14T13:17:20.9063489Z             self.line_interaction_type,
2025-01-14T13:17:20.9063585Z         )
2025-01-14T13:17:20.9063732Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9064269Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9064371Z         ]
2025-01-14T13:17:20.9064816Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9064833Z 
2025-01-14T13:17:20.9065045Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9065335Z ______ ERROR at setup of test_simulation_state_mass[index1-2.6820129e+30] ______
2025-01-14T13:17:20.9065342Z 
2025-01-14T13:17:20.9066288Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9066821Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9066833Z 
2025-01-14T13:17:20.9066961Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9067184Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9067325Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9067581Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9067712Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9067821Z >       sim.run_final()
2025-01-14T13:17:20.9067827Z 
2025-01-14T13:17:20.9067952Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9068116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9068271Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9068477Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9068619Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9068838Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9068998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9069004Z 
2025-01-14T13:17:20.9069394Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9069692Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9070021Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9070422Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9070668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9070872Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9070879Z 
2025-01-14T13:17:20.9071024Z     def initialize_transport_state(
2025-01-14T13:17:20.9071130Z         self,
2025-01-14T13:17:20.9071254Z         simulation_state,
2025-01-14T13:17:20.9071369Z         opacity_state,
2025-01-14T13:17:20.9071494Z         macro_atom_state,
2025-01-14T13:17:20.9071739Z         plasma,
2025-01-14T13:17:20.9071853Z         no_of_packets,
2025-01-14T13:17:20.9071976Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9072251Z         iteration=0,
2025-01-14T13:17:20.9072363Z     ):
2025-01-14T13:17:20.9072558Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9072708Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9072807Z         else:
2025-01-14T13:17:20.9072927Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9073023Z     
2025-01-14T13:17:20.9073221Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9073362Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9073465Z         )
2025-01-14T13:17:20.9073568Z     
2025-01-14T13:17:20.9073773Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9073941Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9074347Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9074455Z         else:
2025-01-14T13:17:20.9074587Z             continuum_state = None
2025-01-14T13:17:20.9074756Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9074926Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9075073Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9075240Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9075391Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9075527Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9075670Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9075786Z         ).to_numba(
2025-01-14T13:17:20.9075919Z             macro_atom_state,
2025-01-14T13:17:20.9076065Z             self.line_interaction_type,
2025-01-14T13:17:20.9076171Z         )
2025-01-14T13:17:20.9076325Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9076788Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9076896Z         ]
2025-01-14T13:17:20.9077345Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9077352Z 
2025-01-14T13:17:20.9077565Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9077813Z ______ ERROR at setup of test_simulation_state_mass[index2-1.3464444e+29] ______
2025-01-14T13:17:20.9077819Z 
2025-01-14T13:17:20.9078759Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9079289Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9079306Z 
2025-01-14T13:17:20.9079435Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9079659Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9079802Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9080057Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9080180Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9080292Z >       sim.run_final()
2025-01-14T13:17:20.9080298Z 
2025-01-14T13:17:20.9080414Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9080571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9080711Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9080917Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9081058Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9081279Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9081442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9081448Z 
2025-01-14T13:17:20.9081970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9082426Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9082780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9083189Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9083425Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9083635Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9083642Z 
2025-01-14T13:17:20.9083779Z     def initialize_transport_state(
2025-01-14T13:17:20.9083882Z         self,
2025-01-14T13:17:20.9084006Z         simulation_state,
2025-01-14T13:17:20.9084259Z         opacity_state,
2025-01-14T13:17:20.9084385Z         macro_atom_state,
2025-01-14T13:17:20.9084495Z         plasma,
2025-01-14T13:17:20.9084606Z         no_of_packets,
2025-01-14T13:17:20.9084730Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9084845Z         iteration=0,
2025-01-14T13:17:20.9084944Z     ):
2025-01-14T13:17:20.9085132Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9085277Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9085386Z         else:
2025-01-14T13:17:20.9085512Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9085626Z     
2025-01-14T13:17:20.9085824Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9085968Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9086069Z         )
2025-01-14T13:17:20.9086166Z     
2025-01-14T13:17:20.9086357Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9086526Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9086750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9086852Z         else:
2025-01-14T13:17:20.9087004Z             continuum_state = None
2025-01-14T13:17:20.9087159Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9087331Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9087464Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9087624Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9087766Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9087911Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9088043Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9088150Z         ).to_numba(
2025-01-14T13:17:20.9088276Z             macro_atom_state,
2025-01-14T13:17:20.9088420Z             self.line_interaction_type,
2025-01-14T13:17:20.9088536Z         )
2025-01-14T13:17:20.9088683Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9089123Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9089228Z         ]
2025-01-14T13:17:20.9089717Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9089725Z 
2025-01-14T13:17:20.9089950Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9090231Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index0-1.67378172e-24] ___
2025-01-14T13:17:20.9090237Z 
2025-01-14T13:17:20.9091255Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9091951Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9091966Z 
2025-01-14T13:17:20.9092115Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9092520Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9092668Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9092937Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9093087Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9093208Z >       sim.run_final()
2025-01-14T13:17:20.9093215Z 
2025-01-14T13:17:20.9093348Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9093532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9093694Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9093929Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9094073Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9094460Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9094615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9094626Z 
2025-01-14T13:17:20.9095036Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9095362Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9095712Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9096149Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9096395Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9096609Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9096615Z 
2025-01-14T13:17:20.9096746Z     def initialize_transport_state(
2025-01-14T13:17:20.9096870Z         self,
2025-01-14T13:17:20.9096981Z         simulation_state,
2025-01-14T13:17:20.9097093Z         opacity_state,
2025-01-14T13:17:20.9097207Z         macro_atom_state,
2025-01-14T13:17:20.9097327Z         plasma,
2025-01-14T13:17:20.9097455Z         no_of_packets,
2025-01-14T13:17:20.9097594Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9097715Z         iteration=0,
2025-01-14T13:17:20.9097833Z     ):
2025-01-14T13:17:20.9098036Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9098198Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9098317Z         else:
2025-01-14T13:17:20.9098437Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9098553Z     
2025-01-14T13:17:20.9098778Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9098938Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9099050Z         )
2025-01-14T13:17:20.9099156Z     
2025-01-14T13:17:20.9099358Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9099542Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9099764Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9099877Z         else:
2025-01-14T13:17:20.9099997Z             continuum_state = None
2025-01-14T13:17:20.9100148Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9100312Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9100472Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9100647Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9100815Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9100967Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9101108Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9101225Z         ).to_numba(
2025-01-14T13:17:20.9101346Z             macro_atom_state,
2025-01-14T13:17:20.9101477Z             self.line_interaction_type,
2025-01-14T13:17:20.9101722Z         )
2025-01-14T13:17:20.9101884Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9102298Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9102564Z         ]
2025-01-14T13:17:20.9103031Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9103038Z 
2025-01-14T13:17:20.9103267Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9103537Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index1-9.51707707e-23] ___
2025-01-14T13:17:20.9103544Z 
2025-01-14T13:17:20.9104500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9105184Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9105192Z 
2025-01-14T13:17:20.9105324Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9105551Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9105690Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9105948Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9106079Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9106206Z >       sim.run_final()
2025-01-14T13:17:20.9106213Z 
2025-01-14T13:17:20.9106340Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9106497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9106656Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9106881Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9107039Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9107274Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9107445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9107457Z 
2025-01-14T13:17:20.9107877Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9108189Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9108563Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9108993Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9109272Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9109486Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9109494Z 
2025-01-14T13:17:20.9109654Z     def initialize_transport_state(
2025-01-14T13:17:20.9109764Z         self,
2025-01-14T13:17:20.9109898Z         simulation_state,
2025-01-14T13:17:20.9110019Z         opacity_state,
2025-01-14T13:17:20.9110158Z         macro_atom_state,
2025-01-14T13:17:20.9110281Z         plasma,
2025-01-14T13:17:20.9110415Z         no_of_packets,
2025-01-14T13:17:20.9110559Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9110667Z         iteration=0,
2025-01-14T13:17:20.9110789Z     ):
2025-01-14T13:17:20.9111005Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9111178Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9111302Z         else:
2025-01-14T13:17:20.9111449Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9111727Z     
2025-01-14T13:17:20.9111968Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9112139Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9112267Z         )
2025-01-14T13:17:20.9112398Z     
2025-01-14T13:17:20.9112642Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9112843Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9113124Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9167231Z         else:
2025-01-14T13:17:20.9167443Z             continuum_state = None
2025-01-14T13:17:20.9167630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9167822Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9167996Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9168180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9168360Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9168517Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9168677Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9168792Z         ).to_numba(
2025-01-14T13:17:20.9168930Z             macro_atom_state,
2025-01-14T13:17:20.9169328Z             self.line_interaction_type,
2025-01-14T13:17:20.9169446Z         )
2025-01-14T13:17:20.9169615Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9170066Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9170139Z         ]
2025-01-14T13:17:20.9170451Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9170457Z 
2025-01-14T13:17:20.9170616Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9170799Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index2-9.54725917e-23] ___
2025-01-14T13:17:20.9170805Z 
2025-01-14T13:17:20.9171450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9171990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9172006Z 
2025-01-14T13:17:20.9172102Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9172274Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9172377Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9172566Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9172652Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9172730Z >       sim.run_final()
2025-01-14T13:17:20.9172735Z 
2025-01-14T13:17:20.9172817Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9172934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9173040Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9173190Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9173298Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9173571Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9173766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9173774Z 
2025-01-14T13:17:20.9174228Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9174522Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9174756Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9175034Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9175197Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9175339Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9175348Z 
2025-01-14T13:17:20.9175440Z     def initialize_transport_state(
2025-01-14T13:17:20.9175507Z         self,
2025-01-14T13:17:20.9175586Z         simulation_state,
2025-01-14T13:17:20.9176031Z         opacity_state,
2025-01-14T13:17:20.9176116Z         macro_atom_state,
2025-01-14T13:17:20.9176187Z         plasma,
2025-01-14T13:17:20.9176262Z         no_of_packets,
2025-01-14T13:17:20.9176341Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9176418Z         iteration=0,
2025-01-14T13:17:20.9176483Z     ):
2025-01-14T13:17:20.9176616Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9176713Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9176782Z         else:
2025-01-14T13:17:20.9176857Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9176924Z     
2025-01-14T13:17:20.9177059Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9177158Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9177350Z         )
2025-01-14T13:17:20.9177416Z     
2025-01-14T13:17:20.9177551Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9177664Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9177825Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9177892Z         else:
2025-01-14T13:17:20.9177976Z             continuum_state = None
2025-01-14T13:17:20.9178076Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9178183Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9178270Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9178378Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9178475Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9178571Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9178659Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9178740Z         ).to_numba(
2025-01-14T13:17:20.9178822Z             macro_atom_state,
2025-01-14T13:17:20.9178908Z             self.line_interaction_type,
2025-01-14T13:17:20.9178974Z         )
2025-01-14T13:17:20.9179076Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9179351Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9179416Z         ]
2025-01-14T13:17:20.9179718Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9179723Z 
2025-01-14T13:17:20.9179871Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9180086Z __ ERROR at setup of TestModelStateFromNonUniformAbundances.test_atomic_mass ___
2025-01-14T13:17:20.9180090Z 
2025-01-14T13:17:20.9180733Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9181088Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9181097Z 
2025-01-14T13:17:20.9181190Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9181342Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9181440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9181774Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9181867Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9181940Z >       sim.run_final()
2025-01-14T13:17:20.9181948Z 
2025-01-14T13:17:20.9182028Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9182137Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9182234Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9182422Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9182587Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9182850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9183194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9183201Z 
2025-01-14T13:17:20.9183590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9183792Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9184010Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9184281Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9184437Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9184573Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9184690Z 
2025-01-14T13:17:20.9184781Z     def initialize_transport_state(
2025-01-14T13:17:20.9184852Z         self,
2025-01-14T13:17:20.9184934Z         simulation_state,
2025-01-14T13:17:20.9185010Z         opacity_state,
2025-01-14T13:17:20.9185083Z         macro_atom_state,
2025-01-14T13:17:20.9185156Z         plasma,
2025-01-14T13:17:20.9185226Z         no_of_packets,
2025-01-14T13:17:20.9185318Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9185391Z         iteration=0,
2025-01-14T13:17:20.9185458Z     ):
2025-01-14T13:17:20.9185583Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9185680Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9185749Z         else:
2025-01-14T13:17:20.9185827Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9185895Z     
2025-01-14T13:17:20.9186030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9186132Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9186197Z         )
2025-01-14T13:17:20.9186276Z     
2025-01-14T13:17:20.9186407Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9186526Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9186678Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9186747Z         else:
2025-01-14T13:17:20.9186828Z             continuum_state = None
2025-01-14T13:17:20.9186928Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9187032Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9187125Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9187234Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9187329Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9187425Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9187514Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9187591Z         ).to_numba(
2025-01-14T13:17:20.9187667Z             macro_atom_state,
2025-01-14T13:17:20.9187766Z             self.line_interaction_type,
2025-01-14T13:17:20.9187838Z         )
2025-01-14T13:17:20.9187948Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9188220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9188290Z         ]
2025-01-14T13:17:20.9188590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9188595Z 
2025-01-14T13:17:20.9188749Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9189000Z _ ERROR at setup of TestModelStateFromNonUniformAbundances.test_elemental_number_density _
2025-01-14T13:17:20.9189005Z 
2025-01-14T13:17:20.9189630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9190076Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9190081Z 
2025-01-14T13:17:20.9190174Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9190334Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9190435Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9190613Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9190702Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9190775Z >       sim.run_final()
2025-01-14T13:17:20.9190779Z 
2025-01-14T13:17:20.9190862Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9190974Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9191189Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9191336Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9191474Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9191883Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9192074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9192083Z 
2025-01-14T13:17:20.9192546Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9192851Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9193080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9193350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9193514Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9193656Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9193660Z 
2025-01-14T13:17:20.9193751Z     def initialize_transport_state(
2025-01-14T13:17:20.9193821Z         self,
2025-01-14T13:17:20.9193902Z         simulation_state,
2025-01-14T13:17:20.9193974Z         opacity_state,
2025-01-14T13:17:20.9194052Z         macro_atom_state,
2025-01-14T13:17:20.9194124Z         plasma,
2025-01-14T13:17:20.9194196Z         no_of_packets,
2025-01-14T13:17:20.9194279Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9194350Z         iteration=0,
2025-01-14T13:17:20.9194421Z     ):
2025-01-14T13:17:20.9194549Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9194646Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9194722Z         else:
2025-01-14T13:17:20.9194802Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9194868Z     
2025-01-14T13:17:20.9195003Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9195103Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9195173Z         )
2025-01-14T13:17:20.9195237Z     
2025-01-14T13:17:20.9195373Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9195486Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9195641Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9195714Z         else:
2025-01-14T13:17:20.9195795Z             continuum_state = None
2025-01-14T13:17:20.9195898Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9196004Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9196098Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9196203Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9196309Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9196401Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9196497Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9196566Z         ).to_numba(
2025-01-14T13:17:20.9196645Z             macro_atom_state,
2025-01-14T13:17:20.9196878Z             self.line_interaction_type,
2025-01-14T13:17:20.9196950Z         )
2025-01-14T13:17:20.9197049Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9197320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9197389Z         ]
2025-01-14T13:17:20.9197690Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9197695Z 
2025-01-14T13:17:20.9197843Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9198008Z _________ ERROR at setup of test_hdf_simulation_state_scalars[t_inner] _________
2025-01-14T13:17:20.9198013Z 
2025-01-14T13:17:20.9198642Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9199108Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9199118Z 
2025-01-14T13:17:20.9199205Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9199360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9199455Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9199633Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9199719Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9199794Z >       sim.run_final()
2025-01-14T13:17:20.9199798Z 
2025-01-14T13:17:20.9199878Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9199993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9200093Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9200233Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9200388Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9200662Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9200845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9200853Z 
2025-01-14T13:17:20.9201308Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9201699Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9201935Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9202213Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9202375Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9202515Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9202524Z 
2025-01-14T13:17:20.9202613Z     def initialize_transport_state(
2025-01-14T13:17:20.9202681Z         self,
2025-01-14T13:17:20.9202763Z         simulation_state,
2025-01-14T13:17:20.9202838Z         opacity_state,
2025-01-14T13:17:20.9202919Z         macro_atom_state,
2025-01-14T13:17:20.9202987Z         plasma,
2025-01-14T13:17:20.9203061Z         no_of_packets,
2025-01-14T13:17:20.9203147Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9203224Z         iteration=0,
2025-01-14T13:17:20.9203290Z     ):
2025-01-14T13:17:20.9203417Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9203511Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9203586Z         else:
2025-01-14T13:17:20.9203662Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9203733Z     
2025-01-14T13:17:20.9203867Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9203963Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9204034Z         )
2025-01-14T13:17:20.9204284Z     
2025-01-14T13:17:20.9204504Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9204682Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9204887Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9204957Z         else:
2025-01-14T13:17:20.9205043Z             continuum_state = None
2025-01-14T13:17:20.9205142Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9205251Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9205340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9205446Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9205542Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9205790Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9205880Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9205953Z         ).to_numba(
2025-01-14T13:17:20.9206041Z             macro_atom_state,
2025-01-14T13:17:20.9206127Z             self.line_interaction_type,
2025-01-14T13:17:20.9206199Z         )
2025-01-14T13:17:20.9206299Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9206572Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9206637Z         ]
2025-01-14T13:17:20.9206936Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9206941Z 
2025-01-14T13:17:20.9207084Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9207265Z _____ ERROR at setup of test_hdf_simulation_state_nparray[dilution_factor] _____
2025-01-14T13:17:20.9207274Z 
2025-01-14T13:17:20.9207899Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9208257Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9208262Z 
2025-01-14T13:17:20.9208355Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9208501Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9208600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9208766Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9208854Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9208929Z >       sim.run_final()
2025-01-14T13:17:20.9208934Z 
2025-01-14T13:17:20.9209019Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9209131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9209227Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9209411Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9209571Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9209837Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9210012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9210019Z 
2025-01-14T13:17:20.9210480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9210682Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9210904Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9211171Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9211338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9211476Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9211733Z 
2025-01-14T13:17:20.9211836Z     def initialize_transport_state(
2025-01-14T13:17:20.9211911Z         self,
2025-01-14T13:17:20.9211988Z         simulation_state,
2025-01-14T13:17:20.9212064Z         opacity_state,
2025-01-14T13:17:20.9212139Z         macro_atom_state,
2025-01-14T13:17:20.9212209Z         plasma,
2025-01-14T13:17:20.9212281Z         no_of_packets,
2025-01-14T13:17:20.9212369Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9212439Z         iteration=0,
2025-01-14T13:17:20.9212509Z     ):
2025-01-14T13:17:20.9212640Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9212740Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9212811Z         else:
2025-01-14T13:17:20.9213025Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9213097Z     
2025-01-14T13:17:20.9213233Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9213335Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9213406Z         )
2025-01-14T13:17:20.9213472Z     
2025-01-14T13:17:20.9213599Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9213715Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9213868Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9213940Z         else:
2025-01-14T13:17:20.9214022Z             continuum_state = None
2025-01-14T13:17:20.9214128Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9214235Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9214332Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9214438Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9214543Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9214643Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9214731Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9214810Z         ).to_numba(
2025-01-14T13:17:20.9214888Z             macro_atom_state,
2025-01-14T13:17:20.9214981Z             self.line_interaction_type,
2025-01-14T13:17:20.9215049Z         )
2025-01-14T13:17:20.9215153Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9215421Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9215494Z         ]
2025-01-14T13:17:20.9215796Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9215801Z 
2025-01-14T13:17:20.9215955Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9216126Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_inner] _________
2025-01-14T13:17:20.9216134Z 
2025-01-14T13:17:20.9216764Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9217120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9217125Z 
2025-01-14T13:17:20.9217213Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9217369Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9217466Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9217640Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9217732Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9217806Z >       sim.run_final()
2025-01-14T13:17:20.9217814Z 
2025-01-14T13:17:20.9217902Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9218010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9218317Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9218561Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9218724Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9218979Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9219159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9219166Z 
2025-01-14T13:17:20.9219484Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9219690Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9219912Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9220295Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9220459Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9220600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9220605Z 
2025-01-14T13:17:20.9220695Z     def initialize_transport_state(
2025-01-14T13:17:20.9220763Z         self,
2025-01-14T13:17:20.9220844Z         simulation_state,
2025-01-14T13:17:20.9220917Z         opacity_state,
2025-01-14T13:17:20.9220997Z         macro_atom_state,
2025-01-14T13:17:20.9221066Z         plasma,
2025-01-14T13:17:20.9221143Z         no_of_packets,
2025-01-14T13:17:20.9221229Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9221301Z         iteration=0,
2025-01-14T13:17:20.9221375Z     ):
2025-01-14T13:17:20.9221498Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9221759Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9221834Z         else:
2025-01-14T13:17:20.9221917Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9221985Z     
2025-01-14T13:17:20.9222127Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9222224Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9222297Z         )
2025-01-14T13:17:20.9222361Z     
2025-01-14T13:17:20.9222491Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9222602Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9222759Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9222828Z         else:
2025-01-14T13:17:20.9222916Z             continuum_state = None
2025-01-14T13:17:20.9223021Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9223126Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9223221Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9223328Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9223434Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9223526Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9223624Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9223693Z         ).to_numba(
2025-01-14T13:17:20.9223779Z             macro_atom_state,
2025-01-14T13:17:20.9223865Z             self.line_interaction_type,
2025-01-14T13:17:20.9223936Z         )
2025-01-14T13:17:20.9224036Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9224303Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9224372Z         ]
2025-01-14T13:17:20.9224668Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9224673Z 
2025-01-14T13:17:20.9224829Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9224995Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_outer] _________
2025-01-14T13:17:20.9225000Z 
2025-01-14T13:17:20.9225627Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9226105Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9226115Z 
2025-01-14T13:17:20.9226203Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9226359Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9226456Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9226629Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9226720Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9226973Z >       sim.run_final()
2025-01-14T13:17:20.9226981Z 
2025-01-14T13:17:20.9227119Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9227304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9227469Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9227709Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9227863Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9228061Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9228170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9228175Z 
2025-01-14T13:17:20.9228434Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9228637Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9228854Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9229133Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9229286Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9229430Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9229434Z 
2025-01-14T13:17:20.9229522Z     def initialize_transport_state(
2025-01-14T13:17:20.9229591Z         self,
2025-01-14T13:17:20.9229672Z         simulation_state,
2025-01-14T13:17:20.9229745Z         opacity_state,
2025-01-14T13:17:20.9229824Z         macro_atom_state,
2025-01-14T13:17:20.9229894Z         plasma,
2025-01-14T13:17:20.9229972Z         no_of_packets,
2025-01-14T13:17:20.9230052Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9230130Z         iteration=0,
2025-01-14T13:17:20.9230196Z     ):
2025-01-14T13:17:20.9230321Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9230416Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9230489Z         else:
2025-01-14T13:17:20.9230566Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9230644Z     
2025-01-14T13:17:20.9230782Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9230882Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9230949Z         )
2025-01-14T13:17:20.9231019Z     
2025-01-14T13:17:20.9231147Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9231256Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9231408Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9231475Z         else:
2025-01-14T13:17:20.9231706Z             continuum_state = None
2025-01-14T13:17:20.9231811Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9231921Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9232011Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9232121Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9232217Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9232447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9232537Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9232611Z         ).to_numba(
2025-01-14T13:17:20.9232686Z             macro_atom_state,
2025-01-14T13:17:20.9232776Z             self.line_interaction_type,
2025-01-14T13:17:20.9232847Z         )
2025-01-14T13:17:20.9232946Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9233217Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9233283Z         ]
2025-01-14T13:17:20.9233583Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9233588Z 
2025-01-14T13:17:20.9233733Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9233995Z _____________________ ERROR at setup of test_hdf_density_0 _____________________
2025-01-14T13:17:20.9233999Z 
2025-01-14T13:17:20.9234627Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9234983Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9234987Z 
2025-01-14T13:17:20.9235077Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9235225Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9235323Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9235490Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9235583Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9235656Z >       sim.run_final()
2025-01-14T13:17:20.9235661Z 
2025-01-14T13:17:20.9235796Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9235983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9236152Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9236389Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9236544Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9236807Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9236921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9236925Z 
2025-01-14T13:17:20.9237190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9237388Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9237613Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9237879Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9238042Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9238183Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9238188Z 
2025-01-14T13:17:20.9238273Z     def initialize_transport_state(
2025-01-14T13:17:20.9238346Z         self,
2025-01-14T13:17:20.9238423Z         simulation_state,
2025-01-14T13:17:20.9238499Z         opacity_state,
2025-01-14T13:17:20.9238573Z         macro_atom_state,
2025-01-14T13:17:20.9238645Z         plasma,
2025-01-14T13:17:20.9238716Z         no_of_packets,
2025-01-14T13:17:20.9238799Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9238872Z         iteration=0,
2025-01-14T13:17:20.9238943Z     ):
2025-01-14T13:17:20.9239061Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9239165Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9239232Z         else:
2025-01-14T13:17:20.9239315Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9239488Z     
2025-01-14T13:17:20.9239633Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9239734Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9239802Z         )
2025-01-14T13:17:20.9239872Z     
2025-01-14T13:17:20.9239998Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9240113Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9240262Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9240334Z         else:
2025-01-14T13:17:20.9240415Z             continuum_state = None
2025-01-14T13:17:20.9240519Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9240624Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9240811Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9240915Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9241016Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9241116Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9241207Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9241283Z         ).to_numba(
2025-01-14T13:17:20.9241368Z             macro_atom_state,
2025-01-14T13:17:20.9241463Z             self.line_interaction_type,
2025-01-14T13:17:20.9241531Z         )
2025-01-14T13:17:20.9241850Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9242123Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9242195Z         ]
2025-01-14T13:17:20.9242492Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9242501Z 
2025-01-14T13:17:20.9242652Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9242805Z ______________________ ERROR at setup of test_hdf_time_0 _______________________
2025-01-14T13:17:20.9242814Z 
2025-01-14T13:17:20.9243438Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9243783Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9243788Z 
2025-01-14T13:17:20.9243876Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9244032Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9244125Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9244421Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9244578Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9244701Z >       sim.run_final()
2025-01-14T13:17:20.9244708Z 
2025-01-14T13:17:20.9244851Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9245029Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9245196Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9245366Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9245467Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9245618Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9245729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9245733Z 
2025-01-14T13:17:20.9245992Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9246194Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9246421Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9246689Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9247015Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9247150Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9247155Z 
2025-01-14T13:17:20.9247246Z     def initialize_transport_state(
2025-01-14T13:17:20.9247316Z         self,
2025-01-14T13:17:20.9247396Z         simulation_state,
2025-01-14T13:17:20.9247470Z         opacity_state,
2025-01-14T13:17:20.9247557Z         macro_atom_state,
2025-01-14T13:17:20.9247629Z         plasma,
2025-01-14T13:17:20.9247706Z         no_of_packets,
2025-01-14T13:17:20.9247786Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9247863Z         iteration=0,
2025-01-14T13:17:20.9247935Z     ):
2025-01-14T13:17:20.9248175Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9248279Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9248347Z         else:
2025-01-14T13:17:20.9248435Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9248500Z     
2025-01-14T13:17:20.9248636Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9248731Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9248802Z         )
2025-01-14T13:17:20.9248866Z     
2025-01-14T13:17:20.9249003Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9249115Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9249269Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9249337Z         else:
2025-01-14T13:17:20.9249424Z             continuum_state = None
2025-01-14T13:17:20.9249527Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9249636Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9249731Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9249833Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9249935Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9250026Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9250125Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9250194Z         ).to_numba(
2025-01-14T13:17:20.9250275Z             macro_atom_state,
2025-01-14T13:17:20.9250361Z             self.line_interaction_type,
2025-01-14T13:17:20.9250433Z         )
2025-01-14T13:17:20.9250539Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9250810Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9250877Z         ]
2025-01-14T13:17:20.9251183Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9251192Z 
2025-01-14T13:17:20.9251339Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9251508Z _____________ ERROR at setup of test_opacity_solver[scatter-False] _____________
2025-01-14T13:17:20.9251518Z 
2025-01-14T13:17:20.9252574Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9252925Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9252930Z 
2025-01-14T13:17:20.9253023Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9253262Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9253425Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9253733Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9253856Z >       sim.iterate(10)
2025-01-14T13:17:20.9253863Z 
2025-01-14T13:17:20.9254188Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9254302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9254404Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9254562Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9254668Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9254673Z 
2025-01-14T13:17:20.9254933Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9255137Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9255358Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9255744Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9255916Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9256056Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9256060Z 
2025-01-14T13:17:20.9256152Z     def initialize_transport_state(
2025-01-14T13:17:20.9256220Z         self,
2025-01-14T13:17:20.9256303Z         simulation_state,
2025-01-14T13:17:20.9256377Z         opacity_state,
2025-01-14T13:17:20.9256457Z         macro_atom_state,
2025-01-14T13:17:20.9256527Z         plasma,
2025-01-14T13:17:20.9256604Z         no_of_packets,
2025-01-14T13:17:20.9256690Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9256762Z         iteration=0,
2025-01-14T13:17:20.9256833Z     ):
2025-01-14T13:17:20.9256964Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9257068Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9257202Z         else:
2025-01-14T13:17:20.9257344Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9257454Z     
2025-01-14T13:17:20.9257691Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9257851Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9257967Z         )
2025-01-14T13:17:20.9258075Z     
2025-01-14T13:17:20.9258267Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9258383Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9258539Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9258610Z         else:
2025-01-14T13:17:20.9258697Z             continuum_state = None
2025-01-14T13:17:20.9258805Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9258912Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9259008Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9259118Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9259220Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9259312Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9259410Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9259479Z         ).to_numba(
2025-01-14T13:17:20.9259560Z             macro_atom_state,
2025-01-14T13:17:20.9259649Z             self.line_interaction_type,
2025-01-14T13:17:20.9259721Z         )
2025-01-14T13:17:20.9259821Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9260090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9260163Z         ]
2025-01-14T13:17:20.9260464Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9260469Z 
2025-01-14T13:17:20.9260621Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9260778Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9261245Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9262061Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9262230Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9262727Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9262897Z ____________ ERROR at setup of test_opacity_solver[macroatom-False] ____________
2025-01-14T13:17:20.9262901Z 
2025-01-14T13:17:20.9263547Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9264367Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9264381Z 
2025-01-14T13:17:20.9264534Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9264798Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9264911Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9265093Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9265169Z >       sim.iterate(10)
2025-01-14T13:17:20.9265174Z 
2025-01-14T13:17:20.9265273Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9265380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9265480Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9265636Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9265749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9265755Z 
2025-01-14T13:17:20.9266019Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9266226Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9266448Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9266720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9266889Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9267021Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9267026Z 
2025-01-14T13:17:20.9267116Z     def initialize_transport_state(
2025-01-14T13:17:20.9267185Z         self,
2025-01-14T13:17:20.9267272Z         simulation_state,
2025-01-14T13:17:20.9267348Z         opacity_state,
2025-01-14T13:17:20.9267427Z         macro_atom_state,
2025-01-14T13:17:20.9267496Z         plasma,
2025-01-14T13:17:20.9267576Z         no_of_packets,
2025-01-14T13:17:20.9267661Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9267739Z         iteration=0,
2025-01-14T13:17:20.9267806Z     ):
2025-01-14T13:17:20.9267937Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9268038Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9268107Z         else:
2025-01-14T13:17:20.9268188Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9268254Z     
2025-01-14T13:17:20.9268394Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9268490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9268562Z         )
2025-01-14T13:17:20.9268630Z     
2025-01-14T13:17:20.9268763Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9268881Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9269041Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9269109Z         else:
2025-01-14T13:17:20.9269324Z             continuum_state = None
2025-01-14T13:17:20.9269423Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9269533Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9269628Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9269734Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9269836Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9269928Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9270022Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9270092Z         ).to_numba(
2025-01-14T13:17:20.9270176Z             macro_atom_state,
2025-01-14T13:17:20.9270262Z             self.line_interaction_type,
2025-01-14T13:17:20.9270413Z         )
2025-01-14T13:17:20.9270514Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9270787Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9270859Z         ]
2025-01-14T13:17:20.9271161Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9271166Z 
2025-01-14T13:17:20.9271317Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9271483Z ____________ ERROR at setup of test_opacity_solver[macroatom-True] _____________
2025-01-14T13:17:20.9271488Z 
2025-01-14T13:17:20.9272240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9272715Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9272730Z 
2025-01-14T13:17:20.9272885Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9273156Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9273320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9273623Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9273729Z >       sim.iterate(10)
2025-01-14T13:17:20.9273735Z 
2025-01-14T13:17:20.9273837Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9273942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9274044Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9274197Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9274306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9274315Z 
2025-01-14T13:17:20.9274575Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9274779Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9275007Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9275281Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9275446Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9275578Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9275583Z 
2025-01-14T13:17:20.9275673Z     def initialize_transport_state(
2025-01-14T13:17:20.9275741Z         self,
2025-01-14T13:17:20.9275824Z         simulation_state,
2025-01-14T13:17:20.9275898Z         opacity_state,
2025-01-14T13:17:20.9275978Z         macro_atom_state,
2025-01-14T13:17:20.9276050Z         plasma,
2025-01-14T13:17:20.9276127Z         no_of_packets,
2025-01-14T13:17:20.9276207Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9276284Z         iteration=0,
2025-01-14T13:17:20.9276523Z     ):
2025-01-14T13:17:20.9276653Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9276755Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9276823Z         else:
2025-01-14T13:17:20.9276904Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9276969Z     
2025-01-14T13:17:20.9277109Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9277203Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9277277Z         )
2025-01-14T13:17:20.9277343Z     
2025-01-14T13:17:20.9277477Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9277587Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9277744Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9277923Z         else:
2025-01-14T13:17:20.9278010Z             continuum_state = None
2025-01-14T13:17:20.9278109Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9278225Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9278320Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9278424Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9278526Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9278619Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9278714Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9278783Z         ).to_numba(
2025-01-14T13:17:20.9278866Z             macro_atom_state,
2025-01-14T13:17:20.9278950Z             self.line_interaction_type,
2025-01-14T13:17:20.9279022Z         )
2025-01-14T13:17:20.9279119Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9279387Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9279459Z         ]
2025-01-14T13:17:20.9279761Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9279769Z 
2025-01-14T13:17:20.9279919Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9280084Z ___________ ERROR at setup of test_opacity_solver[downbranch-False] ____________
2025-01-14T13:17:20.9280089Z 
2025-01-14T13:17:20.9280718Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9281062Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9281066Z 
2025-01-14T13:17:20.9281162Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9281444Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9281739Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9282052Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9282180Z >       sim.iterate(10)
2025-01-14T13:17:20.9282187Z 
2025-01-14T13:17:20.9282347Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9282529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9282635Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9282789Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9282896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9282901Z 
2025-01-14T13:17:20.9283159Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9283369Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9283589Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9284010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9284177Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9284306Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9284311Z 
2025-01-14T13:17:20.9284404Z     def initialize_transport_state(
2025-01-14T13:17:20.9284472Z         self,
2025-01-14T13:17:20.9284559Z         simulation_state,
2025-01-14T13:17:20.9284632Z         opacity_state,
2025-01-14T13:17:20.9284715Z         macro_atom_state,
2025-01-14T13:17:20.9284792Z         plasma,
2025-01-14T13:17:20.9284874Z         no_of_packets,
2025-01-14T13:17:20.9284963Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9285144Z         iteration=0,
2025-01-14T13:17:20.9285215Z     ):
2025-01-14T13:17:20.9285347Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9285451Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9285524Z         else:
2025-01-14T13:17:20.9285609Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9285675Z     
2025-01-14T13:17:20.9285817Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9285913Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9286006Z         )
2025-01-14T13:17:20.9286087Z     
2025-01-14T13:17:20.9286223Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9286339Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9286497Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9286566Z         else:
2025-01-14T13:17:20.9286654Z             continuum_state = None
2025-01-14T13:17:20.9286763Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9286869Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9286972Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9287084Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9287188Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9287281Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9287379Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9287456Z         ).to_numba(
2025-01-14T13:17:20.9287542Z             macro_atom_state,
2025-01-14T13:17:20.9287630Z             self.line_interaction_type,
2025-01-14T13:17:20.9287703Z         )
2025-01-14T13:17:20.9287805Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9288087Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9288156Z         ]
2025-01-14T13:17:20.9288466Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9288471Z 
2025-01-14T13:17:20.9288623Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9288795Z ____________ ERROR at setup of test_opacity_solver[downbranch-True] ____________
2025-01-14T13:17:20.9288800Z 
2025-01-14T13:17:20.9289436Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9289781Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9289792Z 
2025-01-14T13:17:20.9289888Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9290051Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9290154Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9290420Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9290549Z >       sim.iterate(10)
2025-01-14T13:17:20.9290672Z 
2025-01-14T13:17:20.9290840Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9291021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9291184Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9291457Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9291737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9291747Z 
2025-01-14T13:17:20.9292037Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9292242Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9292466Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9292884Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9293118Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9293256Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9293261Z 
2025-01-14T13:17:20.9293358Z     def initialize_transport_state(
2025-01-14T13:17:20.9293428Z         self,
2025-01-14T13:17:20.9293512Z         simulation_state,
2025-01-14T13:17:20.9293593Z         opacity_state,
2025-01-14T13:17:20.9293676Z         macro_atom_state,
2025-01-14T13:17:20.9293751Z         plasma,
2025-01-14T13:17:20.9293824Z         no_of_packets,
2025-01-14T13:17:20.9293912Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9293985Z         iteration=0,
2025-01-14T13:17:20.9294058Z     ):
2025-01-14T13:17:20.9294185Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9294288Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9294356Z         else:
2025-01-14T13:17:20.9294441Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9294508Z     
2025-01-14T13:17:20.9294651Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9294752Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9294826Z         )
2025-01-14T13:17:20.9294892Z     
2025-01-14T13:17:20.9295027Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9295142Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9295302Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9295375Z         else:
2025-01-14T13:17:20.9295458Z             continuum_state = None
2025-01-14T13:17:20.9295567Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9295689Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9295828Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9295936Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9296040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9296135Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9296231Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9296301Z         ).to_numba(
2025-01-14T13:17:20.9296390Z             macro_atom_state,
2025-01-14T13:17:20.9296478Z             self.line_interaction_type,
2025-01-14T13:17:20.9296551Z         )
2025-01-14T13:17:20.9296654Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9296929Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9297007Z         ]
2025-01-14T13:17:20.9297309Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9297313Z 
2025-01-14T13:17:20.9297497Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9297678Z _________ ERROR at setup of test_opacity_state_to_numba[scatter-False] _________
2025-01-14T13:17:20.9297809Z 
2025-01-14T13:17:20.9298448Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9298797Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9298807Z 
2025-01-14T13:17:20.9298893Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9299055Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9299152Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9299327Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9299556Z >       sim.iterate(10)
2025-01-14T13:17:20.9299562Z 
2025-01-14T13:17:20.9299664Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9299787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9299975Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9300243Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9300428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9300435Z 
2025-01-14T13:17:20.9300894Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9301130Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9301356Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9301724Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9301896Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9302028Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9302036Z 
2025-01-14T13:17:20.9302126Z     def initialize_transport_state(
2025-01-14T13:17:20.9302195Z         self,
2025-01-14T13:17:20.9302276Z         simulation_state,
2025-01-14T13:17:20.9302357Z         opacity_state,
2025-01-14T13:17:20.9302432Z         macro_atom_state,
2025-01-14T13:17:20.9302506Z         plasma,
2025-01-14T13:17:20.9302579Z         no_of_packets,
2025-01-14T13:17:20.9302666Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9302739Z         iteration=0,
2025-01-14T13:17:20.9302812Z     ):
2025-01-14T13:17:20.9302935Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9303035Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9303107Z         else:
2025-01-14T13:17:20.9303191Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9303264Z     
2025-01-14T13:17:20.9303407Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9303511Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9303589Z         )
2025-01-14T13:17:20.9303655Z     
2025-01-14T13:17:20.9303790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9303911Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9304069Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9304142Z         else:
2025-01-14T13:17:20.9304224Z             continuum_state = None
2025-01-14T13:17:20.9304329Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9304437Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9304532Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9304636Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9304741Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9304833Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9304929Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9305145Z         ).to_numba(
2025-01-14T13:17:20.9305230Z             macro_atom_state,
2025-01-14T13:17:20.9305316Z             self.line_interaction_type,
2025-01-14T13:17:20.9305388Z         )
2025-01-14T13:17:20.9305486Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9305758Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9305830Z         ]
2025-01-14T13:17:20.9306126Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9306131Z 
2025-01-14T13:17:20.9306282Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9306433Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9306836Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9307275Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9307434Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9307925Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9308106Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-False] ________
2025-01-14T13:17:20.9308110Z 
2025-01-14T13:17:20.9308741Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9309200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9309209Z 
2025-01-14T13:17:20.9309370Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9309638Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9309805Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9310106Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9310213Z >       sim.iterate(10)
2025-01-14T13:17:20.9310218Z 
2025-01-14T13:17:20.9310321Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9310428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9310535Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9310689Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9310796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9310804Z 
2025-01-14T13:17:20.9311063Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9311274Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9311500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9311874Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9312040Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9312174Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9312179Z 
2025-01-14T13:17:20.9312269Z     def initialize_transport_state(
2025-01-14T13:17:20.9312338Z         self,
2025-01-14T13:17:20.9312424Z         simulation_state,
2025-01-14T13:17:20.9312498Z         opacity_state,
2025-01-14T13:17:20.9312583Z         macro_atom_state,
2025-01-14T13:17:20.9312653Z         plasma,
2025-01-14T13:17:20.9312731Z         no_of_packets,
2025-01-14T13:17:20.9312812Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9313038Z         iteration=0,
2025-01-14T13:17:20.9313111Z     ):
2025-01-14T13:17:20.9313236Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9313335Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9313405Z         else:
2025-01-14T13:17:20.9313491Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9313557Z     
2025-01-14T13:17:20.9313699Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9313793Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9313867Z         )
2025-01-14T13:17:20.9313933Z     
2025-01-14T13:17:20.9314066Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9314179Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9314448Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9314517Z         else:
2025-01-14T13:17:20.9314606Z             continuum_state = None
2025-01-14T13:17:20.9314710Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9314826Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9314923Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9315026Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9315129Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9315223Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9315322Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9315396Z         ).to_numba(
2025-01-14T13:17:20.9315481Z             macro_atom_state,
2025-01-14T13:17:20.9315567Z             self.line_interaction_type,
2025-01-14T13:17:20.9315641Z         )
2025-01-14T13:17:20.9315740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9316019Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9316087Z         ]
2025-01-14T13:17:20.9316398Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9316403Z 
2025-01-14T13:17:20.9316555Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9316779Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-True] _________
2025-01-14T13:17:20.9316784Z 
2025-01-14T13:17:20.9317591Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9318014Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9318024Z 
2025-01-14T13:17:20.9318183Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9318373Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9318603Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9319045Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9319222Z >       sim.iterate(10)
2025-01-14T13:17:20.9319229Z 
2025-01-14T13:17:20.9319454Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9319744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9320024Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9320239Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9320414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9320419Z 
2025-01-14T13:17:20.9320714Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9321027Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9321334Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9321919Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9322158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9322324Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9322329Z 
2025-01-14T13:17:20.9322527Z     def initialize_transport_state(
2025-01-14T13:17:20.9322663Z         self,
2025-01-14T13:17:20.9322815Z         simulation_state,
2025-01-14T13:17:20.9322926Z         opacity_state,
2025-01-14T13:17:20.9323071Z         macro_atom_state,
2025-01-14T13:17:20.9323238Z         plasma,
2025-01-14T13:17:20.9323378Z         no_of_packets,
2025-01-14T13:17:20.9323658Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9323765Z         iteration=0,
2025-01-14T13:17:20.9323898Z     ):
2025-01-14T13:17:20.9324046Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9324295Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9324400Z         else:
2025-01-14T13:17:20.9324546Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9324645Z     
2025-01-14T13:17:20.9324851Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9325022Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9325175Z         )
2025-01-14T13:17:20.9325276Z     
2025-01-14T13:17:20.9325475Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9325691Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9325917Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9326070Z         else:
2025-01-14T13:17:20.9326191Z             continuum_state = None
2025-01-14T13:17:20.9326362Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9326517Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9326708Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9326861Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9327030Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9327156Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9327332Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9327496Z         ).to_numba(
2025-01-14T13:17:20.9327624Z             macro_atom_state,
2025-01-14T13:17:20.9327777Z             self.line_interaction_type,
2025-01-14T13:17:20.9327877Z         )
2025-01-14T13:17:20.9328551Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9329065Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9329273Z         ]
2025-01-14T13:17:20.9329821Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9329830Z 
2025-01-14T13:17:20.9330217Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9330433Z _______ ERROR at setup of test_opacity_state_to_numba[downbranch-False] ________
2025-01-14T13:17:20.9330494Z 
2025-01-14T13:17:20.9331154Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9331752Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9331765Z 
2025-01-14T13:17:20.9331897Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9332212Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9332369Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9332611Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9332917Z >       sim.iterate(10)
2025-01-14T13:17:20.9332923Z 
2025-01-14T13:17:20.9333038Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9333312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9333448Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9333680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9333818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9333823Z 
2025-01-14T13:17:20.9334143Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9334426Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9334875Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9335218Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9335416Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9335617Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9335622Z 
2025-01-14T13:17:20.9335796Z     def initialize_transport_state(
2025-01-14T13:17:20.9335953Z         self,
2025-01-14T13:17:20.9336066Z         simulation_state,
2025-01-14T13:17:20.9336213Z         opacity_state,
2025-01-14T13:17:20.9336339Z         macro_atom_state,
2025-01-14T13:17:20.9336505Z         plasma,
2025-01-14T13:17:20.9336628Z         no_of_packets,
2025-01-14T13:17:20.9336778Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9336916Z         iteration=0,
2025-01-14T13:17:20.9337031Z     ):
2025-01-14T13:17:20.9337273Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9337419Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9337555Z         else:
2025-01-14T13:17:20.9337672Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9337837Z     
2025-01-14T13:17:20.9338025Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9338416Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9338599Z         )
2025-01-14T13:17:20.9338891Z     
2025-01-14T13:17:20.9339181Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9339471Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9339730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9339834Z         else:
2025-01-14T13:17:20.9340035Z             continuum_state = None
2025-01-14T13:17:20.9340187Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9340363Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9340492Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9340681Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9340803Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9341025Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9341150Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9341291Z         ).to_numba(
2025-01-14T13:17:20.9341400Z             macro_atom_state,
2025-01-14T13:17:20.9341701Z             self.line_interaction_type,
2025-01-14T13:17:20.9341912Z         )
2025-01-14T13:17:20.9342052Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9342391Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9342508Z         ]
2025-01-14T13:17:20.9342863Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9342872Z 
2025-01-14T13:17:20.9343099Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9343366Z ________ ERROR at setup of test_opacity_state_to_numba[downbranch-True] ________
2025-01-14T13:17:20.9343503Z 
2025-01-14T13:17:20.9344184Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9344623Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9344628Z 
2025-01-14T13:17:20.9344770Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9345013Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9345196Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9345533Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9345678Z >       sim.iterate(10)
2025-01-14T13:17:20.9345683Z 
2025-01-14T13:17:20.9345829Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9346025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9346222Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9346411Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9346581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9346586Z 
2025-01-14T13:17:20.9346878Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9347175Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9347457Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9347802Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9348028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9348229Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9348238Z 
2025-01-14T13:17:20.9348560Z     def initialize_transport_state(
2025-01-14T13:17:20.9348758Z         self,
2025-01-14T13:17:20.9348957Z         simulation_state,
2025-01-14T13:17:20.9349180Z         opacity_state,
2025-01-14T13:17:20.9349414Z         macro_atom_state,
2025-01-14T13:17:20.9349580Z         plasma,
2025-01-14T13:17:20.9349769Z         no_of_packets,
2025-01-14T13:17:20.9349888Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9350063Z         iteration=0,
2025-01-14T13:17:20.9350178Z     ):
2025-01-14T13:17:20.9350378Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9350557Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9350664Z         else:
2025-01-14T13:17:20.9350839Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9350955Z     
2025-01-14T13:17:20.9351170Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9351320Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9351454Z         )
2025-01-14T13:17:20.9351539Z     
2025-01-14T13:17:20.9351921Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9352075Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9352316Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9352417Z         else:
2025-01-14T13:17:20.9352555Z             continuum_state = None
2025-01-14T13:17:20.9352781Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9352921Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9353095Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9353234Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9353388Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9353555Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9353888Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9353992Z         ).to_numba(
2025-01-14T13:17:20.9354137Z             macro_atom_state,
2025-01-14T13:17:20.9354258Z             self.line_interaction_type,
2025-01-14T13:17:20.9354426Z         )
2025-01-14T13:17:20.9354595Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9354939Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9355074Z         ]
2025-01-14T13:17:20.9355407Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9355412Z 
2025-01-14T13:17:20.9355658Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9356014Z ____________ ERROR at setup of test_calculate_sobolev_line_opacity _____________
2025-01-14T13:17:20.9356020Z 
2025-01-14T13:17:20.9356734Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9357153Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9357158Z 
2025-01-14T13:17:20.9357282Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9357645Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9357856Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9358225Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9358464Z >       sim.iterate(10)
2025-01-14T13:17:20.9358479Z 
2025-01-14T13:17:20.9358768Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9358976Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9359151Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9359361Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9359546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9359551Z 
2025-01-14T13:17:20.9359914Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3783fc7440>
2025-01-14T13:17:20.9360144Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3784512690>
2025-01-14T13:17:20.9360431Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f377eb66cf0>
2025-01-14T13:17:20.9360734Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378897b0b0>
2025-01-14T13:17:20.9361022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378897ae10>
2025-01-14T13:17:20.9361262Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9361267Z 
2025-01-14T13:17:20.9361389Z     def initialize_transport_state(
2025-01-14T13:17:20.9361533Z         self,
2025-01-14T13:17:20.9361752Z         simulation_state,
2025-01-14T13:17:20.9361938Z         opacity_state,
2025-01-14T13:17:20.9362082Z         macro_atom_state,
2025-01-14T13:17:20.9362222Z         plasma,
2025-01-14T13:17:20.9362327Z         no_of_packets,
2025-01-14T13:17:20.9362481Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9362571Z         iteration=0,
2025-01-14T13:17:20.9362785Z     ):
2025-01-14T13:17:20.9362946Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9363112Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9363213Z         else:
2025-01-14T13:17:20.9363345Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9363559Z     
2025-01-14T13:17:20.9363732Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9363902Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9364185Z         )
2025-01-14T13:17:20.9364304Z     
2025-01-14T13:17:20.9364670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9364875Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9365061Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9365196Z         else:
2025-01-14T13:17:20.9365329Z             continuum_state = None
2025-01-14T13:17:20.9365530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9365687Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9365847Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9366035Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9366164Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9366354Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9366613Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9366753Z         ).to_numba(
2025-01-14T13:17:20.9366883Z             macro_atom_state,
2025-01-14T13:17:20.9367050Z             self.line_interaction_type,
2025-01-14T13:17:20.9367172Z         )
2025-01-14T13:17:20.9367528Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9368037Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9368314Z         ]
2025-01-14T13:17:20.9368838Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9368846Z 
2025-01-14T13:17:20.9369026Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9369247Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9369579Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9370155Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9370358Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9370920Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9371145Z ________________ ERROR at setup of test_calculate_beta_sobolevs ________________
2025-01-14T13:17:20.9371150Z 
2025-01-14T13:17:20.9372070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9372531Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9372545Z 
2025-01-14T13:17:20.9372686Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9372924Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9373095Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9373319Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9384250Z >       sim.iterate(10)
2025-01-14T13:17:20.9384275Z 
2025-01-14T13:17:20.9384450Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9384655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9384834Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9385108Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9385296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9385313Z 
2025-01-14T13:17:20.9385840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3783fc7440>
2025-01-14T13:17:20.9386066Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3784512690>
2025-01-14T13:17:20.9386570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f377eb66cf0>
2025-01-14T13:17:20.9387068Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378897b0b0>
2025-01-14T13:17:20.9387350Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378897ae10>
2025-01-14T13:17:20.9387582Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9387592Z 
2025-01-14T13:17:20.9387697Z     def initialize_transport_state(
2025-01-14T13:17:20.9387769Z         self,
2025-01-14T13:17:20.9387853Z         simulation_state,
2025-01-14T13:17:20.9387927Z         opacity_state,
2025-01-14T13:17:20.9388008Z         macro_atom_state,
2025-01-14T13:17:20.9388080Z         plasma,
2025-01-14T13:17:20.9388290Z         no_of_packets,
2025-01-14T13:17:20.9388384Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9388456Z         iteration=0,
2025-01-14T13:17:20.9388527Z     ):
2025-01-14T13:17:20.9388664Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9388767Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9388835Z         else:
2025-01-14T13:17:20.9388917Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9388982Z     
2025-01-14T13:17:20.9389127Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9389225Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9389295Z         )
2025-01-14T13:17:20.9389361Z     
2025-01-14T13:17:20.9389499Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9389613Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9389776Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9389849Z         else:
2025-01-14T13:17:20.9389936Z             continuum_state = None
2025-01-14T13:17:20.9390045Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9390153Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9390252Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9390358Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9390463Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9390556Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9390652Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9390723Z         ).to_numba(
2025-01-14T13:17:20.9390805Z             macro_atom_state,
2025-01-14T13:17:20.9390892Z             self.line_interaction_type,
2025-01-14T13:17:20.9390968Z         )
2025-01-14T13:17:20.9391068Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9391347Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9391418Z         ]
2025-01-14T13:17:20.9391851Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9391861Z 
2025-01-14T13:17:20.9392019Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9392185Z ______________ ERROR at setup of test_hdf_plasma[number_density] _______________
2025-01-14T13:17:20.9392190Z 
2025-01-14T13:17:20.9392837Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9393185Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9393195Z 
2025-01-14T13:17:20.9393287Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9393454Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9393553Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9393857Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9393945Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9394023Z >       sim.run_final()
2025-01-14T13:17:20.9394028Z 
2025-01-14T13:17:20.9394110Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9394225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9394321Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9394471Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9394566Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9394726Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9394837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9394948Z 
2025-01-14T13:17:20.9395214Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9395422Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9395645Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9395923Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9396083Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9396231Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9396235Z 
2025-01-14T13:17:20.9396324Z     def initialize_transport_state(
2025-01-14T13:17:20.9396431Z         self,
2025-01-14T13:17:20.9396578Z         simulation_state,
2025-01-14T13:17:20.9396704Z         opacity_state,
2025-01-14T13:17:20.9396837Z         macro_atom_state,
2025-01-14T13:17:20.9396961Z         plasma,
2025-01-14T13:17:20.9397086Z         no_of_packets,
2025-01-14T13:17:20.9397221Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9397346Z         iteration=0,
2025-01-14T13:17:20.9397461Z     ):
2025-01-14T13:17:20.9397649Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9397750Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9397823Z         else:
2025-01-14T13:17:20.9397932Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9398017Z     
2025-01-14T13:17:20.9398156Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9398258Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9398324Z         )
2025-01-14T13:17:20.9398393Z     
2025-01-14T13:17:20.9398522Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9398640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9398798Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9398870Z         else:
2025-01-14T13:17:20.9398958Z             continuum_state = None
2025-01-14T13:17:20.9399058Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9399173Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9399264Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9399375Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9399472Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9399573Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9399664Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9399739Z         ).to_numba(
2025-01-14T13:17:20.9399818Z             macro_atom_state,
2025-01-14T13:17:20.9399911Z             self.line_interaction_type,
2025-01-14T13:17:20.9399983Z         )
2025-01-14T13:17:20.9400083Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9400361Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9400428Z         ]
2025-01-14T13:17:20.9400735Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9400835Z 
2025-01-14T13:17:20.9400988Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9401152Z _________________ ERROR at setup of test_hdf_plasma[beta_rad] __________________
2025-01-14T13:17:20.9401157Z 
2025-01-14T13:17:20.9401898Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9402250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9402392Z 
2025-01-14T13:17:20.9402495Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9402650Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9402754Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9402932Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9403025Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9403100Z >       sim.run_final()
2025-01-14T13:17:20.9403105Z 
2025-01-14T13:17:20.9403189Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9403294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9403391Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9403534Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9403627Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9403785Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9403892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9403897Z 
2025-01-14T13:17:20.9404169Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9404375Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9404600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9405031Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9405319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9405554Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9405561Z 
2025-01-14T13:17:20.9405706Z     def initialize_transport_state(
2025-01-14T13:17:20.9405835Z         self,
2025-01-14T13:17:20.9405925Z         simulation_state,
2025-01-14T13:17:20.9406011Z         opacity_state,
2025-01-14T13:17:20.9406091Z         macro_atom_state,
2025-01-14T13:17:20.9406167Z         plasma,
2025-01-14T13:17:20.9406241Z         no_of_packets,
2025-01-14T13:17:20.9406329Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9406406Z         iteration=0,
2025-01-14T13:17:20.9406477Z     ):
2025-01-14T13:17:20.9406608Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9406710Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9406778Z         else:
2025-01-14T13:17:20.9406861Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9406932Z     
2025-01-14T13:17:20.9407066Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9407165Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9407235Z         )
2025-01-14T13:17:20.9407305Z     
2025-01-14T13:17:20.9407430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9407546Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9407704Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9407778Z         else:
2025-01-14T13:17:20.9407860Z             continuum_state = None
2025-01-14T13:17:20.9408105Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9408215Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9408314Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9408422Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9408526Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9408623Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9408712Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9408793Z         ).to_numba(
2025-01-14T13:17:20.9408877Z             macro_atom_state,
2025-01-14T13:17:20.9408971Z             self.line_interaction_type,
2025-01-14T13:17:20.9409036Z         )
2025-01-14T13:17:20.9409139Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9409492Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9409570Z         ]
2025-01-14T13:17:20.9409879Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9409884Z 
2025-01-14T13:17:20.9410037Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9410219Z ______ ERROR at setup of test_hdf_plasma[general_level_boltzmann_factor] _______
2025-01-14T13:17:20.9410228Z 
2025-01-14T13:17:20.9410859Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9411211Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9411221Z 
2025-01-14T13:17:20.9411310Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9411466Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9411906Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9412098Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9412188Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9412268Z >       sim.run_final()
2025-01-14T13:17:20.9412273Z 
2025-01-14T13:17:20.9412358Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9412470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9412573Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9412710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9412810Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9412964Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9413094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9413105Z 
2025-01-14T13:17:20.9413566Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9413926Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9414292Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9414567Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9414729Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9414864Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9414869Z 
2025-01-14T13:17:20.9414960Z     def initialize_transport_state(
2025-01-14T13:17:20.9415029Z         self,
2025-01-14T13:17:20.9415111Z         simulation_state,
2025-01-14T13:17:20.9415188Z         opacity_state,
2025-01-14T13:17:20.9415267Z         macro_atom_state,
2025-01-14T13:17:20.9415338Z         plasma,
2025-01-14T13:17:20.9415415Z         no_of_packets,
2025-01-14T13:17:20.9415637Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9415717Z         iteration=0,
2025-01-14T13:17:20.9415788Z     ):
2025-01-14T13:17:20.9415914Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9416017Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9416085Z         else:
2025-01-14T13:17:20.9416167Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9416233Z     
2025-01-14T13:17:20.9416374Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9416470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9416541Z         )
2025-01-14T13:17:20.9416606Z     
2025-01-14T13:17:20.9416736Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9416959Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9417119Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9417187Z         else:
2025-01-14T13:17:20.9417278Z             continuum_state = None
2025-01-14T13:17:20.9417377Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9417489Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9417584Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9417691Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9417796Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9417892Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9417988Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9418059Z         ).to_numba(
2025-01-14T13:17:20.9418145Z             macro_atom_state,
2025-01-14T13:17:20.9418232Z             self.line_interaction_type,
2025-01-14T13:17:20.9418307Z         )
2025-01-14T13:17:20.9418409Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9418685Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9418755Z         ]
2025-01-14T13:17:20.9419063Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9419068Z 
2025-01-14T13:17:20.9419219Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9419385Z __________ ERROR at setup of test_hdf_plasma[level_boltzmann_factor] ___________
2025-01-14T13:17:20.9419390Z 
2025-01-14T13:17:20.9420033Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9420380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9420389Z 
2025-01-14T13:17:20.9420482Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9420643Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9420738Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9420917Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9421006Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9421082Z >       sim.run_final()
2025-01-14T13:17:20.9421086Z 
2025-01-14T13:17:20.9421166Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9421275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9421374Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9421757Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9421923Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9422196Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9422378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9422544Z 
2025-01-14T13:17:20.9422887Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9423100Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9423321Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9423596Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9423757Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9423894Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9423899Z 
2025-01-14T13:17:20.9423987Z     def initialize_transport_state(
2025-01-14T13:17:20.9424178Z         self,
2025-01-14T13:17:20.9424256Z         simulation_state,
2025-01-14T13:17:20.9424339Z         opacity_state,
2025-01-14T13:17:20.9424423Z         macro_atom_state,
2025-01-14T13:17:20.9424493Z         plasma,
2025-01-14T13:17:20.9424576Z         no_of_packets,
2025-01-14T13:17:20.9424657Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9424733Z         iteration=0,
2025-01-14T13:17:20.9424805Z     ):
2025-01-14T13:17:20.9424938Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9425035Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9425111Z         else:
2025-01-14T13:17:20.9425189Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9425262Z     
2025-01-14T13:17:20.9425398Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9425494Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9425565Z         )
2025-01-14T13:17:20.9425627Z     
2025-01-14T13:17:20.9425762Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9425880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9426040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9426113Z         else:
2025-01-14T13:17:20.9426202Z             continuum_state = None
2025-01-14T13:17:20.9426303Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9426415Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9426506Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9426616Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9426715Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9426814Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9426903Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9426979Z         ).to_numba(
2025-01-14T13:17:20.9427059Z             macro_atom_state,
2025-01-14T13:17:20.9427144Z             self.line_interaction_type,
2025-01-14T13:17:20.9427219Z         )
2025-01-14T13:17:20.9427318Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9427592Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9427668Z         ]
2025-01-14T13:17:20.9427973Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9427978Z 
2025-01-14T13:17:20.9428125Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9428298Z ________ ERROR at setup of test_hdf_plasma[stimulated_emission_factor] _________
2025-01-14T13:17:20.9428302Z 
2025-01-14T13:17:20.9428932Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9429287Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9429292Z 
2025-01-14T13:17:20.9429470Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9429621Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9429726Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9429896Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9429988Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9430078Z >       sim.run_final()
2025-01-14T13:17:20.9430088Z 
2025-01-14T13:17:20.9430238Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9430427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9430589Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9430827Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9431126Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9431339Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9431446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9431455Z 
2025-01-14T13:17:20.9431919Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9432127Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9432352Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9432631Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9432793Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9432937Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9432941Z 
2025-01-14T13:17:20.9433040Z     def initialize_transport_state(
2025-01-14T13:17:20.9433116Z         self,
2025-01-14T13:17:20.9433195Z         simulation_state,
2025-01-14T13:17:20.9433284Z         opacity_state,
2025-01-14T13:17:20.9433367Z         macro_atom_state,
2025-01-14T13:17:20.9433444Z         plasma,
2025-01-14T13:17:20.9433518Z         no_of_packets,
2025-01-14T13:17:20.9433604Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9433678Z         iteration=0,
2025-01-14T13:17:20.9433754Z     ):
2025-01-14T13:17:20.9433877Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9433980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9434058Z         else:
2025-01-14T13:17:20.9434139Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9434213Z     
2025-01-14T13:17:20.9434344Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9434441Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9434506Z         )
2025-01-14T13:17:20.9434581Z     
2025-01-14T13:17:20.9434705Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9434817Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9434969Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9435047Z         else:
2025-01-14T13:17:20.9435128Z             continuum_state = None
2025-01-14T13:17:20.9435231Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9435338Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9435434Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9435545Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9435640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9435738Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9435829Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9435907Z         ).to_numba(
2025-01-14T13:17:20.9435986Z             macro_atom_state,
2025-01-14T13:17:20.9436086Z             self.line_interaction_type,
2025-01-14T13:17:20.9436154Z         )
2025-01-14T13:17:20.9436260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9436699Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9436779Z         ]
2025-01-14T13:17:20.9437078Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9437083Z 
2025-01-14T13:17:20.9437233Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9437403Z ________________ ERROR at setup of test_hdf_plasma[t_electrons] ________________
2025-01-14T13:17:20.9437408Z 
2025-01-14T13:17:20.9438035Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9438507Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9438517Z 
2025-01-14T13:17:20.9438608Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9438785Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9438956Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9439267Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9439417Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9439540Z >       sim.run_final()
2025-01-14T13:17:20.9439547Z 
2025-01-14T13:17:20.9439689Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9439870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9440030Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9440176Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9440282Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9440436Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9440551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9440555Z 
2025-01-14T13:17:20.9440819Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9441029Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9441255Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9441527Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9441808Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9441948Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9441956Z 
2025-01-14T13:17:20.9442048Z     def initialize_transport_state(
2025-01-14T13:17:20.9442117Z         self,
2025-01-14T13:17:20.9442199Z         simulation_state,
2025-01-14T13:17:20.9442280Z         opacity_state,
2025-01-14T13:17:20.9442360Z         macro_atom_state,
2025-01-14T13:17:20.9442428Z         plasma,
2025-01-14T13:17:20.9442506Z         no_of_packets,
2025-01-14T13:17:20.9442590Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9442665Z         iteration=0,
2025-01-14T13:17:20.9442736Z     ):
2025-01-14T13:17:20.9442864Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9442969Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9443038Z         else:
2025-01-14T13:17:20.9443125Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9443190Z     
2025-01-14T13:17:20.9443333Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9443432Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9443507Z         )
2025-01-14T13:17:20.9443573Z     
2025-01-14T13:17:20.9443709Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9443823Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9444116Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9444186Z         else:
2025-01-14T13:17:20.9444276Z             continuum_state = None
2025-01-14T13:17:20.9444386Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9444494Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9444590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9444698Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9444804Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9444901Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9444999Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9445180Z         ).to_numba(
2025-01-14T13:17:20.9445265Z             macro_atom_state,
2025-01-14T13:17:20.9445354Z             self.line_interaction_type,
2025-01-14T13:17:20.9445428Z         )
2025-01-14T13:17:20.9445534Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9445812Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9445885Z         ]
2025-01-14T13:17:20.9446188Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9446193Z 
2025-01-14T13:17:20.9446344Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9446504Z _______________ ERROR at setup of test_hdf_plasma[wavelength_cm] _______________
2025-01-14T13:17:20.9446509Z 
2025-01-14T13:17:20.9447138Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9447675Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9447697Z 
2025-01-14T13:17:20.9447845Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9448109Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9448270Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9448531Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9448623Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9448705Z >       sim.run_final()
2025-01-14T13:17:20.9448709Z 
2025-01-14T13:17:20.9448793Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9448911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9449010Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9449163Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9449258Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9449418Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9449532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9449537Z 
2025-01-14T13:17:20.9449798Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9450006Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9450224Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9450498Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9450657Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9450801Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9450809Z 
2025-01-14T13:17:20.9450901Z     def initialize_transport_state(
2025-01-14T13:17:20.9450971Z         self,
2025-01-14T13:17:20.9451146Z         simulation_state,
2025-01-14T13:17:20.9451221Z         opacity_state,
2025-01-14T13:17:20.9451305Z         macro_atom_state,
2025-01-14T13:17:20.9451379Z         plasma,
2025-01-14T13:17:20.9451456Z         no_of_packets,
2025-01-14T13:17:20.9451536Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9452033Z         iteration=0,
2025-01-14T13:17:20.9452106Z     ):
2025-01-14T13:17:20.9452239Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9452337Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9452412Z         else:
2025-01-14T13:17:20.9452491Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9452563Z     
2025-01-14T13:17:20.9452697Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9452928Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9452997Z         )
2025-01-14T13:17:20.9453068Z     
2025-01-14T13:17:20.9453205Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9453322Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9453490Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9453559Z         else:
2025-01-14T13:17:20.9453648Z             continuum_state = None
2025-01-14T13:17:20.9453750Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9453864Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9453955Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9454066Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9454166Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9454265Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9454354Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9454434Z         ).to_numba(
2025-01-14T13:17:20.9454512Z             macro_atom_state,
2025-01-14T13:17:20.9454606Z             self.line_interaction_type,
2025-01-14T13:17:20.9454683Z         )
2025-01-14T13:17:20.9454783Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9455058Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9455126Z         ]
2025-01-14T13:17:20.9455430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9455435Z 
2025-01-14T13:17:20.9455582Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9455753Z __________ ERROR at setup of test_hdf_plasma[lines_lower_level_index] __________
2025-01-14T13:17:20.9455757Z 
2025-01-14T13:17:20.9456790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9457273Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9457284Z 
2025-01-14T13:17:20.9457387Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9457544Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9457652Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9457826Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9457922Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9458000Z >       sim.run_final()
2025-01-14T13:17:20.9458004Z 
2025-01-14T13:17:20.9458096Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9458206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9458319Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9458468Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9458565Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9458889Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9459009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9459013Z 
2025-01-14T13:17:20.9459288Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9459494Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9459731Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9460006Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9460176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9460418Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9460423Z 
2025-01-14T13:17:20.9460516Z     def initialize_transport_state(
2025-01-14T13:17:20.9460599Z         self,
2025-01-14T13:17:20.9460682Z         simulation_state,
2025-01-14T13:17:20.9460766Z         opacity_state,
2025-01-14T13:17:20.9460844Z         macro_atom_state,
2025-01-14T13:17:20.9460969Z         plasma,
2025-01-14T13:17:20.9461048Z         no_of_packets,
2025-01-14T13:17:20.9461139Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9461215Z         iteration=0,
2025-01-14T13:17:20.9461288Z     ):
2025-01-14T13:17:20.9461417Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9461519Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9461772Z         else:
2025-01-14T13:17:20.9461863Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9461940Z     
2025-01-14T13:17:20.9462081Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9462190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9462259Z         )
2025-01-14T13:17:20.9462331Z     
2025-01-14T13:17:20.9462463Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9462590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9462747Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9462821Z         else:
2025-01-14T13:17:20.9462905Z             continuum_state = None
2025-01-14T13:17:20.9463011Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9463118Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9463216Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9463324Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9463429Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9463528Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9463623Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9463701Z         ).to_numba(
2025-01-14T13:17:20.9463780Z             macro_atom_state,
2025-01-14T13:17:20.9463883Z             self.line_interaction_type,
2025-01-14T13:17:20.9463953Z         )
2025-01-14T13:17:20.9464064Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9464336Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9464409Z         ]
2025-01-14T13:17:20.9464804Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9464813Z 
2025-01-14T13:17:20.9465079Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9465361Z ______________ ERROR at setup of test_hdf_plasma[ionization_data] ______________
2025-01-14T13:17:20.9465375Z 
2025-01-14T13:17:20.9466196Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9466700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9466706Z 
2025-01-14T13:17:20.9466806Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9466967Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9467067Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9467250Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9467352Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9467430Z >       sim.run_final()
2025-01-14T13:17:20.9467434Z 
2025-01-14T13:17:20.9467522Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9467634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9467849Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9467991Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9468096Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9468250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9468364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9468368Z 
2025-01-14T13:17:20.9468632Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9468849Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9469086Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9469359Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9469528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9469667Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9469672Z 
2025-01-14T13:17:20.9469769Z     def initialize_transport_state(
2025-01-14T13:17:20.9469840Z         self,
2025-01-14T13:17:20.9469927Z         simulation_state,
2025-01-14T13:17:20.9470002Z         opacity_state,
2025-01-14T13:17:20.9470086Z         macro_atom_state,
2025-01-14T13:17:20.9470158Z         plasma,
2025-01-14T13:17:20.9470246Z         no_of_packets,
2025-01-14T13:17:20.9470332Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9470411Z         iteration=0,
2025-01-14T13:17:20.9470485Z     ):
2025-01-14T13:17:20.9470608Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9470718Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9470791Z         else:
2025-01-14T13:17:20.9470884Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9470952Z     
2025-01-14T13:17:20.9471102Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9471199Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9471284Z         )
2025-01-14T13:17:20.9471358Z     
2025-01-14T13:17:20.9471502Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9471732Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9471892Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9471965Z         else:
2025-01-14T13:17:20.9472054Z             continuum_state = None
2025-01-14T13:17:20.9472159Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9472274Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9472372Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9472478Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9472590Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9472691Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9472788Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9472861Z         ).to_numba(
2025-01-14T13:17:20.9473079Z             macro_atom_state,
2025-01-14T13:17:20.9473170Z             self.line_interaction_type,
2025-01-14T13:17:20.9473295Z         )
2025-01-14T13:17:20.9473471Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9473953Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9474067Z         ]
2025-01-14T13:17:20.9474509Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9474515Z 
2025-01-14T13:17:20.9474669Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9474828Z __________________ ERROR at setup of test_hdf_plasma[density] __________________
2025-01-14T13:17:20.9474953Z 
2025-01-14T13:17:20.9475592Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9475949Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9475953Z 
2025-01-14T13:17:20.9476049Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9476210Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9476309Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9476487Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9476575Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9476655Z >       sim.run_final()
2025-01-14T13:17:20.9476659Z 
2025-01-14T13:17:20.9476741Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9476858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9476958Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9477107Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9477202Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9477360Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9477470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9477474Z 
2025-01-14T13:17:20.9477739Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9477945Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9478165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9478444Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9478608Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9478752Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9478760Z 
2025-01-14T13:17:20.9478849Z     def initialize_transport_state(
2025-01-14T13:17:20.9478926Z         self,
2025-01-14T13:17:20.9479009Z         simulation_state,
2025-01-14T13:17:20.9479084Z         opacity_state,
2025-01-14T13:17:20.9479164Z         macro_atom_state,
2025-01-14T13:17:20.9479236Z         plasma,
2025-01-14T13:17:20.9479314Z         no_of_packets,
2025-01-14T13:17:20.9479397Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9479476Z         iteration=0,
2025-01-14T13:17:20.9479543Z     ):
2025-01-14T13:17:20.9479670Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9479765Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9479841Z         else:
2025-01-14T13:17:20.9479919Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9479993Z     
2025-01-14T13:17:20.9480128Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9480230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9480387Z         )
2025-01-14T13:17:20.9480459Z     
2025-01-14T13:17:20.9480588Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9480708Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9480866Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9480935Z         else:
2025-01-14T13:17:20.9481023Z             continuum_state = None
2025-01-14T13:17:20.9481147Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9481339Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9481491Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9481800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9482119Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9482280Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9482432Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9482519Z         ).to_numba(
2025-01-14T13:17:20.9482600Z             macro_atom_state,
2025-01-14T13:17:20.9482695Z             self.line_interaction_type,
2025-01-14T13:17:20.9482767Z         )
2025-01-14T13:17:20.9482867Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9483139Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9483206Z         ]
2025-01-14T13:17:20.9483510Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9483515Z 
2025-01-14T13:17:20.9483661Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9483825Z ________________ ERROR at setup of test_hdf_plasma[atomic_mass] ________________
2025-01-14T13:17:20.9483832Z 
2025-01-14T13:17:20.9484458Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9484815Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9484820Z 
2025-01-14T13:17:20.9484913Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9485064Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9485166Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9485337Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9485431Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9485505Z >       sim.run_final()
2025-01-14T13:17:20.9485513Z 
2025-01-14T13:17:20.9485598Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9485704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9485805Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9485953Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9486048Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9486205Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9486308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9486312Z 
2025-01-14T13:17:20.9486580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9486780Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9487004Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9487281Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9487445Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9487729Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9487734Z 
2025-01-14T13:17:20.9487822Z     def initialize_transport_state(
2025-01-14T13:17:20.9487896Z         self,
2025-01-14T13:17:20.9487973Z         simulation_state,
2025-01-14T13:17:20.9488051Z         opacity_state,
2025-01-14T13:17:20.9488127Z         macro_atom_state,
2025-01-14T13:17:20.9488201Z         plasma,
2025-01-14T13:17:20.9488274Z         no_of_packets,
2025-01-14T13:17:20.9488360Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9488433Z         iteration=0,
2025-01-14T13:17:20.9488505Z     ):
2025-01-14T13:17:20.9488631Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9488731Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9488879Z         else:
2025-01-14T13:17:20.9488962Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9489029Z     
2025-01-14T13:17:20.9489172Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9489279Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9489353Z         )
2025-01-14T13:17:20.9489486Z     
2025-01-14T13:17:20.9489710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9489901Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9490155Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9490274Z         else:
2025-01-14T13:17:20.9490413Z             continuum_state = None
2025-01-14T13:17:20.9490574Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9490686Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9490781Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9490887Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9490997Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9491094Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9491190Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9491267Z         ).to_numba(
2025-01-14T13:17:20.9491345Z             macro_atom_state,
2025-01-14T13:17:20.9491437Z             self.line_interaction_type,
2025-01-14T13:17:20.9491504Z         )
2025-01-14T13:17:20.9491807Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9492088Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9492162Z         ]
2025-01-14T13:17:20.9492465Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9492469Z 
2025-01-14T13:17:20.9492619Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9492787Z ___________ ERROR at setup of test_hdf_plasma[level_number_density] ____________
2025-01-14T13:17:20.9492797Z 
2025-01-14T13:17:20.9493428Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9493786Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9493790Z 
2025-01-14T13:17:20.9493880Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9494036Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9494132Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9494315Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9494405Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9494489Z >       sim.run_final()
2025-01-14T13:17:20.9494494Z 
2025-01-14T13:17:20.9494578Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9494684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9494919Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9495059Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9495161Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9495313Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9495420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9495425Z 
2025-01-14T13:17:20.9495685Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9495897Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9496123Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9496507Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9496671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9496808Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9496813Z 
2025-01-14T13:17:20.9496904Z     def initialize_transport_state(
2025-01-14T13:17:20.9496973Z         self,
2025-01-14T13:17:20.9497055Z         simulation_state,
2025-01-14T13:17:20.9497130Z         opacity_state,
2025-01-14T13:17:20.9497212Z         macro_atom_state,
2025-01-14T13:17:20.9497281Z         plasma,
2025-01-14T13:17:20.9497362Z         no_of_packets,
2025-01-14T13:17:20.9497443Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9497525Z         iteration=0,
2025-01-14T13:17:20.9497597Z     ):
2025-01-14T13:17:20.9497763Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9497930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9498050Z         else:
2025-01-14T13:17:20.9498187Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9498298Z     
2025-01-14T13:17:20.9498529Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9498691Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9498815Z         )
2025-01-14T13:17:20.9498900Z     
2025-01-14T13:17:20.9499037Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9499151Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9499306Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9499374Z         else:
2025-01-14T13:17:20.9499461Z             continuum_state = None
2025-01-14T13:17:20.9499559Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9499671Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9499767Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9499877Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9499980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9500073Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9500171Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9500242Z         ).to_numba(
2025-01-14T13:17:20.9500324Z             macro_atom_state,
2025-01-14T13:17:20.9500411Z             self.line_interaction_type,
2025-01-14T13:17:20.9500483Z         )
2025-01-14T13:17:20.9500583Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9500856Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9500927Z         ]
2025-01-14T13:17:20.9501230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9501235Z 
2025-01-14T13:17:20.9501383Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9501655Z __________ ERROR at setup of test_hdf_plasma[lines_upper_level_index] __________
2025-01-14T13:17:20.9501660Z 
2025-01-14T13:17:20.9502432Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9502778Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9502783Z 
2025-01-14T13:17:20.9502877Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9503032Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9503128Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9503305Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9503505Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9503585Z >       sim.run_final()
2025-01-14T13:17:20.9503589Z 
2025-01-14T13:17:20.9503669Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9503785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9503881Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9504031Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9504128Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9504284Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9504388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9504397Z 
2025-01-14T13:17:20.9504658Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9504863Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9505084Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9505362Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9505523Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9505667Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9505671Z 
2025-01-14T13:17:20.9505759Z     def initialize_transport_state(
2025-01-14T13:17:20.9505833Z         self,
2025-01-14T13:17:20.9505910Z         simulation_state,
2025-01-14T13:17:20.9505991Z         opacity_state,
2025-01-14T13:17:20.9506073Z         macro_atom_state,
2025-01-14T13:17:20.9506145Z         plasma,
2025-01-14T13:17:20.9506224Z         no_of_packets,
2025-01-14T13:17:20.9506305Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9506394Z         iteration=0,
2025-01-14T13:17:20.9506519Z     ):
2025-01-14T13:17:20.9506739Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9506901Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9507024Z         else:
2025-01-14T13:17:20.9507154Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9507275Z     
2025-01-14T13:17:20.9507499Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9507641Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9507711Z         )
2025-01-14T13:17:20.9507784Z     
2025-01-14T13:17:20.9507911Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9508027Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9508182Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9508252Z         else:
2025-01-14T13:17:20.9508341Z             continuum_state = None
2025-01-14T13:17:20.9508442Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9508553Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9508647Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9508757Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9508855Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9509053Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9509148Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9509225Z         ).to_numba(
2025-01-14T13:17:20.9509307Z             macro_atom_state,
2025-01-14T13:17:20.9509398Z             self.line_interaction_type,
2025-01-14T13:17:20.9509466Z         )
2025-01-14T13:17:20.9509578Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9509850Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9509919Z         ]
2025-01-14T13:17:20.9510227Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9510332Z 
2025-01-14T13:17:20.9510481Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9510635Z ____________________ ERROR at setup of test_hdf_plasma[nu] _____________________
2025-01-14T13:17:20.9510642Z 
2025-01-14T13:17:20.9511263Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9511717Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9511723Z 
2025-01-14T13:17:20.9511820Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9511973Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9512075Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9512245Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9512340Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9512416Z >       sim.run_final()
2025-01-14T13:17:20.9512420Z 
2025-01-14T13:17:20.9512509Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9512614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9512716Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9512858Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9512953Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9513109Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9513213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9513217Z 
2025-01-14T13:17:20.9513488Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9513688Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9513916Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9514185Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9514351Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9514489Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9514494Z 
2025-01-14T13:17:20.9514582Z     def initialize_transport_state(
2025-01-14T13:17:20.9514656Z         self,
2025-01-14T13:17:20.9514734Z         simulation_state,
2025-01-14T13:17:20.9514813Z         opacity_state,
2025-01-14T13:17:20.9514895Z         macro_atom_state,
2025-01-14T13:17:20.9514971Z         plasma,
2025-01-14T13:17:20.9515068Z         no_of_packets,
2025-01-14T13:17:20.9515218Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9515343Z         iteration=0,
2025-01-14T13:17:20.9515465Z     ):
2025-01-14T13:17:20.9515675Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9515836Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9515950Z         else:
2025-01-14T13:17:20.9516238Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9516311Z     
2025-01-14T13:17:20.9516456Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9516559Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9516626Z         )
2025-01-14T13:17:20.9516699Z     
2025-01-14T13:17:20.9516829Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9516945Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9517100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9517175Z         else:
2025-01-14T13:17:20.9517258Z             continuum_state = None
2025-01-14T13:17:20.9517364Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9517590Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9517686Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9517793Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9517899Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9517993Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9518092Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9518168Z         ).to_numba(
2025-01-14T13:17:20.9518246Z             macro_atom_state,
2025-01-14T13:17:20.9518339Z             self.line_interaction_type,
2025-01-14T13:17:20.9518406Z         )
2025-01-14T13:17:20.9518511Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9518778Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9518850Z         ]
2025-01-14T13:17:20.9519146Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9519155Z 
2025-01-14T13:17:20.9519304Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9519463Z _______________ ERROR at setup of test_hdf_plasma[beta_sobolev] ________________
2025-01-14T13:17:20.9519476Z 
2025-01-14T13:17:20.9520103Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9520452Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9520457Z 
2025-01-14T13:17:20.9520545Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9520700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9520797Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9520975Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9521062Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9521145Z >       sim.run_final()
2025-01-14T13:17:20.9521154Z 
2025-01-14T13:17:20.9521240Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9521345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9521448Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9521704Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9521806Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9521958Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9522066Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9522070Z 
2025-01-14T13:17:20.9522329Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9522536Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9522756Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9523155Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9523321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9523455Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9523460Z 
2025-01-14T13:17:20.9523602Z     def initialize_transport_state(
2025-01-14T13:17:20.9523718Z         self,
2025-01-14T13:17:20.9523855Z         simulation_state,
2025-01-14T13:17:20.9523981Z         opacity_state,
2025-01-14T13:17:20.9524114Z         macro_atom_state,
2025-01-14T13:17:20.9524231Z         plasma,
2025-01-14T13:17:20.9524357Z         no_of_packets,
2025-01-14T13:17:20.9524493Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9524621Z         iteration=0,
2025-01-14T13:17:20.9524846Z     ):
2025-01-14T13:17:20.9524983Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9525091Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9525165Z         else:
2025-01-14T13:17:20.9525247Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9525313Z     
2025-01-14T13:17:20.9525452Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9525548Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9525620Z         )
2025-01-14T13:17:20.9525688Z     
2025-01-14T13:17:20.9525818Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9525934Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9526094Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9526164Z         else:
2025-01-14T13:17:20.9526252Z             continuum_state = None
2025-01-14T13:17:20.9526354Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9526470Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9526567Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9526676Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9526779Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9526872Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9526970Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9527040Z         ).to_numba(
2025-01-14T13:17:20.9527123Z             macro_atom_state,
2025-01-14T13:17:20.9527211Z             self.line_interaction_type,
2025-01-14T13:17:20.9527284Z         )
2025-01-14T13:17:20.9527385Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9527658Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9527726Z         ]
2025-01-14T13:17:20.9528028Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9528036Z 
2025-01-14T13:17:20.9528189Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9528362Z _________ ERROR at setup of test_hdf_plasma[transition_probabilities] __________
2025-01-14T13:17:20.9528366Z 
2025-01-14T13:17:20.9529004Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9529350Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9529355Z 
2025-01-14T13:17:20.9529449Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9529600Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9529706Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9529881Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9529969Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9530156Z >       sim.run_final()
2025-01-14T13:17:20.9530161Z 
2025-01-14T13:17:20.9530243Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9530355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9530452Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9530595Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9530689Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9530846Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9530954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9530963Z 
2025-01-14T13:17:20.9531224Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9531519Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9532044Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9532549Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9532821Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9533019Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9533026Z 
2025-01-14T13:17:20.9533119Z     def initialize_transport_state(
2025-01-14T13:17:20.9533197Z         self,
2025-01-14T13:17:20.9533277Z         simulation_state,
2025-01-14T13:17:20.9533357Z         opacity_state,
2025-01-14T13:17:20.9533438Z         macro_atom_state,
2025-01-14T13:17:20.9533516Z         plasma,
2025-01-14T13:17:20.9533596Z         no_of_packets,
2025-01-14T13:17:20.9533679Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9533762Z         iteration=0,
2025-01-14T13:17:20.9533829Z     ):
2025-01-14T13:17:20.9533963Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9534065Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9534138Z         else:
2025-01-14T13:17:20.9534217Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9534289Z     
2025-01-14T13:17:20.9534428Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9534529Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9534598Z         )
2025-01-14T13:17:20.9534671Z     
2025-01-14T13:17:20.9534800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9534919Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9535071Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9535152Z         else:
2025-01-14T13:17:20.9535244Z             continuum_state = None
2025-01-14T13:17:20.9535350Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9535465Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9535558Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9535672Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9535771Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9535870Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9535961Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9536037Z         ).to_numba(
2025-01-14T13:17:20.9536115Z             macro_atom_state,
2025-01-14T13:17:20.9536207Z             self.line_interaction_type,
2025-01-14T13:17:20.9536274Z         )
2025-01-14T13:17:20.9536379Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9536645Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9536721Z         ]
2025-01-14T13:17:20.9537026Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9537030Z 
2025-01-14T13:17:20.9537328Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9537491Z ____________________ ERROR at setup of test_hdf_plasma[phi] ____________________
2025-01-14T13:17:20.9537495Z 
2025-01-14T13:17:20.9538122Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9538472Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9538477Z 
2025-01-14T13:17:20.9538570Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9538720Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9538961Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9539133Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9539230Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9539305Z >       sim.run_final()
2025-01-14T13:17:20.9539309Z 
2025-01-14T13:17:20.9539394Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9539501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9539604Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9539743Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9539842Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9539998Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9540101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9540107Z 
2025-01-14T13:17:20.9540484Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9540836Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9541228Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9541754Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9541930Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9542068Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9542078Z 
2025-01-14T13:17:20.9542168Z     def initialize_transport_state(
2025-01-14T13:17:20.9542242Z         self,
2025-01-14T13:17:20.9542319Z         simulation_state,
2025-01-14T13:17:20.9542400Z         opacity_state,
2025-01-14T13:17:20.9542476Z         macro_atom_state,
2025-01-14T13:17:20.9542550Z         plasma,
2025-01-14T13:17:20.9542628Z         no_of_packets,
2025-01-14T13:17:20.9542715Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9542791Z         iteration=0,
2025-01-14T13:17:20.9542863Z     ):
2025-01-14T13:17:20.9542988Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9543092Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9543161Z         else:
2025-01-14T13:17:20.9543244Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9543311Z     
2025-01-14T13:17:20.9543456Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9543552Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9543626Z         )
2025-01-14T13:17:20.9543696Z     
2025-01-14T13:17:20.9543822Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9543939Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9544090Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9544165Z         else:
2025-01-14T13:17:20.9544251Z             continuum_state = None
2025-01-14T13:17:20.9544357Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9544464Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9544699Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9544805Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9544910Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9545003Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9545105Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9545185Z         ).to_numba(
2025-01-14T13:17:20.9545263Z             macro_atom_state,
2025-01-14T13:17:20.9545356Z             self.line_interaction_type,
2025-01-14T13:17:20.9545424Z         )
2025-01-14T13:17:20.9545533Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9545801Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9545986Z         ]
2025-01-14T13:17:20.9546287Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9546296Z 
2025-01-14T13:17:20.9546447Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9546612Z ____________ ERROR at setup of test_hdf_plasma[electron_densities] _____________
2025-01-14T13:17:20.9546617Z 
2025-01-14T13:17:20.9547245Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9547597Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9547602Z 
2025-01-14T13:17:20.9547689Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9547846Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9547943Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9548120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9548210Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9548291Z >       sim.run_final()
2025-01-14T13:17:20.9548295Z 
2025-01-14T13:17:20.9548379Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9548483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9548592Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9548733Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9548836Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9549099Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9549286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9549299Z 
2025-01-14T13:17:20.9549754Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9550077Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9550305Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9550585Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9550749Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9550883Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9550887Z 
2025-01-14T13:17:20.9550979Z     def initialize_transport_state(
2025-01-14T13:17:20.9551047Z         self,
2025-01-14T13:17:20.9551129Z         simulation_state,
2025-01-14T13:17:20.9551203Z         opacity_state,
2025-01-14T13:17:20.9551282Z         macro_atom_state,
2025-01-14T13:17:20.9551357Z         plasma,
2025-01-14T13:17:20.9551435Z         no_of_packets,
2025-01-14T13:17:20.9551516Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9551759Z         iteration=0,
2025-01-14T13:17:20.9551985Z     ):
2025-01-14T13:17:20.9552122Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9552221Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9552296Z         else:
2025-01-14T13:17:20.9552378Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9552444Z     
2025-01-14T13:17:20.9552586Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9552683Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9552757Z         )
2025-01-14T13:17:20.9552824Z     
2025-01-14T13:17:20.9552957Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9553069Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9553225Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9553407Z         else:
2025-01-14T13:17:20.9553495Z             continuum_state = None
2025-01-14T13:17:20.9553597Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9553711Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9553803Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9553913Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9554016Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9554109Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9554204Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9554275Z         ).to_numba(
2025-01-14T13:17:20.9554358Z             macro_atom_state,
2025-01-14T13:17:20.9554444Z             self.line_interaction_type,
2025-01-14T13:17:20.9554518Z         )
2025-01-14T13:17:20.9554621Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9554892Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9554966Z         ]
2025-01-14T13:17:20.9555268Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9555278Z 
2025-01-14T13:17:20.9555422Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9555578Z ___________________ ERROR at setup of test_hdf_plasma[t_rad] ___________________
2025-01-14T13:17:20.9555583Z 
2025-01-14T13:17:20.9556218Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9556563Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9556568Z 
2025-01-14T13:17:20.9556664Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9556816Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9556957Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9557273Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9557417Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9557546Z >       sim.run_final()
2025-01-14T13:17:20.9557553Z 
2025-01-14T13:17:20.9557688Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9557870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9558038Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9558189Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9558291Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9558448Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9558551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9558559Z 
2025-01-14T13:17:20.9558828Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9559127Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9559349Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9559624Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9559780Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9559920Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9559924Z 
2025-01-14T13:17:20.9560013Z     def initialize_transport_state(
2025-01-14T13:17:20.9560087Z         self,
2025-01-14T13:17:20.9560168Z         simulation_state,
2025-01-14T13:17:20.9560248Z         opacity_state,
2025-01-14T13:17:20.9560406Z         macro_atom_state,
2025-01-14T13:17:20.9560482Z         plasma,
2025-01-14T13:17:20.9560561Z         no_of_packets,
2025-01-14T13:17:20.9560643Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9560726Z         iteration=0,
2025-01-14T13:17:20.9560793Z     ):
2025-01-14T13:17:20.9560953Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9561050Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9561123Z         else:
2025-01-14T13:17:20.9561200Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9561271Z     
2025-01-14T13:17:20.9561404Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9561504Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9561672Z         )
2025-01-14T13:17:20.9561746Z     
2025-01-14T13:17:20.9561873Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9561988Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9562143Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9562217Z         else:
2025-01-14T13:17:20.9562304Z             continuum_state = None
2025-01-14T13:17:20.9562407Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9562519Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9562609Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9562722Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9562822Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9563260Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9563441Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9563547Z         ).to_numba(
2025-01-14T13:17:20.9563696Z             macro_atom_state,
2025-01-14T13:17:20.9563816Z             self.line_interaction_type,
2025-01-14T13:17:20.9564009Z         )
2025-01-14T13:17:20.9564162Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9564511Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9564649Z         ]
2025-01-14T13:17:20.9565002Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9565007Z 
2025-01-14T13:17:20.9565411Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9565764Z ______________ ERROR at setup of test_hdf_plasma[selected_atoms] _______________
2025-01-14T13:17:20.9565772Z 
2025-01-14T13:17:20.9566981Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9567501Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9567514Z 
2025-01-14T13:17:20.9567659Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9567881Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9568176Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9568405Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9568581Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9568760Z >       sim.run_final()
2025-01-14T13:17:20.9568765Z 
2025-01-14T13:17:20.9568880Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9569056Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9569206Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9569426Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9569624Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9569814Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9570112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9570117Z 
2025-01-14T13:17:20.9570415Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9570745Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9571015Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9571360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9571856Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9572069Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9572075Z 
2025-01-14T13:17:20.9572285Z     def initialize_transport_state(
2025-01-14T13:17:20.9572410Z         self,
2025-01-14T13:17:20.9572572Z         simulation_state,
2025-01-14T13:17:20.9572701Z         opacity_state,
2025-01-14T13:17:20.9572868Z         macro_atom_state,
2025-01-14T13:17:20.9572959Z         plasma,
2025-01-14T13:17:20.9573174Z         no_of_packets,
2025-01-14T13:17:20.9573298Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9573444Z         iteration=0,
2025-01-14T13:17:20.9585651Z     ):
2025-01-14T13:17:20.9585887Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9586093Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9586224Z         else:
2025-01-14T13:17:20.9586372Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9586482Z     
2025-01-14T13:17:20.9586730Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9586891Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9587009Z         )
2025-01-14T13:17:20.9587119Z     
2025-01-14T13:17:20.9587346Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9587505Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9587685Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9587760Z         else:
2025-01-14T13:17:20.9587852Z             continuum_state = None
2025-01-14T13:17:20.9587963Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9588074Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9588174Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9588283Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9588389Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9588483Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9588580Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9588653Z         ).to_numba(
2025-01-14T13:17:20.9588737Z             macro_atom_state,
2025-01-14T13:17:20.9588825Z             self.line_interaction_type,
2025-01-14T13:17:20.9588898Z         )
2025-01-14T13:17:20.9589004Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9589292Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9589585Z         ]
2025-01-14T13:17:20.9589904Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9589910Z 
2025-01-14T13:17:20.9590071Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9590243Z ____________ ERROR at setup of test_hdf_plasma[ion_number_density] _____________
2025-01-14T13:17:20.9590248Z 
2025-01-14T13:17:20.9590896Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9591244Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9591382Z 
2025-01-14T13:17:20.9591709Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9591993Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9592166Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9592467Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9592613Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9592747Z >       sim.run_final()
2025-01-14T13:17:20.9592754Z 
2025-01-14T13:17:20.9592839Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9592959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9593063Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9593212Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9593312Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9593473Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9593584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9593592Z 
2025-01-14T13:17:20.9593856Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9594064Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9594287Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9594563Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9594723Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9594869Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9594874Z 
2025-01-14T13:17:20.9594967Z     def initialize_transport_state(
2025-01-14T13:17:20.9595038Z         self,
2025-01-14T13:17:20.9595126Z         simulation_state,
2025-01-14T13:17:20.9595201Z         opacity_state,
2025-01-14T13:17:20.9595282Z         macro_atom_state,
2025-01-14T13:17:20.9595352Z         plasma,
2025-01-14T13:17:20.9595434Z         no_of_packets,
2025-01-14T13:17:20.9595517Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9595595Z         iteration=0,
2025-01-14T13:17:20.9595661Z     ):
2025-01-14T13:17:20.9595794Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9595891Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9595967Z         else:
2025-01-14T13:17:20.9596045Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9596118Z     
2025-01-14T13:17:20.9596256Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9596358Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9596430Z         )
2025-01-14T13:17:20.9596495Z     
2025-01-14T13:17:20.9596631Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9596751Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9596915Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9597176Z         else:
2025-01-14T13:17:20.9597266Z             continuum_state = None
2025-01-14T13:17:20.9597368Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9597484Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9597576Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9597689Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9597790Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9597889Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9597980Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9598056Z         ).to_numba(
2025-01-14T13:17:20.9598140Z             macro_atom_state,
2025-01-14T13:17:20.9598227Z             self.line_interaction_type,
2025-01-14T13:17:20.9598415Z         )
2025-01-14T13:17:20.9598517Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9598793Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9598865Z         ]
2025-01-14T13:17:20.9599171Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9599176Z 
2025-01-14T13:17:20.9599324Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9599494Z ____________ ERROR at setup of test_hdf_plasma[partition_function] _____________
2025-01-14T13:17:20.9599499Z 
2025-01-14T13:17:20.9600219Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9600855Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9600863Z 
2025-01-14T13:17:20.9601015Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9601265Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9601373Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9601694Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9601809Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9601888Z >       sim.run_final()
2025-01-14T13:17:20.9601897Z 
2025-01-14T13:17:20.9601979Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9602092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9602190Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9602334Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9602435Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9602593Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9602694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9602702Z 
2025-01-14T13:17:20.9602972Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9603173Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9603398Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9603676Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9603834Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9603982Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9603987Z 
2025-01-14T13:17:20.9604077Z     def initialize_transport_state(
2025-01-14T13:17:20.9604155Z         self,
2025-01-14T13:17:20.9604233Z         simulation_state,
2025-01-14T13:17:20.9604313Z         opacity_state,
2025-01-14T13:17:20.9604389Z         macro_atom_state,
2025-01-14T13:17:20.9604621Z         plasma,
2025-01-14T13:17:20.9604696Z         no_of_packets,
2025-01-14T13:17:20.9604784Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9604857Z         iteration=0,
2025-01-14T13:17:20.9604929Z     ):
2025-01-14T13:17:20.9605062Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9605165Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9605241Z         else:
2025-01-14T13:17:20.9605320Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9605390Z     
2025-01-14T13:17:20.9605525Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9605625Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9605694Z         )
2025-01-14T13:17:20.9605764Z     
2025-01-14T13:17:20.9606001Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9606118Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9606271Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9606350Z         else:
2025-01-14T13:17:20.9606433Z             continuum_state = None
2025-01-14T13:17:20.9606535Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9606643Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9606737Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9606846Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9606942Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9607043Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9607133Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9607209Z         ).to_numba(
2025-01-14T13:17:20.9607287Z             macro_atom_state,
2025-01-14T13:17:20.9607383Z             self.line_interaction_type,
2025-01-14T13:17:20.9607451Z         )
2025-01-14T13:17:20.9607557Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9607832Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9607904Z         ]
2025-01-14T13:17:20.9608202Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9608207Z 
2025-01-14T13:17:20.9608356Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9608554Z _________________ ERROR at setup of test_hdf_plasma[abundance] _________________
2025-01-14T13:17:20.9608562Z 
2025-01-14T13:17:20.9609684Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9610050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9610060Z 
2025-01-14T13:17:20.9610152Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9610313Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9610414Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9610596Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9610691Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9610766Z >       sim.run_final()
2025-01-14T13:17:20.9610771Z 
2025-01-14T13:17:20.9610856Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9610966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9611071Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9611214Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9611319Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9611475Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9611941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9611949Z 
2025-01-14T13:17:20.9612228Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9612434Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9612662Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9612941Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9613110Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9613248Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9613394Z 
2025-01-14T13:17:20.9613494Z     def initialize_transport_state(
2025-01-14T13:17:20.9613564Z         self,
2025-01-14T13:17:20.9613649Z         simulation_state,
2025-01-14T13:17:20.9613725Z         opacity_state,
2025-01-14T13:17:20.9613813Z         macro_atom_state,
2025-01-14T13:17:20.9613884Z         plasma,
2025-01-14T13:17:20.9613966Z         no_of_packets,
2025-01-14T13:17:20.9614059Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9614136Z         iteration=0,
2025-01-14T13:17:20.9614209Z     ):
2025-01-14T13:17:20.9614339Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9614445Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9614514Z         else:
2025-01-14T13:17:20.9614605Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9614672Z     
2025-01-14T13:17:20.9614818Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9614917Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9615000Z         )
2025-01-14T13:17:20.9615065Z     
2025-01-14T13:17:20.9615200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9615316Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9615480Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9615550Z         else:
2025-01-14T13:17:20.9615638Z             continuum_state = None
2025-01-14T13:17:20.9615744Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9615853Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9615951Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9616057Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9616160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9616252Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9616352Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9616423Z         ).to_numba(
2025-01-14T13:17:20.9616514Z             macro_atom_state,
2025-01-14T13:17:20.9616600Z             self.line_interaction_type,
2025-01-14T13:17:20.9616679Z         )
2025-01-14T13:17:20.9616784Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9617068Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9617137Z         ]
2025-01-14T13:17:20.9617567Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9617577Z 
2025-01-14T13:17:20.9617833Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9618107Z ________________ ERROR at setup of test_hdf_plasma[g_electron] _________________
2025-01-14T13:17:20.9618114Z 
2025-01-14T13:17:20.9618912Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9619278Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9619407Z 
2025-01-14T13:17:20.9619503Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9619661Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9619760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9619936Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9620023Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9620104Z >       sim.run_final()
2025-01-14T13:17:20.9620108Z 
2025-01-14T13:17:20.9620190Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9620303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9620402Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9620633Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9620728Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9620886Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9621006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9621011Z 
2025-01-14T13:17:20.9621280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9621480Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9621902Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9622181Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9622340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9622480Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9622490Z 
2025-01-14T13:17:20.9622579Z     def initialize_transport_state(
2025-01-14T13:17:20.9622654Z         self,
2025-01-14T13:17:20.9622731Z         simulation_state,
2025-01-14T13:17:20.9622819Z         opacity_state,
2025-01-14T13:17:20.9622896Z         macro_atom_state,
2025-01-14T13:17:20.9622971Z         plasma,
2025-01-14T13:17:20.9623047Z         no_of_packets,
2025-01-14T13:17:20.9623133Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9623207Z         iteration=0,
2025-01-14T13:17:20.9623278Z     ):
2025-01-14T13:17:20.9623403Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9623503Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9623578Z         else:
2025-01-14T13:17:20.9623660Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9623731Z     
2025-01-14T13:17:20.9623865Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9623967Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9624042Z         )
2025-01-14T13:17:20.9624116Z     
2025-01-14T13:17:20.9624243Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9624366Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9624516Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9624593Z         else:
2025-01-14T13:17:20.9624675Z             continuum_state = None
2025-01-14T13:17:20.9624780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9624886Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9624984Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9625095Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9625194Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9625291Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9625383Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9625464Z         ).to_numba(
2025-01-14T13:17:20.9625543Z             macro_atom_state,
2025-01-14T13:17:20.9625634Z             self.line_interaction_type,
2025-01-14T13:17:20.9625829Z         )
2025-01-14T13:17:20.9625936Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9626203Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9626330Z         ]
2025-01-14T13:17:20.9626869Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9626885Z 
2025-01-14T13:17:20.9627133Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9627406Z _____________________ ERROR at setup of test_hdf_plasma[g] _____________________
2025-01-14T13:17:20.9627414Z 
2025-01-14T13:17:20.9628054Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9628565Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9628578Z 
2025-01-14T13:17:20.9628672Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9628835Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9628937Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9629115Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9629207Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9629282Z >       sim.run_final()
2025-01-14T13:17:20.9629287Z 
2025-01-14T13:17:20.9629373Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9629478Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9629588Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9629728Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9629828Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9629988Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9630097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9630101Z 
2025-01-14T13:17:20.9630371Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9630571Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9630795Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9631066Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9631232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9631375Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9631380Z 
2025-01-14T13:17:20.9631472Z     def initialize_transport_state(
2025-01-14T13:17:20.9631734Z         self,
2025-01-14T13:17:20.9631853Z         simulation_state,
2025-01-14T13:17:20.9631932Z         opacity_state,
2025-01-14T13:17:20.9632013Z         macro_atom_state,
2025-01-14T13:17:20.9632089Z         plasma,
2025-01-14T13:17:20.9632163Z         no_of_packets,
2025-01-14T13:17:20.9632248Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9632320Z         iteration=0,
2025-01-14T13:17:20.9632391Z     ):
2025-01-14T13:17:20.9632515Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9632616Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9632689Z         else:
2025-01-14T13:17:20.9632772Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9632838Z     
2025-01-14T13:17:20.9632980Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9633081Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9633154Z         )
2025-01-14T13:17:20.9633222Z     
2025-01-14T13:17:20.9633353Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9633593Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9633755Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9633829Z         else:
2025-01-14T13:17:20.9633912Z             continuum_state = None
2025-01-14T13:17:20.9634022Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9634127Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9634223Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9634330Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9634432Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9634524Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9634783Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9634910Z         ).to_numba(
2025-01-14T13:17:20.9635047Z             macro_atom_state,
2025-01-14T13:17:20.9635197Z             self.line_interaction_type,
2025-01-14T13:17:20.9635327Z         )
2025-01-14T13:17:20.9635497Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9635943Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9636018Z         ]
2025-01-14T13:17:20.9636321Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9636327Z 
2025-01-14T13:17:20.9636481Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9636634Z ___________________ ERROR at setup of test_hdf_plasma[lines] ___________________
2025-01-14T13:17:20.9636639Z 
2025-01-14T13:17:20.9637279Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9637637Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9637650Z 
2025-01-14T13:17:20.9637738Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9637892Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9637989Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9638164Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9638250Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9638329Z >       sim.run_final()
2025-01-14T13:17:20.9638334Z 
2025-01-14T13:17:20.9638415Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9638530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9638631Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9638777Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9638880Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9639030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9639142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9639146Z 
2025-01-14T13:17:20.9639417Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9639627Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9639853Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9640129Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9640293Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9640433Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9640438Z 
2025-01-14T13:17:20.9640874Z     def initialize_transport_state(
2025-01-14T13:17:20.9640946Z         self,
2025-01-14T13:17:20.9641029Z         simulation_state,
2025-01-14T13:17:20.9641105Z         opacity_state,
2025-01-14T13:17:20.9641186Z         macro_atom_state,
2025-01-14T13:17:20.9641256Z         plasma,
2025-01-14T13:17:20.9641333Z         no_of_packets,
2025-01-14T13:17:20.9641414Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9641490Z         iteration=0,
2025-01-14T13:17:20.9641748Z     ):
2025-01-14T13:17:20.9641931Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9642029Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9642105Z         else:
2025-01-14T13:17:20.9642183Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9642254Z     
2025-01-14T13:17:20.9642554Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9642658Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9642730Z         )
2025-01-14T13:17:20.9642806Z     
2025-01-14T13:17:20.9642938Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9643050Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9643207Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9643275Z         else:
2025-01-14T13:17:20.9643362Z             continuum_state = None
2025-01-14T13:17:20.9643461Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9643572Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9643662Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9643773Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9643870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9643979Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9644134Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9644281Z         ).to_numba(
2025-01-14T13:17:20.9644422Z             macro_atom_state,
2025-01-14T13:17:20.9644590Z             self.line_interaction_type,
2025-01-14T13:17:20.9644710Z         )
2025-01-14T13:17:20.9644877Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9645325Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9645395Z         ]
2025-01-14T13:17:20.9645705Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9645710Z 
2025-01-14T13:17:20.9645856Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9646013Z ___________________ ERROR at setup of test_hdf_plasma[f_lu] ____________________
2025-01-14T13:17:20.9646017Z 
2025-01-14T13:17:20.9646654Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9647010Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9647015Z 
2025-01-14T13:17:20.9647109Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9647258Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9647357Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9647528Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9647622Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9647696Z >       sim.run_final()
2025-01-14T13:17:20.9647701Z 
2025-01-14T13:17:20.9647786Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9647906Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9648006Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9648151Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9648378Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9648542Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9648649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9648653Z 
2025-01-14T13:17:20.9648919Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9649117Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9649339Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9649610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9649855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9649994Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9650004Z 
2025-01-14T13:17:20.9650091Z     def initialize_transport_state(
2025-01-14T13:17:20.9650167Z         self,
2025-01-14T13:17:20.9650245Z         simulation_state,
2025-01-14T13:17:20.9650324Z         opacity_state,
2025-01-14T13:17:20.9650398Z         macro_atom_state,
2025-01-14T13:17:20.9650474Z         plasma,
2025-01-14T13:17:20.9650546Z         no_of_packets,
2025-01-14T13:17:20.9650635Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9650708Z         iteration=0,
2025-01-14T13:17:20.9650780Z     ):
2025-01-14T13:17:20.9650903Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9651005Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9651080Z         else:
2025-01-14T13:17:20.9651157Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9651233Z     
2025-01-14T13:17:20.9651364Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9651466Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9651539Z         )
2025-01-14T13:17:20.9651860Z     
2025-01-14T13:17:20.9652008Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9652127Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9652278Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9652352Z         else:
2025-01-14T13:17:20.9652434Z             continuum_state = None
2025-01-14T13:17:20.9652538Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9652645Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9652740Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9652844Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9653025Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9653204Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9653356Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9653490Z         ).to_numba(
2025-01-14T13:17:20.9653618Z             macro_atom_state,
2025-01-14T13:17:20.9653767Z             self.line_interaction_type,
2025-01-14T13:17:20.9653879Z         )
2025-01-14T13:17:20.9654062Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9654344Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9654418Z         ]
2025-01-14T13:17:20.9654715Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9654720Z 
2025-01-14T13:17:20.9654872Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9655036Z _______________ ERROR at setup of test_hdf_plasma[tau_sobolevs] ________________
2025-01-14T13:17:20.9655045Z 
2025-01-14T13:17:20.9655672Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9656213Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9656218Z 
2025-01-14T13:17:20.9656307Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9656462Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9656563Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9656745Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9656839Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9656914Z >       sim.run_final()
2025-01-14T13:17:20.9656918Z 
2025-01-14T13:17:20.9657127Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9657235Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9657343Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9657490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9657590Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9657740Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9657851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9657855Z 
2025-01-14T13:17:20.9658117Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9658321Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9658544Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9658815Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9658984Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9659118Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9659128Z 
2025-01-14T13:17:20.9659222Z     def initialize_transport_state(
2025-01-14T13:17:20.9659292Z         self,
2025-01-14T13:17:20.9659375Z         simulation_state,
2025-01-14T13:17:20.9659451Z         opacity_state,
2025-01-14T13:17:20.9659532Z         macro_atom_state,
2025-01-14T13:17:20.9659603Z         plasma,
2025-01-14T13:17:20.9659680Z         no_of_packets,
2025-01-14T13:17:20.9659767Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9659838Z         iteration=0,
2025-01-14T13:17:20.9659909Z     ):
2025-01-14T13:17:20.9660033Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9660134Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9660204Z         else:
2025-01-14T13:17:20.9660292Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9660359Z     
2025-01-14T13:17:20.9660498Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9660596Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9660668Z         )
2025-01-14T13:17:20.9660735Z     
2025-01-14T13:17:20.9660867Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9661024Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9661186Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9661256Z         else:
2025-01-14T13:17:20.9661345Z             continuum_state = None
2025-01-14T13:17:20.9661454Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9661687Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9661791Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9661940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9662136Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9662293Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9662452Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9662767Z         ).to_numba(
2025-01-14T13:17:20.9662904Z             macro_atom_state,
2025-01-14T13:17:20.9663059Z             self.line_interaction_type,
2025-01-14T13:17:20.9663138Z         )
2025-01-14T13:17:20.9663245Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9663526Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9663599Z         ]
2025-01-14T13:17:20.9663900Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9663905Z 
2025-01-14T13:17:20.9664060Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9664217Z __________________ ERROR at setup of test_hdf_plasma[j_blues] __________________
2025-01-14T13:17:20.9664340Z 
2025-01-14T13:17:20.9664984Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9665343Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9665353Z 
2025-01-14T13:17:20.9665442Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9665604Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9665702Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9665883Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9665970Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9666059Z >       sim.run_final()
2025-01-14T13:17:20.9666063Z 
2025-01-14T13:17:20.9666146Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9666259Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9666362Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9666509Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9666602Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9666761Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9666873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9666878Z 
2025-01-14T13:17:20.9667145Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9667350Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9667571Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9667853Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9668016Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9668166Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9668171Z 
2025-01-14T13:17:20.9668258Z     def initialize_transport_state(
2025-01-14T13:17:20.9668350Z         self,
2025-01-14T13:17:20.9668434Z         simulation_state,
2025-01-14T13:17:20.9668509Z         opacity_state,
2025-01-14T13:17:20.9668591Z         macro_atom_state,
2025-01-14T13:17:20.9668664Z         plasma,
2025-01-14T13:17:20.9668742Z         no_of_packets,
2025-01-14T13:17:20.9668825Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9668903Z         iteration=0,
2025-01-14T13:17:20.9668970Z     ):
2025-01-14T13:17:20.9669099Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9669194Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9669272Z         else:
2025-01-14T13:17:20.9669351Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9669423Z     
2025-01-14T13:17:20.9669557Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9669796Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9669864Z         )
2025-01-14T13:17:20.9669936Z     
2025-01-14T13:17:20.9670068Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9670180Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9670354Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9670483Z         else:
2025-01-14T13:17:20.9670631Z             continuum_state = None
2025-01-14T13:17:20.9670800Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9670985Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9671136Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9671456Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9671728Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9671836Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9671941Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9672020Z         ).to_numba(
2025-01-14T13:17:20.9672099Z             macro_atom_state,
2025-01-14T13:17:20.9672191Z             self.line_interaction_type,
2025-01-14T13:17:20.9672263Z         )
2025-01-14T13:17:20.9672366Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9672641Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9672709Z         ]
2025-01-14T13:17:20.9673015Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9673020Z 
2025-01-14T13:17:20.9673166Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9673344Z _______________ ERROR at setup of test_hdf_plasma[metastability] _______________
2025-01-14T13:17:20.9673349Z 
2025-01-14T13:17:20.9673977Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9674338Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9674343Z 
2025-01-14T13:17:20.9674436Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9674587Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9674691Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9674863Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9674954Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9675035Z >       sim.run_final()
2025-01-14T13:17:20.9675039Z 
2025-01-14T13:17:20.9675127Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9675234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9675339Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9675484Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9675579Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9675736Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9675839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9675844Z 
2025-01-14T13:17:20.9676113Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9676312Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9676537Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9676814Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9677105Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9677246Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9677250Z 
2025-01-14T13:17:20.9677342Z     def initialize_transport_state(
2025-01-14T13:17:20.9677415Z         self,
2025-01-14T13:17:20.9677493Z         simulation_state,
2025-01-14T13:17:20.9677571Z         opacity_state,
2025-01-14T13:17:20.9677646Z         macro_atom_state,
2025-01-14T13:17:20.9677720Z         plasma,
2025-01-14T13:17:20.9677794Z         no_of_packets,
2025-01-14T13:17:20.9677880Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9677953Z         iteration=0,
2025-01-14T13:17:20.9678025Z     ):
2025-01-14T13:17:20.9678149Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9678360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9678429Z         else:
2025-01-14T13:17:20.9678513Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9678583Z     
2025-01-14T13:17:20.9678721Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9678821Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9678889Z         )
2025-01-14T13:17:20.9678964Z     
2025-01-14T13:17:20.9679091Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9679207Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9679381Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9679513Z         else:
2025-01-14T13:17:20.9679651Z             continuum_state = None
2025-01-14T13:17:20.9679823Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9680000Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9680166Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9680338Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9680511Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9680676Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9680769Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9680846Z         ).to_numba(
2025-01-14T13:17:20.9680923Z             macro_atom_state,
2025-01-14T13:17:20.9681015Z             self.line_interaction_type,
2025-01-14T13:17:20.9681082Z         )
2025-01-14T13:17:20.9681188Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9681457Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9681529Z         ]
2025-01-14T13:17:20.9682026Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9682034Z 
2025-01-14T13:17:20.9682199Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9682350Z _____________________ ERROR at setup of test_hdf_plasma[w] _____________________
2025-01-14T13:17:20.9682366Z 
2025-01-14T13:17:20.9682996Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9683346Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9683350Z 
2025-01-14T13:17:20.9683438Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9683599Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9683697Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9683874Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9683973Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9684049Z >       sim.run_final()
2025-01-14T13:17:20.9684054Z 
2025-01-14T13:17:20.9684141Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9684406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9684507Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9684647Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9684745Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9684895Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9685008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9685012Z 
2025-01-14T13:17:20.9685276Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9685483Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9685818Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9686092Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9686260Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9686394Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9686398Z 
2025-01-14T13:17:20.9686491Z     def initialize_transport_state(
2025-01-14T13:17:20.9686560Z         self,
2025-01-14T13:17:20.9686645Z         simulation_state,
2025-01-14T13:17:20.9686719Z         opacity_state,
2025-01-14T13:17:20.9686803Z         macro_atom_state,
2025-01-14T13:17:20.9686873Z         plasma,
2025-01-14T13:17:20.9686951Z         no_of_packets,
2025-01-14T13:17:20.9687032Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9687110Z         iteration=0,
2025-01-14T13:17:20.9687183Z     ):
2025-01-14T13:17:20.9687311Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9687411Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9687480Z         else:
2025-01-14T13:17:20.9687563Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9687637Z     
2025-01-14T13:17:20.9687781Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9687876Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9687948Z         )
2025-01-14T13:17:20.9688064Z     
2025-01-14T13:17:20.9688293Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9688485Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9688745Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9688860Z         else:
2025-01-14T13:17:20.9689004Z             continuum_state = None
2025-01-14T13:17:20.9689173Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9689294Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9689399Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9689505Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9689613Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9689707Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9689804Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9689875Z         ).to_numba(
2025-01-14T13:17:20.9689959Z             macro_atom_state,
2025-01-14T13:17:20.9690046Z             self.line_interaction_type,
2025-01-14T13:17:20.9690123Z         )
2025-01-14T13:17:20.9690224Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9690493Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9690560Z         ]
2025-01-14T13:17:20.9690865Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9690875Z 
2025-01-14T13:17:20.9691027Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9691189Z _____________ ERROR at setup of test_hdf_plasma[excitation_energy] _____________
2025-01-14T13:17:20.9691288Z 
2025-01-14T13:17:20.9692140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9692494Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9692499Z 
2025-01-14T13:17:20.9692595Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9692757Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9692854Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9693156Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9693244Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9693324Z >       sim.run_final()
2025-01-14T13:17:20.9693333Z 
2025-01-14T13:17:20.9693416Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9693530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9693627Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9693775Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9693871Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9694029Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9694134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9694143Z 
2025-01-14T13:17:20.9694405Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9694610Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9694836Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9695117Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9695277Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9695422Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9695426Z 
2025-01-14T13:17:20.9695513Z     def initialize_transport_state(
2025-01-14T13:17:20.9695589Z         self,
2025-01-14T13:17:20.9695671Z         simulation_state,
2025-01-14T13:17:20.9695753Z         opacity_state,
2025-01-14T13:17:20.9695837Z         macro_atom_state,
2025-01-14T13:17:20.9695907Z         plasma,
2025-01-14T13:17:20.9695986Z         no_of_packets,
2025-01-14T13:17:20.9696067Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9696145Z         iteration=0,
2025-01-14T13:17:20.9696216Z     ):
2025-01-14T13:17:20.9696346Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9696441Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9696521Z         else:
2025-01-14T13:17:20.9696599Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9696671Z     
2025-01-14T13:17:20.9696806Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9696909Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9696978Z         )
2025-01-14T13:17:20.9697050Z     
2025-01-14T13:17:20.9697221Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9697429Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9697692Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9697810Z         else:
2025-01-14T13:17:20.9697951Z             continuum_state = None
2025-01-14T13:17:20.9698117Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9698311Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9698440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9698557Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9698809Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9698909Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9699001Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9699077Z         ).to_numba(
2025-01-14T13:17:20.9699156Z             macro_atom_state,
2025-01-14T13:17:20.9699248Z             self.line_interaction_type,
2025-01-14T13:17:20.9699315Z         )
2025-01-14T13:17:20.9699421Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9699692Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9699763Z         ]
2025-01-14T13:17:20.9700066Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9700150Z 
2025-01-14T13:17:20.9700298Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9700457Z ______________________ ERROR at setup of test_hdf_levels _______________________
2025-01-14T13:17:20.9700461Z 
2025-01-14T13:17:20.9701083Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9701435Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9701439Z 
2025-01-14T13:17:20.9701534Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9701850Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9701954Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9702131Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9702224Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9702305Z >       sim.run_final()
2025-01-14T13:17:20.9702310Z 
2025-01-14T13:17:20.9702397Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9702504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9702607Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9702752Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9702845Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9703001Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9703105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9703110Z 
2025-01-14T13:17:20.9703377Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9703582Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9703807Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9704082Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9704243Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9704384Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9704388Z 
2025-01-14T13:17:20.9704476Z     def initialize_transport_state(
2025-01-14T13:17:20.9704550Z         self,
2025-01-14T13:17:20.9704629Z         simulation_state,
2025-01-14T13:17:20.9704712Z         opacity_state,
2025-01-14T13:17:20.9704788Z         macro_atom_state,
2025-01-14T13:17:20.9704864Z         plasma,
2025-01-14T13:17:20.9704937Z         no_of_packets,
2025-01-14T13:17:20.9705023Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9705102Z         iteration=0,
2025-01-14T13:17:20.9705174Z     ):
2025-01-14T13:17:20.9705298Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9705401Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9705597Z         else:
2025-01-14T13:17:20.9705682Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9705751Z     
2025-01-14T13:17:20.9705893Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9705993Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9706101Z         )
2025-01-14T13:17:20.9706225Z     
2025-01-14T13:17:20.9706445Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9706636Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9706889Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9707011Z         else:
2025-01-14T13:17:20.9707154Z             continuum_state = None
2025-01-14T13:17:20.9707417Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9707530Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9707626Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9707739Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9707844Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9707940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9708037Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9708112Z         ).to_numba(
2025-01-14T13:17:20.9708190Z             macro_atom_state,
2025-01-14T13:17:20.9708282Z             self.line_interaction_type,
2025-01-14T13:17:20.9708349Z         )
2025-01-14T13:17:20.9708454Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9708722Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9708794Z         ]
2025-01-14T13:17:20.9709098Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9709103Z 
2025-01-14T13:17:20.9709255Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9709422Z ______________ ERROR at setup of test_hdf_scalars[time_explosion] ______________
2025-01-14T13:17:20.9709432Z 
2025-01-14T13:17:20.9710056Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9710407Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9710412Z 
2025-01-14T13:17:20.9710502Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9710665Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9710768Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9710949Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9711044Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9711125Z >       sim.run_final()
2025-01-14T13:17:20.9711130Z 
2025-01-14T13:17:20.9711216Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9711325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9711429Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9711701Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9711808Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9711959Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9712068Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9712073Z 
2025-01-14T13:17:20.9712336Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9712548Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9712890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9713171Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9713334Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9713470Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9713474Z 
2025-01-14T13:17:20.9713566Z     def initialize_transport_state(
2025-01-14T13:17:20.9713637Z         self,
2025-01-14T13:17:20.9713719Z         simulation_state,
2025-01-14T13:17:20.9713795Z         opacity_state,
2025-01-14T13:17:20.9713875Z         macro_atom_state,
2025-01-14T13:17:20.9713946Z         plasma,
2025-01-14T13:17:20.9714025Z         no_of_packets,
2025-01-14T13:17:20.9714238Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9714328Z         iteration=0,
2025-01-14T13:17:20.9714396Z     ):
2025-01-14T13:17:20.9714531Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9714642Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9714712Z         else:
2025-01-14T13:17:20.9714800Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9714874Z     
2025-01-14T13:17:20.9715120Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9715285Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9715406Z         )
2025-01-14T13:17:20.9715518Z     
2025-01-14T13:17:20.9715744Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9715932Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9716155Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9716228Z         else:
2025-01-14T13:17:20.9716328Z             continuum_state = None
2025-01-14T13:17:20.9716433Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9716548Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9716652Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9716759Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9716865Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9716958Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9717056Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9717131Z         ).to_numba(
2025-01-14T13:17:20.9717215Z             macro_atom_state,
2025-01-14T13:17:20.9717303Z             self.line_interaction_type,
2025-01-14T13:17:20.9717376Z         )
2025-01-14T13:17:20.9717478Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9717760Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9717833Z         ]
2025-01-14T13:17:20.9718139Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9718147Z 
2025-01-14T13:17:20.9718300Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9718469Z __________ ERROR at setup of test_hdf_scalars[link_t_rad_t_electron] ___________
2025-01-14T13:17:20.9718474Z 
2025-01-14T13:17:20.9719110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9719460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9719466Z 
2025-01-14T13:17:20.9719563Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9719722Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9719826Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9720007Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9720203Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9720284Z >       sim.run_final()
2025-01-14T13:17:20.9720288Z 
2025-01-14T13:17:20.9720371Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9720486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9720585Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9720732Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9720827Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9720988Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9721095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9721201Z 
2025-01-14T13:17:20.9721470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9721890Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9722131Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9722413Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9722575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9722720Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9722724Z 
2025-01-14T13:17:20.9722815Z     def initialize_transport_state(
2025-01-14T13:17:20.9722892Z         self,
2025-01-14T13:17:20.9722970Z         simulation_state,
2025-01-14T13:17:20.9723052Z         opacity_state,
2025-01-14T13:17:20.9723133Z         macro_atom_state,
2025-01-14T13:17:20.9723205Z         plasma,
2025-01-14T13:17:20.9723290Z         no_of_packets,
2025-01-14T13:17:20.9723374Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9723458Z         iteration=0,
2025-01-14T13:17:20.9723525Z     ):
2025-01-14T13:17:20.9723663Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9723758Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9723845Z         else:
2025-01-14T13:17:20.9723987Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9724108Z     
2025-01-14T13:17:20.9724337Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9724505Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9724619Z         )
2025-01-14T13:17:20.9724739Z     
2025-01-14T13:17:20.9724954Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9725114Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9725278Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9725356Z         else:
2025-01-14T13:17:20.9725447Z             continuum_state = None
2025-01-14T13:17:20.9725549Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9725677Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9725771Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9725886Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9725988Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9726094Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9726186Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9726264Z         ).to_numba(
2025-01-14T13:17:20.9726344Z             macro_atom_state,
2025-01-14T13:17:20.9726440Z             self.line_interaction_type,
2025-01-14T13:17:20.9726511Z         )
2025-01-14T13:17:20.9726618Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9726899Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9726973Z         ]
2025-01-14T13:17:20.9727285Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9727444Z 
2025-01-14T13:17:20.9727597Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9727763Z _________________ ERROR at setup of test_hdf_helium_treatment __________________
2025-01-14T13:17:20.9727768Z 
2025-01-14T13:17:20.9728401Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9728760Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9728765Z 
2025-01-14T13:17:20.9728971Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9729127Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9729230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9729410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9729503Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9729578Z >       sim.run_final()
2025-01-14T13:17:20.9729583Z 
2025-01-14T13:17:20.9729671Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9729779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9729882Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9730021Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9730120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9730278Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9730382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9730391Z 
2025-01-14T13:17:20.9730662Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9730869Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9731096Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9731367Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9731532Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9731883Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9731896Z 
2025-01-14T13:17:20.9731990Z     def initialize_transport_state(
2025-01-14T13:17:20.9732066Z         self,
2025-01-14T13:17:20.9732145Z         simulation_state,
2025-01-14T13:17:20.9732226Z         opacity_state,
2025-01-14T13:17:20.9732305Z         macro_atom_state,
2025-01-14T13:17:20.9732388Z         plasma,
2025-01-14T13:17:20.9732464Z         no_of_packets,
2025-01-14T13:17:20.9732552Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9732625Z         iteration=0,
2025-01-14T13:17:20.9732758Z     ):
2025-01-14T13:17:20.9732969Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9733135Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9733252Z         else:
2025-01-14T13:17:20.9733388Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9733499Z     
2025-01-14T13:17:20.9733732Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9733889Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9733961Z         )
2025-01-14T13:17:20.9734033Z     
2025-01-14T13:17:20.9734163Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9734284Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9734436Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9734519Z         else:
2025-01-14T13:17:20.9734601Z             continuum_state = None
2025-01-14T13:17:20.9734709Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9734955Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9735054Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9735159Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9735265Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9735359Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9735460Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9735539Z         ).to_numba(
2025-01-14T13:17:20.9735618Z             macro_atom_state,
2025-01-14T13:17:20.9735711Z             self.line_interaction_type,
2025-01-14T13:17:20.9735782Z         )
2025-01-14T13:17:20.9735888Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9736270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9736345Z         ]
2025-01-14T13:17:20.9736642Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9736652Z 
2025-01-14T13:17:20.9736805Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9736957Z ___________________ ERROR at setup of test_atomic_data_uuid ____________________
2025-01-14T13:17:20.9736961Z 
2025-01-14T13:17:20.9737603Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9737959Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9737969Z 
2025-01-14T13:17:20.9738060Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9738219Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9738320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9738499Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9738589Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9738672Z >       sim.run_final()
2025-01-14T13:17:20.9738676Z 
2025-01-14T13:17:20.9738767Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9738873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9738977Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9739119Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9739222Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9739374Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9739489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9739494Z 
2025-01-14T13:17:20.9739756Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9739969Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9740189Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9740468Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9740632Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9740770Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9740774Z 
2025-01-14T13:17:20.9740867Z     def initialize_transport_state(
2025-01-14T13:17:20.9740934Z         self,
2025-01-14T13:17:20.9741016Z         simulation_state,
2025-01-14T13:17:20.9741096Z         opacity_state,
2025-01-14T13:17:20.9741176Z         macro_atom_state,
2025-01-14T13:17:20.9741248Z         plasma,
2025-01-14T13:17:20.9741329Z         no_of_packets,
2025-01-14T13:17:20.9741410Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9741694Z         iteration=0,
2025-01-14T13:17:20.9741766Z     ):
2025-01-14T13:17:20.9741897Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9742040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9742162Z         else:
2025-01-14T13:17:20.9742309Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9742422Z     
2025-01-14T13:17:20.9742653Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9742812Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9742930Z         )
2025-01-14T13:17:20.9743043Z     
2025-01-14T13:17:20.9743221Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9743335Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9743630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9743701Z         else:
2025-01-14T13:17:20.9743790Z             continuum_state = None
2025-01-14T13:17:20.9743897Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9744011Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9744105Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9744216Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9744319Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9744415Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9744511Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9744584Z         ).to_numba(
2025-01-14T13:17:20.9744667Z             macro_atom_state,
2025-01-14T13:17:20.9744755Z             self.line_interaction_type,
2025-01-14T13:17:20.9744828Z         )
2025-01-14T13:17:20.9744935Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9745211Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9745285Z         ]
2025-01-14T13:17:20.9745591Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9745596Z 
2025-01-14T13:17:20.9745749Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9745903Z ___________________ ERROR at setup of test_collection[t_rad] ___________________
2025-01-14T13:17:20.9745907Z 
2025-01-14T13:17:20.9746539Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9746884Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9746895Z 
2025-01-14T13:17:20.9746990Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9747142Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9747248Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9747426Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9747514Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9747596Z >       sim.run_final()
2025-01-14T13:17:20.9747600Z 
2025-01-14T13:17:20.9747682Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9747796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9747893Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9748039Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9748132Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9748288Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9748398Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9748408Z 
2025-01-14T13:17:20.9748792Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9748999Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9749221Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9749503Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9749662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9749806Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9749811Z 
2025-01-14T13:17:20.9749903Z     def initialize_transport_state(
2025-01-14T13:17:20.9749982Z         self,
2025-01-14T13:17:20.9750162Z         simulation_state,
2025-01-14T13:17:20.9750245Z         opacity_state,
2025-01-14T13:17:20.9750334Z         macro_atom_state,
2025-01-14T13:17:20.9750470Z         plasma,
2025-01-14T13:17:20.9750618Z         no_of_packets,
2025-01-14T13:17:20.9750753Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9750884Z         iteration=0,
2025-01-14T13:17:20.9750997Z     ):
2025-01-14T13:17:20.9751208Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9751365Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9751496Z         else:
2025-01-14T13:17:20.9751704Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9751787Z     
2025-01-14T13:17:20.9751926Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9752031Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9752100Z         )
2025-01-14T13:17:20.9752172Z     
2025-01-14T13:17:20.9752301Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9752425Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9752577Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9752653Z         else:
2025-01-14T13:17:20.9752749Z             continuum_state = None
2025-01-14T13:17:20.9752849Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9752962Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9753052Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9753164Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9753260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9753358Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9753448Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9753527Z         ).to_numba(
2025-01-14T13:17:20.9753606Z             macro_atom_state,
2025-01-14T13:17:20.9753698Z             self.line_interaction_type,
2025-01-14T13:17:20.9753773Z         )
2025-01-14T13:17:20.9753878Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9754148Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9754231Z         ]
2025-01-14T13:17:20.9754539Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9754544Z 
2025-01-14T13:17:20.9754689Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9754844Z _____________________ ERROR at setup of test_collection[w] _____________________
2025-01-14T13:17:20.9754849Z 
2025-01-14T13:17:20.9755468Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9755821Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9755830Z 
2025-01-14T13:17:20.9755925Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9756214Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9756318Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9756489Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9756582Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9756658Z >       sim.run_final()
2025-01-14T13:17:20.9756662Z 
2025-01-14T13:17:20.9756749Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9756856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9756962Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9757102Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9757204Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9757472Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9757576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9757585Z 
2025-01-14T13:17:20.9757855Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9758057Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9758284Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9758556Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9758719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9758857Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9758867Z 
2025-01-14T13:17:20.9758956Z     def initialize_transport_state(
2025-01-14T13:17:20.9759036Z         self,
2025-01-14T13:17:20.9759115Z         simulation_state,
2025-01-14T13:17:20.9759196Z         opacity_state,
2025-01-14T13:17:20.9759274Z         macro_atom_state,
2025-01-14T13:17:20.9759355Z         plasma,
2025-01-14T13:17:20.9759430Z         no_of_packets,
2025-01-14T13:17:20.9759521Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9759594Z         iteration=0,
2025-01-14T13:17:20.9759670Z     ):
2025-01-14T13:17:20.9759863Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9760035Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9760149Z         else:
2025-01-14T13:17:20.9760296Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9760407Z     
2025-01-14T13:17:20.9760639Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9760796Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9760921Z         )
2025-01-14T13:17:20.9761030Z     
2025-01-14T13:17:20.9761162Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9761290Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9761444Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9761528Z         else:
2025-01-14T13:17:20.9761796Z             continuum_state = None
2025-01-14T13:17:20.9761911Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9762021Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9762121Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9762226Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9762329Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9762421Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9762520Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9762601Z         ).to_numba(
2025-01-14T13:17:20.9762680Z             macro_atom_state,
2025-01-14T13:17:20.9762781Z             self.line_interaction_type,
2025-01-14T13:17:20.9762848Z         )
2025-01-14T13:17:20.9762952Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9763221Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9763434Z         ]
2025-01-14T13:17:20.9763736Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9763741Z 
2025-01-14T13:17:20.9763894Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9764064Z _________ ERROR at setup of test_plasma_state_iterations[iterations_w] _________
2025-01-14T13:17:20.9764070Z 
2025-01-14T13:17:20.9764667Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9765159Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9765164Z 
2025-01-14T13:17:20.9765263Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9765389Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9765483Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9765586Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9765688Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9765808Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9765875Z     
2025-01-14T13:17:20.9765971Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9766061Z >       sim.run_convergence()
2025-01-14T13:17:20.9766066Z 
2025-01-14T13:17:20.9766181Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9766301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9766423Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9766574Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9766669Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9766835Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9766944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9766948Z 
2025-01-14T13:17:20.9767356Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9767819Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9768162Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9768705Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9769132Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9769521Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9769530Z 
2025-01-14T13:17:20.9769660Z     def initialize_transport_state(
2025-01-14T13:17:20.9769806Z         self,
2025-01-14T13:17:20.9769920Z         simulation_state,
2025-01-14T13:17:20.9770101Z         opacity_state,
2025-01-14T13:17:20.9770229Z         macro_atom_state,
2025-01-14T13:17:20.9770385Z         plasma,
2025-01-14T13:17:20.9770491Z         no_of_packets,
2025-01-14T13:17:20.9770639Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9770732Z         iteration=0,
2025-01-14T13:17:20.9770951Z     ):
2025-01-14T13:17:20.9771117Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9771285Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9771390Z         else:
2025-01-14T13:17:20.9771520Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9772005Z     
2025-01-14T13:17:20.9772203Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9772385Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9772486Z         )
2025-01-14T13:17:20.9772607Z     
2025-01-14T13:17:20.9773022Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9773235Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9773429Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9773572Z         else:
2025-01-14T13:17:20.9773693Z             continuum_state = None
2025-01-14T13:17:20.9773914Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9774074Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9774241Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9774417Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9774565Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9788505Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9788917Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9789059Z         ).to_numba(
2025-01-14T13:17:20.9789198Z             macro_atom_state,
2025-01-14T13:17:20.9789362Z             self.line_interaction_type,
2025-01-14T13:17:20.9789480Z         )
2025-01-14T13:17:20.9789659Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9790156Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9790264Z         ]
2025-01-14T13:17:20.9790600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9790606Z 
2025-01-14T13:17:20.9790770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9790942Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9791369Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9791973Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9792156Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9792663Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9792846Z _______ ERROR at setup of test_plasma_state_iterations[iterations_t_rad] _______
2025-01-14T13:17:20.9792851Z 
2025-01-14T13:17:20.9793458Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9793840Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9793854Z 
2025-01-14T13:17:20.9793955Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9794085Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9794193Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9794293Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9794406Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9794526Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9794598Z     
2025-01-14T13:17:20.9794694Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9794786Z >       sim.run_convergence()
2025-01-14T13:17:20.9794791Z 
2025-01-14T13:17:20.9794911Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9795034Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9795153Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9795312Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9795415Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9795572Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9795977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9795987Z 
2025-01-14T13:17:20.9796453Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9796814Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9797045Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9797337Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9797515Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9797663Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9797794Z 
2025-01-14T13:17:20.9797894Z     def initialize_transport_state(
2025-01-14T13:17:20.9797966Z         self,
2025-01-14T13:17:20.9798051Z         simulation_state,
2025-01-14T13:17:20.9798135Z         opacity_state,
2025-01-14T13:17:20.9798216Z         macro_atom_state,
2025-01-14T13:17:20.9798288Z         plasma,
2025-01-14T13:17:20.9798368Z         no_of_packets,
2025-01-14T13:17:20.9798451Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9798531Z         iteration=0,
2025-01-14T13:17:20.9798599Z     ):
2025-01-14T13:17:20.9798734Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9798834Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9798913Z         else:
2025-01-14T13:17:20.9798993Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9799066Z     
2025-01-14T13:17:20.9799206Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9799313Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9799393Z         )
2025-01-14T13:17:20.9799460Z     
2025-01-14T13:17:20.9799595Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9799716Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9799877Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9799944Z         else:
2025-01-14T13:17:20.9800034Z             continuum_state = None
2025-01-14T13:17:20.9800137Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9800250Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9800343Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9800457Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9800557Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9800656Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9800753Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9800829Z         ).to_numba(
2025-01-14T13:17:20.9800913Z             macro_atom_state,
2025-01-14T13:17:20.9801002Z             self.line_interaction_type,
2025-01-14T13:17:20.9801078Z         )
2025-01-14T13:17:20.9801185Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9801463Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9801533Z         ]
2025-01-14T13:17:20.9802054Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9802065Z 
2025-01-14T13:17:20.9802219Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9802418Z _ ERROR at setup of test_plasma_state_iterations[iterations_electron_densities] _
2025-01-14T13:17:20.9802423Z 
2025-01-14T13:17:20.9803028Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9803403Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9803529Z 
2025-01-14T13:17:20.9803631Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9803753Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9803851Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9803948Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9804060Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9804176Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9804250Z     
2025-01-14T13:17:20.9804349Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9804463Z >       sim.run_convergence()
2025-01-14T13:17:20.9804471Z 
2025-01-14T13:17:20.9804673Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9805081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9805276Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9805528Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9805665Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9805821Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9805933Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9805937Z 
2025-01-14T13:17:20.9806203Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9806413Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9806638Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9806911Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9807085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9807224Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9807234Z 
2025-01-14T13:17:20.9807327Z     def initialize_transport_state(
2025-01-14T13:17:20.9807397Z         self,
2025-01-14T13:17:20.9807479Z         simulation_state,
2025-01-14T13:17:20.9807555Z         opacity_state,
2025-01-14T13:17:20.9807635Z         macro_atom_state,
2025-01-14T13:17:20.9807705Z         plasma,
2025-01-14T13:17:20.9807785Z         no_of_packets,
2025-01-14T13:17:20.9807873Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9807947Z         iteration=0,
2025-01-14T13:17:20.9808020Z     ):
2025-01-14T13:17:20.9808146Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9808246Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9808315Z         else:
2025-01-14T13:17:20.9808404Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9808468Z     
2025-01-14T13:17:20.9808606Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9808700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9808776Z         )
2025-01-14T13:17:20.9808844Z     
2025-01-14T13:17:20.9808982Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9809092Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9809249Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9809320Z         else:
2025-01-14T13:17:20.9809408Z             continuum_state = None
2025-01-14T13:17:20.9809517Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9809622Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9809724Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9809830Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9809939Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9810033Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9810129Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9810293Z         ).to_numba(
2025-01-14T13:17:20.9810377Z             macro_atom_state,
2025-01-14T13:17:20.9810465Z             self.line_interaction_type,
2025-01-14T13:17:20.9810539Z         )
2025-01-14T13:17:20.9810639Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9810914Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9810989Z         ]
2025-01-14T13:17:20.9811290Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9811295Z 
2025-01-14T13:17:20.9811447Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9811818Z ______ ERROR at setup of test_plasma_state_iterations[iterations_t_inner] ______
2025-01-14T13:17:20.9811970Z 
2025-01-14T13:17:20.9812586Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9812963Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9812975Z 
2025-01-14T13:17:20.9813062Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9813186Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9813303Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9813472Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9813648Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9813848Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9813969Z     
2025-01-14T13:17:20.9814129Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9814262Z >       sim.run_convergence()
2025-01-14T13:17:20.9814269Z 
2025-01-14T13:17:20.9814458Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9814572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9814696Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9814843Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9814939Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9815097Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9815204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9815208Z 
2025-01-14T13:17:20.9815478Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9815679Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9815915Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9816186Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9816360Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9816500Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9816514Z 
2025-01-14T13:17:20.9816600Z     def initialize_transport_state(
2025-01-14T13:17:20.9816676Z         self,
2025-01-14T13:17:20.9816752Z         simulation_state,
2025-01-14T13:17:20.9816833Z         opacity_state,
2025-01-14T13:17:20.9816908Z         macro_atom_state,
2025-01-14T13:17:20.9816986Z         plasma,
2025-01-14T13:17:20.9817060Z         no_of_packets,
2025-01-14T13:17:20.9817149Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9817222Z         iteration=0,
2025-01-14T13:17:20.9817302Z     ):
2025-01-14T13:17:20.9817424Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9817523Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9817592Z         else:
2025-01-14T13:17:20.9817807Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9817875Z     
2025-01-14T13:17:20.9818014Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9818110Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9818177Z         )
2025-01-14T13:17:20.9818248Z     
2025-01-14T13:17:20.9818373Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9818491Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9818641Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9818715Z         else:
2025-01-14T13:17:20.9818797Z             continuum_state = None
2025-01-14T13:17:20.9818899Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9819088Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9819187Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9819292Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9819398Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9819491Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9819586Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9819666Z         ).to_numba(
2025-01-14T13:17:20.9819745Z             macro_atom_state,
2025-01-14T13:17:20.9819838Z             self.line_interaction_type,
2025-01-14T13:17:20.9819907Z         )
2025-01-14T13:17:20.9820011Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9820279Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9820352Z         ]
2025-01-14T13:17:20.9820651Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9820661Z 
2025-01-14T13:17:20.9820811Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9820982Z __________ ERROR at setup of test_plasma_estimates[nu_bar_estimator] ___________
2025-01-14T13:17:20.9820992Z 
2025-01-14T13:17:20.9821784Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9822165Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9822170Z 
2025-01-14T13:17:20.9822297Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9822510Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9822665Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9822838Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9823008Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9823208Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9823327Z     
2025-01-14T13:17:20.9823472Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9823565Z >       sim.run_convergence()
2025-01-14T13:17:20.9823570Z 
2025-01-14T13:17:20.9823685Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9823800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9823912Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9824055Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9824148Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9824307Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9824411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9824420Z 
2025-01-14T13:17:20.9824688Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9825034Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9825256Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9825539Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9825699Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9825845Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9825849Z 
2025-01-14T13:17:20.9825936Z     def initialize_transport_state(
2025-01-14T13:17:20.9826017Z         self,
2025-01-14T13:17:20.9826096Z         simulation_state,
2025-01-14T13:17:20.9826179Z         opacity_state,
2025-01-14T13:17:20.9826251Z         macro_atom_state,
2025-01-14T13:17:20.9826432Z         plasma,
2025-01-14T13:17:20.9826506Z         no_of_packets,
2025-01-14T13:17:20.9826594Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9826673Z         iteration=0,
2025-01-14T13:17:20.9826745Z     ):
2025-01-14T13:17:20.9826874Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9826969Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9827046Z         else:
2025-01-14T13:17:20.9827124Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9827199Z     
2025-01-14T13:17:20.9827334Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9827433Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9827503Z         )
2025-01-14T13:17:20.9827573Z     
2025-01-14T13:17:20.9827699Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9827815Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9827967Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9828046Z         else:
2025-01-14T13:17:20.9828129Z             continuum_state = None
2025-01-14T13:17:20.9828235Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9828351Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9828441Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9828550Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9828646Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9828745Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9828835Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9828911Z         ).to_numba(
2025-01-14T13:17:20.9828988Z             macro_atom_state,
2025-01-14T13:17:20.9829082Z             self.line_interaction_type,
2025-01-14T13:17:20.9829149Z         )
2025-01-14T13:17:20.9829253Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9829526Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9829601Z         ]
2025-01-14T13:17:20.9829901Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9829917Z 
2025-01-14T13:17:20.9830061Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9830228Z _____________ ERROR at setup of test_plasma_estimates[j_estimator] _____________
2025-01-14T13:17:20.9830234Z 
2025-01-14T13:17:20.9830954Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9831723Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9831738Z 
2025-01-14T13:17:20.9831893Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9832064Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9832164Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9832396Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9832512Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9832634Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9832706Z     
2025-01-14T13:17:20.9832801Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9832890Z >       sim.run_convergence()
2025-01-14T13:17:20.9832895Z 
2025-01-14T13:17:20.9833008Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9833128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9833244Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9833393Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9833604Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9833759Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9833875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9833885Z 
2025-01-14T13:17:20.9834153Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9834363Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9834584Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9834860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9835023Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9835170Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9835174Z 
2025-01-14T13:17:20.9835278Z     def initialize_transport_state(
2025-01-14T13:17:20.9835350Z         self,
2025-01-14T13:17:20.9835435Z         simulation_state,
2025-01-14T13:17:20.9835510Z         opacity_state,
2025-01-14T13:17:20.9835593Z         macro_atom_state,
2025-01-14T13:17:20.9835664Z         plasma,
2025-01-14T13:17:20.9835741Z         no_of_packets,
2025-01-14T13:17:20.9835822Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9835897Z         iteration=0,
2025-01-14T13:17:20.9835961Z     ):
2025-01-14T13:17:20.9836096Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9836194Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9836274Z         else:
2025-01-14T13:17:20.9836353Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9836424Z     
2025-01-14T13:17:20.9836560Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9836662Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9836734Z         )
2025-01-14T13:17:20.9836806Z     
2025-01-14T13:17:20.9836942Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9837059Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9837216Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9837291Z         else:
2025-01-14T13:17:20.9837381Z             continuum_state = None
2025-01-14T13:17:20.9837483Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9837595Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9837688Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9837798Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9837896Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9837995Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9838086Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9838163Z         ).to_numba(
2025-01-14T13:17:20.9838246Z             macro_atom_state,
2025-01-14T13:17:20.9838338Z             self.line_interaction_type,
2025-01-14T13:17:20.9838407Z         )
2025-01-14T13:17:20.9838504Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9838867Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9838936Z         ]
2025-01-14T13:17:20.9839241Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9839246Z 
2025-01-14T13:17:20.9839394Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9839565Z _____________ ERROR at setup of test_plasma_estimates[t_radiative] _____________
2025-01-14T13:17:20.9839570Z 
2025-01-14T13:17:20.9840287Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9841072Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9841088Z 
2025-01-14T13:17:20.9841238Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9841365Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9841467Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9841727Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9841862Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9841980Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9842052Z     
2025-01-14T13:17:20.9842143Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9842231Z >       sim.run_convergence()
2025-01-14T13:17:20.9842236Z 
2025-01-14T13:17:20.9842352Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9842463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9842589Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9842730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9842836Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9842991Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9843104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9843109Z 
2025-01-14T13:17:20.9843373Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9843579Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9843804Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9844079Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9844254Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9844396Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9844400Z 
2025-01-14T13:17:20.9844496Z     def initialize_transport_state(
2025-01-14T13:17:20.9844566Z         self,
2025-01-14T13:17:20.9844648Z         simulation_state,
2025-01-14T13:17:20.9844723Z         opacity_state,
2025-01-14T13:17:20.9844804Z         macro_atom_state,
2025-01-14T13:17:20.9844874Z         plasma,
2025-01-14T13:17:20.9844953Z         no_of_packets,
2025-01-14T13:17:20.9845036Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9845114Z         iteration=0,
2025-01-14T13:17:20.9845185Z     ):
2025-01-14T13:17:20.9845310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9845411Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9845480Z         else:
2025-01-14T13:17:20.9845562Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9845629Z     
2025-01-14T13:17:20.9845777Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9845877Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9845948Z         )
2025-01-14T13:17:20.9846148Z     
2025-01-14T13:17:20.9846284Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9846395Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9846552Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9846621Z         else:
2025-01-14T13:17:20.9846708Z             continuum_state = None
2025-01-14T13:17:20.9846808Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9846922Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9847017Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9847123Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9847226Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9847427Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9847520Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9847589Z         ).to_numba(
2025-01-14T13:17:20.9847676Z             macro_atom_state,
2025-01-14T13:17:20.9847760Z             self.line_interaction_type,
2025-01-14T13:17:20.9847835Z         )
2025-01-14T13:17:20.9847933Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9848206Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9848274Z         ]
2025-01-14T13:17:20.9848578Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9848583Z 
2025-01-14T13:17:20.9848736Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9848901Z ___________ ERROR at setup of test_plasma_estimates[dilution_factor] ___________
2025-01-14T13:17:20.9848911Z 
2025-01-14T13:17:20.9849505Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9849878Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9849882Z 
2025-01-14T13:17:20.9849976Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9850098Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9850189Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9850290Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9850392Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9850513Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9850580Z     
2025-01-14T13:17:20.9850675Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9850762Z >       sim.run_convergence()
2025-01-14T13:17:20.9850766Z 
2025-01-14T13:17:20.9850881Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9850987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9851109Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9851250Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9851354Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9851511Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9851795Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9851802Z 
2025-01-14T13:17:20.9852074Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9852276Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9852505Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9852775Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9853070Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9853210Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9853219Z 
2025-01-14T13:17:20.9853309Z     def initialize_transport_state(
2025-01-14T13:17:20.9853385Z         self,
2025-01-14T13:17:20.9853463Z         simulation_state,
2025-01-14T13:17:20.9853542Z         opacity_state,
2025-01-14T13:17:20.9853620Z         macro_atom_state,
2025-01-14T13:17:20.9853694Z         plasma,
2025-01-14T13:17:20.9853767Z         no_of_packets,
2025-01-14T13:17:20.9853853Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9853927Z         iteration=0,
2025-01-14T13:17:20.9854001Z     ):
2025-01-14T13:17:20.9854122Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9854333Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9854404Z         else:
2025-01-14T13:17:20.9854488Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9854561Z     
2025-01-14T13:17:20.9854701Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9854796Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9854871Z         )
2025-01-14T13:17:20.9854941Z     
2025-01-14T13:17:20.9855066Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9855182Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9855332Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9855406Z         else:
2025-01-14T13:17:20.9855489Z             continuum_state = None
2025-01-14T13:17:20.9855595Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9855700Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9855798Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9855901Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9856000Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9856095Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9856191Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9856261Z         ).to_numba(
2025-01-14T13:17:20.9856345Z             macro_atom_state,
2025-01-14T13:17:20.9856439Z             self.line_interaction_type,
2025-01-14T13:17:20.9856506Z         )
2025-01-14T13:17:20.9856611Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9856877Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9856950Z         ]
2025-01-14T13:17:20.9857247Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9857256Z 
2025-01-14T13:17:20.9857407Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9857566Z _____________ ERROR at setup of test_plasma_estimates[output_nus] ______________
2025-01-14T13:17:20.9857575Z 
2025-01-14T13:17:20.9858171Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9858536Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9858541Z 
2025-01-14T13:17:20.9858630Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9858753Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9858848Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9858951Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9859057Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9859176Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9859243Z     
2025-01-14T13:17:20.9859340Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9859509Z >       sim.run_convergence()
2025-01-14T13:17:20.9859518Z 
2025-01-14T13:17:20.9859630Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9859742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9859857Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9860000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9860095Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9860252Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9860357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9860361Z 
2025-01-14T13:17:20.9860715Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9860916Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9861184Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9861458Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9861753Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9861899Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9861903Z 
2025-01-14T13:17:20.9861990Z     def initialize_transport_state(
2025-01-14T13:17:20.9862063Z         self,
2025-01-14T13:17:20.9862141Z         simulation_state,
2025-01-14T13:17:20.9862222Z         opacity_state,
2025-01-14T13:17:20.9862298Z         macro_atom_state,
2025-01-14T13:17:20.9862373Z         plasma,
2025-01-14T13:17:20.9862447Z         no_of_packets,
2025-01-14T13:17:20.9862541Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9862614Z         iteration=0,
2025-01-14T13:17:20.9862687Z     ):
2025-01-14T13:17:20.9862811Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9862918Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9862992Z         else:
2025-01-14T13:17:20.9863071Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9863142Z     
2025-01-14T13:17:20.9863276Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9863377Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9863444Z         )
2025-01-14T13:17:20.9863516Z     
2025-01-14T13:17:20.9863643Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9863758Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9863911Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9863987Z         else:
2025-01-14T13:17:20.9864074Z             continuum_state = None
2025-01-14T13:17:20.9864178Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9864284Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9864385Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9864492Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9864588Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9864685Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9864773Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9864849Z         ).to_numba(
2025-01-14T13:17:20.9864927Z             macro_atom_state,
2025-01-14T13:17:20.9865019Z             self.line_interaction_type,
2025-01-14T13:17:20.9865087Z         )
2025-01-14T13:17:20.9865193Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9865456Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9865534Z         ]
2025-01-14T13:17:20.9865830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9865979Z 
2025-01-14T13:17:20.9866128Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9866299Z ___________ ERROR at setup of test_plasma_estimates[output_energies] ___________
2025-01-14T13:17:20.9866303Z 
2025-01-14T13:17:20.9866893Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9867261Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9867266Z 
2025-01-14T13:17:20.9867350Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9867577Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9867673Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9867771Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9867887Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9867999Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9868071Z     
2025-01-14T13:17:20.9868162Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9868248Z >       sim.run_convergence()
2025-01-14T13:17:20.9868253Z 
2025-01-14T13:17:20.9868365Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9868476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9868590Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9868733Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9868826Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9868988Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9869101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9869105Z 
2025-01-14T13:17:20.9869370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9869577Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9869796Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9870074Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9870234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9870377Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9870381Z 
2025-01-14T13:17:20.9870467Z     def initialize_transport_state(
2025-01-14T13:17:20.9870540Z         self,
2025-01-14T13:17:20.9870627Z         simulation_state,
2025-01-14T13:17:20.9870702Z         opacity_state,
2025-01-14T13:17:20.9870783Z         macro_atom_state,
2025-01-14T13:17:20.9870855Z         plasma,
2025-01-14T13:17:20.9870938Z         no_of_packets,
2025-01-14T13:17:20.9871020Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9871099Z         iteration=0,
2025-01-14T13:17:20.9871166Z     ):
2025-01-14T13:17:20.9871294Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9871388Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9871465Z         else:
2025-01-14T13:17:20.9871543Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9871743Z     
2025-01-14T13:17:20.9871879Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9871981Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9872049Z         )
2025-01-14T13:17:20.9872121Z     
2025-01-14T13:17:20.9872245Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9872363Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9872522Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9872791Z         else:
2025-01-14T13:17:20.9872941Z             continuum_state = None
2025-01-14T13:17:20.9873107Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9873290Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9873440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9873622Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9873788Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9873929Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9874024Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9874099Z         ).to_numba(
2025-01-14T13:17:20.9874177Z             macro_atom_state,
2025-01-14T13:17:20.9874270Z             self.line_interaction_type,
2025-01-14T13:17:20.9874473Z         )
2025-01-14T13:17:20.9874576Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9874849Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9874924Z         ]
2025-01-14T13:17:20.9875226Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9875231Z 
2025-01-14T13:17:20.9875376Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9875557Z ___________ ERROR at setup of TestSpectrumSolver.test_initialization ___________
2025-01-14T13:17:20.9875562Z 
2025-01-14T13:17:20.9875812Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9875994Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9876361Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9876450Z generate_reference = False
2025-01-14T13:17:20.9876648Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9876657Z 
2025-01-14T13:17:20.9876745Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9876825Z     def simulation(
2025-01-14T13:17:20.9876893Z         self,
2025-01-14T13:17:20.9876968Z         request,
2025-01-14T13:17:20.9877046Z         atomic_data_fname,
2025-01-14T13:17:20.9877134Z         generate_reference,
2025-01-14T13:17:20.9877230Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9877301Z     ):
2025-01-14T13:17:20.9877394Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9877567Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9877641Z         )
2025-01-14T13:17:20.9877736Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9877808Z     
2025-01-14T13:17:20.9877918Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9878004Z >       simulation.run_final()
2025-01-14T13:17:20.9878009Z 
2025-01-14T13:17:20.9878129Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9878249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9878350Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9878497Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9878590Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9878748Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9878857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9878866Z 
2025-01-14T13:17:20.9879133Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9879337Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9879563Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9879843Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9880090Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9880238Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9880243Z 
2025-01-14T13:17:20.9880330Z     def initialize_transport_state(
2025-01-14T13:17:20.9880405Z         self,
2025-01-14T13:17:20.9880483Z         simulation_state,
2025-01-14T13:17:20.9880567Z         opacity_state,
2025-01-14T13:17:20.9880644Z         macro_atom_state,
2025-01-14T13:17:20.9880720Z         plasma,
2025-01-14T13:17:20.9880800Z         no_of_packets,
2025-01-14T13:17:20.9880883Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9880962Z         iteration=0,
2025-01-14T13:17:20.9881032Z     ):
2025-01-14T13:17:20.9881248Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9881345Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9881420Z         else:
2025-01-14T13:17:20.9881502Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9881782Z     
2025-01-14T13:17:20.9881937Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9882043Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9882111Z         )
2025-01-14T13:17:20.9882183Z     
2025-01-14T13:17:20.9882312Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9882431Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9882585Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9882660Z         else:
2025-01-14T13:17:20.9882747Z             continuum_state = None
2025-01-14T13:17:20.9882848Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9882960Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9883057Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9883172Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9883276Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9883377Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9883469Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9883545Z         ).to_numba(
2025-01-14T13:17:20.9883623Z             macro_atom_state,
2025-01-14T13:17:20.9883717Z             self.line_interaction_type,
2025-01-14T13:17:20.9883784Z         )
2025-01-14T13:17:20.9883889Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9884161Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9884234Z         ]
2025-01-14T13:17:20.9884536Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9884545Z 
2025-01-14T13:17:20.9884693Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9884852Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9885163Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9885604Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9885754Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9886246Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9886433Z _______ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets ________
2025-01-14T13:17:20.9886438Z 
2025-01-14T13:17:20.9886689Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9886870Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9887238Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9887454Z generate_reference = False
2025-01-14T13:17:20.9887643Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9887648Z 
2025-01-14T13:17:20.9887744Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9887819Z     def simulation(
2025-01-14T13:17:20.9887894Z         self,
2025-01-14T13:17:20.9887968Z         request,
2025-01-14T13:17:20.9888045Z         atomic_data_fname,
2025-01-14T13:17:20.9888130Z         generate_reference,
2025-01-14T13:17:20.9888224Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9888296Z     ):
2025-01-14T13:17:20.9888387Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9888671Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9888739Z         )
2025-01-14T13:17:20.9888840Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9888912Z     
2025-01-14T13:17:20.9889021Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9889103Z >       simulation.run_final()
2025-01-14T13:17:20.9889108Z 
2025-01-14T13:17:20.9889233Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9889339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9889443Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9889587Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9889681Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9889840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9889945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9889957Z 
2025-01-14T13:17:20.9890226Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9890427Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9890658Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9890932Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9891099Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9891246Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9891250Z 
2025-01-14T13:17:20.9891338Z     def initialize_transport_state(
2025-01-14T13:17:20.9891411Z         self,
2025-01-14T13:17:20.9891490Z         simulation_state,
2025-01-14T13:17:20.9891739Z         opacity_state,
2025-01-14T13:17:20.9891858Z         macro_atom_state,
2025-01-14T13:17:20.9891941Z         plasma,
2025-01-14T13:17:20.9892019Z         no_of_packets,
2025-01-14T13:17:20.9892109Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9892182Z         iteration=0,
2025-01-14T13:17:20.9892260Z     ):
2025-01-14T13:17:20.9892385Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9892487Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9892556Z         else:
2025-01-14T13:17:20.9892641Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9892707Z     
2025-01-14T13:17:20.9892848Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9892951Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9893018Z         )
2025-01-14T13:17:20.9893089Z     
2025-01-14T13:17:20.9893215Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9893332Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9893483Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9893560Z         else:
2025-01-14T13:17:20.9893643Z             continuum_state = None
2025-01-14T13:17:20.9893749Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9894020Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9894168Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9894349Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9894522Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9894686Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9894838Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9894961Z         ).to_numba(
2025-01-14T13:17:20.9895090Z             macro_atom_state,
2025-01-14T13:17:20.9895248Z             self.line_interaction_type,
2025-01-14T13:17:20.9895349Z         )
2025-01-14T13:17:20.9895462Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9895735Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9895934Z         ]
2025-01-14T13:17:20.9896237Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9896247Z 
2025-01-14T13:17:20.9896401Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9896600Z __ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets_reabsorbed __
2025-01-14T13:17:20.9896609Z 
2025-01-14T13:17:20.9896861Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9897040Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9897404Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9897494Z generate_reference = False
2025-01-14T13:17:20.9897684Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9897693Z 
2025-01-14T13:17:20.9897786Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9897860Z     def simulation(
2025-01-14T13:17:20.9897939Z         self,
2025-01-14T13:17:20.9898010Z         request,
2025-01-14T13:17:20.9898094Z         atomic_data_fname,
2025-01-14T13:17:20.9898175Z         generate_reference,
2025-01-14T13:17:20.9898273Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9898345Z     ):
2025-01-14T13:17:20.9898437Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9898614Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9898682Z         )
2025-01-14T13:17:20.9898785Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9898853Z     
2025-01-14T13:17:20.9898962Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9899043Z >       simulation.run_final()
2025-01-14T13:17:20.9899048Z 
2025-01-14T13:17:20.9899176Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9899284Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9899389Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9899536Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9899637Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9899795Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9899901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9899905Z 
2025-01-14T13:17:20.9900177Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9900379Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9900606Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9900885Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9901053Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9901284Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9901294Z 
2025-01-14T13:17:20.9901383Z     def initialize_transport_state(
2025-01-14T13:17:20.9901457Z         self,
2025-01-14T13:17:20.9901535Z         simulation_state,
2025-01-14T13:17:20.9901733Z         opacity_state,
2025-01-14T13:17:20.9901811Z         macro_atom_state,
2025-01-14T13:17:20.9901887Z         plasma,
2025-01-14T13:17:20.9901961Z         no_of_packets,
2025-01-14T13:17:20.9902047Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9902120Z         iteration=0,
2025-01-14T13:17:20.9902192Z     ):
2025-01-14T13:17:20.9902318Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9902419Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9902608Z         else:
2025-01-14T13:17:20.9902696Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9902761Z     
2025-01-14T13:17:20.9902904Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9903008Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9903082Z         )
2025-01-14T13:17:20.9903157Z     
2025-01-14T13:17:20.9903284Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9903403Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9903557Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9903635Z         else:
2025-01-14T13:17:20.9903717Z             continuum_state = None
2025-01-14T13:17:20.9903822Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9903931Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9904031Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9904137Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9904245Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9904340Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9904439Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9904509Z         ).to_numba(
2025-01-14T13:17:20.9904592Z             macro_atom_state,
2025-01-14T13:17:20.9904685Z             self.line_interaction_type,
2025-01-14T13:17:20.9904753Z         )
2025-01-14T13:17:20.9904859Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9905124Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9905197Z         ]
2025-01-14T13:17:20.9905497Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9905502Z 
2025-01-14T13:17:20.9905654Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9905826Z _______________ ERROR at setup of TestSpectrumSolver.test_solve ________________
2025-01-14T13:17:20.9905830Z 
2025-01-14T13:17:20.9906084Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9906266Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9906631Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9906720Z generate_reference = False
2025-01-14T13:17:20.9906907Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9906912Z 
2025-01-14T13:17:20.9907003Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9907077Z     def simulation(
2025-01-14T13:17:20.9907154Z         self,
2025-01-14T13:17:20.9907224Z         request,
2025-01-14T13:17:20.9907309Z         atomic_data_fname,
2025-01-14T13:17:20.9907388Z         generate_reference,
2025-01-14T13:17:20.9907495Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9907563Z     ):
2025-01-14T13:17:20.9907660Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9907826Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9908022Z         )
2025-01-14T13:17:20.9908125Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9908194Z     
2025-01-14T13:17:20.9908304Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9908386Z >       simulation.run_final()
2025-01-14T13:17:20.9908391Z 
2025-01-14T13:17:20.9908515Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9908622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9908726Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9908866Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9908965Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9909685Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9909796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9909806Z 
2025-01-14T13:17:20.9910075Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9910278Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9910504Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9910776Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9910943Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9911082Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9911087Z 
2025-01-14T13:17:20.9911183Z     def initialize_transport_state(
2025-01-14T13:17:20.9911257Z         self,
2025-01-14T13:17:20.9911343Z         simulation_state,
2025-01-14T13:17:20.9911421Z         opacity_state,
2025-01-14T13:17:20.9911500Z         macro_atom_state,
2025-01-14T13:17:20.9911666Z         plasma,
2025-01-14T13:17:20.9911749Z         no_of_packets,
2025-01-14T13:17:20.9911838Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9911911Z         iteration=0,
2025-01-14T13:17:20.9911983Z     ):
2025-01-14T13:17:20.9912107Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9912207Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9912277Z         else:
2025-01-14T13:17:20.9912361Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9912428Z     
2025-01-14T13:17:20.9912569Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9912664Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9912742Z         )
2025-01-14T13:17:20.9912809Z     
2025-01-14T13:17:20.9912941Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9913058Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9913214Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9913297Z         else:
2025-01-14T13:17:20.9913380Z             continuum_state = None
2025-01-14T13:17:20.9913484Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9913591Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9913687Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9913792Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9913898Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9913990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9914089Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9914162Z         ).to_numba(
2025-01-14T13:17:20.9914249Z             macro_atom_state,
2025-01-14T13:17:20.9914336Z             self.line_interaction_type,
2025-01-14T13:17:20.9914473Z         )
2025-01-14T13:17:20.9914648Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9915124Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9915407Z         ]
2025-01-14T13:17:20.9915782Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9915789Z 
2025-01-14T13:17:20.9915945Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9916125Z _________ ERROR at setup of TestTransportSimple.test_j_blue_estimators _________
2025-01-14T13:17:20.9916129Z 
2025-01-14T13:17:20.9916344Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9916522Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9916896Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9917119Z generate_reference = False
2025-01-14T13:17:20.9917312Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9917322Z 
2025-01-14T13:17:20.9917411Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9917485Z     def simulation(
2025-01-14T13:17:20.9917560Z         self,
2025-01-14T13:17:20.9917629Z         request,
2025-01-14T13:17:20.9917711Z         atomic_data_fname,
2025-01-14T13:17:20.9917791Z         generate_reference,
2025-01-14T13:17:20.9917889Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9917957Z     ):
2025-01-14T13:17:20.9918054Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9918217Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9918290Z         )
2025-01-14T13:17:20.9918386Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9918459Z     
2025-01-14T13:17:20.9918577Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9918664Z >       simulation.run_convergence()
2025-01-14T13:17:20.9918669Z 
2025-01-14T13:17:20.9918765Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9918878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9918998Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9919136Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9919233Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9919386Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9919494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9919499Z 
2025-01-14T13:17:20.9919757Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9919961Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9920190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9920464Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9920631Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9920770Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9920774Z 
2025-01-14T13:17:20.9920868Z     def initialize_transport_state(
2025-01-14T13:17:20.9920937Z         self,
2025-01-14T13:17:20.9921036Z         simulation_state,
2025-01-14T13:17:20.9921176Z         opacity_state,
2025-01-14T13:17:20.9921316Z         macro_atom_state,
2025-01-14T13:17:20.9921432Z         plasma,
2025-01-14T13:17:20.9921686Z         no_of_packets,
2025-01-14T13:17:20.9921832Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9921954Z         iteration=0,
2025-01-14T13:17:20.9922070Z     ):
2025-01-14T13:17:20.9922285Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9922392Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9922462Z         else:
2025-01-14T13:17:20.9922681Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9922750Z     
2025-01-14T13:17:20.9922890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9922986Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9923058Z         )
2025-01-14T13:17:20.9923124Z     
2025-01-14T13:17:20.9923255Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9923368Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9923524Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9923594Z         else:
2025-01-14T13:17:20.9923682Z             continuum_state = None
2025-01-14T13:17:20.9923786Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9924006Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9924108Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9924213Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9924319Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9924411Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9924507Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9924577Z         ).to_numba(
2025-01-14T13:17:20.9924659Z             macro_atom_state,
2025-01-14T13:17:20.9924746Z             self.line_interaction_type,
2025-01-14T13:17:20.9924818Z         )
2025-01-14T13:17:20.9924920Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9925192Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9925269Z         ]
2025-01-14T13:17:20.9925567Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9925578Z 
2025-01-14T13:17:20.9925728Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9925879Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9926134Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9926204Z 	
2025-01-14T13:17:20.9926767Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:20.9926936Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9927360Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:20.9927529Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9928152Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:20.9928590Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9929203Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9929397Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9929606Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:20.9929777Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9929845Z 	
2025-01-14T13:17:20.9929999Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:20.9930150Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9930310Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:20.9930651Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:20.9931029Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:20.9931713Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:20.9932228Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9932451Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:20.9932557Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:20.9932645Z 	Starting iteration 1 of 5
2025-01-14T13:17:20.9932824Z _____________ ERROR at setup of TestTransportSimple.test_spectrum ______________
2025-01-14T13:17:20.9932829Z 
2025-01-14T13:17:20.9933035Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9933348Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9933719Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9933811Z generate_reference = False
2025-01-14T13:17:20.9934000Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9934005Z 
2025-01-14T13:17:20.9934096Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9934171Z     def simulation(
2025-01-14T13:17:20.9934244Z         self,
2025-01-14T13:17:20.9934315Z         request,
2025-01-14T13:17:20.9934398Z         atomic_data_fname,
2025-01-14T13:17:20.9934482Z         generate_reference,
2025-01-14T13:17:20.9934651Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9934773Z     ):
2025-01-14T13:17:20.9934927Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9935222Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9935337Z         )
2025-01-14T13:17:20.9935501Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9935627Z     
2025-01-14T13:17:20.9935750Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9935842Z >       simulation.run_convergence()
2025-01-14T13:17:20.9935848Z 
2025-01-14T13:17:20.9935947Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9936058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9936188Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9936338Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9936433Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9936592Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9936699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9936708Z 
2025-01-14T13:17:20.9936978Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9937179Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9937410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9937685Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9937851Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9937994Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9937999Z 
2025-01-14T13:17:20.9938091Z     def initialize_transport_state(
2025-01-14T13:17:20.9938165Z         self,
2025-01-14T13:17:20.9938244Z         simulation_state,
2025-01-14T13:17:20.9938324Z         opacity_state,
2025-01-14T13:17:20.9938400Z         macro_atom_state,
2025-01-14T13:17:20.9938483Z         plasma,
2025-01-14T13:17:20.9938558Z         no_of_packets,
2025-01-14T13:17:20.9938645Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9938719Z         iteration=0,
2025-01-14T13:17:20.9938924Z     ):
2025-01-14T13:17:20.9939058Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9939162Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9939231Z         else:
2025-01-14T13:17:20.9939315Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9939382Z     
2025-01-14T13:17:20.9939532Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9939634Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9939702Z         )
2025-01-14T13:17:20.9939774Z     
2025-01-14T13:17:20.9939901Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9940024Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9940176Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9940338Z         else:
2025-01-14T13:17:20.9940423Z             continuum_state = None
2025-01-14T13:17:20.9940530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9940643Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9940740Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9940846Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9940949Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9941043Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9941199Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9941334Z         ).to_numba(
2025-01-14T13:17:20.9941465Z             macro_atom_state,
2025-01-14T13:17:20.9941745Z             self.line_interaction_type,
2025-01-14T13:17:20.9941861Z         )
2025-01-14T13:17:20.9942035Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9942456Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9942533Z         ]
2025-01-14T13:17:20.9942838Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9942852Z 
2025-01-14T13:17:20.9943006Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9943187Z _________ ERROR at setup of TestTransportSimple.test_virtual_spectrum __________
2025-01-14T13:17:20.9943197Z 
2025-01-14T13:17:20.9943407Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9943590Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9943956Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9944048Z generate_reference = False
2025-01-14T13:17:20.9944240Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9944249Z 
2025-01-14T13:17:20.9944340Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9944415Z     def simulation(
2025-01-14T13:17:20.9944494Z         self,
2025-01-14T13:17:20.9944564Z         request,
2025-01-14T13:17:20.9944646Z         atomic_data_fname,
2025-01-14T13:17:20.9944726Z         generate_reference,
2025-01-14T13:17:20.9944825Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9944899Z     ):
2025-01-14T13:17:20.9944992Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9945162Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9945229Z         )
2025-01-14T13:17:20.9945330Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9945397Z     
2025-01-14T13:17:20.9945507Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9945596Z >       simulation.run_convergence()
2025-01-14T13:17:20.9945600Z 
2025-01-14T13:17:20.9945701Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9945808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9945930Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9946206Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9946311Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9946466Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9946575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9946580Z 
2025-01-14T13:17:20.9946848Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9947049Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9947275Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9947671Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9947837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9947986Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9947990Z 
2025-01-14T13:17:20.9948159Z     def initialize_transport_state(
2025-01-14T13:17:20.9948286Z         self,
2025-01-14T13:17:20.9948416Z         simulation_state,
2025-01-14T13:17:20.9948546Z         opacity_state,
2025-01-14T13:17:20.9948672Z         macro_atom_state,
2025-01-14T13:17:20.9948794Z         plasma,
2025-01-14T13:17:20.9948915Z         no_of_packets,
2025-01-14T13:17:20.9949058Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9949170Z         iteration=0,
2025-01-14T13:17:20.9949248Z     ):
2025-01-14T13:17:20.9949377Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9949479Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9949559Z         else:
2025-01-14T13:17:20.9949642Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9949708Z     
2025-01-14T13:17:20.9949850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9949957Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9950030Z         )
2025-01-14T13:17:20.9950096Z     
2025-01-14T13:17:20.9950228Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9950346Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9950501Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9950575Z         else:
2025-01-14T13:17:20.9950657Z             continuum_state = None
2025-01-14T13:17:20.9950763Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9950871Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9950969Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9951074Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9951184Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9951281Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9951381Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9951453Z         ).to_numba(
2025-01-14T13:17:20.9951536Z             macro_atom_state,
2025-01-14T13:17:20.9951803Z             self.line_interaction_type,
2025-01-14T13:17:20.9951879Z         )
2025-01-14T13:17:20.9951986Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9952257Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9952329Z         ]
2025-01-14T13:17:20.9952629Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9952634Z 
2025-01-14T13:17:20.9952784Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9953055Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-downbranch] _
2025-01-14T13:17:20.9953060Z 
2025-01-14T13:17:20.9953379Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9954125Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9954493Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9954498Z 
2025-01-14T13:17:20.9954590Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9954707Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9954806Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9954887Z     
2025-01-14T13:17:20.9955181Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9955564Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9955703Z             self.name += "_interp"
2025-01-14T13:17:20.9955821Z     
2025-01-14T13:17:20.9956009Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9956108Z >       simulation.run_convergence()
2025-01-14T13:17:20.9956113Z 
2025-01-14T13:17:20.9956245Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:20.9956358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9956471Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9956618Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9956712Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9956869Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9956975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9956984Z 
2025-01-14T13:17:20.9957253Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:20.9957465Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:20.9957684Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:20.9957962Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:20.9958123Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:20.9958269Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9958274Z 
2025-01-14T13:17:20.9958361Z     def initialize_transport_state(
2025-01-14T13:17:20.9958435Z         self,
2025-01-14T13:17:20.9958512Z         simulation_state,
2025-01-14T13:17:20.9958593Z         opacity_state,
2025-01-14T13:17:20.9958674Z         macro_atom_state,
2025-01-14T13:17:20.9958749Z         plasma,
2025-01-14T13:17:20.9958822Z         no_of_packets,
2025-01-14T13:17:20.9958909Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9958992Z         iteration=0,
2025-01-14T13:17:20.9959061Z     ):
2025-01-14T13:17:20.9959191Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9959286Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9959360Z         else:
2025-01-14T13:17:20.9959439Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9959510Z     
2025-01-14T13:17:20.9959646Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9959747Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9959815Z         )
2025-01-14T13:17:20.9959886Z     
2025-01-14T13:17:20.9960012Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9960131Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9960290Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9960364Z         else:
2025-01-14T13:17:20.9960446Z             continuum_state = None
2025-01-14T13:17:20.9960552Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9960753Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9960846Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9960956Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9961087Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9961187Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9961278Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9961359Z         ).to_numba(
2025-01-14T13:17:20.9961462Z             macro_atom_state,
2025-01-14T13:17:20.9961748Z             self.line_interaction_type,
2025-01-14T13:17:20.9961868Z         )
2025-01-14T13:17:20.9962042Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9962678Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9962758Z         ]
2025-01-14T13:17:20.9963067Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9963077Z 
2025-01-14T13:17:20.9963224Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9963380Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9970178Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9970468Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9970670Z 	
2025-01-14T13:17:20.9971227Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:20.9971408Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9972038Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:20.9972222Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9972696Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:20.9972939Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9973501Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9973691Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9973906Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:20.9974069Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9974142Z 	
2025-01-14T13:17:20.9974293Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:20.9974453Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9974607Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:20.9975127Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:20.9975784Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:20.9976276Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:20.9976785Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9977006Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:20.9977118Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:20.9977202Z 	Starting iteration 1 of 5
2025-01-14T13:17:20.9977464Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] _
2025-01-14T13:17:20.9977469Z 
2025-01-14T13:17:20.9977786Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9978394Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9978771Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9978776Z 
2025-01-14T13:17:20.9978864Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9978986Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9979080Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9979152Z     
2025-01-14T13:17:20.9979319Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9979465Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9979546Z             self.name += "_interp"
2025-01-14T13:17:20.9979618Z     
2025-01-14T13:17:20.9979729Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9979824Z >       simulation.run_convergence()
2025-01-14T13:17:20.9979829Z 
2025-01-14T13:17:20.9979964Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:20.9980229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9980350Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9980490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9980590Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9980745Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9980857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9980862Z 
2025-01-14T13:17:20.9981124Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:20.9981331Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:20.9981953Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:20.9982439Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:20.9982704Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:20.9982851Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9982855Z 
2025-01-14T13:17:20.9982949Z     def initialize_transport_state(
2025-01-14T13:17:20.9983020Z         self,
2025-01-14T13:17:20.9983106Z         simulation_state,
2025-01-14T13:17:20.9983181Z         opacity_state,
2025-01-14T13:17:20.9983263Z         macro_atom_state,
2025-01-14T13:17:20.9983336Z         plasma,
2025-01-14T13:17:20.9992999Z         no_of_packets,
2025-01-14T13:17:20.9993145Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9993311Z         iteration=0,
2025-01-14T13:17:20.9993439Z     ):
2025-01-14T13:17:20.9993675Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9993843Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9993960Z         else:
2025-01-14T13:17:20.9994106Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9994217Z     
2025-01-14T13:17:20.9994436Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9994541Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9994613Z         )
2025-01-14T13:17:20.9994679Z     
2025-01-14T13:17:20.9994823Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9994943Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9995114Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9995185Z         else:
2025-01-14T13:17:20.9995274Z             continuum_state = None
2025-01-14T13:17:20.9995380Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9995506Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9995604Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9995713Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9995825Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9995919Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9996016Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9996088Z         ).to_numba(
2025-01-14T13:17:20.9996172Z             macro_atom_state,
2025-01-14T13:17:20.9996262Z             self.line_interaction_type,
2025-01-14T13:17:20.9996334Z         )
2025-01-14T13:17:20.9996435Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9996715Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9996783Z         ]
2025-01-14T13:17:20.9997102Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9997113Z 
2025-01-14T13:17:20.9997274Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9997510Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] _
2025-01-14T13:17:20.9997709Z 
2025-01-14T13:17:20.9998043Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9998658Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9999037Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9999042Z 
2025-01-14T13:17:20.9999137Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9999258Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9999471Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9999538Z     
2025-01-14T13:17:20.9999719Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9999871Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9999962Z             self.name += "_interp"
2025-01-14T13:17:21.0000028Z     
2025-01-14T13:17:21.0000142Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0000233Z >       simulation.run_convergence()
2025-01-14T13:17:21.0000238Z 
2025-01-14T13:17:21.0000377Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0000491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0000615Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0000765Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0000862Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0001027Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0001138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0001148Z 
2025-01-14T13:17:21.0001418Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:21.0001745Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:21.0001973Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:21.0002245Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:21.0002411Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:21.0002557Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0002562Z 
2025-01-14T13:17:21.0002647Z     def initialize_transport_state(
2025-01-14T13:17:21.0002728Z         self,
2025-01-14T13:17:21.0002807Z         simulation_state,
2025-01-14T13:17:21.0002885Z         opacity_state,
2025-01-14T13:17:21.0002957Z         macro_atom_state,
2025-01-14T13:17:21.0003034Z         plasma,
2025-01-14T13:17:21.0003105Z         no_of_packets,
2025-01-14T13:17:21.0003192Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0003263Z         iteration=0,
2025-01-14T13:17:21.0003338Z     ):
2025-01-14T13:17:21.0003465Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0003567Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0003635Z         else:
2025-01-14T13:17:21.0003716Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0003787Z     
2025-01-14T13:17:21.0003920Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0004023Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0004089Z         )
2025-01-14T13:17:21.0004158Z     
2025-01-14T13:17:21.0004290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0004411Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0004565Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0004779Z         else:
2025-01-14T13:17:21.0004862Z             continuum_state = None
2025-01-14T13:17:21.0004969Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0005076Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0005175Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0005281Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0005386Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0005485Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0005575Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0005652Z         ).to_numba(
2025-01-14T13:17:21.0005731Z             macro_atom_state,
2025-01-14T13:17:21.0005931Z             self.line_interaction_type,
2025-01-14T13:17:21.0005998Z         )
2025-01-14T13:17:21.0006106Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0006375Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0006457Z         ]
2025-01-14T13:17:21.0006770Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0006775Z 
2025-01-14T13:17:21.0006931Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0007205Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] _
2025-01-14T13:17:21.0007215Z 
2025-01-14T13:17:21.0007532Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0008143Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0008516Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0008526Z 
2025-01-14T13:17:21.0008619Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0008736Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0008834Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0008905Z     
2025-01-14T13:17:21.0009069Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0009216Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0009297Z             self.name += "_interp"
2025-01-14T13:17:21.0009367Z     
2025-01-14T13:17:21.0009476Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0009576Z >       simulation.run_convergence()
2025-01-14T13:17:21.0009581Z 
2025-01-14T13:17:21.0009714Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0009834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0009958Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0010106Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0010202Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0010363Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0010480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0010485Z 
2025-01-14T13:17:21.0010748Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:21.0010956Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:21.0011176Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:21.0011462Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:21.0011911Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:21.0012061Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0012067Z 
2025-01-14T13:17:21.0012155Z     def initialize_transport_state(
2025-01-14T13:17:21.0012230Z         self,
2025-01-14T13:17:21.0012314Z         simulation_state,
2025-01-14T13:17:21.0012389Z         opacity_state,
2025-01-14T13:17:21.0012472Z         macro_atom_state,
2025-01-14T13:17:21.0012542Z         plasma,
2025-01-14T13:17:21.0012620Z         no_of_packets,
2025-01-14T13:17:21.0012703Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0012782Z         iteration=0,
2025-01-14T13:17:21.0012848Z     ):
2025-01-14T13:17:21.0012981Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0013201Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0013274Z         else:
2025-01-14T13:17:21.0013355Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0013424Z     
2025-01-14T13:17:21.0013567Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0013669Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0013735Z         )
2025-01-14T13:17:21.0013808Z     
2025-01-14T13:17:21.0013933Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0014054Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0014215Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0014284Z         else:
2025-01-14T13:17:21.0014371Z             continuum_state = None
2025-01-14T13:17:21.0014470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0014582Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0014672Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0014786Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0014882Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0014987Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0015075Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0015149Z         ).to_numba(
2025-01-14T13:17:21.0015226Z             macro_atom_state,
2025-01-14T13:17:21.0015319Z             self.line_interaction_type,
2025-01-14T13:17:21.0015392Z         )
2025-01-14T13:17:21.0015492Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0020041Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0020121Z         ]
2025-01-14T13:17:21.0020433Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0020438Z 
2025-01-14T13:17:21.0020609Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0020844Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-macroatom] _
2025-01-14T13:17:21.0020849Z 
2025-01-14T13:17:21.0021184Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0021984Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0022370Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0022375Z 
2025-01-14T13:17:21.0022474Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0022600Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0022775Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0022899Z     
2025-01-14T13:17:21.0023181Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0023413Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0023761Z             self.name += "_interp"
2025-01-14T13:17:21.0023883Z     
2025-01-14T13:17:21.0024004Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0024094Z >       simulation.run_convergence()
2025-01-14T13:17:21.0024108Z 
2025-01-14T13:17:21.0024238Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0024357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0024472Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0024618Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0024712Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0024872Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0025107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0025112Z 
2025-01-14T13:17:21.0025381Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0025594Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0025824Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0026105Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0026272Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0026422Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0026427Z 
2025-01-14T13:17:21.0026516Z     def initialize_transport_state(
2025-01-14T13:17:21.0026594Z         self,
2025-01-14T13:17:21.0026675Z         simulation_state,
2025-01-14T13:17:21.0026766Z         opacity_state,
2025-01-14T13:17:21.0026843Z         macro_atom_state,
2025-01-14T13:17:21.0026919Z         plasma,
2025-01-14T13:17:21.0026992Z         no_of_packets,
2025-01-14T13:17:21.0027087Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0027160Z         iteration=0,
2025-01-14T13:17:21.0027236Z     ):
2025-01-14T13:17:21.0027366Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0027471Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0027552Z         else:
2025-01-14T13:17:21.0027630Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0027705Z     
2025-01-14T13:17:21.0027845Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0027947Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0028014Z         )
2025-01-14T13:17:21.0028083Z     
2025-01-14T13:17:21.0028215Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0028335Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0028493Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0028566Z         else:
2025-01-14T13:17:21.0028653Z             continuum_state = None
2025-01-14T13:17:21.0028762Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0028868Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0028967Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0029081Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0029181Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0029280Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0029370Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0029511Z         ).to_numba(
2025-01-14T13:17:21.0029644Z             macro_atom_state,
2025-01-14T13:17:21.0029795Z             self.line_interaction_type,
2025-01-14T13:17:21.0029909Z         )
2025-01-14T13:17:21.0030092Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0030565Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0030739Z         ]
2025-01-14T13:17:21.0031044Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0031056Z 
2025-01-14T13:17:21.0031206Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0031366Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0038278Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'macroatom', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0038791Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0038864Z 	
2025-01-14T13:17:21.0039429Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0039610Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0040031Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0040202Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0040671Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0040921Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0041350Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0041772Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0041991Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0042163Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0042238Z 	
2025-01-14T13:17:21.0042389Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0042555Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0042707Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0043137Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0043997Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0044504Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0045007Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0045230Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0045343Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0045429Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0045692Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] _
2025-01-14T13:17:21.0045698Z 
2025-01-14T13:17:21.0046015Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0046627Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0047008Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0047013Z 
2025-01-14T13:17:21.0047102Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0047226Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0047321Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0047396Z     
2025-01-14T13:17:21.0047561Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0047710Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0047798Z             self.name += "_interp"
2025-01-14T13:17:21.0047875Z     
2025-01-14T13:17:21.0047995Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0048087Z >       simulation.run_convergence()
2025-01-14T13:17:21.0048102Z 
2025-01-14T13:17:21.0048234Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0048351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0048471Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0048615Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0048709Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0048868Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0048975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0048979Z 
2025-01-14T13:17:21.0049243Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0049449Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0049676Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0050406Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0050685Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0050927Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0050933Z 
2025-01-14T13:17:21.0051025Z     def initialize_transport_state(
2025-01-14T13:17:21.0051100Z         self,
2025-01-14T13:17:21.0051179Z         simulation_state,
2025-01-14T13:17:21.0051259Z         opacity_state,
2025-01-14T13:17:21.0051331Z         macro_atom_state,
2025-01-14T13:17:21.0051406Z         plasma,
2025-01-14T13:17:21.0051478Z         no_of_packets,
2025-01-14T13:17:21.0051764Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0052071Z         iteration=0,
2025-01-14T13:17:21.0052148Z     ):
2025-01-14T13:17:21.0052284Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0052379Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0052463Z         else:
2025-01-14T13:17:21.0052540Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0052612Z     
2025-01-14T13:17:21.0052751Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0052853Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0052921Z         )
2025-01-14T13:17:21.0052992Z     
2025-01-14T13:17:21.0053120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0053238Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0053392Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0053465Z         else:
2025-01-14T13:17:21.0053546Z             continuum_state = None
2025-01-14T13:17:21.0053657Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0053766Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0053862Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0053983Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0054083Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0054181Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0054272Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0054348Z         ).to_numba(
2025-01-14T13:17:21.0054425Z             macro_atom_state,
2025-01-14T13:17:21.0054517Z             self.line_interaction_type,
2025-01-14T13:17:21.0054584Z         )
2025-01-14T13:17:21.0054690Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0054961Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0055032Z         ]
2025-01-14T13:17:21.0055337Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0055347Z 
2025-01-14T13:17:21.0055499Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0055733Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _
2025-01-14T13:17:21.0055739Z 
2025-01-14T13:17:21.0056058Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0056687Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0057329Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0057343Z 
2025-01-14T13:17:21.0057499Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0057695Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0057849Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0058091Z     
2025-01-14T13:17:21.0058273Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0058418Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0058498Z             self.name += "_interp"
2025-01-14T13:17:21.0058572Z     
2025-01-14T13:17:21.0058676Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0058772Z >       simulation.run_convergence()
2025-01-14T13:17:21.0058776Z 
2025-01-14T13:17:21.0058903Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0059017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0059134Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0059278Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0059465Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0059617Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0059734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0059738Z 
2025-01-14T13:17:21.0060000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0060203Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0060423Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0060700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0060859Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0061040Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0061050Z 
2025-01-14T13:17:21.0061141Z     def initialize_transport_state(
2025-01-14T13:17:21.0061209Z         self,
2025-01-14T13:17:21.0061290Z         simulation_state,
2025-01-14T13:17:21.0061370Z         opacity_state,
2025-01-14T13:17:21.0061451Z         macro_atom_state,
2025-01-14T13:17:21.0061520Z         plasma,
2025-01-14T13:17:21.0061718Z         no_of_packets,
2025-01-14T13:17:21.0061802Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0061879Z         iteration=0,
2025-01-14T13:17:21.0061945Z     ):
2025-01-14T13:17:21.0062073Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0062170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0062243Z         else:
2025-01-14T13:17:21.0062319Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0062389Z     
2025-01-14T13:17:21.0062522Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0062625Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0062700Z         )
2025-01-14T13:17:21.0062765Z     
2025-01-14T13:17:21.0062896Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0063007Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0063168Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0063236Z         else:
2025-01-14T13:17:21.0063323Z             continuum_state = None
2025-01-14T13:17:21.0063421Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0063533Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0063624Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0063732Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0063894Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0064071Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0064232Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0064350Z         ).to_numba(
2025-01-14T13:17:21.0064493Z             macro_atom_state,
2025-01-14T13:17:21.0064637Z             self.line_interaction_type,
2025-01-14T13:17:21.0064754Z         )
2025-01-14T13:17:21.0064926Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0065350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0065420Z         ]
2025-01-14T13:17:21.0065726Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0065732Z 
2025-01-14T13:17:21.0065879Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0066145Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] _
2025-01-14T13:17:21.0066149Z 
2025-01-14T13:17:21.0066469Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0067170Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0067546Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0067551Z 
2025-01-14T13:17:21.0067638Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0067757Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0067850Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0067922Z     
2025-01-14T13:17:21.0068082Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0068224Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0068311Z             self.name += "_interp"
2025-01-14T13:17:21.0068376Z     
2025-01-14T13:17:21.0068485Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0068578Z >       simulation.run_convergence()
2025-01-14T13:17:21.0068582Z 
2025-01-14T13:17:21.0068715Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0068833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0068950Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0069089Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0069186Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0069336Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0069445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0069449Z 
2025-01-14T13:17:21.0069715Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0069917Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0070149Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0070444Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0070740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0070978Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0070985Z 
2025-01-14T13:17:21.0071136Z     def initialize_transport_state(
2025-01-14T13:17:21.0071250Z         self,
2025-01-14T13:17:21.0071384Z         simulation_state,
2025-01-14T13:17:21.0071520Z         opacity_state,
2025-01-14T13:17:21.0071754Z         macro_atom_state,
2025-01-14T13:17:21.0071831Z         plasma,
2025-01-14T13:17:21.0071905Z         no_of_packets,
2025-01-14T13:17:21.0071991Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0072065Z         iteration=0,
2025-01-14T13:17:21.0072136Z     ):
2025-01-14T13:17:21.0072268Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0072369Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0072437Z         else:
2025-01-14T13:17:21.0072523Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0072723Z     
2025-01-14T13:17:21.0072865Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0072960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0073035Z         )
2025-01-14T13:17:21.0073101Z     
2025-01-14T13:17:21.0073232Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0073350Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0073508Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0073581Z         else:
2025-01-14T13:17:21.0073663Z             continuum_state = None
2025-01-14T13:17:21.0073769Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0073876Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0074085Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0074192Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0074302Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0074394Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0074489Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0074559Z         ).to_numba(
2025-01-14T13:17:21.0074641Z             macro_atom_state,
2025-01-14T13:17:21.0074729Z             self.line_interaction_type,
2025-01-14T13:17:21.0074800Z         )
2025-01-14T13:17:21.0074905Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0075176Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0075249Z         ]
2025-01-14T13:17:21.0075548Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0075558Z 
2025-01-14T13:17:21.0075711Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0075939Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-macroatom] _
2025-01-14T13:17:21.0075948Z 
2025-01-14T13:17:21.0076267Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0076864Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0077237Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0077242Z 
2025-01-14T13:17:21.0077403Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0077598Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0077764Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0077876Z     
2025-01-14T13:17:21.0078151Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0078393Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0078493Z             self.name += "_interp"
2025-01-14T13:17:21.0078560Z     
2025-01-14T13:17:21.0078672Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0078765Z >       simulation.run_convergence()
2025-01-14T13:17:21.0078770Z 
2025-01-14T13:17:21.0078898Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0079009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0079124Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0079266Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0079359Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0079528Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0079633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0079736Z 
2025-01-14T13:17:21.0080010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0080218Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0080439Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0080720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0080882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0081025Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0081030Z 
2025-01-14T13:17:21.0081116Z     def initialize_transport_state(
2025-01-14T13:17:21.0081290Z         self,
2025-01-14T13:17:21.0081370Z         simulation_state,
2025-01-14T13:17:21.0081449Z         opacity_state,
2025-01-14T13:17:21.0081526Z         macro_atom_state,
2025-01-14T13:17:21.0081714Z         plasma,
2025-01-14T13:17:21.0081788Z         no_of_packets,
2025-01-14T13:17:21.0081874Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0081950Z         iteration=0,
2025-01-14T13:17:21.0082015Z     ):
2025-01-14T13:17:21.0082147Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0082243Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0082319Z         else:
2025-01-14T13:17:21.0082399Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0082470Z     
2025-01-14T13:17:21.0082610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0082712Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0082778Z         )
2025-01-14T13:17:21.0082848Z     
2025-01-14T13:17:21.0082974Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0083099Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0083251Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0083330Z         else:
2025-01-14T13:17:21.0083411Z             continuum_state = None
2025-01-14T13:17:21.0083515Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0083628Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0083722Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0083832Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0083932Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0084029Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0084189Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0084319Z         ).to_numba(
2025-01-14T13:17:21.0084451Z             macro_atom_state,
2025-01-14T13:17:21.0084610Z             self.line_interaction_type,
2025-01-14T13:17:21.0084722Z         )
2025-01-14T13:17:21.0084898Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0085314Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0085394Z         ]
2025-01-14T13:17:21.0085696Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0085705Z 
2025-01-14T13:17:21.0085850Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0086010Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0086265Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0086338Z 	
2025-01-14T13:17:21.0086889Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0087070Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0087485Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0087794Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0088271Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0088509Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0088946Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0089122Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0089331Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0089492Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0089676Z 	
2025-01-14T13:17:21.0089830Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0089983Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0090138Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0090476Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0091045Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0091923Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0092432Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0092650Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0092761Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0092850Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0093108Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] _
2025-01-14T13:17:21.0093113Z 
2025-01-14T13:17:21.0093433Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0094028Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0094397Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0094406Z 
2025-01-14T13:17:21.0094495Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0094615Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0094707Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0094788Z     
2025-01-14T13:17:21.0094960Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0095098Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0095182Z             self.name += "_interp"
2025-01-14T13:17:21.0095247Z     
2025-01-14T13:17:21.0095356Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0095446Z >       simulation.run_convergence()
2025-01-14T13:17:21.0095452Z 
2025-01-14T13:17:21.0095583Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0095690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0095809Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0095952Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0096055Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0096208Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0096461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0096466Z 
2025-01-14T13:17:21.0096733Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0096938Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0097162Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0097435Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0097605Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0097745Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0097856Z 
2025-01-14T13:17:21.0097953Z     def initialize_transport_state(
2025-01-14T13:17:21.0098026Z         self,
2025-01-14T13:17:21.0098103Z         simulation_state,
2025-01-14T13:17:21.0098188Z         opacity_state,
2025-01-14T13:17:21.0098263Z         macro_atom_state,
2025-01-14T13:17:21.0098339Z         plasma,
2025-01-14T13:17:21.0098413Z         no_of_packets,
2025-01-14T13:17:21.0098500Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0098572Z         iteration=0,
2025-01-14T13:17:21.0098655Z     ):
2025-01-14T13:17:21.0098781Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0098881Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0098949Z         else:
2025-01-14T13:17:21.0099031Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0099096Z     
2025-01-14T13:17:21.0099236Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0099331Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0099407Z         )
2025-01-14T13:17:21.0099472Z     
2025-01-14T13:17:21.0099603Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0099723Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0099879Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0099951Z         else:
2025-01-14T13:17:21.0100036Z             continuum_state = None
2025-01-14T13:17:21.0100142Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0100248Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0100344Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0100450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0100556Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0100648Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0100742Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0100817Z         ).to_numba(
2025-01-14T13:17:21.0100901Z             macro_atom_state,
2025-01-14T13:17:21.0100989Z             self.line_interaction_type,
2025-01-14T13:17:21.0101061Z         )
2025-01-14T13:17:21.0101172Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0101446Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0101518Z         ]
2025-01-14T13:17:21.0102111Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0102124Z 
2025-01-14T13:17:21.0102288Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0102510Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _
2025-01-14T13:17:21.0102515Z 
2025-01-14T13:17:21.0102829Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0103427Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0103958Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0103963Z 
2025-01-14T13:17:21.0104053Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0104168Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0104265Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0104330Z     
2025-01-14T13:17:21.0104494Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0104628Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0104715Z             self.name += "_interp"
2025-01-14T13:17:21.0104781Z     
2025-01-14T13:17:21.0104997Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0105088Z >       simulation.run_convergence()
2025-01-14T13:17:21.0105093Z 
2025-01-14T13:17:21.0105217Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0105335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0105451Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0105595Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0105688Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0105846Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0105951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0105955Z 
2025-01-14T13:17:21.0106220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0106426Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0106654Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0106932Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0107097Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0107239Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0107244Z 
2025-01-14T13:17:21.0107331Z     def initialize_transport_state(
2025-01-14T13:17:21.0107405Z         self,
2025-01-14T13:17:21.0107482Z         simulation_state,
2025-01-14T13:17:21.0107564Z         opacity_state,
2025-01-14T13:17:21.0107638Z         macro_atom_state,
2025-01-14T13:17:21.0107713Z         plasma,
2025-01-14T13:17:21.0107785Z         no_of_packets,
2025-01-14T13:17:21.0107871Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0107949Z         iteration=0,
2025-01-14T13:17:21.0108016Z     ):
2025-01-14T13:17:21.0108149Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0108241Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0108314Z         else:
2025-01-14T13:17:21.0108397Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0108467Z     
2025-01-14T13:17:21.0108601Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0108700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0108767Z         )
2025-01-14T13:17:21.0108838Z     
2025-01-14T13:17:21.0108961Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0109080Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0109229Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0109303Z         else:
2025-01-14T13:17:21.0109386Z             continuum_state = None
2025-01-14T13:17:21.0109488Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0109607Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0109698Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0109808Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0110017Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0110119Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0110209Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0110284Z         ).to_numba(
2025-01-14T13:17:21.0110361Z             macro_atom_state,
2025-01-14T13:17:21.0110451Z             self.line_interaction_type,
2025-01-14T13:17:21.0110517Z         )
2025-01-14T13:17:21.0110620Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0110888Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0110961Z         ]
2025-01-14T13:17:21.0111261Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0111350Z 
2025-01-14T13:17:21.0111497Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0111964Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] _
2025-01-14T13:17:21.0111979Z 
2025-01-14T13:17:21.0112295Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0112891Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0113251Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0113261Z 
2025-01-14T13:17:21.0113345Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0113462Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0113557Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0113627Z     
2025-01-14T13:17:21.0113785Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0113928Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0114005Z             self.name += "_interp"
2025-01-14T13:17:21.0114076Z     
2025-01-14T13:17:21.0114178Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0114269Z >       simulation.run_convergence()
2025-01-14T13:17:21.0114274Z 
2025-01-14T13:17:21.0114399Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0114515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0114631Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0114768Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0114867Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0115023Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0115132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0115142Z 
2025-01-14T13:17:21.0115399Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0115601Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0115820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0116097Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0116261Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0116398Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0116403Z 
2025-01-14T13:17:21.0116494Z     def initialize_transport_state(
2025-01-14T13:17:21.0116567Z         self,
2025-01-14T13:17:21.0116648Z         simulation_state,
2025-01-14T13:17:21.0116722Z         opacity_state,
2025-01-14T13:17:21.0116801Z         macro_atom_state,
2025-01-14T13:17:21.0116997Z         plasma,
2025-01-14T13:17:21.0117077Z         no_of_packets,
2025-01-14T13:17:21.0117161Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0117238Z         iteration=0,
2025-01-14T13:17:21.0117305Z     ):
2025-01-14T13:17:21.0117430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0117525Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0117601Z         else:
2025-01-14T13:17:21.0117683Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0117748Z     
2025-01-14T13:17:21.0117885Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0117977Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0118048Z         )
2025-01-14T13:17:21.0118113Z     
2025-01-14T13:17:21.0118359Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0118470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0118629Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0118702Z         else:
2025-01-14T13:17:21.0118789Z             continuum_state = None
2025-01-14T13:17:21.0118887Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0118998Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0119086Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0119194Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0119292Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0119387Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0119481Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0119551Z         ).to_numba(
2025-01-14T13:17:21.0119634Z             macro_atom_state,
2025-01-14T13:17:21.0119726Z             self.line_interaction_type,
2025-01-14T13:17:21.0119798Z         )
2025-01-14T13:17:21.0119896Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0120178Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0120246Z         ]
2025-01-14T13:17:21.0120548Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0120553Z 
2025-01-14T13:17:21.0120696Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0120933Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-downbranch] _
2025-01-14T13:17:21.0120938Z 
2025-01-14T13:17:21.0121254Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0121951Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0122324Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0122335Z 
2025-01-14T13:17:21.0122419Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0122541Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0122630Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0122700Z     
2025-01-14T13:17:21.0122864Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0122997Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0123080Z             self.name += "_interp"
2025-01-14T13:17:21.0123145Z     
2025-01-14T13:17:21.0123250Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0123336Z >       simulation.run_convergence()
2025-01-14T13:17:21.0123346Z 
2025-01-14T13:17:21.0123475Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0123584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0123826Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0123962Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0124060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0124210Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0124320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0124324Z 
2025-01-14T13:17:21.0124589Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0124789Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0125011Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0125531Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0125825Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0126061Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0126068Z 
2025-01-14T13:17:21.0126220Z     def initialize_transport_state(
2025-01-14T13:17:21.0126341Z         self,
2025-01-14T13:17:21.0126463Z         simulation_state,
2025-01-14T13:17:21.0126545Z         opacity_state,
2025-01-14T13:17:21.0126621Z         macro_atom_state,
2025-01-14T13:17:21.0126697Z         plasma,
2025-01-14T13:17:21.0126769Z         no_of_packets,
2025-01-14T13:17:21.0126857Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0126930Z         iteration=0,
2025-01-14T13:17:21.0127000Z     ):
2025-01-14T13:17:21.0127121Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0127224Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0127292Z         else:
2025-01-14T13:17:21.0127376Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0127440Z     
2025-01-14T13:17:21.0127586Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0127679Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0127750Z         )
2025-01-14T13:17:21.0127815Z     
2025-01-14T13:17:21.0127945Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0128060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0128211Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0128285Z         else:
2025-01-14T13:17:21.0128367Z             continuum_state = None
2025-01-14T13:17:21.0128471Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0128577Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0128671Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0128779Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0128881Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0128976Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0129071Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0129140Z         ).to_numba(
2025-01-14T13:17:21.0129221Z             macro_atom_state,
2025-01-14T13:17:21.0129316Z             self.line_interaction_type,
2025-01-14T13:17:21.0129380Z         )
2025-01-14T13:17:21.0129487Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0129753Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0129828Z         ]
2025-01-14T13:17:21.0130125Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0130129Z 
2025-01-14T13:17:21.0130284Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0130435Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0137412Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0137957Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0138029Z 	
2025-01-14T13:17:21.0138586Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0138771Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0139538Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0139836Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0140359Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0140603Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0141035Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0141218Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0141425Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0141704Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0141773Z 	
2025-01-14T13:17:21.0141931Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0142245Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0142401Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0142741Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0143114Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0143537Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0144031Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0144363Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0144474Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0144564Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0144821Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] _
2025-01-14T13:17:21.0144832Z 
2025-01-14T13:17:21.0145148Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0145973Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0146614Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0146629Z 
2025-01-14T13:17:21.0146729Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0146848Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0146954Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0147021Z     
2025-01-14T13:17:21.0147188Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0147332Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0147413Z             self.name += "_interp"
2025-01-14T13:17:21.0147484Z     
2025-01-14T13:17:21.0147590Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0147684Z >       simulation.run_convergence()
2025-01-14T13:17:21.0147689Z 
2025-01-14T13:17:21.0147820Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0147938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0148059Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0148205Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0148298Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0148462Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0148573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0148578Z 
2025-01-14T13:17:21.0148840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0149047Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0149267Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0149547Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0149707Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0149857Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0149862Z 
2025-01-14T13:17:21.0149948Z     def initialize_transport_state(
2025-01-14T13:17:21.0150125Z         self,
2025-01-14T13:17:21.0150209Z         simulation_state,
2025-01-14T13:17:21.0150282Z         opacity_state,
2025-01-14T13:17:21.0150364Z         macro_atom_state,
2025-01-14T13:17:21.0150433Z         plasma,
2025-01-14T13:17:21.0150511Z         no_of_packets,
2025-01-14T13:17:21.0150592Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0150670Z         iteration=0,
2025-01-14T13:17:21.0150736Z     ):
2025-01-14T13:17:21.0150868Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0150965Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0151038Z         else:
2025-01-14T13:17:21.0151115Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0151185Z     
2025-01-14T13:17:21.0151320Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0151503Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0151749Z         )
2025-01-14T13:17:21.0151860Z     
2025-01-14T13:17:21.0152002Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0152131Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0152397Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0152515Z         else:
2025-01-14T13:17:21.0152659Z             continuum_state = None
2025-01-14T13:17:21.0152828Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0153013Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0153162Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0153334Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0153438Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0153538Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0153634Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0153710Z         ).to_numba(
2025-01-14T13:17:21.0153788Z             macro_atom_state,
2025-01-14T13:17:21.0153884Z             self.line_interaction_type,
2025-01-14T13:17:21.0153969Z         )
2025-01-14T13:17:21.0154071Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0154347Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0154417Z         ]
2025-01-14T13:17:21.0154729Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0154734Z 
2025-01-14T13:17:21.0154882Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0155113Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] _
2025-01-14T13:17:21.0155118Z 
2025-01-14T13:17:21.0155432Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0156033Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0156407Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0156412Z 
2025-01-14T13:17:21.0156498Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0156618Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0156707Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0156778Z     
2025-01-14T13:17:21.0156936Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0157078Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0157165Z             self.name += "_interp"
2025-01-14T13:17:21.0157236Z     
2025-01-14T13:17:21.0157343Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0157430Z >       simulation.run_convergence()
2025-01-14T13:17:21.0157568Z 
2025-01-14T13:17:21.0157706Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0157815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0157938Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0158079Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0158177Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0158333Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0158447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0158452Z 
2025-01-14T13:17:21.0158715Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0159126Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0159522Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0160011Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0160192Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0160332Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0160337Z 
2025-01-14T13:17:21.0160430Z     def initialize_transport_state(
2025-01-14T13:17:21.0160498Z         self,
2025-01-14T13:17:21.0160582Z         simulation_state,
2025-01-14T13:17:21.0160656Z         opacity_state,
2025-01-14T13:17:21.0160739Z         macro_atom_state,
2025-01-14T13:17:21.0160810Z         plasma,
2025-01-14T13:17:21.0160888Z         no_of_packets,
2025-01-14T13:17:21.0160974Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0161088Z         iteration=0,
2025-01-14T13:17:21.0161160Z     ):
2025-01-14T13:17:21.0161289Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0161391Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0161464Z         else:
2025-01-14T13:17:21.0161646Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0161713Z     
2025-01-14T13:17:21.0161854Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0161949Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0162021Z         )
2025-01-14T13:17:21.0162086Z     
2025-01-14T13:17:21.0162219Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0162331Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0162487Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0162555Z         else:
2025-01-14T13:17:21.0162642Z             continuum_state = None
2025-01-14T13:17:21.0162754Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0162860Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0162955Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0163063Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0163175Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0163269Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0163361Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0163432Z         ).to_numba(
2025-01-14T13:17:21.0163514Z             macro_atom_state,
2025-01-14T13:17:21.0163603Z             self.line_interaction_type,
2025-01-14T13:17:21.0163674Z         )
2025-01-14T13:17:21.0163776Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0164051Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0164118Z         ]
2025-01-14T13:17:21.0164441Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0164446Z 
2025-01-14T13:17:21.0164601Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0165007Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] _
2025-01-14T13:17:21.0165013Z 
2025-01-14T13:17:21.0165332Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0166177Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0166810Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0166816Z 
2025-01-14T13:17:21.0167058Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0167177Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0167277Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0167348Z     
2025-01-14T13:17:21.0167511Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0167649Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0167733Z             self.name += "_interp"
2025-01-14T13:17:21.0167801Z     
2025-01-14T13:17:21.0167910Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0167998Z >       simulation.run_convergence()
2025-01-14T13:17:21.0168002Z 
2025-01-14T13:17:21.0168135Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0168249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0168368Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0168512Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0168613Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0168771Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0168883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0168888Z 
2025-01-14T13:17:21.0169155Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0169357Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0169585Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0169856Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0170020Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0170167Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0170177Z 
2025-01-14T13:17:21.0170264Z     def initialize_transport_state(
2025-01-14T13:17:21.0170337Z         self,
2025-01-14T13:17:21.0170415Z         simulation_state,
2025-01-14T13:17:21.0170499Z         opacity_state,
2025-01-14T13:17:21.0170574Z         macro_atom_state,
2025-01-14T13:17:21.0170649Z         plasma,
2025-01-14T13:17:21.0170722Z         no_of_packets,
2025-01-14T13:17:21.0170809Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0170881Z         iteration=0,
2025-01-14T13:17:21.0170955Z     ):
2025-01-14T13:17:21.0171078Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0171179Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0171247Z         else:
2025-01-14T13:17:21.0171328Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0171398Z     
2025-01-14T13:17:21.0171533Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0171834Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0171913Z         )
2025-01-14T13:17:21.0171983Z     
2025-01-14T13:17:21.0172111Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0172228Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0172549Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0172691Z         else:
2025-01-14T13:17:21.0172831Z             continuum_state = None
2025-01-14T13:17:21.0173006Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0173187Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0173346Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0173521Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0173698Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0173802Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0173893Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0174099Z         ).to_numba(
2025-01-14T13:17:21.0174179Z             macro_atom_state,
2025-01-14T13:17:21.0174270Z             self.line_interaction_type,
2025-01-14T13:17:21.0174337Z         )
2025-01-14T13:17:21.0174447Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0174716Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0174786Z         ]
2025-01-14T13:17:21.0175088Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0175093Z 
2025-01-14T13:17:21.0175244Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0175417Z ____________ ERROR at setup of test_hdf_transport_state[output_nu] _____________
2025-01-14T13:17:21.0175422Z 
2025-01-14T13:17:21.0176049Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0176409Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0176419Z 
2025-01-14T13:17:21.0176508Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0176713Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0176810Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0176901Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0177076Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0177142Z         )
2025-01-14T13:17:21.0177232Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0177306Z >       sim.run_final()
2025-01-14T13:17:21.0177311Z 
2025-01-14T13:17:21.0177395Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0177501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0177608Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0177748Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0177850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0178000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0178109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0178114Z 
2025-01-14T13:17:21.0178378Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0178577Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0178800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0179070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0179281Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0179525Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0179650Z 
2025-01-14T13:17:21.0179804Z     def initialize_transport_state(
2025-01-14T13:17:21.0179920Z         self,
2025-01-14T13:17:21.0180058Z         simulation_state,
2025-01-14T13:17:21.0180183Z         opacity_state,
2025-01-14T13:17:21.0180323Z         macro_atom_state,
2025-01-14T13:17:21.0180417Z         plasma,
2025-01-14T13:17:21.0180493Z         no_of_packets,
2025-01-14T13:17:21.0180581Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0180652Z         iteration=0,
2025-01-14T13:17:21.0180727Z     ):
2025-01-14T13:17:21.0180850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0180948Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0181016Z         else:
2025-01-14T13:17:21.0181099Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0181252Z     
2025-01-14T13:17:21.0181391Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0181484Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0181668Z         )
2025-01-14T13:17:21.0181741Z     
2025-01-14T13:17:21.0181872Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0181985Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0182141Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0182214Z         else:
2025-01-14T13:17:21.0182296Z             continuum_state = None
2025-01-14T13:17:21.0182399Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0182506Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0182603Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0182708Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0182810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0182907Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0183000Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0183071Z         ).to_numba(
2025-01-14T13:17:21.0183159Z             macro_atom_state,
2025-01-14T13:17:21.0183245Z             self.line_interaction_type,
2025-01-14T13:17:21.0183317Z         )
2025-01-14T13:17:21.0183416Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0183694Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0183765Z         ]
2025-01-14T13:17:21.0184061Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0184066Z 
2025-01-14T13:17:21.0184216Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0184380Z __________ ERROR at setup of test_hdf_transport_state[output_energy] ___________
2025-01-14T13:17:21.0184390Z 
2025-01-14T13:17:21.0185022Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0185376Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0185386Z 
2025-01-14T13:17:21.0185474Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0185677Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0185774Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0185864Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0186039Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0186112Z         )
2025-01-14T13:17:21.0186276Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0186416Z >       sim.run_final()
2025-01-14T13:17:21.0186424Z 
2025-01-14T13:17:21.0186566Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0186753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0187071Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0187307Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0187411Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0187564Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0187673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0187678Z 
2025-01-14T13:17:21.0187937Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0188142Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0188361Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0188758Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0188923Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0189064Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0189069Z 
2025-01-14T13:17:21.0189160Z     def initialize_transport_state(
2025-01-14T13:17:21.0189228Z         self,
2025-01-14T13:17:21.0189310Z         simulation_state,
2025-01-14T13:17:21.0189384Z         opacity_state,
2025-01-14T13:17:21.0189464Z         macro_atom_state,
2025-01-14T13:17:21.0189533Z         plasma,
2025-01-14T13:17:21.0189609Z         no_of_packets,
2025-01-14T13:17:21.0189690Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0189766Z         iteration=0,
2025-01-14T13:17:21.0189831Z     ):
2025-01-14T13:17:21.0189960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0190058Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0190133Z         else:
2025-01-14T13:17:21.0190211Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0190281Z     
2025-01-14T13:17:21.0190424Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0190529Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0190602Z         )
2025-01-14T13:17:21.0190669Z     
2025-01-14T13:17:21.0190801Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0190911Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0191066Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0191134Z         else:
2025-01-14T13:17:21.0191223Z             continuum_state = None
2025-01-14T13:17:21.0191322Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0191433Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0191521Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0191855Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0191961Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0192067Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0192162Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0192234Z         ).to_numba(
2025-01-14T13:17:21.0192316Z             macro_atom_state,
2025-01-14T13:17:21.0192401Z             self.line_interaction_type,
2025-01-14T13:17:21.0192471Z         )
2025-01-14T13:17:21.0192569Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0192843Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0192910Z         ]
2025-01-14T13:17:21.0193456Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0193466Z 
2025-01-14T13:17:21.0193724Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0194022Z _________ ERROR at setup of test_hdf_transport_state[nu_bar_estimator] _________
2025-01-14T13:17:21.0194031Z 
2025-01-14T13:17:21.0194835Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0195188Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0195193Z 
2025-01-14T13:17:21.0195287Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0195486Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0195587Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0195673Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0195980Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0196051Z         )
2025-01-14T13:17:21.0196135Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0196220Z >       sim.run_final()
2025-01-14T13:17:21.0196225Z 
2025-01-14T13:17:21.0196305Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0196415Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0196510Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0196652Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0196745Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0196911Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0197017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0197021Z 
2025-01-14T13:17:21.0197287Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0197499Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0197721Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0197999Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0198157Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0198297Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0198302Z 
2025-01-14T13:17:21.0198387Z     def initialize_transport_state(
2025-01-14T13:17:21.0198460Z         self,
2025-01-14T13:17:21.0198535Z         simulation_state,
2025-01-14T13:17:21.0198613Z         opacity_state,
2025-01-14T13:17:21.0198687Z         macro_atom_state,
2025-01-14T13:17:21.0198763Z         plasma,
2025-01-14T13:17:21.0198835Z         no_of_packets,
2025-01-14T13:17:21.0198921Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0199002Z         iteration=0,
2025-01-14T13:17:21.0199068Z     ):
2025-01-14T13:17:21.0199194Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0199287Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0199366Z         else:
2025-01-14T13:17:21.0199443Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0199514Z     
2025-01-14T13:17:21.0199724Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0199895Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0200011Z         )
2025-01-14T13:17:21.0200127Z     
2025-01-14T13:17:21.0200341Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0200535Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0200766Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0200842Z         else:
2025-01-14T13:17:21.0200924Z             continuum_state = None
2025-01-14T13:17:21.0201042Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0201162Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0201257Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0201484Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0201705Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0201812Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0201903Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0201988Z         ).to_numba(
2025-01-14T13:17:21.0202068Z             macro_atom_state,
2025-01-14T13:17:21.0202164Z             self.line_interaction_type,
2025-01-14T13:17:21.0202232Z         )
2025-01-14T13:17:21.0202338Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0202610Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0202685Z         ]
2025-01-14T13:17:21.0203121Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0203127Z 
2025-01-14T13:17:21.0203272Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0203449Z ___________ ERROR at setup of test_hdf_transport_state[j_estimator] ____________
2025-01-14T13:17:21.0203454Z 
2025-01-14T13:17:21.0204089Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0204440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0204446Z 
2025-01-14T13:17:21.0204543Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0204749Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0204859Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0204944Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0205121Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0205193Z         )
2025-01-14T13:17:21.0205286Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0205361Z >       sim.run_final()
2025-01-14T13:17:21.0205366Z 
2025-01-14T13:17:21.0205451Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0205556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0205658Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0205798Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0205894Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0206049Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0223770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0223882Z 
2025-01-14T13:17:21.0224448Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0224803Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0225170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0225620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0225891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0226157Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0226164Z 
2025-01-14T13:17:21.0226303Z     def initialize_transport_state(
2025-01-14T13:17:21.0226425Z         self,
2025-01-14T13:17:21.0226553Z         simulation_state,
2025-01-14T13:17:21.0226679Z         opacity_state,
2025-01-14T13:17:21.0226813Z         macro_atom_state,
2025-01-14T13:17:21.0226937Z         plasma,
2025-01-14T13:17:21.0227057Z         no_of_packets,
2025-01-14T13:17:21.0227182Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0227306Z         iteration=0,
2025-01-14T13:17:21.0227666Z     ):
2025-01-14T13:17:21.0227881Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0228040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0228158Z         else:
2025-01-14T13:17:21.0228281Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0228392Z     
2025-01-14T13:17:21.0228617Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0228786Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0228900Z         )
2025-01-14T13:17:21.0229015Z     
2025-01-14T13:17:21.0229219Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0229480Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0229785Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0230120Z         else:
2025-01-14T13:17:21.0230272Z             continuum_state = None
2025-01-14T13:17:21.0230472Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0230710Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0230860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0231029Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0231183Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0231344Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0231488Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0231802Z         ).to_numba(
2025-01-14T13:17:21.0231929Z             macro_atom_state,
2025-01-14T13:17:21.0232073Z             self.line_interaction_type,
2025-01-14T13:17:21.0232179Z         )
2025-01-14T13:17:21.0232348Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0232803Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0232910Z         ]
2025-01-14T13:17:21.0233401Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0233416Z 
2025-01-14T13:17:21.0233653Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0233937Z _______ ERROR at setup of test_hdf_transport_state[emitted_packet_mask] ________
2025-01-14T13:17:21.0233944Z 
2025-01-14T13:17:21.0234960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0235531Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0235546Z 
2025-01-14T13:17:21.0235699Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0236031Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0236197Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0236345Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0236630Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0236751Z         )
2025-01-14T13:17:21.0236898Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0237015Z >       sim.run_final()
2025-01-14T13:17:21.0237022Z 
2025-01-14T13:17:21.0237167Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0237347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0237513Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0237746Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0237901Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0238162Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0238333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0238511Z 
2025-01-14T13:17:21.0238971Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0239302Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0239673Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0240116Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0240390Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0240624Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0240631Z 
2025-01-14T13:17:21.0240774Z     def initialize_transport_state(
2025-01-14T13:17:21.0241052Z         self,
2025-01-14T13:17:21.0241176Z         simulation_state,
2025-01-14T13:17:21.0241305Z         opacity_state,
2025-01-14T13:17:21.0241424Z         macro_atom_state,
2025-01-14T13:17:21.0241730Z         plasma,
2025-01-14T13:17:21.0241856Z         no_of_packets,
2025-01-14T13:17:21.0241991Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0242106Z         iteration=0,
2025-01-14T13:17:21.0242217Z     ):
2025-01-14T13:17:21.0242420Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0242573Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0242685Z         else:
2025-01-14T13:17:21.0242825Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0242948Z     
2025-01-14T13:17:21.0243172Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0243334Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0243443Z         )
2025-01-14T13:17:21.0243552Z     
2025-01-14T13:17:21.0243758Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0243960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0244210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0244338Z         else:
2025-01-14T13:17:21.0244471Z             continuum_state = None
2025-01-14T13:17:21.0244648Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0244814Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0244964Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0245126Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0245286Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0245439Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0245583Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0245703Z         ).to_numba(
2025-01-14T13:17:21.0245828Z             macro_atom_state,
2025-01-14T13:17:21.0245982Z             self.line_interaction_type,
2025-01-14T13:17:21.0246095Z         )
2025-01-14T13:17:21.0246260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0246708Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0246835Z         ]
2025-01-14T13:17:21.0247331Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0247339Z 
2025-01-14T13:17:21.0247582Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0247868Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_type] _______
2025-01-14T13:17:21.0247885Z 
2025-01-14T13:17:21.0248961Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0249602Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0249640Z 
2025-01-14T13:17:21.0250047Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0250452Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0250645Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0250814Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0251133Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0251319Z         )
2025-01-14T13:17:21.0251478Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0251735Z >       sim.run_final()
2025-01-14T13:17:21.0251745Z 
2025-01-14T13:17:21.0251950Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0252270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0252679Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0257578Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0257910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0258243Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0258465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0258476Z 
2025-01-14T13:17:21.0258982Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0259351Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0259768Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0260269Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0260570Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0260835Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0260848Z 
2025-01-14T13:17:21.0261014Z     def initialize_transport_state(
2025-01-14T13:17:21.0261140Z         self,
2025-01-14T13:17:21.0261320Z         simulation_state,
2025-01-14T13:17:21.0261452Z         opacity_state,
2025-01-14T13:17:21.0261752Z         macro_atom_state,
2025-01-14T13:17:21.0261884Z         plasma,
2025-01-14T13:17:21.0262018Z         no_of_packets,
2025-01-14T13:17:21.0262165Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0262291Z         iteration=0,
2025-01-14T13:17:21.0262416Z     ):
2025-01-14T13:17:21.0262642Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0262818Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0262938Z         else:
2025-01-14T13:17:21.0263078Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0263201Z     
2025-01-14T13:17:21.0263447Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0263625Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0263849Z         )
2025-01-14T13:17:21.0263973Z     
2025-01-14T13:17:21.0264210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0264425Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0264704Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0264826Z         else:
2025-01-14T13:17:21.0264974Z             continuum_state = None
2025-01-14T13:17:21.0265154Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0265345Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0265511Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0265697Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0265872Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0266035Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0266209Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0266337Z         ).to_numba(
2025-01-14T13:17:21.0266483Z             macro_atom_state,
2025-01-14T13:17:21.0266636Z             self.line_interaction_type,
2025-01-14T13:17:21.0267104Z         )
2025-01-14T13:17:21.0267286Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0267841Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0267973Z         ]
2025-01-14T13:17:21.0268528Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0268539Z 
2025-01-14T13:17:21.0289575Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0289987Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_nu] ______
2025-01-14T13:17:21.0290000Z 
2025-01-14T13:17:21.0291197Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0292390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0292425Z 
2025-01-14T13:17:21.0292595Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0292982Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0293160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0293323Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0293646Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0293790Z         )
2025-01-14T13:17:21.0293948Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0294092Z >       sim.run_final()
2025-01-14T13:17:21.0294101Z 
2025-01-14T13:17:21.0294259Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0294465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0294646Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0294922Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0295103Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0295383Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0295590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0295599Z 
2025-01-14T13:17:21.0296074Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0296447Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0296850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0297364Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0297666Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0297923Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0297939Z 
2025-01-14T13:17:21.0298104Z     def initialize_transport_state(
2025-01-14T13:17:21.0298226Z         self,
2025-01-14T13:17:21.0298369Z         simulation_state,
2025-01-14T13:17:21.0298498Z         opacity_state,
2025-01-14T13:17:21.0298637Z         macro_atom_state,
2025-01-14T13:17:21.0298758Z         plasma,
2025-01-14T13:17:21.0298894Z         no_of_packets,
2025-01-14T13:17:21.0299040Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0299175Z         iteration=0,
2025-01-14T13:17:21.0299291Z     ):
2025-01-14T13:17:21.0299528Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0299699Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0299843Z         else:
2025-01-14T13:17:21.0299993Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0300116Z     
2025-01-14T13:17:21.0300369Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0300798Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0300925Z         )
2025-01-14T13:17:21.0301040Z     
2025-01-14T13:17:21.0301283Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0301494Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0301990Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0302130Z         else:
2025-01-14T13:17:21.0302286Z             continuum_state = None
2025-01-14T13:17:21.0302470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0302670Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0302832Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0303026Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0303401Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0303576Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0303738Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0303879Z         ).to_numba(
2025-01-14T13:17:21.0304024Z             macro_atom_state,
2025-01-14T13:17:21.0304178Z             self.line_interaction_type,
2025-01-14T13:17:21.0304304Z         )
2025-01-14T13:17:21.0304485Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0304993Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0305115Z         ]
2025-01-14T13:17:21.0305668Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0305681Z 
2025-01-14T13:17:21.0305952Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0306284Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_r] _______
2025-01-14T13:17:21.0306302Z 
2025-01-14T13:17:21.0307471Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0308140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0308149Z 
2025-01-14T13:17:21.0308317Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0308692Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0308875Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0309032Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0309367Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0309494Z         )
2025-01-14T13:17:21.0309652Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0309783Z >       sim.run_final()
2025-01-14T13:17:21.0309792Z 
2025-01-14T13:17:21.0309941Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0310141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0310325Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0310577Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0310750Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0311030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0311227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0311236Z 
2025-01-14T13:17:21.0311878Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0312251Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0312667Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0313166Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0313672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0313923Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0313933Z 
2025-01-14T13:17:21.0314138Z     def initialize_transport_state(
2025-01-14T13:17:21.0314264Z         self,
2025-01-14T13:17:21.0314409Z         simulation_state,
2025-01-14T13:17:21.0314540Z         opacity_state,
2025-01-14T13:17:21.0314683Z         macro_atom_state,
2025-01-14T13:17:21.0314815Z         plasma,
2025-01-14T13:17:21.0314944Z         no_of_packets,
2025-01-14T13:17:21.0315095Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0315223Z         iteration=0,
2025-01-14T13:17:21.0315347Z     ):
2025-01-14T13:17:21.0315761Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0315944Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0316065Z         else:
2025-01-14T13:17:21.0316209Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0316334Z     
2025-01-14T13:17:21.0316578Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0316747Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0316882Z         )
2025-01-14T13:17:21.0317004Z     
2025-01-14T13:17:21.0317240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0317443Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0317726Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0317853Z         else:
2025-01-14T13:17:21.0318000Z             continuum_state = None
2025-01-14T13:17:21.0318184Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0318375Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0318556Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0318742Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0318933Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0319096Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0319264Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0319388Z         ).to_numba(
2025-01-14T13:17:21.0319532Z             macro_atom_state,
2025-01-14T13:17:21.0319683Z             self.line_interaction_type,
2025-01-14T13:17:21.0319810Z         )
2025-01-14T13:17:21.0319985Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0320484Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0320610Z         ]
2025-01-14T13:17:21.0321161Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0321178Z 
2025-01-14T13:17:21.0321450Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0321947Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_out_id] ___
2025-01-14T13:17:21.0321967Z 
2025-01-14T13:17:21.0323140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0323781Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0323800Z 
2025-01-14T13:17:21.0323959Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0324334Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0324506Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0324678Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0324992Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0325120Z         )
2025-01-14T13:17:21.0325504Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0325649Z >       sim.run_final()
2025-01-14T13:17:21.0325658Z 
2025-01-14T13:17:21.0325800Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0326002Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0326186Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0326437Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0326612Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0326887Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0327086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0327095Z 
2025-01-14T13:17:21.0327751Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0328131Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0328535Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0329045Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0329351Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0329597Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0329606Z 
2025-01-14T13:17:21.0329764Z     def initialize_transport_state(
2025-01-14T13:17:21.0329884Z         self,
2025-01-14T13:17:21.0330027Z         simulation_state,
2025-01-14T13:17:21.0330158Z         opacity_state,
2025-01-14T13:17:21.0330303Z         macro_atom_state,
2025-01-14T13:17:21.0330426Z         plasma,
2025-01-14T13:17:21.0330564Z         no_of_packets,
2025-01-14T13:17:21.0330717Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0330851Z         iteration=0,
2025-01-14T13:17:21.0330966Z     ):
2025-01-14T13:17:21.0331197Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0331372Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0331499Z         else:
2025-01-14T13:17:21.0331789Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0331916Z     
2025-01-14T13:17:21.0332167Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0332333Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0332457Z         )
2025-01-14T13:17:21.0332573Z     
2025-01-14T13:17:21.0332809Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0333010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0333294Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0333416Z         else:
2025-01-14T13:17:21.0333578Z             continuum_state = None
2025-01-14T13:17:21.0333757Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0333958Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0334124Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0334322Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0334493Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0334668Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0334837Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0334961Z         ).to_numba(
2025-01-14T13:17:21.0335107Z             macro_atom_state,
2025-01-14T13:17:21.0335261Z             self.line_interaction_type,
2025-01-14T13:17:21.0335386Z         )
2025-01-14T13:17:21.0335589Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0336079Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0336212Z         ]
2025-01-14T13:17:21.0336765Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0336965Z 
2025-01-14T13:17:21.0337255Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0337584Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_in_id] ____
2025-01-14T13:17:21.0337593Z 
2025-01-14T13:17:21.0338749Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0339395Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0339405Z 
2025-01-14T13:17:21.0339560Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0340107Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0340280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0340443Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0340775Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0340911Z         )
2025-01-14T13:17:21.0341061Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0341198Z >       sim.run_final()
2025-01-14T13:17:21.0341207Z 
2025-01-14T13:17:21.0341360Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0341783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0341982Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0342235Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0342410Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0342685Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0342892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0342901Z 
2025-01-14T13:17:21.0343380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0343756Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0344161Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0344650Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0344943Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0345187Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0345195Z 
2025-01-14T13:17:21.0345357Z     def initialize_transport_state(
2025-01-14T13:17:21.0345478Z         self,
2025-01-14T13:17:21.0345619Z         simulation_state,
2025-01-14T13:17:21.0345756Z         opacity_state,
2025-01-14T13:17:21.0345894Z         macro_atom_state,
2025-01-14T13:17:21.0346019Z         plasma,
2025-01-14T13:17:21.0346164Z         no_of_packets,
2025-01-14T13:17:21.0346317Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0346452Z         iteration=0,
2025-01-14T13:17:21.0346569Z     ):
2025-01-14T13:17:21.0346796Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0346979Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0347101Z         else:
2025-01-14T13:17:21.0347242Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0347358Z     
2025-01-14T13:17:21.0347605Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0347771Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0347894Z         )
2025-01-14T13:17:21.0348009Z     
2025-01-14T13:17:21.0348241Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0348437Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0348719Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0348840Z         else:
2025-01-14T13:17:21.0349214Z             continuum_state = None
2025-01-14T13:17:21.0349396Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0349600Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0349764Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0349950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0350129Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0350294Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0350464Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0350588Z         ).to_numba(
2025-01-14T13:17:21.0350729Z             macro_atom_state,
2025-01-14T13:17:21.0350880Z             self.line_interaction_type,
2025-01-14T13:17:21.0351004Z         )
2025-01-14T13:17:21.0351369Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0352049Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0352183Z         ]
2025-01-14T13:17:21.0352743Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0352757Z 
2025-01-14T13:17:21.0353028Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0353363Z __ ERROR at setup of test_hdf_transport_state[last_line_interaction_shell_id] __
2025-01-14T13:17:21.0353373Z 
2025-01-14T13:17:21.0354526Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0355162Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0355183Z 
2025-01-14T13:17:21.0355346Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0355714Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0355906Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0356068Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0356383Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0356510Z         )
2025-01-14T13:17:21.0356663Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0356802Z >       sim.run_final()
2025-01-14T13:17:21.0356811Z 
2025-01-14T13:17:21.0356964Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0357159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0357335Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0357593Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0357770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0358058Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0358266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0358275Z 
2025-01-14T13:17:21.0358749Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0359121Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0359521Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0360023Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0360307Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0360557Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0360574Z 
2025-01-14T13:17:21.0360728Z     def initialize_transport_state(
2025-01-14T13:17:21.0360856Z         self,
2025-01-14T13:17:21.0361000Z         simulation_state,
2025-01-14T13:17:21.0361130Z         opacity_state,
2025-01-14T13:17:21.0361472Z         macro_atom_state,
2025-01-14T13:17:21.0361753Z         plasma,
2025-01-14T13:17:21.0361897Z         no_of_packets,
2025-01-14T13:17:21.0362040Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0362175Z         iteration=0,
2025-01-14T13:17:21.0362291Z     ):
2025-01-14T13:17:21.0362521Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0362686Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0362811Z         else:
2025-01-14T13:17:21.0362946Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0363069Z     
2025-01-14T13:17:21.0363309Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0363482Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0363841Z         )
2025-01-14T13:17:21.0363983Z     
2025-01-14T13:17:21.0364224Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0364430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0364722Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0364844Z         else:
2025-01-14T13:17:21.0364998Z             continuum_state = None
2025-01-14T13:17:21.0365174Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0365370Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0365528Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0365717Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0365895Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0366066Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0366225Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0366355Z         ).to_numba(
2025-01-14T13:17:21.0366500Z             macro_atom_state,
2025-01-14T13:17:21.0366660Z             self.line_interaction_type,
2025-01-14T13:17:21.0366787Z         )
2025-01-14T13:17:21.0366969Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0367480Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0367598Z         ]
2025-01-14T13:17:21.0368148Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0368158Z 
2025-01-14T13:17:21.0368424Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0368738Z _________ ERROR at setup of test_hdf_transport_state[virt_packet_nus] __________
2025-01-14T13:17:21.0368748Z 
2025-01-14T13:17:21.0369889Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0370542Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0370560Z 
2025-01-14T13:17:21.0370721Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0371089Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0371264Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0371418Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0371888Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0372015Z         )
2025-01-14T13:17:21.0372172Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0372302Z >       sim.run_final()
2025-01-14T13:17:21.0372310Z 
2025-01-14T13:17:21.0372464Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0372664Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0372845Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0373101Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0373464Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0373751Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0373940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0373948Z 
2025-01-14T13:17:21.0374432Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0374796Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0375200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0375697Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0376198Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0376454Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0376464Z 
2025-01-14T13:17:21.0376627Z     def initialize_transport_state(
2025-01-14T13:17:21.0376758Z         self,
2025-01-14T13:17:21.0376893Z         simulation_state,
2025-01-14T13:17:21.0377030Z         opacity_state,
2025-01-14T13:17:21.0377160Z         macro_atom_state,
2025-01-14T13:17:21.0377290Z         plasma,
2025-01-14T13:17:21.0377418Z         no_of_packets,
2025-01-14T13:17:21.0377565Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0377694Z         iteration=0,
2025-01-14T13:17:21.0377818Z     ):
2025-01-14T13:17:21.0378036Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0378210Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0378333Z         else:
2025-01-14T13:17:21.0378469Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0378593Z     
2025-01-14T13:17:21.0378843Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0379017Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0379133Z         )
2025-01-14T13:17:21.0379261Z     
2025-01-14T13:17:21.0379485Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0379692Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0379962Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0380088Z         else:
2025-01-14T13:17:21.0380228Z             continuum_state = None
2025-01-14T13:17:21.0380413Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0380599Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0380763Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0380948Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0381125Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0381282Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0381432Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0381699Z         ).to_numba(
2025-01-14T13:17:21.0381838Z             macro_atom_state,
2025-01-14T13:17:21.0381996Z             self.line_interaction_type,
2025-01-14T13:17:21.0382117Z         )
2025-01-14T13:17:21.0382303Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0382799Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0382927Z         ]
2025-01-14T13:17:21.0383469Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0383479Z 
2025-01-14T13:17:21.0383740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0384050Z _______ ERROR at setup of test_hdf_transport_state[virt_packet_energies] _______
2025-01-14T13:17:21.0384066Z 
2025-01-14T13:17:21.0385226Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0386003Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0386013Z 
2025-01-14T13:17:21.0386147Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0386457Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0386598Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0386732Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0387001Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0387103Z         )
2025-01-14T13:17:21.0387234Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0387513Z >       sim.run_final()
2025-01-14T13:17:21.0387519Z 
2025-01-14T13:17:21.0387642Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0387800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0387958Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0388166Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0388311Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0388540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0388705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0388712Z 
2025-01-14T13:17:21.0389112Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0389413Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0389743Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0390164Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0390409Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0390623Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0390630Z 
2025-01-14T13:17:21.0390765Z     def initialize_transport_state(
2025-01-14T13:17:21.0390869Z         self,
2025-01-14T13:17:21.0390991Z         simulation_state,
2025-01-14T13:17:21.0391106Z         opacity_state,
2025-01-14T13:17:21.0391226Z         macro_atom_state,
2025-01-14T13:17:21.0391336Z         plasma,
2025-01-14T13:17:21.0391445Z         no_of_packets,
2025-01-14T13:17:21.0391792Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0392190Z         iteration=0,
2025-01-14T13:17:21.0392320Z     ):
2025-01-14T13:17:21.0392473Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0392582Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0392666Z         else:
2025-01-14T13:17:21.0392755Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0392820Z     
2025-01-14T13:17:21.0392974Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0393078Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0393153Z         )
2025-01-14T13:17:21.0393220Z     
2025-01-14T13:17:21.0393358Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0393477Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0393642Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0393716Z         else:
2025-01-14T13:17:21.0393798Z             continuum_state = None
2025-01-14T13:17:21.0393906Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0394014Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0394111Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0394226Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0394334Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0394428Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0394741Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0394812Z         ).to_numba(
2025-01-14T13:17:21.0394895Z             macro_atom_state,
2025-01-14T13:17:21.0394983Z             self.line_interaction_type,
2025-01-14T13:17:21.0395056Z         )
2025-01-14T13:17:21.0395157Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0395441Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0395513Z         ]
2025-01-14T13:17:21.0395819Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0395825Z 
2025-01-14T13:17:21.0395986Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0396291Z ______ ERROR at setup of test_hdf_transport_state[virt_packet_initial_rs] ______
2025-01-14T13:17:21.0396296Z 
2025-01-14T13:17:21.0396961Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0397322Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0397332Z 
2025-01-14T13:17:21.0397427Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0397638Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0397744Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0397836Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0398126Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0398249Z         )
2025-01-14T13:17:21.0398603Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0398998Z >       sim.run_final()
2025-01-14T13:17:21.0399212Z 
2025-01-14T13:17:21.0399349Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0399759Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0400213Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0400721Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0401211Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0401961Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0402619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0402983Z 
2025-01-14T13:17:21.0403484Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0404814Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0405779Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0407047Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0407964Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0408373Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0408599Z 
2025-01-14T13:17:21.0408700Z     def initialize_transport_state(
2025-01-14T13:17:21.0408941Z         self,
2025-01-14T13:17:21.0409128Z         simulation_state,
2025-01-14T13:17:21.0409350Z         opacity_state,
2025-01-14T13:17:21.0409552Z         macro_atom_state,
2025-01-14T13:17:21.0409751Z         plasma,
2025-01-14T13:17:21.0409932Z         no_of_packets,
2025-01-14T13:17:21.0410133Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0410369Z         iteration=0,
2025-01-14T13:17:21.0410556Z     ):
2025-01-14T13:17:21.0410782Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0411089Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0411512Z         else:
2025-01-14T13:17:21.0411924Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0412146Z     
2025-01-14T13:17:21.0412375Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0412698Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0412949Z         )
2025-01-14T13:17:21.0413113Z     
2025-01-14T13:17:21.0413337Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0413667Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0414029Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0414340Z         else:
2025-01-14T13:17:21.0414526Z             continuum_state = None
2025-01-14T13:17:21.0414953Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0415248Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0415529Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0415815Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0416100Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0416383Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0416648Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0416889Z         ).to_numba(
2025-01-14T13:17:21.0417090Z             macro_atom_state,
2025-01-14T13:17:21.0417321Z             self.line_interaction_type,
2025-01-14T13:17:21.0417555Z         )
2025-01-14T13:17:21.0417751Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0418210Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0418693Z         ]
2025-01-14T13:17:21.0419394Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0419955Z 
2025-01-14T13:17:21.0420115Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0420532Z _____ ERROR at setup of test_hdf_transport_state[virt_packet_initial_mus] ______
2025-01-14T13:17:21.0420795Z 
2025-01-14T13:17:21.0421426Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0422702Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0423138Z 
2025-01-14T13:17:21.0423229Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0423598Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0423988Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0424260Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0424607Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0424941Z         )
2025-01-14T13:17:21.0425123Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0425357Z >       sim.run_final()
2025-01-14T13:17:21.0425483Z 
2025-01-14T13:17:21.0425577Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0425825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0426117Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0426436Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0426753Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0427089Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0427434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0427634Z 
2025-01-14T13:17:21.0427895Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0428452Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0429122Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0429701Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0430225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0430606Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0430827Z 
2025-01-14T13:17:21.0430923Z     def initialize_transport_state(
2025-01-14T13:17:21.0431155Z         self,
2025-01-14T13:17:21.0431339Z         simulation_state,
2025-01-14T13:17:21.0431710Z         opacity_state,
2025-01-14T13:17:21.0431954Z         macro_atom_state,
2025-01-14T13:17:21.0432289Z         plasma,
2025-01-14T13:17:21.0432473Z         no_of_packets,
2025-01-14T13:17:21.0432676Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0432897Z         iteration=0,
2025-01-14T13:17:21.0433087Z     ):
2025-01-14T13:17:21.0433314Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0433620Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0433868Z         else:
2025-01-14T13:17:21.0434045Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0434264Z     
2025-01-14T13:17:21.0434494Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0434821Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0435067Z         )
2025-01-14T13:17:21.0435228Z     
2025-01-14T13:17:21.0435457Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0435784Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0436132Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0436446Z         else:
2025-01-14T13:17:21.0436631Z             continuum_state = None
2025-01-14T13:17:21.0436885Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0437184Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0437465Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0437742Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0438027Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0438302Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0438564Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0438809Z         ).to_numba(
2025-01-14T13:17:21.0438999Z             macro_atom_state,
2025-01-14T13:17:21.0439229Z             self.line_interaction_type,
2025-01-14T13:17:21.0439462Z         )
2025-01-14T13:17:21.0439659Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0440116Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0440535Z         ]
2025-01-14T13:17:21.0440925Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0441315Z 
2025-01-14T13:17:21.0441468Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0441998Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_nu] _
2025-01-14T13:17:21.0442290Z 
2025-01-14T13:17:21.0443051Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0444499Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0444940Z 
2025-01-14T13:17:21.0445033Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0445404Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0445931Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0446203Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0446539Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0446865Z         )
2025-01-14T13:17:21.0447044Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0447281Z >       sim.run_final()
2025-01-14T13:17:21.0447403Z 
2025-01-14T13:17:21.0447493Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0447737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0448030Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0448349Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0448666Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0449148Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0449490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0449697Z 
2025-01-14T13:17:21.0449957Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0450504Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0451017Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0451734Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0452251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0452634Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0452858Z 
2025-01-14T13:17:21.0452952Z     def initialize_transport_state(
2025-01-14T13:17:21.0453192Z         self,
2025-01-14T13:17:21.0453372Z         simulation_state,
2025-01-14T13:17:21.0453585Z         opacity_state,
2025-01-14T13:17:21.0453788Z         macro_atom_state,
2025-01-14T13:17:21.0453994Z         plasma,
2025-01-14T13:17:21.0454175Z         no_of_packets,
2025-01-14T13:17:21.0454376Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0454596Z         iteration=0,
2025-01-14T13:17:21.0454779Z     ):
2025-01-14T13:17:21.0455000Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0455307Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0455556Z         else:
2025-01-14T13:17:21.0455734Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0455943Z     
2025-01-14T13:17:21.0456166Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0456479Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0456725Z         )
2025-01-14T13:17:21.0456884Z     
2025-01-14T13:17:21.0457103Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0457434Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0457779Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0458088Z         else:
2025-01-14T13:17:21.0458269Z             continuum_state = None
2025-01-14T13:17:21.0458522Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0458809Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0459087Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0459365Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0459650Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0459923Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0460189Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0460428Z         ).to_numba(
2025-01-14T13:17:21.0460618Z             macro_atom_state,
2025-01-14T13:17:21.0460852Z             self.line_interaction_type,
2025-01-14T13:17:21.0461087Z         )
2025-01-14T13:17:21.0461283Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0461932Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0462497Z         ]
2025-01-14T13:17:21.0462908Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0463302Z 
2025-01-14T13:17:21.0463455Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0463878Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_r] _
2025-01-14T13:17:21.0464164Z 
2025-01-14T13:17:21.0464793Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0466326Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0466895Z 
2025-01-14T13:17:21.0466995Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0467363Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0467752Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0468019Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0468357Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0468683Z         )
2025-01-14T13:17:21.0468859Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0469092Z >       sim.run_final()
2025-01-14T13:17:21.0469213Z 
2025-01-14T13:17:21.0469303Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0469553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0469848Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0470170Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0470485Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0470818Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0471165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0471363Z 
2025-01-14T13:17:21.0471848Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0472411Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0472918Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0473791Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0474505Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0474895Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0475118Z 
2025-01-14T13:17:21.0475212Z     def initialize_transport_state(
2025-01-14T13:17:21.0475444Z         self,
2025-01-14T13:17:21.0475628Z         simulation_state,
2025-01-14T13:17:21.0475837Z         opacity_state,
2025-01-14T13:17:21.0476035Z         macro_atom_state,
2025-01-14T13:17:21.0476234Z         plasma,
2025-01-14T13:17:21.0476412Z         no_of_packets,
2025-01-14T13:17:21.0476612Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0476832Z         iteration=0,
2025-01-14T13:17:21.0477016Z     ):
2025-01-14T13:17:21.0477241Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0477549Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0477792Z         else:
2025-01-14T13:17:21.0477979Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0478189Z     
2025-01-14T13:17:21.0478414Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0478731Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0478974Z         )
2025-01-14T13:17:21.0479133Z     
2025-01-14T13:17:21.0479353Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0479863Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0480212Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0480516Z         else:
2025-01-14T13:17:21.0480697Z             continuum_state = None
2025-01-14T13:17:21.0480950Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0481239Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0481525Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0481991Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0482277Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0482551Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0482974Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0483220Z         ).to_numba(
2025-01-14T13:17:21.0483416Z             macro_atom_state,
2025-01-14T13:17:21.0483642Z             self.line_interaction_type,
2025-01-14T13:17:21.0483882Z         )
2025-01-14T13:17:21.0484079Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0484537Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0484963Z         ]
2025-01-14T13:17:21.0485360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0485743Z 
2025-01-14T13:17:21.0485900Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0486318Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_type] _
2025-01-14T13:17:21.0486591Z 
2025-01-14T13:17:21.0487218Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0488295Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0488724Z 
2025-01-14T13:17:21.0488813Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0489180Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0489581Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0489845Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0490180Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0490507Z         )
2025-01-14T13:17:21.0490687Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0490921Z >       sim.run_final()
2025-01-14T13:17:21.0491045Z 
2025-01-14T13:17:21.0491140Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0491386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0491829Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0492159Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0492475Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0492804Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0493145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0493348Z 
2025-01-14T13:17:21.0493612Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0494156Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0494658Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0495237Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0495762Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0496154Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0496581Z 
2025-01-14T13:17:21.0496679Z     def initialize_transport_state(
2025-01-14T13:17:21.0496909Z         self,
2025-01-14T13:17:21.0497092Z         simulation_state,
2025-01-14T13:17:21.0497297Z         opacity_state,
2025-01-14T13:17:21.0497495Z         macro_atom_state,
2025-01-14T13:17:21.0497694Z         plasma,
2025-01-14T13:17:21.0497875Z         no_of_packets,
2025-01-14T13:17:21.0498074Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0498306Z         iteration=0,
2025-01-14T13:17:21.0498494Z     ):
2025-01-14T13:17:21.0498711Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0499009Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0499255Z         else:
2025-01-14T13:17:21.0499560Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0499769Z     
2025-01-14T13:17:21.0499993Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0500307Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0500558Z         )
2025-01-14T13:17:21.0500716Z     
2025-01-14T13:17:21.0500934Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0501269Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0501824Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0502139Z         else:
2025-01-14T13:17:21.0502321Z             continuum_state = None
2025-01-14T13:17:21.0502573Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0502862Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0503141Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0503414Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0503715Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0503996Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0504264Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0504512Z         ).to_numba(
2025-01-14T13:17:21.0504701Z             macro_atom_state,
2025-01-14T13:17:21.0504934Z             self.line_interaction_type,
2025-01-14T13:17:21.0505169Z         )
2025-01-14T13:17:21.0505369Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0505828Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0506256Z         ]
2025-01-14T13:17:21.0506655Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0507042Z 
2025-01-14T13:17:21.0507197Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0507624Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_in_id] _
2025-01-14T13:17:21.0507924Z 
2025-01-14T13:17:21.0508551Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0509616Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0510047Z 
2025-01-14T13:17:21.0510136Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0510509Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0510900Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0545590Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0546278Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0546843Z         )
2025-01-14T13:17:21.0547034Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0547289Z >       sim.run_final()
2025-01-14T13:17:21.0547414Z 
2025-01-14T13:17:21.0547513Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0548147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0548455Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0548789Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0549115Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0549442Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0549787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0549986Z 
2025-01-14T13:17:21.0550252Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0550798Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0551448Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0552243Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0552784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0553171Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0553388Z 
2025-01-14T13:17:21.0553484Z     def initialize_transport_state(
2025-01-14T13:17:21.0553714Z         self,
2025-01-14T13:17:21.0553895Z         simulation_state,
2025-01-14T13:17:21.0554100Z         opacity_state,
2025-01-14T13:17:21.0554296Z         macro_atom_state,
2025-01-14T13:17:21.0554491Z         plasma,
2025-01-14T13:17:21.0554679Z         no_of_packets,
2025-01-14T13:17:21.0554873Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0555091Z         iteration=0,
2025-01-14T13:17:21.0555274Z     ):
2025-01-14T13:17:21.0555502Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0555812Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0556056Z         else:
2025-01-14T13:17:21.0556234Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0556453Z     
2025-01-14T13:17:21.0556681Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0557000Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0557248Z         )
2025-01-14T13:17:21.0557408Z     
2025-01-14T13:17:21.0557633Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0557957Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0558303Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0558606Z         else:
2025-01-14T13:17:21.0558800Z             continuum_state = None
2025-01-14T13:17:21.0559066Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0559353Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0559640Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0559913Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0560209Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0560763Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0561025Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0561266Z         ).to_numba(
2025-01-14T13:17:21.0561453Z             macro_atom_state,
2025-01-14T13:17:21.0562054Z             self.line_interaction_type,
2025-01-14T13:17:21.0562299Z         )
2025-01-14T13:17:21.0562503Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0563073Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0563506Z         ]
2025-01-14T13:17:21.0563952Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0564347Z 
2025-01-14T13:17:21.0564507Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0564951Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_out_id] _
2025-01-14T13:17:21.0565428Z 
2025-01-14T13:17:21.0566079Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0567171Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0567607Z 
2025-01-14T13:17:21.0567705Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0568080Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0568473Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0568872Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0569206Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0569525Z         )
2025-01-14T13:17:21.0569708Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0569946Z >       sim.run_final()
2025-01-14T13:17:21.0570073Z 
2025-01-14T13:17:21.0570163Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0570407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0570722Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0571045Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0571367Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0571904Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0572254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0572451Z 
2025-01-14T13:17:21.0572719Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0573266Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0573775Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0574353Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0574877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0575268Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0575486Z 
2025-01-14T13:17:21.0575581Z     def initialize_transport_state(
2025-01-14T13:17:21.0575809Z         self,
2025-01-14T13:17:21.0575991Z         simulation_state,
2025-01-14T13:17:21.0576195Z         opacity_state,
2025-01-14T13:17:21.0576398Z         macro_atom_state,
2025-01-14T13:17:21.0576595Z         plasma,
2025-01-14T13:17:21.0576792Z         no_of_packets,
2025-01-14T13:17:21.0576993Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0577209Z         iteration=0,
2025-01-14T13:17:21.0577393Z     ):
2025-01-14T13:17:21.0577615Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0577923Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0578165Z         else:
2025-01-14T13:17:21.0578342Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0578549Z     
2025-01-14T13:17:21.0578777Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0579091Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0579332Z         )
2025-01-14T13:17:21.0579491Z     
2025-01-14T13:17:21.0579710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0580032Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0580382Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0580688Z         else:
2025-01-14T13:17:21.0580876Z             continuum_state = None
2025-01-14T13:17:21.0581135Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0581434Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0582057Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0582343Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0582633Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0582906Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0583165Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0583403Z         ).to_numba(
2025-01-14T13:17:21.0583592Z             macro_atom_state,
2025-01-14T13:17:21.0583823Z             self.line_interaction_type,
2025-01-14T13:17:21.0584056Z         )
2025-01-14T13:17:21.0584253Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0584716Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0585276Z         ]
2025-01-14T13:17:21.0585671Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0586066Z 
2025-01-14T13:17:21.0586215Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0586657Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] _
2025-01-14T13:17:21.0586959Z 
2025-01-14T13:17:21.0587600Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0588659Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0589096Z 
2025-01-14T13:17:21.0589195Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0589570Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0589952Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0590228Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0590570Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0590896Z         )
2025-01-14T13:17:21.0591081Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0591323Z >       sim.run_final()
2025-01-14T13:17:21.0591445Z 
2025-01-14T13:17:21.0591533Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0591987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0592286Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0592602Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0592914Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0593238Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0593587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0593781Z 
2025-01-14T13:17:21.0594042Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0594597Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0595102Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0595679Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0596208Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0596590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0596806Z 
2025-01-14T13:17:21.0596899Z     def initialize_transport_state(
2025-01-14T13:17:21.0597126Z         self,
2025-01-14T13:17:21.0597313Z         simulation_state,
2025-01-14T13:17:21.0597524Z         opacity_state,
2025-01-14T13:17:21.0597719Z         macro_atom_state,
2025-01-14T13:17:21.0597924Z         plasma,
2025-01-14T13:17:21.0598112Z         no_of_packets,
2025-01-14T13:17:21.0598461Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0598687Z         iteration=0,
2025-01-14T13:17:21.0598873Z     ):
2025-01-14T13:17:21.0599087Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0599388Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0599630Z         else:
2025-01-14T13:17:21.0599809Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0600018Z     
2025-01-14T13:17:21.0600242Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0600560Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0600808Z         )
2025-01-14T13:17:21.0600969Z     
2025-01-14T13:17:21.0601187Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0601759Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0602110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0602415Z         else:
2025-01-14T13:17:21.0602601Z             continuum_state = None
2025-01-14T13:17:21.0602853Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0603136Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0603417Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0603694Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0603983Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0604257Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0604524Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0604763Z         ).to_numba(
2025-01-14T13:17:21.0604954Z             macro_atom_state,
2025-01-14T13:17:21.0605189Z             self.line_interaction_type,
2025-01-14T13:17:21.0605435Z         )
2025-01-14T13:17:21.0605634Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0606087Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0606521Z         ]
2025-01-14T13:17:21.0606827Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0606839Z 
2025-01-14T13:17:21.0606988Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0607150Z ____________________ ERROR at setup of test_thomson_scatter ____________________
2025-01-14T13:17:21.0607155Z 
2025-01-14T13:17:21.0607789Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0608148Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0608157Z 
2025-01-14T13:17:21.0608246Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0608412Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0608516Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0608686Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0608768Z >       sim.iterate(10)
2025-01-14T13:17:21.0608773Z 
2025-01-14T13:17:21.0608893Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0609007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0609104Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0609266Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0609369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0609377Z 
2025-01-14T13:17:21.0609645Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0609853Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0610245Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0610529Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0610695Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0610833Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0610838Z 
2025-01-14T13:17:21.0610924Z     def initialize_transport_state(
2025-01-14T13:17:21.0610997Z         self,
2025-01-14T13:17:21.0611075Z         simulation_state,
2025-01-14T13:17:21.0611156Z         opacity_state,
2025-01-14T13:17:21.0611231Z         macro_atom_state,
2025-01-14T13:17:21.0611411Z         plasma,
2025-01-14T13:17:21.0611484Z         no_of_packets,
2025-01-14T13:17:21.0611674Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0611756Z         iteration=0,
2025-01-14T13:17:21.0611823Z     ):
2025-01-14T13:17:21.0611959Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0612056Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0612129Z         else:
2025-01-14T13:17:21.0612214Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0612285Z     
2025-01-14T13:17:21.0612423Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0612523Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0612590Z         )
2025-01-14T13:17:21.0612660Z     
2025-01-14T13:17:21.0612789Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0612908Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0613061Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0613143Z         else:
2025-01-14T13:17:21.0613224Z             continuum_state = None
2025-01-14T13:17:21.0613337Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0613458Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0613550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0613662Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0613760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0613859Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0613949Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0614026Z         ).to_numba(
2025-01-14T13:17:21.0614105Z             macro_atom_state,
2025-01-14T13:17:21.0614200Z             self.line_interaction_type,
2025-01-14T13:17:21.0614274Z         )
2025-01-14T13:17:21.0614379Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0614648Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0614726Z         ]
2025-01-14T13:17:21.0615023Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0615038Z 
2025-01-14T13:17:21.0615190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0615353Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0615777Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0616221Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0616403Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0616614Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0616777Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0616859Z 	
2025-01-14T13:17:21.0617011Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0617167Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0617808Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0618029Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0618141Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0618227Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0618383Z ____________________ ERROR at setup of test_line_scatter[0] ____________________
2025-01-14T13:17:21.0618387Z 
2025-01-14T13:17:21.0619015Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0619482Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0619493Z 
2025-01-14T13:17:21.0619590Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0619747Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0619854Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0620026Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0620107Z >       sim.iterate(10)
2025-01-14T13:17:21.0620112Z 
2025-01-14T13:17:21.0620233Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0620344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0620440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0620600Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0620714Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0620719Z 
2025-01-14T13:17:21.0620985Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0621196Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0621412Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0621878Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0622049Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0622188Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0622194Z 
2025-01-14T13:17:21.0622281Z     def initialize_transport_state(
2025-01-14T13:17:21.0622356Z         self,
2025-01-14T13:17:21.0622439Z         simulation_state,
2025-01-14T13:17:21.0622520Z         opacity_state,
2025-01-14T13:17:21.0622604Z         macro_atom_state,
2025-01-14T13:17:21.0622675Z         plasma,
2025-01-14T13:17:21.0622754Z         no_of_packets,
2025-01-14T13:17:21.0622841Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0622917Z         iteration=0,
2025-01-14T13:17:21.0622983Z     ):
2025-01-14T13:17:21.0623113Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0623208Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0623282Z         else:
2025-01-14T13:17:21.0623359Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0623437Z     
2025-01-14T13:17:21.0623577Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0623677Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0623744Z         )
2025-01-14T13:17:21.0623817Z     
2025-01-14T13:17:21.0623944Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0624069Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0624230Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0624298Z         else:
2025-01-14T13:17:21.0624529Z             continuum_state = None
2025-01-14T13:17:21.0624638Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0624753Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0624845Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0624954Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0625051Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0625150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0625242Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0625318Z         ).to_numba(
2025-01-14T13:17:21.0625395Z             macro_atom_state,
2025-01-14T13:17:21.0625488Z             self.line_interaction_type,
2025-01-14T13:17:21.0625674Z         )
2025-01-14T13:17:21.0625781Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0626058Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0626132Z         ]
2025-01-14T13:17:21.0626437Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0626443Z 
2025-01-14T13:17:21.0626589Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0626743Z ____________________ ERROR at setup of test_line_scatter[1] ____________________
2025-01-14T13:17:21.0626747Z 
2025-01-14T13:17:21.0627371Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0627723Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0627733Z 
2025-01-14T13:17:21.0627828Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0627993Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0628096Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0628268Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0628348Z >       sim.iterate(10)
2025-01-14T13:17:21.0628352Z 
2025-01-14T13:17:21.0628471Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0628582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0628683Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0628835Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0628944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0628951Z 
2025-01-14T13:17:21.0629215Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0629419Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0629644Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0629927Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0630088Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0630224Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0630229Z 
2025-01-14T13:17:21.0630322Z     def initialize_transport_state(
2025-01-14T13:17:21.0630394Z         self,
2025-01-14T13:17:21.0630475Z         simulation_state,
2025-01-14T13:17:21.0630552Z         opacity_state,
2025-01-14T13:17:21.0630631Z         macro_atom_state,
2025-01-14T13:17:21.0630706Z         plasma,
2025-01-14T13:17:21.0630784Z         no_of_packets,
2025-01-14T13:17:21.0630864Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0630943Z         iteration=0,
2025-01-14T13:17:21.0631114Z     ):
2025-01-14T13:17:21.0631247Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0631344Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0631417Z         else:
2025-01-14T13:17:21.0631495Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0631692Z     
2025-01-14T13:17:21.0631863Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0631966Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0632038Z         )
2025-01-14T13:17:21.0632104Z     
2025-01-14T13:17:21.0632239Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0632355Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0632511Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0632720Z         else:
2025-01-14T13:17:21.0632808Z             continuum_state = None
2025-01-14T13:17:21.0632907Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0633026Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0633118Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0633229Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0633326Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0633426Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0633515Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0633591Z         ).to_numba(
2025-01-14T13:17:21.0633674Z             macro_atom_state,
2025-01-14T13:17:21.0633761Z             self.line_interaction_type,
2025-01-14T13:17:21.0633833Z         )
2025-01-14T13:17:21.0633933Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0634203Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0634275Z         ]
2025-01-14T13:17:21.0634588Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0634597Z 
2025-01-14T13:17:21.0634744Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0634898Z ____________________ ERROR at setup of test_line_scatter[2] ____________________
2025-01-14T13:17:21.0634902Z 
2025-01-14T13:17:21.0635521Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0635873Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0635878Z 
2025-01-14T13:17:21.0635982Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0636140Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0636240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0636418Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0636500Z >       sim.iterate(10)
2025-01-14T13:17:21.0636504Z 
2025-01-14T13:17:21.0636621Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0636731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0636832Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0636982Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0637090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0637094Z 
2025-01-14T13:17:21.0637351Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0637558Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0637775Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0638175Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0638334Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0638475Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0638480Z 
2025-01-14T13:17:21.0638573Z     def initialize_transport_state(
2025-01-14T13:17:21.0638642Z         self,
2025-01-14T13:17:21.0638725Z         simulation_state,
2025-01-14T13:17:21.0638800Z         opacity_state,
2025-01-14T13:17:21.0638881Z         macro_atom_state,
2025-01-14T13:17:21.0638952Z         plasma,
2025-01-14T13:17:21.0639029Z         no_of_packets,
2025-01-14T13:17:21.0639109Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0639267Z         iteration=0,
2025-01-14T13:17:21.0639334Z     ):
2025-01-14T13:17:21.0639473Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0639570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0639651Z         else:
2025-01-14T13:17:21.0639729Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0639799Z     
2025-01-14T13:17:21.0639932Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0640029Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0640100Z         )
2025-01-14T13:17:21.0640167Z     
2025-01-14T13:17:21.0640296Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0640407Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0640565Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0640633Z         else:
2025-01-14T13:17:21.0640719Z             continuum_state = None
2025-01-14T13:17:21.0640824Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0640941Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0641034Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0641148Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0641246Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0641344Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0641433Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0641510Z         ).to_numba(
2025-01-14T13:17:21.0641693Z             macro_atom_state,
2025-01-14T13:17:21.0641781Z             self.line_interaction_type,
2025-01-14T13:17:21.0641852Z         )
2025-01-14T13:17:21.0641952Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0642221Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0642288Z         ]
2025-01-14T13:17:21.0642596Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0642600Z 
2025-01-14T13:17:21.0642745Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0642925Z _________ ERROR at setup of test_line_emission[test_packet0-expected0] _________
2025-01-14T13:17:21.0642930Z 
2025-01-14T13:17:21.0643556Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0643899Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0643905Z 
2025-01-14T13:17:21.0644003Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0644160Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0644264Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0644442Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0644646Z >       sim.iterate(10)
2025-01-14T13:17:21.0644651Z 
2025-01-14T13:17:21.0644776Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0644881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0644979Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0645131Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0645237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0645242Z 
2025-01-14T13:17:21.0645501Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0645703Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0646037Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0646312Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0646477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0646612Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0646616Z 
2025-01-14T13:17:21.0646707Z     def initialize_transport_state(
2025-01-14T13:17:21.0646775Z         self,
2025-01-14T13:17:21.0646863Z         simulation_state,
2025-01-14T13:17:21.0646939Z         opacity_state,
2025-01-14T13:17:21.0647020Z         macro_atom_state,
2025-01-14T13:17:21.0647090Z         plasma,
2025-01-14T13:17:21.0647169Z         no_of_packets,
2025-01-14T13:17:21.0647250Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0647330Z         iteration=0,
2025-01-14T13:17:21.0647397Z     ):
2025-01-14T13:17:21.0647525Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0647624Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0647745Z         else:
2025-01-14T13:17:21.0647872Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0647994Z     
2025-01-14T13:17:21.0648216Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0648368Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0648483Z         )
2025-01-14T13:17:21.0648591Z     
2025-01-14T13:17:21.0648804Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0648980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0649184Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0649302Z         else:
2025-01-14T13:17:21.0649443Z             continuum_state = None
2025-01-14T13:17:21.0649606Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0649784Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0649936Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0650112Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0650215Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0650323Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0650420Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0650491Z         ).to_numba(
2025-01-14T13:17:21.0650580Z             macro_atom_state,
2025-01-14T13:17:21.0650732Z             self.line_interaction_type,
2025-01-14T13:17:21.0650849Z         )
2025-01-14T13:17:21.0651012Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0651480Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0651682Z         ]
2025-01-14T13:17:21.0652000Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0652010Z 
2025-01-14T13:17:21.0652162Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0652409Z _________ ERROR at setup of test_line_emission[test_packet1-expected1] _________
2025-01-14T13:17:21.0652581Z 
2025-01-14T13:17:21.0653528Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0654089Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0654097Z 
2025-01-14T13:17:21.0654251Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0654515Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0654662Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0654841Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0655135Z >       sim.iterate(10)
2025-01-14T13:17:21.0655144Z 
2025-01-14T13:17:21.0655353Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0655539Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0655702Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0655965Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0656081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0656085Z 
2025-01-14T13:17:21.0656459Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0656811Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0657189Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0657471Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0657740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0657960Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0657973Z 
2025-01-14T13:17:21.0658120Z     def initialize_transport_state(
2025-01-14T13:17:21.0658235Z         self,
2025-01-14T13:17:21.0658366Z         simulation_state,
2025-01-14T13:17:21.0658493Z         opacity_state,
2025-01-14T13:17:21.0658577Z         macro_atom_state,
2025-01-14T13:17:21.0658649Z         plasma,
2025-01-14T13:17:21.0658727Z         no_of_packets,
2025-01-14T13:17:21.0658856Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0658984Z         iteration=0,
2025-01-14T13:17:21.0659093Z     ):
2025-01-14T13:17:21.0659301Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0659459Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0659569Z         else:
2025-01-14T13:17:21.0659719Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0659790Z     
2025-01-14T13:17:21.0659934Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0660059Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0660186Z         )
2025-01-14T13:17:21.0660295Z     
2025-01-14T13:17:21.0660514Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0660696Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0660958Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0661037Z         else:
2025-01-14T13:17:21.0661126Z             continuum_state = None
2025-01-14T13:17:21.0661233Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0661428Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0661706Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0661887Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0662057Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0662208Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0662358Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0662569Z         ).to_numba(
2025-01-14T13:17:21.0662654Z             macro_atom_state,
2025-01-14T13:17:21.0662740Z             self.line_interaction_type,
2025-01-14T13:17:21.0662811Z         )
2025-01-14T13:17:21.0662911Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0663184Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0663252Z         ]
2025-01-14T13:17:21.0663556Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0663561Z 
2025-01-14T13:17:21.0663712Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0663882Z _________ ERROR at setup of test_line_emission[test_packet2-expected2] _________
2025-01-14T13:17:21.0664025Z 
2025-01-14T13:17:21.0664666Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0665020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0665025Z 
2025-01-14T13:17:21.0665120Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0665282Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0665387Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0665562Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0665638Z >       sim.iterate(10)
2025-01-14T13:17:21.0665643Z 
2025-01-14T13:17:21.0665772Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0665879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0665981Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0666159Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0666268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0666273Z 
2025-01-14T13:17:21.0666537Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0666740Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0666963Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0667231Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0667397Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0667530Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0667534Z 
2025-01-14T13:17:21.0667624Z     def initialize_transport_state(
2025-01-14T13:17:21.0667699Z         self,
2025-01-14T13:17:21.0667782Z         simulation_state,
2025-01-14T13:17:21.0667863Z         opacity_state,
2025-01-14T13:17:21.0667945Z         macro_atom_state,
2025-01-14T13:17:21.0668015Z         plasma,
2025-01-14T13:17:21.0668093Z         no_of_packets,
2025-01-14T13:17:21.0668175Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0668251Z         iteration=0,
2025-01-14T13:17:21.0668324Z     ):
2025-01-14T13:17:21.0668449Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0668547Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0668621Z         else:
2025-01-14T13:17:21.0668705Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0668770Z     
2025-01-14T13:17:21.0668909Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0669009Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0669082Z         )
2025-01-14T13:17:21.0669147Z     
2025-01-14T13:17:21.0669377Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0669491Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0669646Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0669717Z         else:
2025-01-14T13:17:21.0669803Z             continuum_state = None
2025-01-14T13:17:21.0669902Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0670012Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0670109Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0670213Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0670313Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0670405Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0670576Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0670647Z         ).to_numba(
2025-01-14T13:17:21.0670728Z             macro_atom_state,
2025-01-14T13:17:21.0670820Z             self.line_interaction_type,
2025-01-14T13:17:21.0670892Z         )
2025-01-14T13:17:21.0670991Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0671263Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0671330Z         ]
2025-01-14T13:17:21.0671852Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0671862Z 
2025-01-14T13:17:21.0672022Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0672175Z ________________ ERROR at setup of test_macro_atom[1963-10015] _________________
2025-01-14T13:17:21.0672179Z 
2025-01-14T13:17:21.0672811Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0673183Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0673188Z 
2025-01-14T13:17:21.0673283Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0673440Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0673545Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0673721Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0673802Z >       sim.iterate(10)
2025-01-14T13:17:21.0673807Z 
2025-01-14T13:17:21.0673932Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0674038Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0674142Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0674292Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0674409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0674414Z 
2025-01-14T13:17:21.0674675Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0674878Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0675102Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0675374Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0675548Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0675680Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0675688Z 
2025-01-14T13:17:21.0675783Z     def initialize_transport_state(
2025-01-14T13:17:21.0675852Z         self,
2025-01-14T13:17:21.0675933Z         simulation_state,
2025-01-14T13:17:21.0676008Z         opacity_state,
2025-01-14T13:17:21.0676239Z         macro_atom_state,
2025-01-14T13:17:21.0676348Z         plasma,
2025-01-14T13:17:21.0676483Z         no_of_packets,
2025-01-14T13:17:21.0676618Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0676747Z         iteration=0,
2025-01-14T13:17:21.0676862Z     ):
2025-01-14T13:17:21.0677067Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0677228Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0677334Z         else:
2025-01-14T13:17:21.0677421Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0677488Z     
2025-01-14T13:17:21.0677632Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0677728Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0677798Z         )
2025-01-14T13:17:21.0677995Z     
2025-01-14T13:17:21.0678131Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0678242Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0678409Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0678477Z         else:
2025-01-14T13:17:21.0678571Z             continuum_state = None
2025-01-14T13:17:21.0678678Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0678785Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0678880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0678988Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0679091Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0679183Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0679286Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0679359Z         ).to_numba(
2025-01-14T13:17:21.0679447Z             macro_atom_state,
2025-01-14T13:17:21.0679533Z             self.line_interaction_type,
2025-01-14T13:17:21.0679605Z         )
2025-01-14T13:17:21.0679704Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0679983Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0680051Z         ]
2025-01-14T13:17:21.0680354Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0680359Z 
2025-01-14T13:17:21.0680512Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0680663Z __________________ ERROR at setup of test_macro_atom[1-9993] ___________________
2025-01-14T13:17:21.0680667Z 
2025-01-14T13:17:21.0681295Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0681908Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0681925Z 
2025-01-14T13:17:21.0682068Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0682235Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0682331Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0682505Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0682579Z >       sim.iterate(10)
2025-01-14T13:17:21.0682583Z 
2025-01-14T13:17:21.0682708Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0682813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0682913Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0683065Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0683176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0683181Z 
2025-01-14T13:17:21.0683587Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0683792Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0684019Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0684288Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0684453Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0684582Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0684587Z 
2025-01-14T13:17:21.0684686Z     def initialize_transport_state(
2025-01-14T13:17:21.0684756Z         self,
2025-01-14T13:17:21.0684839Z         simulation_state,
2025-01-14T13:17:21.0685043Z         opacity_state,
2025-01-14T13:17:21.0685125Z         macro_atom_state,
2025-01-14T13:17:21.0685196Z         plasma,
2025-01-14T13:17:21.0685281Z         no_of_packets,
2025-01-14T13:17:21.0685375Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0685454Z         iteration=0,
2025-01-14T13:17:21.0685527Z     ):
2025-01-14T13:17:21.0685652Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0685751Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0685820Z         else:
2025-01-14T13:17:21.0685903Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0685969Z     
2025-01-14T13:17:21.0686108Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0686201Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0686275Z         )
2025-01-14T13:17:21.0686340Z     
2025-01-14T13:17:21.0686472Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0686588Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0686753Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0686823Z         else:
2025-01-14T13:17:21.0686916Z             continuum_state = None
2025-01-14T13:17:21.0687020Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0687125Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0687226Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0687334Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0687434Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0687525Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0687618Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0687688Z         ).to_numba(
2025-01-14T13:17:21.0687778Z             macro_atom_state,
2025-01-14T13:17:21.0687867Z             self.line_interaction_type,
2025-01-14T13:17:21.0687945Z         )
2025-01-14T13:17:21.0688053Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0688325Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0688408Z         ]
2025-01-14T13:17:21.0688708Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0688713Z 
2025-01-14T13:17:21.0688863Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0689015Z _______________ ERROR at setup of test_macro_atom[2111963-17296] _______________
2025-01-14T13:17:21.0689019Z 
2025-01-14T13:17:21.0689644Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0689986Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0690000Z 
2025-01-14T13:17:21.0690089Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0690362Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0690457Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0690631Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0690707Z >       sim.iterate(10)
2025-01-14T13:17:21.0690711Z 
2025-01-14T13:17:21.0690833Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0690939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0691039Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0691189Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0691297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0691383Z 
2025-01-14T13:17:21.0691801Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0692002Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0692232Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0692503Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0692671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0692804Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0692809Z 
2025-01-14T13:17:21.0692899Z     def initialize_transport_state(
2025-01-14T13:17:21.0692967Z         self,
2025-01-14T13:17:21.0693051Z         simulation_state,
2025-01-14T13:17:21.0693124Z         opacity_state,
2025-01-14T13:17:21.0693205Z         macro_atom_state,
2025-01-14T13:17:21.0693285Z         plasma,
2025-01-14T13:17:21.0693358Z         no_of_packets,
2025-01-14T13:17:21.0693445Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0693517Z         iteration=0,
2025-01-14T13:17:21.0693593Z     ):
2025-01-14T13:17:21.0693717Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0693815Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0693883Z         else:
2025-01-14T13:17:21.0693968Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0694040Z     
2025-01-14T13:17:21.0694179Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0694273Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0694345Z         )
2025-01-14T13:17:21.0694411Z     
2025-01-14T13:17:21.0694542Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0694653Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0694806Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0694884Z         else:
2025-01-14T13:17:21.0694966Z             continuum_state = None
2025-01-14T13:17:21.0695069Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0695178Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0695272Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0695376Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0695477Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0695573Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0695672Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0695745Z         ).to_numba(
2025-01-14T13:17:21.0695826Z             macro_atom_state,
2025-01-14T13:17:21.0695912Z             self.line_interaction_type,
2025-01-14T13:17:21.0695984Z         )
2025-01-14T13:17:21.0696084Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0696355Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0696431Z         ]
2025-01-14T13:17:21.0696730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0696871Z 
2025-01-14T13:17:21.0697034Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0697188Z ________________ ERROR at setup of test_macro_atom[10000-9993] _________________
2025-01-14T13:17:21.0697192Z 
2025-01-14T13:17:21.0697818Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0698158Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0698184Z 
2025-01-14T13:17:21.0698376Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0698541Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0698638Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0698832Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0698911Z >       sim.iterate(10)
2025-01-14T13:17:21.0698915Z 
2025-01-14T13:17:21.0699043Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0699150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0699251Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0699413Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0699528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0699533Z 
2025-01-14T13:17:21.0699802Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0700005Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0700235Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0700516Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0700685Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0700819Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0700824Z 
2025-01-14T13:17:21.0700920Z     def initialize_transport_state(
2025-01-14T13:17:21.0700991Z         self,
2025-01-14T13:17:21.0701076Z         simulation_state,
2025-01-14T13:17:21.0701157Z         opacity_state,
2025-01-14T13:17:21.0701231Z         macro_atom_state,
2025-01-14T13:17:21.0701305Z         plasma,
2025-01-14T13:17:21.0701379Z         no_of_packets,
2025-01-14T13:17:21.0701536Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0701834Z         iteration=0,
2025-01-14T13:17:21.0701962Z     ):
2025-01-14T13:17:21.0702173Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0702341Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0702462Z         else:
2025-01-14T13:17:21.0702594Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0702702Z     
2025-01-14T13:17:21.0702947Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0703114Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0703229Z         )
2025-01-14T13:17:21.0703332Z     
2025-01-14T13:17:21.0703553Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0703681Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0703837Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0703912Z         else:
2025-01-14T13:17:21.0704004Z             continuum_state = None
2025-01-14T13:17:21.0704125Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0704240Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0704338Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0704643Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0704751Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0704845Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0704943Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0705015Z         ).to_numba(
2025-01-14T13:17:21.0705103Z             macro_atom_state,
2025-01-14T13:17:21.0705191Z             self.line_interaction_type,
2025-01-14T13:17:21.0705266Z         )
2025-01-14T13:17:21.0705376Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0705649Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0705722Z         ]
2025-01-14T13:17:21.0706140Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0706145Z 
2025-01-14T13:17:21.0706305Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0706496Z ________ ERROR at setup of test_opacity_state_initialize[scatter-False] ________
2025-01-14T13:17:21.0706501Z 
2025-01-14T13:17:21.0707143Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0707500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0707504Z 
2025-01-14T13:17:21.0707597Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0707766Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0707875Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0708056Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0708139Z >       sim.iterate(10)
2025-01-14T13:17:21.0708144Z 
2025-01-14T13:17:21.0708277Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0708387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0708489Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0708650Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0708758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0708763Z 
2025-01-14T13:17:21.0709033Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0709234Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0709466Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0709740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0709919Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0710055Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0710060Z 
2025-01-14T13:17:21.0710155Z     def initialize_transport_state(
2025-01-14T13:17:21.0710229Z         self,
2025-01-14T13:17:21.0710308Z         simulation_state,
2025-01-14T13:17:21.0710389Z         opacity_state,
2025-01-14T13:17:21.0710467Z         macro_atom_state,
2025-01-14T13:17:21.0710548Z         plasma,
2025-01-14T13:17:21.0710623Z         no_of_packets,
2025-01-14T13:17:21.0710711Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0710785Z         iteration=0,
2025-01-14T13:17:21.0710862Z     ):
2025-01-14T13:17:21.0710987Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0711095Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0711166Z         else:
2025-01-14T13:17:21.0711253Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0711407Z     
2025-01-14T13:17:21.0711763Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0711895Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0711976Z         )
2025-01-14T13:17:21.0712044Z     
2025-01-14T13:17:21.0712182Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0712304Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0712461Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0712538Z         else:
2025-01-14T13:17:21.0712622Z             continuum_state = None
2025-01-14T13:17:21.0712731Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0712838Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0713064Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0713176Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0713278Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0713377Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0713473Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0713545Z         ).to_numba(
2025-01-14T13:17:21.0713628Z             macro_atom_state,
2025-01-14T13:17:21.0713720Z             self.line_interaction_type,
2025-01-14T13:17:21.0713788Z         )
2025-01-14T13:17:21.0713894Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0714166Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0714238Z         ]
2025-01-14T13:17:21.0714539Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0714549Z 
2025-01-14T13:17:21.0714702Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0714881Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-False] _______
2025-01-14T13:17:21.0714891Z 
2025-01-14T13:17:21.0715521Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0715874Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0715879Z 
2025-01-14T13:17:21.0715968Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0716129Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0716226Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0716403Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0716484Z >       sim.iterate(10)
2025-01-14T13:17:21.0716489Z 
2025-01-14T13:17:21.0716615Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0716726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0716828Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0716989Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0717093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0717097Z 
2025-01-14T13:17:21.0717365Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0717565Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0717792Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0718064Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0718236Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0718370Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0718526Z 
2025-01-14T13:17:21.0718621Z     def initialize_transport_state(
2025-01-14T13:17:21.0718697Z         self,
2025-01-14T13:17:21.0718775Z         simulation_state,
2025-01-14T13:17:21.0718857Z         opacity_state,
2025-01-14T13:17:21.0718933Z         macro_atom_state,
2025-01-14T13:17:21.0719010Z         plasma,
2025-01-14T13:17:21.0719083Z         no_of_packets,
2025-01-14T13:17:21.0719169Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0719243Z         iteration=0,
2025-01-14T13:17:21.0719316Z     ):
2025-01-14T13:17:21.0719441Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0719543Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0719612Z         else:
2025-01-14T13:17:21.0719774Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0719841Z     
2025-01-14T13:17:21.0719985Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0720085Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0720161Z         )
2025-01-14T13:17:21.0720234Z     
2025-01-14T13:17:21.0720365Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0720483Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0720638Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0720714Z         else:
2025-01-14T13:17:21.0720799Z             continuum_state = None
2025-01-14T13:17:21.0720906Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0721013Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0721111Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0721220Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0721331Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0721425Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0721527Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0721857Z         ).to_numba(
2025-01-14T13:17:21.0721994Z             macro_atom_state,
2025-01-14T13:17:21.0722128Z             self.line_interaction_type,
2025-01-14T13:17:21.0722202Z         )
2025-01-14T13:17:21.0722314Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0722583Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0722659Z         ]
2025-01-14T13:17:21.0722960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0722964Z 
2025-01-14T13:17:21.0723119Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0723296Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-True] ________
2025-01-14T13:17:21.0723307Z 
2025-01-14T13:17:21.0723947Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0724304Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0724308Z 
2025-01-14T13:17:21.0724399Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0724564Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0724662Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0724841Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0724918Z >       sim.iterate(10)
2025-01-14T13:17:21.0724923Z 
2025-01-14T13:17:21.0725053Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0725169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0725263Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0725571Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0725677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0725682Z 
2025-01-14T13:17:21.0725945Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0726147Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0726369Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0726638Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0726801Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0727047Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0727052Z 
2025-01-14T13:17:21.0727139Z     def initialize_transport_state(
2025-01-14T13:17:21.0727219Z         self,
2025-01-14T13:17:21.0727298Z         simulation_state,
2025-01-14T13:17:21.0727377Z         opacity_state,
2025-01-14T13:17:21.0727452Z         macro_atom_state,
2025-01-14T13:17:21.0727535Z         plasma,
2025-01-14T13:17:21.0727608Z         no_of_packets,
2025-01-14T13:17:21.0727693Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0727766Z         iteration=0,
2025-01-14T13:17:21.0727840Z     ):
2025-01-14T13:17:21.0727964Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0728063Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0728132Z         else:
2025-01-14T13:17:21.0728216Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0728284Z     
2025-01-14T13:17:21.0728427Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0728533Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0728599Z         )
2025-01-14T13:17:21.0728672Z     
2025-01-14T13:17:21.0728808Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0728928Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0729086Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0729162Z         else:
2025-01-14T13:17:21.0729246Z             continuum_state = None
2025-01-14T13:17:21.0729353Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0729461Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0729563Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0729668Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0729771Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0729864Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0729967Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0730046Z         ).to_numba(
2025-01-14T13:17:21.0730124Z             macro_atom_state,
2025-01-14T13:17:21.0730221Z             self.line_interaction_type,
2025-01-14T13:17:21.0730289Z         )
2025-01-14T13:17:21.0730397Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0730670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0730745Z         ]
2025-01-14T13:17:21.0731044Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0731049Z 
2025-01-14T13:17:21.0731199Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0731376Z ______ ERROR at setup of test_opacity_state_initialize[downbranch-False] _______
2025-01-14T13:17:21.0731386Z 
2025-01-14T13:17:21.0732222Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0732720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0732726Z 
2025-01-14T13:17:21.0732818Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0732982Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0733078Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0733256Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0733332Z >       sim.iterate(10)
2025-01-14T13:17:21.0733343Z 
2025-01-14T13:17:21.0733464Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0733578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0733781Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0733941Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0734051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0734055Z 
2025-01-14T13:17:21.0734325Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0734525Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0734754Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0735026Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0735198Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0735338Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0735349Z 
2025-01-14T13:17:21.0735438Z     def initialize_transport_state(
2025-01-14T13:17:21.0735513Z         self,
2025-01-14T13:17:21.0735593Z         simulation_state,
2025-01-14T13:17:21.0735677Z         opacity_state,
2025-01-14T13:17:21.0735759Z         macro_atom_state,
2025-01-14T13:17:21.0735838Z         plasma,
2025-01-14T13:17:21.0735913Z         no_of_packets,
2025-01-14T13:17:21.0736004Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0736082Z         iteration=0,
2025-01-14T13:17:21.0736157Z     ):
2025-01-14T13:17:21.0736285Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0736389Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0736459Z         else:
2025-01-14T13:17:21.0736545Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0736620Z     
2025-01-14T13:17:21.0736756Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0736859Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0736932Z         )
2025-01-14T13:17:21.0737004Z     
2025-01-14T13:17:21.0737135Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0737253Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0737410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0737487Z         else:
2025-01-14T13:17:21.0737569Z             continuum_state = None
2025-01-14T13:17:21.0737677Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0737792Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0737887Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0737993Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0738096Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0738195Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0738285Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0738360Z         ).to_numba(
2025-01-14T13:17:21.0738443Z             macro_atom_state,
2025-01-14T13:17:21.0738534Z             self.line_interaction_type,
2025-01-14T13:17:21.0738602Z         )
2025-01-14T13:17:21.0738707Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0739063Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0739135Z         ]
2025-01-14T13:17:21.0739437Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0739441Z 
2025-01-14T13:17:21.0739592Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0739768Z _______ ERROR at setup of test_opacity_state_initialize[downbranch-True] _______
2025-01-14T13:17:21.0739778Z 
2025-01-14T13:17:21.0740398Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0740843Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0740852Z 
2025-01-14T13:17:21.0740942Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0741103Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0741271Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0741515Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0741758Z >       sim.iterate(10)
2025-01-14T13:17:21.0741774Z 
2025-01-14T13:17:21.0741913Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0742028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0742125Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0742285Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0742400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0742404Z 
2025-01-14T13:17:21.0742678Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0742879Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0743108Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0743383Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0743550Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0743690Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0743694Z 
2025-01-14T13:17:21.0743781Z     def initialize_transport_state(
2025-01-14T13:17:21.0743858Z         self,
2025-01-14T13:17:21.0743942Z         simulation_state,
2025-01-14T13:17:21.0744027Z         opacity_state,
2025-01-14T13:17:21.0744102Z         macro_atom_state,
2025-01-14T13:17:21.0744179Z         plasma,
2025-01-14T13:17:21.0744253Z         no_of_packets,
2025-01-14T13:17:21.0744381Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0744507Z         iteration=0,
2025-01-14T13:17:21.0744613Z     ):
2025-01-14T13:17:21.0744742Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0744844Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0744922Z         else:
2025-01-14T13:17:21.0744999Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0745071Z     
2025-01-14T13:17:21.0745208Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0745310Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0745377Z         )
2025-01-14T13:17:21.0745451Z     
2025-01-14T13:17:21.0753698Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0753895Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0754068Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0754147Z         else:
2025-01-14T13:17:21.0754416Z             continuum_state = None
2025-01-14T13:17:21.0754534Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0754652Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0754753Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0754867Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0754973Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0755073Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0755165Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0755242Z         ).to_numba(
2025-01-14T13:17:21.0755322Z             macro_atom_state,
2025-01-14T13:17:21.0755415Z             self.line_interaction_type,
2025-01-14T13:17:21.0755594Z         )
2025-01-14T13:17:21.0755701Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0755983Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0756064Z         ]
2025-01-14T13:17:21.0756374Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0756379Z 
2025-01-14T13:17:21.0756545Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0756722Z _____________ ERROR at setup of test_VPacketCollection_add_packet ______________
2025-01-14T13:17:21.0756732Z 
2025-01-14T13:17:21.0757372Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0757724Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0757734Z 
2025-01-14T13:17:21.0757827Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0758002Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0758102Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0758283Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0758364Z >       sim.iterate(10)
2025-01-14T13:17:21.0758369Z 
2025-01-14T13:17:21.0758491Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0758606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0758703Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0758865Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0758969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0758979Z 
2025-01-14T13:17:21.0759247Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0759444Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0759672Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0759952Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0760112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0760248Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0760253Z 
2025-01-14T13:17:21.0760343Z     def initialize_transport_state(
2025-01-14T13:17:21.0760418Z         self,
2025-01-14T13:17:21.0760497Z         simulation_state,
2025-01-14T13:17:21.0760576Z         opacity_state,
2025-01-14T13:17:21.0760651Z         macro_atom_state,
2025-01-14T13:17:21.0760734Z         plasma,
2025-01-14T13:17:21.0760808Z         no_of_packets,
2025-01-14T13:17:21.0760898Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0760970Z         iteration=0,
2025-01-14T13:17:21.0761159Z     ):
2025-01-14T13:17:21.0761290Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0761393Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0761467Z         else:
2025-01-14T13:17:21.0761544Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0761834Z     
2025-01-14T13:17:21.0762048Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0762157Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0762225Z         )
2025-01-14T13:17:21.0762295Z     
2025-01-14T13:17:21.0762425Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0762542Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0762696Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0762906Z         else:
2025-01-14T13:17:21.0762989Z             continuum_state = None
2025-01-14T13:17:21.0763097Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0763207Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0763305Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0763417Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0763516Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0763615Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0763706Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0763781Z         ).to_numba(
2025-01-14T13:17:21.0763860Z             macro_atom_state,
2025-01-14T13:17:21.0763951Z             self.line_interaction_type,
2025-01-14T13:17:21.0764017Z         )
2025-01-14T13:17:21.0764123Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0764395Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0764473Z         ]
2025-01-14T13:17:21.0764772Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0764781Z 
2025-01-14T13:17:21.0764935Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0765122Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-11-132] _
2025-01-14T13:17:21.0765126Z 
2025-01-14T13:17:21.0765755Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0766104Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0766114Z 
2025-01-14T13:17:21.0766203Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0766364Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0766461Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0766645Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0766726Z >       sim.iterate(10)
2025-01-14T13:17:21.0766731Z 
2025-01-14T13:17:21.0766850Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0766963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0767062Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0767226Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0767331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0767336Z 
2025-01-14T13:17:21.0767606Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0767812Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0768041Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0768438Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0768601Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0768744Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0768748Z 
2025-01-14T13:17:21.0768837Z     def initialize_transport_state(
2025-01-14T13:17:21.0768910Z         self,
2025-01-14T13:17:21.0768988Z         simulation_state,
2025-01-14T13:17:21.0769067Z         opacity_state,
2025-01-14T13:17:21.0769142Z         macro_atom_state,
2025-01-14T13:17:21.0769267Z         plasma,
2025-01-14T13:17:21.0769382Z         no_of_packets,
2025-01-14T13:17:21.0769526Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0769768Z         iteration=0,
2025-01-14T13:17:21.0769887Z     ):
2025-01-14T13:17:21.0770094Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0770257Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0770375Z         else:
2025-01-14T13:17:21.0770457Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0770529Z     
2025-01-14T13:17:21.0770667Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0770772Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0770840Z         )
2025-01-14T13:17:21.0770910Z     
2025-01-14T13:17:21.0771041Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0771158Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0771319Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0771392Z         else:
2025-01-14T13:17:21.0771474Z             continuum_state = None
2025-01-14T13:17:21.0771769Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0771986Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0772124Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0772244Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0772344Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0772445Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0772534Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0772610Z         ).to_numba(
2025-01-14T13:17:21.0772689Z             macro_atom_state,
2025-01-14T13:17:21.0772781Z             self.line_interaction_type,
2025-01-14T13:17:21.0772848Z         )
2025-01-14T13:17:21.0772953Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0773223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0773296Z         ]
2025-01-14T13:17:21.0773603Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0773614Z 
2025-01-14T13:17:21.0773761Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0773953Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-1-133] __
2025-01-14T13:17:21.0773958Z 
2025-01-14T13:17:21.0774588Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0774941Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0774946Z 
2025-01-14T13:17:21.0775035Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0775199Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0775304Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0775477Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0775698Z >       sim.iterate(10)
2025-01-14T13:17:21.0775702Z 
2025-01-14T13:17:21.0775823Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0775937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0776034Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0776191Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0776294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0776299Z 
2025-01-14T13:17:21.0776567Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0776767Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0777119Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0777395Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0777563Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0777699Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0777704Z 
2025-01-14T13:17:21.0777790Z     def initialize_transport_state(
2025-01-14T13:17:21.0777864Z         self,
2025-01-14T13:17:21.0777940Z         simulation_state,
2025-01-14T13:17:21.0778020Z         opacity_state,
2025-01-14T13:17:21.0778094Z         macro_atom_state,
2025-01-14T13:17:21.0778170Z         plasma,
2025-01-14T13:17:21.0778242Z         no_of_packets,
2025-01-14T13:17:21.0778329Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0778407Z         iteration=0,
2025-01-14T13:17:21.0778475Z     ):
2025-01-14T13:17:21.0778604Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0778702Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0778774Z         else:
2025-01-14T13:17:21.0778853Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0778926Z     
2025-01-14T13:17:21.0779063Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0779162Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0779229Z         )
2025-01-14T13:17:21.0779299Z     
2025-01-14T13:17:21.0779428Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0779545Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0779697Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0779770Z         else:
2025-01-14T13:17:21.0779852Z             continuum_state = None
2025-01-14T13:17:21.0779956Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0780068Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0780162Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0780271Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0780366Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0780465Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0780554Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0780629Z         ).to_numba(
2025-01-14T13:17:21.0780705Z             macro_atom_state,
2025-01-14T13:17:21.0780797Z             self.line_interaction_type,
2025-01-14T13:17:21.0780863Z         )
2025-01-14T13:17:21.0780968Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0781232Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0781307Z         ]
2025-01-14T13:17:21.0781775Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0781795Z 
2025-01-14T13:17:21.0781946Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0782130Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-2-133] __
2025-01-14T13:17:21.0782255Z 
2025-01-14T13:17:21.0782886Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0783242Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0783247Z 
2025-01-14T13:17:21.0783336Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0783500Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0783600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0783774Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0783957Z >       sim.iterate(10)
2025-01-14T13:17:21.0783962Z 
2025-01-14T13:17:21.0784082Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0784198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0784293Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0784450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0784552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0784556Z 
2025-01-14T13:17:21.0784821Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0785025Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0785243Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0785521Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0785686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0785825Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0785829Z 
2025-01-14T13:17:21.0785914Z     def initialize_transport_state(
2025-01-14T13:17:21.0785988Z         self,
2025-01-14T13:17:21.0786065Z         simulation_state,
2025-01-14T13:17:21.0786144Z         opacity_state,
2025-01-14T13:17:21.0786219Z         macro_atom_state,
2025-01-14T13:17:21.0786295Z         plasma,
2025-01-14T13:17:21.0786369Z         no_of_packets,
2025-01-14T13:17:21.0786455Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0786532Z         iteration=0,
2025-01-14T13:17:21.0786598Z     ):
2025-01-14T13:17:21.0786727Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0786824Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0786899Z         else:
2025-01-14T13:17:21.0786980Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0787051Z     
2025-01-14T13:17:21.0787186Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0787290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0787356Z         )
2025-01-14T13:17:21.0787427Z     
2025-01-14T13:17:21.0787557Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0787672Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0787821Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0787898Z         else:
2025-01-14T13:17:21.0787980Z             continuum_state = None
2025-01-14T13:17:21.0788088Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0788198Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0788287Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0788395Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0788493Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0788591Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0788680Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0788843Z         ).to_numba(
2025-01-14T13:17:21.0788921Z             macro_atom_state,
2025-01-14T13:17:21.0789015Z             self.line_interaction_type,
2025-01-14T13:17:21.0789082Z         )
2025-01-14T13:17:21.0789184Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0789451Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0789523Z         ]
2025-01-14T13:17:21.0789823Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0789828Z 
2025-01-14T13:17:21.0789973Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0790252Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-132] _
2025-01-14T13:17:21.0790257Z 
2025-01-14T13:17:21.0790878Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0791233Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0791237Z 
2025-01-14T13:17:21.0791331Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0791484Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0791680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0791855Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0791936Z >       sim.iterate(10)
2025-01-14T13:17:21.0791945Z 
2025-01-14T13:17:21.0792062Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0792173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0792271Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0792427Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0792530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0792539Z 
2025-01-14T13:17:21.0792801Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0793008Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0793227Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0793502Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0793659Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0793800Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0793804Z 
2025-01-14T13:17:21.0793888Z     def initialize_transport_state(
2025-01-14T13:17:21.0793967Z         self,
2025-01-14T13:17:21.0794045Z         simulation_state,
2025-01-14T13:17:21.0794124Z         opacity_state,
2025-01-14T13:17:21.0794199Z         macro_atom_state,
2025-01-14T13:17:21.0794273Z         plasma,
2025-01-14T13:17:21.0794352Z         no_of_packets,
2025-01-14T13:17:21.0794432Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0794509Z         iteration=0,
2025-01-14T13:17:21.0794578Z     ):
2025-01-14T13:17:21.0794703Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0794796Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0794872Z         else:
2025-01-14T13:17:21.0794948Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0795019Z     
2025-01-14T13:17:21.0795153Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0795256Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0795323Z         )
2025-01-14T13:17:21.0795393Z     
2025-01-14T13:17:21.0795645Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0795760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0795908Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0795981Z         else:
2025-01-14T13:17:21.0796067Z             continuum_state = None
2025-01-14T13:17:21.0796166Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0796276Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0796366Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0796473Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0796567Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0796662Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0796862Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0796938Z         ).to_numba(
2025-01-14T13:17:21.0797014Z             macro_atom_state,
2025-01-14T13:17:21.0797110Z             self.line_interaction_type,
2025-01-14T13:17:21.0797177Z         )
2025-01-14T13:17:21.0797280Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0797545Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0797627Z         ]
2025-01-14T13:17:21.0797927Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0797932Z 
2025-01-14T13:17:21.0798084Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0798287Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-133] _
2025-01-14T13:17:21.0798292Z 
2025-01-14T13:17:21.0798915Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0799275Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0799279Z 
2025-01-14T13:17:21.0799367Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0799530Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0799625Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0799804Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0799889Z >       sim.iterate(10)
2025-01-14T13:17:21.0799893Z 
2025-01-14T13:17:21.0800010Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0800127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0800227Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0800415Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0800615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0800623Z 
2025-01-14T13:17:21.0801085Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0801433Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0802071Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0802402Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0802566Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0802705Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0802721Z 
2025-01-14T13:17:21.0802809Z     def initialize_transport_state(
2025-01-14T13:17:21.0802881Z         self,
2025-01-14T13:17:21.0802958Z         simulation_state,
2025-01-14T13:17:21.0803245Z         opacity_state,
2025-01-14T13:17:21.0803324Z         macro_atom_state,
2025-01-14T13:17:21.0803401Z         plasma,
2025-01-14T13:17:21.0803474Z         no_of_packets,
2025-01-14T13:17:21.0803559Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0803630Z         iteration=0,
2025-01-14T13:17:21.0803701Z     ):
2025-01-14T13:17:21.0803832Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0803934Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0804007Z         else:
2025-01-14T13:17:21.0804085Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0804157Z     
2025-01-14T13:17:21.0804294Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0804395Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0804579Z         )
2025-01-14T13:17:21.0804648Z     
2025-01-14T13:17:21.0804779Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0804896Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0805054Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0805125Z         else:
2025-01-14T13:17:21.0805207Z             continuum_state = None
2025-01-14T13:17:21.0805313Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0805419Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0805518Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0805630Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0805729Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0805831Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0805920Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0806002Z         ).to_numba(
2025-01-14T13:17:21.0806081Z             macro_atom_state,
2025-01-14T13:17:21.0806173Z             self.line_interaction_type,
2025-01-14T13:17:21.0806240Z         )
2025-01-14T13:17:21.0806350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0806617Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0806693Z         ]
2025-01-14T13:17:21.0806991Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0807002Z 
2025-01-14T13:17:21.0807149Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0807371Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] _
2025-01-14T13:17:21.0807375Z 
2025-01-14T13:17:21.0808005Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0808361Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0808369Z 
2025-01-14T13:17:21.0808458Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0808622Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0808724Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0808899Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0808981Z >       sim.iterate(10)
2025-01-14T13:17:21.0808985Z 
2025-01-14T13:17:21.0809107Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0809221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0809317Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0809480Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0809585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0809679Z 
2025-01-14T13:17:21.0809952Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0810150Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0810377Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0810654Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0810813Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0810948Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0810952Z 
2025-01-14T13:17:21.0811038Z     def initialize_transport_state(
2025-01-14T13:17:21.0811115Z         self,
2025-01-14T13:17:21.0811273Z         simulation_state,
2025-01-14T13:17:21.0811356Z         opacity_state,
2025-01-14T13:17:21.0811429Z         macro_atom_state,
2025-01-14T13:17:21.0811507Z         plasma,
2025-01-14T13:17:21.0811757Z         no_of_packets,
2025-01-14T13:17:21.0811855Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0811935Z         iteration=0,
2025-01-14T13:17:21.0812003Z     ):
2025-01-14T13:17:21.0812134Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0812230Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0812303Z         else:
2025-01-14T13:17:21.0812381Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0812453Z     
2025-01-14T13:17:21.0812587Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0812688Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0812759Z         )
2025-01-14T13:17:21.0812829Z     
2025-01-14T13:17:21.0812965Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0813090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0813240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0813316Z         else:
2025-01-14T13:17:21.0813399Z             continuum_state = None
2025-01-14T13:17:21.0813504Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0813616Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0813706Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0813815Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0813909Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0814003Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0814090Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0814163Z         ).to_numba(
2025-01-14T13:17:21.0814239Z             macro_atom_state,
2025-01-14T13:17:21.0814332Z             self.line_interaction_type,
2025-01-14T13:17:21.0814400Z         )
2025-01-14T13:17:21.0814502Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0814768Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0814843Z         ]
2025-01-14T13:17:21.0815140Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0815151Z 
2025-01-14T13:17:21.0815297Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0815489Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132--1-199] _
2025-01-14T13:17:21.0815494Z 
2025-01-14T13:17:21.0816117Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0816470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0816475Z 
2025-01-14T13:17:21.0816688Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0816847Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0816945Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0817114Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0817196Z >       sim.iterate(10)
2025-01-14T13:17:21.0817200Z 
2025-01-14T13:17:21.0817320Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0817434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0817526Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0817682Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0817783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0817891Z 
2025-01-14T13:17:21.0818160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0818372Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0818589Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0818866Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0819022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0819158Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0819162Z 
2025-01-14T13:17:21.0819249Z     def initialize_transport_state(
2025-01-14T13:17:21.0819322Z         self,
2025-01-14T13:17:21.0819398Z         simulation_state,
2025-01-14T13:17:21.0819476Z         opacity_state,
2025-01-14T13:17:21.0819555Z         macro_atom_state,
2025-01-14T13:17:21.0819630Z         plasma,
2025-01-14T13:17:21.0819701Z         no_of_packets,
2025-01-14T13:17:21.0819786Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0819867Z         iteration=0,
2025-01-14T13:17:21.0819934Z     ):
2025-01-14T13:17:21.0820062Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0820153Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0820225Z         else:
2025-01-14T13:17:21.0820304Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0820374Z     
2025-01-14T13:17:21.0820509Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0820610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0820676Z         )
2025-01-14T13:17:21.0820746Z     
2025-01-14T13:17:21.0820874Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0820994Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0821153Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0821226Z         else:
2025-01-14T13:17:21.0821312Z             continuum_state = None
2025-01-14T13:17:21.0821412Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0821532Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0821818Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0821939Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0822039Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0822140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0822229Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0822306Z         ).to_numba(
2025-01-14T13:17:21.0822384Z             macro_atom_state,
2025-01-14T13:17:21.0822478Z             self.line_interaction_type,
2025-01-14T13:17:21.0822544Z         )
2025-01-14T13:17:21.0822655Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0822931Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0823005Z         ]
2025-01-14T13:17:21.0823311Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0823439Z 
2025-01-14T13:17:21.0823596Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0823793Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-0-132] _
2025-01-14T13:17:21.0823798Z 
2025-01-14T13:17:21.0824429Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0824784Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0824913Z 
2025-01-14T13:17:21.0825011Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0825176Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0825286Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0825459Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0825538Z >       sim.iterate(10)
2025-01-14T13:17:21.0825543Z 
2025-01-14T13:17:21.0825658Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0825772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0825865Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0826022Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0826123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0826138Z 
2025-01-14T13:17:21.0826397Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0826605Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0826822Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0827103Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0827262Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0827398Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0827402Z 
2025-01-14T13:17:21.0827494Z     def initialize_transport_state(
2025-01-14T13:17:21.0827567Z         self,
2025-01-14T13:17:21.0827651Z         simulation_state,
2025-01-14T13:17:21.0827733Z         opacity_state,
2025-01-14T13:17:21.0827818Z         macro_atom_state,
2025-01-14T13:17:21.0827892Z         plasma,
2025-01-14T13:17:21.0827971Z         no_of_packets,
2025-01-14T13:17:21.0828057Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0828134Z         iteration=0,
2025-01-14T13:17:21.0828199Z     ):
2025-01-14T13:17:21.0828327Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0828424Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0828497Z         else:
2025-01-14T13:17:21.0828573Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0828646Z     
2025-01-14T13:17:21.0828778Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0828878Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0828945Z         )
2025-01-14T13:17:21.0829016Z     
2025-01-14T13:17:21.0829145Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0829262Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0829413Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0829487Z         else:
2025-01-14T13:17:21.0829585Z             continuum_state = None
2025-01-14T13:17:21.0829688Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0829799Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0829978Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0830090Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0830187Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0830294Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0830387Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0830462Z         ).to_numba(
2025-01-14T13:17:21.0830541Z             macro_atom_state,
2025-01-14T13:17:21.0830634Z             self.line_interaction_type,
2025-01-14T13:17:21.0830700Z         )
2025-01-14T13:17:21.0830807Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0831071Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0831234Z         ]
2025-01-14T13:17:21.0831540Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0831545Z 
2025-01-14T13:17:21.0831807Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0831998Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-20-154] _
2025-01-14T13:17:21.0832002Z 
2025-01-14T13:17:21.0832623Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0832974Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0832978Z 
2025-01-14T13:17:21.0833078Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0833238Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0833351Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0833524Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0833616Z >       sim.iterate(10)
2025-01-14T13:17:21.0833621Z 
2025-01-14T13:17:21.0833741Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0833855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0833948Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0834105Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0834210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0834220Z 
2025-01-14T13:17:21.0834482Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0834686Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0834907Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0835186Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0835352Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0835488Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0835492Z 
2025-01-14T13:17:21.0835577Z     def initialize_transport_state(
2025-01-14T13:17:21.0835650Z         self,
2025-01-14T13:17:21.0835728Z         simulation_state,
2025-01-14T13:17:21.0835808Z         opacity_state,
2025-01-14T13:17:21.0835890Z         macro_atom_state,
2025-01-14T13:17:21.0835963Z         plasma,
2025-01-14T13:17:21.0836042Z         no_of_packets,
2025-01-14T13:17:21.0836123Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0836200Z         iteration=0,
2025-01-14T13:17:21.0836264Z     ):
2025-01-14T13:17:21.0836396Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0836493Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0836566Z         else:
2025-01-14T13:17:21.0836777Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0836853Z     
2025-01-14T13:17:21.0836987Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0837085Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0837150Z         )
2025-01-14T13:17:21.0837220Z     
2025-01-14T13:17:21.0837351Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0837467Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0837622Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0837689Z         else:
2025-01-14T13:17:21.0837775Z             continuum_state = None
2025-01-14T13:17:21.0837870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0838087Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0838177Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0838285Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0838384Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0838480Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0838570Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0838645Z         ).to_numba(
2025-01-14T13:17:21.0838721Z             macro_atom_state,
2025-01-14T13:17:21.0838812Z             self.line_interaction_type,
2025-01-14T13:17:21.0838879Z         )
2025-01-14T13:17:21.0838982Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0839253Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0839318Z         ]
2025-01-14T13:17:21.0839619Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0839628Z 
2025-01-14T13:17:21.0839770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0839931Z _________________ ERROR at setup of test_boundary_interactions _________________
2025-01-14T13:17:21.0839939Z 
2025-01-14T13:17:21.0840106Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.0840438Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.0840443Z 
2025-01-14T13:17:21.0840537Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0840619Z         "expected,obtained",
2025-01-14T13:17:21.0840690Z         [
2025-01-14T13:17:21.0840755Z             (
2025-01-14T13:17:21.0840867Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.0840971Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.0841045Z             ),
2025-01-14T13:17:21.0841201Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.0841325Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.0841392Z         ],
2025-01-14T13:17:21.0841467Z     )
2025-01-14T13:17:21.0841775Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.0841900Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0841904Z 
2025-01-14T13:17:21.0842070Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.0842186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0842473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0842588Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0842887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0842991Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0843239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0843486Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0843778Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0843873Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0844117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0844193Z     raise exc
2025-01-14T13:17:21.0844429Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0844524Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0844754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0844924Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0845280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0845479Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0845722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0845890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0846200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0846301Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0846653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0846720Z     yield
2025-01-14T13:17:21.0847044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0847158Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0847531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0847602Z     yield
2025-01-14T13:17:21.0847882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0847977Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0848234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0848304Z     yield
2025-01-14T13:17:21.0848570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0848645Z     return (yield)
2025-01-14T13:17:21.0848918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0849000Z     return (yield)
2025-01-14T13:17:21.0849266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0849341Z     raise e
2025-01-14T13:17:21.0849605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0849683Z     item.runtest()
2025-01-14T13:17:21.0849913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0850029Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0850262Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0850448Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0850691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0850860Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0851134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0851329Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0851697Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0851811Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0852077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0852197Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0852481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0852583Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0852815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0853062Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0853347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0853450Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0853682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0853756Z     raise exc
2025-01-14T13:17:21.0853989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0854080Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0854311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0854470Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0854704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0854894Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0855133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0855299Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0855606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0855708Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0856055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0856125Z     yield
2025-01-14T13:17:21.0856443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0856554Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0856922Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0856999Z     yield
2025-01-14T13:17:21.0857268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0857373Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0857623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0857693Z     yield
2025-01-14T13:17:21.0857959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0858034Z     return (yield)
2025-01-14T13:17:21.0858317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0858389Z     return (yield)
2025-01-14T13:17:21.0858662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0858733Z     raise e
2025-01-14T13:17:21.0859004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0859195Z     item.runtest()
2025-01-14T13:17:21.0859430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0859539Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0859772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0859956Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0860196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0860358Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0860625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0860798Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0861068Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0861191Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0861456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0861736Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0862052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0862156Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0862395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0862518Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0862809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0862908Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0863146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.0863321Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.0863552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0863737Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0863974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0864138Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0864421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.0864496Z     return (yield)
2025-01-14T13:17:21.0864784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.0864921Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.0865188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.0865283Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.0865415Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.0865494Z     sim = run_tardis(
2025-01-14T13:17:21.0865577Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0865670Z     simulation.run_convergence()
2025-01-14T13:17:21.0865790Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0865929Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0866025Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0866176Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0866295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0866300Z 
2025-01-14T13:17:21.0866560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.0866907Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.0867126Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.0867397Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.0867559Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.0867697Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0867701Z 
2025-01-14T13:17:21.0867790Z     def initialize_transport_state(
2025-01-14T13:17:21.0867858Z         self,
2025-01-14T13:17:21.0867938Z         simulation_state,
2025-01-14T13:17:21.0868119Z         opacity_state,
2025-01-14T13:17:21.0868200Z         macro_atom_state,
2025-01-14T13:17:21.0868273Z         plasma,
2025-01-14T13:17:21.0868349Z         no_of_packets,
2025-01-14T13:17:21.0868428Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0868509Z         iteration=0,
2025-01-14T13:17:21.0868574Z     ):
2025-01-14T13:17:21.0868700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0868795Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0868870Z         else:
2025-01-14T13:17:21.0868948Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0869016Z     
2025-01-14T13:17:21.0869157Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0869251Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0869321Z         )
2025-01-14T13:17:21.0869384Z     
2025-01-14T13:17:21.0869518Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0869631Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0869794Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0869860Z         else:
2025-01-14T13:17:21.0869946Z             continuum_state = None
2025-01-14T13:17:21.0870050Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0870161Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0870250Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0870360Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0870459Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0870556Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0870654Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0870722Z         ).to_numba(
2025-01-14T13:17:21.0870802Z             macro_atom_state,
2025-01-14T13:17:21.0870888Z             self.line_interaction_type,
2025-01-14T13:17:21.0870958Z         )
2025-01-14T13:17:21.0871061Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0871335Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0871404Z         ]
2025-01-14T13:17:21.0871811Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0871817Z 
2025-01-14T13:17:21.0871996Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0872171Z _____________ ERROR at setup of test_rpacket_trackers_to_dataframe _____________
2025-01-14T13:17:21.0872175Z 
2025-01-14T13:17:21.0872347Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.0872667Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.0872672Z 
2025-01-14T13:17:21.0872765Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0872848Z         "expected,obtained",
2025-01-14T13:17:21.0872921Z         [
2025-01-14T13:17:21.0872987Z             (
2025-01-14T13:17:21.0873100Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.0873207Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.0873400Z             ),
2025-01-14T13:17:21.0873550Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.0873673Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.0873749Z         ],
2025-01-14T13:17:21.0873814Z     )
2025-01-14T13:17:21.0873977Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.0874096Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0874101Z 
2025-01-14T13:17:21.0874272Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.0874381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0874769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0874886Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0875186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0875283Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0875531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0875660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0875947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0876047Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0876286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0876360Z     raise exc
2025-01-14T13:17:21.0876606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0876698Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0876929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0877101Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0877333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0877526Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0877768Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0877931Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0878240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0878347Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0878697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0878769Z     yield
2025-01-14T13:17:21.0879092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0879201Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0879587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0879660Z     yield
2025-01-14T13:17:21.0879935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0880035Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0880283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0880360Z     yield
2025-01-14T13:17:21.0880629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0880707Z     return (yield)
2025-01-14T13:17:21.0881095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0881171Z     return (yield)
2025-01-14T13:17:21.0881437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0881511Z     raise e
2025-01-14T13:17:21.0881872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0881946Z     item.runtest()
2025-01-14T13:17:21.0882179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0882293Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0882526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0882829Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0883079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0883244Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0883514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0883607Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0883877Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0883995Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0884256Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0884380Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0884670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0884772Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0885013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0885141Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0885423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0885522Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0885764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0885833Z     raise exc
2025-01-14T13:17:21.0886071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0886158Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0886397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0886556Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0886792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0886976Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0887216Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0887381Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0887683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0887787Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0888130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0888207Z     yield
2025-01-14T13:17:21.0888522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0888756Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0889129Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0889202Z     yield
2025-01-14T13:17:21.0889471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0889570Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0889821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0889887Z     yield
2025-01-14T13:17:21.0890161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0890317Z     return (yield)
2025-01-14T13:17:21.0890599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0890670Z     return (yield)
2025-01-14T13:17:21.0890943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0891010Z     raise e
2025-01-14T13:17:21.0891275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0891350Z     item.runtest()
2025-01-14T13:17:21.0891681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0891799Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0892026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0892218Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0892460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0892625Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0892897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0892990Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0893257Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0893370Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0893639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0893753Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0894042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0894142Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0894382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0894502Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0894792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0894885Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0895125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.0895298Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.0895524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0895716Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0895949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0896116Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0896402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.0896609Z     return (yield)
2025-01-14T13:17:21.0896892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.0897030Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.0897298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.0897389Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.0897523Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.0897595Z     sim = run_tardis(
2025-01-14T13:17:21.0897683Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0897768Z     simulation.run_convergence()
2025-01-14T13:17:21.0897991Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0898131Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0898230Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0898387Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0898499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0898504Z 
2025-01-14T13:17:21.0898765Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.0898969Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.0899193Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.0899459Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.0899621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.0899764Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0899768Z 
2025-01-14T13:17:21.0899858Z     def initialize_transport_state(
2025-01-14T13:17:21.0899930Z         self,
2025-01-14T13:17:21.0900012Z         simulation_state,
2025-01-14T13:17:21.0900085Z         opacity_state,
2025-01-14T13:17:21.0900164Z         macro_atom_state,
2025-01-14T13:17:21.0900233Z         plasma,
2025-01-14T13:17:21.0900309Z         no_of_packets,
2025-01-14T13:17:21.0900393Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0900464Z         iteration=0,
2025-01-14T13:17:21.0900538Z     ):
2025-01-14T13:17:21.0900664Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0900765Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0900837Z         else:
2025-01-14T13:17:21.0900918Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0900981Z     
2025-01-14T13:17:21.0901118Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0901217Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0901288Z         )
2025-01-14T13:17:21.0901353Z     
2025-01-14T13:17:21.0901487Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0901777Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0901948Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0902019Z         else:
2025-01-14T13:17:21.0902105Z             continuum_state = None
2025-01-14T13:17:21.0902218Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0902323Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0902419Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0902523Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0902626Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0902717Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0902816Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0902884Z         ).to_numba(
2025-01-14T13:17:21.0902967Z             macro_atom_state,
2025-01-14T13:17:21.0903188Z             self.line_interaction_type,
2025-01-14T13:17:21.0903261Z         )
2025-01-14T13:17:21.0903360Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0903639Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0903710Z         ]
2025-01-14T13:17:21.0904009Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0904014Z 
2025-01-14T13:17:21.0904162Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0904323Z ______________ ERROR at setup of test_trace_vpacket_within_shell _______________
2025-01-14T13:17:21.0904327Z 
2025-01-14T13:17:21.0904466Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0904875Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0904880Z 
2025-01-14T13:17:21.0904980Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0905063Z         "expected,obtained",
2025-01-14T13:17:21.0905134Z         [
2025-01-14T13:17:21.0905211Z             (
2025-01-14T13:17:21.0905299Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0905391Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0905456Z             ),
2025-01-14T13:17:21.0905528Z             (
2025-01-14T13:17:21.0905612Z                 "shell_id_in_use",
2025-01-14T13:17:21.0905698Z                 "shell_id_to_check",
2025-01-14T13:17:21.0905764Z             ),
2025-01-14T13:17:21.0905835Z             (
2025-01-14T13:17:21.0905906Z                 "r_in_use",
2025-01-14T13:17:21.0905990Z                 "r_to_check",
2025-01-14T13:17:21.0906057Z             ),
2025-01-14T13:17:21.0906173Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0906238Z         ],
2025-01-14T13:17:21.0906309Z     )
2025-01-14T13:17:21.0906470Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0906596Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0906600Z 
2025-01-14T13:17:21.0906825Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0906930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0907265Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0907374Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0907701Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0907803Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0908130Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0908234Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0908457Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0908529Z     sim.iterate(10)
2025-01-14T13:17:21.0908628Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0908785Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0908889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0908893Z 
2025-01-14T13:17:21.0909160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0909363Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0909590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0909862Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0910026Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0910256Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0910266Z 
2025-01-14T13:17:21.0910353Z     def initialize_transport_state(
2025-01-14T13:17:21.0910425Z         self,
2025-01-14T13:17:21.0910499Z         simulation_state,
2025-01-14T13:17:21.0910577Z         opacity_state,
2025-01-14T13:17:21.0910651Z         macro_atom_state,
2025-01-14T13:17:21.0910731Z         plasma,
2025-01-14T13:17:21.0910806Z         no_of_packets,
2025-01-14T13:17:21.0910892Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0910964Z         iteration=0,
2025-01-14T13:17:21.0911035Z     ):
2025-01-14T13:17:21.0911157Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0911258Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0911414Z         else:
2025-01-14T13:17:21.0911497Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0911674Z     
2025-01-14T13:17:21.0911817Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0911917Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0911987Z         )
2025-01-14T13:17:21.0912056Z     
2025-01-14T13:17:21.0912183Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0912299Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0912454Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0912527Z         else:
2025-01-14T13:17:21.0912610Z             continuum_state = None
2025-01-14T13:17:21.0912714Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0912819Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0912919Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0913027Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0913129Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0913222Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0913325Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0913406Z         ).to_numba(
2025-01-14T13:17:21.0913484Z             macro_atom_state,
2025-01-14T13:17:21.0913575Z             self.line_interaction_type,
2025-01-14T13:17:21.0913641Z         )
2025-01-14T13:17:21.0913744Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0914006Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0914076Z         ]
2025-01-14T13:17:21.0914372Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0914377Z 
2025-01-14T13:17:21.0914526Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0914681Z _____________________ ERROR at setup of test_trace_vpacket _____________________
2025-01-14T13:17:21.0914686Z 
2025-01-14T13:17:21.0914824Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0915112Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0915117Z 
2025-01-14T13:17:21.0915201Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0915285Z         "expected,obtained",
2025-01-14T13:17:21.0915350Z         [
2025-01-14T13:17:21.0915420Z             (
2025-01-14T13:17:21.0915505Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0915595Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0915661Z             ),
2025-01-14T13:17:21.0915731Z             (
2025-01-14T13:17:21.0915806Z                 "shell_id_in_use",
2025-01-14T13:17:21.0915895Z                 "shell_id_to_check",
2025-01-14T13:17:21.0915962Z             ),
2025-01-14T13:17:21.0916037Z             (
2025-01-14T13:17:21.0916109Z                 "r_in_use",
2025-01-14T13:17:21.0916189Z                 "r_to_check",
2025-01-14T13:17:21.0916253Z             ),
2025-01-14T13:17:21.0916485Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0916559Z         ],
2025-01-14T13:17:21.0916623Z     )
2025-01-14T13:17:21.0916791Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0916902Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0916907Z 
2025-01-14T13:17:21.0917129Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0917232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0917565Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0917672Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918104Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0918215Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918538Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0918647Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918854Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0918933Z     sim.iterate(10)
2025-01-14T13:17:21.0919025Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0919181Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0919287Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0919291Z 
2025-01-14T13:17:21.0919554Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0919759Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0919982Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0920259Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0920417Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0920557Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0920561Z 
2025-01-14T13:17:21.0920647Z     def initialize_transport_state(
2025-01-14T13:17:21.0920717Z         self,
2025-01-14T13:17:21.0920791Z         simulation_state,
2025-01-14T13:17:21.0920872Z         opacity_state,
2025-01-14T13:17:21.0920945Z         macro_atom_state,
2025-01-14T13:17:21.0921021Z         plasma,
2025-01-14T13:17:21.0921092Z         no_of_packets,
2025-01-14T13:17:21.0921177Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0921252Z         iteration=0,
2025-01-14T13:17:21.0921322Z     ):
2025-01-14T13:17:21.0921444Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0921542Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0921730Z         else:
2025-01-14T13:17:21.0921806Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0921881Z     
2025-01-14T13:17:21.0922015Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0922114Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0922178Z         )
2025-01-14T13:17:21.0922246Z     
2025-01-14T13:17:21.0922371Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0922485Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0922634Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0922705Z         else:
2025-01-14T13:17:21.0922783Z             continuum_state = None
2025-01-14T13:17:21.0922892Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0922997Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0923093Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0923319Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0923417Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0923512Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0923599Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0923673Z         ).to_numba(
2025-01-14T13:17:21.0923748Z             macro_atom_state,
2025-01-14T13:17:21.0923837Z             self.line_interaction_type,
2025-01-14T13:17:21.0923902Z         )
2025-01-14T13:17:21.0924009Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0924273Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0924345Z         ]
2025-01-14T13:17:21.0924773Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0924783Z 
2025-01-14T13:17:21.0924927Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0925093Z ___________________ ERROR at setup of test_trace_bad_vpacket ___________________
2025-01-14T13:17:21.0925098Z 
2025-01-14T13:17:21.0925232Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0925518Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0925523Z 
2025-01-14T13:17:21.0925610Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0925697Z         "expected,obtained",
2025-01-14T13:17:21.0925763Z         [
2025-01-14T13:17:21.0925834Z             (
2025-01-14T13:17:21.0925923Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0926015Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0926081Z             ),
2025-01-14T13:17:21.0926156Z             (
2025-01-14T13:17:21.0926238Z                 "shell_id_in_use",
2025-01-14T13:17:21.0926316Z                 "shell_id_to_check",
2025-01-14T13:17:21.0926388Z             ),
2025-01-14T13:17:21.0926458Z             (
2025-01-14T13:17:21.0926535Z                 "r_in_use",
2025-01-14T13:17:21.0926607Z                 "r_to_check",
2025-01-14T13:17:21.0926677Z             ),
2025-01-14T13:17:21.0926776Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0926848Z         ],
2025-01-14T13:17:21.0926914Z     )
2025-01-14T13:17:21.0927079Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0927189Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0927194Z 
2025-01-14T13:17:21.0927417Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0927521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0927859Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0927972Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0928296Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0928408Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0928724Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0928833Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0929040Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0929119Z     sim.iterate(10)
2025-01-14T13:17:21.0929212Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0929369Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0929472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0929485Z 
2025-01-14T13:17:21.0929744Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0930036Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0930256Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0930532Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0930689Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0930823Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0930827Z 
2025-01-14T13:17:21.0930911Z     def initialize_transport_state(
2025-01-14T13:17:21.0930984Z         self,
2025-01-14T13:17:21.0931063Z         simulation_state,
2025-01-14T13:17:21.0931135Z         opacity_state,
2025-01-14T13:17:21.0931313Z         macro_atom_state,
2025-01-14T13:17:21.0931382Z         plasma,
2025-01-14T13:17:21.0931460Z         no_of_packets,
2025-01-14T13:17:21.0931540Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0931723Z         iteration=0,
2025-01-14T13:17:21.0931788Z     ):
2025-01-14T13:17:21.0931915Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0932007Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0932078Z         else:
2025-01-14T13:17:21.0932152Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0932222Z     
2025-01-14T13:17:21.0932355Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0932452Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0932517Z         )
2025-01-14T13:17:21.0932586Z     
2025-01-14T13:17:21.0932710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0932825Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0932986Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0933052Z         else:
2025-01-14T13:17:21.0933136Z             continuum_state = None
2025-01-14T13:17:21.0933233Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0933348Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0933437Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0933545Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0933641Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0933735Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0933824Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0933896Z         ).to_numba(
2025-01-14T13:17:21.0933973Z             macro_atom_state,
2025-01-14T13:17:21.0934065Z             self.line_interaction_type,
2025-01-14T13:17:21.0934131Z         )
2025-01-14T13:17:21.0934234Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0934513Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0934578Z         ]
2025-01-14T13:17:21.0934884Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0934892Z 
2025-01-14T13:17:21.0935037Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0935231Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-14T13:17:21.0935235Z 
2025-01-14T13:17:21.0935896Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0936249Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0936258Z 
2025-01-14T13:17:21.0936348Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0936486Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0936689Z         """
2025-01-14T13:17:21.0936797Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0936868Z     
2025-01-14T13:17:21.0936939Z         Parameters:
2025-01-14T13:17:21.0937016Z         -----------
2025-01-14T13:17:21.0937155Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0937303Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0937367Z     
2025-01-14T13:17:21.0937439Z         Returns:
2025-01-14T13:17:21.0937510Z         --------
2025-01-14T13:17:21.0937597Z         A TARDIS simulation object.
2025-01-14T13:17:21.0937668Z         """
2025-01-14T13:17:21.0937780Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0937904Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0938145Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0938324Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0938464Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0938566Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0938640Z >       sim = run_tardis(
2025-01-14T13:17:21.0938726Z             config_verysimple,
2025-01-14T13:17:21.0938804Z             atom_data=atomic_data,
2025-01-14T13:17:21.0938877Z         )
2025-01-14T13:17:21.0938881Z 
2025-01-14T13:17:21.0939014Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0939129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0939216Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0939300Z     simulation.run_convergence()
2025-01-14T13:17:21.0939419Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0939564Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0939662Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0939812Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0939926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0939930Z 
2025-01-14T13:17:21.0940192Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0940395Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0940614Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0940892Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0941055Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0941189Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0941197Z 
2025-01-14T13:17:21.0941286Z     def initialize_transport_state(
2025-01-14T13:17:21.0941354Z         self,
2025-01-14T13:17:21.0941433Z         simulation_state,
2025-01-14T13:17:21.0941510Z         opacity_state,
2025-01-14T13:17:21.0941758Z         macro_atom_state,
2025-01-14T13:17:21.0941852Z         plasma,
2025-01-14T13:17:21.0941931Z         no_of_packets,
2025-01-14T13:17:21.0942010Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0942093Z         iteration=0,
2025-01-14T13:17:21.0942159Z     ):
2025-01-14T13:17:21.0942285Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0942378Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0942449Z         else:
2025-01-14T13:17:21.0942538Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0942604Z     
2025-01-14T13:17:21.0942743Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0942836Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0942913Z         )
2025-01-14T13:17:21.0942982Z     
2025-01-14T13:17:21.0943115Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0943353Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0943509Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0943578Z         else:
2025-01-14T13:17:21.0943662Z             continuum_state = None
2025-01-14T13:17:21.0943766Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0943889Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0943978Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0944097Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0944201Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0944295Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0944397Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0944584Z         ).to_numba(
2025-01-14T13:17:21.0944670Z             macro_atom_state,
2025-01-14T13:17:21.0944756Z             self.line_interaction_type,
2025-01-14T13:17:21.0944835Z         )
2025-01-14T13:17:21.0944939Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0945218Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0945286Z         ]
2025-01-14T13:17:21.0945591Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0945596Z 
2025-01-14T13:17:21.0945744Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0945908Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0946331Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0946772Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0946965Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0947181Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0965197Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0965324Z 	
2025-01-14T13:17:21.0965564Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0965743Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0966250Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0966482Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0966594Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0966684Z 	Starting iteration 1 of 3
2025-01-14T13:17:21.0966899Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:17:21.0966905Z 
2025-01-14T13:17:21.0967585Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0967945Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0967950Z 
2025-01-14T13:17:21.0968042Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0968192Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0968260Z         """
2025-01-14T13:17:21.0968381Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0968447Z     
2025-01-14T13:17:21.0968528Z         Parameters:
2025-01-14T13:17:21.0968605Z         -----------
2025-01-14T13:17:21.0968753Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0968900Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0969176Z     
2025-01-14T13:17:21.0969247Z         Returns:
2025-01-14T13:17:21.0969325Z         --------
2025-01-14T13:17:21.0969417Z         A TARDIS simulation object.
2025-01-14T13:17:21.0969489Z         """
2025-01-14T13:17:21.0969610Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0969735Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0969872Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0970049Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0970191Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0970289Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0970370Z >       sim = run_tardis(
2025-01-14T13:17:21.0970566Z             config_verysimple,
2025-01-14T13:17:21.0970655Z             atom_data=atomic_data,
2025-01-14T13:17:21.0970722Z         )
2025-01-14T13:17:21.0970726Z 
2025-01-14T13:17:21.0970880Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0971004Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0971091Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0971183Z     simulation.run_convergence()
2025-01-14T13:17:21.0971301Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0971448Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0971682Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0971853Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0971995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0972000Z 
2025-01-14T13:17:21.0972280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0972492Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0972725Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0973002Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0973169Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0973313Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0973318Z 
2025-01-14T13:17:21.0973407Z     def initialize_transport_state(
2025-01-14T13:17:21.0973481Z         self,
2025-01-14T13:17:21.0973563Z         simulation_state,
2025-01-14T13:17:21.0973642Z         opacity_state,
2025-01-14T13:17:21.0973720Z         macro_atom_state,
2025-01-14T13:17:21.0973796Z         plasma,
2025-01-14T13:17:21.0973869Z         no_of_packets,
2025-01-14T13:17:21.0973961Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0974034Z         iteration=0,
2025-01-14T13:17:21.0974106Z     ):
2025-01-14T13:17:21.0974239Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0974341Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0974414Z         else:
2025-01-14T13:17:21.0974493Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0974565Z     
2025-01-14T13:17:21.0974702Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0974802Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0974870Z         )
2025-01-14T13:17:21.0974941Z     
2025-01-14T13:17:21.0975070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0975190Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0975342Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0975416Z         else:
2025-01-14T13:17:21.0975503Z             continuum_state = None
2025-01-14T13:17:21.0975610Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0975718Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0975945Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0976057Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0976157Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0976257Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0976346Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0976422Z         ).to_numba(
2025-01-14T13:17:21.0976499Z             macro_atom_state,
2025-01-14T13:17:21.0976592Z             self.line_interaction_type,
2025-01-14T13:17:21.0976660Z         )
2025-01-14T13:17:21.0976766Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0977037Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0977220Z         ]
2025-01-14T13:17:21.0977521Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0977537Z 
2025-01-14T13:17:21.0977687Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0977896Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-14T13:17:21.0977901Z 
2025-01-14T13:17:21.0978570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0978921Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0978926Z 
2025-01-14T13:17:21.0979015Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0979167Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0979240Z         """
2025-01-14T13:17:21.0979353Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0979428Z     
2025-01-14T13:17:21.0979503Z         Parameters:
2025-01-14T13:17:21.0979582Z         -----------
2025-01-14T13:17:21.0979720Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0979871Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0979939Z     
2025-01-14T13:17:21.0980013Z         Returns:
2025-01-14T13:17:21.0980084Z         --------
2025-01-14T13:17:21.0980172Z         A TARDIS simulation object.
2025-01-14T13:17:21.0980239Z         """
2025-01-14T13:17:21.0980365Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0980486Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0980625Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0980802Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0980939Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0981045Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0981120Z >       sim = run_tardis(
2025-01-14T13:17:21.0981206Z             config_verysimple,
2025-01-14T13:17:21.0981287Z             atom_data=atomic_data,
2025-01-14T13:17:21.0981359Z         )
2025-01-14T13:17:21.0981363Z 
2025-01-14T13:17:21.0981499Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0981827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0981928Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0982021Z     simulation.run_convergence()
2025-01-14T13:17:21.0982136Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0982280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0982380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0982536Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0982647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0982782Z 
2025-01-14T13:17:21.0983056Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0983266Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0983485Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0983760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0983921Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0984070Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0984076Z 
2025-01-14T13:17:21.0984167Z     def initialize_transport_state(
2025-01-14T13:17:21.0984373Z         self,
2025-01-14T13:17:21.0984458Z         simulation_state,
2025-01-14T13:17:21.0984533Z         opacity_state,
2025-01-14T13:17:21.0984613Z         macro_atom_state,
2025-01-14T13:17:21.0984688Z         plasma,
2025-01-14T13:17:21.0984769Z         no_of_packets,
2025-01-14T13:17:21.0984851Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0984930Z         iteration=0,
2025-01-14T13:17:21.0984996Z     ):
2025-01-14T13:17:21.0985127Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0985225Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0985297Z         else:
2025-01-14T13:17:21.0985375Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0985453Z     
2025-01-14T13:17:21.0985590Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0985691Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0985760Z         )
2025-01-14T13:17:21.0985829Z     
2025-01-14T13:17:21.0985968Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0986082Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0986238Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0986312Z         else:
2025-01-14T13:17:21.0986399Z             continuum_state = None
2025-01-14T13:17:21.0986498Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0986615Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0986709Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0986821Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0986919Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0987017Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0987113Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0987190Z         ).to_numba(
2025-01-14T13:17:21.0987269Z             macro_atom_state,
2025-01-14T13:17:21.0987365Z             self.line_interaction_type,
2025-01-14T13:17:21.0987438Z         )
2025-01-14T13:17:21.0987540Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0987817Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0987885Z         ]
2025-01-14T13:17:21.0988191Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0988196Z 
2025-01-14T13:17:21.0988344Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0988600Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-14T13:17:21.0988605Z 
2025-01-14T13:17:21.0989263Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0989623Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0989722Z 
2025-01-14T13:17:21.0989818Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0989958Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0990031Z         """
2025-01-14T13:17:21.0990140Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0990211Z     
2025-01-14T13:17:21.0990286Z         Parameters:
2025-01-14T13:17:21.0990364Z         -----------
2025-01-14T13:17:21.0990500Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0990655Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0990724Z     
2025-01-14T13:17:21.0990799Z         Returns:
2025-01-14T13:17:21.0990873Z         --------
2025-01-14T13:17:21.0990956Z         A TARDIS simulation object.
2025-01-14T13:17:21.0991114Z         """
2025-01-14T13:17:21.0991229Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0991357Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0991493Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0991775Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0991911Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0992011Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0992087Z >       sim = run_tardis(
2025-01-14T13:17:21.0992172Z             config_verysimple,
2025-01-14T13:17:21.0992252Z             atom_data=atomic_data,
2025-01-14T13:17:21.0992324Z         )
2025-01-14T13:17:21.0992328Z 
2025-01-14T13:17:21.0992462Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0992577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0992673Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0992758Z     simulation.run_convergence()
2025-01-14T13:17:21.0992875Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0993017Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0993118Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0993270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0993381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0993385Z 
2025-01-14T13:17:21.0993648Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0993853Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0994078Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0994350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0994516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0994654Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0994662Z 
2025-01-14T13:17:21.0994753Z     def initialize_transport_state(
2025-01-14T13:17:21.0994821Z         self,
2025-01-14T13:17:21.0994903Z         simulation_state,
2025-01-14T13:17:21.0994978Z         opacity_state,
2025-01-14T13:17:21.0995056Z         macro_atom_state,
2025-01-14T13:17:21.0995128Z         plasma,
2025-01-14T13:17:21.0995206Z         no_of_packets,
2025-01-14T13:17:21.0995289Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0995368Z         iteration=0,
2025-01-14T13:17:21.0995435Z     ):
2025-01-14T13:17:21.0995564Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0995663Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0995732Z         else:
2025-01-14T13:17:21.0995817Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0995883Z     
2025-01-14T13:17:21.0996019Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0996114Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0996311Z         )
2025-01-14T13:17:21.0996377Z     
2025-01-14T13:17:21.0996509Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0996620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0996777Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0996847Z         else:
2025-01-14T13:17:21.0996932Z             continuum_state = None
2025-01-14T13:17:21.0997032Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0997150Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0997244Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0997347Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0997559Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0997652Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0997746Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0997822Z         ).to_numba(
2025-01-14T13:17:21.0997904Z             macro_atom_state,
2025-01-14T13:17:21.0997992Z             self.line_interaction_type,
2025-01-14T13:17:21.0998064Z         )
2025-01-14T13:17:21.0998164Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0998438Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0998508Z         ]
2025-01-14T13:17:21.0998811Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0998816Z 
2025-01-14T13:17:21.0998969Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0999224Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-14T13:17:21.0999234Z 
2025-01-14T13:17:21.0999897Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1000249Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1000254Z 
2025-01-14T13:17:21.1000345Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1000482Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1000555Z         """
2025-01-14T13:17:21.1000668Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1000734Z     
2025-01-14T13:17:21.1000812Z         Parameters:
2025-01-14T13:17:21.1000885Z         -----------
2025-01-14T13:17:21.1001030Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1001172Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1001242Z     
2025-01-14T13:17:21.1001317Z         Returns:
2025-01-14T13:17:21.1001393Z         --------
2025-01-14T13:17:21.1001477Z         A TARDIS simulation object.
2025-01-14T13:17:21.1001684Z         """
2025-01-14T13:17:21.1001885Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1002016Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1002147Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1002324Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1002458Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1002551Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1002631Z >       sim = run_tardis(
2025-01-14T13:17:21.1002713Z             config_verysimple,
2025-01-14T13:17:21.1002803Z             atom_data=atomic_data,
2025-01-14T13:17:21.1002870Z         )
2025-01-14T13:17:21.1002874Z 
2025-01-14T13:17:21.1003023Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1003279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1003379Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1003464Z     simulation.run_convergence()
2025-01-14T13:17:21.1003581Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1003720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1003826Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1003995Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1004101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1004105Z 
2025-01-14T13:17:21.1004370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1004687Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1004911Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1005191Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1005357Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1005492Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1005501Z 
2025-01-14T13:17:21.1005587Z     def initialize_transport_state(
2025-01-14T13:17:21.1005669Z         self,
2025-01-14T13:17:21.1005747Z         simulation_state,
2025-01-14T13:17:21.1005825Z         opacity_state,
2025-01-14T13:17:21.1005898Z         macro_atom_state,
2025-01-14T13:17:21.1005972Z         plasma,
2025-01-14T13:17:21.1006051Z         no_of_packets,
2025-01-14T13:17:21.1006141Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1006220Z         iteration=0,
2025-01-14T13:17:21.1006291Z     ):
2025-01-14T13:17:21.1006414Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1006522Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1006591Z         else:
2025-01-14T13:17:21.1006674Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1006740Z     
2025-01-14T13:17:21.1006877Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1006978Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1007053Z         )
2025-01-14T13:17:21.1007124Z     
2025-01-14T13:17:21.1007249Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1007368Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1007518Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1007591Z         else:
2025-01-14T13:17:21.1007672Z             continuum_state = None
2025-01-14T13:17:21.1007784Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1007891Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1007987Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1008093Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1008195Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1008288Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1008383Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1008453Z         ).to_numba(
2025-01-14T13:17:21.1008536Z             macro_atom_state,
2025-01-14T13:17:21.1008628Z             self.line_interaction_type,
2025-01-14T13:17:21.1008696Z         )
2025-01-14T13:17:21.1008809Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1009076Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1009159Z         ]
2025-01-14T13:17:21.1009463Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1009468Z 
2025-01-14T13:17:21.1009711Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1009972Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-14T13:17:21.1009977Z 
2025-01-14T13:17:21.1010641Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1010991Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1010996Z 
2025-01-14T13:17:21.1011082Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1011223Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1011456Z         """
2025-01-14T13:17:21.1011891Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1011962Z     
2025-01-14T13:17:21.1012049Z         Parameters:
2025-01-14T13:17:21.1012122Z         -----------
2025-01-14T13:17:21.1012264Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1012408Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1012487Z     
2025-01-14T13:17:21.1012562Z         Returns:
2025-01-14T13:17:21.1012632Z         --------
2025-01-14T13:17:21.1012721Z         A TARDIS simulation object.
2025-01-14T13:17:21.1012788Z         """
2025-01-14T13:17:21.1012904Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1013025Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1013161Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1013335Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1013475Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1013573Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1013658Z >       sim = run_tardis(
2025-01-14T13:17:21.1013738Z             config_verysimple,
2025-01-14T13:17:21.1013824Z             atom_data=atomic_data,
2025-01-14T13:17:21.1013891Z         )
2025-01-14T13:17:21.1013901Z 
2025-01-14T13:17:21.1014034Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1014149Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1014233Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1014325Z     simulation.run_convergence()
2025-01-14T13:17:21.1014438Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1014580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1014674Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1014833Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1014941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1014948Z 
2025-01-14T13:17:21.1015214Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1015413Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1015639Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1015912Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1016070Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1016207Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1016212Z 
2025-01-14T13:17:21.1016302Z     def initialize_transport_state(
2025-01-14T13:17:21.1016385Z         self,
2025-01-14T13:17:21.1016464Z         simulation_state,
2025-01-14T13:17:21.1016545Z         opacity_state,
2025-01-14T13:17:21.1016620Z         macro_atom_state,
2025-01-14T13:17:21.1016817Z         plasma,
2025-01-14T13:17:21.1016891Z         no_of_packets,
2025-01-14T13:17:21.1016977Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1017055Z         iteration=0,
2025-01-14T13:17:21.1017121Z     ):
2025-01-14T13:17:21.1017245Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1017340Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1017414Z         else:
2025-01-14T13:17:21.1017492Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1017566Z     
2025-01-14T13:17:21.1017696Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1017795Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1017871Z         )
2025-01-14T13:17:21.1017942Z     
2025-01-14T13:17:21.1018078Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1018307Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1018456Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1018535Z         else:
2025-01-14T13:17:21.1018616Z             continuum_state = None
2025-01-14T13:17:21.1018722Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1018833Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1018923Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1019030Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1019129Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1019230Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1019322Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1019399Z         ).to_numba(
2025-01-14T13:17:21.1019477Z             macro_atom_state,
2025-01-14T13:17:21.1019574Z             self.line_interaction_type,
2025-01-14T13:17:21.1019642Z         )
2025-01-14T13:17:21.1019750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1020022Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1020103Z         ]
2025-01-14T13:17:21.1020404Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1020414Z 
2025-01-14T13:17:21.1020562Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1020817Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-14T13:17:21.1020822Z 
2025-01-14T13:17:21.1021486Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1022041Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1022055Z 
2025-01-14T13:17:21.1022147Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1022295Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1022368Z         """
2025-01-14T13:17:21.1022485Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1022555Z     
2025-01-14T13:17:21.1022628Z         Parameters:
2025-01-14T13:17:21.1022704Z         -----------
2025-01-14T13:17:21.1022844Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1022994Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1023060Z     
2025-01-14T13:17:21.1023137Z         Returns:
2025-01-14T13:17:21.1023208Z         --------
2025-01-14T13:17:21.1023296Z         A TARDIS simulation object.
2025-01-14T13:17:21.1023367Z         """
2025-01-14T13:17:21.1023485Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1023608Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1023886Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1024078Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1024217Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1024318Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1024394Z >       sim = run_tardis(
2025-01-14T13:17:21.1024481Z             config_verysimple,
2025-01-14T13:17:21.1024561Z             atom_data=atomic_data,
2025-01-14T13:17:21.1024633Z         )
2025-01-14T13:17:21.1024637Z 
2025-01-14T13:17:21.1024774Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1024893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1025097Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1025190Z     simulation.run_convergence()
2025-01-14T13:17:21.1025307Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1025452Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1025560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1025718Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1025831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1025835Z 
2025-01-14T13:17:21.1026102Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1026310Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1026533Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1026811Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1026977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1027119Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1027128Z 
2025-01-14T13:17:21.1027220Z     def initialize_transport_state(
2025-01-14T13:17:21.1027289Z         self,
2025-01-14T13:17:21.1027381Z         simulation_state,
2025-01-14T13:17:21.1027457Z         opacity_state,
2025-01-14T13:17:21.1027547Z         macro_atom_state,
2025-01-14T13:17:21.1027618Z         plasma,
2025-01-14T13:17:21.1027696Z         no_of_packets,
2025-01-14T13:17:21.1027785Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1027866Z         iteration=0,
2025-01-14T13:17:21.1027933Z     ):
2025-01-14T13:17:21.1028064Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1028159Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1028239Z         else:
2025-01-14T13:17:21.1028327Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1028404Z     
2025-01-14T13:17:21.1028536Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1028637Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1028719Z         )
2025-01-14T13:17:21.1028788Z     
2025-01-14T13:17:21.1028923Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1029038Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1029198Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1029266Z         else:
2025-01-14T13:17:21.1029353Z             continuum_state = None
2025-01-14T13:17:21.1029453Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1029566Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1029658Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1029769Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1029869Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1029971Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1030062Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1030234Z         ).to_numba(
2025-01-14T13:17:21.1030318Z             macro_atom_state,
2025-01-14T13:17:21.1030406Z             self.line_interaction_type,
2025-01-14T13:17:21.1030477Z         )
2025-01-14T13:17:21.1030577Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1030850Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1030918Z         ]
2025-01-14T13:17:21.1031225Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1031230Z 
2025-01-14T13:17:21.1031378Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1031744Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-14T13:17:21.1031863Z 
2025-01-14T13:17:21.1032533Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1032893Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1032898Z 
2025-01-14T13:17:21.1032997Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1033137Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1033211Z         """
2025-01-14T13:17:21.1033322Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1033396Z     
2025-01-14T13:17:21.1033470Z         Parameters:
2025-01-14T13:17:21.1033546Z         -----------
2025-01-14T13:17:21.1033683Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1033835Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1033907Z     
2025-01-14T13:17:21.1033976Z         Returns:
2025-01-14T13:17:21.1034058Z         --------
2025-01-14T13:17:21.1034143Z         A TARDIS simulation object.
2025-01-14T13:17:21.1034214Z         """
2025-01-14T13:17:21.1034327Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1034452Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1034590Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1034772Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1034906Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1035005Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1035081Z >       sim = run_tardis(
2025-01-14T13:17:21.1035172Z             config_verysimple,
2025-01-14T13:17:21.1035257Z             atom_data=atomic_data,
2025-01-14T13:17:21.1035329Z         )
2025-01-14T13:17:21.1035334Z 
2025-01-14T13:17:21.1035477Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1035595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1035693Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1035781Z     simulation.run_convergence()
2025-01-14T13:17:21.1035901Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1036039Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1036136Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1036288Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1036405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1036411Z 
2025-01-14T13:17:21.1036674Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1036885Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1037109Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1037521Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1037686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1037819Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1037823Z 
2025-01-14T13:17:21.1037913Z     def initialize_transport_state(
2025-01-14T13:17:21.1037982Z         self,
2025-01-14T13:17:21.1038064Z         simulation_state,
2025-01-14T13:17:21.1038144Z         opacity_state,
2025-01-14T13:17:21.1038226Z         macro_atom_state,
2025-01-14T13:17:21.1038297Z         plasma,
2025-01-14T13:17:21.1038374Z         no_of_packets,
2025-01-14T13:17:21.1038455Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1038622Z         iteration=0,
2025-01-14T13:17:21.1038698Z     ):
2025-01-14T13:17:21.1038823Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1038920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1038994Z         else:
2025-01-14T13:17:21.1039076Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1039141Z     
2025-01-14T13:17:21.1039278Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1039372Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1039443Z         )
2025-01-14T13:17:21.1039508Z     
2025-01-14T13:17:21.1039640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1039752Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1039918Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1039987Z         else:
2025-01-14T13:17:21.1040074Z             continuum_state = None
2025-01-14T13:17:21.1040190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1040299Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1040396Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1040504Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1040604Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1040702Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1040798Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1040870Z         ).to_numba(
2025-01-14T13:17:21.1040953Z             macro_atom_state,
2025-01-14T13:17:21.1041039Z             self.line_interaction_type,
2025-01-14T13:17:21.1041118Z         )
2025-01-14T13:17:21.1041219Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1041493Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1041653Z         ]
2025-01-14T13:17:21.1041968Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1041973Z 
2025-01-14T13:17:21.1042127Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1042391Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-14T13:17:21.1042396Z 
2025-01-14T13:17:21.1043063Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1043411Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1043421Z 
2025-01-14T13:17:21.1043507Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1043650Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1043721Z         """
2025-01-14T13:17:21.1043834Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1043901Z     
2025-01-14T13:17:21.1043979Z         Parameters:
2025-01-14T13:17:21.1044176Z         -----------
2025-01-14T13:17:21.1044318Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1044459Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1044530Z     
2025-01-14T13:17:21.1044602Z         Returns:
2025-01-14T13:17:21.1044677Z         --------
2025-01-14T13:17:21.1044763Z         A TARDIS simulation object.
2025-01-14T13:17:21.1044834Z         """
2025-01-14T13:17:21.1044948Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1045078Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1045206Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1045384Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1045632Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1045727Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1045813Z >       sim = run_tardis(
2025-01-14T13:17:21.1045892Z             config_verysimple,
2025-01-14T13:17:21.1045977Z             atom_data=atomic_data,
2025-01-14T13:17:21.1046045Z         )
2025-01-14T13:17:21.1046049Z 
2025-01-14T13:17:21.1046187Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1046297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1046387Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1046471Z     simulation.run_convergence()
2025-01-14T13:17:21.1046588Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1046733Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1046828Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1046989Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1047095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1047105Z 
2025-01-14T13:17:21.1047372Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1047576Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1047801Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1048073Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1048238Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1048371Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1048381Z 
2025-01-14T13:17:21.1048466Z     def initialize_transport_state(
2025-01-14T13:17:21.1048540Z         self,
2025-01-14T13:17:21.1048622Z         simulation_state,
2025-01-14T13:17:21.1048700Z         opacity_state,
2025-01-14T13:17:21.1048775Z         macro_atom_state,
2025-01-14T13:17:21.1048850Z         plasma,
2025-01-14T13:17:21.1048928Z         no_of_packets,
2025-01-14T13:17:21.1049014Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1049086Z         iteration=0,
2025-01-14T13:17:21.1049157Z     ):
2025-01-14T13:17:21.1049280Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1049378Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1049449Z         else:
2025-01-14T13:17:21.1049533Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1049598Z     
2025-01-14T13:17:21.1049734Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1049835Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1049902Z         )
2025-01-14T13:17:21.1049972Z     
2025-01-14T13:17:21.1050097Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1050218Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1050370Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1050537Z         else:
2025-01-14T13:17:21.1050620Z             continuum_state = None
2025-01-14T13:17:21.1050728Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1050836Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1050936Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1051040Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1051143Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1051235Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1051331Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1051406Z         ).to_numba(
2025-01-14T13:17:21.1051485Z             macro_atom_state,
2025-01-14T13:17:21.1051671Z             self.line_interaction_type,
2025-01-14T13:17:21.1051860Z         )
2025-01-14T13:17:21.1051970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1052242Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1052323Z         ]
2025-01-14T13:17:21.1052639Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1052644Z 
2025-01-14T13:17:21.1052807Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1053055Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-14T13:17:21.1053067Z 
2025-01-14T13:17:21.1053725Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1054095Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1054099Z 
2025-01-14T13:17:21.1054193Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1054338Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1054407Z         """
2025-01-14T13:17:21.1054524Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1054590Z     
2025-01-14T13:17:21.1054671Z         Parameters:
2025-01-14T13:17:21.1054743Z         -----------
2025-01-14T13:17:21.1054887Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1055039Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1055106Z     
2025-01-14T13:17:21.1055186Z         Returns:
2025-01-14T13:17:21.1055256Z         --------
2025-01-14T13:17:21.1055347Z         A TARDIS simulation object.
2025-01-14T13:17:21.1055415Z         """
2025-01-14T13:17:21.1055540Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1055664Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1055802Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1055980Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1056116Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1056210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1056293Z >       sim = run_tardis(
2025-01-14T13:17:21.1056374Z             config_verysimple,
2025-01-14T13:17:21.1056461Z             atom_data=atomic_data,
2025-01-14T13:17:21.1056533Z         )
2025-01-14T13:17:21.1056537Z 
2025-01-14T13:17:21.1056669Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1056786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1056873Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1056967Z     simulation.run_convergence()
2025-01-14T13:17:21.1057083Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1057224Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1057439Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1057598Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1057706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1057710Z 
2025-01-14T13:17:21.1057981Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1058188Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1058406Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1058683Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1058920Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1059061Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1059071Z 
2025-01-14T13:17:21.1059157Z     def initialize_transport_state(
2025-01-14T13:17:21.1059231Z         self,
2025-01-14T13:17:21.1059307Z         simulation_state,
2025-01-14T13:17:21.1059390Z         opacity_state,
2025-01-14T13:17:21.1059466Z         macro_atom_state,
2025-01-14T13:17:21.1059546Z         plasma,
2025-01-14T13:17:21.1059625Z         no_of_packets,
2025-01-14T13:17:21.1059707Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1059787Z         iteration=0,
2025-01-14T13:17:21.1059853Z     ):
2025-01-14T13:17:21.1059984Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1060079Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1060153Z         else:
2025-01-14T13:17:21.1060232Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1060308Z     
2025-01-14T13:17:21.1060442Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1060545Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1060614Z         )
2025-01-14T13:17:21.1060692Z     
2025-01-14T13:17:21.1060819Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1060940Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1061092Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1061167Z         else:
2025-01-14T13:17:21.1061255Z             continuum_state = None
2025-01-14T13:17:21.1061356Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1061477Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1061725Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1061871Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1061972Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1062078Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1062171Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1062249Z         ).to_numba(
2025-01-14T13:17:21.1062330Z             macro_atom_state,
2025-01-14T13:17:21.1062424Z             self.line_interaction_type,
2025-01-14T13:17:21.1062491Z         )
2025-01-14T13:17:21.1062599Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1062873Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1062948Z         ]
2025-01-14T13:17:21.1063255Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1063260Z 
2025-01-14T13:17:21.1063409Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1063671Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-14T13:17:21.1063679Z 
2025-01-14T13:17:21.1064340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1064848Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1064854Z 
2025-01-14T13:17:21.1064955Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1065096Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1065171Z         """
2025-01-14T13:17:21.1065282Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1065361Z     
2025-01-14T13:17:21.1065437Z         Parameters:
2025-01-14T13:17:21.1065517Z         -----------
2025-01-14T13:17:21.1065655Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1065918Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1065986Z     
2025-01-14T13:17:21.1066062Z         Returns:
2025-01-14T13:17:21.1066134Z         --------
2025-01-14T13:17:21.1066238Z         A TARDIS simulation object.
2025-01-14T13:17:21.1066307Z         """
2025-01-14T13:17:21.1066429Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1066551Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1066690Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1066870Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1067007Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1067107Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1067183Z >       sim = run_tardis(
2025-01-14T13:17:21.1067269Z             config_verysimple,
2025-01-14T13:17:21.1067351Z             atom_data=atomic_data,
2025-01-14T13:17:21.1067429Z         )
2025-01-14T13:17:21.1067434Z 
2025-01-14T13:17:21.1067567Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1067683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1067773Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1067865Z     simulation.run_convergence()
2025-01-14T13:17:21.1067980Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1068123Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1068222Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1068376Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1068487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1068492Z 
2025-01-14T13:17:21.1068754Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1068967Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1069186Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1069465Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1069628Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1069772Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1069776Z 
2025-01-14T13:17:21.1069868Z     def initialize_transport_state(
2025-01-14T13:17:21.1069935Z         self,
2025-01-14T13:17:21.1070018Z         simulation_state,
2025-01-14T13:17:21.1070092Z         opacity_state,
2025-01-14T13:17:21.1070172Z         macro_atom_state,
2025-01-14T13:17:21.1070243Z         plasma,
2025-01-14T13:17:21.1070322Z         no_of_packets,
2025-01-14T13:17:21.1070404Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1070481Z         iteration=0,
2025-01-14T13:17:21.1070553Z     ):
2025-01-14T13:17:21.1070681Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1070775Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1070942Z         else:
2025-01-14T13:17:21.1071022Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1071094Z     
2025-01-14T13:17:21.1071226Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1071327Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1071406Z         )
2025-01-14T13:17:21.1071475Z     
2025-01-14T13:17:21.1071708Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1071831Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1072026Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1072097Z         else:
2025-01-14T13:17:21.1072185Z             continuum_state = None
2025-01-14T13:17:21.1072285Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1072520Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1072612Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1072725Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1072831Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1072937Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1073037Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1073117Z         ).to_numba(
2025-01-14T13:17:21.1073203Z             macro_atom_state,
2025-01-14T13:17:21.1073294Z             self.line_interaction_type,
2025-01-14T13:17:21.1073366Z         )
2025-01-14T13:17:21.1073467Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1073743Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1073810Z         ]
2025-01-14T13:17:21.1074118Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1074131Z 
2025-01-14T13:17:21.1074277Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1074548Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-14T13:17:21.1074552Z 
2025-01-14T13:17:21.1075227Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1075580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1075585Z 
2025-01-14T13:17:21.1075686Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1075826Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1075908Z         """
2025-01-14T13:17:21.1076023Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1076097Z     
2025-01-14T13:17:21.1076171Z         Parameters:
2025-01-14T13:17:21.1076257Z         -----------
2025-01-14T13:17:21.1076403Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1076546Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1076621Z     
2025-01-14T13:17:21.1076691Z         Returns:
2025-01-14T13:17:21.1076778Z         --------
2025-01-14T13:17:21.1076870Z         A TARDIS simulation object.
2025-01-14T13:17:21.1076946Z         """
2025-01-14T13:17:21.1077061Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1077192Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1077322Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1077509Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1077648Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1077750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1077826Z >       sim = run_tardis(
2025-01-14T13:17:21.1078036Z             config_verysimple,
2025-01-14T13:17:21.1078125Z             atom_data=atomic_data,
2025-01-14T13:17:21.1078192Z         )
2025-01-14T13:17:21.1078196Z 
2025-01-14T13:17:21.1078335Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1078445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1078536Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1078621Z     simulation.run_convergence()
2025-01-14T13:17:21.1078738Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1078876Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1078976Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1079125Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1079324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1079329Z 
2025-01-14T13:17:21.1079600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1079807Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1080030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1080302Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1080464Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1080607Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1080612Z 
2025-01-14T13:17:21.1080708Z     def initialize_transport_state(
2025-01-14T13:17:21.1080776Z         self,
2025-01-14T13:17:21.1080860Z         simulation_state,
2025-01-14T13:17:21.1080940Z         opacity_state,
2025-01-14T13:17:21.1081020Z         macro_atom_state,
2025-01-14T13:17:21.1081097Z         plasma,
2025-01-14T13:17:21.1081171Z         no_of_packets,
2025-01-14T13:17:21.1081270Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1081346Z         iteration=0,
2025-01-14T13:17:21.1081426Z     ):
2025-01-14T13:17:21.1081645Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1081749Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1081818Z         else:
2025-01-14T13:17:21.1081902Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1081969Z     
2025-01-14T13:17:21.1082106Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1082200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1082275Z         )
2025-01-14T13:17:21.1082344Z     
2025-01-14T13:17:21.1082474Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1082590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1082750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1082824Z         else:
2025-01-14T13:17:21.1082909Z             continuum_state = None
2025-01-14T13:17:21.1083015Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1083123Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1083218Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1083324Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1083427Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1083520Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1083617Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1083691Z         ).to_numba(
2025-01-14T13:17:21.1083774Z             macro_atom_state,
2025-01-14T13:17:21.1083862Z             self.line_interaction_type,
2025-01-14T13:17:21.1083940Z         )
2025-01-14T13:17:21.1084039Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1084316Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1084718Z         ]
2025-01-14T13:17:21.1085020Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1085025Z 
2025-01-14T13:17:21.1085177Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1085428Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-14T13:17:21.1085433Z 
2025-01-14T13:17:21.1086098Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1086446Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1086581Z 
2025-01-14T13:17:21.1086672Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1086828Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1086896Z         """
2025-01-14T13:17:21.1087014Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1087084Z     
2025-01-14T13:17:21.1087163Z         Parameters:
2025-01-14T13:17:21.1087236Z         -----------
2025-01-14T13:17:21.1087381Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1087522Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1087596Z     
2025-01-14T13:17:21.1087667Z         Returns:
2025-01-14T13:17:21.1087746Z         --------
2025-01-14T13:17:21.1087831Z         A TARDIS simulation object.
2025-01-14T13:17:21.1087908Z         """
2025-01-14T13:17:21.1088022Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1088156Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1088293Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1088473Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1088611Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1088705Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1088786Z >       sim = run_tardis(
2025-01-14T13:17:21.1088866Z             config_verysimple,
2025-01-14T13:17:21.1088951Z             atom_data=atomic_data,
2025-01-14T13:17:21.1089019Z         )
2025-01-14T13:17:21.1089023Z 
2025-01-14T13:17:21.1089162Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1089269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1089362Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1089452Z     simulation.run_convergence()
2025-01-14T13:17:21.1089571Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1089713Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1089810Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1089964Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1090068Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1090072Z 
2025-01-14T13:17:21.1090339Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1090541Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1090767Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1091037Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1091202Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1091350Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1091354Z 
2025-01-14T13:17:21.1091529Z     def initialize_transport_state(
2025-01-14T13:17:21.1091699Z         self,
2025-01-14T13:17:21.1091779Z         simulation_state,
2025-01-14T13:17:21.1091858Z         opacity_state,
2025-01-14T13:17:21.1091933Z         macro_atom_state,
2025-01-14T13:17:21.1092008Z         plasma,
2025-01-14T13:17:21.1092082Z         no_of_packets,
2025-01-14T13:17:21.1092170Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1092242Z         iteration=0,
2025-01-14T13:17:21.1092313Z     ):
2025-01-14T13:17:21.1092436Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1092536Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1092604Z         else:
2025-01-14T13:17:21.1092688Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1092761Z     
2025-01-14T13:17:21.1093007Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1093109Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1093176Z         )
2025-01-14T13:17:21.1093254Z     
2025-01-14T13:17:21.1093380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1093496Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1093648Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1093722Z         else:
2025-01-14T13:17:21.1093805Z             continuum_state = None
2025-01-14T13:17:21.1093910Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1094020Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1094118Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1094223Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1094325Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1094428Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1094520Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1094598Z         ).to_numba(
2025-01-14T13:17:21.1094677Z             macro_atom_state,
2025-01-14T13:17:21.1094774Z             self.line_interaction_type,
2025-01-14T13:17:21.1094842Z         )
2025-01-14T13:17:21.1094947Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1095219Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1095295Z         ]
2025-01-14T13:17:21.1095593Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1095597Z 
2025-01-14T13:17:21.1095751Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1096006Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-14T13:17:21.1096022Z 
2025-01-14T13:17:21.1096680Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1097033Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1097037Z 
2025-01-14T13:17:21.1097123Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1097265Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1097331Z         """
2025-01-14T13:17:21.1097444Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1097510Z     
2025-01-14T13:17:21.1097587Z         Parameters:
2025-01-14T13:17:21.1097663Z         -----------
2025-01-14T13:17:21.1097798Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1097944Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1098017Z     
2025-01-14T13:17:21.1098090Z         Returns:
2025-01-14T13:17:21.1098159Z         --------
2025-01-14T13:17:21.1098368Z         A TARDIS simulation object.
2025-01-14T13:17:21.1098436Z         """
2025-01-14T13:17:21.1098555Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1098674Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1098808Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1098979Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1099117Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1099212Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1099291Z >       sim = run_tardis(
2025-01-14T13:17:21.1099376Z             config_verysimple,
2025-01-14T13:17:21.1099456Z             atom_data=atomic_data,
2025-01-14T13:17:21.1099606Z         )
2025-01-14T13:17:21.1099610Z 
2025-01-14T13:17:21.1099744Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1099857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1099947Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1100039Z     simulation.run_convergence()
2025-01-14T13:17:21.1100152Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1100295Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1100389Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1100544Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1100650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1100659Z 
2025-01-14T13:17:21.1100922Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1101130Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1101357Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1101812Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1101986Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1102125Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1102130Z 
2025-01-14T13:17:21.1102215Z     def initialize_transport_state(
2025-01-14T13:17:21.1102288Z         self,
2025-01-14T13:17:21.1102366Z         simulation_state,
2025-01-14T13:17:21.1102446Z         opacity_state,
2025-01-14T13:17:21.1102531Z         macro_atom_state,
2025-01-14T13:17:21.1102602Z         plasma,
2025-01-14T13:17:21.1102680Z         no_of_packets,
2025-01-14T13:17:21.1102760Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1102836Z         iteration=0,
2025-01-14T13:17:21.1102908Z     ):
2025-01-14T13:17:21.1103036Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1103129Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1103203Z         else:
2025-01-14T13:17:21.1103284Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1103354Z     
2025-01-14T13:17:21.1103486Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1103586Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1103654Z         )
2025-01-14T13:17:21.1103734Z     
2025-01-14T13:17:21.1103862Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1103979Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1104130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1104204Z         else:
2025-01-14T13:17:21.1104293Z             continuum_state = None
2025-01-14T13:17:21.1104392Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1104505Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1104594Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1104702Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1104931Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1105031Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1105121Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1105201Z         ).to_numba(
2025-01-14T13:17:21.1105278Z             macro_atom_state,
2025-01-14T13:17:21.1105372Z             self.line_interaction_type,
2025-01-14T13:17:21.1105440Z         )
2025-01-14T13:17:21.1105546Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1105814Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1105887Z         ]
2025-01-14T13:17:21.1106187Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1106297Z 
2025-01-14T13:17:21.1106443Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1106707Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-14T13:17:21.1106718Z 
2025-01-14T13:17:21.1107370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1107721Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1107725Z 
2025-01-14T13:17:21.1107816Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1107953Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1108027Z         """
2025-01-14T13:17:21.1108144Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1108215Z     
2025-01-14T13:17:21.1108288Z         Parameters:
2025-01-14T13:17:21.1108364Z         -----------
2025-01-14T13:17:21.1108505Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1108656Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1108723Z     
2025-01-14T13:17:21.1108799Z         Returns:
2025-01-14T13:17:21.1108870Z         --------
2025-01-14T13:17:21.1108958Z         A TARDIS simulation object.
2025-01-14T13:17:21.1109025Z         """
2025-01-14T13:17:21.1109146Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1109274Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1109404Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1109588Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1109720Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1109825Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1109900Z >       sim = run_tardis(
2025-01-14T13:17:21.1109989Z             config_verysimple,
2025-01-14T13:17:21.1110069Z             atom_data=atomic_data,
2025-01-14T13:17:21.1110141Z         )
2025-01-14T13:17:21.1110146Z 
2025-01-14T13:17:21.1110279Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1110393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1110478Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1110569Z     simulation.run_convergence()
2025-01-14T13:17:21.1110686Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1110822Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1110920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1111068Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1111184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1111189Z 
2025-01-14T13:17:21.1111448Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1111868Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1112089Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1112366Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1112531Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1112663Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1112668Z 
2025-01-14T13:17:21.1112758Z     def initialize_transport_state(
2025-01-14T13:17:21.1112825Z         self,
2025-01-14T13:17:21.1112905Z         simulation_state,
2025-01-14T13:17:21.1113123Z         opacity_state,
2025-01-14T13:17:21.1113205Z         macro_atom_state,
2025-01-14T13:17:21.1113274Z         plasma,
2025-01-14T13:17:21.1113352Z         no_of_packets,
2025-01-14T13:17:21.1113440Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1113517Z         iteration=0,
2025-01-14T13:17:21.1113583Z     ):
2025-01-14T13:17:21.1113713Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1113808Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1113882Z         else:
2025-01-14T13:17:21.1113964Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1114030Z     
2025-01-14T13:17:21.1114168Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1114263Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1114335Z         )
2025-01-14T13:17:21.1114401Z     
2025-01-14T13:17:21.1114533Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1114646Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1114808Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1114877Z         else:
2025-01-14T13:17:21.1114964Z             continuum_state = None
2025-01-14T13:17:21.1115069Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1115180Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1115269Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1115381Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1115484Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1115575Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1115670Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1115741Z         ).to_numba(
2025-01-14T13:17:21.1115824Z             macro_atom_state,
2025-01-14T13:17:21.1115911Z             self.line_interaction_type,
2025-01-14T13:17:21.1115984Z         )
2025-01-14T13:17:21.1116087Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1116363Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1116435Z         ]
2025-01-14T13:17:21.1116739Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1116743Z 
2025-01-14T13:17:21.1116887Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1117143Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-14T13:17:21.1117149Z 
2025-01-14T13:17:21.1117808Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1118152Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1118160Z 
2025-01-14T13:17:21.1118253Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1118509Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1118582Z         """
2025-01-14T13:17:21.1118691Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1118765Z     
2025-01-14T13:17:21.1118843Z         Parameters:
2025-01-14T13:17:21.1118913Z         -----------
2025-01-14T13:17:21.1119052Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1119196Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1119268Z     
2025-01-14T13:17:21.1119338Z         Returns:
2025-01-14T13:17:21.1119416Z         --------
2025-01-14T13:17:21.1119499Z         A TARDIS simulation object.
2025-01-14T13:17:21.1119573Z         """
2025-01-14T13:17:21.1119685Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1119893Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1120025Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1120207Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1120338Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1120441Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1120520Z >       sim = run_tardis(
2025-01-14T13:17:21.1120603Z             config_verysimple,
2025-01-14T13:17:21.1120687Z             atom_data=atomic_data,
2025-01-14T13:17:21.1120756Z         )
2025-01-14T13:17:21.1120760Z 
2025-01-14T13:17:21.1120900Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1121007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1121099Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1121186Z     simulation.run_convergence()
2025-01-14T13:17:21.1121308Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1121446Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1121645Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1121805Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1121937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1121944Z 
2025-01-14T13:17:21.1122368Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1122715Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1123104Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1123494Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1123664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1123809Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1123813Z 
2025-01-14T13:17:21.1123908Z     def initialize_transport_state(
2025-01-14T13:17:21.1123981Z         self,
2025-01-14T13:17:21.1124067Z         simulation_state,
2025-01-14T13:17:21.1124150Z         opacity_state,
2025-01-14T13:17:21.1124229Z         macro_atom_state,
2025-01-14T13:17:21.1124304Z         plasma,
2025-01-14T13:17:21.1124378Z         no_of_packets,
2025-01-14T13:17:21.1124464Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1124537Z         iteration=0,
2025-01-14T13:17:21.1124609Z     ):
2025-01-14T13:17:21.1124735Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1124836Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1124904Z         else:
2025-01-14T13:17:21.1124990Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1125056Z     
2025-01-14T13:17:21.1125195Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1125293Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1125366Z         )
2025-01-14T13:17:21.1125431Z     
2025-01-14T13:17:21.1125727Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1125842Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1126000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1126074Z         else:
2025-01-14T13:17:21.1126156Z             continuum_state = None
2025-01-14T13:17:21.1126261Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1126369Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1126467Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1126577Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1126684Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1126776Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1126981Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1127052Z         ).to_numba(
2025-01-14T13:17:21.1127135Z             macro_atom_state,
2025-01-14T13:17:21.1127228Z             self.line_interaction_type,
2025-01-14T13:17:21.1127301Z         )
2025-01-14T13:17:21.1127403Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1127680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1127752Z         ]
2025-01-14T13:17:21.1128052Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1128056Z 
2025-01-14T13:17:21.1128209Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1128461Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-14T13:17:21.1128466Z 
2025-01-14T13:17:21.1129134Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1129488Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1129493Z 
2025-01-14T13:17:21.1129581Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1129724Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1129791Z         """
2025-01-14T13:17:21.1129905Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1129972Z     
2025-01-14T13:17:21.1130051Z         Parameters:
2025-01-14T13:17:21.1130123Z         -----------
2025-01-14T13:17:21.1130264Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1130406Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1130483Z     
2025-01-14T13:17:21.1130554Z         Returns:
2025-01-14T13:17:21.1130630Z         --------
2025-01-14T13:17:21.1130712Z         A TARDIS simulation object.
2025-01-14T13:17:21.1130787Z         """
2025-01-14T13:17:21.1130904Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1131026Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1131163Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1131336Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1131474Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1131764Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1131860Z >       sim = run_tardis(
2025-01-14T13:17:21.1131941Z             config_verysimple,
2025-01-14T13:17:21.1132027Z             atom_data=atomic_data,
2025-01-14T13:17:21.1132093Z         )
2025-01-14T13:17:21.1132106Z 
2025-01-14T13:17:21.1132244Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1132353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1132582Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1132675Z     simulation.run_convergence()
2025-01-14T13:17:21.1132787Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1132929Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1133022Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1133178Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1133286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1133291Z 
2025-01-14T13:17:21.1133557Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1133760Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1134093Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1134363Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1134532Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1134671Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1134675Z 
2025-01-14T13:17:21.1134760Z     def initialize_transport_state(
2025-01-14T13:17:21.1134834Z         self,
2025-01-14T13:17:21.1134911Z         simulation_state,
2025-01-14T13:17:21.1134990Z         opacity_state,
2025-01-14T13:17:21.1135065Z         macro_atom_state,
2025-01-14T13:17:21.1135141Z         plasma,
2025-01-14T13:17:21.1135214Z         no_of_packets,
2025-01-14T13:17:21.1135301Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1135374Z         iteration=0,
2025-01-14T13:17:21.1135447Z     ):
2025-01-14T13:17:21.1135573Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1135672Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1135746Z         else:
2025-01-14T13:17:21.1135825Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1135900Z     
2025-01-14T13:17:21.1136031Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1136130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1136199Z         )
2025-01-14T13:17:21.1136270Z     
2025-01-14T13:17:21.1136396Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1136515Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1136664Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1136738Z         else:
2025-01-14T13:17:21.1136821Z             continuum_state = None
2025-01-14T13:17:21.1136930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1137035Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1137136Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1137239Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1137343Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1137445Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1137535Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1137610Z         ).to_numba(
2025-01-14T13:17:21.1137687Z             macro_atom_state,
2025-01-14T13:17:21.1137778Z             self.line_interaction_type,
2025-01-14T13:17:21.1137844Z         )
2025-01-14T13:17:21.1137949Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1138223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1138295Z         ]
2025-01-14T13:17:21.1138593Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1138602Z 
2025-01-14T13:17:21.1138754Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1139016Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-14T13:17:21.1139126Z 
2025-01-14T13:17:21.1139788Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1140134Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1140138Z 
2025-01-14T13:17:21.1140225Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1145683Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1145798Z         """
2025-01-14T13:17:21.1145943Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1146195Z     
2025-01-14T13:17:21.1146275Z         Parameters:
2025-01-14T13:17:21.1146354Z         -----------
2025-01-14T13:17:21.1146506Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1146670Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1146736Z     
2025-01-14T13:17:21.1146812Z         Returns:
2025-01-14T13:17:21.1146884Z         --------
2025-01-14T13:17:21.1146977Z         A TARDIS simulation object.
2025-01-14T13:17:21.1147044Z         """
2025-01-14T13:17:21.1147166Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1147293Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1147435Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1147611Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1147755Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1147859Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1147946Z >       sim = run_tardis(
2025-01-14T13:17:21.1148031Z             config_verysimple,
2025-01-14T13:17:21.1148121Z             atom_data=atomic_data,
2025-01-14T13:17:21.1148193Z         )
2025-01-14T13:17:21.1148198Z 
2025-01-14T13:17:21.1148342Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1148463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1148554Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1148647Z     simulation.run_convergence()
2025-01-14T13:17:21.1148770Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1148924Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1149025Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1149189Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1149306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1149316Z 
2025-01-14T13:17:21.1149584Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1149796Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1150017Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1150310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1150477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1150622Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1150626Z 
2025-01-14T13:17:21.1150714Z     def initialize_transport_state(
2025-01-14T13:17:21.1150788Z         self,
2025-01-14T13:17:21.1150865Z         simulation_state,
2025-01-14T13:17:21.1150945Z         opacity_state,
2025-01-14T13:17:21.1151033Z         macro_atom_state,
2025-01-14T13:17:21.1151103Z         plasma,
2025-01-14T13:17:21.1151180Z         no_of_packets,
2025-01-14T13:17:21.1151263Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1151461Z         iteration=0,
2025-01-14T13:17:21.1151527Z     ):
2025-01-14T13:17:21.1151805Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1151908Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1151982Z         else:
2025-01-14T13:17:21.1152059Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1152129Z     
2025-01-14T13:17:21.1152272Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1152378Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1152444Z         )
2025-01-14T13:17:21.1152515Z     
2025-01-14T13:17:21.1152644Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1152765Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1153042Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1153111Z         else:
2025-01-14T13:17:21.1153199Z             continuum_state = None
2025-01-14T13:17:21.1153306Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1153419Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1153510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1153621Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1153719Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1153818Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1153907Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1153982Z         ).to_numba(
2025-01-14T13:17:21.1154059Z             macro_atom_state,
2025-01-14T13:17:21.1154151Z             self.line_interaction_type,
2025-01-14T13:17:21.1154219Z         )
2025-01-14T13:17:21.1154325Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1154611Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1154677Z         ]
2025-01-14T13:17:21.1154994Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1154999Z 
2025-01-14T13:17:21.1155150Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1155415Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-14T13:17:21.1155421Z 
2025-01-14T13:17:21.1156100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1156454Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1156464Z 
2025-01-14T13:17:21.1156558Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1156704Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1156783Z         """
2025-01-14T13:17:21.1156895Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1156965Z     
2025-01-14T13:17:21.1157040Z         Parameters:
2025-01-14T13:17:21.1157118Z         -----------
2025-01-14T13:17:21.1157255Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1157404Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1157471Z     
2025-01-14T13:17:21.1157544Z         Returns:
2025-01-14T13:17:21.1157615Z         --------
2025-01-14T13:17:21.1157703Z         A TARDIS simulation object.
2025-01-14T13:17:21.1157774Z         """
2025-01-14T13:17:21.1157889Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1158021Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1158156Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1158337Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1158592Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1158695Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1158769Z >       sim = run_tardis(
2025-01-14T13:17:21.1158856Z             config_verysimple,
2025-01-14T13:17:21.1158937Z             atom_data=atomic_data,
2025-01-14T13:17:21.1159009Z         )
2025-01-14T13:17:21.1159013Z 
2025-01-14T13:17:21.1159148Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1159265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1159355Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1159441Z     simulation.run_convergence()
2025-01-14T13:17:21.1159560Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1159778Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1159877Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1160036Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1160148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1160153Z 
2025-01-14T13:17:21.1160418Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1160626Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1160846Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1161124Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1161288Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1161430Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1161435Z 
2025-01-14T13:17:21.1161526Z     def initialize_transport_state(
2025-01-14T13:17:21.1161691Z         self,
2025-01-14T13:17:21.1161783Z         simulation_state,
2025-01-14T13:17:21.1161858Z         opacity_state,
2025-01-14T13:17:21.1161941Z         macro_atom_state,
2025-01-14T13:17:21.1162012Z         plasma,
2025-01-14T13:17:21.1162090Z         no_of_packets,
2025-01-14T13:17:21.1162171Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1162248Z         iteration=0,
2025-01-14T13:17:21.1162314Z     ):
2025-01-14T13:17:21.1162446Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1162540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1162613Z         else:
2025-01-14T13:17:21.1162698Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1162763Z     
2025-01-14T13:17:21.1162898Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1163000Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1163071Z         )
2025-01-14T13:17:21.1163136Z     
2025-01-14T13:17:21.1163267Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1163383Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1163546Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1163613Z         else:
2025-01-14T13:17:21.1163699Z             continuum_state = None
2025-01-14T13:17:21.1163797Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1163908Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1163998Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1164106Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1164209Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1164301Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1164401Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1164471Z         ).to_numba(
2025-01-14T13:17:21.1164558Z             macro_atom_state,
2025-01-14T13:17:21.1164642Z             self.line_interaction_type,
2025-01-14T13:17:21.1164841Z         )
2025-01-14T13:17:21.1164943Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1165220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1165288Z         ]
2025-01-14T13:17:21.1165596Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1165601Z 
2025-01-14T13:17:21.1165747Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1166005Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-14T13:17:21.1166010Z 
2025-01-14T13:17:21.1166676Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1167133Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1167139Z 
2025-01-14T13:17:21.1167233Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1167372Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1167446Z         """
2025-01-14T13:17:21.1167557Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1167630Z     
2025-01-14T13:17:21.1167708Z         Parameters:
2025-01-14T13:17:21.1167781Z         -----------
2025-01-14T13:17:21.1167923Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1168064Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1168139Z     
2025-01-14T13:17:21.1168207Z         Returns:
2025-01-14T13:17:21.1168285Z         --------
2025-01-14T13:17:21.1168366Z         A TARDIS simulation object.
2025-01-14T13:17:21.1168444Z         """
2025-01-14T13:17:21.1168558Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1168686Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1168819Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1168999Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1169130Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1169231Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1169311Z >       sim = run_tardis(
2025-01-14T13:17:21.1169391Z             config_verysimple,
2025-01-14T13:17:21.1169474Z             atom_data=atomic_data,
2025-01-14T13:17:21.1169540Z         )
2025-01-14T13:17:21.1169545Z 
2025-01-14T13:17:21.1169686Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1169795Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1169888Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1169978Z     simulation.run_convergence()
2025-01-14T13:17:21.1170094Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1170230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1170331Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1170483Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1170593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1170598Z 
2025-01-14T13:17:21.1170864Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1171065Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1171293Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1171656Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1171997Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1172132Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1172137Z 
2025-01-14T13:17:21.1172228Z     def initialize_transport_state(
2025-01-14T13:17:21.1172295Z         self,
2025-01-14T13:17:21.1172380Z         simulation_state,
2025-01-14T13:17:21.1172463Z         opacity_state,
2025-01-14T13:17:21.1172537Z         macro_atom_state,
2025-01-14T13:17:21.1172611Z         plasma,
2025-01-14T13:17:21.1172686Z         no_of_packets,
2025-01-14T13:17:21.1172775Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1172847Z         iteration=0,
2025-01-14T13:17:21.1172918Z     ):
2025-01-14T13:17:21.1173044Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1173255Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1173324Z         else:
2025-01-14T13:17:21.1173408Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1173479Z     
2025-01-14T13:17:21.1173620Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1173716Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1173787Z         )
2025-01-14T13:17:21.1173852Z     
2025-01-14T13:17:21.1173983Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1174100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1174252Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1174324Z         else:
2025-01-14T13:17:21.1174405Z             continuum_state = None
2025-01-14T13:17:21.1174507Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1174613Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1174712Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1174817Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1174919Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1175015Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1175112Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1175183Z         ).to_numba(
2025-01-14T13:17:21.1175265Z             macro_atom_state,
2025-01-14T13:17:21.1175352Z             self.line_interaction_type,
2025-01-14T13:17:21.1175424Z         )
2025-01-14T13:17:21.1175527Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1175792Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1175865Z         ]
2025-01-14T13:17:21.1176165Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1176173Z 
2025-01-14T13:17:21.1176322Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1176581Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-14T13:17:21.1176589Z 
2025-01-14T13:17:21.1177259Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1177610Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1177614Z 
2025-01-14T13:17:21.1177701Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1177841Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1177909Z         """
2025-01-14T13:17:21.1178021Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1178090Z     
2025-01-14T13:17:21.1178167Z         Parameters:
2025-01-14T13:17:21.1178238Z         -----------
2025-01-14T13:17:21.1178379Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1178611Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1178683Z     
2025-01-14T13:17:21.1178751Z         Returns:
2025-01-14T13:17:21.1178825Z         --------
2025-01-14T13:17:21.1178907Z         A TARDIS simulation object.
2025-01-14T13:17:21.1178981Z         """
2025-01-14T13:17:21.1179097Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1179219Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1179352Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1179525Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1179661Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1179836Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1179916Z >       sim = run_tardis(
2025-01-14T13:17:21.1179995Z             config_verysimple,
2025-01-14T13:17:21.1180079Z             atom_data=atomic_data,
2025-01-14T13:17:21.1180151Z         )
2025-01-14T13:17:21.1180155Z 
2025-01-14T13:17:21.1180292Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1180400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1180489Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1180577Z     simulation.run_convergence()
2025-01-14T13:17:21.1180688Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1180831Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1180925Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1181081Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1181188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1181197Z 
2025-01-14T13:17:21.1181462Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1181888Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1182120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1182402Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1182560Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1182700Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1182705Z 
2025-01-14T13:17:21.1182789Z     def initialize_transport_state(
2025-01-14T13:17:21.1182862Z         self,
2025-01-14T13:17:21.1182939Z         simulation_state,
2025-01-14T13:17:21.1183017Z         opacity_state,
2025-01-14T13:17:21.1183097Z         macro_atom_state,
2025-01-14T13:17:21.1183172Z         plasma,
2025-01-14T13:17:21.1183244Z         no_of_packets,
2025-01-14T13:17:21.1183332Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1183403Z         iteration=0,
2025-01-14T13:17:21.1183475Z     ):
2025-01-14T13:17:21.1183602Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1183699Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1183771Z         else:
2025-01-14T13:17:21.1183847Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1183918Z     
2025-01-14T13:17:21.1184049Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1184145Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1184211Z         )
2025-01-14T13:17:21.1184287Z     
2025-01-14T13:17:21.1184413Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1184529Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1184679Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1184758Z         else:
2025-01-14T13:17:21.1184838Z             continuum_state = None
2025-01-14T13:17:21.1184940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1185192Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1185287Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1185394Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1185491Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1185588Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1185679Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1185754Z         ).to_numba(
2025-01-14T13:17:21.1185832Z             macro_atom_state,
2025-01-14T13:17:21.1185925Z             self.line_interaction_type,
2025-01-14T13:17:21.1185992Z         )
2025-01-14T13:17:21.1186097Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1186471Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1186543Z         ]
2025-01-14T13:17:21.1186842Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1186853Z 
2025-01-14T13:17:21.1187007Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1187262Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-14T13:17:21.1187267Z 
2025-01-14T13:17:21.1187930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1188284Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1188293Z 
2025-01-14T13:17:21.1188381Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1188527Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1188600Z         """
2025-01-14T13:17:21.1188717Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1188792Z     
2025-01-14T13:17:21.1188866Z         Parameters:
2025-01-14T13:17:21.1188943Z         -----------
2025-01-14T13:17:21.1189079Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1189225Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1189290Z     
2025-01-14T13:17:21.1189365Z         Returns:
2025-01-14T13:17:21.1189434Z         --------
2025-01-14T13:17:21.1189520Z         A TARDIS simulation object.
2025-01-14T13:17:21.1189586Z         """
2025-01-14T13:17:21.1189703Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1189825Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1189967Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1190143Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1190286Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1190386Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1190460Z >       sim = run_tardis(
2025-01-14T13:17:21.1190543Z             config_verysimple,
2025-01-14T13:17:21.1190622Z             atom_data=atomic_data,
2025-01-14T13:17:21.1190693Z         )
2025-01-14T13:17:21.1190697Z 
2025-01-14T13:17:21.1190831Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1190949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1191034Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1191128Z     simulation.run_convergence()
2025-01-14T13:17:21.1191245Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1191394Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1191488Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1191750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1191986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1191990Z 
2025-01-14T13:17:21.1192256Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1192462Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1192681Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1192958Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1193120Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1193260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1193387Z 
2025-01-14T13:17:21.1193482Z     def initialize_transport_state(
2025-01-14T13:17:21.1193550Z         self,
2025-01-14T13:17:21.1193637Z         simulation_state,
2025-01-14T13:17:21.1193710Z         opacity_state,
2025-01-14T13:17:21.1193791Z         macro_atom_state,
2025-01-14T13:17:21.1193860Z         plasma,
2025-01-14T13:17:21.1193937Z         no_of_packets,
2025-01-14T13:17:21.1194018Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1194094Z         iteration=0,
2025-01-14T13:17:21.1194159Z     ):
2025-01-14T13:17:21.1194287Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1194382Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1194453Z         else:
2025-01-14T13:17:21.1194529Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1194599Z     
2025-01-14T13:17:21.1194732Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1194831Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1194908Z         )
2025-01-14T13:17:21.1194979Z     
2025-01-14T13:17:21.1195112Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1195230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1195386Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1195454Z         else:
2025-01-14T13:17:21.1195541Z             continuum_state = None
2025-01-14T13:17:21.1195644Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1195756Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1195848Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1195957Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1196054Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1196151Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1196244Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1196324Z         ).to_numba(
2025-01-14T13:17:21.1196402Z             macro_atom_state,
2025-01-14T13:17:21.1196494Z             self.line_interaction_type,
2025-01-14T13:17:21.1196568Z         )
2025-01-14T13:17:21.1196667Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1196940Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1197007Z         ]
2025-01-14T13:17:21.1197317Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1197322Z 
2025-01-14T13:17:21.1197468Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1197727Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-14T13:17:21.1197731Z 
2025-01-14T13:17:21.1198390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1198852Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1198857Z 
2025-01-14T13:17:21.1198948Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1199084Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1199156Z         """
2025-01-14T13:17:21.1199264Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1199335Z     
2025-01-14T13:17:21.1199408Z         Parameters:
2025-01-14T13:17:21.1199484Z         -----------
2025-01-14T13:17:21.1199619Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1199766Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1199832Z     
2025-01-14T13:17:21.1199991Z         Returns:
2025-01-14T13:17:21.1200067Z         --------
2025-01-14T13:17:21.1200149Z         A TARDIS simulation object.
2025-01-14T13:17:21.1200219Z         """
2025-01-14T13:17:21.1200336Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1200460Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1200591Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1200771Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1200903Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1201001Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1201074Z >       sim = run_tardis(
2025-01-14T13:17:21.1201159Z             config_verysimple,
2025-01-14T13:17:21.1201238Z             atom_data=atomic_data,
2025-01-14T13:17:21.1201309Z         )
2025-01-14T13:17:21.1201313Z 
2025-01-14T13:17:21.1201450Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1201669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1201760Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1201849Z     simulation.run_convergence()
2025-01-14T13:17:21.1201966Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1202102Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1202200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1202351Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1202460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1202464Z 
2025-01-14T13:17:21.1202726Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1202930Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1203157Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1203431Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1203597Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1203731Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1203735Z 
2025-01-14T13:17:21.1203824Z     def initialize_transport_state(
2025-01-14T13:17:21.1203893Z         self,
2025-01-14T13:17:21.1203977Z         simulation_state,
2025-01-14T13:17:21.1204053Z         opacity_state,
2025-01-14T13:17:21.1204134Z         macro_atom_state,
2025-01-14T13:17:21.1204203Z         plasma,
2025-01-14T13:17:21.1204279Z         no_of_packets,
2025-01-14T13:17:21.1204359Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1204436Z         iteration=0,
2025-01-14T13:17:21.1204507Z     ):
2025-01-14T13:17:21.1204629Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1204732Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1204800Z         else:
2025-01-14T13:17:21.1204881Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1204947Z     
2025-01-14T13:17:21.1205208Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1205303Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1205373Z         )
2025-01-14T13:17:21.1205438Z     
2025-01-14T13:17:21.1205567Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1205679Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1205836Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1205904Z         else:
2025-01-14T13:17:21.1205991Z             continuum_state = None
2025-01-14T13:17:21.1206088Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1206201Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1206405Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1206512Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1206612Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1206708Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1206801Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1206871Z         ).to_numba(
2025-01-14T13:17:21.1206951Z             macro_atom_state,
2025-01-14T13:17:21.1207037Z             self.line_interaction_type,
2025-01-14T13:17:21.1207108Z         )
2025-01-14T13:17:21.1207206Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1207481Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1207548Z         ]
2025-01-14T13:17:21.1207851Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1207856Z 
2025-01-14T13:17:21.1208010Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1208269Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-14T13:17:21.1208278Z 
2025-01-14T13:17:21.1208937Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1209283Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1209288Z 
2025-01-14T13:17:21.1209380Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1209521Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1209587Z         """
2025-01-14T13:17:21.1209700Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1209769Z     
2025-01-14T13:17:21.1209847Z         Parameters:
2025-01-14T13:17:21.1209917Z         -----------
2025-01-14T13:17:21.1210056Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1210202Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1210272Z     
2025-01-14T13:17:21.1210340Z         Returns:
2025-01-14T13:17:21.1210415Z         --------
2025-01-14T13:17:21.1210498Z         A TARDIS simulation object.
2025-01-14T13:17:21.1210573Z         """
2025-01-14T13:17:21.1210684Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1210810Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1210939Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1211119Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1211256Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1211351Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1211435Z >       sim = run_tardis(
2025-01-14T13:17:21.1211515Z             config_verysimple,
2025-01-14T13:17:21.1211705Z             atom_data=atomic_data,
2025-01-14T13:17:21.1211897Z         )
2025-01-14T13:17:21.1211902Z 
2025-01-14T13:17:21.1212045Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1212154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1212243Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1212329Z     simulation.run_convergence()
2025-01-14T13:17:21.1212445Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1212581Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1212679Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1212835Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1212942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1213051Z 
2025-01-14T13:17:21.1213319Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1213517Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1213746Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1214018Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1214182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1214315Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1214324Z 
2025-01-14T13:17:21.1214409Z     def initialize_transport_state(
2025-01-14T13:17:21.1214481Z         self,
2025-01-14T13:17:21.1214557Z         simulation_state,
2025-01-14T13:17:21.1214635Z         opacity_state,
2025-01-14T13:17:21.1214709Z         macro_atom_state,
2025-01-14T13:17:21.1214788Z         plasma,
2025-01-14T13:17:21.1214860Z         no_of_packets,
2025-01-14T13:17:21.1214944Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1215016Z         iteration=0,
2025-01-14T13:17:21.1215093Z     ):
2025-01-14T13:17:21.1215216Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1215315Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1215385Z         else:
2025-01-14T13:17:21.1215466Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1215532Z     
2025-01-14T13:17:21.1215666Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1215759Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1215831Z         )
2025-01-14T13:17:21.1215902Z     
2025-01-14T13:17:21.1216036Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1216159Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1216316Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1216395Z         else:
2025-01-14T13:17:21.1216480Z             continuum_state = None
2025-01-14T13:17:21.1216589Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1216702Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1216798Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1216905Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1217010Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1217107Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1217203Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1217275Z         ).to_numba(
2025-01-14T13:17:21.1217357Z             macro_atom_state,
2025-01-14T13:17:21.1217450Z             self.line_interaction_type,
2025-01-14T13:17:21.1217518Z         )
2025-01-14T13:17:21.1217625Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1217893Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1217968Z         ]
2025-01-14T13:17:21.1218270Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1218360Z 
2025-01-14T13:17:21.1218515Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1218767Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-14T13:17:21.1218771Z 
2025-01-14T13:17:21.1219442Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1219792Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1219893Z 
2025-01-14T13:17:21.1219983Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1220130Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1220199Z         """
2025-01-14T13:17:21.1220321Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1220387Z     
2025-01-14T13:17:21.1220466Z         Parameters:
2025-01-14T13:17:21.1220540Z         -----------
2025-01-14T13:17:21.1220681Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1220822Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1220893Z     
2025-01-14T13:17:21.1220968Z         Returns:
2025-01-14T13:17:21.1221039Z         --------
2025-01-14T13:17:21.1221128Z         A TARDIS simulation object.
2025-01-14T13:17:21.1221195Z         """
2025-01-14T13:17:21.1221316Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1221438Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1221756Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1221953Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1222106Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1222203Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1222282Z >       sim = run_tardis(
2025-01-14T13:17:21.1222363Z             config_verysimple,
2025-01-14T13:17:21.1222449Z             atom_data=atomic_data,
2025-01-14T13:17:21.1222516Z         )
2025-01-14T13:17:21.1222525Z 
2025-01-14T13:17:21.1222660Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1222776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1222860Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1222950Z     simulation.run_convergence()
2025-01-14T13:17:21.1223066Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1223215Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1223310Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1223468Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1223582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1223586Z 
2025-01-14T13:17:21.1223852Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1224053Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1224278Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1224559Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1224722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1224862Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1224870Z 
2025-01-14T13:17:21.1224958Z     def initialize_transport_state(
2025-01-14T13:17:21.1225033Z         self,
2025-01-14T13:17:21.1225109Z         simulation_state,
2025-01-14T13:17:21.1225343Z         opacity_state,
2025-01-14T13:17:21.1225420Z         macro_atom_state,
2025-01-14T13:17:21.1225495Z         plasma,
2025-01-14T13:17:21.1225567Z         no_of_packets,
2025-01-14T13:17:21.1225653Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1225730Z         iteration=0,
2025-01-14T13:17:21.1225797Z     ):
2025-01-14T13:17:21.1225933Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1226032Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1226104Z         else:
2025-01-14T13:17:21.1226181Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1226252Z     
2025-01-14T13:17:21.1226385Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1226485Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1226666Z         )
2025-01-14T13:17:21.1226736Z     
2025-01-14T13:17:21.1226863Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1226981Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1227139Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1227211Z         else:
2025-01-14T13:17:21.1227296Z             continuum_state = None
2025-01-14T13:17:21.1227399Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1227510Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1227606Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1227721Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1227820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1227916Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1228007Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1228086Z         ).to_numba(
2025-01-14T13:17:21.1228163Z             macro_atom_state,
2025-01-14T13:17:21.1228254Z             self.line_interaction_type,
2025-01-14T13:17:21.1228321Z         )
2025-01-14T13:17:21.1228430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1228700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1228779Z         ]
2025-01-14T13:17:21.1229080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1229091Z 
2025-01-14T13:17:21.1229237Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1229499Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-14T13:17:21.1229504Z 
2025-01-14T13:17:21.1230166Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1230522Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1230530Z 
2025-01-14T13:17:21.1230617Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1230759Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1230832Z         """
2025-01-14T13:17:21.1230946Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1231018Z     
2025-01-14T13:17:21.1231092Z         Parameters:
2025-01-14T13:17:21.1231167Z         -----------
2025-01-14T13:17:21.1231303Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1231459Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1231527Z     
2025-01-14T13:17:21.1231726Z         Returns:
2025-01-14T13:17:21.1231804Z         --------
2025-01-14T13:17:21.1231897Z         A TARDIS simulation object.
2025-01-14T13:17:21.1231965Z         """
2025-01-14T13:17:21.1232087Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1232332Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1232470Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1232654Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1232788Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1232890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1232967Z >       sim = run_tardis(
2025-01-14T13:17:21.1233058Z             config_verysimple,
2025-01-14T13:17:21.1233137Z             atom_data=atomic_data,
2025-01-14T13:17:21.1233214Z         )
2025-01-14T13:17:21.1233218Z 
2025-01-14T13:17:21.1233356Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1233583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1233669Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1233761Z     simulation.run_convergence()
2025-01-14T13:17:21.1233883Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1234027Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1234129Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1234280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1234389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1234393Z 
2025-01-14T13:17:21.1234656Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1234860Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1235079Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1235360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1235520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1235667Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1235671Z 
2025-01-14T13:17:21.1235762Z     def initialize_transport_state(
2025-01-14T13:17:21.1235830Z         self,
2025-01-14T13:17:21.1235911Z         simulation_state,
2025-01-14T13:17:21.1235986Z         opacity_state,
2025-01-14T13:17:21.1236066Z         macro_atom_state,
2025-01-14T13:17:21.1236139Z         plasma,
2025-01-14T13:17:21.1236216Z         no_of_packets,
2025-01-14T13:17:21.1236298Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1236376Z         iteration=0,
2025-01-14T13:17:21.1236445Z     ):
2025-01-14T13:17:21.1236572Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1236666Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1236747Z         else:
2025-01-14T13:17:21.1236825Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1236899Z     
2025-01-14T13:17:21.1237035Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1237140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1237215Z         )
2025-01-14T13:17:21.1237282Z     
2025-01-14T13:17:21.1237415Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1237528Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1237686Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1237755Z         else:
2025-01-14T13:17:21.1237843Z             continuum_state = None
2025-01-14T13:17:21.1237945Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1238059Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1238151Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1238267Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1238366Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1238467Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1238649Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1238727Z         ).to_numba(
2025-01-14T13:17:21.1238810Z             macro_atom_state,
2025-01-14T13:17:21.1238898Z             self.line_interaction_type,
2025-01-14T13:17:21.1238974Z         )
2025-01-14T13:17:21.1239073Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1239348Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1239417Z         ]
2025-01-14T13:17:21.1239725Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1239729Z 
2025-01-14T13:17:21.1239876Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1240229Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-14T13:17:21.1240234Z 
2025-01-14T13:17:21.1240901Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1241244Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1241249Z 
2025-01-14T13:17:21.1241344Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1241484Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1241659Z         """
2025-01-14T13:17:21.1241773Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1241846Z     
2025-01-14T13:17:21.1241926Z         Parameters:
2025-01-14T13:17:21.1242004Z         -----------
2025-01-14T13:17:21.1242140Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1242292Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1242374Z     
2025-01-14T13:17:21.1242447Z         Returns:
2025-01-14T13:17:21.1242529Z         --------
2025-01-14T13:17:21.1242614Z         A TARDIS simulation object.
2025-01-14T13:17:21.1242690Z         """
2025-01-14T13:17:21.1242803Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1242933Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1243064Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1243245Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1243379Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1243485Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1243566Z >       sim = run_tardis(
2025-01-14T13:17:21.1243654Z             config_verysimple,
2025-01-14T13:17:21.1243737Z             atom_data=atomic_data,
2025-01-14T13:17:21.1243811Z         )
2025-01-14T13:17:21.1243818Z 
2025-01-14T13:17:21.1243960Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1244071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1244164Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1244252Z     simulation.run_convergence()
2025-01-14T13:17:21.1244372Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1244509Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1244608Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1244760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1244873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1244881Z 
2025-01-14T13:17:21.1245142Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1245347Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1245722Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1245993Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1246157Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1246291Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1246295Z 
2025-01-14T13:17:21.1246387Z     def initialize_transport_state(
2025-01-14T13:17:21.1246454Z         self,
2025-01-14T13:17:21.1246535Z         simulation_state,
2025-01-14T13:17:21.1246610Z         opacity_state,
2025-01-14T13:17:21.1246694Z         macro_atom_state,
2025-01-14T13:17:21.1246765Z         plasma,
2025-01-14T13:17:21.1246969Z         no_of_packets,
2025-01-14T13:17:21.1247060Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1247135Z         iteration=0,
2025-01-14T13:17:21.1247209Z     ):
2025-01-14T13:17:21.1247343Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1247444Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1247515Z         else:
2025-01-14T13:17:21.1247599Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1247667Z     
2025-01-14T13:17:21.1247806Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1247902Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1247976Z         )
2025-01-14T13:17:21.1248045Z     
2025-01-14T13:17:21.1248180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1248293Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1248450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1248524Z         else:
2025-01-14T13:17:21.1248613Z             continuum_state = None
2025-01-14T13:17:21.1248718Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1248826Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1248928Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1249033Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1249138Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1249231Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1249328Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1249400Z         ).to_numba(
2025-01-14T13:17:21.1249484Z             macro_atom_state,
2025-01-14T13:17:21.1249572Z             self.line_interaction_type,
2025-01-14T13:17:21.1249646Z         )
2025-01-14T13:17:21.1249746Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1250019Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1250092Z         ]
2025-01-14T13:17:21.1250398Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1250407Z 
2025-01-14T13:17:21.1250558Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1250780Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-14T13:17:21.1250785Z 
2025-01-14T13:17:21.1251453Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1251905Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1251917Z 
2025-01-14T13:17:21.1252008Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1252149Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1252217Z         """
2025-01-14T13:17:21.1252331Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1252518Z     
2025-01-14T13:17:21.1252600Z         Parameters:
2025-01-14T13:17:21.1252672Z         -----------
2025-01-14T13:17:21.1252814Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1252955Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1253031Z     
2025-01-14T13:17:21.1253102Z         Returns:
2025-01-14T13:17:21.1253183Z         --------
2025-01-14T13:17:21.1253267Z         A TARDIS simulation object.
2025-01-14T13:17:21.1253343Z         """
2025-01-14T13:17:21.1253459Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1253589Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1253721Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1254019Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1254159Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1254264Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1254353Z >       sim = run_tardis(
2025-01-14T13:17:21.1254434Z             config_verysimple,
2025-01-14T13:17:21.1254522Z             atom_data=atomic_data,
2025-01-14T13:17:21.1254592Z         )
2025-01-14T13:17:21.1254596Z 
2025-01-14T13:17:21.1254743Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1254858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1254952Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1255041Z     simulation.run_convergence()
2025-01-14T13:17:21.1255161Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1255306Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1255407Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1255563Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1255675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1255679Z 
2025-01-14T13:17:21.1255952Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1256153Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1256377Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1256649Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1256815Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1256954Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1256968Z 
2025-01-14T13:17:21.1257058Z     def initialize_transport_state(
2025-01-14T13:17:21.1257133Z         self,
2025-01-14T13:17:21.1257211Z         simulation_state,
2025-01-14T13:17:21.1257291Z         opacity_state,
2025-01-14T13:17:21.1257369Z         macro_atom_state,
2025-01-14T13:17:21.1257443Z         plasma,
2025-01-14T13:17:21.1257516Z         no_of_packets,
2025-01-14T13:17:21.1257603Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1257676Z         iteration=0,
2025-01-14T13:17:21.1257749Z     ):
2025-01-14T13:17:21.1257873Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1257976Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1258047Z         else:
2025-01-14T13:17:21.1258131Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1258199Z     
2025-01-14T13:17:21.1258335Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1258436Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1258503Z         )
2025-01-14T13:17:21.1258584Z     
2025-01-14T13:17:21.1258710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1258828Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1259076Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1259154Z         else:
2025-01-14T13:17:21.1259237Z             continuum_state = None
2025-01-14T13:17:21.1259343Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1259451Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1259550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1259655Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1259760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1259854Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1259951Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1260029Z         ).to_numba(
2025-01-14T13:17:21.1260186Z             macro_atom_state,
2025-01-14T13:17:21.1260279Z             self.line_interaction_type,
2025-01-14T13:17:21.1260348Z         )
2025-01-14T13:17:21.1260455Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1260728Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1260804Z         ]
2025-01-14T13:17:21.1261102Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1261106Z 
2025-01-14T13:17:21.1261257Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1261475Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-14T13:17:21.1261486Z 
2025-01-14T13:17:21.1262338Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1262706Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1262717Z 
2025-01-14T13:17:21.1262803Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1262947Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1263014Z         """
2025-01-14T13:17:21.1263131Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1263199Z     
2025-01-14T13:17:21.1263279Z         Parameters:
2025-01-14T13:17:21.1263350Z         -----------
2025-01-14T13:17:21.1263490Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1263637Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1263707Z     
2025-01-14T13:17:21.1263783Z         Returns:
2025-01-14T13:17:21.1263859Z         --------
2025-01-14T13:17:21.1263960Z         A TARDIS simulation object.
2025-01-14T13:17:21.1264030Z         """
2025-01-14T13:17:21.1264150Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1264275Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1264414Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1264590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1264732Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1264829Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1264913Z >       sim = run_tardis(
2025-01-14T13:17:21.1264995Z             config_verysimple,
2025-01-14T13:17:21.1265082Z             atom_data=atomic_data,
2025-01-14T13:17:21.1265157Z         )
2025-01-14T13:17:21.1265161Z 
2025-01-14T13:17:21.1265296Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1265418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1265510Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1265603Z     simulation.run_convergence()
2025-01-14T13:17:21.1265719Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1266014Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1266112Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1266272Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1266381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1266386Z 
2025-01-14T13:17:21.1266654Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1266863Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1267083Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1267473Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1267637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1267787Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1267791Z 
2025-01-14T13:17:21.1267880Z     def initialize_transport_state(
2025-01-14T13:17:21.1267955Z         self,
2025-01-14T13:17:21.1268034Z         simulation_state,
2025-01-14T13:17:21.1268115Z         opacity_state,
2025-01-14T13:17:21.1268189Z         macro_atom_state,
2025-01-14T13:17:21.1268264Z         plasma,
2025-01-14T13:17:21.1268337Z         no_of_packets,
2025-01-14T13:17:21.1268424Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1268503Z         iteration=0,
2025-01-14T13:17:21.1268570Z     ):
2025-01-14T13:17:21.1268700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1268796Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1268875Z         else:
2025-01-14T13:17:21.1268953Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1269026Z     
2025-01-14T13:17:21.1269161Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1269267Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1269336Z         )
2025-01-14T13:17:21.1269409Z     
2025-01-14T13:17:21.1269538Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1269657Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1269810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1269885Z         else:
2025-01-14T13:17:21.1269967Z             continuum_state = None
2025-01-14T13:17:21.1270074Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1270193Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1270287Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1270403Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1270509Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1270606Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1270702Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1270779Z         ).to_numba(
2025-01-14T13:17:21.1270857Z             macro_atom_state,
2025-01-14T13:17:21.1270952Z             self.line_interaction_type,
2025-01-14T13:17:21.1271021Z         )
2025-01-14T13:17:21.1271128Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1271398Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1271477Z         ]
2025-01-14T13:17:21.1271933Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1271939Z 
2025-01-14T13:17:21.1272089Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1272320Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-14T13:17:21.1272325Z 
2025-01-14T13:17:21.1272988Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1273502Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1273507Z 
2025-01-14T13:17:21.1273606Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1273747Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1273822Z         """
2025-01-14T13:17:21.1273934Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1274007Z     
2025-01-14T13:17:21.1274084Z         Parameters:
2025-01-14T13:17:21.1274165Z         -----------
2025-01-14T13:17:21.1274428Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1274579Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1274653Z     
2025-01-14T13:17:21.1274731Z         Returns:
2025-01-14T13:17:21.1274811Z         --------
2025-01-14T13:17:21.1274908Z         A TARDIS simulation object.
2025-01-14T13:17:21.1274976Z         """
2025-01-14T13:17:21.1275096Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1275219Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1275357Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1275536Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1275671Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1275773Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1275853Z >       sim = run_tardis(
2025-01-14T13:17:21.1275943Z             config_verysimple,
2025-01-14T13:17:21.1276025Z             atom_data=atomic_data,
2025-01-14T13:17:21.1276098Z         )
2025-01-14T13:17:21.1276102Z 
2025-01-14T13:17:21.1276237Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1276359Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1276444Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1276537Z     simulation.run_convergence()
2025-01-14T13:17:21.1276650Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1276793Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1276893Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1277046Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1277162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1277166Z 
2025-01-14T13:17:21.1277429Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1277641Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1277862Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1278142Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1278302Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1278443Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1278448Z 
2025-01-14T13:17:21.1278540Z     def initialize_transport_state(
2025-01-14T13:17:21.1278609Z         self,
2025-01-14T13:17:21.1278692Z         simulation_state,
2025-01-14T13:17:21.1278767Z         opacity_state,
2025-01-14T13:17:21.1278847Z         macro_atom_state,
2025-01-14T13:17:21.1278918Z         plasma,
2025-01-14T13:17:21.1278997Z         no_of_packets,
2025-01-14T13:17:21.1279082Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1279163Z         iteration=0,
2025-01-14T13:17:21.1279232Z     ):
2025-01-14T13:17:21.1279361Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1279546Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1279620Z         else:
2025-01-14T13:17:21.1279698Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1279769Z     
2025-01-14T13:17:21.1279902Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1280002Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1280075Z         )
2025-01-14T13:17:21.1280140Z     
2025-01-14T13:17:21.1280273Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1280387Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1280545Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1280614Z         else:
2025-01-14T13:17:21.1280785Z             continuum_state = None
2025-01-14T13:17:21.1280886Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1280999Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1281097Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1281209Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1281306Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1281405Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1281501Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1281678Z         ).to_numba(
2025-01-14T13:17:21.1281763Z             macro_atom_state,
2025-01-14T13:17:21.1281853Z             self.line_interaction_type,
2025-01-14T13:17:21.1281931Z         )
2025-01-14T13:17:21.1282033Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1282308Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1282381Z         ]
2025-01-14T13:17:21.1282688Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1282693Z 
2025-01-14T13:17:21.1282847Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1283070Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-14T13:17:21.1283074Z 
2025-01-14T13:17:21.1283741Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1284086Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1284090Z 
2025-01-14T13:17:21.1284184Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1284326Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1284403Z         """
2025-01-14T13:17:21.1284516Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1284595Z     
2025-01-14T13:17:21.1284671Z         Parameters:
2025-01-14T13:17:21.1284750Z         -----------
2025-01-14T13:17:21.1284886Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1285036Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1285108Z     
2025-01-14T13:17:21.1285180Z         Returns:
2025-01-14T13:17:21.1285257Z         --------
2025-01-14T13:17:21.1285341Z         A TARDIS simulation object.
2025-01-14T13:17:21.1285413Z         """
2025-01-14T13:17:21.1285526Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1285655Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1285787Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1285970Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1286101Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1286202Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1286410Z >       sim = run_tardis(
2025-01-14T13:17:21.1286497Z             config_verysimple,
2025-01-14T13:17:21.1286578Z             atom_data=atomic_data,
2025-01-14T13:17:21.1286651Z         )
2025-01-14T13:17:21.1286655Z 
2025-01-14T13:17:21.1286794Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1286905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1286995Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1287080Z     simulation.run_convergence()
2025-01-14T13:17:21.1287197Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1287335Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1287435Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1287695Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1287807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1287822Z 
2025-01-14T13:17:21.1288083Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1288290Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1288516Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1288792Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1288956Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1289091Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1289095Z 
2025-01-14T13:17:21.1289186Z     def initialize_transport_state(
2025-01-14T13:17:21.1289262Z         self,
2025-01-14T13:17:21.1289345Z         simulation_state,
2025-01-14T13:17:21.1289419Z         opacity_state,
2025-01-14T13:17:21.1289500Z         macro_atom_state,
2025-01-14T13:17:21.1289576Z         plasma,
2025-01-14T13:17:21.1289655Z         no_of_packets,
2025-01-14T13:17:21.1289744Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1289817Z         iteration=0,
2025-01-14T13:17:21.1289889Z     ):
2025-01-14T13:17:21.1290018Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1290129Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1290197Z         else:
2025-01-14T13:17:21.1290283Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1290350Z     
2025-01-14T13:17:21.1290487Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1290583Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1290656Z         )
2025-01-14T13:17:21.1290723Z     
2025-01-14T13:17:21.1290863Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1290975Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1291135Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1291207Z         else:
2025-01-14T13:17:21.1291295Z             continuum_state = None
2025-01-14T13:17:21.1291400Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1291505Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1291706Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1291813Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1291917Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1292009Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1292110Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1292181Z         ).to_numba(
2025-01-14T13:17:21.1292267Z             macro_atom_state,
2025-01-14T13:17:21.1292363Z             self.line_interaction_type,
2025-01-14T13:17:21.1292436Z         )
2025-01-14T13:17:21.1292535Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1292805Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1293008Z         ]
2025-01-14T13:17:21.1293311Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1293315Z 
2025-01-14T13:17:21.1293467Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1293683Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-14T13:17:21.1293688Z 
2025-01-14T13:17:21.1294349Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1294827Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1294843Z 
2025-01-14T13:17:21.1294932Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1295075Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1295144Z         """
2025-01-14T13:17:21.1295259Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1295326Z     
2025-01-14T13:17:21.1295404Z         Parameters:
2025-01-14T13:17:21.1295476Z         -----------
2025-01-14T13:17:21.1295616Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1295755Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1295827Z     
2025-01-14T13:17:21.1295896Z         Returns:
2025-01-14T13:17:21.1295974Z         --------
2025-01-14T13:17:21.1296055Z         A TARDIS simulation object.
2025-01-14T13:17:21.1296135Z         """
2025-01-14T13:17:21.1296248Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1296374Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1296514Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1296687Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1296825Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1296923Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1297003Z >       sim = run_tardis(
2025-01-14T13:17:21.1297083Z             config_verysimple,
2025-01-14T13:17:21.1297170Z             atom_data=atomic_data,
2025-01-14T13:17:21.1297238Z         )
2025-01-14T13:17:21.1297242Z 
2025-01-14T13:17:21.1297379Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1297487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1297582Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1297667Z     simulation.run_convergence()
2025-01-14T13:17:21.1297788Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1297942Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1298043Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1298198Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1298305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1298309Z 
2025-01-14T13:17:21.1298575Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1298776Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1299001Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1299272Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1299444Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1299584Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1299680Z 
2025-01-14T13:17:21.1299768Z     def initialize_transport_state(
2025-01-14T13:17:21.1299842Z         self,
2025-01-14T13:17:21.1299920Z         simulation_state,
2025-01-14T13:17:21.1300001Z         opacity_state,
2025-01-14T13:17:21.1300077Z         macro_atom_state,
2025-01-14T13:17:21.1300151Z         plasma,
2025-01-14T13:17:21.1300227Z         no_of_packets,
2025-01-14T13:17:21.1300313Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1300388Z         iteration=0,
2025-01-14T13:17:21.1300462Z     ):
2025-01-14T13:17:21.1300584Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1300688Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1300758Z         else:
2025-01-14T13:17:21.1300840Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1301001Z     
2025-01-14T13:17:21.1301140Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1301240Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1301313Z         )
2025-01-14T13:17:21.1301396Z     
2025-01-14T13:17:21.1301532Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1301854Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1302033Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1302108Z         else:
2025-01-14T13:17:21.1302189Z             continuum_state = None
2025-01-14T13:17:21.1302296Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1302403Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1302500Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1302604Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1302706Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1302805Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1302902Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1302984Z         ).to_numba(
2025-01-14T13:17:21.1303062Z             macro_atom_state,
2025-01-14T13:17:21.1303156Z             self.line_interaction_type,
2025-01-14T13:17:21.1303224Z         )
2025-01-14T13:17:21.1303332Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1303602Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1303675Z         ]
2025-01-14T13:17:21.1303973Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1303977Z 
2025-01-14T13:17:21.1304127Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1304343Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-14T13:17:21.1304359Z 
2025-01-14T13:17:21.1305016Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1305370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1305375Z 
2025-01-14T13:17:21.1305463Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1305610Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1305678Z         """
2025-01-14T13:17:21.1305802Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1305880Z     
2025-01-14T13:17:21.1305958Z         Parameters:
2025-01-14T13:17:21.1306029Z         -----------
2025-01-14T13:17:21.1306171Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1306321Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1306388Z     
2025-01-14T13:17:21.1306464Z         Returns:
2025-01-14T13:17:21.1306676Z         --------
2025-01-14T13:17:21.1306767Z         A TARDIS simulation object.
2025-01-14T13:17:21.1306836Z         """
2025-01-14T13:17:21.1306955Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1307076Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1307212Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1307385Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1307522Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1307617Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1307697Z >       sim = run_tardis(
2025-01-14T13:17:21.1307777Z             config_verysimple,
2025-01-14T13:17:21.1307970Z             atom_data=atomic_data,
2025-01-14T13:17:21.1308042Z         )
2025-01-14T13:17:21.1308047Z 
2025-01-14T13:17:21.1308178Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1308298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1308382Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1308472Z     simulation.run_convergence()
2025-01-14T13:17:21.1308585Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1308726Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1308821Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1308977Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1309084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1309089Z 
2025-01-14T13:17:21.1309352Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1309562Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1309782Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1310066Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1310225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1310364Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1310369Z 
2025-01-14T13:17:21.1310454Z     def initialize_transport_state(
2025-01-14T13:17:21.1310527Z         self,
2025-01-14T13:17:21.1310604Z         simulation_state,
2025-01-14T13:17:21.1310685Z         opacity_state,
2025-01-14T13:17:21.1310761Z         macro_atom_state,
2025-01-14T13:17:21.1310841Z         plasma,
2025-01-14T13:17:21.1310919Z         no_of_packets,
2025-01-14T13:17:21.1310999Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1311086Z         iteration=0,
2025-01-14T13:17:21.1311157Z     ):
2025-01-14T13:17:21.1311284Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1311377Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1311454Z         else:
2025-01-14T13:17:21.1311531Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1311708Z     
2025-01-14T13:17:21.1311841Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1311942Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1312010Z         )
2025-01-14T13:17:21.1312081Z     
2025-01-14T13:17:21.1312206Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1312326Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1312478Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1312551Z         else:
2025-01-14T13:17:21.1312639Z             continuum_state = None
2025-01-14T13:17:21.1312740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1312861Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1312951Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1313182Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1313281Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1313379Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1313471Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1313547Z         ).to_numba(
2025-01-14T13:17:21.1313624Z             macro_atom_state,
2025-01-14T13:17:21.1313716Z             self.line_interaction_type,
2025-01-14T13:17:21.1313783Z         )
2025-01-14T13:17:21.1313890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1314162Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1314237Z         ]
2025-01-14T13:17:21.1314543Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1314656Z 
2025-01-14T13:17:21.1314807Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1315037Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-14T13:17:21.1315042Z 
2025-01-14T13:17:21.1315696Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1316048Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1316053Z 
2025-01-14T13:17:21.1316144Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1316284Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1316364Z         """
2025-01-14T13:17:21.1316474Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1316545Z     
2025-01-14T13:17:21.1316618Z         Parameters:
2025-01-14T13:17:21.1316699Z         -----------
2025-01-14T13:17:21.1316835Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1316984Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1317055Z     
2025-01-14T13:17:21.1317130Z         Returns:
2025-01-14T13:17:21.1317200Z         --------
2025-01-14T13:17:21.1317289Z         A TARDIS simulation object.
2025-01-14T13:17:21.1317357Z         """
2025-01-14T13:17:21.1322191Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1322381Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1322539Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1322728Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1322888Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1322993Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1323070Z >       sim = run_tardis(
2025-01-14T13:17:21.1323164Z             config_verysimple,
2025-01-14T13:17:21.1323247Z             atom_data=atomic_data,
2025-01-14T13:17:21.1323319Z         )
2025-01-14T13:17:21.1323324Z 
2025-01-14T13:17:21.1323470Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1323593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1323682Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1323775Z     simulation.run_convergence()
2025-01-14T13:17:21.1323895Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1324045Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1324148Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1324300Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1324417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1324422Z 
2025-01-14T13:17:21.1324863Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1325070Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1325292Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1325569Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1325732Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1325875Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1325879Z 
2025-01-14T13:17:21.1325971Z     def initialize_transport_state(
2025-01-14T13:17:21.1326040Z         self,
2025-01-14T13:17:21.1326259Z         simulation_state,
2025-01-14T13:17:21.1326334Z         opacity_state,
2025-01-14T13:17:21.1326413Z         macro_atom_state,
2025-01-14T13:17:21.1326483Z         plasma,
2025-01-14T13:17:21.1326560Z         no_of_packets,
2025-01-14T13:17:21.1326648Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1326724Z         iteration=0,
2025-01-14T13:17:21.1326790Z     ):
2025-01-14T13:17:21.1326923Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1327022Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1327099Z         else:
2025-01-14T13:17:21.1327176Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1327246Z     
2025-01-14T13:17:21.1327385Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1327490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1327564Z         )
2025-01-14T13:17:21.1327630Z     
2025-01-14T13:17:21.1327766Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1327889Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1328047Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1328116Z         else:
2025-01-14T13:17:21.1328212Z             continuum_state = None
2025-01-14T13:17:21.1328314Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1328428Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1328520Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1328632Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1328730Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1328828Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1328918Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1328994Z         ).to_numba(
2025-01-14T13:17:21.1329081Z             macro_atom_state,
2025-01-14T13:17:21.1329168Z             self.line_interaction_type,
2025-01-14T13:17:21.1329244Z         )
2025-01-14T13:17:21.1329345Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1329621Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1329692Z         ]
2025-01-14T13:17:21.1329996Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1330001Z 
2025-01-14T13:17:21.1330152Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1330381Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-14T13:17:21.1330386Z 
2025-01-14T13:17:21.1331059Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1331416Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1331425Z 
2025-01-14T13:17:21.1331519Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1331882Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1331956Z         """
2025-01-14T13:17:21.1332068Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1332140Z     
2025-01-14T13:17:21.1332213Z         Parameters:
2025-01-14T13:17:21.1332292Z         -----------
2025-01-14T13:17:21.1332429Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1332578Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1332651Z     
2025-01-14T13:17:21.1332721Z         Returns:
2025-01-14T13:17:21.1332796Z         --------
2025-01-14T13:17:21.1332880Z         A TARDIS simulation object.
2025-01-14T13:17:21.1332952Z         """
2025-01-14T13:17:21.1333067Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1333307Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1333438Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1333623Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1333757Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1333862Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1333938Z >       sim = run_tardis(
2025-01-14T13:17:21.1334023Z             config_verysimple,
2025-01-14T13:17:21.1334103Z             atom_data=atomic_data,
2025-01-14T13:17:21.1334175Z         )
2025-01-14T13:17:21.1334180Z 
2025-01-14T13:17:21.1334321Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1334435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1334528Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1334620Z     simulation.run_convergence()
2025-01-14T13:17:21.1334737Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1334877Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1334979Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1335134Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1335247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1335251Z 
2025-01-14T13:17:21.1335514Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1335722Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1335948Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1336221Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1336385Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1336526Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1336530Z 
2025-01-14T13:17:21.1336622Z     def initialize_transport_state(
2025-01-14T13:17:21.1336694Z         self,
2025-01-14T13:17:21.1336776Z         simulation_state,
2025-01-14T13:17:21.1336850Z         opacity_state,
2025-01-14T13:17:21.1336935Z         macro_atom_state,
2025-01-14T13:17:21.1337005Z         plasma,
2025-01-14T13:17:21.1337082Z         no_of_packets,
2025-01-14T13:17:21.1337163Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1337240Z         iteration=0,
2025-01-14T13:17:21.1337314Z     ):
2025-01-14T13:17:21.1337438Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1337544Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1337612Z         else:
2025-01-14T13:17:21.1337696Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1337762Z     
2025-01-14T13:17:21.1337902Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1337997Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1338067Z         )
2025-01-14T13:17:21.1338132Z     
2025-01-14T13:17:21.1338378Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1338491Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1338648Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1338715Z         else:
2025-01-14T13:17:21.1338801Z             continuum_state = None
2025-01-14T13:17:21.1338904Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1339010Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1339109Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1339215Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1339318Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1339488Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1339582Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1339653Z         ).to_numba(
2025-01-14T13:17:21.1339735Z             macro_atom_state,
2025-01-14T13:17:21.1339826Z             self.line_interaction_type,
2025-01-14T13:17:21.1339897Z         )
2025-01-14T13:17:21.1339999Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1340273Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1340341Z         ]
2025-01-14T13:17:21.1340645Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1340650Z 
2025-01-14T13:17:21.1340800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1340994Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-14T13:17:21.1340999Z 
2025-01-14T13:17:21.1341938Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1342313Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1342319Z 
2025-01-14T13:17:21.1342413Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1342557Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1342626Z         """
2025-01-14T13:17:21.1342740Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1342806Z     
2025-01-14T13:17:21.1342884Z         Parameters:
2025-01-14T13:17:21.1342958Z         -----------
2025-01-14T13:17:21.1343098Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1343237Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1343314Z     
2025-01-14T13:17:21.1343383Z         Returns:
2025-01-14T13:17:21.1343459Z         --------
2025-01-14T13:17:21.1343541Z         A TARDIS simulation object.
2025-01-14T13:17:21.1343618Z         """
2025-01-14T13:17:21.1343732Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1343860Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1343992Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1344171Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1344308Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1344404Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1344485Z >       sim = run_tardis(
2025-01-14T13:17:21.1344565Z             config_verysimple,
2025-01-14T13:17:21.1344649Z             atom_data=atomic_data,
2025-01-14T13:17:21.1344715Z         )
2025-01-14T13:17:21.1344723Z 
2025-01-14T13:17:21.1344863Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1344970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1345193Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1345279Z     simulation.run_convergence()
2025-01-14T13:17:21.1345397Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1345535Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1345636Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1345792Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1345896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1345900Z 
2025-01-14T13:17:21.1346164Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1346362Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1346693Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1346969Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1347140Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1347278Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1347288Z 
2025-01-14T13:17:21.1347374Z     def initialize_transport_state(
2025-01-14T13:17:21.1347448Z         self,
2025-01-14T13:17:21.1347524Z         simulation_state,
2025-01-14T13:17:21.1347603Z         opacity_state,
2025-01-14T13:17:21.1347677Z         macro_atom_state,
2025-01-14T13:17:21.1347754Z         plasma,
2025-01-14T13:17:21.1347826Z         no_of_packets,
2025-01-14T13:17:21.1347913Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1347985Z         iteration=0,
2025-01-14T13:17:21.1348057Z     ):
2025-01-14T13:17:21.1348187Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1348286Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1348354Z         else:
2025-01-14T13:17:21.1348441Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1348506Z     
2025-01-14T13:17:21.1348644Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1348741Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1348814Z         )
2025-01-14T13:17:21.1348885Z     
2025-01-14T13:17:21.1349012Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1349130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1349281Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1349357Z         else:
2025-01-14T13:17:21.1349438Z             continuum_state = None
2025-01-14T13:17:21.1349543Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1349650Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1349752Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1349857Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1349963Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1350057Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1350152Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1350226Z         ).to_numba(
2025-01-14T13:17:21.1350306Z             macro_atom_state,
2025-01-14T13:17:21.1350398Z             self.line_interaction_type,
2025-01-14T13:17:21.1350466Z         )
2025-01-14T13:17:21.1350573Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1350842Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1350914Z         ]
2025-01-14T13:17:21.1351212Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1351221Z 
2025-01-14T13:17:21.1351370Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1351677Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-14T13:17:21.1351835Z 
2025-01-14T13:17:21.1352527Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1352884Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1352889Z 
2025-01-14T13:17:21.1352977Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1353123Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1353191Z         """
2025-01-14T13:17:21.1353305Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1353479Z     
2025-01-14T13:17:21.1353560Z         Parameters:
2025-01-14T13:17:21.1353633Z         -----------
2025-01-14T13:17:21.1353776Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1353924Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1353995Z     
2025-01-14T13:17:21.1354071Z         Returns:
2025-01-14T13:17:21.1354141Z         --------
2025-01-14T13:17:21.1354231Z         A TARDIS simulation object.
2025-01-14T13:17:21.1354297Z         """
2025-01-14T13:17:21.1354416Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1354537Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1354676Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1354854Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1354992Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1355095Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1355177Z >       sim = run_tardis(
2025-01-14T13:17:21.1355256Z             config_verysimple,
2025-01-14T13:17:21.1355348Z             atom_data=atomic_data,
2025-01-14T13:17:21.1355414Z         )
2025-01-14T13:17:21.1355424Z 
2025-01-14T13:17:21.1355559Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1355673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1355758Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1355849Z     simulation.run_convergence()
2025-01-14T13:17:21.1355962Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1356106Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1356200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1356355Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1356459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1356468Z 
2025-01-14T13:17:21.1356737Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1356949Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1357169Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1357443Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1357604Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1357742Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1357747Z 
2025-01-14T13:17:21.1357831Z     def initialize_transport_state(
2025-01-14T13:17:21.1357905Z         self,
2025-01-14T13:17:21.1357981Z         simulation_state,
2025-01-14T13:17:21.1358061Z         opacity_state,
2025-01-14T13:17:21.1358138Z         macro_atom_state,
2025-01-14T13:17:21.1358215Z         plasma,
2025-01-14T13:17:21.1358287Z         no_of_packets,
2025-01-14T13:17:21.1358375Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1358545Z         iteration=0,
2025-01-14T13:17:21.1358613Z     ):
2025-01-14T13:17:21.1358743Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1358840Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1358914Z         else:
2025-01-14T13:17:21.1358991Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1359063Z     
2025-01-14T13:17:21.1359196Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1359295Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1359361Z         )
2025-01-14T13:17:21.1359432Z     
2025-01-14T13:17:21.1359561Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1359679Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1359917Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1359989Z         else:
2025-01-14T13:17:21.1360073Z             continuum_state = None
2025-01-14T13:17:21.1360184Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1360294Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1360385Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1360495Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1360592Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1360689Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1360777Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1360851Z         ).to_numba(
2025-01-14T13:17:21.1360928Z             macro_atom_state,
2025-01-14T13:17:21.1361023Z             self.line_interaction_type,
2025-01-14T13:17:21.1361088Z         )
2025-01-14T13:17:21.1361193Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1361467Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1361541Z         ]
2025-01-14T13:17:21.1361944Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1361955Z 
2025-01-14T13:17:21.1362101Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1362304Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-14T13:17:21.1362309Z 
2025-01-14T13:17:21.1362974Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1363322Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1363332Z 
2025-01-14T13:17:21.1363427Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1363566Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1363644Z         """
2025-01-14T13:17:21.1363755Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1363829Z     
2025-01-14T13:17:21.1363902Z         Parameters:
2025-01-14T13:17:21.1363979Z         -----------
2025-01-14T13:17:21.1364115Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1364262Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1364329Z     
2025-01-14T13:17:21.1364404Z         Returns:
2025-01-14T13:17:21.1364478Z         --------
2025-01-14T13:17:21.1364567Z         A TARDIS simulation object.
2025-01-14T13:17:21.1364636Z         """
2025-01-14T13:17:21.1364754Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1364877Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1365017Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1365205Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1365461Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1365563Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1365639Z >       sim = run_tardis(
2025-01-14T13:17:21.1365726Z             config_verysimple,
2025-01-14T13:17:21.1365806Z             atom_data=atomic_data,
2025-01-14T13:17:21.1365882Z         )
2025-01-14T13:17:21.1365886Z 
2025-01-14T13:17:21.1366019Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1366131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1366215Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1366307Z     simulation.run_convergence()
2025-01-14T13:17:21.1366420Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1366676Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1366779Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1366931Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1367046Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1367050Z 
2025-01-14T13:17:21.1367314Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1367518Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1367737Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1368013Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1368172Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1368323Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1368328Z 
2025-01-14T13:17:21.1368419Z     def initialize_transport_state(
2025-01-14T13:17:21.1368488Z         self,
2025-01-14T13:17:21.1368578Z         simulation_state,
2025-01-14T13:17:21.1368652Z         opacity_state,
2025-01-14T13:17:21.1368735Z         macro_atom_state,
2025-01-14T13:17:21.1368804Z         plasma,
2025-01-14T13:17:21.1368882Z         no_of_packets,
2025-01-14T13:17:21.1368962Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1369039Z         iteration=0,
2025-01-14T13:17:21.1369108Z     ):
2025-01-14T13:17:21.1369237Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1369332Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1369405Z         else:
2025-01-14T13:17:21.1369482Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1369554Z     
2025-01-14T13:17:21.1369685Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1369791Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1369863Z         )
2025-01-14T13:17:21.1369930Z     
2025-01-14T13:17:21.1370062Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1370179Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1370333Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1370400Z         else:
2025-01-14T13:17:21.1370487Z             continuum_state = None
2025-01-14T13:17:21.1370586Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1370699Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1370790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1370899Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1370995Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1371095Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1371191Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1371265Z         ).to_numba(
2025-01-14T13:17:21.1371347Z             macro_atom_state,
2025-01-14T13:17:21.1371433Z             self.line_interaction_type,
2025-01-14T13:17:21.1371694Z         )
2025-01-14T13:17:21.1371800Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1372106Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1372173Z         ]
2025-01-14T13:17:21.1372481Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1372485Z 
2025-01-14T13:17:21.1372631Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1372829Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-14T13:17:21.1372834Z 
2025-01-14T13:17:21.1373518Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1373991Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1374004Z 
2025-01-14T13:17:21.1374102Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1374241Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1374313Z         """
2025-01-14T13:17:21.1374422Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1374493Z     
2025-01-14T13:17:21.1374567Z         Parameters:
2025-01-14T13:17:21.1374642Z         -----------
2025-01-14T13:17:21.1374776Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1374924Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1374995Z     
2025-01-14T13:17:21.1375070Z         Returns:
2025-01-14T13:17:21.1375146Z         --------
2025-01-14T13:17:21.1375229Z         A TARDIS simulation object.
2025-01-14T13:17:21.1375300Z         """
2025-01-14T13:17:21.1375413Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1375546Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1375676Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1375855Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1375988Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1376088Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1376163Z >       sim = run_tardis(
2025-01-14T13:17:21.1376247Z             config_verysimple,
2025-01-14T13:17:21.1376329Z             atom_data=atomic_data,
2025-01-14T13:17:21.1376401Z         )
2025-01-14T13:17:21.1376405Z 
2025-01-14T13:17:21.1376546Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1376663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1376752Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1376843Z     simulation.run_convergence()
2025-01-14T13:17:21.1376962Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1377100Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1377199Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1377352Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1377462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1377466Z 
2025-01-14T13:17:21.1377727Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1377933Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1378159Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1378438Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1378754Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1378887Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1378892Z 
2025-01-14T13:17:21.1378982Z     def initialize_transport_state(
2025-01-14T13:17:21.1379051Z         self,
2025-01-14T13:17:21.1379132Z         simulation_state,
2025-01-14T13:17:21.1379206Z         opacity_state,
2025-01-14T13:17:21.1379287Z         macro_atom_state,
2025-01-14T13:17:21.1379357Z         plasma,
2025-01-14T13:17:21.1379434Z         no_of_packets,
2025-01-14T13:17:21.1379521Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1379593Z         iteration=0,
2025-01-14T13:17:21.1379666Z     ):
2025-01-14T13:17:21.1379791Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1379972Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1380040Z         else:
2025-01-14T13:17:21.1380124Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1380190Z     
2025-01-14T13:17:21.1380334Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1380430Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1380502Z         )
2025-01-14T13:17:21.1380566Z     
2025-01-14T13:17:21.1380700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1380813Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1380968Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1381037Z         else:
2025-01-14T13:17:21.1381123Z             continuum_state = None
2025-01-14T13:17:21.1381227Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1381331Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1381425Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1381534Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1381836Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1381975Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1382074Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1382145Z         ).to_numba(
2025-01-14T13:17:21.1382228Z             macro_atom_state,
2025-01-14T13:17:21.1382314Z             self.line_interaction_type,
2025-01-14T13:17:21.1382387Z         )
2025-01-14T13:17:21.1382487Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1382759Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1382829Z         ]
2025-01-14T13:17:21.1383126Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1383131Z 
2025-01-14T13:17:21.1383289Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1383483Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-14T13:17:21.1383487Z 
2025-01-14T13:17:21.1384158Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1384500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1384511Z 
2025-01-14T13:17:21.1384597Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1384737Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1384804Z         """
2025-01-14T13:17:21.1384918Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1384983Z     
2025-01-14T13:17:21.1385065Z         Parameters:
2025-01-14T13:17:21.1385136Z         -----------
2025-01-14T13:17:21.1385276Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1385417Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1385620Z     
2025-01-14T13:17:21.1385690Z         Returns:
2025-01-14T13:17:21.1385765Z         --------
2025-01-14T13:17:21.1385847Z         A TARDIS simulation object.
2025-01-14T13:17:21.1385918Z         """
2025-01-14T13:17:21.1386031Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1386159Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1386296Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1386467Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1386604Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1386699Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1386904Z >       sim = run_tardis(
2025-01-14T13:17:21.1386985Z             config_verysimple,
2025-01-14T13:17:21.1387069Z             atom_data=atomic_data,
2025-01-14T13:17:21.1387138Z         )
2025-01-14T13:17:21.1387147Z 
2025-01-14T13:17:21.1387285Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1387392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1387481Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1387566Z     simulation.run_convergence()
2025-01-14T13:17:21.1387684Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1387828Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1387922Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1388078Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1388182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1388192Z 
2025-01-14T13:17:21.1388458Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1388656Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1388885Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1389159Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1389321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1389460Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1389465Z 
2025-01-14T13:17:21.1389551Z     def initialize_transport_state(
2025-01-14T13:17:21.1389624Z         self,
2025-01-14T13:17:21.1389701Z         simulation_state,
2025-01-14T13:17:21.1389781Z         opacity_state,
2025-01-14T13:17:21.1389855Z         macro_atom_state,
2025-01-14T13:17:21.1389929Z         plasma,
2025-01-14T13:17:21.1390009Z         no_of_packets,
2025-01-14T13:17:21.1390093Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1390165Z         iteration=0,
2025-01-14T13:17:21.1390237Z     ):
2025-01-14T13:17:21.1390364Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1390464Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1390534Z         else:
2025-01-14T13:17:21.1390619Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1390685Z     
2025-01-14T13:17:21.1390821Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1390920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1390988Z         )
2025-01-14T13:17:21.1391058Z     
2025-01-14T13:17:21.1391185Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1391302Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1391451Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1391527Z         else:
2025-01-14T13:17:21.1391712Z             continuum_state = None
2025-01-14T13:17:21.1391819Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1392072Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1392169Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1392274Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1392377Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1392469Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1392566Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1392642Z         ).to_numba(
2025-01-14T13:17:21.1392719Z             macro_atom_state,
2025-01-14T13:17:21.1392810Z             self.line_interaction_type,
2025-01-14T13:17:21.1392876Z         )
2025-01-14T13:17:21.1392981Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1393250Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1393432Z         ]
2025-01-14T13:17:21.1393730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1393740Z 
2025-01-14T13:17:21.1393889Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1394083Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-14T13:17:21.1394094Z 
2025-01-14T13:17:21.1394747Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1395097Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1395102Z 
2025-01-14T13:17:21.1395192Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1395331Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1395400Z         """
2025-01-14T13:17:21.1395511Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1395583Z     
2025-01-14T13:17:21.1395661Z         Parameters:
2025-01-14T13:17:21.1395732Z         -----------
2025-01-14T13:17:21.1395870Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1396015Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1396082Z     
2025-01-14T13:17:21.1396157Z         Returns:
2025-01-14T13:17:21.1396226Z         --------
2025-01-14T13:17:21.1396314Z         A TARDIS simulation object.
2025-01-14T13:17:21.1396382Z         """
2025-01-14T13:17:21.1396498Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1396619Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1396757Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1396935Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1397071Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1397170Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1397254Z >       sim = run_tardis(
2025-01-14T13:17:21.1397335Z             config_verysimple,
2025-01-14T13:17:21.1397424Z             atom_data=atomic_data,
2025-01-14T13:17:21.1397499Z         )
2025-01-14T13:17:21.1397503Z 
2025-01-14T13:17:21.1397635Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1397745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1397830Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1397919Z     simulation.run_convergence()
2025-01-14T13:17:21.1398031Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1398172Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1398268Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1398423Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1398617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1398622Z 
2025-01-14T13:17:21.1398888Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1399091Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1399313Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1399590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1399748Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1399886Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1399985Z 
2025-01-14T13:17:21.1400074Z     def initialize_transport_state(
2025-01-14T13:17:21.1400148Z         self,
2025-01-14T13:17:21.1400224Z         simulation_state,
2025-01-14T13:17:21.1400302Z         opacity_state,
2025-01-14T13:17:21.1400382Z         macro_atom_state,
2025-01-14T13:17:21.1400456Z         plasma,
2025-01-14T13:17:21.1400534Z         no_of_packets,
2025-01-14T13:17:21.1400613Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1400690Z         iteration=0,
2025-01-14T13:17:21.1400757Z     ):
2025-01-14T13:17:21.1400884Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1400978Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1401051Z         else:
2025-01-14T13:17:21.1401127Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1401197Z     
2025-01-14T13:17:21.1401328Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1401430Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1401497Z         )
2025-01-14T13:17:21.1401672Z     
2025-01-14T13:17:21.1401799Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1401914Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1402071Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1402143Z         else:
2025-01-14T13:17:21.1402229Z             continuum_state = None
2025-01-14T13:17:21.1402326Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1402436Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1402526Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1402632Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1402727Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1402823Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1402912Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1402985Z         ).to_numba(
2025-01-14T13:17:21.1403066Z             macro_atom_state,
2025-01-14T13:17:21.1403156Z             self.line_interaction_type,
2025-01-14T13:17:21.1403223Z         )
2025-01-14T13:17:21.1403328Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1403598Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1403669Z         ]
2025-01-14T13:17:21.1403973Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1403978Z 
2025-01-14T13:17:21.1404121Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1404319Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-14T13:17:21.1404324Z 
2025-01-14T13:17:21.1404978Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1405328Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1405454Z 
2025-01-14T13:17:21.1405550Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1405687Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1405759Z         """
2025-01-14T13:17:21.1405865Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1405936Z     
2025-01-14T13:17:21.1406008Z         Parameters:
2025-01-14T13:17:21.1406084Z         -----------
2025-01-14T13:17:21.1406222Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1406370Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1406436Z     
2025-01-14T13:17:21.1406511Z         Returns:
2025-01-14T13:17:21.1406581Z         --------
2025-01-14T13:17:21.1406777Z         A TARDIS simulation object.
2025-01-14T13:17:21.1406844Z         """
2025-01-14T13:17:21.1406964Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1407087Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1407229Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1407409Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1407543Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1407644Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1407719Z >       sim = run_tardis(
2025-01-14T13:17:21.1407816Z             config_verysimple,
2025-01-14T13:17:21.1407898Z             atom_data=atomic_data,
2025-01-14T13:17:21.1407971Z         )
2025-01-14T13:17:21.1407976Z 
2025-01-14T13:17:21.1408111Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1408231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1408322Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1408415Z     simulation.run_convergence()
2025-01-14T13:17:21.1408530Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1408684Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1408785Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1408938Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1409055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1409059Z 
2025-01-14T13:17:21.1409322Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1409530Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1409749Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1410031Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1410197Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1410344Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1410349Z 
2025-01-14T13:17:21.1410445Z     def initialize_transport_state(
2025-01-14T13:17:21.1410515Z         self,
2025-01-14T13:17:21.1410600Z         simulation_state,
2025-01-14T13:17:21.1410674Z         opacity_state,
2025-01-14T13:17:21.1410754Z         macro_atom_state,
2025-01-14T13:17:21.1410828Z         plasma,
2025-01-14T13:17:21.1410909Z         no_of_packets,
2025-01-14T13:17:21.1410992Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1411069Z         iteration=0,
2025-01-14T13:17:21.1411136Z     ):
2025-01-14T13:17:21.1411265Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1411362Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1411436Z         else:
2025-01-14T13:17:21.1411521Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1411685Z     
2025-01-14T13:17:21.1411826Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1412061Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1412135Z         )
2025-01-14T13:17:21.1412202Z     
2025-01-14T13:17:21.1412337Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1412451Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1412611Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1412681Z         else:
2025-01-14T13:17:21.1412771Z             continuum_state = None
2025-01-14T13:17:21.1412870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1412986Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1413078Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1413188Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1413402Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1413503Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1413599Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1413680Z         ).to_numba(
2025-01-14T13:17:21.1413764Z             macro_atom_state,
2025-01-14T13:17:21.1413854Z             self.line_interaction_type,
2025-01-14T13:17:21.1413931Z         )
2025-01-14T13:17:21.1414036Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1414313Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1414382Z         ]
2025-01-14T13:17:21.1414691Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1414695Z 
2025-01-14T13:17:21.1414841Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1415052Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-14T13:17:21.1415057Z 
2025-01-14T13:17:21.1415721Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1416071Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1416076Z 
2025-01-14T13:17:21.1416170Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1416309Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1416386Z         """
2025-01-14T13:17:21.1416496Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1416569Z     
2025-01-14T13:17:21.1416643Z         Parameters:
2025-01-14T13:17:21.1416720Z         -----------
2025-01-14T13:17:21.1416866Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1417021Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1417096Z     
2025-01-14T13:17:21.1417171Z         Returns:
2025-01-14T13:17:21.1417249Z         --------
2025-01-14T13:17:21.1417333Z         A TARDIS simulation object.
2025-01-14T13:17:21.1417407Z         """
2025-01-14T13:17:21.1417521Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1417649Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1417780Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1417960Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1418094Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1418200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1418277Z >       sim = run_tardis(
2025-01-14T13:17:21.1418365Z             config_verysimple,
2025-01-14T13:17:21.1418459Z             atom_data=atomic_data,
2025-01-14T13:17:21.1418528Z         )
2025-01-14T13:17:21.1418532Z 
2025-01-14T13:17:21.1418675Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1418871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1418965Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1419053Z     simulation.run_convergence()
2025-01-14T13:17:21.1419174Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1419311Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1419411Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1419564Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1419679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1419684Z 
2025-01-14T13:17:21.1419953Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1420235Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1420464Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1420742Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1420910Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1421046Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1421051Z 
2025-01-14T13:17:21.1421144Z     def initialize_transport_state(
2025-01-14T13:17:21.1421212Z         self,
2025-01-14T13:17:21.1421298Z         simulation_state,
2025-01-14T13:17:21.1421373Z         opacity_state,
2025-01-14T13:17:21.1421455Z         macro_atom_state,
2025-01-14T13:17:21.1421524Z         plasma,
2025-01-14T13:17:21.1421786Z         no_of_packets,
2025-01-14T13:17:21.1421914Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1421999Z         iteration=0,
2025-01-14T13:17:21.1422071Z     ):
2025-01-14T13:17:21.1422195Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1422305Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1422374Z         else:
2025-01-14T13:17:21.1422459Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1422527Z     
2025-01-14T13:17:21.1422667Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1422761Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1422835Z         )
2025-01-14T13:17:21.1422903Z     
2025-01-14T13:17:21.1423034Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1423145Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1423302Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1423376Z         else:
2025-01-14T13:17:21.1423459Z             continuum_state = None
2025-01-14T13:17:21.1423570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1423676Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1423775Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1423881Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1423985Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1424076Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1424171Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1424243Z         ).to_numba(
2025-01-14T13:17:21.1424327Z             macro_atom_state,
2025-01-14T13:17:21.1424415Z             self.line_interaction_type,
2025-01-14T13:17:21.1424489Z         )
2025-01-14T13:17:21.1424589Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1424863Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1424946Z         ]
2025-01-14T13:17:21.1425244Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1425249Z 
2025-01-14T13:17:21.1425535Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1425755Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-14T13:17:21.1425760Z 
2025-01-14T13:17:21.1426425Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1426771Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1426783Z 
2025-01-14T13:17:21.1426871Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1427018Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1427208Z         """
2025-01-14T13:17:21.1427327Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1427394Z     
2025-01-14T13:17:21.1427480Z         Parameters:
2025-01-14T13:17:21.1427555Z         -----------
2025-01-14T13:17:21.1427700Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1427842Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1427916Z     
2025-01-14T13:17:21.1427989Z         Returns:
2025-01-14T13:17:21.1428067Z         --------
2025-01-14T13:17:21.1428153Z         A TARDIS simulation object.
2025-01-14T13:17:21.1428227Z         """
2025-01-14T13:17:21.1428342Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1428472Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1428608Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1428782Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1428926Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1429023Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1429111Z >       sim = run_tardis(
2025-01-14T13:17:21.1429191Z             config_verysimple,
2025-01-14T13:17:21.1429279Z             atom_data=atomic_data,
2025-01-14T13:17:21.1429348Z         )
2025-01-14T13:17:21.1429352Z 
2025-01-14T13:17:21.1429494Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1429604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1429695Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1429782Z     simulation.run_convergence()
2025-01-14T13:17:21.1429903Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1430052Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1430147Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1430315Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1430425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1430433Z 
2025-01-14T13:17:21.1430705Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1430907Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1431134Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1431407Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1431682Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1431828Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1431833Z 
2025-01-14T13:17:21.1431922Z     def initialize_transport_state(
2025-01-14T13:17:21.1432005Z         self,
2025-01-14T13:17:21.1432082Z         simulation_state,
2025-01-14T13:17:21.1432166Z         opacity_state,
2025-01-14T13:17:21.1432241Z         macro_atom_state,
2025-01-14T13:17:21.1432435Z         plasma,
2025-01-14T13:17:21.1432509Z         no_of_packets,
2025-01-14T13:17:21.1432595Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1432670Z         iteration=0,
2025-01-14T13:17:21.1432742Z     ):
2025-01-14T13:17:21.1432869Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1432969Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1433039Z         else:
2025-01-14T13:17:21.1433122Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1433188Z     
2025-01-14T13:17:21.1433326Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1433425Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1433490Z         )
2025-01-14T13:17:21.1433563Z     
2025-01-14T13:17:21.1433689Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1433917Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1434066Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1434146Z         else:
2025-01-14T13:17:21.1434225Z             continuum_state = None
2025-01-14T13:17:21.1434335Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1434441Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1434538Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1434641Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1434744Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1434841Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1434932Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1435009Z         ).to_numba(
2025-01-14T13:17:21.1435087Z             macro_atom_state,
2025-01-14T13:17:21.1435179Z             self.line_interaction_type,
2025-01-14T13:17:21.1435252Z         )
2025-01-14T13:17:21.1435364Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1435633Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1435712Z         ]
2025-01-14T13:17:21.1436008Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1436012Z 
2025-01-14T13:17:21.1436164Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1436381Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-14T13:17:21.1436392Z 
2025-01-14T13:17:21.1437045Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1437404Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1437409Z 
2025-01-14T13:17:21.1437499Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1437643Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1437712Z         """
2025-01-14T13:17:21.1437832Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1437918Z     
2025-01-14T13:17:21.1437997Z         Parameters:
2025-01-14T13:17:21.1438068Z         -----------
2025-01-14T13:17:21.1438210Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1438356Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1438423Z     
2025-01-14T13:17:21.1438499Z         Returns:
2025-01-14T13:17:21.1438571Z         --------
2025-01-14T13:17:21.1438664Z         A TARDIS simulation object.
2025-01-14T13:17:21.1438736Z         """
2025-01-14T13:17:21.1438860Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1438982Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1439116Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1439378Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1439516Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1439611Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1439692Z >       sim = run_tardis(
2025-01-14T13:17:21.1439773Z             config_verysimple,
2025-01-14T13:17:21.1439859Z             atom_data=atomic_data,
2025-01-14T13:17:21.1439934Z         )
2025-01-14T13:17:21.1439938Z 
2025-01-14T13:17:21.1440071Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1440189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1440275Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1440448Z     simulation.run_convergence()
2025-01-14T13:17:21.1440567Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1440714Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1440818Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1440977Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1441084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1441095Z 
2025-01-14T13:17:21.1441357Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1441656Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1441881Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1442158Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1442323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1442469Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1442478Z 
2025-01-14T13:17:21.1442565Z     def initialize_transport_state(
2025-01-14T13:17:21.1442641Z         self,
2025-01-14T13:17:21.1442719Z         simulation_state,
2025-01-14T13:17:21.1442802Z         opacity_state,
2025-01-14T13:17:21.1442877Z         macro_atom_state,
2025-01-14T13:17:21.1442955Z         plasma,
2025-01-14T13:17:21.1443033Z         no_of_packets,
2025-01-14T13:17:21.1443116Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1443193Z         iteration=0,
2025-01-14T13:17:21.1443259Z     ):
2025-01-14T13:17:21.1443386Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1443480Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1443554Z         else:
2025-01-14T13:17:21.1443631Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1443706Z     
2025-01-14T13:17:21.1443838Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1443938Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1444009Z         )
2025-01-14T13:17:21.1444080Z     
2025-01-14T13:17:21.1444206Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1444324Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1444473Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1444547Z         else:
2025-01-14T13:17:21.1444635Z             continuum_state = None
2025-01-14T13:17:21.1444735Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1444846Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1444936Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1445044Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1445142Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1445245Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1445337Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1445413Z         ).to_numba(
2025-01-14T13:17:21.1445613Z             macro_atom_state,
2025-01-14T13:17:21.1445706Z             self.line_interaction_type,
2025-01-14T13:17:21.1445773Z         )
2025-01-14T13:17:21.1445881Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1446149Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1446222Z         ]
2025-01-14T13:17:21.1446524Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1446529Z 
2025-01-14T13:17:21.1446674Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1446894Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-14T13:17:21.1447003Z 
2025-01-14T13:17:21.1447663Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1448020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1448025Z 
2025-01-14T13:17:21.1448119Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1448257Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1448331Z         """
2025-01-14T13:17:21.1448438Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1448510Z     
2025-01-14T13:17:21.1448584Z         Parameters:
2025-01-14T13:17:21.1448661Z         -----------
2025-01-14T13:17:21.1448798Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1448955Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1449022Z     
2025-01-14T13:17:21.1449101Z         Returns:
2025-01-14T13:17:21.1449173Z         --------
2025-01-14T13:17:21.1449267Z         A TARDIS simulation object.
2025-01-14T13:17:21.1449335Z         """
2025-01-14T13:17:21.1449454Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1449582Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1449716Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1449896Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1450029Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1450131Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1450206Z >       sim = run_tardis(
2025-01-14T13:17:21.1450292Z             config_verysimple,
2025-01-14T13:17:21.1450374Z             atom_data=atomic_data,
2025-01-14T13:17:21.1450454Z         )
2025-01-14T13:17:21.1450458Z 
2025-01-14T13:17:21.1450594Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1450708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1450801Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1450892Z     simulation.run_convergence()
2025-01-14T13:17:21.1451010Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1451145Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1451243Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1451393Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1451504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1451509Z 
2025-01-14T13:17:21.1451861Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1452072Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1452294Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1452712Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1452877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1453011Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1453016Z 
2025-01-14T13:17:21.1453108Z     def initialize_transport_state(
2025-01-14T13:17:21.1453176Z         self,
2025-01-14T13:17:21.1453256Z         simulation_state,
2025-01-14T13:17:21.1453330Z         opacity_state,
2025-01-14T13:17:21.1453410Z         macro_atom_state,
2025-01-14T13:17:21.1453480Z         plasma,
2025-01-14T13:17:21.1453558Z         no_of_packets,
2025-01-14T13:17:21.1453638Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1453717Z         iteration=0,
2025-01-14T13:17:21.1453905Z     ):
2025-01-14T13:17:21.1454034Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1454126Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1454206Z         else:
2025-01-14T13:17:21.1454282Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1454354Z     
2025-01-14T13:17:21.1454490Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1454585Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1454656Z         )
2025-01-14T13:17:21.1454722Z     
2025-01-14T13:17:21.1454851Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1454960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1455115Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1455182Z         else:
2025-01-14T13:17:21.1455271Z             continuum_state = None
2025-01-14T13:17:21.1455369Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1455485Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1455576Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1455682Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1455785Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1455883Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1455977Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1456048Z         ).to_numba(
2025-01-14T13:17:21.1456129Z             macro_atom_state,
2025-01-14T13:17:21.1456216Z             self.line_interaction_type,
2025-01-14T13:17:21.1456289Z         )
2025-01-14T13:17:21.1456388Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1456660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1456730Z         ]
2025-01-14T13:17:21.1457034Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1457043Z 
2025-01-14T13:17:21.1457189Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1457412Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-14T13:17:21.1457416Z 
2025-01-14T13:17:21.1458076Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1458422Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1458426Z 
2025-01-14T13:17:21.1458519Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1458657Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1458734Z         """
2025-01-14T13:17:21.1458841Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1458912Z     
2025-01-14T13:17:21.1458985Z         Parameters:
2025-01-14T13:17:21.1459061Z         -----------
2025-01-14T13:17:21.1459290Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1459431Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1459502Z     
2025-01-14T13:17:21.1459572Z         Returns:
2025-01-14T13:17:21.1459647Z         --------
2025-01-14T13:17:21.1459729Z         A TARDIS simulation object.
2025-01-14T13:17:21.1459801Z         """
2025-01-14T13:17:21.1459913Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1460039Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1460169Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1460347Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1460557Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1460657Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1460731Z >       sim = run_tardis(
2025-01-14T13:17:21.1460822Z             config_verysimple,
2025-01-14T13:17:21.1460908Z             atom_data=atomic_data,
2025-01-14T13:17:21.1460975Z         )
2025-01-14T13:17:21.1460980Z 
2025-01-14T13:17:21.1461120Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1461229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1461317Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1461401Z     simulation.run_convergence()
2025-01-14T13:17:21.1461518Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1461870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1461985Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1462138Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1462255Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1462260Z 
2025-01-14T13:17:21.1462524Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1462728Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1462953Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1463227Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1463390Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1463522Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1463527Z 
2025-01-14T13:17:21.1463619Z     def initialize_transport_state(
2025-01-14T13:17:21.1463688Z         self,
2025-01-14T13:17:21.1463772Z         simulation_state,
2025-01-14T13:17:21.1463850Z         opacity_state,
2025-01-14T13:17:21.1463929Z         macro_atom_state,
2025-01-14T13:17:21.1464003Z         plasma,
2025-01-14T13:17:21.1464076Z         no_of_packets,
2025-01-14T13:17:21.1464163Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1464234Z         iteration=0,
2025-01-14T13:17:21.1464307Z     ):
2025-01-14T13:17:21.1464428Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1464526Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1464594Z         else:
2025-01-14T13:17:21.1464676Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1464742Z     
2025-01-14T13:17:21.1464880Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1464974Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1465047Z         )
2025-01-14T13:17:21.1465115Z     
2025-01-14T13:17:21.1465245Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1465361Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1465523Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1465597Z         else:
2025-01-14T13:17:21.1465808Z             continuum_state = None
2025-01-14T13:17:21.1465912Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1466018Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1466112Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1466214Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1466316Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1466407Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1466502Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1466573Z         ).to_numba(
2025-01-14T13:17:21.1466653Z             macro_atom_state,
2025-01-14T13:17:21.1466739Z             self.line_interaction_type,
2025-01-14T13:17:21.1466811Z         )
2025-01-14T13:17:21.1467018Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1467293Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1467369Z         ]
2025-01-14T13:17:21.1467666Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1467670Z 
2025-01-14T13:17:21.1467819Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1468035Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-14T13:17:21.1468039Z 
2025-01-14T13:17:21.1468696Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1469039Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1469053Z 
2025-01-14T13:17:21.1469139Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1469284Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1469351Z         """
2025-01-14T13:17:21.1469467Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1469532Z     
2025-01-14T13:17:21.1469609Z         Parameters:
2025-01-14T13:17:21.1469680Z         -----------
2025-01-14T13:17:21.1469820Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1469962Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1470034Z     
2025-01-14T13:17:21.1470103Z         Returns:
2025-01-14T13:17:21.1470179Z         --------
2025-01-14T13:17:21.1470262Z         A TARDIS simulation object.
2025-01-14T13:17:21.1470335Z         """
2025-01-14T13:17:21.1470446Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1470578Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1470714Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1470889Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1471027Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1471125Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1471206Z >       sim = run_tardis(
2025-01-14T13:17:21.1471287Z             config_verysimple,
2025-01-14T13:17:21.1471372Z             atom_data=atomic_data,
2025-01-14T13:17:21.1471440Z         )
2025-01-14T13:17:21.1471444Z 
2025-01-14T13:17:21.1471683Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1471794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1471883Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1471999Z     simulation.run_convergence()
2025-01-14T13:17:21.1472117Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1472258Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1472484Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1472641Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1472749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1472753Z 
2025-01-14T13:17:21.1473019Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1473220Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1473442Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1473713Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1473877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1474124Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1474129Z 
2025-01-14T13:17:21.1474216Z     def initialize_transport_state(
2025-01-14T13:17:21.1474294Z         self,
2025-01-14T13:17:21.1474371Z         simulation_state,
2025-01-14T13:17:21.1474451Z         opacity_state,
2025-01-14T13:17:21.1474525Z         macro_atom_state,
2025-01-14T13:17:21.1474599Z         plasma,
2025-01-14T13:17:21.1474672Z         no_of_packets,
2025-01-14T13:17:21.1474758Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1474830Z         iteration=0,
2025-01-14T13:17:21.1474903Z     ):
2025-01-14T13:17:21.1475026Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1475124Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1475193Z         else:
2025-01-14T13:17:21.1475275Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1475348Z     
2025-01-14T13:17:21.1475479Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1475586Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1475654Z         )
2025-01-14T13:17:21.1475724Z     
2025-01-14T13:17:21.1475855Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1475972Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1476122Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1476196Z         else:
2025-01-14T13:17:21.1476276Z             continuum_state = None
2025-01-14T13:17:21.1476380Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1476486Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1476582Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1476684Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1476788Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1476885Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1476980Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1477055Z         ).to_numba(
2025-01-14T13:17:21.1477132Z             macro_atom_state,
2025-01-14T13:17:21.1477226Z             self.line_interaction_type,
2025-01-14T13:17:21.1477293Z         )
2025-01-14T13:17:21.1477398Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1477660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1477734Z         ]
2025-01-14T13:17:21.1478032Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1478036Z 
2025-01-14T13:17:21.1478187Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1478403Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-14T13:17:21.1478413Z 
2025-01-14T13:17:21.1479069Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1479538Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1479542Z 
2025-01-14T13:17:21.1479629Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1479772Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1479841Z         """
2025-01-14T13:17:21.1479953Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1480021Z     
2025-01-14T13:17:21.1480100Z         Parameters:
2025-01-14T13:17:21.1480176Z         -----------
2025-01-14T13:17:21.1480310Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1480454Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1480609Z     
2025-01-14T13:17:21.1480683Z         Returns:
2025-01-14T13:17:21.1480753Z         --------
2025-01-14T13:17:21.1480840Z         A TARDIS simulation object.
2025-01-14T13:17:21.1480913Z         """
2025-01-14T13:17:21.1481029Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1481151Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1481284Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1481456Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1481699Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1481797Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1481880Z >       sim = run_tardis(
2025-01-14T13:17:21.1481965Z             config_verysimple,
2025-01-14T13:17:21.1482044Z             atom_data=atomic_data,
2025-01-14T13:17:21.1482115Z         )
2025-01-14T13:17:21.1482125Z 
2025-01-14T13:17:21.1482256Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1482370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1482461Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1482551Z     simulation.run_convergence()
2025-01-14T13:17:21.1482663Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1482803Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1482896Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1483051Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1483159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1483168Z 
2025-01-14T13:17:21.1483437Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1483645Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1483869Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1484146Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1484308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1484447Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1484451Z 
2025-01-14T13:17:21.1484537Z     def initialize_transport_state(
2025-01-14T13:17:21.1484611Z         self,
2025-01-14T13:17:21.1484688Z         simulation_state,
2025-01-14T13:17:21.1484768Z         opacity_state,
2025-01-14T13:17:21.1484850Z         macro_atom_state,
2025-01-14T13:17:21.1484920Z         plasma,
2025-01-14T13:17:21.1484998Z         no_of_packets,
2025-01-14T13:17:21.1485078Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1485154Z         iteration=0,
2025-01-14T13:17:21.1485220Z     ):
2025-01-14T13:17:21.1485357Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1485453Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1485527Z         else:
2025-01-14T13:17:21.1485604Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1485797Z     
2025-01-14T13:17:21.1485932Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1486031Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1486098Z         )
2025-01-14T13:17:21.1486169Z     
2025-01-14T13:17:21.1486297Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1486416Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1486569Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1486643Z         else:
2025-01-14T13:17:21.1486730Z             continuum_state = None
2025-01-14T13:17:21.1486828Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1486940Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1487140Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1487251Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1487354Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1487452Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1487542Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1487616Z         ).to_numba(
2025-01-14T13:17:21.1487697Z             macro_atom_state,
2025-01-14T13:17:21.1487788Z             self.line_interaction_type,
2025-01-14T13:17:21.1487855Z         )
2025-01-14T13:17:21.1487960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1488229Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1488302Z         ]
2025-01-14T13:17:21.1488607Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1488616Z 
2025-01-14T13:17:21.1488762Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1488987Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-14T13:17:21.1488997Z 
2025-01-14T13:17:21.1489667Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1490018Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1490023Z 
2025-01-14T13:17:21.1490116Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1490256Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1490329Z         """
2025-01-14T13:17:21.1490436Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1490512Z     
2025-01-14T13:17:21.1490586Z         Parameters:
2025-01-14T13:17:21.1490662Z         -----------
2025-01-14T13:17:21.1490797Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1490945Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1491011Z     
2025-01-14T13:17:21.1491087Z         Returns:
2025-01-14T13:17:21.1491157Z         --------
2025-01-14T13:17:21.1491244Z         A TARDIS simulation object.
2025-01-14T13:17:21.1491311Z         """
2025-01-14T13:17:21.1491433Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1491659Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1491794Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1491972Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1492104Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1492209Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1492285Z >       sim = run_tardis(
2025-01-14T13:17:21.1492372Z             config_verysimple,
2025-01-14T13:17:21.1492574Z             atom_data=atomic_data,
2025-01-14T13:17:21.1492647Z         )
2025-01-14T13:17:21.1492651Z 
2025-01-14T13:17:21.1492784Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1492900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1492983Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1497567Z     simulation.run_convergence()
2025-01-14T13:17:21.1497733Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1497894Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1498006Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1498167Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1498288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1498459Z 
2025-01-14T13:17:21.1498737Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1498957Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1499177Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1499460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1499621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1499764Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1499768Z 
2025-01-14T13:17:21.1499862Z     def initialize_transport_state(
2025-01-14T13:17:21.1499935Z         self,
2025-01-14T13:17:21.1500020Z         simulation_state,
2025-01-14T13:17:21.1500094Z         opacity_state,
2025-01-14T13:17:21.1500186Z         macro_atom_state,
2025-01-14T13:17:21.1500257Z         plasma,
2025-01-14T13:17:21.1500335Z         no_of_packets,
2025-01-14T13:17:21.1500418Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1500500Z         iteration=0,
2025-01-14T13:17:21.1500566Z     ):
2025-01-14T13:17:21.1500705Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1500804Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1500879Z         else:
2025-01-14T13:17:21.1500958Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1501031Z     
2025-01-14T13:17:21.1501167Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1501268Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1501342Z         )
2025-01-14T13:17:21.1501407Z     
2025-01-14T13:17:21.1501541Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1501917Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1502122Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1502194Z         else:
2025-01-14T13:17:21.1502282Z             continuum_state = None
2025-01-14T13:17:21.1502389Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1502504Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1502598Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1502713Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1502812Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1502912Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1503007Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1503076Z         ).to_numba(
2025-01-14T13:17:21.1503160Z             macro_atom_state,
2025-01-14T13:17:21.1503248Z             self.line_interaction_type,
2025-01-14T13:17:21.1503321Z         )
2025-01-14T13:17:21.1503422Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1503703Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1503770Z         ]
2025-01-14T13:17:21.1504224Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1504230Z 
2025-01-14T13:17:21.1504379Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1504604Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-14T13:17:21.1504609Z 
2025-01-14T13:17:21.1505287Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1505636Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1505765Z 
2025-01-14T13:17:21.1505862Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1506004Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1506084Z         """
2025-01-14T13:17:21.1506197Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1506268Z     
2025-01-14T13:17:21.1506342Z         Parameters:
2025-01-14T13:17:21.1506419Z         -----------
2025-01-14T13:17:21.1506555Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1506704Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1506775Z     
2025-01-14T13:17:21.1506845Z         Returns:
2025-01-14T13:17:21.1506921Z         --------
2025-01-14T13:17:21.1507003Z         A TARDIS simulation object.
2025-01-14T13:17:21.1507075Z         """
2025-01-14T13:17:21.1507188Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1507318Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1507453Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1507634Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1507774Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1507876Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1507952Z >       sim = run_tardis(
2025-01-14T13:17:21.1508038Z             config_verysimple,
2025-01-14T13:17:21.1508117Z             atom_data=atomic_data,
2025-01-14T13:17:21.1508191Z         )
2025-01-14T13:17:21.1508195Z 
2025-01-14T13:17:21.1508339Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1508457Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1508548Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1508634Z     simulation.run_convergence()
2025-01-14T13:17:21.1508752Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1508897Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1508997Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1509153Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1509266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1509270Z 
2025-01-14T13:17:21.1509532Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1509738Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1509960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1510232Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1510395Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1510534Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1510538Z 
2025-01-14T13:17:21.1510632Z     def initialize_transport_state(
2025-01-14T13:17:21.1510700Z         self,
2025-01-14T13:17:21.1510879Z         simulation_state,
2025-01-14T13:17:21.1510954Z         opacity_state,
2025-01-14T13:17:21.1511035Z         macro_atom_state,
2025-01-14T13:17:21.1511105Z         plasma,
2025-01-14T13:17:21.1511182Z         no_of_packets,
2025-01-14T13:17:21.1511268Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1511341Z         iteration=0,
2025-01-14T13:17:21.1511412Z     ):
2025-01-14T13:17:21.1511538Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1511756Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1511828Z         else:
2025-01-14T13:17:21.1511910Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1511977Z     
2025-01-14T13:17:21.1512116Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1512333Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1512405Z         )
2025-01-14T13:17:21.1512471Z     
2025-01-14T13:17:21.1512604Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1512724Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1512881Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1512949Z         else:
2025-01-14T13:17:21.1513035Z             continuum_state = None
2025-01-14T13:17:21.1513140Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1513249Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1513344Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1513449Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1513551Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1513644Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1513740Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1513818Z         ).to_numba(
2025-01-14T13:17:21.1513901Z             macro_atom_state,
2025-01-14T13:17:21.1513987Z             self.line_interaction_type,
2025-01-14T13:17:21.1514066Z         )
2025-01-14T13:17:21.1514167Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1514442Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1514515Z         ]
2025-01-14T13:17:21.1514815Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1514820Z 
2025-01-14T13:17:21.1514974Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1515169Z __ ERROR at setup of TestRPacketPlotter.test_get_coordinates_with_theta_init ___
2025-01-14T13:17:21.1515173Z 
2025-01-14T13:17:21.1515346Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1515676Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1515682Z 
2025-01-14T13:17:21.1515775Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1515861Z         "expected,obtained",
2025-01-14T13:17:21.1515936Z         [
2025-01-14T13:17:21.1516008Z             (
2025-01-14T13:17:21.1516117Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1516227Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1516296Z             ),
2025-01-14T13:17:21.1516453Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1516571Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1516644Z         ],
2025-01-14T13:17:21.1516712Z     )
2025-01-14T13:17:21.1516877Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1516996Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1517004Z 
2025-01-14T13:17:21.1517181Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1517293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1517698Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1517818Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1518084Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1518196Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1518327Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1518406Z     sim = run_tardis(
2025-01-14T13:17:21.1518489Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1518579Z     simulation.run_convergence()
2025-01-14T13:17:21.1518691Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1518920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1519012Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1519169Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1519283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1519292Z 
2025-01-14T13:17:21.1519553Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1519760Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1519981Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1520256Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1520417Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1520558Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1520567Z 
2025-01-14T13:17:21.1520654Z     def initialize_transport_state(
2025-01-14T13:17:21.1520728Z         self,
2025-01-14T13:17:21.1520804Z         simulation_state,
2025-01-14T13:17:21.1520888Z         opacity_state,
2025-01-14T13:17:21.1520972Z         macro_atom_state,
2025-01-14T13:17:21.1521042Z         plasma,
2025-01-14T13:17:21.1521119Z         no_of_packets,
2025-01-14T13:17:21.1521199Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1521276Z         iteration=0,
2025-01-14T13:17:21.1521347Z     ):
2025-01-14T13:17:21.1521475Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1521667Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1521743Z         else:
2025-01-14T13:17:21.1521819Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1521890Z     
2025-01-14T13:17:21.1522023Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1522121Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1522192Z         )
2025-01-14T13:17:21.1522263Z     
2025-01-14T13:17:21.1522392Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1522512Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1522672Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1522740Z         else:
2025-01-14T13:17:21.1522826Z             continuum_state = None
2025-01-14T13:17:21.1522924Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1523035Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1523126Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1523234Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1523332Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1523429Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1523519Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1523600Z         ).to_numba(
2025-01-14T13:17:21.1523675Z             macro_atom_state,
2025-01-14T13:17:21.1523766Z             self.line_interaction_type,
2025-01-14T13:17:21.1523832Z         )
2025-01-14T13:17:21.1524530Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1524806Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1524873Z         ]
2025-01-14T13:17:21.1525179Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1525183Z 
2025-01-14T13:17:21.1525326Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1525537Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[2] _
2025-01-14T13:17:21.1525541Z 
2025-01-14T13:17:21.1525707Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1526034Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1526146Z 
2025-01-14T13:17:21.1526242Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1526331Z         "expected,obtained",
2025-01-14T13:17:21.1526404Z         [
2025-01-14T13:17:21.1526471Z             (
2025-01-14T13:17:21.1526582Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1526687Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1526759Z             ),
2025-01-14T13:17:21.1526911Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1527035Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1527102Z         ],
2025-01-14T13:17:21.1527173Z     )
2025-01-14T13:17:21.1527333Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1527452Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1527461Z 
2025-01-14T13:17:21.1527626Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1527740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1528021Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1528132Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1528402Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1528507Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1528644Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1528719Z     sim = run_tardis(
2025-01-14T13:17:21.1528811Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1528896Z     simulation.run_convergence()
2025-01-14T13:17:21.1529013Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1529152Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1529257Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1529417Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1529527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1529531Z 
2025-01-14T13:17:21.1529796Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1529995Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1530215Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1530481Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1530645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1530779Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1530792Z 
2025-01-14T13:17:21.1530880Z     def initialize_transport_state(
2025-01-14T13:17:21.1530955Z         self,
2025-01-14T13:17:21.1531032Z         simulation_state,
2025-01-14T13:17:21.1531112Z         opacity_state,
2025-01-14T13:17:21.1531274Z         macro_atom_state,
2025-01-14T13:17:21.1531349Z         plasma,
2025-01-14T13:17:21.1531422Z         no_of_packets,
2025-01-14T13:17:21.1531508Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1531690Z         iteration=0,
2025-01-14T13:17:21.1531763Z     ):
2025-01-14T13:17:21.1531886Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1531984Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1532053Z         else:
2025-01-14T13:17:21.1532136Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1532202Z     
2025-01-14T13:17:21.1532341Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1532435Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1532647Z         )
2025-01-14T13:17:21.1532720Z     
2025-01-14T13:17:21.1532848Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1532967Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1533122Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1533194Z         else:
2025-01-14T13:17:21.1533275Z             continuum_state = None
2025-01-14T13:17:21.1533382Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1533490Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1533586Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1533689Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1533791Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1533884Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1533980Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1534050Z         ).to_numba(
2025-01-14T13:17:21.1534138Z             macro_atom_state,
2025-01-14T13:17:21.1534233Z             self.line_interaction_type,
2025-01-14T13:17:21.1534300Z         )
2025-01-14T13:17:21.1534404Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1534675Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1534747Z         ]
2025-01-14T13:17:21.1535047Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1535051Z 
2025-01-14T13:17:21.1535200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1535402Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[5] _
2025-01-14T13:17:21.1535407Z 
2025-01-14T13:17:21.1535576Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1535899Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1535909Z 
2025-01-14T13:17:21.1535997Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1536084Z         "expected,obtained",
2025-01-14T13:17:21.1536156Z         [
2025-01-14T13:17:21.1536233Z             (
2025-01-14T13:17:21.1536337Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1536444Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1536513Z             ),
2025-01-14T13:17:21.1536667Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1536784Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1536858Z         ],
2025-01-14T13:17:21.1536924Z     )
2025-01-14T13:17:21.1537087Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1537206Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1537210Z 
2025-01-14T13:17:21.1537385Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1537496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1537769Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1538043Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1538307Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1538416Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1538545Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1538623Z     sim = run_tardis(
2025-01-14T13:17:21.1538706Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1538797Z     simulation.run_convergence()
2025-01-14T13:17:21.1538907Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1539051Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1539231Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1539382Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1539493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1539503Z 
2025-01-14T13:17:21.1539761Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1539963Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1540180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1540453Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1540611Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1540752Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1540756Z 
2025-01-14T13:17:21.1540847Z     def initialize_transport_state(
2025-01-14T13:17:21.1540923Z         self,
2025-01-14T13:17:21.1541005Z         simulation_state,
2025-01-14T13:17:21.1541078Z         opacity_state,
2025-01-14T13:17:21.1541159Z         macro_atom_state,
2025-01-14T13:17:21.1541235Z         plasma,
2025-01-14T13:17:21.1541326Z         no_of_packets,
2025-01-14T13:17:21.1541408Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1541485Z         iteration=0,
2025-01-14T13:17:21.1541760Z     ):
2025-01-14T13:17:21.1541979Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1542081Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1542156Z         else:
2025-01-14T13:17:21.1542233Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1542304Z     
2025-01-14T13:17:21.1542442Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1542535Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1542608Z         )
2025-01-14T13:17:21.1542683Z     
2025-01-14T13:17:21.1542814Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1542924Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1543076Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1543149Z         else:
2025-01-14T13:17:21.1543235Z             continuum_state = None
2025-01-14T13:17:21.1543333Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1543446Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1543535Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1543646Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1543742Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1543843Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1543937Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1544008Z         ).to_numba(
2025-01-14T13:17:21.1544092Z             macro_atom_state,
2025-01-14T13:17:21.1544183Z             self.line_interaction_type,
2025-01-14T13:17:21.1544258Z         )
2025-01-14T13:17:21.1544357Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1544798Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1544869Z         ]
2025-01-14T13:17:21.1545171Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1545176Z 
2025-01-14T13:17:21.1545320Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1545529Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[10] _
2025-01-14T13:17:21.1545534Z 
2025-01-14T13:17:21.1545701Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1546015Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1546125Z 
2025-01-14T13:17:21.1546218Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1546301Z         "expected,obtained",
2025-01-14T13:17:21.1546372Z         [
2025-01-14T13:17:21.1546444Z             (
2025-01-14T13:17:21.1546555Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1546657Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1546731Z             ),
2025-01-14T13:17:21.1546881Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1547005Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1547077Z         ],
2025-01-14T13:17:21.1547143Z     )
2025-01-14T13:17:21.1547305Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1547419Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1547424Z 
2025-01-14T13:17:21.1547596Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1547710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1547988Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1548108Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1548376Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1548481Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1548614Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1548695Z     sim = run_tardis(
2025-01-14T13:17:21.1548779Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1548869Z     simulation.run_convergence()
2025-01-14T13:17:21.1548981Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1549123Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1549217Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1549380Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1549485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1549492Z 
2025-01-14T13:17:21.1549755Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1549956Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1550179Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1550450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1550607Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1550747Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1550751Z 
2025-01-14T13:17:21.1550837Z     def initialize_transport_state(
2025-01-14T13:17:21.1550915Z         self,
2025-01-14T13:17:21.1550991Z         simulation_state,
2025-01-14T13:17:21.1551071Z         opacity_state,
2025-01-14T13:17:21.1551145Z         macro_atom_state,
2025-01-14T13:17:21.1551323Z         plasma,
2025-01-14T13:17:21.1551396Z         no_of_packets,
2025-01-14T13:17:21.1551482Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1551675Z         iteration=0,
2025-01-14T13:17:21.1551751Z     ):
2025-01-14T13:17:21.1551876Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1551976Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1552050Z         else:
2025-01-14T13:17:21.1552129Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1552203Z     
2025-01-14T13:17:21.1552341Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1552445Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1552512Z         )
2025-01-14T13:17:21.1552584Z     
2025-01-14T13:17:21.1552713Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1552966Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1553117Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1553196Z         else:
2025-01-14T13:17:21.1553278Z             continuum_state = None
2025-01-14T13:17:21.1553387Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1553494Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1553589Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1553701Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1553799Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1553897Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1553987Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1554063Z         ).to_numba(
2025-01-14T13:17:21.1554139Z             macro_atom_state,
2025-01-14T13:17:21.1554235Z             self.line_interaction_type,
2025-01-14T13:17:21.1554301Z         )
2025-01-14T13:17:21.1554407Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1554678Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1554761Z         ]
2025-01-14T13:17:21.1555062Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1555071Z 
2025-01-14T13:17:21.1555217Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1555410Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[2] _______
2025-01-14T13:17:21.1555415Z 
2025-01-14T13:17:21.1555580Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1555902Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1555912Z 
2025-01-14T13:17:21.1555998Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1556086Z         "expected,obtained",
2025-01-14T13:17:21.1556151Z         [
2025-01-14T13:17:21.1556222Z             (
2025-01-14T13:17:21.1556332Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1556443Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1556516Z             ),
2025-01-14T13:17:21.1556667Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1556791Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1556859Z         ],
2025-01-14T13:17:21.1556931Z     )
2025-01-14T13:17:21.1557089Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1557211Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1557215Z 
2025-01-14T13:17:21.1557380Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1557497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1557772Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1558049Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1558317Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1558428Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1558564Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1558638Z     sim = run_tardis(
2025-01-14T13:17:21.1558726Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1558812Z     simulation.run_convergence()
2025-01-14T13:17:21.1558930Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1559072Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1559171Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1559414Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1559525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1559530Z 
2025-01-14T13:17:21.1559794Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1559997Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1560225Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1560494Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1560658Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1560793Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1560797Z 
2025-01-14T13:17:21.1560889Z     def initialize_transport_state(
2025-01-14T13:17:21.1560958Z         self,
2025-01-14T13:17:21.1561045Z         simulation_state,
2025-01-14T13:17:21.1561119Z         opacity_state,
2025-01-14T13:17:21.1561202Z         macro_atom_state,
2025-01-14T13:17:21.1561272Z         plasma,
2025-01-14T13:17:21.1561356Z         no_of_packets,
2025-01-14T13:17:21.1561442Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1561518Z         iteration=0,
2025-01-14T13:17:21.1561686Z     ):
2025-01-14T13:17:21.1561812Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1561913Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1561982Z         else:
2025-01-14T13:17:21.1562063Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1562129Z     
2025-01-14T13:17:21.1562265Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1562358Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1562429Z         )
2025-01-14T13:17:21.1562496Z     
2025-01-14T13:17:21.1562626Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1562744Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1562902Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1562974Z         else:
2025-01-14T13:17:21.1563060Z             continuum_state = None
2025-01-14T13:17:21.1563166Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1563272Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1563367Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1563471Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1563573Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1563666Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1563759Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1563829Z         ).to_numba(
2025-01-14T13:17:21.1563913Z             macro_atom_state,
2025-01-14T13:17:21.1563998Z             self.line_interaction_type,
2025-01-14T13:17:21.1564075Z         )
2025-01-14T13:17:21.1564173Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1564445Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1564642Z         ]
2025-01-14T13:17:21.1564945Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1564950Z 
2025-01-14T13:17:21.1565100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1565283Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[5] _______
2025-01-14T13:17:21.1565287Z 
2025-01-14T13:17:21.1565454Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1565771Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1565775Z 
2025-01-14T13:17:21.1565868Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1566059Z         "expected,obtained",
2025-01-14T13:17:21.1566130Z         [
2025-01-14T13:17:21.1566197Z             (
2025-01-14T13:17:21.1566306Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1566422Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1566489Z             ),
2025-01-14T13:17:21.1566642Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1566758Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1566829Z         ],
2025-01-14T13:17:21.1566897Z     )
2025-01-14T13:17:21.1567059Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1567174Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1567178Z 
2025-01-14T13:17:21.1567347Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1567455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1567733Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1567848Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1568117Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1568228Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1568359Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1568439Z     sim = run_tardis(
2025-01-14T13:17:21.1568523Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1568614Z     simulation.run_convergence()
2025-01-14T13:17:21.1568726Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1568869Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1568961Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1569117Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1569225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1569235Z 
2025-01-14T13:17:21.1569495Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1569703Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1569919Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1570192Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1570349Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1570487Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1570492Z 
2025-01-14T13:17:21.1570578Z     def initialize_transport_state(
2025-01-14T13:17:21.1570651Z         self,
2025-01-14T13:17:21.1570728Z         simulation_state,
2025-01-14T13:17:21.1570813Z         opacity_state,
2025-01-14T13:17:21.1570896Z         macro_atom_state,
2025-01-14T13:17:21.1570964Z         plasma,
2025-01-14T13:17:21.1571042Z         no_of_packets,
2025-01-14T13:17:21.1571233Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1571310Z         iteration=0,
2025-01-14T13:17:21.1571376Z     ):
2025-01-14T13:17:21.1571502Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1571699Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1571773Z         else:
2025-01-14T13:17:21.1571850Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1571922Z     
2025-01-14T13:17:21.1572087Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1572188Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1572255Z         )
2025-01-14T13:17:21.1572325Z     
2025-01-14T13:17:21.1572457Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1572571Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1572856Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1572924Z         else:
2025-01-14T13:17:21.1573015Z             continuum_state = None
2025-01-14T13:17:21.1573114Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1573225Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1573315Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1573425Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1573521Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1573618Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1573707Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1573782Z         ).to_numba(
2025-01-14T13:17:21.1573857Z             macro_atom_state,
2025-01-14T13:17:21.1573949Z             self.line_interaction_type,
2025-01-14T13:17:21.1574017Z         )
2025-01-14T13:17:21.1574128Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1574397Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1574468Z         ]
2025-01-14T13:17:21.1574770Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1574774Z 
2025-01-14T13:17:21.1574915Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1575099Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[10] ______
2025-01-14T13:17:21.1575103Z 
2025-01-14T13:17:21.1575264Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1575583Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1575587Z 
2025-01-14T13:17:21.1575681Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1575767Z         "expected,obtained",
2025-01-14T13:17:21.1575838Z         [
2025-01-14T13:17:21.1575906Z             (
2025-01-14T13:17:21.1576014Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1576119Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1576192Z             ),
2025-01-14T13:17:21.1576339Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1576460Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1576529Z         ],
2025-01-14T13:17:21.1576600Z     )
2025-01-14T13:17:21.1576758Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1576877Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1576881Z 
2025-01-14T13:17:21.1577046Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1577162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1577447Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1577559Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1577950Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1578057Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1578194Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1578268Z     sim = run_tardis(
2025-01-14T13:17:21.1578356Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1578442Z     simulation.run_convergence()
2025-01-14T13:17:21.1578559Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1578702Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1578801Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1578954Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1579154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1579158Z 
2025-01-14T13:17:21.1579424Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1579629Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1579852Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1580120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1580285Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1580422Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1580427Z 
2025-01-14T13:17:21.1580518Z     def initialize_transport_state(
2025-01-14T13:17:21.1580591Z         self,
2025-01-14T13:17:21.1580672Z         simulation_state,
2025-01-14T13:17:21.1580752Z         opacity_state,
2025-01-14T13:17:21.1580832Z         macro_atom_state,
2025-01-14T13:17:21.1580905Z         plasma,
2025-01-14T13:17:21.1580978Z         no_of_packets,
2025-01-14T13:17:21.1581064Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1581140Z         iteration=0,
2025-01-14T13:17:21.1581212Z     ):
2025-01-14T13:17:21.1581335Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1581435Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1581502Z         else:
2025-01-14T13:17:21.1581768Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1581876Z     
2025-01-14T13:17:21.1582030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1582128Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1582201Z         )
2025-01-14T13:17:21.1582268Z     
2025-01-14T13:17:21.1582402Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1582520Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1582679Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1582752Z         else:
2025-01-14T13:17:21.1582834Z             continuum_state = None
2025-01-14T13:17:21.1582942Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1583049Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1583145Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1583252Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1583355Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1583447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1583551Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1583626Z         ).to_numba(
2025-01-14T13:17:21.1583714Z             macro_atom_state,
2025-01-14T13:17:21.1583809Z             self.line_interaction_type,
2025-01-14T13:17:21.1583881Z         )
2025-01-14T13:17:21.1583990Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1584263Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1584339Z         ]
2025-01-14T13:17:21.1584793Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1584798Z 
2025-01-14T13:17:21.1584953Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1585136Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-2] _________
2025-01-14T13:17:21.1585140Z 
2025-01-14T13:17:21.1585315Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1585633Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1585645Z 
2025-01-14T13:17:21.1585732Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1585819Z         "expected,obtained",
2025-01-14T13:17:21.1585998Z         [
2025-01-14T13:17:21.1586071Z             (
2025-01-14T13:17:21.1586177Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1586288Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1586363Z             ),
2025-01-14T13:17:21.1586518Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1586635Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1586708Z         ],
2025-01-14T13:17:21.1586775Z     )
2025-01-14T13:17:21.1586940Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1587059Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1587072Z 
2025-01-14T13:17:21.1587235Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1587349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1587620Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1587743Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1588007Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1588124Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1588254Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1588335Z     sim = run_tardis(
2025-01-14T13:17:21.1588419Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1588515Z     simulation.run_convergence()
2025-01-14T13:17:21.1588629Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1588777Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1588877Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1589028Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1589141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1589150Z 
2025-01-14T13:17:21.1589407Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1589613Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1589832Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1590106Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1590263Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1590403Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1590407Z 
2025-01-14T13:17:21.1590501Z     def initialize_transport_state(
2025-01-14T13:17:21.1590572Z         self,
2025-01-14T13:17:21.1590655Z         simulation_state,
2025-01-14T13:17:21.1590731Z         opacity_state,
2025-01-14T13:17:21.1590820Z         macro_atom_state,
2025-01-14T13:17:21.1590891Z         plasma,
2025-01-14T13:17:21.1590971Z         no_of_packets,
2025-01-14T13:17:21.1591052Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1591130Z         iteration=0,
2025-01-14T13:17:21.1591301Z     ):
2025-01-14T13:17:21.1591432Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1591527Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1591706Z         else:
2025-01-14T13:17:21.1591787Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1591862Z     
2025-01-14T13:17:21.1591997Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1592097Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1592172Z         )
2025-01-14T13:17:21.1592238Z     
2025-01-14T13:17:21.1592371Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1592486Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1592646Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1592839Z         else:
2025-01-14T13:17:21.1592928Z             continuum_state = None
2025-01-14T13:17:21.1593028Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1593146Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1593237Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1593348Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1593446Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1593546Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1593642Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1593713Z         ).to_numba(
2025-01-14T13:17:21.1593796Z             macro_atom_state,
2025-01-14T13:17:21.1593884Z             self.line_interaction_type,
2025-01-14T13:17:21.1593958Z         )
2025-01-14T13:17:21.1594060Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1594340Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1594410Z         ]
2025-01-14T13:17:21.1594717Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1594727Z 
2025-01-14T13:17:21.1594874Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1595062Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-5] _________
2025-01-14T13:17:21.1595066Z 
2025-01-14T13:17:21.1595241Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1595562Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1595567Z 
2025-01-14T13:17:21.1595661Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1595744Z         "expected,obtained",
2025-01-14T13:17:21.1595819Z         [
2025-01-14T13:17:21.1595892Z             (
2025-01-14T13:17:21.1596005Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1596111Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1596191Z             ),
2025-01-14T13:17:21.1596341Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1596466Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1596534Z         ],
2025-01-14T13:17:21.1596609Z     )
2025-01-14T13:17:21.1596775Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1596889Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1596893Z 
2025-01-14T13:17:21.1597065Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1597177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1597465Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1597588Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1597863Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1598114Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1598252Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1598326Z     sim = run_tardis(
2025-01-14T13:17:21.1598415Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1598505Z     simulation.run_convergence()
2025-01-14T13:17:21.1598618Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1598761Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1598853Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1599010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1599116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1599207Z 
2025-01-14T13:17:21.1599471Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1599669Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1599901Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1600170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1600331Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1600472Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1600476Z 
2025-01-14T13:17:21.1600564Z     def initialize_transport_state(
2025-01-14T13:17:21.1600636Z         self,
2025-01-14T13:17:21.1600715Z         simulation_state,
2025-01-14T13:17:21.1600795Z         opacity_state,
2025-01-14T13:17:21.1600869Z         macro_atom_state,
2025-01-14T13:17:21.1600951Z         plasma,
2025-01-14T13:17:21.1601026Z         no_of_packets,
2025-01-14T13:17:21.1601113Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1601186Z         iteration=0,
2025-01-14T13:17:21.1601264Z     ):
2025-01-14T13:17:21.1601388Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1601490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1601666Z         else:
2025-01-14T13:17:21.1601745Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1601817Z     
2025-01-14T13:17:21.1601950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1602049Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1602118Z         )
2025-01-14T13:17:21.1602192Z     
2025-01-14T13:17:21.1602320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1602437Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1602587Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1602669Z         else:
2025-01-14T13:17:21.1602752Z             continuum_state = None
2025-01-14T13:17:21.1602856Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1602967Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1603065Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1603171Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1603275Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1603377Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1603468Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1603547Z         ).to_numba(
2025-01-14T13:17:21.1603625Z             macro_atom_state,
2025-01-14T13:17:21.1603718Z             self.line_interaction_type,
2025-01-14T13:17:21.1603787Z         )
2025-01-14T13:17:21.1603892Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1604162Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1604238Z         ]
2025-01-14T13:17:21.1604534Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1604664Z 
2025-01-14T13:17:21.1604819Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1605003Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-10] ________
2025-01-14T13:17:21.1605007Z 
2025-01-14T13:17:21.1605173Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1605500Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1605504Z 
2025-01-14T13:17:21.1605591Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1605682Z         "expected,obtained",
2025-01-14T13:17:21.1605750Z         [
2025-01-14T13:17:21.1605824Z             (
2025-01-14T13:17:21.1606068Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1606179Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1606249Z             ),
2025-01-14T13:17:21.1606411Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1606537Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1606606Z         ],
2025-01-14T13:17:21.1606682Z     )
2025-01-14T13:17:21.1606842Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1606968Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1606973Z 
2025-01-14T13:17:21.1607138Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1607254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1607522Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1607646Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1607912Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1608037Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1608171Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1608245Z     sim = run_tardis(
2025-01-14T13:17:21.1608336Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1608422Z     simulation.run_convergence()
2025-01-14T13:17:21.1608538Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1608678Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1608779Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1608930Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1609040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1609045Z 
2025-01-14T13:17:21.1609308Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1609513Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1609741Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1610006Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1610166Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1610299Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1610303Z 
2025-01-14T13:17:21.1610395Z     def initialize_transport_state(
2025-01-14T13:17:21.1610464Z         self,
2025-01-14T13:17:21.1610548Z         simulation_state,
2025-01-14T13:17:21.1610623Z         opacity_state,
2025-01-14T13:17:21.1610707Z         macro_atom_state,
2025-01-14T13:17:21.1610778Z         plasma,
2025-01-14T13:17:21.1610860Z         no_of_packets,
2025-01-14T13:17:21.1610940Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1611019Z         iteration=0,
2025-01-14T13:17:21.1611086Z     ):
2025-01-14T13:17:21.1611213Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1611398Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1611467Z         else:
2025-01-14T13:17:21.1611652Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1611719Z     
2025-01-14T13:17:21.1611860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1611952Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1612025Z         )
2025-01-14T13:17:21.1612092Z     
2025-01-14T13:17:21.1612224Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1612338Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1612493Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1612678Z         else:
2025-01-14T13:17:21.1612769Z             continuum_state = None
2025-01-14T13:17:21.1612871Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1612981Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1613082Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1613188Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1613292Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1613385Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1613484Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1613556Z         ).to_numba(
2025-01-14T13:17:21.1613641Z             macro_atom_state,
2025-01-14T13:17:21.1613728Z             self.line_interaction_type,
2025-01-14T13:17:21.1613803Z         )
2025-01-14T13:17:21.1613904Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1614177Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1614251Z         ]
2025-01-14T13:17:21.1614552Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1614560Z 
2025-01-14T13:17:21.1614710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1614887Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-2] _________
2025-01-14T13:17:21.1614891Z 
2025-01-14T13:17:21.1615062Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1615378Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1615383Z 
2025-01-14T13:17:21.1615477Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1615559Z         "expected,obtained",
2025-01-14T13:17:21.1615633Z         [
2025-01-14T13:17:21.1615701Z             (
2025-01-14T13:17:21.1615813Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1615925Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1616005Z             ),
2025-01-14T13:17:21.1616162Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1616285Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1616360Z         ],
2025-01-14T13:17:21.1616430Z     )
2025-01-14T13:17:21.1616594Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1616709Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1616715Z 
2025-01-14T13:17:21.1616887Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1616995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1617268Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1617378Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1617656Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1617772Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1618024Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1618106Z     sim = run_tardis(
2025-01-14T13:17:21.1618191Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1618285Z     simulation.run_convergence()
2025-01-14T13:17:21.1618396Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1618545Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1618638Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1618796Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1618899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1618904Z 
2025-01-14T13:17:21.1619167Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1619450Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1619668Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1619950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1620105Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1620242Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1620246Z 
2025-01-14T13:17:21.1620331Z     def initialize_transport_state(
2025-01-14T13:17:21.1620407Z         self,
2025-01-14T13:17:21.1620483Z         simulation_state,
2025-01-14T13:17:21.1620561Z         opacity_state,
2025-01-14T13:17:21.1620637Z         macro_atom_state,
2025-01-14T13:17:21.1620715Z         plasma,
2025-01-14T13:17:21.1620793Z         no_of_packets,
2025-01-14T13:17:21.1620878Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1620958Z         iteration=0,
2025-01-14T13:17:21.1621025Z     ):
2025-01-14T13:17:21.1621152Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1621251Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1621325Z         else:
2025-01-14T13:17:21.1621402Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1621476Z     
2025-01-14T13:17:21.1621809Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1621965Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1622034Z         )
2025-01-14T13:17:21.1622107Z     
2025-01-14T13:17:21.1622234Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1622352Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1622502Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1622577Z         else:
2025-01-14T13:17:21.1622670Z             continuum_state = None
2025-01-14T13:17:21.1622768Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1622882Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1622979Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1623089Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1623187Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1623284Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1623373Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1623452Z         ).to_numba(
2025-01-14T13:17:21.1623529Z             macro_atom_state,
2025-01-14T13:17:21.1623622Z             self.line_interaction_type,
2025-01-14T13:17:21.1623691Z         )
2025-01-14T13:17:21.1623798Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1624063Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1624141Z         ]
2025-01-14T13:17:21.1624444Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1624604Z 
2025-01-14T13:17:21.1624754Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1624940Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-5] _________
2025-01-14T13:17:21.1624945Z 
2025-01-14T13:17:21.1625109Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1625437Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1625442Z 
2025-01-14T13:17:21.1625530Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1625620Z         "expected,obtained",
2025-01-14T13:17:21.1625687Z         [
2025-01-14T13:17:21.1625764Z             (
2025-01-14T13:17:21.1625874Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1626098Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1626173Z             ),
2025-01-14T13:17:21.1626320Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1626449Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1626517Z         ],
2025-01-14T13:17:21.1626595Z     )
2025-01-14T13:17:21.1626755Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1626875Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1626880Z 
2025-01-14T13:17:21.1627045Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1627157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1627428Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1627544Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1627820Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1627927Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1628065Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1628139Z     sim = run_tardis(
2025-01-14T13:17:21.1628227Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1628312Z     simulation.run_convergence()
2025-01-14T13:17:21.1628428Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1628567Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1628665Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1628816Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1628928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1628932Z 
2025-01-14T13:17:21.1629196Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1629404Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1629626Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1629896Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1630057Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1630194Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1630198Z 
2025-01-14T13:17:21.1630290Z     def initialize_transport_state(
2025-01-14T13:17:21.1630358Z         self,
2025-01-14T13:17:21.1630440Z         simulation_state,
2025-01-14T13:17:21.1630519Z         opacity_state,
2025-01-14T13:17:21.1630594Z         macro_atom_state,
2025-01-14T13:17:21.1630670Z         plasma,
2025-01-14T13:17:21.1630743Z         no_of_packets,
2025-01-14T13:17:21.1630828Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1630906Z         iteration=0,
2025-01-14T13:17:21.1630977Z     ):
2025-01-14T13:17:21.1631096Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1631279Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1631348Z         else:
2025-01-14T13:17:21.1631433Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1631500Z     
2025-01-14T13:17:21.1631738Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1631833Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1631906Z         )
2025-01-14T13:17:21.1631971Z     
2025-01-14T13:17:21.1632101Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1632210Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1632364Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1632437Z         else:
2025-01-14T13:17:21.1632518Z             continuum_state = None
2025-01-14T13:17:21.1632758Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1632864Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1632959Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1633069Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1633172Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1633265Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1633358Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1633429Z         ).to_numba(
2025-01-14T13:17:21.1633512Z             macro_atom_state,
2025-01-14T13:17:21.1633597Z             self.line_interaction_type,
2025-01-14T13:17:21.1633669Z         )
2025-01-14T13:17:21.1633767Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1634038Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1634109Z         ]
2025-01-14T13:17:21.1634412Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1634417Z 
2025-01-14T13:17:21.1634565Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1634746Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-10] _________
2025-01-14T13:17:21.1634750Z 
2025-01-14T13:17:21.1634916Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1635228Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1635240Z 
2025-01-14T13:17:21.1635327Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1635414Z         "expected,obtained",
2025-01-14T13:17:21.1635480Z         [
2025-01-14T13:17:21.1635555Z             (
2025-01-14T13:17:21.1635660Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1635768Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1635841Z             ),
2025-01-14T13:17:21.1635999Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1636118Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1636192Z         ],
2025-01-14T13:17:21.1636258Z     )
2025-01-14T13:17:21.1636423Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1636536Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1636540Z 
2025-01-14T13:17:21.1636709Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1636822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1637095Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1637210Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1637476Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1637593Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1637720Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1637926Z     sim = run_tardis(
2025-01-14T13:17:21.1638008Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1638099Z     simulation.run_convergence()
2025-01-14T13:17:21.1638209Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1638356Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1638449Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1638607Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1638717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1638722Z 
2025-01-14T13:17:21.1638978Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1639262Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1639486Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1639766Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1639922Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1640062Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1640066Z 
2025-01-14T13:17:21.1640157Z     def initialize_transport_state(
2025-01-14T13:17:21.1640226Z         self,
2025-01-14T13:17:21.1640306Z         simulation_state,
2025-01-14T13:17:21.1640381Z         opacity_state,
2025-01-14T13:17:21.1640460Z         macro_atom_state,
2025-01-14T13:17:21.1640529Z         plasma,
2025-01-14T13:17:21.1640607Z         no_of_packets,
2025-01-14T13:17:21.1640687Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1640774Z         iteration=0,
2025-01-14T13:17:21.1640840Z     ):
2025-01-14T13:17:21.1640970Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1641062Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1641141Z         else:
2025-01-14T13:17:21.1641218Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1641289Z     
2025-01-14T13:17:21.1641421Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1641523Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1641691Z         )
2025-01-14T13:17:21.1641763Z     
2025-01-14T13:17:21.1641898Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1642008Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1642166Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1642235Z         else:
2025-01-14T13:17:21.1642321Z             continuum_state = None
2025-01-14T13:17:21.1642425Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1642546Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1642636Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1642752Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1642849Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1642947Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1643037Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1643113Z         ).to_numba(
2025-01-14T13:17:21.1643190Z             macro_atom_state,
2025-01-14T13:17:21.1643283Z             self.line_interaction_type,
2025-01-14T13:17:21.1643355Z         )
2025-01-14T13:17:21.1643455Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1643731Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1643798Z         ]
2025-01-14T13:17:21.1644104Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1644112Z 
2025-01-14T13:17:21.1644259Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1644568Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[10] ________
2025-01-14T13:17:21.1644573Z 
2025-01-14T13:17:21.1644737Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1645061Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1645066Z 
2025-01-14T13:17:21.1645158Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1645239Z         "expected,obtained",
2025-01-14T13:17:21.1645311Z         [
2025-01-14T13:17:21.1645377Z             (
2025-01-14T13:17:21.1645487Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1645590Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1645770Z             ),
2025-01-14T13:17:21.1645920Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1646041Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1646115Z         ],
2025-01-14T13:17:21.1646188Z     )
2025-01-14T13:17:21.1646348Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1646468Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1646472Z 
2025-01-14T13:17:21.1646643Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1646751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1647028Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1647137Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1647409Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1647518Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1647655Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1647734Z     sim = run_tardis(
2025-01-14T13:17:21.1647825Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1647913Z     simulation.run_convergence()
2025-01-14T13:17:21.1648030Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1648177Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1648270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1648430Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1648536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1648540Z 
2025-01-14T13:17:21.1648804Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1649002Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1649230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1649502Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1649671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1649816Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1649820Z 
2025-01-14T13:17:21.1649907Z     def initialize_transport_state(
2025-01-14T13:17:21.1649982Z         self,
2025-01-14T13:17:21.1650059Z         simulation_state,
2025-01-14T13:17:21.1650140Z         opacity_state,
2025-01-14T13:17:21.1650215Z         macro_atom_state,
2025-01-14T13:17:21.1650291Z         plasma,
2025-01-14T13:17:21.1650367Z         no_of_packets,
2025-01-14T13:17:21.1650452Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1650524Z         iteration=0,
2025-01-14T13:17:21.1650602Z     ):
2025-01-14T13:17:21.1650726Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1650824Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1650897Z         else:
2025-01-14T13:17:21.1651085Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1651151Z     
2025-01-14T13:17:21.1651290Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1651389Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1651456Z         )
2025-01-14T13:17:21.1651530Z     
2025-01-14T13:17:21.1651776Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1651898Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1652049Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1652123Z         else:
2025-01-14T13:17:21.1652205Z             continuum_state = None
2025-01-14T13:17:21.1652309Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1652575Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1652674Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1652778Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1652890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1652984Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1653079Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1653156Z         ).to_numba(
2025-01-14T13:17:21.1653234Z             macro_atom_state,
2025-01-14T13:17:21.1653326Z             self.line_interaction_type,
2025-01-14T13:17:21.1653393Z         )
2025-01-14T13:17:21.1653499Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1653765Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1653837Z         ]
2025-01-14T13:17:21.1654133Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1654143Z 
2025-01-14T13:17:21.1654294Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1654474Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[30] ________
2025-01-14T13:17:21.1654489Z 
2025-01-14T13:17:21.1654653Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1654977Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1654981Z 
2025-01-14T13:17:21.1655066Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1655153Z         "expected,obtained",
2025-01-14T13:17:21.1655221Z         [
2025-01-14T13:17:21.1655294Z             (
2025-01-14T13:17:21.1655399Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1655508Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1655578Z             ),
2025-01-14T13:17:21.1655743Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1655860Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1655936Z         ],
2025-01-14T13:17:21.1656010Z     )
2025-01-14T13:17:21.1656169Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1656288Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1656292Z 
2025-01-14T13:17:21.1656456Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1656571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1656854Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1656974Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1657242Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1657360Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1657492Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1657573Z     sim = run_tardis(
2025-01-14T13:17:21.1657809Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1657897Z     simulation.run_convergence()
2025-01-14T13:17:21.1658015Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1658158Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1658257Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1658406Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1658520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1658524Z 
2025-01-14T13:17:21.1658785Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1658990Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1659298Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1659573Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1659740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1659877Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1659881Z 
2025-01-14T13:17:21.1659973Z     def initialize_transport_state(
2025-01-14T13:17:21.1660041Z         self,
2025-01-14T13:17:21.1660125Z         simulation_state,
2025-01-14T13:17:21.1660200Z         opacity_state,
2025-01-14T13:17:21.1660282Z         macro_atom_state,
2025-01-14T13:17:21.1660351Z         plasma,
2025-01-14T13:17:21.1660432Z         no_of_packets,
2025-01-14T13:17:21.1660515Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1660594Z         iteration=0,
2025-01-14T13:17:21.1660660Z     ):
2025-01-14T13:17:21.1660796Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1660891Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1660965Z         else:
2025-01-14T13:17:21.1661049Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1661122Z     
2025-01-14T13:17:21.1661259Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1661353Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1661425Z         )
2025-01-14T13:17:21.1661491Z     
2025-01-14T13:17:21.1661839Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1661991Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1662149Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1662217Z         else:
2025-01-14T13:17:21.1662304Z             continuum_state = None
2025-01-14T13:17:21.1662403Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1662513Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1662609Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1662719Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1662829Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1662921Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1663015Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1663085Z         ).to_numba(
2025-01-14T13:17:21.1663167Z             macro_atom_state,
2025-01-14T13:17:21.1663254Z             self.line_interaction_type,
2025-01-14T13:17:21.1663325Z         )
2025-01-14T13:17:21.1663424Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1663696Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1663764Z         ]
2025-01-14T13:17:21.1664065Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1664074Z 
2025-01-14T13:17:21.1664218Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1664402Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[50] ________
2025-01-14T13:17:21.1664568Z 
2025-01-14T13:17:21.1664742Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1665063Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1665068Z 
2025-01-14T13:17:21.1665160Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1665243Z         "expected,obtained",
2025-01-14T13:17:21.1665315Z         [
2025-01-14T13:17:21.1665382Z             (
2025-01-14T13:17:21.1665492Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1665595Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1665666Z             ),
2025-01-14T13:17:21.1665816Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1666051Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1666123Z         ],
2025-01-14T13:17:21.1666195Z     )
2025-01-14T13:17:21.1666358Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1666473Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1666478Z 
2025-01-14T13:17:21.1666648Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1666755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1667031Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1667142Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1667413Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1667528Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1667664Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1667742Z     sim = run_tardis(
2025-01-14T13:17:21.1667826Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1667922Z     simulation.run_convergence()
2025-01-14T13:17:21.1668033Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1668176Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1668269Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1668425Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1668532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1668536Z 
2025-01-14T13:17:21.1668801Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1668999Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1669222Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1669499Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1669662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1675862Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1675912Z 
2025-01-14T13:17:21.1676048Z     def initialize_transport_state(
2025-01-14T13:17:21.1676126Z         self,
2025-01-14T13:17:21.1676209Z         simulation_state,
2025-01-14T13:17:21.1676290Z         opacity_state,
2025-01-14T13:17:21.1676367Z         macro_atom_state,
2025-01-14T13:17:21.1676444Z         plasma,
2025-01-14T13:17:21.1676521Z         no_of_packets,
2025-01-14T13:17:21.1676609Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1676683Z         iteration=0,
2025-01-14T13:17:21.1676753Z     ):
2025-01-14T13:17:21.1676897Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1677028Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1677102Z         else:
2025-01-14T13:17:21.1677182Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1677441Z     
2025-01-14T13:17:21.1677589Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1677692Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1677762Z         )
2025-01-14T13:17:21.1677832Z     
2025-01-14T13:17:21.1677968Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1678097Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1678259Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1678333Z         else:
2025-01-14T13:17:21.1678416Z             continuum_state = None
2025-01-14T13:17:21.1678523Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1678631Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1678842Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1678955Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1679056Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1679160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1679251Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1679328Z         ).to_numba(
2025-01-14T13:17:21.1679409Z             macro_atom_state,
2025-01-14T13:17:21.1679500Z             self.line_interaction_type,
2025-01-14T13:17:21.1679567Z         )
2025-01-14T13:17:21.1679675Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1679952Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1680025Z         ]
2025-01-14T13:17:21.1680340Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1680355Z 
2025-01-14T13:17:21.1680512Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1680713Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-2] _______
2025-01-14T13:17:21.1680723Z 
2025-01-14T13:17:21.1680896Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1681224Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1681230Z 
2025-01-14T13:17:21.1681320Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1681409Z         "expected,obtained",
2025-01-14T13:17:21.1681476Z         [
2025-01-14T13:17:21.1681811Z             (
2025-01-14T13:17:21.1682004Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1682190Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1682269Z             ),
2025-01-14T13:17:21.1682433Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1682568Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1682635Z         ],
2025-01-14T13:17:21.1682707Z     )
2025-01-14T13:17:21.1682872Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1683001Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1683006Z 
2025-01-14T13:17:21.1683177Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1683296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1683576Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1683697Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1683961Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1684071Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1684216Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1684292Z     sim = run_tardis(
2025-01-14T13:17:21.1684387Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1684477Z     simulation.run_convergence()
2025-01-14T13:17:21.1684745Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1684894Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1684995Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1685150Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1685269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1685274Z 
2025-01-14T13:17:21.1685537Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1685742Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1685968Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1686351Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1686519Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1686669Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1686673Z 
2025-01-14T13:17:21.1686766Z     def initialize_transport_state(
2025-01-14T13:17:21.1686836Z         self,
2025-01-14T13:17:21.1686919Z         simulation_state,
2025-01-14T13:17:21.1686994Z         opacity_state,
2025-01-14T13:17:21.1687075Z         macro_atom_state,
2025-01-14T13:17:21.1687145Z         plasma,
2025-01-14T13:17:21.1687224Z         no_of_packets,
2025-01-14T13:17:21.1687307Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1687388Z         iteration=0,
2025-01-14T13:17:21.1687459Z     ):
2025-01-14T13:17:21.1687591Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1687700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1687768Z         else:
2025-01-14T13:17:21.1687849Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1687915Z     
2025-01-14T13:17:21.1688058Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1688162Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1688233Z         )
2025-01-14T13:17:21.1688297Z     
2025-01-14T13:17:21.1688432Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1688546Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1688706Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1688773Z         else:
2025-01-14T13:17:21.1688861Z             continuum_state = None
2025-01-14T13:17:21.1688963Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1689076Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1689174Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1689285Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1689390Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1689490Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1689586Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1689657Z         ).to_numba(
2025-01-14T13:17:21.1689740Z             macro_atom_state,
2025-01-14T13:17:21.1689826Z             self.line_interaction_type,
2025-01-14T13:17:21.1689898Z         )
2025-01-14T13:17:21.1689999Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1690272Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1690338Z         ]
2025-01-14T13:17:21.1690650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1690655Z 
2025-01-14T13:17:21.1690813Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1691003Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-5] _______
2025-01-14T13:17:21.1691007Z 
2025-01-14T13:17:21.1691285Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1691729Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1691736Z 
2025-01-14T13:17:21.1691836Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1691920Z         "expected,obtained",
2025-01-14T13:17:21.1691995Z         [
2025-01-14T13:17:21.1692062Z             (
2025-01-14T13:17:21.1692172Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1692280Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1692348Z             ),
2025-01-14T13:17:21.1692503Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1692755Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1692827Z         ],
2025-01-14T13:17:21.1692894Z     )
2025-01-14T13:17:21.1693058Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1693184Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1693189Z 
2025-01-14T13:17:21.1693362Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1693473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1693754Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1693870Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1694135Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1694253Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1694383Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1694470Z     sim = run_tardis(
2025-01-14T13:17:21.1694554Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1694646Z     simulation.run_convergence()
2025-01-14T13:17:21.1694766Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1694913Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1695007Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1695166Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1695276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1695287Z 
2025-01-14T13:17:21.1695552Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1695758Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1695978Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1696262Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1696424Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1696573Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1696577Z 
2025-01-14T13:17:21.1696664Z     def initialize_transport_state(
2025-01-14T13:17:21.1696739Z         self,
2025-01-14T13:17:21.1696816Z         simulation_state,
2025-01-14T13:17:21.1696897Z         opacity_state,
2025-01-14T13:17:21.1696981Z         macro_atom_state,
2025-01-14T13:17:21.1697053Z         plasma,
2025-01-14T13:17:21.1697137Z         no_of_packets,
2025-01-14T13:17:21.1697218Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1697298Z         iteration=0,
2025-01-14T13:17:21.1697365Z     ):
2025-01-14T13:17:21.1697496Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1697592Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1697674Z         else:
2025-01-14T13:17:21.1697751Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1697822Z     
2025-01-14T13:17:21.1697956Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1698213Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1698280Z         )
2025-01-14T13:17:21.1698351Z     
2025-01-14T13:17:21.1698480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1698597Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1698748Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1698823Z         else:
2025-01-14T13:17:21.1698911Z             continuum_state = None
2025-01-14T13:17:21.1699009Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1699120Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1699209Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1699428Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1699526Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1699623Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1699718Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1699793Z         ).to_numba(
2025-01-14T13:17:21.1699869Z             macro_atom_state,
2025-01-14T13:17:21.1699959Z             self.line_interaction_type,
2025-01-14T13:17:21.1700026Z         )
2025-01-14T13:17:21.1700131Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1700400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1700471Z         ]
2025-01-14T13:17:21.1700776Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1700780Z 
2025-01-14T13:17:21.1700924Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1701121Z ______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-10] _______
2025-01-14T13:17:21.1701126Z 
2025-01-14T13:17:21.1701292Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1701854Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1701868Z 
2025-01-14T13:17:21.1701998Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1702090Z         "expected,obtained",
2025-01-14T13:17:21.1702164Z         [
2025-01-14T13:17:21.1702230Z             (
2025-01-14T13:17:21.1702346Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1702457Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1702532Z             ),
2025-01-14T13:17:21.1702684Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1702812Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1702884Z         ],
2025-01-14T13:17:21.1702957Z     )
2025-01-14T13:17:21.1703118Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1703246Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1703251Z 
2025-01-14T13:17:21.1703416Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1703534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1703819Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1703932Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1704204Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1704309Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1704445Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1704525Z     sim = run_tardis(
2025-01-14T13:17:21.1704616Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1704702Z     simulation.run_convergence()
2025-01-14T13:17:21.1704821Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1705127Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1705226Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1705377Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1705490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1705494Z 
2025-01-14T13:17:21.1705762Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1705963Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1706193Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1706465Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1706742Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1706880Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1706891Z 
2025-01-14T13:17:21.1706988Z     def initialize_transport_state(
2025-01-14T13:17:21.1707062Z         self,
2025-01-14T13:17:21.1707140Z         simulation_state,
2025-01-14T13:17:21.1707219Z         opacity_state,
2025-01-14T13:17:21.1707291Z         macro_atom_state,
2025-01-14T13:17:21.1707367Z         plasma,
2025-01-14T13:17:21.1707439Z         no_of_packets,
2025-01-14T13:17:21.1707526Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1707598Z         iteration=0,
2025-01-14T13:17:21.1707669Z     ):
2025-01-14T13:17:21.1707796Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1707899Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1707967Z         else:
2025-01-14T13:17:21.1708054Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1708120Z     
2025-01-14T13:17:21.1708257Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1708362Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1708433Z         )
2025-01-14T13:17:21.1708500Z     
2025-01-14T13:17:21.1708631Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1708750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1708902Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1708980Z         else:
2025-01-14T13:17:21.1709061Z             continuum_state = None
2025-01-14T13:17:21.1709165Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1709277Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1709376Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1709484Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1709593Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1709686Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1709782Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1709856Z         ).to_numba(
2025-01-14T13:17:21.1709941Z             macro_atom_state,
2025-01-14T13:17:21.1710027Z             self.line_interaction_type,
2025-01-14T13:17:21.1710099Z         )
2025-01-14T13:17:21.1710206Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1710472Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1710544Z         ]
2025-01-14T13:17:21.1710843Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1710848Z 
2025-01-14T13:17:21.1710998Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1711178Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-2] ________
2025-01-14T13:17:21.1711187Z 
2025-01-14T13:17:21.1711357Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1711874Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1711885Z 
2025-01-14T13:17:21.1711974Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1712062Z         "expected,obtained",
2025-01-14T13:17:21.1712128Z         [
2025-01-14T13:17:21.1712198Z             (
2025-01-14T13:17:21.1712304Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1712412Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1712479Z             ),
2025-01-14T13:17:21.1712633Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1712751Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1712938Z         ],
2025-01-14T13:17:21.1713004Z     )
2025-01-14T13:17:21.1713173Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1713287Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1713302Z 
2025-01-14T13:17:21.1713467Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1713581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1713852Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1713967Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1714233Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1714346Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1714475Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1714553Z     sim = run_tardis(
2025-01-14T13:17:21.1714641Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1714734Z     simulation.run_convergence()
2025-01-14T13:17:21.1714848Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1714998Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1715096Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1715249Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1715360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1715365Z 
2025-01-14T13:17:21.1715627Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1715830Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1716049Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1716322Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1716484Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1716623Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1716630Z 
2025-01-14T13:17:21.1716723Z     def initialize_transport_state(
2025-01-14T13:17:21.1716790Z         self,
2025-01-14T13:17:21.1716872Z         simulation_state,
2025-01-14T13:17:21.1716945Z         opacity_state,
2025-01-14T13:17:21.1717028Z         macro_atom_state,
2025-01-14T13:17:21.1717098Z         plasma,
2025-01-14T13:17:21.1717175Z         no_of_packets,
2025-01-14T13:17:21.1717255Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1717333Z         iteration=0,
2025-01-14T13:17:21.1717401Z     ):
2025-01-14T13:17:21.1717528Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1717621Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1717694Z         else:
2025-01-14T13:17:21.1717770Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1717846Z     
2025-01-14T13:17:21.1717980Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1718078Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1718274Z         )
2025-01-14T13:17:21.1718340Z     
2025-01-14T13:17:21.1718472Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1718584Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1718741Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1718823Z         else:
2025-01-14T13:17:21.1718912Z             continuum_state = None
2025-01-14T13:17:21.1719008Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1719121Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1719210Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1719321Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1719501Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1719597Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1719691Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1719767Z         ).to_numba(
2025-01-14T13:17:21.1719848Z             macro_atom_state,
2025-01-14T13:17:21.1719937Z             self.line_interaction_type,
2025-01-14T13:17:21.1720008Z         )
2025-01-14T13:17:21.1720105Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1720379Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1720445Z         ]
2025-01-14T13:17:21.1720752Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1720756Z 
2025-01-14T13:17:21.1720903Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1721088Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-5] ________
2025-01-14T13:17:21.1721098Z 
2025-01-14T13:17:21.1721266Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1721757Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1721775Z 
2025-01-14T13:17:21.1721934Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1722052Z         "expected,obtained",
2025-01-14T13:17:21.1722128Z         [
2025-01-14T13:17:21.1722194Z             (
2025-01-14T13:17:21.1722306Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1722410Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1722486Z             ),
2025-01-14T13:17:21.1722634Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1722756Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1722823Z         ],
2025-01-14T13:17:21.1722899Z     )
2025-01-14T13:17:21.1723062Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1723178Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1723189Z 
2025-01-14T13:17:21.1723360Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1723465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1723746Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1723858Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1724132Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1724236Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1724372Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1724445Z     sim = run_tardis(
2025-01-14T13:17:21.1724534Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1724628Z     simulation.run_convergence()
2025-01-14T13:17:21.1724739Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1724892Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1725152Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1725309Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1725414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1725419Z 
2025-01-14T13:17:21.1725685Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1725881Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1726104Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1726373Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1726643Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1726784Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1726793Z 
2025-01-14T13:17:21.1726879Z     def initialize_transport_state(
2025-01-14T13:17:21.1726952Z         self,
2025-01-14T13:17:21.1727029Z         simulation_state,
2025-01-14T13:17:21.1727107Z         opacity_state,
2025-01-14T13:17:21.1727181Z         macro_atom_state,
2025-01-14T13:17:21.1727255Z         plasma,
2025-01-14T13:17:21.1727327Z         no_of_packets,
2025-01-14T13:17:21.1727413Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1727485Z         iteration=0,
2025-01-14T13:17:21.1727555Z     ):
2025-01-14T13:17:21.1727677Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1727774Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1727847Z         else:
2025-01-14T13:17:21.1727923Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1727998Z     
2025-01-14T13:17:21.1728134Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1728236Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1728305Z         )
2025-01-14T13:17:21.1728379Z     
2025-01-14T13:17:21.1728504Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1728619Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1728769Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1728844Z         else:
2025-01-14T13:17:21.1728924Z             continuum_state = None
2025-01-14T13:17:21.1729029Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1729134Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1729230Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1729334Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1729445Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1729546Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1729636Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1729712Z         ).to_numba(
2025-01-14T13:17:21.1729793Z             macro_atom_state,
2025-01-14T13:17:21.1729884Z             self.line_interaction_type,
2025-01-14T13:17:21.1729950Z         )
2025-01-14T13:17:21.1730054Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1730320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1730395Z         ]
2025-01-14T13:17:21.1730696Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1730701Z 
2025-01-14T13:17:21.1730852Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1731035Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-10] _______
2025-01-14T13:17:21.1731044Z 
2025-01-14T13:17:21.1731204Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1731528Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1731817Z 
2025-01-14T13:17:21.1731913Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1732001Z         "expected,obtained",
2025-01-14T13:17:21.1732067Z         [
2025-01-14T13:17:21.1732138Z             (
2025-01-14T13:17:21.1732245Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1732353Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1732421Z             ),
2025-01-14T13:17:21.1732577Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1732699Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1732766Z         ],
2025-01-14T13:17:21.1732836Z     )
2025-01-14T13:17:21.1732994Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1733222Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1733227Z 
2025-01-14T13:17:21.1733392Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1733506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1733777Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1733891Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1734154Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1734270Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1734407Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1734480Z     sim = run_tardis(
2025-01-14T13:17:21.1734568Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1734653Z     simulation.run_convergence()
2025-01-14T13:17:21.1734778Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1734915Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1735021Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1735170Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1735279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1735283Z 
2025-01-14T13:17:21.1735541Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1735743Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1735966Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1736234Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1736397Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1736535Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1736540Z 
2025-01-14T13:17:21.1736630Z     def initialize_transport_state(
2025-01-14T13:17:21.1736702Z         self,
2025-01-14T13:17:21.1736784Z         simulation_state,
2025-01-14T13:17:21.1736858Z         opacity_state,
2025-01-14T13:17:21.1736938Z         macro_atom_state,
2025-01-14T13:17:21.1737007Z         plasma,
2025-01-14T13:17:21.1737085Z         no_of_packets,
2025-01-14T13:17:21.1737164Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1737241Z         iteration=0,
2025-01-14T13:17:21.1737313Z     ):
2025-01-14T13:17:21.1737435Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1737536Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1737603Z         else:
2025-01-14T13:17:21.1737684Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1737750Z     
2025-01-14T13:17:21.1737896Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1737988Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1738060Z         )
2025-01-14T13:17:21.1738126Z     
2025-01-14T13:17:21.1738382Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1738495Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1738648Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1738716Z         else:
2025-01-14T13:17:21.1738803Z             continuum_state = None
2025-01-14T13:17:21.1738900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1739012Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1739106Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1739209Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1739310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1739487Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1739579Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1739648Z         ).to_numba(
2025-01-14T13:17:21.1739737Z             macro_atom_state,
2025-01-14T13:17:21.1739829Z             self.line_interaction_type,
2025-01-14T13:17:21.1739906Z         )
2025-01-14T13:17:21.1740005Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1740276Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1740343Z         ]
2025-01-14T13:17:21.1740643Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1740648Z 
2025-01-14T13:17:21.1740799Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1740997Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-14T13:17:21.1741002Z 
2025-01-14T13:17:21.1741988Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1742369Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1742375Z 
2025-01-14T13:17:21.1742472Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1742611Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1742686Z         """
2025-01-14T13:17:21.1742835Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1742901Z     
2025-01-14T13:17:21.1742978Z         Parameters
2025-01-14T13:17:21.1743053Z         ----------
2025-01-14T13:17:21.1743202Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1743325Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1743454Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1743528Z             Atomic data.
2025-01-14T13:17:21.1743600Z     
2025-01-14T13:17:21.1743672Z         Returns
2025-01-14T13:17:21.1743747Z         -------
2025-01-14T13:17:21.1743852Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1743937Z             Simulation object.
2025-01-14T13:17:21.1744003Z         """
2025-01-14T13:17:21.1744157Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1744331Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1744444Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1744574Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1744706Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1744881Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1745023Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1745128Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1745360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1745440Z >       sim = run_tardis(
2025-01-14T13:17:21.1745520Z             config_verysimple,
2025-01-14T13:17:21.1745606Z             atom_data=atomic_data,
2025-01-14T13:17:21.1745695Z             show_convergence_plots=False,
2025-01-14T13:17:21.1745780Z             log_level="CRITICAl",
2025-01-14T13:17:21.1745851Z         )
2025-01-14T13:17:21.1745856Z 
2025-01-14T13:17:21.1745993Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1746109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1746193Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1746283Z     simulation.run_convergence()
2025-01-14T13:17:21.1746397Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1746666Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1746760Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1746924Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1747030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1747034Z 
2025-01-14T13:17:21.1747303Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1747508Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1747728Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1748005Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1748165Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1748309Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1748314Z 
2025-01-14T13:17:21.1748401Z     def initialize_transport_state(
2025-01-14T13:17:21.1748474Z         self,
2025-01-14T13:17:21.1748558Z         simulation_state,
2025-01-14T13:17:21.1748637Z         opacity_state,
2025-01-14T13:17:21.1748712Z         macro_atom_state,
2025-01-14T13:17:21.1748786Z         plasma,
2025-01-14T13:17:21.1748859Z         no_of_packets,
2025-01-14T13:17:21.1748945Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1749021Z         iteration=0,
2025-01-14T13:17:21.1749088Z     ):
2025-01-14T13:17:21.1749218Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1749313Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1749387Z         else:
2025-01-14T13:17:21.1749464Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1749536Z     
2025-01-14T13:17:21.1749667Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1749770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1749837Z         )
2025-01-14T13:17:21.1749910Z     
2025-01-14T13:17:21.1750037Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1750160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1750311Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1750384Z         else:
2025-01-14T13:17:21.1750466Z             continuum_state = None
2025-01-14T13:17:21.1750568Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1750681Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1750772Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1750881Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1750978Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1751075Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1751164Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1751245Z         ).to_numba(
2025-01-14T13:17:21.1751322Z             macro_atom_state,
2025-01-14T13:17:21.1751413Z             self.line_interaction_type,
2025-01-14T13:17:21.1751696Z         )
2025-01-14T13:17:21.1751805Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1752075Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1752147Z         ]
2025-01-14T13:17:21.1752455Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1752460Z 
2025-01-14T13:17:21.1752606Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1752764Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.1752969Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-14T13:17:21.1753231Z log_level = CRITICAL will be used for Log Level Determination
2025-01-14T13:17:21.1753236Z 
2025-01-14T13:17:21.1753425Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-14T13:17:21.1753435Z 
2025-01-14T13:17:21.1754105Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1754456Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1754461Z 
2025-01-14T13:17:21.1754547Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1754687Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1754755Z         """
2025-01-14T13:17:21.1754904Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1754975Z     
2025-01-14T13:17:21.1755051Z         Parameters
2025-01-14T13:17:21.1755124Z         ----------
2025-01-14T13:17:21.1755269Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1755396Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1755516Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1755596Z             Atomic data.
2025-01-14T13:17:21.1755662Z     
2025-01-14T13:17:21.1755735Z         Returns
2025-01-14T13:17:21.1755805Z         -------
2025-01-14T13:17:21.1755913Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1755996Z             Simulation object.
2025-01-14T13:17:21.1756068Z         """
2025-01-14T13:17:21.1756215Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1756386Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1756500Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1756633Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1756765Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1756942Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1757081Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1757184Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1757282Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1757356Z >       sim = run_tardis(
2025-01-14T13:17:21.1757440Z             config_verysimple,
2025-01-14T13:17:21.1757521Z             atom_data=atomic_data,
2025-01-14T13:17:21.1757615Z             show_convergence_plots=False,
2025-01-14T13:17:21.1757694Z             log_level="CRITICAl",
2025-01-14T13:17:21.1757765Z         )
2025-01-14T13:17:21.1757769Z 
2025-01-14T13:17:21.1757904Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1758021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1758104Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1758194Z     simulation.run_convergence()
2025-01-14T13:17:21.1758440Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1758583Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1758681Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1758840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1758960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1758965Z 
2025-01-14T13:17:21.1759235Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1759442Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1759660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1760019Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1760178Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1760327Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1760331Z 
2025-01-14T13:17:21.1760423Z     def initialize_transport_state(
2025-01-14T13:17:21.1760491Z         self,
2025-01-14T13:17:21.1760572Z         simulation_state,
2025-01-14T13:17:21.1760647Z         opacity_state,
2025-01-14T13:17:21.1760724Z         macro_atom_state,
2025-01-14T13:17:21.1760794Z         plasma,
2025-01-14T13:17:21.1760871Z         no_of_packets,
2025-01-14T13:17:21.1760951Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1761026Z         iteration=0,
2025-01-14T13:17:21.1761092Z     ):
2025-01-14T13:17:21.1761225Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1761320Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1761398Z         else:
2025-01-14T13:17:21.1761475Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1761690Z     
2025-01-14T13:17:21.1761829Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1761946Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1762020Z         )
2025-01-14T13:17:21.1762087Z     
2025-01-14T13:17:21.1762220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1762333Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1762492Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1762562Z         else:
2025-01-14T13:17:21.1762649Z             continuum_state = None
2025-01-14T13:17:21.1762749Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1762863Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1762957Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1763074Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1763172Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1763277Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1763379Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1763449Z         ).to_numba(
2025-01-14T13:17:21.1763535Z             macro_atom_state,
2025-01-14T13:17:21.1763623Z             self.line_interaction_type,
2025-01-14T13:17:21.1763697Z         )
2025-01-14T13:17:21.1763799Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1764072Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1764142Z         ]
2025-01-14T13:17:21.1764450Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1764455Z 
2025-01-14T13:17:21.1764602Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1764802Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:17:21.1764806Z 
2025-01-14T13:17:21.1765475Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1765947Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1765952Z 
2025-01-14T13:17:21.1766046Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1766183Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1766254Z         """
2025-01-14T13:17:21.1766398Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1766473Z     
2025-01-14T13:17:21.1766547Z         Parameters
2025-01-14T13:17:21.1766731Z         ----------
2025-01-14T13:17:21.1766874Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1767002Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1767131Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1767206Z             Atomic data.
2025-01-14T13:17:21.1767277Z     
2025-01-14T13:17:21.1767346Z         Returns
2025-01-14T13:17:21.1767420Z         -------
2025-01-14T13:17:21.1767524Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1767608Z             Simulation object.
2025-01-14T13:17:21.1767674Z         """
2025-01-14T13:17:21.1767830Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1768000Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1768118Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1768241Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1768383Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1768556Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1768700Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1768806Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1768901Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1768982Z >       sim = run_tardis(
2025-01-14T13:17:21.1769065Z             config_verysimple,
2025-01-14T13:17:21.1769151Z             atom_data=atomic_data,
2025-01-14T13:17:21.1769240Z             show_convergence_plots=False,
2025-01-14T13:17:21.1769327Z             log_level="CRITICAl",
2025-01-14T13:17:21.1769395Z         )
2025-01-14T13:17:21.1769399Z 
2025-01-14T13:17:21.1769541Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1769649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1769743Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1769839Z     simulation.run_convergence()
2025-01-14T13:17:21.1769951Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1770099Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1770193Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1770352Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1770459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1770463Z 
2025-01-14T13:17:21.1770736Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1770937Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1771165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1771435Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1771697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1771840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1771961Z 
2025-01-14T13:17:21.1772081Z     def initialize_transport_state(
2025-01-14T13:17:21.1772158Z         self,
2025-01-14T13:17:21.1772237Z         simulation_state,
2025-01-14T13:17:21.1772319Z         opacity_state,
2025-01-14T13:17:21.1772393Z         macro_atom_state,
2025-01-14T13:17:21.1772469Z         plasma,
2025-01-14T13:17:21.1772543Z         no_of_packets,
2025-01-14T13:17:21.1772630Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1772703Z         iteration=0,
2025-01-14T13:17:21.1772780Z     ):
2025-01-14T13:17:21.1772903Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1773005Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1773074Z         else:
2025-01-14T13:17:21.1773161Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1773367Z     
2025-01-14T13:17:21.1773501Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1773604Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1773679Z         )
2025-01-14T13:17:21.1773754Z     
2025-01-14T13:17:21.1773890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1774007Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1774160Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1774235Z         else:
2025-01-14T13:17:21.1774317Z             continuum_state = None
2025-01-14T13:17:21.1774424Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1774532Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1774631Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1774736Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1774846Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1774945Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1775035Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1775115Z         ).to_numba(
2025-01-14T13:17:21.1775193Z             macro_atom_state,
2025-01-14T13:17:21.1775284Z             self.line_interaction_type,
2025-01-14T13:17:21.1775350Z         )
2025-01-14T13:17:21.1775457Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1775723Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1775795Z         ]
2025-01-14T13:17:21.1776096Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1776101Z 
2025-01-14T13:17:21.1776252Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1776518Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-14T13:17:21.1776532Z 
2025-01-14T13:17:21.1777192Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1777552Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1777557Z 
2025-01-14T13:17:21.1777644Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1777785Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1777851Z         """
2025-01-14T13:17:21.1777998Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1778064Z     
2025-01-14T13:17:21.1778141Z         Parameters
2025-01-14T13:17:21.1778216Z         ----------
2025-01-14T13:17:21.1778362Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1778489Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1778602Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1778785Z             Atomic data.
2025-01-14T13:17:21.1778854Z     
2025-01-14T13:17:21.1778928Z         Returns
2025-01-14T13:17:21.1778998Z         -------
2025-01-14T13:17:21.1779107Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1779186Z             Simulation object.
2025-01-14T13:17:21.1779257Z         """
2025-01-14T13:17:21.1779404Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1779580Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1779693Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1779824Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1779961Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1780220Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1780356Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1780463Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1780562Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1780638Z >       sim = run_tardis(
2025-01-14T13:17:21.1780723Z             config_verysimple,
2025-01-14T13:17:21.1780804Z             atom_data=atomic_data,
2025-01-14T13:17:21.1780898Z             show_convergence_plots=False,
2025-01-14T13:17:21.1780976Z             log_level="CRITICAl",
2025-01-14T13:17:21.1781050Z         )
2025-01-14T13:17:21.1781055Z 
2025-01-14T13:17:21.1781190Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1781305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1781393Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1781484Z     simulation.run_convergence()
2025-01-14T13:17:21.1781825Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1782051Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1782221Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1782401Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1782518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1782522Z 
2025-01-14T13:17:21.1782787Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1782992Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1783213Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1783490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1783656Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1783789Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1783794Z 
2025-01-14T13:17:21.1783891Z     def initialize_transport_state(
2025-01-14T13:17:21.1783961Z         self,
2025-01-14T13:17:21.1784046Z         simulation_state,
2025-01-14T13:17:21.1784122Z         opacity_state,
2025-01-14T13:17:21.1784210Z         macro_atom_state,
2025-01-14T13:17:21.1784280Z         plasma,
2025-01-14T13:17:21.1784361Z         no_of_packets,
2025-01-14T13:17:21.1784447Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1784527Z         iteration=0,
2025-01-14T13:17:21.1784598Z     ):
2025-01-14T13:17:21.1784727Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1784830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1784900Z         else:
2025-01-14T13:17:21.1784986Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1785053Z     
2025-01-14T13:17:21.1785196Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1785291Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1785367Z         )
2025-01-14T13:17:21.1785582Z     
2025-01-14T13:17:21.1785718Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1785832Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1785991Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1786061Z         else:
2025-01-14T13:17:21.1786148Z             continuum_state = None
2025-01-14T13:17:21.1786247Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1786361Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1786452Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1786562Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1786666Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1786876Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1786976Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1787046Z         ).to_numba(
2025-01-14T13:17:21.1787134Z             macro_atom_state,
2025-01-14T13:17:21.1787221Z             self.line_interaction_type,
2025-01-14T13:17:21.1787295Z         )
2025-01-14T13:17:21.1787394Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1787668Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1787735Z         ]
2025-01-14T13:17:21.1788041Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1788046Z 
2025-01-14T13:17:21.1788197Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1788455Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-14T13:17:21.1788464Z 
2025-01-14T13:17:21.1789133Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1789482Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1789487Z 
2025-01-14T13:17:21.1789580Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1789718Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1789791Z         """
2025-01-14T13:17:21.1789942Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1790008Z     
2025-01-14T13:17:21.1790087Z         Parameters
2025-01-14T13:17:21.1790160Z         ----------
2025-01-14T13:17:21.1790308Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1790434Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1790555Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1790630Z             Atomic data.
2025-01-14T13:17:21.1790707Z     
2025-01-14T13:17:21.1790776Z         Returns
2025-01-14T13:17:21.1790853Z         -------
2025-01-14T13:17:21.1790956Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1791041Z             Simulation object.
2025-01-14T13:17:21.1791109Z         """
2025-01-14T13:17:21.1791265Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1791435Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1791704Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1791907Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1792044Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1792233Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1792366Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1792470Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1792694Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1792778Z >       sim = run_tardis(
2025-01-14T13:17:21.1792858Z             config_verysimple,
2025-01-14T13:17:21.1792944Z             atom_data=atomic_data,
2025-01-14T13:17:21.1793033Z             show_convergence_plots=False,
2025-01-14T13:17:21.1793119Z             log_level="CRITICAl",
2025-01-14T13:17:21.1793191Z         )
2025-01-14T13:17:21.1793202Z 
2025-01-14T13:17:21.1793337Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1793452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1793535Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1793626Z     simulation.run_convergence()
2025-01-14T13:17:21.1793851Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1793994Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1794090Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1794259Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1794366Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1794370Z 
2025-01-14T13:17:21.1794639Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1794840Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1795066Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1795349Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1795509Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1795658Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1795663Z 
2025-01-14T13:17:21.1795751Z     def initialize_transport_state(
2025-01-14T13:17:21.1795832Z         self,
2025-01-14T13:17:21.1795910Z         simulation_state,
2025-01-14T13:17:21.1795991Z         opacity_state,
2025-01-14T13:17:21.1796069Z         macro_atom_state,
2025-01-14T13:17:21.1796148Z         plasma,
2025-01-14T13:17:21.1796224Z         no_of_packets,
2025-01-14T13:17:21.1796316Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1796389Z         iteration=0,
2025-01-14T13:17:21.1796464Z     ):
2025-01-14T13:17:21.1796595Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1796691Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1796769Z         else:
2025-01-14T13:17:21.1796848Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1796921Z     
2025-01-14T13:17:21.1797052Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1797157Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1797224Z         )
2025-01-14T13:17:21.1797297Z     
2025-01-14T13:17:21.1797421Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1797542Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1797691Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1797765Z         else:
2025-01-14T13:17:21.1797846Z             continuum_state = None
2025-01-14T13:17:21.1797951Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1798064Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1798153Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1798261Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1798358Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1798453Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1798548Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1798624Z         ).to_numba(
2025-01-14T13:17:21.1798702Z             macro_atom_state,
2025-01-14T13:17:21.1798880Z             self.line_interaction_type,
2025-01-14T13:17:21.1798948Z         )
2025-01-14T13:17:21.1799055Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1799324Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1799398Z         ]
2025-01-14T13:17:21.1799697Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1799707Z 
2025-01-14T13:17:21.1799851Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1800115Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-14T13:17:21.1800120Z 
2025-01-14T13:17:21.1800782Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1801239Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1801244Z 
2025-01-14T13:17:21.1801331Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1801472Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1801544Z         """
2025-01-14T13:17:21.1801791Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1801863Z     
2025-01-14T13:17:21.1801938Z         Parameters
2025-01-14T13:17:21.1802017Z         ----------
2025-01-14T13:17:21.1802159Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1802287Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1802406Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1802485Z             Atomic data.
2025-01-14T13:17:21.1802551Z     
2025-01-14T13:17:21.1802631Z         Returns
2025-01-14T13:17:21.1802701Z         -------
2025-01-14T13:17:21.1802811Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1802890Z             Simulation object.
2025-01-14T13:17:21.1802963Z         """
2025-01-14T13:17:21.1803111Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1803286Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1803405Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1803528Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1803666Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1803838Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1803979Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1804079Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1804179Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1804258Z >       sim = run_tardis(
2025-01-14T13:17:21.1804344Z             config_verysimple,
2025-01-14T13:17:21.1804425Z             atom_data=atomic_data,
2025-01-14T13:17:21.1804519Z             show_convergence_plots=False,
2025-01-14T13:17:21.1804599Z             log_level="CRITICAl",
2025-01-14T13:17:21.1804672Z         )
2025-01-14T13:17:21.1804677Z 
2025-01-14T13:17:21.1804817Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1804925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1805022Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1805106Z     simulation.run_convergence()
2025-01-14T13:17:21.1805226Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1805369Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1805469Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1805620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1805857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1805862Z 
2025-01-14T13:17:21.1806126Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1806330Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1806556Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1806828Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1806988Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1807121Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1807238Z 
2025-01-14T13:17:21.1807332Z     def initialize_transport_state(
2025-01-14T13:17:21.1807399Z         self,
2025-01-14T13:17:21.1807487Z         simulation_state,
2025-01-14T13:17:21.1807561Z         opacity_state,
2025-01-14T13:17:21.1807641Z         macro_atom_state,
2025-01-14T13:17:21.1807709Z         plasma,
2025-01-14T13:17:21.1807787Z         no_of_packets,
2025-01-14T13:17:21.1807874Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1807946Z         iteration=0,
2025-01-14T13:17:21.1808017Z     ):
2025-01-14T13:17:21.1808139Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1808237Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1808305Z         else:
2025-01-14T13:17:21.1808388Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1808454Z     
2025-01-14T13:17:21.1808589Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1808681Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1808759Z         )
2025-01-14T13:17:21.1808825Z     
2025-01-14T13:17:21.1808954Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1809071Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1809226Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1809295Z         else:
2025-01-14T13:17:21.1809379Z             continuum_state = None
2025-01-14T13:17:21.1809482Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1809589Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1809683Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1809788Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1809890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1809982Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1810077Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1810152Z         ).to_numba(
2025-01-14T13:17:21.1810237Z             macro_atom_state,
2025-01-14T13:17:21.1810323Z             self.line_interaction_type,
2025-01-14T13:17:21.1810398Z         )
2025-01-14T13:17:21.1810497Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1810769Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1810842Z         ]
2025-01-14T13:17:21.1811139Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1811143Z 
2025-01-14T13:17:21.1811292Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1811643Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-14T13:17:21.1811648Z 
2025-01-14T13:17:21.1812313Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1812780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1812791Z 
2025-01-14T13:17:21.1812877Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1813017Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1813089Z         """
2025-01-14T13:17:21.1813234Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1813300Z     
2025-01-14T13:17:21.1813376Z         Parameters
2025-01-14T13:17:21.1813448Z         ----------
2025-01-14T13:17:21.1813592Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1813712Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1813830Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1814013Z             Atomic data.
2025-01-14T13:17:21.1814084Z     
2025-01-14T13:17:21.1814151Z         Returns
2025-01-14T13:17:21.1814226Z         -------
2025-01-14T13:17:21.1814336Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1814418Z             Simulation object.
2025-01-14T13:17:21.1814491Z         """
2025-01-14T13:17:21.1814635Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1814805Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1814917Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1815044Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1815174Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1815349Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1815479Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1815586Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1815678Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1815763Z >       sim = run_tardis(
2025-01-14T13:17:21.1815842Z             config_verysimple,
2025-01-14T13:17:21.1815927Z             atom_data=atomic_data,
2025-01-14T13:17:21.1816021Z             show_convergence_plots=False,
2025-01-14T13:17:21.1816100Z             log_level="CRITICAl",
2025-01-14T13:17:21.1816175Z         )
2025-01-14T13:17:21.1816179Z 
2025-01-14T13:17:21.1816315Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1816428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1816509Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1816598Z     simulation.run_convergence()
2025-01-14T13:17:21.1816712Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1816855Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1816950Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1817105Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1817214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1817223Z 
2025-01-14T13:17:21.1817487Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1817691Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1817910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1818185Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1818340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1818481Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1818490Z 
2025-01-14T13:17:21.1818577Z     def initialize_transport_state(
2025-01-14T13:17:21.1818649Z         self,
2025-01-14T13:17:21.1818725Z         simulation_state,
2025-01-14T13:17:21.1818808Z         opacity_state,
2025-01-14T13:17:21.1818976Z         macro_atom_state,
2025-01-14T13:17:21.1819046Z         plasma,
2025-01-14T13:17:21.1819122Z         no_of_packets,
2025-01-14T13:17:21.1819203Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1819279Z         iteration=0,
2025-01-14T13:17:21.1819344Z     ):
2025-01-14T13:17:21.1819471Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1819565Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1819637Z         else:
2025-01-14T13:17:21.1819713Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1819783Z     
2025-01-14T13:17:21.1819915Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1820013Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1820160Z         )
2025-01-14T13:17:21.1820230Z     
2025-01-14T13:17:21.1820356Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1820471Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1820632Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1820699Z         else:
2025-01-14T13:17:21.1820786Z             continuum_state = None
2025-01-14T13:17:21.1820883Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1820995Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1821087Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1821198Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1821296Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1821394Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1821486Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1821655Z         ).to_numba(
2025-01-14T13:17:21.1821743Z             macro_atom_state,
2025-01-14T13:17:21.1821835Z             self.line_interaction_type,
2025-01-14T13:17:21.1821902Z         )
2025-01-14T13:17:21.1822006Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1822289Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1822357Z         ]
2025-01-14T13:17:21.1822660Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1822664Z 
2025-01-14T13:17:21.1822812Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1823078Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-14T13:17:21.1823083Z 
2025-01-14T13:17:21.1823745Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1824102Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1824110Z 
2025-01-14T13:17:21.1824203Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1824343Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1824414Z         """
2025-01-14T13:17:21.1824556Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1824628Z     
2025-01-14T13:17:21.1824700Z         Parameters
2025-01-14T13:17:21.1824778Z         ----------
2025-01-14T13:17:21.1824920Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1825056Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1825171Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1825255Z             Atomic data.
2025-01-14T13:17:21.1825322Z     
2025-01-14T13:17:21.1825394Z         Returns
2025-01-14T13:17:21.1825472Z         -------
2025-01-14T13:17:21.1825576Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1825800Z             Simulation object.
2025-01-14T13:17:21.1825869Z         """
2025-01-14T13:17:21.1826021Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1826190Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1826310Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1826433Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1826570Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1826745Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1826883Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1827109Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1827207Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1827288Z >       sim = run_tardis(
2025-01-14T13:17:21.1827367Z             config_verysimple,
2025-01-14T13:17:21.1827460Z             atom_data=atomic_data,
2025-01-14T13:17:21.1827549Z             show_convergence_plots=False,
2025-01-14T13:17:21.1827633Z             log_level="CRITICAl",
2025-01-14T13:17:21.1827700Z         )
2025-01-14T13:17:21.1827704Z 
2025-01-14T13:17:21.1827847Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1827958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1828047Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1828133Z     simulation.run_convergence()
2025-01-14T13:17:21.1828251Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1828389Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1828490Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1828639Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1828753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1828762Z 
2025-01-14T13:17:21.1829028Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1829228Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1829455Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1829729Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1829890Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1830025Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1830030Z 
2025-01-14T13:17:21.1830122Z     def initialize_transport_state(
2025-01-14T13:17:21.1830200Z         self,
2025-01-14T13:17:21.1830277Z         simulation_state,
2025-01-14T13:17:21.1830358Z         opacity_state,
2025-01-14T13:17:21.1830433Z         macro_atom_state,
2025-01-14T13:17:21.1830510Z         plasma,
2025-01-14T13:17:21.1830583Z         no_of_packets,
2025-01-14T13:17:21.1830668Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1830742Z         iteration=0,
2025-01-14T13:17:21.1830814Z     ):
2025-01-14T13:17:21.1830938Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1831037Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1831105Z         else:
2025-01-14T13:17:21.1831188Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1831255Z     
2025-01-14T13:17:21.1831392Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1831487Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1831704Z         )
2025-01-14T13:17:21.1831816Z     
2025-01-14T13:17:21.1831963Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1832081Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1832235Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1832434Z         else:
2025-01-14T13:17:21.1832519Z             continuum_state = None
2025-01-14T13:17:21.1832625Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1832732Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1832828Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1832934Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1833036Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1833127Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1833225Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1833294Z         ).to_numba(
2025-01-14T13:17:21.1833380Z             macro_atom_state,
2025-01-14T13:17:21.1833576Z             self.line_interaction_type,
2025-01-14T13:17:21.1833649Z         )
2025-01-14T13:17:21.1833756Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1834036Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1834108Z         ]
2025-01-14T13:17:21.1834406Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1834411Z 
2025-01-14T13:17:21.1834564Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1834826Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-14T13:17:21.1834831Z 
2025-01-14T13:17:21.1835495Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1835851Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1835861Z 
2025-01-14T13:17:21.1835948Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1836095Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1836163Z         """
2025-01-14T13:17:21.1836309Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1836378Z     
2025-01-14T13:17:21.1836455Z         Parameters
2025-01-14T13:17:21.1836526Z         ----------
2025-01-14T13:17:21.1836671Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1836792Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1836911Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1836991Z             Atomic data.
2025-01-14T13:17:21.1837061Z     
2025-01-14T13:17:21.1837135Z         Returns
2025-01-14T13:17:21.1837205Z         -------
2025-01-14T13:17:21.1837314Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1837392Z             Simulation object.
2025-01-14T13:17:21.1837470Z         """
2025-01-14T13:17:21.1837617Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1837789Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1837902Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1838027Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1838159Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1838341Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1838473Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1838577Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1838680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1838755Z >       sim = run_tardis(
2025-01-14T13:17:21.1838839Z             config_verysimple,
2025-01-14T13:17:21.1838920Z             atom_data=atomic_data,
2025-01-14T13:17:21.1839104Z             show_convergence_plots=False,
2025-01-14T13:17:21.1839183Z             log_level="CRITICAl",
2025-01-14T13:17:21.1839256Z         )
2025-01-14T13:17:21.1839260Z 
2025-01-14T13:17:21.1839397Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1839511Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1839594Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1839684Z     simulation.run_convergence()
2025-01-14T13:17:21.1839796Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1839942Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1840043Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1840284Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1840395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1840399Z 
2025-01-14T13:17:21.1840668Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1840874Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1841094Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1841373Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1841528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1841765Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1841770Z 
2025-01-14T13:17:21.1841862Z     def initialize_transport_state(
2025-01-14T13:17:21.1841931Z         self,
2025-01-14T13:17:21.1842018Z         simulation_state,
2025-01-14T13:17:21.1842095Z         opacity_state,
2025-01-14T13:17:21.1842176Z         macro_atom_state,
2025-01-14T13:17:21.1842245Z         plasma,
2025-01-14T13:17:21.1842327Z         no_of_packets,
2025-01-14T13:17:21.1842411Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1842488Z         iteration=0,
2025-01-14T13:17:21.1842554Z     ):
2025-01-14T13:17:21.1842682Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1842776Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1842850Z         else:
2025-01-14T13:17:21.1842928Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1842998Z     
2025-01-14T13:17:21.1843130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1843230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1843302Z         )
2025-01-14T13:17:21.1843369Z     
2025-01-14T13:17:21.1843501Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1843617Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1843778Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1843851Z         else:
2025-01-14T13:17:21.1843936Z             continuum_state = None
2025-01-14T13:17:21.1844035Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1844147Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1844239Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1844352Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1844450Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1844547Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1844637Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1844713Z         ).to_numba(
2025-01-14T13:17:21.1844795Z             macro_atom_state,
2025-01-14T13:17:21.1844881Z             self.line_interaction_type,
2025-01-14T13:17:21.1844957Z         )
2025-01-14T13:17:21.1845056Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1845330Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1845526Z         ]
2025-01-14T13:17:21.1845835Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1845840Z 
2025-01-14T13:17:21.1845986Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1846249Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-14T13:17:21.1846253Z 
2025-01-14T13:17:21.1846911Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1847371Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1847376Z 
2025-01-14T13:17:21.1847474Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1847611Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1847683Z         """
2025-01-14T13:17:21.1847825Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1847896Z     
2025-01-14T13:17:21.1847970Z         Parameters
2025-01-14T13:17:21.1853457Z         ----------
2025-01-14T13:17:21.1853662Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1853811Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1853934Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1854016Z             Atomic data.
2025-01-14T13:17:21.1854090Z     
2025-01-14T13:17:21.1854158Z         Returns
2025-01-14T13:17:21.1854252Z         -------
2025-01-14T13:17:21.1854363Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1854450Z             Simulation object.
2025-01-14T13:17:21.1854515Z         """
2025-01-14T13:17:21.1854683Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1854865Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1854987Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1855113Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1855252Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1855426Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1855566Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1855671Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1855767Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1855854Z >       sim = run_tardis(
2025-01-14T13:17:21.1855934Z             config_verysimple,
2025-01-14T13:17:21.1856019Z             atom_data=atomic_data,
2025-01-14T13:17:21.1856109Z             show_convergence_plots=False,
2025-01-14T13:17:21.1856204Z             log_level="CRITICAl",
2025-01-14T13:17:21.1856270Z         )
2025-01-14T13:17:21.1856275Z 
2025-01-14T13:17:21.1856425Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1856537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1856628Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1856714Z     simulation.run_convergence()
2025-01-14T13:17:21.1856836Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1856979Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1857076Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1857233Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1857346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1857351Z 
2025-01-14T13:17:21.1857622Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1858030Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1858258Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1858532Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1858694Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1858829Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1858838Z 
2025-01-14T13:17:21.1858926Z     def initialize_transport_state(
2025-01-14T13:17:21.1858997Z         self,
2025-01-14T13:17:21.1859074Z         simulation_state,
2025-01-14T13:17:21.1859261Z         opacity_state,
2025-01-14T13:17:21.1859335Z         macro_atom_state,
2025-01-14T13:17:21.1859411Z         plasma,
2025-01-14T13:17:21.1859482Z         no_of_packets,
2025-01-14T13:17:21.1859572Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1859650Z         iteration=0,
2025-01-14T13:17:21.1859721Z     ):
2025-01-14T13:17:21.1859848Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1859948Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1860017Z         else:
2025-01-14T13:17:21.1860098Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1860162Z     
2025-01-14T13:17:21.1860305Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1860408Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1860473Z         )
2025-01-14T13:17:21.1860542Z     
2025-01-14T13:17:21.1860675Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1860794Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1860953Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1861027Z         else:
2025-01-14T13:17:21.1861109Z             continuum_state = None
2025-01-14T13:17:21.1861219Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1861327Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1861423Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1861526Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1861776Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1861872Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1861970Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1862044Z         ).to_numba(
2025-01-14T13:17:21.1862121Z             macro_atom_state,
2025-01-14T13:17:21.1862211Z             self.line_interaction_type,
2025-01-14T13:17:21.1862277Z         )
2025-01-14T13:17:21.1862387Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1862660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1862735Z         ]
2025-01-14T13:17:21.1863037Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1863043Z 
2025-01-14T13:17:21.1863196Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1863457Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-14T13:17:21.1863462Z 
2025-01-14T13:17:21.1864136Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1864490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1864499Z 
2025-01-14T13:17:21.1864590Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1864872Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1864939Z         """
2025-01-14T13:17:21.1865092Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1865156Z     
2025-01-14T13:17:21.1865232Z         Parameters
2025-01-14T13:17:21.1865302Z         ----------
2025-01-14T13:17:21.1865450Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1865578Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1865692Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1865770Z             Atomic data.
2025-01-14T13:17:21.1865833Z     
2025-01-14T13:17:21.1865908Z         Returns
2025-01-14T13:17:21.1865976Z         -------
2025-01-14T13:17:21.1866199Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1866276Z             Simulation object.
2025-01-14T13:17:21.1866345Z         """
2025-01-14T13:17:21.1866495Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1866675Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1866787Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1866915Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1867044Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1867221Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1867361Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1867460Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1867556Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1867628Z >       sim = run_tardis(
2025-01-14T13:17:21.1867715Z             config_verysimple,
2025-01-14T13:17:21.1867796Z             atom_data=atomic_data,
2025-01-14T13:17:21.1867889Z             show_convergence_plots=False,
2025-01-14T13:17:21.1867968Z             log_level="CRITICAl",
2025-01-14T13:17:21.1868043Z         )
2025-01-14T13:17:21.1868048Z 
2025-01-14T13:17:21.1868184Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1868302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1868386Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1868477Z     simulation.run_convergence()
2025-01-14T13:17:21.1868597Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1868739Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1868839Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1868993Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1869106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1869115Z 
2025-01-14T13:17:21.1869381Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1869593Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1869811Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1870093Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1870259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1870396Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1870401Z 
2025-01-14T13:17:21.1870491Z     def initialize_transport_state(
2025-01-14T13:17:21.1870558Z         self,
2025-01-14T13:17:21.1870642Z         simulation_state,
2025-01-14T13:17:21.1870715Z         opacity_state,
2025-01-14T13:17:21.1870796Z         macro_atom_state,
2025-01-14T13:17:21.1870865Z         plasma,
2025-01-14T13:17:21.1870943Z         no_of_packets,
2025-01-14T13:17:21.1871023Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1871196Z         iteration=0,
2025-01-14T13:17:21.1871261Z     ):
2025-01-14T13:17:21.1871393Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1871488Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1871743Z         else:
2025-01-14T13:17:21.1871877Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1871959Z     
2025-01-14T13:17:21.1872129Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1872225Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1872296Z         )
2025-01-14T13:17:21.1872360Z     
2025-01-14T13:17:21.1872494Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1872609Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1872900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1872968Z         else:
2025-01-14T13:17:21.1873054Z             continuum_state = None
2025-01-14T13:17:21.1873153Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1873271Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1873363Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1873475Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1873573Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1873671Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1873765Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1873834Z         ).to_numba(
2025-01-14T13:17:21.1873916Z             macro_atom_state,
2025-01-14T13:17:21.1874002Z             self.line_interaction_type,
2025-01-14T13:17:21.1874075Z         )
2025-01-14T13:17:21.1874176Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1874458Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1874523Z         ]
2025-01-14T13:17:21.1874830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1874840Z 
2025-01-14T13:17:21.1874988Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1875252Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-14T13:17:21.1875256Z 
2025-01-14T13:17:21.1875927Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1876275Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1876284Z 
2025-01-14T13:17:21.1876375Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1876513Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1876589Z         """
2025-01-14T13:17:21.1876731Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1876803Z     
2025-01-14T13:17:21.1876873Z         Parameters
2025-01-14T13:17:21.1876950Z         ----------
2025-01-14T13:17:21.1877096Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1877218Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1877335Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1877408Z             Atomic data.
2025-01-14T13:17:21.1877477Z     
2025-01-14T13:17:21.1877543Z         Returns
2025-01-14T13:17:21.1877616Z         -------
2025-01-14T13:17:21.1877719Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1877804Z             Simulation object.
2025-01-14T13:17:21.1877869Z         """
2025-01-14T13:17:21.1878021Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1878190Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1878426Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1878548Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1878684Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1878861Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1878993Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1879095Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1879189Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1879267Z >       sim = run_tardis(
2025-01-14T13:17:21.1879346Z             config_verysimple,
2025-01-14T13:17:21.1879533Z             atom_data=atomic_data,
2025-01-14T13:17:21.1879622Z             show_convergence_plots=False,
2025-01-14T13:17:21.1879705Z             log_level="CRITICAl",
2025-01-14T13:17:21.1879770Z         )
2025-01-14T13:17:21.1879780Z 
2025-01-14T13:17:21.1879920Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1880030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1880123Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1880213Z     simulation.run_convergence()
2025-01-14T13:17:21.1880326Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1880469Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1880561Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1880715Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1880820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1880830Z 
2025-01-14T13:17:21.1881098Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1881297Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1881522Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1881913Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1882070Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1882206Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1882211Z 
2025-01-14T13:17:21.1882295Z     def initialize_transport_state(
2025-01-14T13:17:21.1882365Z         self,
2025-01-14T13:17:21.1882440Z         simulation_state,
2025-01-14T13:17:21.1882518Z         opacity_state,
2025-01-14T13:17:21.1882592Z         macro_atom_state,
2025-01-14T13:17:21.1882665Z         plasma,
2025-01-14T13:17:21.1882743Z         no_of_packets,
2025-01-14T13:17:21.1882828Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1882898Z         iteration=0,
2025-01-14T13:17:21.1882968Z     ):
2025-01-14T13:17:21.1883098Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1883198Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1883270Z         else:
2025-01-14T13:17:21.1883345Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1883413Z     
2025-01-14T13:17:21.1883547Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1883650Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1883719Z         )
2025-01-14T13:17:21.1883788Z     
2025-01-14T13:17:21.1883919Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1884037Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1884192Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1884269Z         else:
2025-01-14T13:17:21.1884353Z             continuum_state = None
2025-01-14T13:17:21.1884461Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1884694Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1884790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1884902Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1885000Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1885097Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1885188Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1885263Z         ).to_numba(
2025-01-14T13:17:21.1885341Z             macro_atom_state,
2025-01-14T13:17:21.1885434Z             self.line_interaction_type,
2025-01-14T13:17:21.1885499Z         )
2025-01-14T13:17:21.1885605Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1885877Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1886064Z         ]
2025-01-14T13:17:21.1886368Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1886380Z 
2025-01-14T13:17:21.1886532Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1886794Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-14T13:17:21.1886799Z 
2025-01-14T13:17:21.1887458Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1887809Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1887814Z 
2025-01-14T13:17:21.1887907Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1888052Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1888118Z         """
2025-01-14T13:17:21.1888272Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1888341Z     
2025-01-14T13:17:21.1888412Z         Parameters
2025-01-14T13:17:21.1888487Z         ----------
2025-01-14T13:17:21.1888628Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1888754Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1888867Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1888943Z             Atomic data.
2025-01-14T13:17:21.1889009Z     
2025-01-14T13:17:21.1889080Z         Returns
2025-01-14T13:17:21.1889148Z         -------
2025-01-14T13:17:21.1889257Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1889334Z             Simulation object.
2025-01-14T13:17:21.1889410Z         """
2025-01-14T13:17:21.1889556Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1889731Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1889856Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1889977Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1890113Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1890284Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1890421Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1890518Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1890618Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1890691Z >       sim = run_tardis(
2025-01-14T13:17:21.1890773Z             config_verysimple,
2025-01-14T13:17:21.1890857Z             atom_data=atomic_data,
2025-01-14T13:17:21.1890957Z             show_convergence_plots=False,
2025-01-14T13:17:21.1891036Z             log_level="CRITICAl",
2025-01-14T13:17:21.1891106Z         )
2025-01-14T13:17:21.1891110Z 
2025-01-14T13:17:21.1891341Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1891453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1891541Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1891826Z     simulation.run_convergence()
2025-01-14T13:17:21.1892025Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1892173Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1892270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1892421Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1892533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1892537Z 
2025-01-14T13:17:21.1892799Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1893163Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1893397Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1893669Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1893827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1893961Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1893965Z 
2025-01-14T13:17:21.1894056Z     def initialize_transport_state(
2025-01-14T13:17:21.1894121Z         self,
2025-01-14T13:17:21.1894202Z         simulation_state,
2025-01-14T13:17:21.1894276Z         opacity_state,
2025-01-14T13:17:21.1894358Z         macro_atom_state,
2025-01-14T13:17:21.1894426Z         plasma,
2025-01-14T13:17:21.1894501Z         no_of_packets,
2025-01-14T13:17:21.1894587Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1894663Z         iteration=0,
2025-01-14T13:17:21.1894736Z     ):
2025-01-14T13:17:21.1894858Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1894965Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1895032Z         else:
2025-01-14T13:17:21.1895112Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1895175Z     
2025-01-14T13:17:21.1895312Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1895406Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1895475Z         )
2025-01-14T13:17:21.1895542Z     
2025-01-14T13:17:21.1895669Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1895795Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1895951Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1896017Z         else:
2025-01-14T13:17:21.1896106Z             continuum_state = None
2025-01-14T13:17:21.1896206Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1896314Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1896412Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1896514Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1896615Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1896705Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1896799Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1896866Z         ).to_numba(
2025-01-14T13:17:21.1896951Z             macro_atom_state,
2025-01-14T13:17:21.1897036Z             self.line_interaction_type,
2025-01-14T13:17:21.1897112Z         )
2025-01-14T13:17:21.1897210Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1897479Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1897547Z         ]
2025-01-14T13:17:21.1897850Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1897981Z 
2025-01-14T13:17:21.1898135Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1898399Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-14T13:17:21.1898404Z 
2025-01-14T13:17:21.1899069Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1899414Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1899418Z 
2025-01-14T13:17:21.1899508Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1899796Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1899861Z         """
2025-01-14T13:17:21.1900007Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1900078Z     
2025-01-14T13:17:21.1900154Z         Parameters
2025-01-14T13:17:21.1900223Z         ----------
2025-01-14T13:17:21.1900367Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1900488Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1900603Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1900679Z             Atomic data.
2025-01-14T13:17:21.1900748Z     
2025-01-14T13:17:21.1900814Z         Returns
2025-01-14T13:17:21.1900888Z         -------
2025-01-14T13:17:21.1900990Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1901072Z             Simulation object.
2025-01-14T13:17:21.1901137Z         """
2025-01-14T13:17:21.1901287Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1901464Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1901721Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1901858Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1901986Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1902163Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1902294Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1902396Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1902488Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1902566Z >       sim = run_tardis(
2025-01-14T13:17:21.1902645Z             config_verysimple,
2025-01-14T13:17:21.1902730Z             atom_data=atomic_data,
2025-01-14T13:17:21.1902816Z             show_convergence_plots=False,
2025-01-14T13:17:21.1902903Z             log_level="CRITICAl",
2025-01-14T13:17:21.1902973Z         )
2025-01-14T13:17:21.1902978Z 
2025-01-14T13:17:21.1903112Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1903231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1903313Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1903403Z     simulation.run_convergence()
2025-01-14T13:17:21.1903516Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1903657Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1903748Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1903904Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1904008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1904019Z 
2025-01-14T13:17:21.1904279Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1904487Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1904703Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1905102Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1905257Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1905395Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1905400Z 
2025-01-14T13:17:21.1905483Z     def initialize_transport_state(
2025-01-14T13:17:21.1905555Z         self,
2025-01-14T13:17:21.1905630Z         simulation_state,
2025-01-14T13:17:21.1905708Z         opacity_state,
2025-01-14T13:17:21.1905781Z         macro_atom_state,
2025-01-14T13:17:21.1905854Z         plasma,
2025-01-14T13:17:21.1905931Z         no_of_packets,
2025-01-14T13:17:21.1906010Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1906218Z         iteration=0,
2025-01-14T13:17:21.1906282Z     ):
2025-01-14T13:17:21.1906409Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1906502Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1906581Z         else:
2025-01-14T13:17:21.1906655Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1906724Z     
2025-01-14T13:17:21.1906854Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1906952Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1907017Z         )
2025-01-14T13:17:21.1907086Z     
2025-01-14T13:17:21.1907211Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1907328Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1907477Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1907548Z         else:
2025-01-14T13:17:21.1907633Z             continuum_state = None
2025-01-14T13:17:21.1907738Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1907847Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1907934Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1908046Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1908139Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1908234Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1908323Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1908396Z         ).to_numba(
2025-01-14T13:17:21.1908472Z             macro_atom_state,
2025-01-14T13:17:21.1908562Z             self.line_interaction_type,
2025-01-14T13:17:21.1908626Z         )
2025-01-14T13:17:21.1908733Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1909001Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1909071Z         ]
2025-01-14T13:17:21.1909377Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1909382Z 
2025-01-14T13:17:21.1909528Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1909796Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-14T13:17:21.1909801Z 
2025-01-14T13:17:21.1910459Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1910808Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1910813Z 
2025-01-14T13:17:21.1910901Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1911036Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1911109Z         """
2025-01-14T13:17:21.1911251Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1911322Z     
2025-01-14T13:17:21.1911485Z         Parameters
2025-01-14T13:17:21.1911730Z         ----------
2025-01-14T13:17:21.1911939Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1912068Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1912180Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1912260Z             Atomic data.
2025-01-14T13:17:21.1912325Z     
2025-01-14T13:17:21.1912397Z         Returns
2025-01-14T13:17:21.1912465Z         -------
2025-01-14T13:17:21.1912573Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1912655Z             Simulation object.
2025-01-14T13:17:21.1912723Z         """
2025-01-14T13:17:21.1912877Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1913200Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1913317Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1913441Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1913586Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1913758Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1913891Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1913988Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1914086Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1914159Z >       sim = run_tardis(
2025-01-14T13:17:21.1914242Z             config_verysimple,
2025-01-14T13:17:21.1914325Z             atom_data=atomic_data,
2025-01-14T13:17:21.1914413Z             show_convergence_plots=False,
2025-01-14T13:17:21.1914498Z             log_level="CRITICAl",
2025-01-14T13:17:21.1914568Z         )
2025-01-14T13:17:21.1914573Z 
2025-01-14T13:17:21.1914714Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1914823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1914916Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1914999Z     simulation.run_convergence()
2025-01-14T13:17:21.1915114Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1915249Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1915346Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1915495Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1915602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1915606Z 
2025-01-14T13:17:21.1915871Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1916069Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1916296Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1916565Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1916729Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1916861Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1916865Z 
2025-01-14T13:17:21.1916957Z     def initialize_transport_state(
2025-01-14T13:17:21.1917025Z         self,
2025-01-14T13:17:21.1917107Z         simulation_state,
2025-01-14T13:17:21.1917186Z         opacity_state,
2025-01-14T13:17:21.1917259Z         macro_atom_state,
2025-01-14T13:17:21.1917334Z         plasma,
2025-01-14T13:17:21.1917404Z         no_of_packets,
2025-01-14T13:17:21.1917489Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1917559Z         iteration=0,
2025-01-14T13:17:21.1917633Z     ):
2025-01-14T13:17:21.1917754Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1917853Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1917920Z         else:
2025-01-14T13:17:21.1918144Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1918210Z     
2025-01-14T13:17:21.1918348Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1918441Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1918513Z         )
2025-01-14T13:17:21.1918578Z     
2025-01-14T13:17:21.1918709Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1918819Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1918973Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1919044Z         else:
2025-01-14T13:17:21.1919122Z             continuum_state = None
2025-01-14T13:17:21.1919223Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1919412Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1919507Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1919612Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1919722Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1919811Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1919904Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1919972Z         ).to_numba(
2025-01-14T13:17:21.1920052Z             macro_atom_state,
2025-01-14T13:17:21.1920140Z             self.line_interaction_type,
2025-01-14T13:17:21.1920209Z         )
2025-01-14T13:17:21.1920313Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1920580Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1920650Z         ]
2025-01-14T13:17:21.1920944Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1920953Z 
2025-01-14T13:17:21.1921103Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1921367Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-14T13:17:21.1921373Z 
2025-01-14T13:17:21.1922150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1922500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1922505Z 
2025-01-14T13:17:21.1922589Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1922726Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1922792Z         """
2025-01-14T13:17:21.1922945Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1923010Z     
2025-01-14T13:17:21.1923087Z         Parameters
2025-01-14T13:17:21.1923157Z         ----------
2025-01-14T13:17:21.1923304Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1923423Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1923538Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1923611Z             Atomic data.
2025-01-14T13:17:21.1923680Z     
2025-01-14T13:17:21.1923752Z         Returns
2025-01-14T13:17:21.1923821Z         -------
2025-01-14T13:17:21.1923925Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1924003Z             Simulation object.
2025-01-14T13:17:21.1924072Z         """
2025-01-14T13:17:21.1924218Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1924389Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1924503Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1924629Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1924899Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1925076Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1925206Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1925306Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1925403Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1925476Z >       sim = run_tardis(
2025-01-14T13:17:21.1925557Z             config_verysimple,
2025-01-14T13:17:21.1925634Z             atom_data=atomic_data,
2025-01-14T13:17:21.1925726Z             show_convergence_plots=False,
2025-01-14T13:17:21.1925805Z             log_level="CRITICAl",
2025-01-14T13:17:21.1925874Z         )
2025-01-14T13:17:21.1925878Z 
2025-01-14T13:17:21.1926123Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1926237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1926325Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1926413Z     simulation.run_convergence()
2025-01-14T13:17:21.1926524Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1926665Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1926755Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1926910Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1927021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1927026Z 
2025-01-14T13:17:21.1927284Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1927485Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1927706Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1927979Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1928139Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1928278Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1928282Z 
2025-01-14T13:17:21.1928372Z     def initialize_transport_state(
2025-01-14T13:17:21.1928439Z         self,
2025-01-14T13:17:21.1928519Z         simulation_state,
2025-01-14T13:17:21.1928592Z         opacity_state,
2025-01-14T13:17:21.1928669Z         macro_atom_state,
2025-01-14T13:17:21.1928736Z         plasma,
2025-01-14T13:17:21.1928812Z         no_of_packets,
2025-01-14T13:17:21.1928891Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1928968Z         iteration=0,
2025-01-14T13:17:21.1929034Z     ):
2025-01-14T13:17:21.1929158Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1929255Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1929327Z         else:
2025-01-14T13:17:21.1929401Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1929480Z     
2025-01-14T13:17:21.1929613Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1929711Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1929777Z         )
2025-01-14T13:17:21.1929847Z     
2025-01-14T13:17:21.1929974Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1930083Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1930236Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1930304Z         else:
2025-01-14T13:17:21.1930389Z             continuum_state = None
2025-01-14T13:17:21.1930486Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1930595Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1930690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1930796Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1930890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1931100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1931187Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1931262Z         ).to_numba(
2025-01-14T13:17:21.1931336Z             macro_atom_state,
2025-01-14T13:17:21.1931427Z             self.line_interaction_type,
2025-01-14T13:17:21.1931497Z         )
2025-01-14T13:17:21.1931707Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1931986Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1932051Z         ]
2025-01-14T13:17:21.1932354Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1932476Z 
2025-01-14T13:17:21.1932626Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1932896Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-14T13:17:21.1932908Z 
2025-01-14T13:17:21.1933567Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1933920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1933924Z 
2025-01-14T13:17:21.1934017Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1934160Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1934231Z         """
2025-01-14T13:17:21.1934379Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1934454Z     
2025-01-14T13:17:21.1934525Z         Parameters
2025-01-14T13:17:21.1934601Z         ----------
2025-01-14T13:17:21.1934743Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1934877Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1934996Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1935071Z             Atomic data.
2025-01-14T13:17:21.1935144Z     
2025-01-14T13:17:21.1935211Z         Returns
2025-01-14T13:17:21.1935287Z         -------
2025-01-14T13:17:21.1935390Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1935472Z             Simulation object.
2025-01-14T13:17:21.1935541Z         """
2025-01-14T13:17:21.1935695Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1935865Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1935989Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1936113Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1936252Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1936433Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1936576Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1936680Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1936773Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1936853Z >       sim = run_tardis(
2025-01-14T13:17:21.1936933Z             config_verysimple,
2025-01-14T13:17:21.1937021Z             atom_data=atomic_data,
2025-01-14T13:17:21.1937113Z             show_convergence_plots=False,
2025-01-14T13:17:21.1937200Z             log_level="CRITICAl",
2025-01-14T13:17:21.1937267Z         )
2025-01-14T13:17:21.1937271Z 
2025-01-14T13:17:21.1937414Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1937529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1937616Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1937842Z     simulation.run_convergence()
2025-01-14T13:17:21.1937961Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1938106Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1938212Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1938371Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1938477Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1938481Z 
2025-01-14T13:17:21.1938751Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1938952Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1939177Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1939531Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1939702Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1939840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1939845Z 
2025-01-14T13:17:21.1939932Z     def initialize_transport_state(
2025-01-14T13:17:21.1940006Z         self,
2025-01-14T13:17:21.1940083Z         simulation_state,
2025-01-14T13:17:21.1940165Z         opacity_state,
2025-01-14T13:17:21.1940239Z         macro_atom_state,
2025-01-14T13:17:21.1940318Z         plasma,
2025-01-14T13:17:21.1940391Z         no_of_packets,
2025-01-14T13:17:21.1940478Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1940552Z         iteration=0,
2025-01-14T13:17:21.1940630Z     ):
2025-01-14T13:17:21.1940752Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1940856Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1940927Z         else:
2025-01-14T13:17:21.1941008Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1941074Z     
2025-01-14T13:17:21.1941221Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1941320Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1941387Z         )
2025-01-14T13:17:21.1941456Z     
2025-01-14T13:17:21.1941699Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1941818Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1941974Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1942046Z         else:
2025-01-14T13:17:21.1942128Z             continuum_state = None
2025-01-14T13:17:21.1942232Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1942339Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1942434Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1942542Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1942645Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1942742Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1942838Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1942913Z         ).to_numba(
2025-01-14T13:17:21.1942991Z             macro_atom_state,
2025-01-14T13:17:21.1943084Z             self.line_interaction_type,
2025-01-14T13:17:21.1943149Z         )
2025-01-14T13:17:21.1943255Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1943520Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1943595Z         ]
2025-01-14T13:17:21.1943896Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1943902Z 
2025-01-14T13:17:21.1944056Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1944322Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-14T13:17:21.1944462Z 
2025-01-14T13:17:21.1945120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1945476Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1945481Z 
2025-01-14T13:17:21.1945568Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1945711Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1945779Z         """
2025-01-14T13:17:21.1945929Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1946104Z     
2025-01-14T13:17:21.1946183Z         Parameters
2025-01-14T13:17:21.1946256Z         ----------
2025-01-14T13:17:21.1946402Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1946533Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1946645Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1946725Z             Atomic data.
2025-01-14T13:17:21.1946794Z     
2025-01-14T13:17:21.1946868Z         Returns
2025-01-14T13:17:21.1946936Z         -------
2025-01-14T13:17:21.1947044Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1947121Z             Simulation object.
2025-01-14T13:17:21.1947195Z         """
2025-01-14T13:17:21.1947343Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1947519Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1947632Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1947766Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1947897Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1948078Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1948223Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1948323Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1948422Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1948498Z >       sim = run_tardis(
2025-01-14T13:17:21.1948581Z             config_verysimple,
2025-01-14T13:17:21.1948661Z             atom_data=atomic_data,
2025-01-14T13:17:21.1948756Z             show_convergence_plots=False,
2025-01-14T13:17:21.1948834Z             log_level="CRITICAl",
2025-01-14T13:17:21.1948908Z         )
2025-01-14T13:17:21.1948912Z 
2025-01-14T13:17:21.1949049Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1949166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1949255Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1949346Z     simulation.run_convergence()
2025-01-14T13:17:21.1949474Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1949612Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1949710Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1949867Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1949981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1949985Z 
2025-01-14T13:17:21.1950245Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1950455Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1950674Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1950955Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1951117Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1951350Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1951355Z 
2025-01-14T13:17:21.1951450Z     def initialize_transport_state(
2025-01-14T13:17:21.1951519Z         self,
2025-01-14T13:17:21.1951802Z         simulation_state,
2025-01-14T13:17:21.1951925Z         opacity_state,
2025-01-14T13:17:21.1952020Z         macro_atom_state,
2025-01-14T13:17:21.1952091Z         plasma,
2025-01-14T13:17:21.1952167Z         no_of_packets,
2025-01-14T13:17:21.1952246Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1952322Z         iteration=0,
2025-01-14T13:17:21.1952387Z     ):
2025-01-14T13:17:21.1952516Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1952610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1952811Z         else:
2025-01-14T13:17:21.1952895Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1952960Z     
2025-01-14T13:17:21.1953102Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1953202Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1953273Z         )
2025-01-14T13:17:21.1953337Z     
2025-01-14T13:17:21.1953470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1953579Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1953735Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1953805Z         else:
2025-01-14T13:17:21.1953890Z             continuum_state = None
2025-01-14T13:17:21.1953990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1954105Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1954197Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1954312Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1954413Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1954504Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1954608Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1954677Z         ).to_numba(
2025-01-14T13:17:21.1954759Z             macro_atom_state,
2025-01-14T13:17:21.1954846Z             self.line_interaction_type,
2025-01-14T13:17:21.1954920Z         )
2025-01-14T13:17:21.1955019Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1955296Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1955362Z         ]
2025-01-14T13:17:21.1955666Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1955671Z 
2025-01-14T13:17:21.1955816Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1956089Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-14T13:17:21.1956093Z 
2025-01-14T13:17:21.1956761Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1957111Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1957115Z 
2025-01-14T13:17:21.1957209Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1957345Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1957418Z         """
2025-01-14T13:17:21.1957558Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1957630Z     
2025-01-14T13:17:21.1957708Z         Parameters
2025-01-14T13:17:21.1957781Z         ----------
2025-01-14T13:17:21.1957932Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1958057Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1958324Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1958402Z             Atomic data.
2025-01-14T13:17:21.1958474Z     
2025-01-14T13:17:21.1958545Z         Returns
2025-01-14T13:17:21.1958621Z         -------
2025-01-14T13:17:21.1958724Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1958809Z             Simulation object.
2025-01-14T13:17:21.1958876Z         """
2025-01-14T13:17:21.1959031Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1959201Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1959321Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1959450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1959666Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1959846Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1959984Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1960096Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1960191Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1960277Z >       sim = run_tardis(
2025-01-14T13:17:21.1960355Z             config_verysimple,
2025-01-14T13:17:21.1960442Z             atom_data=atomic_data,
2025-01-14T13:17:21.1960532Z             show_convergence_plots=False,
2025-01-14T13:17:21.1960619Z             log_level="CRITICAl",
2025-01-14T13:17:21.1960687Z         )
2025-01-14T13:17:21.1960691Z 
2025-01-14T13:17:21.1960834Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1960953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1961044Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1961135Z     simulation.run_convergence()
2025-01-14T13:17:21.1961251Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1961399Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1961492Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1961772Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1961881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1961885Z 
2025-01-14T13:17:21.1962157Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1962356Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1962582Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1962862Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1963022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1963160Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1963168Z 
2025-01-14T13:17:21.1963254Z     def initialize_transport_state(
2025-01-14T13:17:21.1963327Z         self,
2025-01-14T13:17:21.1963403Z         simulation_state,
2025-01-14T13:17:21.1963484Z         opacity_state,
2025-01-14T13:17:21.1963559Z         macro_atom_state,
2025-01-14T13:17:21.1963633Z         plasma,
2025-01-14T13:17:21.1963705Z         no_of_packets,
2025-01-14T13:17:21.1963793Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1963863Z         iteration=0,
2025-01-14T13:17:21.1963935Z     ):
2025-01-14T13:17:21.1964060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1964160Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1964235Z         else:
2025-01-14T13:17:21.1964316Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1964385Z     
2025-01-14T13:17:21.1964516Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1964614Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1964805Z         )
2025-01-14T13:17:21.1964877Z     
2025-01-14T13:17:21.1965005Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1965120Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1965274Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1965346Z         else:
2025-01-14T13:17:21.1965426Z             continuum_state = None
2025-01-14T13:17:21.1965533Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1965639Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1965733Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1965845Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1966053Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1966148Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1966238Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1966319Z         ).to_numba(
2025-01-14T13:17:21.1966395Z             macro_atom_state,
2025-01-14T13:17:21.1966489Z             self.line_interaction_type,
2025-01-14T13:17:21.1966556Z         )
2025-01-14T13:17:21.1966662Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1966933Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1967006Z         ]
2025-01-14T13:17:21.1967303Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1967314Z 
2025-01-14T13:17:21.1967457Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1967689Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-14T13:17:21.1967699Z 
2025-01-14T13:17:21.1968360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1968718Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1968723Z 
2025-01-14T13:17:21.1968810Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1968955Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1969029Z         """
2025-01-14T13:17:21.1969173Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1969245Z     
2025-01-14T13:17:21.1969317Z         Parameters
2025-01-14T13:17:21.1969394Z         ----------
2025-01-14T13:17:21.1969536Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1969667Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1969781Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1969868Z             Atomic data.
2025-01-14T13:17:21.1969934Z     
2025-01-14T13:17:21.1970010Z         Returns
2025-01-14T13:17:21.1970080Z         -------
2025-01-14T13:17:21.1970190Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1970267Z             Simulation object.
2025-01-14T13:17:21.1970343Z         """
2025-01-14T13:17:21.1970492Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1970670Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1970791Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1970917Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1971059Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1971240Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1971380Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1971696Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1971805Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1971881Z >       sim = run_tardis(
2025-01-14T13:17:21.1971972Z             config_verysimple,
2025-01-14T13:17:21.1972093Z             atom_data=atomic_data,
2025-01-14T13:17:21.1972190Z             show_convergence_plots=False,
2025-01-14T13:17:21.1972272Z             log_level="CRITICAl",
2025-01-14T13:17:21.1972345Z         )
2025-01-14T13:17:21.1972350Z 
2025-01-14T13:17:21.1972495Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1972606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1972695Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1972907Z     simulation.run_convergence()
2025-01-14T13:17:21.1973025Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1973164Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1973268Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1973419Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1973529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1973533Z 
2025-01-14T13:17:21.1973796Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1974000Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1974225Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1974495Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1974661Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1974799Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1974803Z 
2025-01-14T13:17:21.1974899Z     def initialize_transport_state(
2025-01-14T13:17:21.1974966Z         self,
2025-01-14T13:17:21.1975048Z         simulation_state,
2025-01-14T13:17:21.1975124Z         opacity_state,
2025-01-14T13:17:21.1975204Z         macro_atom_state,
2025-01-14T13:17:21.1975272Z         plasma,
2025-01-14T13:17:21.1975352Z         no_of_packets,
2025-01-14T13:17:21.1975432Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1975511Z         iteration=0,
2025-01-14T13:17:21.1975584Z     ):
2025-01-14T13:17:21.1975714Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1975816Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1975884Z         else:
2025-01-14T13:17:21.1975968Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1976034Z     
2025-01-14T13:17:21.1976176Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1976273Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1976346Z         )
2025-01-14T13:17:21.1976422Z     
2025-01-14T13:17:21.1976557Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1976667Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1976826Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1976894Z         else:
2025-01-14T13:17:21.1976981Z             continuum_state = None
2025-01-14T13:17:21.1977084Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1977202Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1977297Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1977400Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1977503Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1977601Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1977697Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1977769Z         ).to_numba(
2025-01-14T13:17:21.1978005Z             macro_atom_state,
2025-01-14T13:17:21.1978092Z             self.line_interaction_type,
2025-01-14T13:17:21.1978165Z         )
2025-01-14T13:17:21.1978267Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1978547Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1978613Z         ]
2025-01-14T13:17:21.1978922Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1978926Z 
2025-01-14T13:17:21.1979077Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1979299Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-14T13:17:21.1979439Z 
2025-01-14T13:17:21.1980111Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1980464Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1980469Z 
2025-01-14T13:17:21.1980562Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1980706Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1980773Z         """
2025-01-14T13:17:21.1980923Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1980989Z     
2025-01-14T13:17:21.1981068Z         Parameters
2025-01-14T13:17:21.1981139Z         ----------
2025-01-14T13:17:21.1981288Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1981415Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1981545Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1981723Z             Atomic data.
2025-01-14T13:17:21.1981802Z     
2025-01-14T13:17:21.1981869Z         Returns
2025-01-14T13:17:21.1981943Z         -------
2025-01-14T13:17:21.1982045Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1982128Z             Simulation object.
2025-01-14T13:17:21.1982193Z         """
2025-01-14T13:17:21.1982344Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1982517Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1982630Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1982756Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1982887Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1983064Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1983199Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1983301Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1983397Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1983475Z >       sim = run_tardis(
2025-01-14T13:17:21.1983552Z             config_verysimple,
2025-01-14T13:17:21.1983636Z             atom_data=atomic_data,
2025-01-14T13:17:21.1983724Z             show_convergence_plots=False,
2025-01-14T13:17:21.1983807Z             log_level="CRITICAl",
2025-01-14T13:17:21.1983876Z         )
2025-01-14T13:17:21.1983880Z 
2025-01-14T13:17:21.1984013Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1984127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1984209Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1984303Z     simulation.run_convergence()
2025-01-14T13:17:21.1984417Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1984561Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1984652Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1984934Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1985040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1985045Z 
2025-01-14T13:17:21.1985311Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1985515Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1985735Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1986010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1986168Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1986422Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1986426Z 
2025-01-14T13:17:21.1986512Z     def initialize_transport_state(
2025-01-14T13:17:21.1986589Z         self,
2025-01-14T13:17:21.1986666Z         simulation_state,
2025-01-14T13:17:21.1986746Z         opacity_state,
2025-01-14T13:17:21.1986819Z         macro_atom_state,
2025-01-14T13:17:21.1986892Z         plasma,
2025-01-14T13:17:21.1986970Z         no_of_packets,
2025-01-14T13:17:21.1987050Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1987125Z         iteration=0,
2025-01-14T13:17:21.1987191Z     ):
2025-01-14T13:17:21.1987319Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1987413Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1987484Z         else:
2025-01-14T13:17:21.1987561Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1987630Z     
2025-01-14T13:17:21.1987760Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1987863Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1987928Z         )
2025-01-14T13:17:21.1987998Z     
2025-01-14T13:17:21.1988122Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1988242Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1988390Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1988462Z         else:
2025-01-14T13:17:21.1988547Z             continuum_state = None
2025-01-14T13:17:21.1988646Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1988758Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1988846Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1988955Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1989051Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1989150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1989245Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1989320Z         ).to_numba(
2025-01-14T13:17:21.1989396Z             macro_atom_state,
2025-01-14T13:17:21.1989488Z             self.line_interaction_type,
2025-01-14T13:17:21.1989558Z         )
2025-01-14T13:17:21.1989664Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1989930Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1990002Z         ]
2025-01-14T13:17:21.1990307Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1990312Z 
2025-01-14T13:17:21.1990457Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1990682Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-14T13:17:21.1990687Z 
2025-01-14T13:17:21.1991342Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1992090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1992103Z 
2025-01-14T13:17:21.1992199Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1992339Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1992411Z         """
2025-01-14T13:17:21.1992551Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1992621Z     
2025-01-14T13:17:21.1992693Z         Parameters
2025-01-14T13:17:21.1992768Z         ----------
2025-01-14T13:17:21.1992910Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1993038Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1993317Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1993397Z             Atomic data.
2025-01-14T13:17:21.1993462Z     
2025-01-14T13:17:21.1993535Z         Returns
2025-01-14T13:17:21.1993610Z         -------
2025-01-14T13:17:21.1993716Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1993798Z             Simulation object.
2025-01-14T13:17:21.1993864Z         """
2025-01-14T13:17:21.1994014Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1994183Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1994299Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1994422Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1994558Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1994730Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1994873Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1994970Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1995071Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1995149Z >       sim = run_tardis(
2025-01-14T13:17:21.1995232Z             config_verysimple,
2025-01-14T13:17:21.1995316Z             atom_data=atomic_data,
2025-01-14T13:17:21.1995405Z             show_convergence_plots=False,
2025-01-14T13:17:21.1995489Z             log_level="CRITICAl",
2025-01-14T13:17:21.1995555Z         )
2025-01-14T13:17:21.1995559Z 
2025-01-14T13:17:21.1995699Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1995807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1995894Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1995977Z     simulation.run_convergence()
2025-01-14T13:17:21.1996095Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1996238Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1996334Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1996485Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1996600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1996604Z 
2025-01-14T13:17:21.1996872Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1997074Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1997299Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1997569Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1997730Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1997863Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1997871Z 
2025-01-14T13:17:21.1997962Z     def initialize_transport_state(
2025-01-14T13:17:21.1998028Z         self,
2025-01-14T13:17:21.1998110Z         simulation_state,
2025-01-14T13:17:21.1998304Z         opacity_state,
2025-01-14T13:17:21.1998378Z         macro_atom_state,
2025-01-14T13:17:21.1998451Z         plasma,
2025-01-14T13:17:21.1998522Z         no_of_packets,
2025-01-14T13:17:21.1998608Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1998679Z         iteration=0,
2025-01-14T13:17:21.1998749Z     ):
2025-01-14T13:17:21.1998871Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1998973Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1999041Z         else:
2025-01-14T13:17:21.1999121Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1999186Z     
2025-01-14T13:17:21.1999322Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1999415Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1999572Z         )
2025-01-14T13:17:21.1999637Z     
2025-01-14T13:17:21.1999768Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1999876Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2000038Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2000109Z         else:
2025-01-14T13:17:21.2000187Z             continuum_state = None
2025-01-14T13:17:21.2000289Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2000396Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2000489Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2000591Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2000694Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2000789Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2000882Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2000956Z         ).to_numba(
2025-01-14T13:17:21.2001037Z             macro_atom_state,
2025-01-14T13:17:21.2001123Z             self.line_interaction_type,
2025-01-14T13:17:21.2001195Z         )
2025-01-14T13:17:21.2001299Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2001684Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2001758Z         ]
2025-01-14T13:17:21.2002057Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2002062Z 
2025-01-14T13:17:21.2002212Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2002427Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-14T13:17:21.2002432Z 
2025-01-14T13:17:21.2003100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2003453Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2003462Z 
2025-01-14T13:17:21.2003547Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2003689Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2003756Z         """
2025-01-14T13:17:21.2003902Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2003969Z     
2025-01-14T13:17:21.2004045Z         Parameters
2025-01-14T13:17:21.2004115Z         ----------
2025-01-14T13:17:21.2004259Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2004378Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2004494Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2004569Z             Atomic data.
2025-01-14T13:17:21.2004639Z     
2025-01-14T13:17:21.2004706Z         Returns
2025-01-14T13:17:21.2004778Z         -------
2025-01-14T13:17:21.2005022Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2005100Z             Simulation object.
2025-01-14T13:17:21.2005169Z         """
2025-01-14T13:17:21.2005316Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2005491Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2005602Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2005731Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2005863Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2006039Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2006169Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2006415Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2006511Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2006590Z >       sim = run_tardis(
2025-01-14T13:17:21.2006682Z             config_verysimple,
2025-01-14T13:17:21.2006759Z             atom_data=atomic_data,
2025-01-14T13:17:21.2006853Z             show_convergence_plots=False,
2025-01-14T13:17:21.2006930Z             log_level="CRITICAl",
2025-01-14T13:17:21.2007000Z         )
2025-01-14T13:17:21.2007004Z 
2025-01-14T13:17:21.2007138Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2007251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2007333Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2007422Z     simulation.run_convergence()
2025-01-14T13:17:21.2007532Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2007673Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2007770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2007924Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2008035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2008046Z 
2025-01-14T13:17:21.2008305Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2008505Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2008723Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2008998Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2009152Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2009289Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2009294Z 
2025-01-14T13:17:21.2009382Z     def initialize_transport_state(
2025-01-14T13:17:21.2009454Z         self,
2025-01-14T13:17:21.2009534Z         simulation_state,
2025-01-14T13:17:21.2009607Z         opacity_state,
2025-01-14T13:17:21.2009690Z         macro_atom_state,
2025-01-14T13:17:21.2009759Z         plasma,
2025-01-14T13:17:21.2009835Z         no_of_packets,
2025-01-14T13:17:21.2009914Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2009991Z         iteration=0,
2025-01-14T13:17:21.2010056Z     ):
2025-01-14T13:17:21.2010180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2010273Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2010345Z         else:
2025-01-14T13:17:21.2010421Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2010492Z     
2025-01-14T13:17:21.2010622Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2010719Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2010784Z         )
2025-01-14T13:17:21.2010859Z     
2025-01-14T13:17:21.2010983Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2011101Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2011349Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2011417Z         else:
2025-01-14T13:17:21.2011502Z             continuum_state = None
2025-01-14T13:17:21.2011700Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2011814Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2011903Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2012010Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2012106Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2012201Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2012288Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2012367Z         ).to_numba(
2025-01-14T13:17:21.2012444Z             macro_atom_state,
2025-01-14T13:17:21.2012656Z             self.line_interaction_type,
2025-01-14T13:17:21.2012728Z         )
2025-01-14T13:17:21.2012827Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2013108Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2013174Z         ]
2025-01-14T13:17:21.2013477Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2013481Z 
2025-01-14T13:17:21.2013623Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2013843Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-14T13:17:21.2013847Z 
2025-01-14T13:17:21.2014504Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2014861Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2014870Z 
2025-01-14T13:17:21.2014959Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2015097Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2015167Z         """
2025-01-14T13:17:21.2015309Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2015380Z     
2025-01-14T13:17:21.2015451Z         Parameters
2025-01-14T13:17:21.2015525Z         ----------
2025-01-14T13:17:21.2015665Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2015794Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2015905Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2015983Z             Atomic data.
2025-01-14T13:17:21.2016057Z     
2025-01-14T13:17:21.2016125Z         Returns
2025-01-14T13:17:21.2016198Z         -------
2025-01-14T13:17:21.2016300Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2016385Z             Simulation object.
2025-01-14T13:17:21.2016450Z         """
2025-01-14T13:17:21.2016602Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2016769Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2016885Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2017009Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2017144Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2017318Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2017451Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2017549Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2017650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2017727Z >       sim = run_tardis(
2025-01-14T13:17:21.2017804Z             config_verysimple,
2025-01-14T13:17:21.2018006Z             atom_data=atomic_data,
2025-01-14T13:17:21.2018096Z             show_convergence_plots=False,
2025-01-14T13:17:21.2018177Z             log_level="CRITICAl",
2025-01-14T13:17:21.2018243Z         )
2025-01-14T13:17:21.2018247Z 
2025-01-14T13:17:21.2018384Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2018490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2018577Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2018660Z     simulation.run_convergence()
2025-01-14T13:17:21.2018774Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2018911Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2019007Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2019247Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2019351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2019361Z 
2025-01-14T13:17:21.2019625Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2019821Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2020045Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2020316Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2020476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2020607Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2020617Z 
2025-01-14T13:17:21.2020705Z     def initialize_transport_state(
2025-01-14T13:17:21.2020776Z         self,
2025-01-14T13:17:21.2020860Z         simulation_state,
2025-01-14T13:17:21.2020938Z         opacity_state,
2025-01-14T13:17:21.2021011Z         macro_atom_state,
2025-01-14T13:17:21.2021084Z         plasma,
2025-01-14T13:17:21.2021161Z         no_of_packets,
2025-01-14T13:17:21.2021244Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2021315Z         iteration=0,
2025-01-14T13:17:21.2021386Z     ):
2025-01-14T13:17:21.2021507Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2021711Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2021780Z         else:
2025-01-14T13:17:21.2021862Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2021927Z     
2025-01-14T13:17:21.2022065Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2022157Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2022227Z         )
2025-01-14T13:17:21.2022297Z     
2025-01-14T13:17:21.2022426Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2022549Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2022698Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2022777Z         else:
2025-01-14T13:17:21.2022855Z             continuum_state = None
2025-01-14T13:17:21.2027810Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2027967Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2028075Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2028190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2028298Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2028395Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2028496Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2028568Z         ).to_numba(
2025-01-14T13:17:21.2028653Z             macro_atom_state,
2025-01-14T13:17:21.2028746Z             self.line_interaction_type,
2025-01-14T13:17:21.2028829Z         )
2025-01-14T13:17:21.2028941Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2029227Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2029468Z         ]
2025-01-14T13:17:21.2029785Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2029791Z 
2025-01-14T13:17:21.2029953Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2030180Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-14T13:17:21.2030186Z 
2025-01-14T13:17:21.2030865Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2031332Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2031337Z 
2025-01-14T13:17:21.2031435Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2031817Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2031935Z         """
2025-01-14T13:17:21.2032122Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2032192Z     
2025-01-14T13:17:21.2032272Z         Parameters
2025-01-14T13:17:21.2032345Z         ----------
2025-01-14T13:17:21.2032493Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2032618Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2032741Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2032822Z             Atomic data.
2025-01-14T13:17:21.2032891Z     
2025-01-14T13:17:21.2032966Z         Returns
2025-01-14T13:17:21.2033044Z         -------
2025-01-14T13:17:21.2033156Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2033236Z             Simulation object.
2025-01-14T13:17:21.2033308Z         """
2025-01-14T13:17:21.2033464Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2033646Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2033763Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2033894Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2034028Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2034209Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2034346Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2034449Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2034551Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2034631Z >       sim = run_tardis(
2025-01-14T13:17:21.2034717Z             config_verysimple,
2025-01-14T13:17:21.2034800Z             atom_data=atomic_data,
2025-01-14T13:17:21.2034897Z             show_convergence_plots=False,
2025-01-14T13:17:21.2034981Z             log_level="CRITICAl",
2025-01-14T13:17:21.2035054Z         )
2025-01-14T13:17:21.2035058Z 
2025-01-14T13:17:21.2035197Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2035317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2035402Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2035494Z     simulation.run_convergence()
2025-01-14T13:17:21.2035610Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2035756Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2035854Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2036007Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2036125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2036129Z 
2025-01-14T13:17:21.2036392Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2036821Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2037041Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2037343Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2037516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2037659Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2037664Z 
2025-01-14T13:17:21.2037755Z     def initialize_transport_state(
2025-01-14T13:17:21.2037824Z         self,
2025-01-14T13:17:21.2037908Z         simulation_state,
2025-01-14T13:17:21.2038099Z         opacity_state,
2025-01-14T13:17:21.2038182Z         macro_atom_state,
2025-01-14T13:17:21.2038253Z         plasma,
2025-01-14T13:17:21.2038331Z         no_of_packets,
2025-01-14T13:17:21.2038418Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2038496Z         iteration=0,
2025-01-14T13:17:21.2038563Z     ):
2025-01-14T13:17:21.2038696Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2038790Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2038863Z         else:
2025-01-14T13:17:21.2038942Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2039014Z     
2025-01-14T13:17:21.2039149Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2039252Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2039326Z         )
2025-01-14T13:17:21.2039393Z     
2025-01-14T13:17:21.2039527Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2039640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2039806Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2039874Z         else:
2025-01-14T13:17:21.2039960Z             continuum_state = None
2025-01-14T13:17:21.2040064Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2040177Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2040268Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2040380Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2040478Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2040577Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2040673Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2040751Z         ).to_numba(
2025-01-14T13:17:21.2040833Z             macro_atom_state,
2025-01-14T13:17:21.2040920Z             self.line_interaction_type,
2025-01-14T13:17:21.2040992Z         )
2025-01-14T13:17:21.2041103Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2041379Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2041450Z         ]
2025-01-14T13:17:21.2041872Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2041879Z 
2025-01-14T13:17:21.2042025Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2042255Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-14T13:17:21.2042259Z 
2025-01-14T13:17:21.2042918Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2043271Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2043280Z 
2025-01-14T13:17:21.2043372Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2043511Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2043708Z         """
2025-01-14T13:17:21.2043854Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2043925Z     
2025-01-14T13:17:21.2043999Z         Parameters
2025-01-14T13:17:21.2044077Z         ----------
2025-01-14T13:17:21.2044216Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2044343Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2044461Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2044536Z             Atomic data.
2025-01-14T13:17:21.2044606Z     
2025-01-14T13:17:21.2044673Z         Returns
2025-01-14T13:17:21.2044748Z         -------
2025-01-14T13:17:21.2044852Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2045048Z             Simulation object.
2025-01-14T13:17:21.2045114Z         """
2025-01-14T13:17:21.2045268Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2045446Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2045564Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2045686Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2045821Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2045994Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2046131Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2046237Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2046334Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2046413Z >       sim = run_tardis(
2025-01-14T13:17:21.2046497Z             config_verysimple,
2025-01-14T13:17:21.2046581Z             atom_data=atomic_data,
2025-01-14T13:17:21.2046672Z             show_convergence_plots=False,
2025-01-14T13:17:21.2046757Z             log_level="CRITICAl",
2025-01-14T13:17:21.2046829Z         )
2025-01-14T13:17:21.2046833Z 
2025-01-14T13:17:21.2046983Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2047093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2047185Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2047272Z     simulation.run_convergence()
2025-01-14T13:17:21.2047392Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2047539Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2047632Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2047790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2047898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2047907Z 
2025-01-14T13:17:21.2048174Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2048379Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2048602Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2048873Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2049038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2049179Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2049183Z 
2025-01-14T13:17:21.2049269Z     def initialize_transport_state(
2025-01-14T13:17:21.2049342Z         self,
2025-01-14T13:17:21.2049421Z         simulation_state,
2025-01-14T13:17:21.2049503Z         opacity_state,
2025-01-14T13:17:21.2049577Z         macro_atom_state,
2025-01-14T13:17:21.2049655Z         plasma,
2025-01-14T13:17:21.2049728Z         no_of_packets,
2025-01-14T13:17:21.2049813Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2049885Z         iteration=0,
2025-01-14T13:17:21.2050053Z     ):
2025-01-14T13:17:21.2050179Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2050281Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2050350Z         else:
2025-01-14T13:17:21.2050433Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2050498Z     
2025-01-14T13:17:21.2050635Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2050736Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2050802Z         )
2025-01-14T13:17:21.2050873Z     
2025-01-14T13:17:21.2051003Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2051123Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2051275Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2051439Z         else:
2025-01-14T13:17:21.2051521Z             continuum_state = None
2025-01-14T13:17:21.2051732Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2051848Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2051944Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2052050Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2052155Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2052247Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2052342Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2052419Z         ).to_numba(
2025-01-14T13:17:21.2052498Z             macro_atom_state,
2025-01-14T13:17:21.2052591Z             self.line_interaction_type,
2025-01-14T13:17:21.2052658Z         )
2025-01-14T13:17:21.2052763Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2053043Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2053114Z         ]
2025-01-14T13:17:21.2053417Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2053427Z 
2025-01-14T13:17:21.2053582Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2053807Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-14T13:17:21.2053817Z 
2025-01-14T13:17:21.2054481Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2054832Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2054841Z 
2025-01-14T13:17:21.2054931Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2055074Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2055145Z         """
2025-01-14T13:17:21.2055295Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2055360Z     
2025-01-14T13:17:21.2055437Z         Parameters
2025-01-14T13:17:21.2055509Z         ----------
2025-01-14T13:17:21.2055655Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2055783Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2055901Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2055979Z             Atomic data.
2025-01-14T13:17:21.2056045Z     
2025-01-14T13:17:21.2056118Z         Returns
2025-01-14T13:17:21.2056188Z         -------
2025-01-14T13:17:21.2056299Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2056378Z             Simulation object.
2025-01-14T13:17:21.2056455Z         """
2025-01-14T13:17:21.2056603Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2056782Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2057033Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2057162Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2057296Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2057475Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2057612Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2057711Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2057809Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2057883Z >       sim = run_tardis(
2025-01-14T13:17:21.2057966Z             config_verysimple,
2025-01-14T13:17:21.2058047Z             atom_data=atomic_data,
2025-01-14T13:17:21.2058259Z             show_convergence_plots=False,
2025-01-14T13:17:21.2058339Z             log_level="CRITICAl",
2025-01-14T13:17:21.2058414Z         )
2025-01-14T13:17:21.2058423Z 
2025-01-14T13:17:21.2058561Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2058677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2058761Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2058852Z     simulation.run_convergence()
2025-01-14T13:17:21.2058970Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2059107Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2059205Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2059354Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2059464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2059468Z 
2025-01-14T13:17:21.2059736Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2059941Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2060165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2060442Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2060607Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2060741Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2060745Z 
2025-01-14T13:17:21.2060836Z     def initialize_transport_state(
2025-01-14T13:17:21.2060904Z         self,
2025-01-14T13:17:21.2060990Z         simulation_state,
2025-01-14T13:17:21.2061065Z         opacity_state,
2025-01-14T13:17:21.2061143Z         macro_atom_state,
2025-01-14T13:17:21.2061213Z         plasma,
2025-01-14T13:17:21.2061295Z         no_of_packets,
2025-01-14T13:17:21.2061375Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2061452Z         iteration=0,
2025-01-14T13:17:21.2061518Z     ):
2025-01-14T13:17:21.2061747Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2061843Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2061916Z         else:
2025-01-14T13:17:21.2061998Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2062063Z     
2025-01-14T13:17:21.2062200Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2062296Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2062370Z         )
2025-01-14T13:17:21.2062436Z     
2025-01-14T13:17:21.2062569Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2062678Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2062835Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2062907Z         else:
2025-01-14T13:17:21.2062993Z             continuum_state = None
2025-01-14T13:17:21.2063093Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2063203Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2063441Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2063551Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2063654Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2063745Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2063840Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2063912Z         ).to_numba(
2025-01-14T13:17:21.2063994Z             macro_atom_state,
2025-01-14T13:17:21.2064080Z             self.line_interaction_type,
2025-01-14T13:17:21.2064151Z         )
2025-01-14T13:17:21.2064251Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2064530Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2064706Z         ]
2025-01-14T13:17:21.2065013Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2065024Z 
2025-01-14T13:17:21.2065170Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2065394Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-14T13:17:21.2065399Z 
2025-01-14T13:17:21.2066077Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2066428Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2066433Z 
2025-01-14T13:17:21.2066526Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2066673Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2066745Z         """
2025-01-14T13:17:21.2066890Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2066968Z     
2025-01-14T13:17:21.2067046Z         Parameters
2025-01-14T13:17:21.2067117Z         ----------
2025-01-14T13:17:21.2067265Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2067387Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2067507Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2067581Z             Atomic data.
2025-01-14T13:17:21.2067651Z     
2025-01-14T13:17:21.2067721Z         Returns
2025-01-14T13:17:21.2067795Z         -------
2025-01-14T13:17:21.2067898Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2067981Z             Simulation object.
2025-01-14T13:17:21.2068047Z         """
2025-01-14T13:17:21.2068204Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2068374Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2068498Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2068628Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2068761Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2068939Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2069072Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2069176Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2069268Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2069348Z >       sim = run_tardis(
2025-01-14T13:17:21.2069427Z             config_verysimple,
2025-01-14T13:17:21.2069512Z             atom_data=atomic_data,
2025-01-14T13:17:21.2069602Z             show_convergence_plots=False,
2025-01-14T13:17:21.2069695Z             log_level="CRITICAl",
2025-01-14T13:17:21.2069761Z         )
2025-01-14T13:17:21.2069766Z 
2025-01-14T13:17:21.2069910Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2070115Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2070198Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2070288Z     simulation.run_convergence()
2025-01-14T13:17:21.2070403Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2070549Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2070643Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2070800Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2070907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2070911Z 
2025-01-14T13:17:21.2071181Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2071479Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2071969Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2072292Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2072455Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2072597Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2072601Z 
2025-01-14T13:17:21.2072688Z     def initialize_transport_state(
2025-01-14T13:17:21.2072761Z         self,
2025-01-14T13:17:21.2072838Z         simulation_state,
2025-01-14T13:17:21.2072918Z         opacity_state,
2025-01-14T13:17:21.2072993Z         macro_atom_state,
2025-01-14T13:17:21.2073070Z         plasma,
2025-01-14T13:17:21.2073143Z         no_of_packets,
2025-01-14T13:17:21.2073228Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2073306Z         iteration=0,
2025-01-14T13:17:21.2073377Z     ):
2025-01-14T13:17:21.2073507Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2073607Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2073682Z         else:
2025-01-14T13:17:21.2073759Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2073831Z     
2025-01-14T13:17:21.2073963Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2074064Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2074133Z         )
2025-01-14T13:17:21.2074205Z     
2025-01-14T13:17:21.2074330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2074444Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2074595Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2074670Z         else:
2025-01-14T13:17:21.2074750Z             continuum_state = None
2025-01-14T13:17:21.2074860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2074965Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2075067Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2075179Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2075276Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2075372Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2075461Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2075536Z         ).to_numba(
2025-01-14T13:17:21.2075615Z             macro_atom_state,
2025-01-14T13:17:21.2075706Z             self.line_interaction_type,
2025-01-14T13:17:21.2075778Z         )
2025-01-14T13:17:21.2075884Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2076151Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2076227Z         ]
2025-01-14T13:17:21.2076525Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2076535Z 
2025-01-14T13:17:21.2076826Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2077055Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-14T13:17:21.2077059Z 
2025-01-14T13:17:21.2077717Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2078069Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2078074Z 
2025-01-14T13:17:21.2078160Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2078304Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2078485Z         """
2025-01-14T13:17:21.2078629Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2078701Z     
2025-01-14T13:17:21.2078778Z         Parameters
2025-01-14T13:17:21.2078855Z         ----------
2025-01-14T13:17:21.2078996Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2079123Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2079237Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2079318Z             Atomic data.
2025-01-14T13:17:21.2079384Z     
2025-01-14T13:17:21.2079459Z         Returns
2025-01-14T13:17:21.2079530Z         -------
2025-01-14T13:17:21.2079638Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2079715Z             Simulation object.
2025-01-14T13:17:21.2079787Z         """
2025-01-14T13:17:21.2079934Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2080115Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2080234Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2080362Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2080499Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2080668Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2080805Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2080905Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2081001Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2081074Z >       sim = run_tardis(
2025-01-14T13:17:21.2081157Z             config_verysimple,
2025-01-14T13:17:21.2081237Z             atom_data=atomic_data,
2025-01-14T13:17:21.2081330Z             show_convergence_plots=False,
2025-01-14T13:17:21.2081409Z             log_level="CRITICAl",
2025-01-14T13:17:21.2081485Z         )
2025-01-14T13:17:21.2081489Z 
2025-01-14T13:17:21.2081990Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2082121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2082218Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2082303Z     simulation.run_convergence()
2025-01-14T13:17:21.2082421Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2082563Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2082663Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2082814Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2082925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2082930Z 
2025-01-14T13:17:21.2083188Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2083393Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2083624Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2084087Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2084258Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2084392Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2084396Z 
2025-01-14T13:17:21.2084489Z     def initialize_transport_state(
2025-01-14T13:17:21.2084559Z         self,
2025-01-14T13:17:21.2084642Z         simulation_state,
2025-01-14T13:17:21.2084719Z         opacity_state,
2025-01-14T13:17:21.2084801Z         macro_atom_state,
2025-01-14T13:17:21.2084871Z         plasma,
2025-01-14T13:17:21.2084952Z         no_of_packets,
2025-01-14T13:17:21.2085038Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2085111Z         iteration=0,
2025-01-14T13:17:21.2085371Z     ):
2025-01-14T13:17:21.2085502Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2085600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2085677Z         else:
2025-01-14T13:17:21.2085761Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2085827Z     
2025-01-14T13:17:21.2085961Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2086056Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2086130Z         )
2025-01-14T13:17:21.2086196Z     
2025-01-14T13:17:21.2086330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2086441Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2086600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2086668Z         else:
2025-01-14T13:17:21.2086755Z             continuum_state = None
2025-01-14T13:17:21.2086856Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2086971Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2087071Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2087180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2087299Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2087390Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2087487Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2087556Z         ).to_numba(
2025-01-14T13:17:21.2087640Z             macro_atom_state,
2025-01-14T13:17:21.2087726Z             self.line_interaction_type,
2025-01-14T13:17:21.2087798Z         )
2025-01-14T13:17:21.2087897Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2088171Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2088238Z         ]
2025-01-14T13:17:21.2088542Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2088551Z 
2025-01-14T13:17:21.2088703Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2088933Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-14T13:17:21.2088938Z 
2025-01-14T13:17:21.2089610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2089958Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2089968Z 
2025-01-14T13:17:21.2090054Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2090199Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2090266Z         """
2025-01-14T13:17:21.2090416Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2090482Z     
2025-01-14T13:17:21.2090557Z         Parameters
2025-01-14T13:17:21.2090629Z         ----------
2025-01-14T13:17:21.2090865Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2090987Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2091106Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2091181Z             Atomic data.
2025-01-14T13:17:21.2091253Z     
2025-01-14T13:17:21.2091320Z         Returns
2025-01-14T13:17:21.2091398Z         -------
2025-01-14T13:17:21.2091501Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2091686Z             Simulation object.
2025-01-14T13:17:21.2091759Z         """
2025-01-14T13:17:21.2091906Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2092079Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2092307Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2092435Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2092571Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2092749Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2092882Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2092985Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2093079Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2093159Z >       sim = run_tardis(
2025-01-14T13:17:21.2093238Z             config_verysimple,
2025-01-14T13:17:21.2093323Z             atom_data=atomic_data,
2025-01-14T13:17:21.2093415Z             show_convergence_plots=False,
2025-01-14T13:17:21.2093493Z             log_level="CRITICAl",
2025-01-14T13:17:21.2093565Z         )
2025-01-14T13:17:21.2093570Z 
2025-01-14T13:17:21.2093710Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2093824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2093916Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2094010Z     simulation.run_convergence()
2025-01-14T13:17:21.2094124Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2094271Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2094366Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2094524Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2094635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2094644Z 
2025-01-14T13:17:21.2094915Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2095122Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2095347Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2095624Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2095786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2095930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2095934Z 
2025-01-14T13:17:21.2096022Z     def initialize_transport_state(
2025-01-14T13:17:21.2096096Z         self,
2025-01-14T13:17:21.2096175Z         simulation_state,
2025-01-14T13:17:21.2096255Z         opacity_state,
2025-01-14T13:17:21.2096337Z         macro_atom_state,
2025-01-14T13:17:21.2096407Z         plasma,
2025-01-14T13:17:21.2096484Z         no_of_packets,
2025-01-14T13:17:21.2096567Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2096643Z         iteration=0,
2025-01-14T13:17:21.2096710Z     ):
2025-01-14T13:17:21.2096841Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2096940Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2097014Z         else:
2025-01-14T13:17:21.2097094Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2097286Z     
2025-01-14T13:17:21.2097424Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2097529Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2097597Z         )
2025-01-14T13:17:21.2097669Z     
2025-01-14T13:17:21.2097797Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2097919Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2098073Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2098147Z         else:
2025-01-14T13:17:21.2098236Z             continuum_state = None
2025-01-14T13:17:21.2098335Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2098449Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2098624Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2098738Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2098838Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2098943Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2099033Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2099109Z         ).to_numba(
2025-01-14T13:17:21.2099188Z             macro_atom_state,
2025-01-14T13:17:21.2099281Z             self.line_interaction_type,
2025-01-14T13:17:21.2099348Z         )
2025-01-14T13:17:21.2099452Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2099721Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2099793Z         ]
2025-01-14T13:17:21.2100098Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2100108Z 
2025-01-14T13:17:21.2100257Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2100487Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-14T13:17:21.2100497Z 
2025-01-14T13:17:21.2101158Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2101513Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2101518Z 
2025-01-14T13:17:21.2101719Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2101859Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2101933Z         """
2025-01-14T13:17:21.2102078Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2102155Z     
2025-01-14T13:17:21.2102228Z         Parameters
2025-01-14T13:17:21.2102304Z         ----------
2025-01-14T13:17:21.2102445Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2102580Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2102696Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2102775Z             Atomic data.
2025-01-14T13:17:21.2102841Z     
2025-01-14T13:17:21.2102915Z         Returns
2025-01-14T13:17:21.2102984Z         -------
2025-01-14T13:17:21.2103095Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2103179Z             Simulation object.
2025-01-14T13:17:21.2103246Z         """
2025-01-14T13:17:21.2103399Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2103569Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2103688Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2103815Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2103957Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2104271Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2104408Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2104508Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2104608Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2104683Z >       sim = run_tardis(
2025-01-14T13:17:21.2104766Z             config_verysimple,
2025-01-14T13:17:21.2104852Z             atom_data=atomic_data,
2025-01-14T13:17:21.2104942Z             show_convergence_plots=False,
2025-01-14T13:17:21.2105028Z             log_level="CRITICAl",
2025-01-14T13:17:21.2105094Z         )
2025-01-14T13:17:21.2105098Z 
2025-01-14T13:17:21.2105240Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2105461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2105550Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2105645Z     simulation.run_convergence()
2025-01-14T13:17:21.2105782Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2105919Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2106019Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2106171Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2106282Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2106286Z 
2025-01-14T13:17:21.2106557Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2106765Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2106990Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2107267Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2107428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2107569Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2107573Z 
2025-01-14T13:17:21.2107668Z     def initialize_transport_state(
2025-01-14T13:17:21.2107737Z         self,
2025-01-14T13:17:21.2107825Z         simulation_state,
2025-01-14T13:17:21.2107904Z         opacity_state,
2025-01-14T13:17:21.2107980Z         macro_atom_state,
2025-01-14T13:17:21.2108055Z         plasma,
2025-01-14T13:17:21.2108127Z         no_of_packets,
2025-01-14T13:17:21.2108213Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2108289Z         iteration=0,
2025-01-14T13:17:21.2108362Z     ):
2025-01-14T13:17:21.2108486Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2108594Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2108662Z         else:
2025-01-14T13:17:21.2108745Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2108810Z     
2025-01-14T13:17:21.2108948Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2109049Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2109122Z         )
2025-01-14T13:17:21.2109188Z     
2025-01-14T13:17:21.2109320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2109437Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2109588Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2109660Z         else:
2025-01-14T13:17:21.2109742Z             continuum_state = None
2025-01-14T13:17:21.2109846Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2109954Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2110049Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2110158Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2110259Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2110475Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2110569Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2110640Z         ).to_numba(
2025-01-14T13:17:21.2110723Z             macro_atom_state,
2025-01-14T13:17:21.2110810Z             self.line_interaction_type,
2025-01-14T13:17:21.2110883Z         )
2025-01-14T13:17:21.2110989Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2111254Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2111327Z         ]
2025-01-14T13:17:21.2111859Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2111871Z 
2025-01-14T13:17:21.2112079Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2112479Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-14T13:17:21.2112484Z 
2025-01-14T13:17:21.2113166Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2113524Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2113528Z 
2025-01-14T13:17:21.2113617Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2113761Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2113828Z         """
2025-01-14T13:17:21.2113979Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2114046Z     
2025-01-14T13:17:21.2114130Z         Parameters
2025-01-14T13:17:21.2114206Z         ----------
2025-01-14T13:17:21.2114352Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2114476Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2114599Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2114671Z             Atomic data.
2025-01-14T13:17:21.2114744Z     
2025-01-14T13:17:21.2114817Z         Returns
2025-01-14T13:17:21.2114905Z         -------
2025-01-14T13:17:21.2115018Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2115101Z             Simulation object.
2025-01-14T13:17:21.2115175Z         """
2025-01-14T13:17:21.2115324Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2115501Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2115614Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2115744Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2115881Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2116061Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2116201Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2116309Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2116409Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2116485Z >       sim = run_tardis(
2025-01-14T13:17:21.2116572Z             config_verysimple,
2025-01-14T13:17:21.2116653Z             atom_data=atomic_data,
2025-01-14T13:17:21.2116746Z             show_convergence_plots=False,
2025-01-14T13:17:21.2116826Z             log_level="CRITICAl",
2025-01-14T13:17:21.2116902Z         )
2025-01-14T13:17:21.2116906Z 
2025-01-14T13:17:21.2117042Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2117160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2117249Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2117341Z     simulation.run_convergence()
2025-01-14T13:17:21.2117454Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2117767Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2117861Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2118016Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2118126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2118131Z 
2025-01-14T13:17:21.2118396Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2118601Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2118822Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2119100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2119337Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2119483Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2119487Z 
2025-01-14T13:17:21.2119582Z     def initialize_transport_state(
2025-01-14T13:17:21.2119650Z         self,
2025-01-14T13:17:21.2119736Z         simulation_state,
2025-01-14T13:17:21.2119810Z         opacity_state,
2025-01-14T13:17:21.2119890Z         macro_atom_state,
2025-01-14T13:17:21.2119961Z         plasma,
2025-01-14T13:17:21.2120039Z         no_of_packets,
2025-01-14T13:17:21.2120120Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2120197Z         iteration=0,
2025-01-14T13:17:21.2120263Z     ):
2025-01-14T13:17:21.2120394Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2120487Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2120567Z         else:
2025-01-14T13:17:21.2120645Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2120718Z     
2025-01-14T13:17:21.2120849Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2120958Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2121027Z         )
2025-01-14T13:17:21.2121101Z     
2025-01-14T13:17:21.2121236Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2121349Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2121507Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2121710Z         else:
2025-01-14T13:17:21.2121800Z             continuum_state = None
2025-01-14T13:17:21.2121900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2122015Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2122106Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2122218Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2122322Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2122421Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2122516Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2122594Z         ).to_numba(
2025-01-14T13:17:21.2122680Z             macro_atom_state,
2025-01-14T13:17:21.2122767Z             self.line_interaction_type,
2025-01-14T13:17:21.2122841Z         )
2025-01-14T13:17:21.2122947Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2123226Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2123297Z         ]
2025-01-14T13:17:21.2123606Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2123610Z 
2025-01-14T13:17:21.2123757Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2123992Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-14T13:17:21.2123996Z 
2025-01-14T13:17:21.2124668Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2125149Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2125155Z 
2025-01-14T13:17:21.2125254Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2125396Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2125469Z         """
2025-01-14T13:17:21.2125612Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2125688Z     
2025-01-14T13:17:21.2125760Z         Parameters
2025-01-14T13:17:21.2125841Z         ----------
2025-01-14T13:17:21.2126090Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2126220Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2126348Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2126424Z             Atomic data.
2025-01-14T13:17:21.2126500Z     
2025-01-14T13:17:21.2126570Z         Returns
2025-01-14T13:17:21.2126646Z         -------
2025-01-14T13:17:21.2126754Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2126839Z             Simulation object.
2025-01-14T13:17:21.2126909Z         """
2025-01-14T13:17:21.2127063Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2127233Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2127355Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2127478Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2127624Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2127797Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2127939Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2128056Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2128151Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2128231Z >       sim = run_tardis(
2025-01-14T13:17:21.2128315Z             config_verysimple,
2025-01-14T13:17:21.2128401Z             atom_data=atomic_data,
2025-01-14T13:17:21.2128492Z             show_convergence_plots=False,
2025-01-14T13:17:21.2128578Z             log_level="CRITICAl",
2025-01-14T13:17:21.2128645Z         )
2025-01-14T13:17:21.2128649Z 
2025-01-14T13:17:21.2128792Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2128902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2128994Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2129088Z     simulation.run_convergence()
2025-01-14T13:17:21.2129210Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2129355Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2129457Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2129616Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2129721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2129725Z 
2025-01-14T13:17:21.2129994Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2130195Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2130420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2130693Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2130860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2130999Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2131096Z 
2025-01-14T13:17:21.2131186Z     def initialize_transport_state(
2025-01-14T13:17:21.2131263Z         self,
2025-01-14T13:17:21.2131340Z         simulation_state,
2025-01-14T13:17:21.2131424Z         opacity_state,
2025-01-14T13:17:21.2131499Z         macro_atom_state,
2025-01-14T13:17:21.2131681Z         plasma,
2025-01-14T13:17:21.2131758Z         no_of_packets,
2025-01-14T13:17:21.2131847Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2131919Z         iteration=0,
2025-01-14T13:17:21.2131991Z     ):
2025-01-14T13:17:21.2132116Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2132221Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2132292Z         else:
2025-01-14T13:17:21.2132376Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2132568Z     
2025-01-14T13:17:21.2132707Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2132808Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2132882Z         )
2025-01-14T13:17:21.2132955Z     
2025-01-14T13:17:21.2133084Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2133202Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2133356Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2133432Z         else:
2025-01-14T13:17:21.2133513Z             continuum_state = None
2025-01-14T13:17:21.2133619Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2133726Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2133823Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2133927Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2134032Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2134132Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2134230Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2134315Z         ).to_numba(
2025-01-14T13:17:21.2134392Z             macro_atom_state,
2025-01-14T13:17:21.2134486Z             self.line_interaction_type,
2025-01-14T13:17:21.2134554Z         )
2025-01-14T13:17:21.2134659Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2134929Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2135004Z         ]
2025-01-14T13:17:21.2135305Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2135310Z 
2025-01-14T13:17:21.2135462Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2135689Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-14T13:17:21.2135705Z 
2025-01-14T13:17:21.2136367Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2136723Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2136727Z 
2025-01-14T13:17:21.2136814Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2136959Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2137030Z         """
2025-01-14T13:17:21.2137181Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2137249Z     
2025-01-14T13:17:21.2137331Z         Parameters
2025-01-14T13:17:21.2137404Z         ----------
2025-01-14T13:17:21.2137555Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2137691Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2137807Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2138036Z             Atomic data.
2025-01-14T13:17:21.2138107Z     
2025-01-14T13:17:21.2138184Z         Returns
2025-01-14T13:17:21.2138255Z         -------
2025-01-14T13:17:21.2138367Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2138446Z             Simulation object.
2025-01-14T13:17:21.2138522Z         """
2025-01-14T13:17:21.2138671Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2138850Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2138965Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2139092Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2139225Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2139487Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2139627Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2139732Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2139832Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2139907Z >       sim = run_tardis(
2025-01-14T13:17:21.2139992Z             config_verysimple,
2025-01-14T13:17:21.2140073Z             atom_data=atomic_data,
2025-01-14T13:17:21.2140169Z             show_convergence_plots=False,
2025-01-14T13:17:21.2140248Z             log_level="CRITICAl",
2025-01-14T13:17:21.2140320Z         )
2025-01-14T13:17:21.2140325Z 
2025-01-14T13:17:21.2140460Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2140574Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2140657Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2140748Z     simulation.run_convergence()
2025-01-14T13:17:21.2140871Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2141008Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2141111Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2141262Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2141379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2141383Z 
2025-01-14T13:17:21.2141744Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2141954Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2142172Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2142448Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2142611Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2142749Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2142754Z 
2025-01-14T13:17:21.2142847Z     def initialize_transport_state(
2025-01-14T13:17:21.2142920Z         self,
2025-01-14T13:17:21.2143003Z         simulation_state,
2025-01-14T13:17:21.2143083Z         opacity_state,
2025-01-14T13:17:21.2143164Z         macro_atom_state,
2025-01-14T13:17:21.2143236Z         plasma,
2025-01-14T13:17:21.2143319Z         no_of_packets,
2025-01-14T13:17:21.2143402Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2143482Z         iteration=0,
2025-01-14T13:17:21.2143548Z     ):
2025-01-14T13:17:21.2143680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2143779Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2143857Z         else:
2025-01-14T13:17:21.2143942Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2144010Z     
2025-01-14T13:17:21.2144153Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2144257Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2144331Z         )
2025-01-14T13:17:21.2144398Z     
2025-01-14T13:17:21.2144657Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2144770Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2144933Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2145003Z         else:
2025-01-14T13:17:21.2145092Z             continuum_state = None
2025-01-14T13:17:21.2145193Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2145305Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2145397Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2145506Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2145604Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2145703Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2145907Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2145980Z         ).to_numba(
2025-01-14T13:17:21.2146064Z             macro_atom_state,
2025-01-14T13:17:21.2146157Z             self.line_interaction_type,
2025-01-14T13:17:21.2146235Z         )
2025-01-14T13:17:21.2146336Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2146613Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2146683Z         ]
2025-01-14T13:17:21.2146991Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2146995Z 
2025-01-14T13:17:21.2147143Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2147372Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-14T13:17:21.2147377Z 
2025-01-14T13:17:21.2148050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2148401Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2148406Z 
2025-01-14T13:17:21.2148504Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2148642Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2148721Z         """
2025-01-14T13:17:21.2148865Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2148940Z     
2025-01-14T13:17:21.2149020Z         Parameters
2025-01-14T13:17:21.2149094Z         ----------
2025-01-14T13:17:21.2149244Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2149370Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2149493Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2149570Z             Atomic data.
2025-01-14T13:17:21.2149644Z     
2025-01-14T13:17:21.2149721Z         Returns
2025-01-14T13:17:21.2149797Z         -------
2025-01-14T13:17:21.2149902Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2149986Z             Simulation object.
2025-01-14T13:17:21.2150053Z         """
2025-01-14T13:17:21.2150207Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2150376Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2150495Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2150619Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2150755Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2150933Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2151070Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2151173Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2151356Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2151437Z >       sim = run_tardis(
2025-01-14T13:17:21.2151518Z             config_verysimple,
2025-01-14T13:17:21.2151800Z             atom_data=atomic_data,
2025-01-14T13:17:21.2151948Z             show_convergence_plots=False,
2025-01-14T13:17:21.2152044Z             log_level="CRITICAl",
2025-01-14T13:17:21.2152113Z         )
2025-01-14T13:17:21.2152120Z 
2025-01-14T13:17:21.2152263Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2152374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2152464Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2152560Z     simulation.run_convergence()
2025-01-14T13:17:21.2152675Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2152959Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2153056Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2153213Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2153329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2153334Z 
2025-01-14T13:17:21.2153602Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2153803Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2154031Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2154309Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2154469Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2154615Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2154619Z 
2025-01-14T13:17:21.2154706Z     def initialize_transport_state(
2025-01-14T13:17:21.2154783Z         self,
2025-01-14T13:17:21.2154866Z         simulation_state,
2025-01-14T13:17:21.2154947Z         opacity_state,
2025-01-14T13:17:21.2155024Z         macro_atom_state,
2025-01-14T13:17:21.2155104Z         plasma,
2025-01-14T13:17:21.2155179Z         no_of_packets,
2025-01-14T13:17:21.2155268Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2155341Z         iteration=0,
2025-01-14T13:17:21.2155415Z     ):
2025-01-14T13:17:21.2155541Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2155644Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2155722Z         else:
2025-01-14T13:17:21.2155801Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2155875Z     
2025-01-14T13:17:21.2156009Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2156116Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2156185Z         )
2025-01-14T13:17:21.2156258Z     
2025-01-14T13:17:21.2156385Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2156508Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2156662Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2156737Z         else:
2025-01-14T13:17:21.2156819Z             continuum_state = None
2025-01-14T13:17:21.2156927Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2157035Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2157135Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2157255Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2157353Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2157452Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2157542Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2157622Z         ).to_numba(
2025-01-14T13:17:21.2157699Z             macro_atom_state,
2025-01-14T13:17:21.2157792Z             self.line_interaction_type,
2025-01-14T13:17:21.2157986Z         )
2025-01-14T13:17:21.2158091Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2158361Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2158433Z         ]
2025-01-14T13:17:21.2158732Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2158742Z 
2025-01-14T13:17:21.2158888Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2159088Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-14T13:17:21.2159092Z 
2025-01-14T13:17:21.2159749Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2160177Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2160187Z 
2025-01-14T13:17:21.2160276Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2160418Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2160485Z         """
2025-01-14T13:17:21.2160631Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2160701Z     
2025-01-14T13:17:21.2160776Z         Parameters
2025-01-14T13:17:21.2160852Z         ----------
2025-01-14T13:17:21.2160993Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2161121Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2161235Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2161319Z             Atomic data.
2025-01-14T13:17:21.2161386Z     
2025-01-14T13:17:21.2161461Z         Returns
2025-01-14T13:17:21.2161530Z         -------
2025-01-14T13:17:21.2161748Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2161828Z             Simulation object.
2025-01-14T13:17:21.2161903Z         """
2025-01-14T13:17:21.2162050Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2162225Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2162341Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2162464Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2162600Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2162772Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2162908Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2163010Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2163110Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2163185Z >       sim = run_tardis(
2025-01-14T13:17:21.2163273Z             config_verysimple,
2025-01-14T13:17:21.2163353Z             atom_data=atomic_data,
2025-01-14T13:17:21.2163448Z             show_convergence_plots=False,
2025-01-14T13:17:21.2163526Z             log_level="CRITICAl",
2025-01-14T13:17:21.2163598Z         )
2025-01-14T13:17:21.2163603Z 
2025-01-14T13:17:21.2163742Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2163850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2163941Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2164029Z     simulation.run_convergence()
2025-01-14T13:17:21.2164153Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2164293Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2164394Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2164543Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2164833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2164838Z 
2025-01-14T13:17:21.2165101Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2165310Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2165536Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2165808Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2165969Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2166103Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2166214Z 
2025-01-14T13:17:21.2166306Z     def initialize_transport_state(
2025-01-14T13:17:21.2166375Z         self,
2025-01-14T13:17:21.2166458Z         simulation_state,
2025-01-14T13:17:21.2166532Z         opacity_state,
2025-01-14T13:17:21.2166620Z         macro_atom_state,
2025-01-14T13:17:21.2166688Z         plasma,
2025-01-14T13:17:21.2166767Z         no_of_packets,
2025-01-14T13:17:21.2166847Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2166927Z         iteration=0,
2025-01-14T13:17:21.2167000Z     ):
2025-01-14T13:17:21.2167124Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2167223Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2167290Z         else:
2025-01-14T13:17:21.2167371Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2167438Z     
2025-01-14T13:17:21.2167575Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2167669Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2167747Z         )
2025-01-14T13:17:21.2167814Z     
2025-01-14T13:17:21.2167946Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2168058Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2168223Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2168292Z         else:
2025-01-14T13:17:21.2168380Z             continuum_state = None
2025-01-14T13:17:21.2168479Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2168592Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2168687Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2168792Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2168892Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2168983Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2169076Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2169147Z         ).to_numba(
2025-01-14T13:17:21.2169235Z             macro_atom_state,
2025-01-14T13:17:21.2169324Z             self.line_interaction_type,
2025-01-14T13:17:21.2169397Z         )
2025-01-14T13:17:21.2169495Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2169769Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2169837Z         ]
2025-01-14T13:17:21.2170138Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2170143Z 
2025-01-14T13:17:21.2170290Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2170489Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-14T13:17:21.2170494Z 
2025-01-14T13:17:21.2171163Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2171515Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2171751Z 
2025-01-14T13:17:21.2171859Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2172006Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2172107Z         """
2025-01-14T13:17:21.2172257Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2172323Z     
2025-01-14T13:17:21.2172401Z         Parameters
2025-01-14T13:17:21.2172472Z         ----------
2025-01-14T13:17:21.2172621Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2172745Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2172866Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2172940Z             Atomic data.
2025-01-14T13:17:21.2173135Z     
2025-01-14T13:17:21.2173206Z         Returns
2025-01-14T13:17:21.2173280Z         -------
2025-01-14T13:17:21.2173386Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2173475Z             Simulation object.
2025-01-14T13:17:21.2173545Z         """
2025-01-14T13:17:21.2173698Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2173874Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2173989Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2174117Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2174248Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2174428Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2174560Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2174661Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2174762Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2174842Z >       sim = run_tardis(
2025-01-14T13:17:21.2174921Z             config_verysimple,
2025-01-14T13:17:21.2175013Z             atom_data=atomic_data,
2025-01-14T13:17:21.2175106Z             show_convergence_plots=False,
2025-01-14T13:17:21.2175195Z             log_level="CRITICAl",
2025-01-14T13:17:21.2175271Z         )
2025-01-14T13:17:21.2175276Z 
2025-01-14T13:17:21.2175415Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2175528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2175613Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2175706Z     simulation.run_convergence()
2025-01-14T13:17:21.2175820Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2175964Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2176059Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2176219Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2176323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2176331Z 
2025-01-14T13:17:21.2176604Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2176810Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2177032Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2177309Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2177465Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2177605Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2177610Z 
2025-01-14T13:17:21.2177695Z     def initialize_transport_state(
2025-01-14T13:17:21.2177771Z         self,
2025-01-14T13:17:21.2177848Z         simulation_state,
2025-01-14T13:17:21.2177928Z         opacity_state,
2025-01-14T13:17:21.2178003Z         macro_atom_state,
2025-01-14T13:17:21.2178227Z         plasma,
2025-01-14T13:17:21.2178301Z         no_of_packets,
2025-01-14T13:17:21.2178387Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2178464Z         iteration=0,
2025-01-14T13:17:21.2178533Z     ):
2025-01-14T13:17:21.2178665Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2178759Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2178833Z         else:
2025-01-14T13:17:21.2178912Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2178983Z     
2025-01-14T13:17:21.2179113Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2179213Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2179279Z         )
2025-01-14T13:17:21.2179350Z     
2025-01-14T13:17:21.2179477Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2179680Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2179832Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2179917Z         else:
2025-01-14T13:17:21.2179999Z             continuum_state = None
2025-01-14T13:17:21.2180104Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2180219Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2180313Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2180424Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2180522Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2180619Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2180710Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2180785Z         ).to_numba(
2025-01-14T13:17:21.2180867Z             macro_atom_state,
2025-01-14T13:17:21.2180966Z             self.line_interaction_type,
2025-01-14T13:17:21.2181033Z         )
2025-01-14T13:17:21.2181139Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2181409Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2181487Z         ]
2025-01-14T13:17:21.2181899Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2181904Z 
2025-01-14T13:17:21.2182056Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2182258Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-14T13:17:21.2182263Z 
2025-01-14T13:17:21.2182928Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2183288Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2183293Z 
2025-01-14T13:17:21.2183391Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2183535Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2183607Z         """
2025-01-14T13:17:21.2183753Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2183824Z     
2025-01-14T13:17:21.2183896Z         Parameters
2025-01-14T13:17:21.2183975Z         ----------
2025-01-14T13:17:21.2184119Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2184250Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2184363Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2184444Z             Atomic data.
2025-01-14T13:17:21.2184511Z     
2025-01-14T13:17:21.2184585Z         Returns
2025-01-14T13:17:21.2184658Z         -------
2025-01-14T13:17:21.2184771Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2184851Z             Simulation object.
2025-01-14T13:17:21.2185067Z         """
2025-01-14T13:17:21.2185229Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2185400Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2185522Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2185647Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2185788Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2185964Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2186106Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2186204Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2186308Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2186518Z >       sim = run_tardis(
2025-01-14T13:17:21.2186605Z             config_verysimple,
2025-01-14T13:17:21.2186688Z             atom_data=atomic_data,
2025-01-14T13:17:21.2186795Z             show_convergence_plots=False,
2025-01-14T13:17:21.2186881Z             log_level="CRITICAl",
2025-01-14T13:17:21.2186951Z         )
2025-01-14T13:17:21.2186956Z 
2025-01-14T13:17:21.2187101Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2187214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2187304Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2187390Z     simulation.run_convergence()
2025-01-14T13:17:21.2187508Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2187647Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2187746Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2187899Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2188020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2188024Z 
2025-01-14T13:17:21.2188292Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2188498Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2188724Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2189001Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2189164Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2189305Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2189309Z 
2025-01-14T13:17:21.2189403Z     def initialize_transport_state(
2025-01-14T13:17:21.2189471Z         self,
2025-01-14T13:17:21.2189554Z         simulation_state,
2025-01-14T13:17:21.2189632Z         opacity_state,
2025-01-14T13:17:21.2189712Z         macro_atom_state,
2025-01-14T13:17:21.2189788Z         plasma,
2025-01-14T13:17:21.2189864Z         no_of_packets,
2025-01-14T13:17:21.2189958Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2190031Z         iteration=0,
2025-01-14T13:17:21.2190104Z     ):
2025-01-14T13:17:21.2190232Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2190333Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2190403Z         else:
2025-01-14T13:17:21.2190487Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2190553Z     
2025-01-14T13:17:21.2190690Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2190789Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2190862Z         )
2025-01-14T13:17:21.2190928Z     
2025-01-14T13:17:21.2191060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2191173Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2191337Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2191411Z         else:
2025-01-14T13:17:21.2191765Z             continuum_state = None
2025-01-14T13:17:21.2191932Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2192066Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2192165Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2192271Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2192373Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2192464Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2192559Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2192629Z         ).to_numba(
2025-01-14T13:17:21.2192714Z             macro_atom_state,
2025-01-14T13:17:21.2192801Z             self.line_interaction_type,
2025-01-14T13:17:21.2192873Z         )
2025-01-14T13:17:21.2193101Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2193380Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2193459Z         ]
2025-01-14T13:17:21.2193760Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2193765Z 
2025-01-14T13:17:21.2193917Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2194113Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-14T13:17:21.2194117Z 
2025-01-14T13:17:21.2194782Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2195126Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2195141Z 
2025-01-14T13:17:21.2195228Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2195375Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2195442Z         """
2025-01-14T13:17:21.2195590Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2195656Z     
2025-01-14T13:17:21.2195733Z         Parameters
2025-01-14T13:17:21.2195805Z         ----------
2025-01-14T13:17:21.2195948Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2196071Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2196190Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2196265Z             Atomic data.
2025-01-14T13:17:21.2196336Z     
2025-01-14T13:17:21.2196405Z         Returns
2025-01-14T13:17:21.2196480Z         -------
2025-01-14T13:17:21.2196588Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2196673Z             Simulation object.
2025-01-14T13:17:21.2196745Z         """
2025-01-14T13:17:21.2196895Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2197078Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2197192Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2197318Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2197449Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2197628Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2197765Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2197870Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2197964Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2198047Z >       sim = run_tardis(
2025-01-14T13:17:21.2198130Z             config_verysimple,
2025-01-14T13:17:21.2198219Z             atom_data=atomic_data,
2025-01-14T13:17:21.2198312Z             show_convergence_plots=False,
2025-01-14T13:17:21.2198393Z             log_level="CRITICAl",
2025-01-14T13:17:21.2198586Z         )
2025-01-14T13:17:21.2198590Z 
2025-01-14T13:17:21.2198727Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2198841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2198926Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2199017Z     simulation.run_convergence()
2025-01-14T13:17:21.2199132Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2199274Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2199367Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2199523Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2199630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2199716Z 
2025-01-14T13:17:21.2199981Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2200196Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2200420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2200699Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2200856Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2205788Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2205811Z 
2025-01-14T13:17:21.2205925Z     def initialize_transport_state(
2025-01-14T13:17:21.2206002Z         self,
2025-01-14T13:17:21.2206086Z         simulation_state,
2025-01-14T13:17:21.2206170Z         opacity_state,
2025-01-14T13:17:21.2206261Z         macro_atom_state,
2025-01-14T13:17:21.2206333Z         plasma,
2025-01-14T13:17:21.2206411Z         no_of_packets,
2025-01-14T13:17:21.2206492Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2206578Z         iteration=0,
2025-01-14T13:17:21.2206645Z     ):
2025-01-14T13:17:21.2206791Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2206892Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2206967Z         else:
2025-01-14T13:17:21.2207046Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2207117Z     
2025-01-14T13:17:21.2207262Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2207365Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2207433Z         )
2025-01-14T13:17:21.2207505Z     
2025-01-14T13:17:21.2207638Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2207760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2207920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2207998Z         else:
2025-01-14T13:17:21.2208086Z             continuum_state = None
2025-01-14T13:17:21.2208190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2208310Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2208401Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2208513Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2208614Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2208716Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2208809Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2208885Z         ).to_numba(
2025-01-14T13:17:21.2208963Z             macro_atom_state,
2025-01-14T13:17:21.2209056Z             self.line_interaction_type,
2025-01-14T13:17:21.2209124Z         )
2025-01-14T13:17:21.2209233Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2209518Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2209589Z         ]
2025-01-14T13:17:21.2209906Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2210082Z 
2025-01-14T13:17:21.2210243Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2210460Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-14T13:17:21.2210465Z 
2025-01-14T13:17:21.2211142Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2211497Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2211745Z 
2025-01-14T13:17:21.2211851Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2212002Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2212081Z         """
2025-01-14T13:17:21.2212231Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2212301Z     
2025-01-14T13:17:21.2212374Z         Parameters
2025-01-14T13:17:21.2212452Z         ----------
2025-01-14T13:17:21.2212598Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2212729Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2212845Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2212925Z             Atomic data.
2025-01-14T13:17:21.2212992Z     
2025-01-14T13:17:21.2213065Z         Returns
2025-01-14T13:17:21.2213137Z         -------
2025-01-14T13:17:21.2213247Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2213331Z             Simulation object.
2025-01-14T13:17:21.2213403Z         """
2025-01-14T13:17:21.2213559Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2213729Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2213854Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2213978Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2214118Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2214294Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2214433Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2214534Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2214636Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2214711Z >       sim = run_tardis(
2025-01-14T13:17:21.2214796Z             config_verysimple,
2025-01-14T13:17:21.2214884Z             atom_data=atomic_data,
2025-01-14T13:17:21.2214980Z             show_convergence_plots=False,
2025-01-14T13:17:21.2215066Z             log_level="CRITICAl",
2025-01-14T13:17:21.2215133Z         )
2025-01-14T13:17:21.2215141Z 
2025-01-14T13:17:21.2215289Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2215405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2215500Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2215588Z     simulation.run_convergence()
2025-01-14T13:17:21.2215708Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2215853Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2215955Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2216110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2216224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2216228Z 
2025-01-14T13:17:21.2216502Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2216702Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2217053Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2217327Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2217492Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2217630Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2217634Z 
2025-01-14T13:17:21.2217727Z     def initialize_transport_state(
2025-01-14T13:17:21.2217795Z         self,
2025-01-14T13:17:21.2217878Z         simulation_state,
2025-01-14T13:17:21.2217959Z         opacity_state,
2025-01-14T13:17:21.2218033Z         macro_atom_state,
2025-01-14T13:17:21.2218108Z         plasma,
2025-01-14T13:17:21.2218306Z         no_of_packets,
2025-01-14T13:17:21.2218394Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2218466Z         iteration=0,
2025-01-14T13:17:21.2218537Z     ):
2025-01-14T13:17:21.2218673Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2218773Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2218842Z         else:
2025-01-14T13:17:21.2218924Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2218991Z     
2025-01-14T13:17:21.2219129Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2219225Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2219297Z         )
2025-01-14T13:17:21.2219362Z     
2025-01-14T13:17:21.2219496Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2219614Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2219767Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2219847Z         else:
2025-01-14T13:17:21.2219929Z             continuum_state = None
2025-01-14T13:17:21.2220034Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2220140Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2220243Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2220350Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2220453Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2220544Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2220641Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2220712Z         ).to_numba(
2025-01-14T13:17:21.2220796Z             macro_atom_state,
2025-01-14T13:17:21.2220883Z             self.line_interaction_type,
2025-01-14T13:17:21.2220956Z         )
2025-01-14T13:17:21.2221061Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2221333Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2221410Z         ]
2025-01-14T13:17:21.2221853Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2221863Z 
2025-01-14T13:17:21.2222018Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2222215Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-14T13:17:21.2222220Z 
2025-01-14T13:17:21.2222891Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2223245Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2223249Z 
2025-01-14T13:17:21.2223337Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2223489Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2223557Z         """
2025-01-14T13:17:21.2223704Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2223916Z     
2025-01-14T13:17:21.2223997Z         Parameters
2025-01-14T13:17:21.2224071Z         ----------
2025-01-14T13:17:21.2224220Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2224340Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2224462Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2224536Z             Atomic data.
2025-01-14T13:17:21.2224606Z     
2025-01-14T13:17:21.2224679Z         Returns
2025-01-14T13:17:21.2224750Z         -------
2025-01-14T13:17:21.2224861Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2224942Z             Simulation object.
2025-01-14T13:17:21.2225015Z         """
2025-01-14T13:17:21.2225283Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2225461Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2225576Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2225715Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2225846Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2226030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2226162Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2226270Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2226365Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2226444Z >       sim = run_tardis(
2025-01-14T13:17:21.2226529Z             config_verysimple,
2025-01-14T13:17:21.2226610Z             atom_data=atomic_data,
2025-01-14T13:17:21.2226704Z             show_convergence_plots=False,
2025-01-14T13:17:21.2226790Z             log_level="CRITICAl",
2025-01-14T13:17:21.2226865Z         )
2025-01-14T13:17:21.2226869Z 
2025-01-14T13:17:21.2227006Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2227129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2227212Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2227301Z     simulation.run_convergence()
2025-01-14T13:17:21.2227413Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2227557Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2227650Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2227804Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2227914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2227918Z 
2025-01-14T13:17:21.2228180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2228388Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2228608Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2228888Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2229045Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2229186Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2229190Z 
2025-01-14T13:17:21.2229282Z     def initialize_transport_state(
2025-01-14T13:17:21.2229350Z         self,
2025-01-14T13:17:21.2229435Z         simulation_state,
2025-01-14T13:17:21.2229509Z         opacity_state,
2025-01-14T13:17:21.2229588Z         macro_atom_state,
2025-01-14T13:17:21.2229657Z         plasma,
2025-01-14T13:17:21.2229733Z         no_of_packets,
2025-01-14T13:17:21.2229812Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2229893Z         iteration=0,
2025-01-14T13:17:21.2229960Z     ):
2025-01-14T13:17:21.2230088Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2230272Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2230346Z         else:
2025-01-14T13:17:21.2230424Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2230496Z     
2025-01-14T13:17:21.2230626Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2230726Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2230797Z         )
2025-01-14T13:17:21.2230867Z     
2025-01-14T13:17:21.2230998Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2231109Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2231264Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2231333Z         else:
2025-01-14T13:17:21.2231419Z             continuum_state = None
2025-01-14T13:17:21.2231838Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2232029Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2232129Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2232253Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2232352Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2232448Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2232537Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2232612Z         ).to_numba(
2025-01-14T13:17:21.2232690Z             macro_atom_state,
2025-01-14T13:17:21.2232782Z             self.line_interaction_type,
2025-01-14T13:17:21.2232853Z         )
2025-01-14T13:17:21.2232953Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2233226Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2233293Z         ]
2025-01-14T13:17:21.2233607Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2233612Z 
2025-01-14T13:17:21.2233756Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2233959Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-14T13:17:21.2233964Z 
2025-01-14T13:17:21.2234621Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2234972Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2234976Z 
2025-01-14T13:17:21.2235069Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2235205Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2235282Z         """
2025-01-14T13:17:21.2235424Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2235495Z     
2025-01-14T13:17:21.2235571Z         Parameters
2025-01-14T13:17:21.2235648Z         ----------
2025-01-14T13:17:21.2235788Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2235914Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2236028Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2236110Z             Atomic data.
2025-01-14T13:17:21.2236182Z     
2025-01-14T13:17:21.2236253Z         Returns
2025-01-14T13:17:21.2236327Z         -------
2025-01-14T13:17:21.2236433Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2236515Z             Simulation object.
2025-01-14T13:17:21.2236582Z         """
2025-01-14T13:17:21.2236733Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2236903Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2237024Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2237147Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2237422Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2237596Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2237735Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2237839Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2237933Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2238013Z >       sim = run_tardis(
2025-01-14T13:17:21.2238092Z             config_verysimple,
2025-01-14T13:17:21.2238177Z             atom_data=atomic_data,
2025-01-14T13:17:21.2238267Z             show_convergence_plots=False,
2025-01-14T13:17:21.2238351Z             log_level="CRITICAl",
2025-01-14T13:17:21.2238529Z         )
2025-01-14T13:17:21.2238533Z 
2025-01-14T13:17:21.2238674Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2238783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2238878Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2238963Z     simulation.run_convergence()
2025-01-14T13:17:21.2239081Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2239217Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2239315Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2239471Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2239575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2239579Z 
2025-01-14T13:17:21.2239845Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2240042Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2240271Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2240541Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2240706Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2240841Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2240850Z 
2025-01-14T13:17:21.2240936Z     def initialize_transport_state(
2025-01-14T13:17:21.2241008Z         self,
2025-01-14T13:17:21.2241083Z         simulation_state,
2025-01-14T13:17:21.2241162Z         opacity_state,
2025-01-14T13:17:21.2241236Z         macro_atom_state,
2025-01-14T13:17:21.2241310Z         plasma,
2025-01-14T13:17:21.2241382Z         no_of_packets,
2025-01-14T13:17:21.2241468Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2241541Z         iteration=0,
2025-01-14T13:17:21.2241736Z     ):
2025-01-14T13:17:21.2241861Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2241960Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2242029Z         else:
2025-01-14T13:17:21.2242117Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2242182Z     
2025-01-14T13:17:21.2242317Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2242417Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2242484Z         )
2025-01-14T13:17:21.2242556Z     
2025-01-14T13:17:21.2242685Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2242805Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2242959Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2243036Z         else:
2025-01-14T13:17:21.2243118Z             continuum_state = None
2025-01-14T13:17:21.2243224Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2243343Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2243438Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2243544Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2243808Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2243903Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2244001Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2244076Z         ).to_numba(
2025-01-14T13:17:21.2244155Z             macro_atom_state,
2025-01-14T13:17:21.2244248Z             self.line_interaction_type,
2025-01-14T13:17:21.2244319Z         )
2025-01-14T13:17:21.2244427Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2244697Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2244769Z         ]
2025-01-14T13:17:21.2245074Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2245213Z 
2025-01-14T13:17:21.2245370Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2245579Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-14T13:17:21.2245583Z 
2025-01-14T13:17:21.2246250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2246603Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2246608Z 
2025-01-14T13:17:21.2246697Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2246842Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2246909Z         """
2025-01-14T13:17:21.2247064Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2247130Z     
2025-01-14T13:17:21.2247208Z         Parameters
2025-01-14T13:17:21.2247279Z         ----------
2025-01-14T13:17:21.2247433Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2247561Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2247680Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2247761Z             Atomic data.
2025-01-14T13:17:21.2247828Z     
2025-01-14T13:17:21.2247901Z         Returns
2025-01-14T13:17:21.2247970Z         -------
2025-01-14T13:17:21.2248080Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2248160Z             Simulation object.
2025-01-14T13:17:21.2248231Z         """
2025-01-14T13:17:21.2248392Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2248567Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2248685Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2248813Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2248944Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2249129Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2249268Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2249366Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2249464Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2249539Z >       sim = run_tardis(
2025-01-14T13:17:21.2249623Z             config_verysimple,
2025-01-14T13:17:21.2249703Z             atom_data=atomic_data,
2025-01-14T13:17:21.2249802Z             show_convergence_plots=False,
2025-01-14T13:17:21.2249881Z             log_level="CRITICAl",
2025-01-14T13:17:21.2249955Z         )
2025-01-14T13:17:21.2249960Z 
2025-01-14T13:17:21.2250098Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2250213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2250297Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2250493Z     simulation.run_convergence()
2025-01-14T13:17:21.2250613Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2250754Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2250850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2251000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2251110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2251114Z 
2025-01-14T13:17:21.2251375Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2251680Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2252022Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2252300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2252467Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2252603Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2252607Z 
2025-01-14T13:17:21.2252697Z     def initialize_transport_state(
2025-01-14T13:17:21.2252765Z         self,
2025-01-14T13:17:21.2252847Z         simulation_state,
2025-01-14T13:17:21.2252921Z         opacity_state,
2025-01-14T13:17:21.2253001Z         macro_atom_state,
2025-01-14T13:17:21.2253071Z         plasma,
2025-01-14T13:17:21.2253149Z         no_of_packets,
2025-01-14T13:17:21.2253230Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2253307Z         iteration=0,
2025-01-14T13:17:21.2253374Z     ):
2025-01-14T13:17:21.2253506Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2253606Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2253681Z         else:
2025-01-14T13:17:21.2253764Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2253836Z     
2025-01-14T13:17:21.2253972Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2254069Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2254141Z         )
2025-01-14T13:17:21.2254208Z     
2025-01-14T13:17:21.2254341Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2254452Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2254607Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2254676Z         else:
2025-01-14T13:17:21.2254763Z             continuum_state = None
2025-01-14T13:17:21.2254864Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2254976Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2255073Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2255185Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2255289Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2255385Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2255481Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2255553Z         ).to_numba(
2025-01-14T13:17:21.2255636Z             macro_atom_state,
2025-01-14T13:17:21.2255722Z             self.line_interaction_type,
2025-01-14T13:17:21.2255797Z         )
2025-01-14T13:17:21.2255897Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2256170Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2256237Z         ]
2025-01-14T13:17:21.2256541Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2256550Z 
2025-01-14T13:17:21.2256696Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2256896Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-14T13:17:21.2257045Z 
2025-01-14T13:17:21.2257712Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2258063Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2258067Z 
2025-01-14T13:17:21.2258161Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2258301Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2258373Z         """
2025-01-14T13:17:21.2258515Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2258675Z     
2025-01-14T13:17:21.2258755Z         Parameters
2025-01-14T13:17:21.2258826Z         ----------
2025-01-14T13:17:21.2258971Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2259099Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2259226Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2259301Z             Atomic data.
2025-01-14T13:17:21.2259371Z     
2025-01-14T13:17:21.2259439Z         Returns
2025-01-14T13:17:21.2259514Z         -------
2025-01-14T13:17:21.2259616Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2259701Z             Simulation object.
2025-01-14T13:17:21.2259769Z         """
2025-01-14T13:17:21.2259922Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2260090Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2260208Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2260337Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2260472Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2260656Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2260788Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2260891Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2260986Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2261069Z >       sim = run_tardis(
2025-01-14T13:17:21.2261150Z             config_verysimple,
2025-01-14T13:17:21.2261234Z             atom_data=atomic_data,
2025-01-14T13:17:21.2261324Z             show_convergence_plots=False,
2025-01-14T13:17:21.2261409Z             log_level="CRITICAl",
2025-01-14T13:17:21.2261475Z         )
2025-01-14T13:17:21.2261479Z 
2025-01-14T13:17:21.2261716Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2261831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2261919Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2262010Z     simulation.run_convergence()
2025-01-14T13:17:21.2262127Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2262273Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2262366Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2262521Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2262630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2262635Z 
2025-01-14T13:17:21.2262901Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2263101Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2263325Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2263604Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2263761Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2264028Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2264034Z 
2025-01-14T13:17:21.2264121Z     def initialize_transport_state(
2025-01-14T13:17:21.2264194Z         self,
2025-01-14T13:17:21.2264271Z         simulation_state,
2025-01-14T13:17:21.2264350Z         opacity_state,
2025-01-14T13:17:21.2264425Z         macro_atom_state,
2025-01-14T13:17:21.2264500Z         plasma,
2025-01-14T13:17:21.2264572Z         no_of_packets,
2025-01-14T13:17:21.2264658Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2264730Z         iteration=0,
2025-01-14T13:17:21.2264802Z     ):
2025-01-14T13:17:21.2264926Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2265025Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2265210Z         else:
2025-01-14T13:17:21.2265288Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2265358Z     
2025-01-14T13:17:21.2265490Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2265600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2265666Z         )
2025-01-14T13:17:21.2265737Z     
2025-01-14T13:17:21.2265864Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2265980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2266131Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2266203Z         else:
2025-01-14T13:17:21.2266288Z             continuum_state = None
2025-01-14T13:17:21.2266394Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2266498Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2266593Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2266707Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2266804Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2266900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2266995Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2267071Z         ).to_numba(
2025-01-14T13:17:21.2267149Z             macro_atom_state,
2025-01-14T13:17:21.2267242Z             self.line_interaction_type,
2025-01-14T13:17:21.2267309Z         )
2025-01-14T13:17:21.2267414Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2267680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2267753Z         ]
2025-01-14T13:17:21.2268050Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2268060Z 
2025-01-14T13:17:21.2268204Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2268409Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-14T13:17:21.2268413Z 
2025-01-14T13:17:21.2269069Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2269429Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2269434Z 
2025-01-14T13:17:21.2269523Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2269666Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2269732Z         """
2025-01-14T13:17:21.2269878Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2269950Z     
2025-01-14T13:17:21.2270022Z         Parameters
2025-01-14T13:17:21.2270106Z         ----------
2025-01-14T13:17:21.2270247Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2270373Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2270631Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2270710Z             Atomic data.
2025-01-14T13:17:21.2270778Z     
2025-01-14T13:17:21.2270852Z         Returns
2025-01-14T13:17:21.2270922Z         -------
2025-01-14T13:17:21.2271030Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2271109Z             Simulation object.
2025-01-14T13:17:21.2271181Z         """
2025-01-14T13:17:21.2271330Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2271505Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2271840Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2272021Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2272375Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2272553Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2272702Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2272800Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2272901Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2272976Z >       sim = run_tardis(
2025-01-14T13:17:21.2273063Z             config_verysimple,
2025-01-14T13:17:21.2273143Z             atom_data=atomic_data,
2025-01-14T13:17:21.2273238Z             show_convergence_plots=False,
2025-01-14T13:17:21.2273319Z             log_level="CRITICAl",
2025-01-14T13:17:21.2273391Z         )
2025-01-14T13:17:21.2273396Z 
2025-01-14T13:17:21.2273541Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2273653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2273747Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2273835Z     simulation.run_convergence()
2025-01-14T13:17:21.2273954Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2274101Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2274199Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2274348Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2274461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2274465Z 
2025-01-14T13:17:21.2274729Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2274937Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2275163Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2275437Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2275607Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2275743Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2275750Z 
2025-01-14T13:17:21.2275841Z     def initialize_transport_state(
2025-01-14T13:17:21.2275909Z         self,
2025-01-14T13:17:21.2275992Z         simulation_state,
2025-01-14T13:17:21.2276067Z         opacity_state,
2025-01-14T13:17:21.2276147Z         macro_atom_state,
2025-01-14T13:17:21.2276217Z         plasma,
2025-01-14T13:17:21.2276295Z         no_of_packets,
2025-01-14T13:17:21.2276377Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2276456Z         iteration=0,
2025-01-14T13:17:21.2276527Z     ):
2025-01-14T13:17:21.2276652Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2276755Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2276825Z         else:
2025-01-14T13:17:21.2276918Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2276985Z     
2025-01-14T13:17:21.2277122Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2277218Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2277463Z         )
2025-01-14T13:17:21.2277531Z     
2025-01-14T13:17:21.2277665Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2277777Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2277936Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2278003Z         else:
2025-01-14T13:17:21.2278089Z             continuum_state = None
2025-01-14T13:17:21.2278190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2278302Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2278397Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2278504Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2278699Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2278792Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2278888Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2278966Z         ).to_numba(
2025-01-14T13:17:21.2279049Z             macro_atom_state,
2025-01-14T13:17:21.2279135Z             self.line_interaction_type,
2025-01-14T13:17:21.2279207Z         )
2025-01-14T13:17:21.2279308Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2279585Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2279654Z         ]
2025-01-14T13:17:21.2279960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2279965Z 
2025-01-14T13:17:21.2280117Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2280317Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-14T13:17:21.2280326Z 
2025-01-14T13:17:21.2280996Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2281347Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2281352Z 
2025-01-14T13:17:21.2281443Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2281694Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2281768Z         """
2025-01-14T13:17:21.2281917Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2281984Z     
2025-01-14T13:17:21.2282062Z         Parameters
2025-01-14T13:17:21.2282136Z         ----------
2025-01-14T13:17:21.2282283Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2282410Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2282531Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2282614Z             Atomic data.
2025-01-14T13:17:21.2282687Z     
2025-01-14T13:17:21.2282757Z         Returns
2025-01-14T13:17:21.2282833Z         -------
2025-01-14T13:17:21.2282936Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2283019Z             Simulation object.
2025-01-14T13:17:21.2283087Z         """
2025-01-14T13:17:21.2283241Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2283419Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2283534Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2283664Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2283796Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2283979Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2284112Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2284365Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2284461Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2284542Z >       sim = run_tardis(
2025-01-14T13:17:21.2284624Z             config_verysimple,
2025-01-14T13:17:21.2284709Z             atom_data=atomic_data,
2025-01-14T13:17:21.2284799Z             show_convergence_plots=False,
2025-01-14T13:17:21.2284886Z             log_level="CRITICAl",
2025-01-14T13:17:21.2284959Z         )
2025-01-14T13:17:21.2284963Z 
2025-01-14T13:17:21.2285100Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2285216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2285301Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2285514Z     simulation.run_convergence()
2025-01-14T13:17:21.2285629Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2285776Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2285874Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2286030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2286137Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2286141Z 
2025-01-14T13:17:21.2286410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2286618Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2286839Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2287116Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2287279Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2287417Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2287422Z 
2025-01-14T13:17:21.2287512Z     def initialize_transport_state(
2025-01-14T13:17:21.2287587Z         self,
2025-01-14T13:17:21.2287664Z         simulation_state,
2025-01-14T13:17:21.2287745Z         opacity_state,
2025-01-14T13:17:21.2287823Z         macro_atom_state,
2025-01-14T13:17:21.2287898Z         plasma,
2025-01-14T13:17:21.2287970Z         no_of_packets,
2025-01-14T13:17:21.2288055Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2288133Z         iteration=0,
2025-01-14T13:17:21.2288200Z     ):
2025-01-14T13:17:21.2288328Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2288423Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2288496Z         else:
2025-01-14T13:17:21.2288574Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2288647Z     
2025-01-14T13:17:21.2288785Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2288885Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2288951Z         )
2025-01-14T13:17:21.2289025Z     
2025-01-14T13:17:21.2289153Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2289268Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2289422Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2289496Z         else:
2025-01-14T13:17:21.2289578Z             continuum_state = None
2025-01-14T13:17:21.2289681Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2289793Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2289883Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2289992Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2290090Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2290190Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2290281Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2290374Z         ).to_numba(
2025-01-14T13:17:21.2290564Z             macro_atom_state,
2025-01-14T13:17:21.2290661Z             self.line_interaction_type,
2025-01-14T13:17:21.2290738Z         )
2025-01-14T13:17:21.2290847Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2291122Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2291198Z         ]
2025-01-14T13:17:21.2291501Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2291505Z 
2025-01-14T13:17:21.2291746Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2291956Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-14T13:17:21.2291961Z 
2025-01-14T13:17:21.2292760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2293120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2293125Z 
2025-01-14T13:17:21.2293219Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2293358Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2293431Z         """
2025-01-14T13:17:21.2293574Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2293648Z     
2025-01-14T13:17:21.2293726Z         Parameters
2025-01-14T13:17:21.2293806Z         ----------
2025-01-14T13:17:21.2293949Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2294075Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2294195Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2294277Z             Atomic data.
2025-01-14T13:17:21.2294351Z     
2025-01-14T13:17:21.2294426Z         Returns
2025-01-14T13:17:21.2294497Z         -------
2025-01-14T13:17:21.2294605Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2294682Z             Simulation object.
2025-01-14T13:17:21.2294755Z         """
2025-01-14T13:17:21.2294912Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2295083Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2295202Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2295325Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2295464Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2295639Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2295780Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2295878Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2295982Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2296057Z >       sim = run_tardis(
2025-01-14T13:17:21.2296142Z             config_verysimple,
2025-01-14T13:17:21.2296225Z             atom_data=atomic_data,
2025-01-14T13:17:21.2296322Z             show_convergence_plots=False,
2025-01-14T13:17:21.2296406Z             log_level="CRITICAl",
2025-01-14T13:17:21.2296474Z         )
2025-01-14T13:17:21.2296479Z 
2025-01-14T13:17:21.2296620Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2296728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2296819Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2296904Z     simulation.run_convergence()
2025-01-14T13:17:21.2297029Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2297171Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2297272Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2297547Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2297664Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2297668Z 
2025-01-14T13:17:21.2297938Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2298140Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2298367Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2298637Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2298800Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2299012Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2299017Z 
2025-01-14T13:17:21.2299110Z     def initialize_transport_state(
2025-01-14T13:17:21.2299180Z         self,
2025-01-14T13:17:21.2299268Z         simulation_state,
2025-01-14T13:17:21.2299345Z         opacity_state,
2025-01-14T13:17:21.2299426Z         macro_atom_state,
2025-01-14T13:17:21.2299503Z         plasma,
2025-01-14T13:17:21.2299578Z         no_of_packets,
2025-01-14T13:17:21.2299665Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2299737Z         iteration=0,
2025-01-14T13:17:21.2299810Z     ):
2025-01-14T13:17:21.2299934Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2300038Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2300111Z         else:
2025-01-14T13:17:21.2300194Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2300260Z     
2025-01-14T13:17:21.2300398Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2300500Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2300575Z         )
2025-01-14T13:17:21.2300642Z     
2025-01-14T13:17:21.2300777Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2300893Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2301051Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2301127Z         else:
2025-01-14T13:17:21.2301210Z             continuum_state = None
2025-01-14T13:17:21.2301317Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2301425Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2301525Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2301730Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2301837Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2301934Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2302037Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2302108Z         ).to_numba(
2025-01-14T13:17:21.2302194Z             macro_atom_state,
2025-01-14T13:17:21.2302283Z             self.line_interaction_type,
2025-01-14T13:17:21.2302364Z         )
2025-01-14T13:17:21.2302467Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2302745Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2302822Z         ]
2025-01-14T13:17:21.2303121Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2303125Z 
2025-01-14T13:17:21.2303280Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2303481Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-14T13:17:21.2303486Z 
2025-01-14T13:17:21.2304158Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2304637Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2304648Z 
2025-01-14T13:17:21.2304738Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2304881Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2304948Z         """
2025-01-14T13:17:21.2305095Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2305162Z     
2025-01-14T13:17:21.2305240Z         Parameters
2025-01-14T13:17:21.2305311Z         ----------
2025-01-14T13:17:21.2305458Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2305579Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2305807Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2305881Z             Atomic data.
2025-01-14T13:17:21.2305952Z     
2025-01-14T13:17:21.2306021Z         Returns
2025-01-14T13:17:21.2306102Z         -------
2025-01-14T13:17:21.2306214Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2306294Z             Simulation object.
2025-01-14T13:17:21.2306368Z         """
2025-01-14T13:17:21.2306518Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2306691Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2306805Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2306934Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2307066Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2307247Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2307378Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2307489Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2307585Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2307673Z >       sim = run_tardis(
2025-01-14T13:17:21.2307761Z             config_verysimple,
2025-01-14T13:17:21.2307842Z             atom_data=atomic_data,
2025-01-14T13:17:21.2307937Z             show_convergence_plots=False,
2025-01-14T13:17:21.2308018Z             log_level="CRITICAl",
2025-01-14T13:17:21.2308092Z         )
2025-01-14T13:17:21.2308096Z 
2025-01-14T13:17:21.2308233Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2308351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2308436Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2308528Z     simulation.run_convergence()
2025-01-14T13:17:21.2308642Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2308787Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2308884Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2309046Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2309163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2309167Z 
2025-01-14T13:17:21.2309429Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2309635Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2309857Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2310136Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2310294Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2310437Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2310445Z 
2025-01-14T13:17:21.2310533Z     def initialize_transport_state(
2025-01-14T13:17:21.2310611Z         self,
2025-01-14T13:17:21.2310696Z         simulation_state,
2025-01-14T13:17:21.2310869Z         opacity_state,
2025-01-14T13:17:21.2310951Z         macro_atom_state,
2025-01-14T13:17:21.2311025Z         plasma,
2025-01-14T13:17:21.2311106Z         no_of_packets,
2025-01-14T13:17:21.2311189Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2311269Z         iteration=0,
2025-01-14T13:17:21.2311336Z     ):
2025-01-14T13:17:21.2311466Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2311724Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2311847Z         else:
2025-01-14T13:17:21.2311965Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2312039Z     
2025-01-14T13:17:21.2312175Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2312277Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2312476Z         )
2025-01-14T13:17:21.2312551Z     
2025-01-14T13:17:21.2312678Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2312800Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2312967Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2313037Z         else:
2025-01-14T13:17:21.2313126Z             continuum_state = None
2025-01-14T13:17:21.2313226Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2313339Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2313432Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2313543Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2313640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2313739Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2313829Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2313913Z         ).to_numba(
2025-01-14T13:17:21.2313993Z             macro_atom_state,
2025-01-14T13:17:21.2314087Z             self.line_interaction_type,
2025-01-14T13:17:21.2314164Z         )
2025-01-14T13:17:21.2314269Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2314547Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2314616Z         ]
2025-01-14T13:17:21.2314914Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2314918Z 
2025-01-14T13:17:21.2315062Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2315267Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-14T13:17:21.2315272Z 
2025-01-14T13:17:21.2315931Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2316287Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2316295Z 
2025-01-14T13:17:21.2316387Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2316524Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2316599Z         """
2025-01-14T13:17:21.2316741Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2316816Z     
2025-01-14T13:17:21.2316891Z         Parameters
2025-01-14T13:17:21.2316972Z         ----------
2025-01-14T13:17:21.2317114Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2317243Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2317355Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2317442Z             Atomic data.
2025-01-14T13:17:21.2317513Z     
2025-01-14T13:17:21.2317582Z         Returns
2025-01-14T13:17:21.2317657Z         -------
2025-01-14T13:17:21.2317763Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2317988Z             Simulation object.
2025-01-14T13:17:21.2318055Z         """
2025-01-14T13:17:21.2318209Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2318379Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2318497Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2318620Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2318762Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2318937Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2319073Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2319172Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2319383Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2319465Z >       sim = run_tardis(
2025-01-14T13:17:21.2319547Z             config_verysimple,
2025-01-14T13:17:21.2319645Z             atom_data=atomic_data,
2025-01-14T13:17:21.2319738Z             show_convergence_plots=False,
2025-01-14T13:17:21.2319824Z             log_level="CRITICAl",
2025-01-14T13:17:21.2319893Z         )
2025-01-14T13:17:21.2319897Z 
2025-01-14T13:17:21.2320038Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2320148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2320237Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2320322Z     simulation.run_convergence()
2025-01-14T13:17:21.2320443Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2320584Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2320683Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2320847Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2320954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2320965Z 
2025-01-14T13:17:21.2321232Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2321436Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2321777Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2322050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2322212Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2322347Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2322357Z 
2025-01-14T13:17:21.2322445Z     def initialize_transport_state(
2025-01-14T13:17:21.2322523Z         self,
2025-01-14T13:17:21.2322601Z         simulation_state,
2025-01-14T13:17:21.2322682Z         opacity_state,
2025-01-14T13:17:21.2322757Z         macro_atom_state,
2025-01-14T13:17:21.2322839Z         plasma,
2025-01-14T13:17:21.2322912Z         no_of_packets,
2025-01-14T13:17:21.2322997Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2323069Z         iteration=0,
2025-01-14T13:17:21.2323144Z     ):
2025-01-14T13:17:21.2323268Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2323370Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2323442Z         else:
2025-01-14T13:17:21.2323529Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2323596Z     
2025-01-14T13:17:21.2323737Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2323832Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2323907Z         )
2025-01-14T13:17:21.2323979Z     
2025-01-14T13:17:21.2324111Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2324229Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2324381Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2324593Z         else:
2025-01-14T13:17:21.2324677Z             continuum_state = None
2025-01-14T13:17:21.2324786Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2324894Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2324994Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2325102Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2325206Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2325297Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2325398Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2325468Z         ).to_numba(
2025-01-14T13:17:21.2325554Z             macro_atom_state,
2025-01-14T13:17:21.2325758Z             self.line_interaction_type,
2025-01-14T13:17:21.2325831Z         )
2025-01-14T13:17:21.2325937Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2326203Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2326281Z         ]
2025-01-14T13:17:21.2326579Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2326584Z 
2025-01-14T13:17:21.2326733Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2326933Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-14T13:17:21.2326938Z 
2025-01-14T13:17:21.2327609Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2327962Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2327971Z 
2025-01-14T13:17:21.2328057Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2328199Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2328266Z         """
2025-01-14T13:17:21.2328413Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2328479Z     
2025-01-14T13:17:21.2328561Z         Parameters
2025-01-14T13:17:21.2328632Z         ----------
2025-01-14T13:17:21.2328778Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2328899Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2329018Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2329098Z             Atomic data.
2025-01-14T13:17:21.2329165Z     
2025-01-14T13:17:21.2329244Z         Returns
2025-01-14T13:17:21.2329313Z         -------
2025-01-14T13:17:21.2329422Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2329500Z             Simulation object.
2025-01-14T13:17:21.2329580Z         """
2025-01-14T13:17:21.2329728Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2329902Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2330016Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2330143Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2330275Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2330452Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2330584Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2330690Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2330791Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2330870Z >       sim = run_tardis(
2025-01-14T13:17:21.2330956Z             config_verysimple,
2025-01-14T13:17:21.2331037Z             atom_data=atomic_data,
2025-01-14T13:17:21.2331232Z             show_convergence_plots=False,
2025-01-14T13:17:21.2331312Z             log_level="CRITICAl",
2025-01-14T13:17:21.2331388Z         )
2025-01-14T13:17:21.2331392Z 
2025-01-14T13:17:21.2331531Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2331754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2331841Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2331932Z     simulation.run_convergence()
2025-01-14T13:17:21.2332046Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2332193Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2332291Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2332442Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2332674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2332678Z 
2025-01-14T13:17:21.2332955Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2333168Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2333388Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2333668Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2333827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2333968Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2333973Z 
2025-01-14T13:17:21.2334065Z     def initialize_transport_state(
2025-01-14T13:17:21.2334134Z         self,
2025-01-14T13:17:21.2334238Z         simulation_state,
2025-01-14T13:17:21.2334312Z         opacity_state,
2025-01-14T13:17:21.2334394Z         macro_atom_state,
2025-01-14T13:17:21.2334466Z         plasma,
2025-01-14T13:17:21.2334545Z         no_of_packets,
2025-01-14T13:17:21.2334632Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2334710Z         iteration=0,
2025-01-14T13:17:21.2334777Z     ):
2025-01-14T13:17:21.2334909Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2335003Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2335077Z         else:
2025-01-14T13:17:21.2335156Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2335227Z     
2025-01-14T13:17:21.2335361Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2335463Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2335535Z         )
2025-01-14T13:17:21.2335602Z     
2025-01-14T13:17:21.2335734Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2335851Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2336006Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2336074Z         else:
2025-01-14T13:17:21.2336164Z             continuum_state = None
2025-01-14T13:17:21.2336265Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2336376Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2336469Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2336579Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2336676Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2336772Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2336868Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2336939Z         ).to_numba(
2025-01-14T13:17:21.2337025Z             macro_atom_state,
2025-01-14T13:17:21.2337112Z             self.line_interaction_type,
2025-01-14T13:17:21.2337187Z         )
2025-01-14T13:17:21.2337288Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2337560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2337746Z         ]
2025-01-14T13:17:21.2338050Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2338055Z 
2025-01-14T13:17:21.2338201Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2338406Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-14T13:17:21.2338411Z 
2025-01-14T13:17:21.2339078Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2339422Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2339510Z 
2025-01-14T13:17:21.2339604Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2339750Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2339823Z         """
2025-01-14T13:17:21.2339965Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2340035Z     
2025-01-14T13:17:21.2340109Z         Parameters
2025-01-14T13:17:21.2340186Z         ----------
2025-01-14T13:17:21.2340328Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2340456Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2340574Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2340648Z             Atomic data.
2025-01-14T13:17:21.2340718Z     
2025-01-14T13:17:21.2340787Z         Returns
2025-01-14T13:17:21.2340861Z         -------
2025-01-14T13:17:21.2340970Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2341056Z             Simulation object.
2025-01-14T13:17:21.2341123Z         """
2025-01-14T13:17:21.2341275Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2341450Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2341663Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2341788Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2341926Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2342098Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2342233Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2342340Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2342433Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2342512Z >       sim = run_tardis(
2025-01-14T13:17:21.2342596Z             config_verysimple,
2025-01-14T13:17:21.2342681Z             atom_data=atomic_data,
2025-01-14T13:17:21.2342770Z             show_convergence_plots=False,
2025-01-14T13:17:21.2342858Z             log_level="CRITICAl",
2025-01-14T13:17:21.2342925Z         )
2025-01-14T13:17:21.2342929Z 
2025-01-14T13:17:21.2343069Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2343178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2343266Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2343358Z     simulation.run_convergence()
2025-01-14T13:17:21.2343471Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2343614Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2343706Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2343862Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2343968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2343977Z 
2025-01-14T13:17:21.2344246Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2344592Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2344815Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2345084Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2345245Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2345385Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2345389Z 
2025-01-14T13:17:21.2345475Z     def initialize_transport_state(
2025-01-14T13:17:21.2345547Z         self,
2025-01-14T13:17:21.2345625Z         simulation_state,
2025-01-14T13:17:21.2345705Z         opacity_state,
2025-01-14T13:17:21.2345892Z         macro_atom_state,
2025-01-14T13:17:21.2345968Z         plasma,
2025-01-14T13:17:21.2346041Z         no_of_packets,
2025-01-14T13:17:21.2346126Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2346205Z         iteration=0,
2025-01-14T13:17:21.2346276Z     ):
2025-01-14T13:17:21.2346400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2346503Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2346572Z         else:
2025-01-14T13:17:21.2346654Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2346725Z     
2025-01-14T13:17:21.2346856Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2346957Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2347023Z         )
2025-01-14T13:17:21.2347095Z     
2025-01-14T13:17:21.2347222Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2347338Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2347494Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2347566Z         else:
2025-01-14T13:17:21.2347647Z             continuum_state = None
2025-01-14T13:17:21.2347760Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2347866Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2347962Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2348064Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2348165Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2348263Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2348354Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2348430Z         ).to_numba(
2025-01-14T13:17:21.2348507Z             macro_atom_state,
2025-01-14T13:17:21.2348598Z             self.line_interaction_type,
2025-01-14T13:17:21.2348665Z         )
2025-01-14T13:17:21.2348775Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2349047Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2349122Z         ]
2025-01-14T13:17:21.2349426Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2349430Z 
2025-01-14T13:17:21.2349581Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2349870Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2349881Z 
2025-01-14T13:17:21.2350552Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2350912Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2350921Z 
2025-01-14T13:17:21.2351010Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2351169Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2351367Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2351700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2351855Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2351971Z >       sim.run_final()
2025-01-14T13:17:21.2351978Z 
2025-01-14T13:17:21.2352070Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2352181Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2352287Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2352431Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2352531Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2352684Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2352933Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2352938Z 
2025-01-14T13:17:21.2353211Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2353419Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2353646Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2353918Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2354083Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2354220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2354224Z 
2025-01-14T13:17:21.2354315Z     def initialize_transport_state(
2025-01-14T13:17:21.2354384Z         self,
2025-01-14T13:17:21.2354471Z         simulation_state,
2025-01-14T13:17:21.2354546Z         opacity_state,
2025-01-14T13:17:21.2354627Z         macro_atom_state,
2025-01-14T13:17:21.2354697Z         plasma,
2025-01-14T13:17:21.2354777Z         no_of_packets,
2025-01-14T13:17:21.2354863Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2354940Z         iteration=0,
2025-01-14T13:17:21.2355014Z     ):
2025-01-14T13:17:21.2355142Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2355244Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2355313Z         else:
2025-01-14T13:17:21.2355396Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2355463Z     
2025-01-14T13:17:21.2355601Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2355698Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2355772Z         )
2025-01-14T13:17:21.2355838Z     
2025-01-14T13:17:21.2355970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2356087Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2356243Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2356312Z         else:
2025-01-14T13:17:21.2356403Z             continuum_state = None
2025-01-14T13:17:21.2356503Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2356615Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2356713Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2356819Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2356923Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2357015Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2357111Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2357182Z         ).to_numba(
2025-01-14T13:17:21.2357274Z             macro_atom_state,
2025-01-14T13:17:21.2357373Z             self.line_interaction_type,
2025-01-14T13:17:21.2357470Z         )
2025-01-14T13:17:21.2357571Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2357843Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2358064Z         ]
2025-01-14T13:17:21.2358370Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2358374Z 
2025-01-14T13:17:21.2358525Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2358806Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2358811Z 
2025-01-14T13:17:21.2359482Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2359911Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2359916Z 
2025-01-14T13:17:21.2360013Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2360178Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2360274Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2360454Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2360541Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2360624Z >       sim.run_final()
2025-01-14T13:17:21.2360628Z 
2025-01-14T13:17:21.2360709Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2360823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2360921Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2361066Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2361164Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2361321Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2361433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2361443Z 
2025-01-14T13:17:21.2361820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2362034Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2362255Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2362532Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2362689Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2362829Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2362833Z 
2025-01-14T13:17:21.2362919Z     def initialize_transport_state(
2025-01-14T13:17:21.2362998Z         self,
2025-01-14T13:17:21.2363081Z         simulation_state,
2025-01-14T13:17:21.2363156Z         opacity_state,
2025-01-14T13:17:21.2363239Z         macro_atom_state,
2025-01-14T13:17:21.2363314Z         plasma,
2025-01-14T13:17:21.2363391Z         no_of_packets,
2025-01-14T13:17:21.2363471Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2363547Z         iteration=0,
2025-01-14T13:17:21.2363613Z     ):
2025-01-14T13:17:21.2363740Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2363833Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2363908Z         else:
2025-01-14T13:17:21.2363986Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2364060Z     
2025-01-14T13:17:21.2364193Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2364296Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2364364Z         )
2025-01-14T13:17:21.2364436Z     
2025-01-14T13:17:21.2364569Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2364688Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2364846Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2365040Z         else:
2025-01-14T13:17:21.2365129Z             continuum_state = None
2025-01-14T13:17:21.2365228Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2365340Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2365430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2365540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2365636Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2365733Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2365822Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2365900Z         ).to_numba(
2025-01-14T13:17:21.2365977Z             macro_atom_state,
2025-01-14T13:17:21.2366174Z             self.line_interaction_type,
2025-01-14T13:17:21.2366241Z         )
2025-01-14T13:17:21.2366347Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2366630Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2366697Z         ]
2025-01-14T13:17:21.2367000Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2367005Z 
2025-01-14T13:17:21.2367152Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2367445Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2367450Z 
2025-01-14T13:17:21.2368102Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2368456Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2368465Z 
2025-01-14T13:17:21.2368557Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2368707Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2368807Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2368979Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2369071Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2369145Z >       sim.run_final()
2025-01-14T13:17:21.2369150Z 
2025-01-14T13:17:21.2369235Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2369342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2369445Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2369590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2369689Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2369844Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2369953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2369957Z 
2025-01-14T13:17:21.2370225Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2370427Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2370658Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2370937Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2371099Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2371238Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2371246Z 
2025-01-14T13:17:21.2371331Z     def initialize_transport_state(
2025-01-14T13:17:21.2371405Z         self,
2025-01-14T13:17:21.2371481Z         simulation_state,
2025-01-14T13:17:21.2371824Z         opacity_state,
2025-01-14T13:17:21.2371904Z         macro_atom_state,
2025-01-14T13:17:21.2371980Z         plasma,
2025-01-14T13:17:21.2372054Z         no_of_packets,
2025-01-14T13:17:21.2372163Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2372236Z         iteration=0,
2025-01-14T13:17:21.2372312Z     ):
2025-01-14T13:17:21.2372438Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2372536Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2372604Z         else:
2025-01-14T13:17:21.2372688Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2372754Z     
2025-01-14T13:17:21.2372891Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2372992Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2373174Z         )
2025-01-14T13:17:21.2373245Z     
2025-01-14T13:17:21.2373371Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2373488Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2373644Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2373717Z         else:
2025-01-14T13:17:21.2373798Z             continuum_state = None
2025-01-14T13:17:21.2373901Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2374009Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2374103Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2374208Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2374311Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2374409Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2374498Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2374578Z         ).to_numba(
2025-01-14T13:17:21.2374654Z             macro_atom_state,
2025-01-14T13:17:21.2374748Z             self.line_interaction_type,
2025-01-14T13:17:21.2374816Z         )
2025-01-14T13:17:21.2374925Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2375193Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2375265Z         ]
2025-01-14T13:17:21.2375562Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2375568Z 
2025-01-14T13:17:21.2375718Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2375960Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[None-packet_in_nu] _
2025-01-14T13:17:21.2375970Z 
2025-01-14T13:17:21.2376625Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2376977Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2376986Z 
2025-01-14T13:17:21.2377075Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2377231Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2377327Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2377504Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2377590Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2377669Z >       sim.run_final()
2025-01-14T13:17:21.2377673Z 
2025-01-14T13:17:21.2377757Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2377864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2377964Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2378109Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2378206Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2378474Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2378587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2378591Z 
2025-01-14T13:17:21.2378851Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2383652Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2383941Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2384247Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2384428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2384746Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2384752Z 
2025-01-14T13:17:21.2384849Z     def initialize_transport_state(
2025-01-14T13:17:21.2384919Z         self,
2025-01-14T13:17:21.2385009Z         simulation_state,
2025-01-14T13:17:21.2385083Z         opacity_state,
2025-01-14T13:17:21.2385165Z         macro_atom_state,
2025-01-14T13:17:21.2385236Z         plasma,
2025-01-14T13:17:21.2385315Z         no_of_packets,
2025-01-14T13:17:21.2385398Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2385478Z         iteration=0,
2025-01-14T13:17:21.2385544Z     ):
2025-01-14T13:17:21.2385682Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2385785Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2385854Z         else:
2025-01-14T13:17:21.2385937Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2386003Z     
2025-01-14T13:17:21.2386148Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2386251Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2386323Z         )
2025-01-14T13:17:21.2386388Z     
2025-01-14T13:17:21.2386525Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2386646Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2386807Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2386876Z         else:
2025-01-14T13:17:21.2386964Z             continuum_state = None
2025-01-14T13:17:21.2387065Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2387177Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2387267Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2387377Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2387481Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2387574Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2387673Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2387743Z         ).to_numba(
2025-01-14T13:17:21.2387824Z             macro_atom_state,
2025-01-14T13:17:21.2387911Z             self.line_interaction_type,
2025-01-14T13:17:21.2387987Z         )
2025-01-14T13:17:21.2388086Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2388364Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2388431Z         ]
2025-01-14T13:17:21.2388743Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2388748Z 
2025-01-14T13:17:21.2388904Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2389185Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2389190Z 
2025-01-14T13:17:21.2389866Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2390336Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2390342Z 
2025-01-14T13:17:21.2390438Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2390594Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2390699Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2390879Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2390966Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2391044Z >       sim.run_final()
2025-01-14T13:17:21.2391049Z 
2025-01-14T13:17:21.2391129Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2391248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2391431Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2391716Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2391897Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2392073Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2392185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2392194Z 
2025-01-14T13:17:21.2392457Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2392665Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2392887Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2393164Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2393335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2393477Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2393481Z 
2025-01-14T13:17:21.2393574Z     def initialize_transport_state(
2025-01-14T13:17:21.2393650Z         self,
2025-01-14T13:17:21.2393728Z         simulation_state,
2025-01-14T13:17:21.2393809Z         opacity_state,
2025-01-14T13:17:21.2393885Z         macro_atom_state,
2025-01-14T13:17:21.2393960Z         plasma,
2025-01-14T13:17:21.2394038Z         no_of_packets,
2025-01-14T13:17:21.2394119Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2394197Z         iteration=0,
2025-01-14T13:17:21.2394263Z     ):
2025-01-14T13:17:21.2394396Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2394492Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2394565Z         else:
2025-01-14T13:17:21.2394643Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2394714Z     
2025-01-14T13:17:21.2394855Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2394957Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2395025Z         )
2025-01-14T13:17:21.2395099Z     
2025-01-14T13:17:21.2395228Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2395348Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2395500Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2395574Z         else:
2025-01-14T13:17:21.2395661Z             continuum_state = None
2025-01-14T13:17:21.2395761Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2395873Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2395963Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2396073Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2396171Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2396276Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2396366Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2396442Z         ).to_numba(
2025-01-14T13:17:21.2396645Z             macro_atom_state,
2025-01-14T13:17:21.2396738Z             self.line_interaction_type,
2025-01-14T13:17:21.2396805Z         )
2025-01-14T13:17:21.2396911Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2397181Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2397254Z         ]
2025-01-14T13:17:21.2397560Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2397565Z 
2025-01-14T13:17:21.2397715Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2397997Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2398135Z 
2025-01-14T13:17:21.2398800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2399159Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2399164Z 
2025-01-14T13:17:21.2399259Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2399413Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2399517Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2399691Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2399783Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2399859Z >       sim.run_final()
2025-01-14T13:17:21.2399863Z 
2025-01-14T13:17:21.2399954Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2400063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2400167Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2400312Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2400413Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2400571Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2400677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2400681Z 
2025-01-14T13:17:21.2400952Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2401154Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2401378Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2401749Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2401919Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2402055Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2402069Z 
2025-01-14T13:17:21.2402156Z     def initialize_transport_state(
2025-01-14T13:17:21.2402230Z         self,
2025-01-14T13:17:21.2402306Z         simulation_state,
2025-01-14T13:17:21.2402384Z         opacity_state,
2025-01-14T13:17:21.2402461Z         macro_atom_state,
2025-01-14T13:17:21.2402535Z         plasma,
2025-01-14T13:17:21.2402607Z         no_of_packets,
2025-01-14T13:17:21.2402693Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2402766Z         iteration=0,
2025-01-14T13:17:21.2402838Z     ):
2025-01-14T13:17:21.2402962Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2403060Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2403128Z         else:
2025-01-14T13:17:21.2403214Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2403281Z     
2025-01-14T13:17:21.2403423Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2403519Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2403718Z         )
2025-01-14T13:17:21.2403790Z     
2025-01-14T13:17:21.2403918Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2404035Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2404188Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2404261Z         else:
2025-01-14T13:17:21.2404342Z             continuum_state = None
2025-01-14T13:17:21.2404446Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2404553Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2404647Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2404752Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2404967Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2405061Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2405155Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2405231Z         ).to_numba(
2025-01-14T13:17:21.2405314Z             macro_atom_state,
2025-01-14T13:17:21.2405408Z             self.line_interaction_type,
2025-01-14T13:17:21.2405474Z         )
2025-01-14T13:17:21.2405581Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2405850Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2405923Z         ]
2025-01-14T13:17:21.2406220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2406226Z 
2025-01-14T13:17:21.2406377Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2406654Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2406663Z 
2025-01-14T13:17:21.2407331Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2407686Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2407690Z 
2025-01-14T13:17:21.2407778Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2407932Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2408027Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2408206Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2408293Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2408378Z >       sim.run_final()
2025-01-14T13:17:21.2408382Z 
2025-01-14T13:17:21.2408467Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2408575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2408680Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2408817Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2408916Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2409068Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2409179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2409184Z 
2025-01-14T13:17:21.2409445Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2409651Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2409872Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2410155Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2410316Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2410542Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2410547Z 
2025-01-14T13:17:21.2410639Z     def initialize_transport_state(
2025-01-14T13:17:21.2410708Z         self,
2025-01-14T13:17:21.2410789Z         simulation_state,
2025-01-14T13:17:21.2410864Z         opacity_state,
2025-01-14T13:17:21.2410948Z         macro_atom_state,
2025-01-14T13:17:21.2411018Z         plasma,
2025-01-14T13:17:21.2411096Z         no_of_packets,
2025-01-14T13:17:21.2411178Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2411256Z         iteration=0,
2025-01-14T13:17:21.2411322Z     ):
2025-01-14T13:17:21.2411450Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2411543Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2411853Z         else:
2025-01-14T13:17:21.2411937Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2412004Z     
2025-01-14T13:17:21.2412145Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2412244Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2412318Z         )
2025-01-14T13:17:21.2412385Z     
2025-01-14T13:17:21.2412517Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2412626Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2412781Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2412849Z         else:
2025-01-14T13:17:21.2412935Z             continuum_state = None
2025-01-14T13:17:21.2413035Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2413144Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2413236Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2413352Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2413454Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2413547Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2413646Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2413716Z         ).to_numba(
2025-01-14T13:17:21.2413799Z             macro_atom_state,
2025-01-14T13:17:21.2413886Z             self.line_interaction_type,
2025-01-14T13:17:21.2413959Z         )
2025-01-14T13:17:21.2414060Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2414330Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2414397Z         ]
2025-01-14T13:17:21.2414703Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2414709Z 
2025-01-14T13:17:21.2414855Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2415107Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-None-packet_in_nu] _
2025-01-14T13:17:21.2415112Z 
2025-01-14T13:17:21.2415775Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2416123Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2416128Z 
2025-01-14T13:17:21.2416220Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2416372Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2416471Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2416647Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2416738Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2416818Z >       sim.run_final()
2025-01-14T13:17:21.2416822Z 
2025-01-14T13:17:21.2416903Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2417014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2417231Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2417375Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2417469Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2417623Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2417726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2417731Z 
2025-01-14T13:17:21.2417997Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2418201Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2418498Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2418775Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2418939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2419080Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2419085Z 
2025-01-14T13:17:21.2419171Z     def initialize_transport_state(
2025-01-14T13:17:21.2419248Z         self,
2025-01-14T13:17:21.2419324Z         simulation_state,
2025-01-14T13:17:21.2419406Z         opacity_state,
2025-01-14T13:17:21.2419480Z         macro_atom_state,
2025-01-14T13:17:21.2419553Z         plasma,
2025-01-14T13:17:21.2419625Z         no_of_packets,
2025-01-14T13:17:21.2419710Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2419790Z         iteration=0,
2025-01-14T13:17:21.2419857Z     ):
2025-01-14T13:17:21.2419985Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2420082Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2420155Z         else:
2025-01-14T13:17:21.2420232Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2420308Z     
2025-01-14T13:17:21.2420440Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2420540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2420608Z         )
2025-01-14T13:17:21.2420680Z     
2025-01-14T13:17:21.2420804Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2420918Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2421067Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2421142Z         else:
2025-01-14T13:17:21.2421230Z             continuum_state = None
2025-01-14T13:17:21.2421328Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2421438Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2421531Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2421731Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2421830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2421932Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2422021Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2422097Z         ).to_numba(
2025-01-14T13:17:21.2422175Z             macro_atom_state,
2025-01-14T13:17:21.2422267Z             self.line_interaction_type,
2025-01-14T13:17:21.2422334Z         )
2025-01-14T13:17:21.2422438Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2422705Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2422778Z         ]
2025-01-14T13:17:21.2423077Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2423088Z 
2025-01-14T13:17:21.2423236Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2423536Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2423658Z 
2025-01-14T13:17:21.2424319Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2424667Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2424672Z 
2025-01-14T13:17:21.2424763Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2424910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2425008Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2425179Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2425398Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2425472Z >       sim.run_final()
2025-01-14T13:17:21.2425483Z 
2025-01-14T13:17:21.2425567Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2425674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2425775Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2425916Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2426013Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2426168Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2426272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2426276Z 
2025-01-14T13:17:21.2426541Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2426737Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2426964Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2427232Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2427398Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2427533Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2427537Z 
2025-01-14T13:17:21.2427630Z     def initialize_transport_state(
2025-01-14T13:17:21.2427704Z         self,
2025-01-14T13:17:21.2427780Z         simulation_state,
2025-01-14T13:17:21.2427859Z         opacity_state,
2025-01-14T13:17:21.2427934Z         macro_atom_state,
2025-01-14T13:17:21.2428009Z         plasma,
2025-01-14T13:17:21.2428081Z         no_of_packets,
2025-01-14T13:17:21.2428166Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2428238Z         iteration=0,
2025-01-14T13:17:21.2428315Z     ):
2025-01-14T13:17:21.2428436Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2428535Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2428604Z         else:
2025-01-14T13:17:21.2428692Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2428758Z     
2025-01-14T13:17:21.2428896Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2428995Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2429068Z         )
2025-01-14T13:17:21.2429141Z     
2025-01-14T13:17:21.2429266Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2429380Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2429529Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2429603Z         else:
2025-01-14T13:17:21.2429683Z             continuum_state = None
2025-01-14T13:17:21.2429787Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2429895Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2429989Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2430092Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2430287Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2430379Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2430475Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2430546Z         ).to_numba(
2025-01-14T13:17:21.2430628Z             macro_atom_state,
2025-01-14T13:17:21.2430719Z             self.line_interaction_type,
2025-01-14T13:17:21.2430785Z         )
2025-01-14T13:17:21.2430890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2431155Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2431227Z         ]
2025-01-14T13:17:21.2431519Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2431808Z 
2025-01-14T13:17:21.2432004Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2432305Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2432310Z 
2025-01-14T13:17:21.2432972Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2433321Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2433326Z 
2025-01-14T13:17:21.2433414Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2433573Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2433671Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2433846Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2433931Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2434014Z >       sim.run_final()
2025-01-14T13:17:21.2434019Z 
2025-01-14T13:17:21.2434102Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2434209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2434311Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2434447Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2434546Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2434695Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2434804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2434808Z 
2025-01-14T13:17:21.2435068Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2435273Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2435490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2435765Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2435927Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2436062Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2436066Z 
2025-01-14T13:17:21.2436157Z     def initialize_transport_state(
2025-01-14T13:17:21.2436225Z         self,
2025-01-14T13:17:21.2436306Z         simulation_state,
2025-01-14T13:17:21.2436381Z         opacity_state,
2025-01-14T13:17:21.2436463Z         macro_atom_state,
2025-01-14T13:17:21.2436533Z         plasma,
2025-01-14T13:17:21.2436611Z         no_of_packets,
2025-01-14T13:17:21.2436693Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2436777Z         iteration=0,
2025-01-14T13:17:21.2436844Z     ):
2025-01-14T13:17:21.2436973Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2437185Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2437260Z         else:
2025-01-14T13:17:21.2437341Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2437408Z     
2025-01-14T13:17:21.2437550Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2437646Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2437717Z         )
2025-01-14T13:17:21.2437783Z     
2025-01-14T13:17:21.2437913Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2438023Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2438178Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2438246Z         else:
2025-01-14T13:17:21.2438331Z             continuum_state = None
2025-01-14T13:17:21.2438527Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2438638Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2438728Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2438842Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2438943Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2439035Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2439129Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2439199Z         ).to_numba(
2025-01-14T13:17:21.2439280Z             macro_atom_state,
2025-01-14T13:17:21.2439366Z             self.line_interaction_type,
2025-01-14T13:17:21.2439438Z         )
2025-01-14T13:17:21.2439540Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2439810Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2439881Z         ]
2025-01-14T13:17:21.2440182Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2440186Z 
2025-01-14T13:17:21.2440338Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2440632Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2440637Z 
2025-01-14T13:17:21.2441297Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2441741Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2441746Z 
2025-01-14T13:17:21.2441840Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2441990Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2442094Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2442269Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2442359Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2442438Z >       sim.run_final()
2025-01-14T13:17:21.2442442Z 
2025-01-14T13:17:21.2442522Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2442634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2442729Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2442873Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2442965Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2443120Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2443225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2443233Z 
2025-01-14T13:17:21.2443496Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2443699Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2444039Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2444315Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2444471Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2444609Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2444614Z 
2025-01-14T13:17:21.2444699Z     def initialize_transport_state(
2025-01-14T13:17:21.2444772Z         self,
2025-01-14T13:17:21.2444848Z         simulation_state,
2025-01-14T13:17:21.2444926Z         opacity_state,
2025-01-14T13:17:21.2445002Z         macro_atom_state,
2025-01-14T13:17:21.2445076Z         plasma,
2025-01-14T13:17:21.2445261Z         no_of_packets,
2025-01-14T13:17:21.2445341Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2445417Z         iteration=0,
2025-01-14T13:17:21.2445484Z     ):
2025-01-14T13:17:21.2445617Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2445709Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2445781Z         else:
2025-01-14T13:17:21.2445858Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2445932Z     
2025-01-14T13:17:21.2446065Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2446164Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2446231Z         )
2025-01-14T13:17:21.2446300Z     
2025-01-14T13:17:21.2446425Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2446539Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2446688Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2446767Z         else:
2025-01-14T13:17:21.2446853Z             continuum_state = None
2025-01-14T13:17:21.2446951Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2447060Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2447158Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2447265Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2447361Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2447458Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2447549Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2447624Z         ).to_numba(
2025-01-14T13:17:21.2447701Z             macro_atom_state,
2025-01-14T13:17:21.2447793Z             self.line_interaction_type,
2025-01-14T13:17:21.2447863Z         )
2025-01-14T13:17:21.2447968Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2448234Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2448311Z         ]
2025-01-14T13:17:21.2448608Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2448617Z 
2025-01-14T13:17:21.2448762Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2449018Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-None-packet_in_nu] _
2025-01-14T13:17:21.2449024Z 
2025-01-14T13:17:21.2449686Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2450041Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2450045Z 
2025-01-14T13:17:21.2450144Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2450296Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2450397Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2450684Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2450775Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2450850Z >       sim.run_final()
2025-01-14T13:17:21.2450854Z 
2025-01-14T13:17:21.2450937Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2451046Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2451148Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2451287Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2451387Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2451543Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2451740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2451854Z 
2025-01-14T13:17:21.2452130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2452338Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2452565Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2452835Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2452996Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2453133Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2453143Z 
2025-01-14T13:17:21.2453230Z     def initialize_transport_state(
2025-01-14T13:17:21.2453305Z         self,
2025-01-14T13:17:21.2453383Z         simulation_state,
2025-01-14T13:17:21.2453462Z         opacity_state,
2025-01-14T13:17:21.2453541Z         macro_atom_state,
2025-01-14T13:17:21.2453621Z         plasma,
2025-01-14T13:17:21.2453697Z         no_of_packets,
2025-01-14T13:17:21.2453783Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2453856Z         iteration=0,
2025-01-14T13:17:21.2453937Z     ):
2025-01-14T13:17:21.2454062Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2454162Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2454230Z         else:
2025-01-14T13:17:21.2454314Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2454381Z     
2025-01-14T13:17:21.2454519Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2454613Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2454685Z         )
2025-01-14T13:17:21.2454756Z     
2025-01-14T13:17:21.2454883Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2454998Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2455148Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2455226Z         else:
2025-01-14T13:17:21.2455307Z             continuum_state = None
2025-01-14T13:17:21.2455413Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2455521Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2455617Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2455723Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2455824Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2455916Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2456010Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2456080Z         ).to_numba(
2025-01-14T13:17:21.2456162Z             macro_atom_state,
2025-01-14T13:17:21.2456255Z             self.line_interaction_type,
2025-01-14T13:17:21.2456321Z         )
2025-01-14T13:17:21.2456425Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2456696Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2456768Z         ]
2025-01-14T13:17:21.2457065Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2457185Z 
2025-01-14T13:17:21.2457339Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2457622Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2457627Z 
2025-01-14T13:17:21.2458300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2458654Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2458739Z 
2025-01-14T13:17:21.2458829Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2458986Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2459087Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2459266Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2459352Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2459430Z >       sim.run_final()
2025-01-14T13:17:21.2459435Z 
2025-01-14T13:17:21.2459515Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2459628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2459731Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2459871Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2459972Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2460123Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2460239Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2460243Z 
2025-01-14T13:17:21.2460509Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2460722Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2460942Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2461219Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2461381Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2461515Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2461520Z 
2025-01-14T13:17:21.2461717Z     def initialize_transport_state(
2025-01-14T13:17:21.2461788Z         self,
2025-01-14T13:17:21.2461869Z         simulation_state,
2025-01-14T13:17:21.2461949Z         opacity_state,
2025-01-14T13:17:21.2462028Z         macro_atom_state,
2025-01-14T13:17:21.2462100Z         plasma,
2025-01-14T13:17:21.2462179Z         no_of_packets,
2025-01-14T13:17:21.2462263Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2462340Z         iteration=0,
2025-01-14T13:17:21.2462407Z     ):
2025-01-14T13:17:21.2462538Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2462633Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2462706Z         else:
2025-01-14T13:17:21.2462789Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2462854Z     
2025-01-14T13:17:21.2462995Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2463094Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2463166Z         )
2025-01-14T13:17:21.2463232Z     
2025-01-14T13:17:21.2463364Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2463475Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2463635Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2463703Z         else:
2025-01-14T13:17:21.2463923Z             continuum_state = None
2025-01-14T13:17:21.2464024Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2464135Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2464224Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2464337Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2464441Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2464534Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2464628Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2464699Z         ).to_numba(
2025-01-14T13:17:21.2464780Z             macro_atom_state,
2025-01-14T13:17:21.2464866Z             self.line_interaction_type,
2025-01-14T13:17:21.2464940Z         )
2025-01-14T13:17:21.2465151Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2465428Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2465502Z         ]
2025-01-14T13:17:21.2465805Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2465810Z 
2025-01-14T13:17:21.2465957Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2466242Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2466247Z 
2025-01-14T13:17:21.2466906Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2467248Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2467257Z 
2025-01-14T13:17:21.2467349Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2467505Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2467605Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2467774Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2467864Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2467943Z >       sim.run_final()
2025-01-14T13:17:21.2467947Z 
2025-01-14T13:17:21.2468027Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2468144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2468240Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2468382Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2468475Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2468635Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2468740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2468748Z 
2025-01-14T13:17:21.2469015Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2469221Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2469443Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2469718Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2469875Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2470015Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2470019Z 
2025-01-14T13:17:21.2470104Z     def initialize_transport_state(
2025-01-14T13:17:21.2470181Z         self,
2025-01-14T13:17:21.2470257Z         simulation_state,
2025-01-14T13:17:21.2470336Z         opacity_state,
2025-01-14T13:17:21.2470411Z         macro_atom_state,
2025-01-14T13:17:21.2470574Z         plasma,
2025-01-14T13:17:21.2470647Z         no_of_packets,
2025-01-14T13:17:21.2470734Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2470811Z         iteration=0,
2025-01-14T13:17:21.2470879Z     ):
2025-01-14T13:17:21.2471010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2471104Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2471177Z         else:
2025-01-14T13:17:21.2471254Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2471325Z     
2025-01-14T13:17:21.2471457Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2471708Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2471825Z         )
2025-01-14T13:17:21.2471903Z     
2025-01-14T13:17:21.2472032Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2472306Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2472456Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2472538Z         else:
2025-01-14T13:17:21.2472619Z             continuum_state = None
2025-01-14T13:17:21.2472722Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2472834Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2472925Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2473034Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2473131Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2473230Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2473319Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2473394Z         ).to_numba(
2025-01-14T13:17:21.2473471Z             macro_atom_state,
2025-01-14T13:17:21.2473571Z             self.line_interaction_type,
2025-01-14T13:17:21.2473638Z         )
2025-01-14T13:17:21.2473744Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2474010Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2474099Z         ]
2025-01-14T13:17:21.2474405Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2474410Z 
2025-01-14T13:17:21.2474562Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2474851Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2474856Z 
2025-01-14T13:17:21.2475516Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2475873Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2475881Z 
2025-01-14T13:17:21.2475974Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2476129Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2476230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2476405Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2476498Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2476575Z >       sim.run_final()
2025-01-14T13:17:21.2476579Z 
2025-01-14T13:17:21.2476666Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2476774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2476877Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2477017Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2477122Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2477280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2477529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2477535Z 
2025-01-14T13:17:21.2477806Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2478007Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2478233Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2478503Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2478669Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2478802Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2478887Z 
2025-01-14T13:17:21.2478981Z     def initialize_transport_state(
2025-01-14T13:17:21.2479055Z         self,
2025-01-14T13:17:21.2479132Z         simulation_state,
2025-01-14T13:17:21.2479211Z         opacity_state,
2025-01-14T13:17:21.2479291Z         macro_atom_state,
2025-01-14T13:17:21.2479365Z         plasma,
2025-01-14T13:17:21.2479442Z         no_of_packets,
2025-01-14T13:17:21.2479528Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2479601Z         iteration=0,
2025-01-14T13:17:21.2479673Z     ):
2025-01-14T13:17:21.2479797Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2479899Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2479968Z         else:
2025-01-14T13:17:21.2480052Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2480117Z     
2025-01-14T13:17:21.2480256Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2480350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2480430Z         )
2025-01-14T13:17:21.2480497Z     
2025-01-14T13:17:21.2480629Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2480745Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2480901Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2480976Z         else:
2025-01-14T13:17:21.2481058Z             continuum_state = None
2025-01-14T13:17:21.2481165Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2481271Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2481368Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2481472Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2481682Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2481778Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2481875Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2481946Z         ).to_numba(
2025-01-14T13:17:21.2482034Z             macro_atom_state,
2025-01-14T13:17:21.2482128Z             self.line_interaction_type,
2025-01-14T13:17:21.2482195Z         )
2025-01-14T13:17:21.2482302Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2482574Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2482647Z         ]
2025-01-14T13:17:21.2482942Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2482947Z 
2025-01-14T13:17:21.2483096Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2483338Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-None-packet_in_nu] _
2025-01-14T13:17:21.2483342Z 
2025-01-14T13:17:21.2484004Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2484358Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2484482Z 
2025-01-14T13:17:21.2484575Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2484733Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2484829Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2485007Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2485094Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2485175Z >       sim.run_final()
2025-01-14T13:17:21.2485180Z 
2025-01-14T13:17:21.2485260Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2485373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2485478Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2485737Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2485834Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2485985Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2486103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2486107Z 
2025-01-14T13:17:21.2486374Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2486581Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2486802Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2487081Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2487246Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2487381Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2487390Z 
2025-01-14T13:17:21.2487485Z     def initialize_transport_state(
2025-01-14T13:17:21.2487555Z         self,
2025-01-14T13:17:21.2487642Z         simulation_state,
2025-01-14T13:17:21.2487718Z         opacity_state,
2025-01-14T13:17:21.2487801Z         macro_atom_state,
2025-01-14T13:17:21.2487871Z         plasma,
2025-01-14T13:17:21.2487953Z         no_of_packets,
2025-01-14T13:17:21.2488035Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2488116Z         iteration=0,
2025-01-14T13:17:21.2488184Z     ):
2025-01-14T13:17:21.2488313Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2488407Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2488481Z         else:
2025-01-14T13:17:21.2488567Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2488635Z     
2025-01-14T13:17:21.2488774Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2488873Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2488944Z         )
2025-01-14T13:17:21.2489010Z     
2025-01-14T13:17:21.2489144Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2489260Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2489416Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2489486Z         else:
2025-01-14T13:17:21.2489571Z             continuum_state = None
2025-01-14T13:17:21.2489668Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2489780Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2489871Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2489977Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2490079Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2490172Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2490266Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2490341Z         ).to_numba(
2025-01-14T13:17:21.2490426Z             macro_atom_state,
2025-01-14T13:17:21.2490516Z             self.line_interaction_type,
2025-01-14T13:17:21.2490677Z         )
2025-01-14T13:17:21.2490781Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2491061Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2491129Z         ]
2025-01-14T13:17:21.2491467Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2491472Z 
2025-01-14T13:17:21.2491719Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2491964Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection0] _
2025-01-14T13:17:21.2491969Z 
2025-01-14T13:17:21.2492631Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2493114Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2493120Z 
2025-01-14T13:17:21.2493213Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2493365Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2493469Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2493642Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2493734Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2493815Z >       sim.run_final()
2025-01-14T13:17:21.2493819Z 
2025-01-14T13:17:21.2493900Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2494015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2494117Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2494261Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2494356Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2494521Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2494626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2494631Z 
2025-01-14T13:17:21.2494898Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2495105Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2495327Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2495607Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2495764Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2495910Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2495914Z 
2025-01-14T13:17:21.2496002Z     def initialize_transport_state(
2025-01-14T13:17:21.2496080Z         self,
2025-01-14T13:17:21.2496158Z         simulation_state,
2025-01-14T13:17:21.2496243Z         opacity_state,
2025-01-14T13:17:21.2496321Z         macro_atom_state,
2025-01-14T13:17:21.2496399Z         plasma,
2025-01-14T13:17:21.2496473Z         no_of_packets,
2025-01-14T13:17:21.2496562Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2496640Z         iteration=0,
2025-01-14T13:17:21.2496707Z     ):
2025-01-14T13:17:21.2496835Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2496930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2497007Z         else:
2025-01-14T13:17:21.2497085Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2497157Z     
2025-01-14T13:17:21.2497292Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2497401Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2497471Z         )
2025-01-14T13:17:21.2497545Z     
2025-01-14T13:17:21.2497796Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2497917Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2498067Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2498143Z         else:
2025-01-14T13:17:21.2498227Z             continuum_state = None
2025-01-14T13:17:21.2498335Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2498453Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2498544Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2498656Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2498755Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2498855Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2499056Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2499136Z         ).to_numba(
2025-01-14T13:17:21.2499216Z             macro_atom_state,
2025-01-14T13:17:21.2499318Z             self.line_interaction_type,
2025-01-14T13:17:21.2499386Z         )
2025-01-14T13:17:21.2499493Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2499760Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2499831Z         ]
2025-01-14T13:17:21.2500131Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2500140Z 
2025-01-14T13:17:21.2500285Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2500535Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-0] _
2025-01-14T13:17:21.2500540Z 
2025-01-14T13:17:21.2501197Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2501651Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2501657Z 
2025-01-14T13:17:21.2501751Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2501901Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2502001Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2502172Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2502263Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2502338Z >       sim.run_final()
2025-01-14T13:17:21.2502342Z 
2025-01-14T13:17:21.2502427Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2502539Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2502641Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2502780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2502885Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2503034Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2503145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2503149Z 
2025-01-14T13:17:21.2503415Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2503614Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2503838Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2504111Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2504275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2504408Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2504532Z 
2025-01-14T13:17:21.2504628Z     def initialize_transport_state(
2025-01-14T13:17:21.2504697Z         self,
2025-01-14T13:17:21.2504779Z         simulation_state,
2025-01-14T13:17:21.2504860Z         opacity_state,
2025-01-14T13:17:21.2504934Z         macro_atom_state,
2025-01-14T13:17:21.2505011Z         plasma,
2025-01-14T13:17:21.2505084Z         no_of_packets,
2025-01-14T13:17:21.2505173Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2505246Z         iteration=0,
2025-01-14T13:17:21.2505318Z     ):
2025-01-14T13:17:21.2505444Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2505544Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2505613Z         else:
2025-01-14T13:17:21.2505698Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2505881Z     
2025-01-14T13:17:21.2506020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2506116Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2506196Z         )
2025-01-14T13:17:21.2506263Z     
2025-01-14T13:17:21.2506394Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2506513Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2506662Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2506736Z         else:
2025-01-14T13:17:21.2506819Z             continuum_state = None
2025-01-14T13:17:21.2506926Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2507031Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2507129Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2507232Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2507333Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2507429Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2507527Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2507597Z         ).to_numba(
2025-01-14T13:17:21.2507686Z             macro_atom_state,
2025-01-14T13:17:21.2507775Z             self.line_interaction_type,
2025-01-14T13:17:21.2507850Z         )
2025-01-14T13:17:21.2507957Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2508225Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2508301Z         ]
2025-01-14T13:17:21.2508598Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2508603Z 
2025-01-14T13:17:21.2508754Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2508999Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-1] _
2025-01-14T13:17:21.2509007Z 
2025-01-14T13:17:21.2509676Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2510029Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2510033Z 
2025-01-14T13:17:21.2510122Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2510280Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2510377Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2510554Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2510640Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2510720Z >       sim.run_final()
2025-01-14T13:17:21.2510724Z 
2025-01-14T13:17:21.2510811Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2510927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2511033Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2511272Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2511373Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2511524Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2511843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2511855Z 
2025-01-14T13:17:21.2512127Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2512339Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2512569Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2512847Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2513141Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2513284Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2513295Z 
2025-01-14T13:17:21.2513389Z     def initialize_transport_state(
2025-01-14T13:17:21.2513457Z         self,
2025-01-14T13:17:21.2513539Z         simulation_state,
2025-01-14T13:17:21.2513613Z         opacity_state,
2025-01-14T13:17:21.2513694Z         macro_atom_state,
2025-01-14T13:17:21.2513764Z         plasma,
2025-01-14T13:17:21.2513842Z         no_of_packets,
2025-01-14T13:17:21.2513923Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2513999Z         iteration=0,
2025-01-14T13:17:21.2514066Z     ):
2025-01-14T13:17:21.2514199Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2514296Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2514369Z         else:
2025-01-14T13:17:21.2514455Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2514527Z     
2025-01-14T13:17:21.2514665Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2514760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2514837Z         )
2025-01-14T13:17:21.2514904Z     
2025-01-14T13:17:21.2515034Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2515149Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2515306Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2515375Z         else:
2025-01-14T13:17:21.2515463Z             continuum_state = None
2025-01-14T13:17:21.2515563Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2515676Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2515766Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2515876Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2515979Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2516082Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2516183Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2516258Z         ).to_numba(
2025-01-14T13:17:21.2516342Z             macro_atom_state,
2025-01-14T13:17:21.2516430Z             self.line_interaction_type,
2025-01-14T13:17:21.2516503Z         )
2025-01-14T13:17:21.2516604Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2516878Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2516948Z         ]
2025-01-14T13:17:21.2517251Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2517256Z 
2025-01-14T13:17:21.2517402Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2517694Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection0] _
2025-01-14T13:17:21.2517703Z 
2025-01-14T13:17:21.2518372Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2518845Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2518850Z 
2025-01-14T13:17:21.2518946Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2519097Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2519203Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2519375Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2519468Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2519626Z >       sim.run_final()
2025-01-14T13:17:21.2519630Z 
2025-01-14T13:17:21.2519711Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2519825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2519928Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2520074Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2520168Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2520324Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2520433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2520437Z 
2025-01-14T13:17:21.2520707Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2520914Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2521140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2521421Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2521679Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2521833Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2521838Z 
2025-01-14T13:17:21.2521923Z     def initialize_transport_state(
2025-01-14T13:17:21.2521996Z         self,
2025-01-14T13:17:21.2522072Z         simulation_state,
2025-01-14T13:17:21.2522152Z         opacity_state,
2025-01-14T13:17:21.2522228Z         macro_atom_state,
2025-01-14T13:17:21.2522303Z         plasma,
2025-01-14T13:17:21.2522375Z         no_of_packets,
2025-01-14T13:17:21.2522461Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2522534Z         iteration=0,
2025-01-14T13:17:21.2522606Z     ):
2025-01-14T13:17:21.2522735Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2522829Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2522906Z         else:
2025-01-14T13:17:21.2522982Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2523053Z     
2025-01-14T13:17:21.2523186Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2523288Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2523355Z         )
2025-01-14T13:17:21.2523425Z     
2025-01-14T13:17:21.2523553Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2523669Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2523819Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2523897Z         else:
2025-01-14T13:17:21.2523978Z             continuum_state = None
2025-01-14T13:17:21.2524090Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2524200Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2524288Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2524401Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2524497Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2524595Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2524809Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2524885Z         ).to_numba(
2025-01-14T13:17:21.2524962Z             macro_atom_state,
2025-01-14T13:17:21.2525054Z             self.line_interaction_type,
2025-01-14T13:17:21.2525120Z         )
2025-01-14T13:17:21.2525224Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2525487Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2525558Z         ]
2025-01-14T13:17:21.2525854Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2525864Z 
2025-01-14T13:17:21.2526006Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2526385Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-0] _
2025-01-14T13:17:21.2526390Z 
2025-01-14T13:17:21.2527059Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2527402Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2527407Z 
2025-01-14T13:17:21.2527494Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2527647Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2527747Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2527918Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2528014Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2528087Z >       sim.run_final()
2025-01-14T13:17:21.2528092Z 
2025-01-14T13:17:21.2528175Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2528286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2528387Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2528525Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2528626Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2528777Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2528886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2528890Z 
2025-01-14T13:17:21.2529155Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2529356Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2529585Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2529853Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2530021Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2530153Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2530157Z 
2025-01-14T13:17:21.2530247Z     def initialize_transport_state(
2025-01-14T13:17:21.2530315Z         self,
2025-01-14T13:17:21.2530396Z         simulation_state,
2025-01-14T13:17:21.2530474Z         opacity_state,
2025-01-14T13:17:21.2530549Z         macro_atom_state,
2025-01-14T13:17:21.2530624Z         plasma,
2025-01-14T13:17:21.2530699Z         no_of_packets,
2025-01-14T13:17:21.2530785Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2530856Z         iteration=0,
2025-01-14T13:17:21.2530928Z     ):
2025-01-14T13:17:21.2531052Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2531154Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2531222Z         else:
2025-01-14T13:17:21.2531304Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2531459Z     
2025-01-14T13:17:21.2531689Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2531786Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2531859Z         )
2025-01-14T13:17:21.2531924Z     
2025-01-14T13:17:21.2532054Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2532164Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2532318Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2532391Z         else:
2025-01-14T13:17:21.2532473Z             continuum_state = None
2025-01-14T13:17:21.2532581Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2532686Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2532895Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2532999Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2533099Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2533198Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2533292Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2533361Z         ).to_numba(
2025-01-14T13:17:21.2533445Z             macro_atom_state,
2025-01-14T13:17:21.2533532Z             self.line_interaction_type,
2025-01-14T13:17:21.2533606Z         )
2025-01-14T13:17:21.2533707Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2533975Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2534046Z         ]
2025-01-14T13:17:21.2534339Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2534351Z 
2025-01-14T13:17:21.2534498Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2534737Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-1] _
2025-01-14T13:17:21.2534747Z 
2025-01-14T13:17:21.2535408Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2535755Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2535759Z 
2025-01-14T13:17:21.2535847Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2536000Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2536093Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2536271Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2536360Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2536439Z >       sim.run_final()
2025-01-14T13:17:21.2536447Z 
2025-01-14T13:17:21.2536526Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2536639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2536733Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2536878Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2536976Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2537128Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2537236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2537240Z 
2025-01-14T13:17:21.2537499Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2537702Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2537925Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2538199Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2538484Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2538624Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2538629Z 
2025-01-14T13:17:21.2538719Z     def initialize_transport_state(
2025-01-14T13:17:21.2538786Z         self,
2025-01-14T13:17:21.2538867Z         simulation_state,
2025-01-14T13:17:21.2538941Z         opacity_state,
2025-01-14T13:17:21.2539021Z         macro_atom_state,
2025-01-14T13:17:21.2539091Z         plasma,
2025-01-14T13:17:21.2539167Z         no_of_packets,
2025-01-14T13:17:21.2539248Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2539325Z         iteration=0,
2025-01-14T13:17:21.2539477Z     ):
2025-01-14T13:17:21.2539602Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2539694Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2539766Z         else:
2025-01-14T13:17:21.2539850Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2539924Z     
2025-01-14T13:17:21.2540056Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2540154Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2540227Z         )
2025-01-14T13:17:21.2540293Z     
2025-01-14T13:17:21.2540424Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2540534Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2540689Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2540759Z         else:
2025-01-14T13:17:21.2540845Z             continuum_state = None
2025-01-14T13:17:21.2540943Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2541057Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2541146Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2541253Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2541354Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2541454Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2541543Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2541715Z         ).to_numba(
2025-01-14T13:17:21.2541798Z             macro_atom_state,
2025-01-14T13:17:21.2541884Z             self.line_interaction_type,
2025-01-14T13:17:21.2541956Z         )
2025-01-14T13:17:21.2542056Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2542329Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2542396Z         ]
2025-01-14T13:17:21.2542698Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2542709Z 
2025-01-14T13:17:21.2542852Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2543097Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-2] _
2025-01-14T13:17:21.2543102Z 
2025-01-14T13:17:21.2543760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2544103Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2544108Z 
2025-01-14T13:17:21.2544201Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2544350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2544450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2544625Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2544715Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2544909Z >       sim.run_final()
2025-01-14T13:17:21.2544919Z 
2025-01-14T13:17:21.2544998Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2545111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2545207Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2545351Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2545444Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2545599Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2545703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2545707Z 
2025-01-14T13:17:21.2545968Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2546274Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2546500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2546783Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2546939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2547077Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2547082Z 
2025-01-14T13:17:21.2547166Z     def initialize_transport_state(
2025-01-14T13:17:21.2547237Z         self,
2025-01-14T13:17:21.2547314Z         simulation_state,
2025-01-14T13:17:21.2547393Z         opacity_state,
2025-01-14T13:17:21.2547467Z         macro_atom_state,
2025-01-14T13:17:21.2547542Z         plasma,
2025-01-14T13:17:21.2547613Z         no_of_packets,
2025-01-14T13:17:21.2547698Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2547778Z         iteration=0,
2025-01-14T13:17:21.2547849Z     ):
2025-01-14T13:17:21.2547970Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2548070Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2548148Z         else:
2025-01-14T13:17:21.2548226Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2548296Z     
2025-01-14T13:17:21.2548427Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2548527Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2548595Z         )
2025-01-14T13:17:21.2548666Z     
2025-01-14T13:17:21.2548792Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2548907Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2549058Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2549133Z         else:
2025-01-14T13:17:21.2549214Z             continuum_state = None
2025-01-14T13:17:21.2549325Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2549431Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2549524Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2549640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2549738Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2549834Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2549923Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2549998Z         ).to_numba(
2025-01-14T13:17:21.2550074Z             macro_atom_state,
2025-01-14T13:17:21.2550165Z             self.line_interaction_type,
2025-01-14T13:17:21.2550231Z         )
2025-01-14T13:17:21.2550335Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2550601Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2550674Z         ]
2025-01-14T13:17:21.2550975Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2550983Z 
2025-01-14T13:17:21.2551126Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2551488Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection1] _
2025-01-14T13:17:21.2551494Z 
2025-01-14T13:17:21.2552361Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2552716Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2552721Z 
2025-01-14T13:17:21.2552811Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2552964Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2553192Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2553364Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2553461Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2553536Z >       sim.run_final()
2025-01-14T13:17:21.2553540Z 
2025-01-14T13:17:21.2553624Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2553732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2553833Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2553975Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2554074Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2554226Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2554336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2554340Z 
2025-01-14T13:17:21.2554613Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2554811Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2555040Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2555309Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2555470Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2555603Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2555607Z 
2025-01-14T13:17:21.2555697Z     def initialize_transport_state(
2025-01-14T13:17:21.2555767Z         self,
2025-01-14T13:17:21.2555848Z         simulation_state,
2025-01-14T13:17:21.2555924Z         opacity_state,
2025-01-14T13:17:21.2556004Z         macro_atom_state,
2025-01-14T13:17:21.2556078Z         plasma,
2025-01-14T13:17:21.2556150Z         no_of_packets,
2025-01-14T13:17:21.2556242Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2556314Z         iteration=0,
2025-01-14T13:17:21.2556386Z     ):
2025-01-14T13:17:21.2556507Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2556609Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2556677Z         else:
2025-01-14T13:17:21.2556760Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2556826Z     
2025-01-14T13:17:21.2556962Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2557056Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2557130Z         )
2025-01-14T13:17:21.2557195Z     
2025-01-14T13:17:21.2557326Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2557436Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2557589Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2557661Z         else:
2025-01-14T13:17:21.2557747Z             continuum_state = None
2025-01-14T13:17:21.2557851Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2557957Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2558173Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2558276Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2558377Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2558468Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2558563Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2558633Z         ).to_numba(
2025-01-14T13:17:21.2558716Z             macro_atom_state,
2025-01-14T13:17:21.2558802Z             self.line_interaction_type,
2025-01-14T13:17:21.2558874Z         )
2025-01-14T13:17:21.2558976Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2559245Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2559404Z         ]
2025-01-14T13:17:21.2559698Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2559709Z 
2025-01-14T13:17:21.2559858Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2560102Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-0] _
2025-01-14T13:17:21.2560108Z 
2025-01-14T13:17:21.2560764Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2561106Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2561115Z 
2025-01-14T13:17:21.2561203Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2561364Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2561462Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2561753Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2561848Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2561928Z >       sim.run_final()
2025-01-14T13:17:21.2561932Z 
2025-01-14T13:17:21.2562016Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2562135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2562232Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2562378Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2562471Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2562631Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2562742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2562751Z 
2025-01-14T13:17:21.2563014Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2563219Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2563444Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2563720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2563877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2564017Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2564021Z 
2025-01-14T13:17:21.2564112Z     def initialize_transport_state(
2025-01-14T13:17:21.2564179Z         self,
2025-01-14T13:17:21.2564260Z         simulation_state,
2025-01-14T13:17:21.2564334Z         opacity_state,
2025-01-14T13:17:21.2564415Z         macro_atom_state,
2025-01-14T13:17:21.2564489Z         plasma,
2025-01-14T13:17:21.2564570Z         no_of_packets,
2025-01-14T13:17:21.2564651Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2564730Z         iteration=0,
2025-01-14T13:17:21.2564929Z     ):
2025-01-14T13:17:21.2565059Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2565152Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2565226Z         else:
2025-01-14T13:17:21.2565304Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2565374Z     
2025-01-14T13:17:21.2565509Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2570164Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2570253Z         )
2025-01-14T13:17:21.2570324Z     
2025-01-14T13:17:21.2570467Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2570595Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2570760Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2571012Z         else:
2025-01-14T13:17:21.2571102Z             continuum_state = None
2025-01-14T13:17:21.2571210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2571338Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2571427Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2571543Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2571801Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2571903Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2571999Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2572075Z         ).to_numba(
2025-01-14T13:17:21.2572185Z             macro_atom_state,
2025-01-14T13:17:21.2572278Z             self.line_interaction_type,
2025-01-14T13:17:21.2572347Z         )
2025-01-14T13:17:21.2572447Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2572727Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2572800Z         ]
2025-01-14T13:17:21.2573114Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2573124Z 
2025-01-14T13:17:21.2573277Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2573532Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-1] _
2025-01-14T13:17:21.2573537Z 
2025-01-14T13:17:21.2574212Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2574565Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2574573Z 
2025-01-14T13:17:21.2574669Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2574825Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2574929Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2575105Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2575197Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2575269Z >       sim.run_final()
2025-01-14T13:17:21.2575273Z 
2025-01-14T13:17:21.2575357Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2575467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2575569Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2575712Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2575804Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2575961Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2576072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2576076Z 
2025-01-14T13:17:21.2576352Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2576680Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2576906Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2577176Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2577338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2577483Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2577488Z 
2025-01-14T13:17:21.2577574Z     def initialize_transport_state(
2025-01-14T13:17:21.2577649Z         self,
2025-01-14T13:17:21.2577727Z         simulation_state,
2025-01-14T13:17:21.2577806Z         opacity_state,
2025-01-14T13:17:21.2578000Z         macro_atom_state,
2025-01-14T13:17:21.2578074Z         plasma,
2025-01-14T13:17:21.2578145Z         no_of_packets,
2025-01-14T13:17:21.2578230Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2578306Z         iteration=0,
2025-01-14T13:17:21.2578377Z     ):
2025-01-14T13:17:21.2578504Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2578603Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2578670Z         else:
2025-01-14T13:17:21.2578756Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2578820Z     
2025-01-14T13:17:21.2578959Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2579059Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2579125Z         )
2025-01-14T13:17:21.2579196Z     
2025-01-14T13:17:21.2579323Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2579443Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2579601Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2579672Z         else:
2025-01-14T13:17:21.2579753Z             continuum_state = None
2025-01-14T13:17:21.2579862Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2579969Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2580066Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2580171Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2580273Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2580368Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2580458Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2580531Z         ).to_numba(
2025-01-14T13:17:21.2580607Z             macro_atom_state,
2025-01-14T13:17:21.2580696Z             self.line_interaction_type,
2025-01-14T13:17:21.2580762Z         )
2025-01-14T13:17:21.2580866Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2581136Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2581206Z         ]
2025-01-14T13:17:21.2581507Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2581512Z 
2025-01-14T13:17:21.2581792Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2582077Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection1] _
2025-01-14T13:17:21.2582086Z 
2025-01-14T13:17:21.2582741Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2583092Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2583103Z 
2025-01-14T13:17:21.2583191Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2583345Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2583588Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2583765Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2583849Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2583927Z >       sim.run_final()
2025-01-14T13:17:21.2583931Z 
2025-01-14T13:17:21.2584015Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2584124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2584224Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2584361Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2584457Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2584609Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2584838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2584843Z 
2025-01-14T13:17:21.2585110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2585312Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2585535Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2585807Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2585970Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2586105Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2586110Z 
2025-01-14T13:17:21.2586199Z     def initialize_transport_state(
2025-01-14T13:17:21.2586266Z         self,
2025-01-14T13:17:21.2586350Z         simulation_state,
2025-01-14T13:17:21.2586423Z         opacity_state,
2025-01-14T13:17:21.2586503Z         macro_atom_state,
2025-01-14T13:17:21.2586570Z         plasma,
2025-01-14T13:17:21.2586651Z         no_of_packets,
2025-01-14T13:17:21.2586731Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2586807Z         iteration=0,
2025-01-14T13:17:21.2586877Z     ):
2025-01-14T13:17:21.2587000Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2587097Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2587164Z         else:
2025-01-14T13:17:21.2587244Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2587309Z     
2025-01-14T13:17:21.2587446Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2587538Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2587608Z         )
2025-01-14T13:17:21.2587672Z     
2025-01-14T13:17:21.2587803Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2587919Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2588073Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2588144Z         else:
2025-01-14T13:17:21.2588231Z             continuum_state = None
2025-01-14T13:17:21.2588333Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2588444Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2588539Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2588641Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2588743Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2588836Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2588929Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2588997Z         ).to_numba(
2025-01-14T13:17:21.2589076Z             macro_atom_state,
2025-01-14T13:17:21.2589161Z             self.line_interaction_type,
2025-01-14T13:17:21.2589237Z         )
2025-01-14T13:17:21.2589337Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2589606Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2589767Z         ]
2025-01-14T13:17:21.2590071Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2590076Z 
2025-01-14T13:17:21.2590226Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2590465Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-0] _
2025-01-14T13:17:21.2590470Z 
2025-01-14T13:17:21.2591129Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2591712Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2591730Z 
2025-01-14T13:17:21.2591888Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2592068Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2592164Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2592338Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2592422Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2592502Z >       sim.run_final()
2025-01-14T13:17:21.2592506Z 
2025-01-14T13:17:21.2592584Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2592696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2592792Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2592939Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2593033Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2593193Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2593296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2593310Z 
2025-01-14T13:17:21.2593567Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2593773Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2593988Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2594260Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2594415Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2594551Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2596725Z 
2025-01-14T13:17:21.2596851Z     def initialize_transport_state(
2025-01-14T13:17:21.2596934Z         self,
2025-01-14T13:17:21.2597019Z         simulation_state,
2025-01-14T13:17:21.2597092Z         opacity_state,
2025-01-14T13:17:21.2597174Z         macro_atom_state,
2025-01-14T13:17:21.2597248Z         plasma,
2025-01-14T13:17:21.2597328Z         no_of_packets,
2025-01-14T13:17:21.2597410Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2597486Z         iteration=0,
2025-01-14T13:17:21.2597551Z     ):
2025-01-14T13:17:21.2597692Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2597794Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2597867Z         else:
2025-01-14T13:17:21.2597945Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2598014Z     
2025-01-14T13:17:21.2598156Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2598258Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2598325Z         )
2025-01-14T13:17:21.2598430Z     
2025-01-14T13:17:21.2598570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2598686Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2598849Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2599029Z         else:
2025-01-14T13:17:21.2599113Z             continuum_state = None
2025-01-14T13:17:21.2599221Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2599329Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2599423Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2599527Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2599633Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2599732Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2599828Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2599899Z         ).to_numba(
2025-01-14T13:17:21.2599984Z             macro_atom_state,
2025-01-14T13:17:21.2600193Z             self.line_interaction_type,
2025-01-14T13:17:21.2600265Z         )
2025-01-14T13:17:21.2600369Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2600651Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2600726Z         ]
2025-01-14T13:17:21.2601030Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2601035Z 
2025-01-14T13:17:21.2601190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2601433Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-1] _
2025-01-14T13:17:21.2601438Z 
2025-01-14T13:17:21.2602268Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2602629Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2602642Z 
2025-01-14T13:17:21.2602733Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2602894Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2602991Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2603170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2603256Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2603335Z >       sim.run_final()
2025-01-14T13:17:21.2603339Z 
2025-01-14T13:17:21.2603418Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2603533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2603629Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2603906Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2604006Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2604164Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2604279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2604283Z 
2025-01-14T13:17:21.2604544Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2604749Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2604965Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2605241Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2605400Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2605541Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2605551Z 
2025-01-14T13:17:21.2605643Z     def initialize_transport_state(
2025-01-14T13:17:21.2605710Z         self,
2025-01-14T13:17:21.2605791Z         simulation_state,
2025-01-14T13:17:21.2605865Z         opacity_state,
2025-01-14T13:17:21.2606018Z         macro_atom_state,
2025-01-14T13:17:21.2606088Z         plasma,
2025-01-14T13:17:21.2606164Z         no_of_packets,
2025-01-14T13:17:21.2606245Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2606320Z         iteration=0,
2025-01-14T13:17:21.2606384Z     ):
2025-01-14T13:17:21.2606515Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2606609Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2606682Z         else:
2025-01-14T13:17:21.2606758Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2606828Z     
2025-01-14T13:17:21.2606962Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2607061Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2607268Z         )
2025-01-14T13:17:21.2607338Z     
2025-01-14T13:17:21.2607472Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2607585Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2607745Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2607812Z         else:
2025-01-14T13:17:21.2607898Z             continuum_state = None
2025-01-14T13:17:21.2607995Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2608106Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2608195Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2608303Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2608399Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2608495Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2608584Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2608661Z         ).to_numba(
2025-01-14T13:17:21.2608744Z             macro_atom_state,
2025-01-14T13:17:21.2608835Z             self.line_interaction_type,
2025-01-14T13:17:21.2608905Z         )
2025-01-14T13:17:21.2609003Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2609278Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2609343Z         ]
2025-01-14T13:17:21.2609644Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2609649Z 
2025-01-14T13:17:21.2609793Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2610037Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-2] _
2025-01-14T13:17:21.2610041Z 
2025-01-14T13:17:21.2610695Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2611113Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2611120Z 
2025-01-14T13:17:21.2611214Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2611367Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2611467Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2611741Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2611834Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2611906Z >       sim.run_final()
2025-01-14T13:17:21.2611911Z 
2025-01-14T13:17:21.2611995Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2612101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2612206Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2612352Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2612444Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2612600Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2612773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2612778Z 
2025-01-14T13:17:21.2613044Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2613242Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2613465Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2613733Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2613895Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2614037Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2614157Z 
2025-01-14T13:17:21.2614244Z     def initialize_transport_state(
2025-01-14T13:17:21.2614317Z         self,
2025-01-14T13:17:21.2614396Z         simulation_state,
2025-01-14T13:17:21.2614474Z         opacity_state,
2025-01-14T13:17:21.2614548Z         macro_atom_state,
2025-01-14T13:17:21.2614621Z         plasma,
2025-01-14T13:17:21.2614692Z         no_of_packets,
2025-01-14T13:17:21.2614776Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2614847Z         iteration=0,
2025-01-14T13:17:21.2614917Z     ):
2025-01-14T13:17:21.2615039Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2615137Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2615203Z         else:
2025-01-14T13:17:21.2615284Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2615355Z     
2025-01-14T13:17:21.2615487Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2615593Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2615659Z         )
2025-01-14T13:17:21.2615728Z     
2025-01-14T13:17:21.2615853Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2615971Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2616122Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2616194Z         else:
2025-01-14T13:17:21.2616274Z             continuum_state = None
2025-01-14T13:17:21.2616378Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2616483Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2616577Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2616679Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2616779Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2616877Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2617043Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2617122Z         ).to_numba(
2025-01-14T13:17:21.2617198Z             macro_atom_state,
2025-01-14T13:17:21.2617288Z             self.line_interaction_type,
2025-01-14T13:17:21.2617371Z         )
2025-01-14T13:17:21.2617470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2617746Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2617811Z         ]
2025-01-14T13:17:21.2618114Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2618118Z 
2025-01-14T13:17:21.2618261Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2618459Z ___ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[None] ____
2025-01-14T13:17:21.2618463Z 
2025-01-14T13:17:21.2619134Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2619483Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2619533Z 
2025-01-14T13:17:21.2619628Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2619780Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2619880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2620050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2620139Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2620216Z >       sim.run_final()
2025-01-14T13:17:21.2620221Z 
2025-01-14T13:17:21.2620299Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2620409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2620591Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2620735Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2620827Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2620989Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2621093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2621098Z 
2025-01-14T13:17:21.2621373Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2621745Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2621997Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2622272Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2622433Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2622578Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2622583Z 
2025-01-14T13:17:21.2622667Z     def initialize_transport_state(
2025-01-14T13:17:21.2622741Z         self,
2025-01-14T13:17:21.2622816Z         simulation_state,
2025-01-14T13:17:21.2622893Z         opacity_state,
2025-01-14T13:17:21.2622966Z         macro_atom_state,
2025-01-14T13:17:21.2623038Z         plasma,
2025-01-14T13:17:21.2623109Z         no_of_packets,
2025-01-14T13:17:21.2623193Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2623271Z         iteration=0,
2025-01-14T13:17:21.2623336Z     ):
2025-01-14T13:17:21.2623464Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2623558Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2623630Z         else:
2025-01-14T13:17:21.2623707Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2623778Z     
2025-01-14T13:17:21.2623992Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2624097Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2624163Z         )
2025-01-14T13:17:21.2624232Z     
2025-01-14T13:17:21.2624362Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2624485Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2624637Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2624710Z         else:
2025-01-14T13:17:21.2624792Z             continuum_state = None
2025-01-14T13:17:21.2624896Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2625009Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2625099Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2625209Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2625306Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2625405Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2625499Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2625575Z         ).to_numba(
2025-01-14T13:17:21.2625651Z             macro_atom_state,
2025-01-14T13:17:21.2625810Z             self.line_interaction_type,
2025-01-14T13:17:21.2625877Z         )
2025-01-14T13:17:21.2625982Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2626252Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2626322Z         ]
2025-01-14T13:17:21.2626625Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2626630Z 
2025-01-14T13:17:21.2626776Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2626981Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-0] __
2025-01-14T13:17:21.2626989Z 
2025-01-14T13:17:21.2627648Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2628109Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2628114Z 
2025-01-14T13:17:21.2628205Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2628358Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2628460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2628630Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2628718Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2628794Z >       sim.run_final()
2025-01-14T13:17:21.2628799Z 
2025-01-14T13:17:21.2628883Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2628991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2629097Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2629237Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2629338Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2629490Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2629598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2629603Z 
2025-01-14T13:17:21.2629870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2630070Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2630294Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2630561Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2630776Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2630912Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2630916Z 
2025-01-14T13:17:21.2631010Z     def initialize_transport_state(
2025-01-14T13:17:21.2631082Z         self,
2025-01-14T13:17:21.2631159Z         simulation_state,
2025-01-14T13:17:21.2631237Z         opacity_state,
2025-01-14T13:17:21.2631319Z         macro_atom_state,
2025-01-14T13:17:21.2631392Z         plasma,
2025-01-14T13:17:21.2631466Z         no_of_packets,
2025-01-14T13:17:21.2631690Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2631822Z         iteration=0,
2025-01-14T13:17:21.2631927Z     ):
2025-01-14T13:17:21.2632056Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2632158Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2632225Z         else:
2025-01-14T13:17:21.2632307Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2632376Z     
2025-01-14T13:17:21.2632519Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2632616Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2632688Z         )
2025-01-14T13:17:21.2632844Z     
2025-01-14T13:17:21.2632979Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2633095Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2633247Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2633322Z         else:
2025-01-14T13:17:21.2633403Z             continuum_state = None
2025-01-14T13:17:21.2633506Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2633612Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2633707Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2633811Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2633914Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2634139Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2634236Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2634304Z         ).to_numba(
2025-01-14T13:17:21.2634390Z             macro_atom_state,
2025-01-14T13:17:21.2634476Z             self.line_interaction_type,
2025-01-14T13:17:21.2634547Z         )
2025-01-14T13:17:21.2634651Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2634918Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2634988Z         ]
2025-01-14T13:17:21.2635284Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2635289Z 
2025-01-14T13:17:21.2635441Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2635637Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-1] __
2025-01-14T13:17:21.2635648Z 
2025-01-14T13:17:21.2636312Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2636664Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2636669Z 
2025-01-14T13:17:21.2636755Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2636908Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2637003Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2637178Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2637263Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2637340Z >       sim.run_final()
2025-01-14T13:17:21.2637407Z 
2025-01-14T13:17:21.2637490Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2637605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2637704Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2637844Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2637945Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2638094Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2638200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2638204Z 
2025-01-14T13:17:21.2638465Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2638669Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2638886Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2639160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2639324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2639462Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2639514Z 
2025-01-14T13:17:21.2639607Z     def initialize_transport_state(
2025-01-14T13:17:21.2639673Z         self,
2025-01-14T13:17:21.2639753Z         simulation_state,
2025-01-14T13:17:21.2639829Z         opacity_state,
2025-01-14T13:17:21.2639907Z         macro_atom_state,
2025-01-14T13:17:21.2639975Z         plasma,
2025-01-14T13:17:21.2640052Z         no_of_packets,
2025-01-14T13:17:21.2640132Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2640207Z         iteration=0,
2025-01-14T13:17:21.2640272Z     ):
2025-01-14T13:17:21.2640398Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2640491Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2640568Z         else:
2025-01-14T13:17:21.2640646Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2640800Z     
2025-01-14T13:17:21.2640938Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2641033Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2641110Z         )
2025-01-14T13:17:21.2641174Z     
2025-01-14T13:17:21.2641306Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2641416Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2641696Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2641768Z         else:
2025-01-14T13:17:21.2641853Z             continuum_state = None
2025-01-14T13:17:21.2641952Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2642064Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2642153Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2642267Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2642374Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2642472Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2642566Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2642637Z         ).to_numba(
2025-01-14T13:17:21.2642720Z             macro_atom_state,
2025-01-14T13:17:21.2642806Z             self.line_interaction_type,
2025-01-14T13:17:21.2642879Z         )
2025-01-14T13:17:21.2642977Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2643252Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2643318Z         ]
2025-01-14T13:17:21.2643621Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2643625Z 
2025-01-14T13:17:21.2643769Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2644102Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[None] _
2025-01-14T13:17:21.2644112Z 
2025-01-14T13:17:21.2644774Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2645120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2645125Z 
2025-01-14T13:17:21.2645216Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2645368Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2645468Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2645637Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2645731Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2645812Z >       sim.run_final()
2025-01-14T13:17:21.2645820Z 
2025-01-14T13:17:21.2645900Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2646013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2646173Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2646318Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2646412Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2646568Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2646673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2646677Z 
2025-01-14T13:17:21.2646941Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2647141Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2647364Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2647758Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2647916Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2648058Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2648062Z 
2025-01-14T13:17:21.2648147Z     def initialize_transport_state(
2025-01-14T13:17:21.2648219Z         self,
2025-01-14T13:17:21.2648294Z         simulation_state,
2025-01-14T13:17:21.2648375Z         opacity_state,
2025-01-14T13:17:21.2648450Z         macro_atom_state,
2025-01-14T13:17:21.2648524Z         plasma,
2025-01-14T13:17:21.2648596Z         no_of_packets,
2025-01-14T13:17:21.2648679Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2648749Z         iteration=0,
2025-01-14T13:17:21.2648820Z     ):
2025-01-14T13:17:21.2648946Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2649038Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2649120Z         else:
2025-01-14T13:17:21.2649200Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2649269Z     
2025-01-14T13:17:21.2649401Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2649502Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2649568Z         )
2025-01-14T13:17:21.2649641Z     
2025-01-14T13:17:21.2649765Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2649881Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2650031Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2650105Z         else:
2025-01-14T13:17:21.2650185Z             continuum_state = None
2025-01-14T13:17:21.2650291Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2650395Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2650490Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2650652Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2650752Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2650849Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2650941Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2651014Z         ).to_numba(
2025-01-14T13:17:21.2651090Z             macro_atom_state,
2025-01-14T13:17:21.2651180Z             self.line_interaction_type,
2025-01-14T13:17:21.2651246Z         )
2025-01-14T13:17:21.2651348Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2651742Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2651818Z         ]
2025-01-14T13:17:21.2652115Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2652125Z 
2025-01-14T13:17:21.2652266Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2652473Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-0] ___
2025-01-14T13:17:21.2652477Z 
2025-01-14T13:17:21.2653147Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2653570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2653574Z 
2025-01-14T13:17:21.2653667Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2653823Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2653922Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2654094Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2654189Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2654375Z >       sim.run_final()
2025-01-14T13:17:21.2654380Z 
2025-01-14T13:17:21.2654463Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2654570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2654675Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2654813Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2654910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2655061Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2655173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2655177Z 
2025-01-14T13:17:21.2655443Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2655642Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2655867Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2656142Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2656302Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2656441Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2656445Z 
2025-01-14T13:17:21.2656535Z     def initialize_transport_state(
2025-01-14T13:17:21.2656603Z         self,
2025-01-14T13:17:21.2656684Z         simulation_state,
2025-01-14T13:17:21.2656757Z         opacity_state,
2025-01-14T13:17:21.2656836Z         macro_atom_state,
2025-01-14T13:17:21.2656910Z         plasma,
2025-01-14T13:17:21.2656982Z         no_of_packets,
2025-01-14T13:17:21.2657067Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2657138Z         iteration=0,
2025-01-14T13:17:21.2657208Z     ):
2025-01-14T13:17:21.2657332Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2657503Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2657571Z         else:
2025-01-14T13:17:21.2657652Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2657716Z     
2025-01-14T13:17:21.2657854Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2657948Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2658021Z         )
2025-01-14T13:17:21.2658085Z     
2025-01-14T13:17:21.2658214Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2658324Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2658477Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2658548Z         else:
2025-01-14T13:17:21.2658628Z             continuum_state = None
2025-01-14T13:17:21.2658732Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2658838Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2658938Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2659046Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2659148Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2659309Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2659406Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2659474Z         ).to_numba(
2025-01-14T13:17:21.2659556Z             macro_atom_state,
2025-01-14T13:17:21.2659640Z             self.line_interaction_type,
2025-01-14T13:17:21.2659710Z         )
2025-01-14T13:17:21.2659808Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2660077Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2660146Z         ]
2025-01-14T13:17:21.2660444Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2660452Z 
2025-01-14T13:17:21.2660599Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2660873Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-1] ___
2025-01-14T13:17:21.2660877Z 
2025-01-14T13:17:21.2661543Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2661984Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2661994Z 
2025-01-14T13:17:21.2662079Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2662238Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2662333Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2662506Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2662598Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2662677Z >       sim.run_final()
2025-01-14T13:17:21.2662681Z 
2025-01-14T13:17:21.2662760Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2662873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2662968Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2663110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2663209Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2663360Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2663481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2663485Z 
2025-01-14T13:17:21.2663746Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2663955Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2664259Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2664539Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2664698Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2664843Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2664848Z 
2025-01-14T13:17:21.2664939Z     def initialize_transport_state(
2025-01-14T13:17:21.2665007Z         self,
2025-01-14T13:17:21.2665090Z         simulation_state,
2025-01-14T13:17:21.2665164Z         opacity_state,
2025-01-14T13:17:21.2665245Z         macro_atom_state,
2025-01-14T13:17:21.2665315Z         plasma,
2025-01-14T13:17:21.2665394Z         no_of_packets,
2025-01-14T13:17:21.2665475Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2665552Z         iteration=0,
2025-01-14T13:17:21.2665617Z     ):
2025-01-14T13:17:21.2665746Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2665845Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2665921Z         else:
2025-01-14T13:17:21.2665998Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2666137Z     
2025-01-14T13:17:21.2666270Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2666370Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2666439Z         )
2025-01-14T13:17:21.2666504Z     
2025-01-14T13:17:21.2666636Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2666745Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2666905Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2666973Z         else:
2025-01-14T13:17:21.2667061Z             continuum_state = None
2025-01-14T13:17:21.2667157Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2667272Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2667479Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2667587Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2667684Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2667786Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2667879Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2667955Z         ).to_numba(
2025-01-14T13:17:21.2668037Z             macro_atom_state,
2025-01-14T13:17:21.2668124Z             self.line_interaction_type,
2025-01-14T13:17:21.2668195Z         )
2025-01-14T13:17:21.2668294Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2668561Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2668627Z         ]
2025-01-14T13:17:21.2668929Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2668941Z 
2025-01-14T13:17:21.2669086Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2669288Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-2] ___
2025-01-14T13:17:21.2669296Z 
2025-01-14T13:17:21.2669954Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2670304Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2670309Z 
2025-01-14T13:17:21.2670401Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2670552Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2670653Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2670869Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2670964Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2671038Z >       sim.run_final()
2025-01-14T13:17:21.2671048Z 
2025-01-14T13:17:21.2671132Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2671243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2671339Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2671481Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2671748Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2671970Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2672078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2672082Z 
2025-01-14T13:17:21.2672375Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2672580Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2672809Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2673082Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2673320Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2673466Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2673470Z 
2025-01-14T13:17:21.2673557Z     def initialize_transport_state(
2025-01-14T13:17:21.2673631Z         self,
2025-01-14T13:17:21.2673707Z         simulation_state,
2025-01-14T13:17:21.2673787Z         opacity_state,
2025-01-14T13:17:21.2673861Z         macro_atom_state,
2025-01-14T13:17:21.2673936Z         plasma,
2025-01-14T13:17:21.2674008Z         no_of_packets,
2025-01-14T13:17:21.2674095Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2674170Z         iteration=0,
2025-01-14T13:17:21.2674243Z     ):
2025-01-14T13:17:21.2674476Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2674578Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2674652Z         else:
2025-01-14T13:17:21.2674733Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2674806Z     
2025-01-14T13:17:21.2674938Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2675041Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2675108Z         )
2025-01-14T13:17:21.2675181Z     
2025-01-14T13:17:21.2675306Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2675423Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2675575Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2675649Z         else:
2025-01-14T13:17:21.2675730Z             continuum_state = None
2025-01-14T13:17:21.2675839Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2675952Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2676049Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2676160Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2676259Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2676358Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2676449Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2676526Z         ).to_numba(
2025-01-14T13:17:21.2676603Z             macro_atom_state,
2025-01-14T13:17:21.2676697Z             self.line_interaction_type,
2025-01-14T13:17:21.2676763Z         )
2025-01-14T13:17:21.2676867Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2677133Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2677206Z         ]
2025-01-14T13:17:21.2677503Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2677586Z 
2025-01-14T13:17:21.2677739Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2677912Z _____________ ERROR at setup of TestBaseShellInfo.test_shells_data _____________
2025-01-14T13:17:21.2677919Z 
2025-01-14T13:17:21.2678572Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2678919Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2678923Z 
2025-01-14T13:17:21.2679009Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2679164Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2679262Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2679439Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2679530Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2679604Z >       sim.run_final()
2025-01-14T13:17:21.2679652Z 
2025-01-14T13:17:21.2679736Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2679842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2679944Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2680079Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2680175Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2680323Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2680432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2680436Z 
2025-01-14T13:17:21.2680692Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2680984Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2681210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2681482Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2681760Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2681896Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2681901Z 
2025-01-14T13:17:21.2681994Z     def initialize_transport_state(
2025-01-14T13:17:21.2682062Z         self,
2025-01-14T13:17:21.2682148Z         simulation_state,
2025-01-14T13:17:21.2682222Z         opacity_state,
2025-01-14T13:17:21.2682307Z         macro_atom_state,
2025-01-14T13:17:21.2682377Z         plasma,
2025-01-14T13:17:21.2682457Z         no_of_packets,
2025-01-14T13:17:21.2682540Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2682623Z         iteration=0,
2025-01-14T13:17:21.2682694Z     ):
2025-01-14T13:17:21.2682815Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2682918Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2682989Z         else:
2025-01-14T13:17:21.2683072Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2683137Z     
2025-01-14T13:17:21.2683275Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2683370Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2683442Z         )
2025-01-14T13:17:21.2683507Z     
2025-01-14T13:17:21.2683638Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2683749Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2683902Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2683974Z         else:
2025-01-14T13:17:21.2684062Z             continuum_state = None
2025-01-14T13:17:21.2684285Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2684397Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2684494Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2684599Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2684701Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2684790Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2684885Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2684955Z         ).to_numba(
2025-01-14T13:17:21.2685037Z             macro_atom_state,
2025-01-14T13:17:21.2685124Z             self.line_interaction_type,
2025-01-14T13:17:21.2685197Z         )
2025-01-14T13:17:21.2685296Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2685569Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2685648Z         ]
2025-01-14T13:17:21.2685947Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2685956Z 
2025-01-14T13:17:21.2686108Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2686354Z ________ ERROR at setup of TestBaseShellInfo.test_element_count_data[1] ________
2025-01-14T13:17:21.2686359Z 
2025-01-14T13:17:21.2687023Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2687367Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2687378Z 
2025-01-14T13:17:21.2687465Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2687620Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2687823Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2688000Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2688085Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2688170Z >       sim.run_final()
2025-01-14T13:17:21.2688174Z 
2025-01-14T13:17:21.2688255Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2688367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2688463Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2688607Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2688699Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2688856Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2688963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2688967Z 
2025-01-14T13:17:21.2689229Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2689438Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2689657Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2689943Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2690098Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2690237Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2690242Z 
2025-01-14T13:17:21.2690331Z     def initialize_transport_state(
2025-01-14T13:17:21.2690404Z         self,
2025-01-14T13:17:21.2690484Z         simulation_state,
2025-01-14T13:17:21.2690558Z         opacity_state,
2025-01-14T13:17:21.2690637Z         macro_atom_state,
2025-01-14T13:17:21.2690706Z         plasma,
2025-01-14T13:17:21.2690842Z         no_of_packets,
2025-01-14T13:17:21.2690927Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2691003Z         iteration=0,
2025-01-14T13:17:21.2691068Z     ):
2025-01-14T13:17:21.2691197Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2691294Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2691366Z         else:
2025-01-14T13:17:21.2691443Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2691514Z     
2025-01-14T13:17:21.2691750Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2691856Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2691921Z         )
2025-01-14T13:17:21.2691993Z     
2025-01-14T13:17:21.2692124Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2692233Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2692387Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2692458Z         else:
2025-01-14T13:17:21.2692545Z             continuum_state = None
2025-01-14T13:17:21.2692647Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2692759Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2692918Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2693029Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2693126Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2693225Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2693316Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2693391Z         ).to_numba(
2025-01-14T13:17:21.2693467Z             macro_atom_state,
2025-01-14T13:17:21.2693558Z             self.line_interaction_type,
2025-01-14T13:17:21.2693630Z         )
2025-01-14T13:17:21.2693731Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2694007Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2694193Z         ]
2025-01-14T13:17:21.2694503Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2694508Z 
2025-01-14T13:17:21.2694658Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2694844Z _______ ERROR at setup of TestBaseShellInfo.test_element_count_data[20] ________
2025-01-14T13:17:21.2694849Z 
2025-01-14T13:17:21.2695505Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2695853Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2695859Z 
2025-01-14T13:17:21.2695951Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2696103Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2696211Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2696380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2696473Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2696546Z >       sim.run_final()
2025-01-14T13:17:21.2696550Z 
2025-01-14T13:17:21.2696635Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2696743Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2696845Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2696988Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2697083Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2697244Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2697354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2697418Z 
2025-01-14T13:17:21.2697696Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2697898Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2698126Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2698400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2698563Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2698704Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2698708Z 
2025-01-14T13:17:21.2698792Z     def initialize_transport_state(
2025-01-14T13:17:21.2698867Z         self,
2025-01-14T13:17:21.2698944Z         simulation_state,
2025-01-14T13:17:21.2699024Z         opacity_state,
2025-01-14T13:17:21.2699099Z         macro_atom_state,
2025-01-14T13:17:21.2699179Z         plasma,
2025-01-14T13:17:21.2699255Z         no_of_packets,
2025-01-14T13:17:21.2699343Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2699417Z         iteration=0,
2025-01-14T13:17:21.2699493Z     ):
2025-01-14T13:17:21.2699617Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2699768Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2699837Z         else:
2025-01-14T13:17:21.2699921Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2699990Z     
2025-01-14T13:17:21.2700122Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2700222Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2700287Z         )
2025-01-14T13:17:21.2700356Z     
2025-01-14T13:17:21.2700479Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2700598Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2700748Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2700915Z         else:
2025-01-14T13:17:21.2700997Z             continuum_state = None
2025-01-14T13:17:21.2701101Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2701205Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2701302Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2701413Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2701514Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2701718Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2701810Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2701884Z         ).to_numba(
2025-01-14T13:17:21.2701961Z             macro_atom_state,
2025-01-14T13:17:21.2702052Z             self.line_interaction_type,
2025-01-14T13:17:21.2702116Z         )
2025-01-14T13:17:21.2702222Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2702490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2702569Z         ]
2025-01-14T13:17:21.2702866Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2702873Z 
2025-01-14T13:17:21.2703025Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2703204Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:17:21.2703213Z 
2025-01-14T13:17:21.2703868Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2704217Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2704297Z 
2025-01-14T13:17:21.2704387Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2704549Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2704643Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2704818Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2704907Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2704985Z >       sim.run_final()
2025-01-14T13:17:21.2704990Z 
2025-01-14T13:17:21.2705075Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2705180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2705280Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2705418Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2705516Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2705665Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2705775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2705785Z 
2025-01-14T13:17:21.2706042Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2706247Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2706536Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2706806Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2706968Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2707101Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2707106Z 
2025-01-14T13:17:21.2707198Z     def initialize_transport_state(
2025-01-14T13:17:21.2707266Z         self,
2025-01-14T13:17:21.2707348Z         simulation_state,
2025-01-14T13:17:21.2707423Z         opacity_state,
2025-01-14T13:17:21.2707508Z         macro_atom_state,
2025-01-14T13:17:21.2707702Z         plasma,
2025-01-14T13:17:21.2707785Z         no_of_packets,
2025-01-14T13:17:21.2707865Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2707943Z         iteration=0,
2025-01-14T13:17:21.2708022Z     ):
2025-01-14T13:17:21.2708144Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2708241Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2708309Z         else:
2025-01-14T13:17:21.2708399Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2708463Z     
2025-01-14T13:17:21.2708599Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2708692Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2708763Z         )
2025-01-14T13:17:21.2708827Z     
2025-01-14T13:17:21.2708954Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2709063Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2709219Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2709291Z         else:
2025-01-14T13:17:21.2709379Z             continuum_state = None
2025-01-14T13:17:21.2709477Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2709592Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2709686Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2709790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2709893Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2709984Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2710078Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2710147Z         ).to_numba(
2025-01-14T13:17:21.2710229Z             macro_atom_state,
2025-01-14T13:17:21.2710315Z             self.line_interaction_type,
2025-01-14T13:17:21.2710392Z         )
2025-01-14T13:17:21.2710490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2710813Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2710884Z         ]
2025-01-14T13:17:21.2711184Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2711191Z 
2025-01-14T13:17:21.2711347Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2711520Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[20-20] ________
2025-01-14T13:17:21.2711524Z 
2025-01-14T13:17:21.2712430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2712777Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2712789Z 
2025-01-14T13:17:21.2712883Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2713041Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2713136Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2713391Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2713477Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2713556Z >       sim.run_final()
2025-01-14T13:17:21.2713560Z 
2025-01-14T13:17:21.2713638Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2713748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2713853Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2713994Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2714087Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2714242Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2714348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2714497Z 
2025-01-14T13:17:21.2714761Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2714970Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2715189Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2715461Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2715618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2715756Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2715760Z 
2025-01-14T13:17:21.2715843Z     def initialize_transport_state(
2025-01-14T13:17:21.2715916Z         self,
2025-01-14T13:17:21.2715992Z         simulation_state,
2025-01-14T13:17:21.2716075Z         opacity_state,
2025-01-14T13:17:21.2716161Z         macro_atom_state,
2025-01-14T13:17:21.2716230Z         plasma,
2025-01-14T13:17:21.2716306Z         no_of_packets,
2025-01-14T13:17:21.2716385Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2716465Z         iteration=0,
2025-01-14T13:17:21.2716534Z     ):
2025-01-14T13:17:21.2716659Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2716750Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2716823Z         else:
2025-01-14T13:17:21.2716899Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2716969Z     
2025-01-14T13:17:21.2717100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2717198Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2717264Z         )
2025-01-14T13:17:21.2717334Z     
2025-01-14T13:17:21.2717459Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2717573Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2717799Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2717867Z         else:
2025-01-14T13:17:21.2717952Z             continuum_state = None
2025-01-14T13:17:21.2718050Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2718160Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2718248Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2718356Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2718450Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2718545Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2718634Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2718707Z         ).to_numba(
2025-01-14T13:17:21.2718782Z             macro_atom_state,
2025-01-14T13:17:21.2718872Z             self.line_interaction_type,
2025-01-14T13:17:21.2718937Z         )
2025-01-14T13:17:21.2719043Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2719319Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2719385Z         ]
2025-01-14T13:17:21.2719737Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2719742Z 
2025-01-14T13:17:21.2719885Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2720070Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:17:21.2720075Z 
2025-01-14T13:17:21.2720725Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2721069Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2721151Z 
2025-01-14T13:17:21.2721243Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2721391Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2721494Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2721763Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2721855Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2721927Z >       sim.run_final()
2025-01-14T13:17:21.2721938Z 
2025-01-14T13:17:21.2722079Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2722254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2722392Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2722533Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2722630Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2722788Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2722896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2722901Z 
2025-01-14T13:17:21.2723164Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2723363Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2723588Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2723855Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2724014Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2724151Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2724160Z 
2025-01-14T13:17:21.2724245Z     def initialize_transport_state(
2025-01-14T13:17:21.2724315Z         self,
2025-01-14T13:17:21.2724475Z         simulation_state,
2025-01-14T13:17:21.2724558Z         opacity_state,
2025-01-14T13:17:21.2724632Z         macro_atom_state,
2025-01-14T13:17:21.2724706Z         plasma,
2025-01-14T13:17:21.2724777Z         no_of_packets,
2025-01-14T13:17:21.2724863Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2724935Z         iteration=0,
2025-01-14T13:17:21.2725004Z     ):
2025-01-14T13:17:21.2725124Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2725221Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2725292Z         else:
2025-01-14T13:17:21.2725375Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2725439Z     
2025-01-14T13:17:21.2725577Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2725675Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2725740Z         )
2025-01-14T13:17:21.2725809Z     
2025-01-14T13:17:21.2725935Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2726052Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2726210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2726281Z         else:
2025-01-14T13:17:21.2726433Z             continuum_state = None
2025-01-14T13:17:21.2726541Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2726646Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2726740Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2726841Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2726941Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2727036Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2727130Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2727204Z         ).to_numba(
2025-01-14T13:17:21.2727279Z             macro_atom_state,
2025-01-14T13:17:21.2727369Z             self.line_interaction_type,
2025-01-14T13:17:21.2727438Z         )
2025-01-14T13:17:21.2727648Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2727914Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2727988Z         ]
2025-01-14T13:17:21.2728285Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2728289Z 
2025-01-14T13:17:21.2728435Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2728614Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[3-20-20] ______
2025-01-14T13:17:21.2728618Z 
2025-01-14T13:17:21.2729278Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2729628Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2729638Z 
2025-01-14T13:17:21.2729724Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2729882Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2729976Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2730150Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2730236Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2730314Z >       sim.run_final()
2025-01-14T13:17:21.2730318Z 
2025-01-14T13:17:21.2730403Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2730507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2730606Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2730743Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2730889Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2731044Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2731153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2731161Z 
2025-01-14T13:17:21.2731420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2731737Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2731959Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2732236Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2732396Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2732529Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2732533Z 
2025-01-14T13:17:21.2732622Z     def initialize_transport_state(
2025-01-14T13:17:21.2732692Z         self,
2025-01-14T13:17:21.2732776Z         simulation_state,
2025-01-14T13:17:21.2732849Z         opacity_state,
2025-01-14T13:17:21.2732932Z         macro_atom_state,
2025-01-14T13:17:21.2733001Z         plasma,
2025-01-14T13:17:21.2733147Z         no_of_packets,
2025-01-14T13:17:21.2733228Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2733304Z         iteration=0,
2025-01-14T13:17:21.2733369Z     ):
2025-01-14T13:17:21.2733496Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2733595Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2733661Z         else:
2025-01-14T13:17:21.2733744Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2733808Z     
2025-01-14T13:17:21.2733944Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2734038Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2734109Z         )
2025-01-14T13:17:21.2734173Z     
2025-01-14T13:17:21.2734305Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2734545Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2734699Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2734768Z         else:
2025-01-14T13:17:21.2734855Z             continuum_state = None
2025-01-14T13:17:21.2734952Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2735063Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2735151Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2735257Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2735357Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2735447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2735544Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2735612Z         ).to_numba(
2025-01-14T13:17:21.2735693Z             macro_atom_state,
2025-01-14T13:17:21.2735781Z             self.line_interaction_type,
2025-01-14T13:17:21.2735856Z         )
2025-01-14T13:17:21.2735954Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2736221Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2736289Z         ]
2025-01-14T13:17:21.2736593Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2736597Z 
2025-01-14T13:17:21.2736748Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2736925Z __________ ERROR at setup of TestSimulationShellInfo.test_shells_data __________
2025-01-14T13:17:21.2736929Z 
2025-01-14T13:17:21.2737586Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2737996Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2738001Z 
2025-01-14T13:17:21.2738091Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2738241Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2738340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2738515Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2738600Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2738678Z >       sim.run_final()
2025-01-14T13:17:21.2738682Z 
2025-01-14T13:17:21.2738760Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2738869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2738962Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2739104Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2739202Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2739356Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2739460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2739509Z 
2025-01-14T13:17:21.2739774Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2739979Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2740196Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2740470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2740625Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2740763Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2740769Z 
2025-01-14T13:17:21.2740853Z     def initialize_transport_state(
2025-01-14T13:17:21.2741001Z         self,
2025-01-14T13:17:21.2741077Z         simulation_state,
2025-01-14T13:17:21.2741155Z         opacity_state,
2025-01-14T13:17:21.2741228Z         macro_atom_state,
2025-01-14T13:17:21.2741306Z         plasma,
2025-01-14T13:17:21.2741381Z         no_of_packets,
2025-01-14T13:17:21.2741460Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2741535Z         iteration=0,
2025-01-14T13:17:21.2741694Z     ):
2025-01-14T13:17:21.2741822Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2741914Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2741989Z         else:
2025-01-14T13:17:21.2742066Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2742136Z     
2025-01-14T13:17:21.2742267Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2742366Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2742435Z         )
2025-01-14T13:17:21.2742503Z     
2025-01-14T13:17:21.2742632Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2742746Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2742898Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2742974Z         else:
2025-01-14T13:17:21.2743059Z             continuum_state = None
2025-01-14T13:17:21.2743157Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2743267Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2743353Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2743460Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2743554Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2743651Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2743743Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2743816Z         ).to_numba(
2025-01-14T13:17:21.2743963Z             macro_atom_state,
2025-01-14T13:17:21.2744062Z             self.line_interaction_type,
2025-01-14T13:17:21.2744128Z         )
2025-01-14T13:17:21.2744229Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2744498Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2744568Z         ]
2025-01-14T13:17:21.2744869Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2744873Z 
2025-01-14T13:17:21.2745016Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2745208Z _____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[1] _____
2025-01-14T13:17:21.2745212Z 
2025-01-14T13:17:21.2745863Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2746214Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2746277Z 
2025-01-14T13:17:21.2746370Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2746520Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2746618Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2746784Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2746875Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2746951Z >       sim.run_final()
2025-01-14T13:17:21.2746955Z 
2025-01-14T13:17:21.2747038Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2747141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2747241Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2747379Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2747584Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2747742Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2747847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2747852Z 
2025-01-14T13:17:21.2748114Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2748310Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2748532Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2748799Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2748957Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2749089Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2749105Z 
2025-01-14T13:17:21.2749189Z     def initialize_transport_state(
2025-01-14T13:17:21.2749262Z         self,
2025-01-14T13:17:21.2749336Z         simulation_state,
2025-01-14T13:17:21.2749414Z         opacity_state,
2025-01-14T13:17:21.2749491Z         macro_atom_state,
2025-01-14T13:17:21.2749565Z         plasma,
2025-01-14T13:17:21.2749636Z         no_of_packets,
2025-01-14T13:17:21.2749721Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2749792Z         iteration=0,
2025-01-14T13:17:21.2749861Z     ):
2025-01-14T13:17:21.2749979Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2750077Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2750144Z         else:
2025-01-14T13:17:21.2750225Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2750290Z     
2025-01-14T13:17:21.2750425Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2750520Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2750647Z         )
2025-01-14T13:17:21.2750716Z     
2025-01-14T13:17:21.2750840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2750956Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2751107Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2751179Z         else:
2025-01-14T13:17:21.2751259Z             continuum_state = None
2025-01-14T13:17:21.2751361Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2751467Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2751716Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2751869Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2751975Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2752067Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2752161Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2752233Z         ).to_numba(
2025-01-14T13:17:21.2752319Z             macro_atom_state,
2025-01-14T13:17:21.2752409Z             self.line_interaction_type,
2025-01-14T13:17:21.2757774Z         )
2025-01-14T13:17:21.2757938Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2758368Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2763935Z         ]
2025-01-14T13:17:21.2764277Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2764284Z 
2025-01-14T13:17:21.2764454Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2764658Z ____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[20] _____
2025-01-14T13:17:21.2764663Z 
2025-01-14T13:17:21.2765342Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2765817Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2765833Z 
2025-01-14T13:17:21.2765928Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2766091Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2766228Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2766413Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2766500Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2766579Z >       sim.run_final()
2025-01-14T13:17:21.2766584Z 
2025-01-14T13:17:21.2766665Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2766784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2766884Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2767037Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2767131Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2767291Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2767402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2767411Z 
2025-01-14T13:17:21.2767678Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2767884Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2768104Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2768377Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2768541Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2768760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2768769Z 
2025-01-14T13:17:21.2768858Z     def initialize_transport_state(
2025-01-14T13:17:21.2768930Z         self,
2025-01-14T13:17:21.2769011Z         simulation_state,
2025-01-14T13:17:21.2769089Z         opacity_state,
2025-01-14T13:17:21.2769172Z         macro_atom_state,
2025-01-14T13:17:21.2769241Z         plasma,
2025-01-14T13:17:21.2769315Z         no_of_packets,
2025-01-14T13:17:21.2769399Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2769473Z         iteration=0,
2025-01-14T13:17:21.2769539Z     ):
2025-01-14T13:17:21.2769670Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2769768Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2769841Z         else:
2025-01-14T13:17:21.2769917Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2769986Z     
2025-01-14T13:17:21.2770122Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2770229Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2770299Z         )
2025-01-14T13:17:21.2770368Z     
2025-01-14T13:17:21.2770501Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2770692Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2770852Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2770918Z         else:
2025-01-14T13:17:21.2771109Z             continuum_state = None
2025-01-14T13:17:21.2771211Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2771325Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2771414Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2771526Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2771768Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2771869Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2771960Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2772108Z         ).to_numba(
2025-01-14T13:17:21.2772217Z             macro_atom_state,
2025-01-14T13:17:21.2772308Z             self.line_interaction_type,
2025-01-14T13:17:21.2772376Z         )
2025-01-14T13:17:21.2772481Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2772759Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2772829Z         ]
2025-01-14T13:17:21.2773139Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2773145Z 
2025-01-14T13:17:21.2773296Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2773492Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[12-1] ______
2025-01-14T13:17:21.2773497Z 
2025-01-14T13:17:21.2774169Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2774530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2774538Z 
2025-01-14T13:17:21.2774634Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2774790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2774892Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2775064Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2775154Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2775229Z >       sim.run_final()
2025-01-14T13:17:21.2775233Z 
2025-01-14T13:17:21.2775318Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2775428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2775604Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2775755Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2775848Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2776007Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2776112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2776119Z 
2025-01-14T13:17:21.2776391Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2776591Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2776815Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2777083Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2777246Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2777391Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2777395Z 
2025-01-14T13:17:21.2777481Z     def initialize_transport_state(
2025-01-14T13:17:21.2777617Z         self,
2025-01-14T13:17:21.2777695Z         simulation_state,
2025-01-14T13:17:21.2777772Z         opacity_state,
2025-01-14T13:17:21.2777844Z         macro_atom_state,
2025-01-14T13:17:21.2777987Z         plasma,
2025-01-14T13:17:21.2778058Z         no_of_packets,
2025-01-14T13:17:21.2778142Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2778212Z         iteration=0,
2025-01-14T13:17:21.2778281Z     ):
2025-01-14T13:17:21.2778406Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2778505Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2778570Z         else:
2025-01-14T13:17:21.2778650Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2778714Z     
2025-01-14T13:17:21.2778855Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2779004Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2779070Z         )
2025-01-14T13:17:21.2779139Z     
2025-01-14T13:17:21.2779266Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2779386Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2779536Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2779610Z         else:
2025-01-14T13:17:21.2779691Z             continuum_state = None
2025-01-14T13:17:21.2779794Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2779899Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2779993Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2780097Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2780198Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2780292Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2780389Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2780464Z         ).to_numba(
2025-01-14T13:17:21.2780541Z             macro_atom_state,
2025-01-14T13:17:21.2780635Z             self.line_interaction_type,
2025-01-14T13:17:21.2780701Z         )
2025-01-14T13:17:21.2780805Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2781075Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2781147Z         ]
2025-01-14T13:17:21.2781442Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2781447Z 
2025-01-14T13:17:21.2781701Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2781894Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[20-20] _____
2025-01-14T13:17:21.2781904Z 
2025-01-14T13:17:21.2782634Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2782993Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2782998Z 
2025-01-14T13:17:21.2783087Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2783240Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2783336Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2783510Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2783594Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2783672Z >       sim.run_final()
2025-01-14T13:17:21.2783676Z 
2025-01-14T13:17:21.2783759Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2783865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2783969Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2784107Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2784269Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2784419Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2784525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2784584Z 
2025-01-14T13:17:21.2784847Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2785050Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2785267Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2785544Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2785762Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2785897Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2785901Z 
2025-01-14T13:17:21.2785998Z     def initialize_transport_state(
2025-01-14T13:17:21.2786065Z         self,
2025-01-14T13:17:21.2786146Z         simulation_state,
2025-01-14T13:17:21.2786218Z         opacity_state,
2025-01-14T13:17:21.2786300Z         macro_atom_state,
2025-01-14T13:17:21.2786367Z         plasma,
2025-01-14T13:17:21.2786445Z         no_of_packets,
2025-01-14T13:17:21.2786525Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2786601Z         iteration=0,
2025-01-14T13:17:21.2786667Z     ):
2025-01-14T13:17:21.2786796Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2786895Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2786962Z         else:
2025-01-14T13:17:21.2787044Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2787112Z     
2025-01-14T13:17:21.2787254Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2787348Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2787421Z         )
2025-01-14T13:17:21.2787488Z     
2025-01-14T13:17:21.2787621Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2787734Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2787894Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2787960Z         else:
2025-01-14T13:17:21.2788046Z             continuum_state = None
2025-01-14T13:17:21.2788143Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2788254Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2788343Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2788450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2788555Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2788721Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2788817Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2788888Z         ).to_numba(
2025-01-14T13:17:21.2788970Z             macro_atom_state,
2025-01-14T13:17:21.2789055Z             self.line_interaction_type,
2025-01-14T13:17:21.2789125Z         )
2025-01-14T13:17:21.2789223Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2789499Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2789566Z         ]
2025-01-14T13:17:21.2789872Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2789877Z 
2025-01-14T13:17:21.2790033Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2790228Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[2-12-1] ____
2025-01-14T13:17:21.2790236Z 
2025-01-14T13:17:21.2790901Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2791297Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2791389Z 
2025-01-14T13:17:21.2791483Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2791852Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2791965Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2792146Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2792233Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2792310Z >       sim.run_final()
2025-01-14T13:17:21.2792318Z 
2025-01-14T13:17:21.2792402Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2792599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2792695Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2792841Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2792941Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2793099Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2793211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2793221Z 
2025-01-14T13:17:21.2793482Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2793687Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2793906Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2794183Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2794346Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2794488Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2794496Z 
2025-01-14T13:17:21.2794582Z     def initialize_transport_state(
2025-01-14T13:17:21.2794656Z         self,
2025-01-14T13:17:21.2794732Z         simulation_state,
2025-01-14T13:17:21.2794814Z         opacity_state,
2025-01-14T13:17:21.2794887Z         macro_atom_state,
2025-01-14T13:17:21.2794960Z         plasma,
2025-01-14T13:17:21.2795036Z         no_of_packets,
2025-01-14T13:17:21.2795116Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2795195Z         iteration=0,
2025-01-14T13:17:21.2795260Z     ):
2025-01-14T13:17:21.2795390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2795486Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2795557Z         else:
2025-01-14T13:17:21.2795702Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2795775Z     
2025-01-14T13:17:21.2795909Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2796011Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2796079Z         )
2025-01-14T13:17:21.2796149Z     
2025-01-14T13:17:21.2796277Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2796394Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2796546Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2796619Z         else:
2025-01-14T13:17:21.2796706Z             continuum_state = None
2025-01-14T13:17:21.2796804Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2796915Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2797005Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2797116Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2797215Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2797313Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2797406Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2797546Z         ).to_numba(
2025-01-14T13:17:21.2797622Z             macro_atom_state,
2025-01-14T13:17:21.2797714Z             self.line_interaction_type,
2025-01-14T13:17:21.2797780Z         )
2025-01-14T13:17:21.2797939Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2798215Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2798286Z         ]
2025-01-14T13:17:21.2798595Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2798600Z 
2025-01-14T13:17:21.2798751Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2798951Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[3-20-20] ___
2025-01-14T13:17:21.2799001Z 
2025-01-14T13:17:21.2799665Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2800023Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2800030Z 
2025-01-14T13:17:21.2800124Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2800280Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2800381Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2800553Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2800648Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2800723Z >       sim.run_final()
2025-01-14T13:17:21.2800731Z 
2025-01-14T13:17:21.2800816Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2800924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2801028Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2801172Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2801270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2801431Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2801534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2801539Z 
2025-01-14T13:17:21.2802066Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2802274Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2802499Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2802860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2803029Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2803170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2803182Z 
2025-01-14T13:17:21.2803268Z     def initialize_transport_state(
2025-01-14T13:17:21.2803339Z         self,
2025-01-14T13:17:21.2803418Z         simulation_state,
2025-01-14T13:17:21.2803497Z         opacity_state,
2025-01-14T13:17:21.2803572Z         macro_atom_state,
2025-01-14T13:17:21.2803645Z         plasma,
2025-01-14T13:17:21.2803717Z         no_of_packets,
2025-01-14T13:17:21.2803802Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2803873Z         iteration=0,
2025-01-14T13:17:21.2803944Z     ):
2025-01-14T13:17:21.2804069Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2804171Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2804241Z         else:
2025-01-14T13:17:21.2804325Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2804394Z     
2025-01-14T13:17:21.2804537Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2804702Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2804773Z         )
2025-01-14T13:17:21.2804841Z     
2025-01-14T13:17:21.2804969Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2805142Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2805293Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2805364Z         else:
2025-01-14T13:17:21.2805445Z             continuum_state = None
2025-01-14T13:17:21.2805549Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2805655Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2805748Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2805853Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2806016Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2806107Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2806201Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2806272Z         ).to_numba(
2025-01-14T13:17:21.2806354Z             macro_atom_state,
2025-01-14T13:17:21.2806446Z             self.line_interaction_type,
2025-01-14T13:17:21.2806514Z         )
2025-01-14T13:17:21.2806622Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2806889Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2806960Z         ]
2025-01-14T13:17:21.2807262Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2807267Z 
2025-01-14T13:17:21.2807423Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2807598Z _____________ ERROR at setup of TestHDFShellInfo.test_shells_data ______________
2025-01-14T13:17:21.2807603Z 
2025-01-14T13:17:21.2808271Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2808628Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2808633Z 
2025-01-14T13:17:21.2808720Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2808875Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2808970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2809145Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2809278Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2809357Z >       sim.run_final()
2025-01-14T13:17:21.2809361Z 
2025-01-14T13:17:21.2809441Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2809553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2809654Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2809805Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2809904Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2810062Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2810166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2810170Z 
2025-01-14T13:17:21.2810436Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2810634Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2810857Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2811132Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2811294Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2811479Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2811489Z 
2025-01-14T13:17:21.2811735Z     def initialize_transport_state(
2025-01-14T13:17:21.2811874Z         self,
2025-01-14T13:17:21.2811951Z         simulation_state,
2025-01-14T13:17:21.2812031Z         opacity_state,
2025-01-14T13:17:21.2812105Z         macro_atom_state,
2025-01-14T13:17:21.2812178Z         plasma,
2025-01-14T13:17:21.2812249Z         no_of_packets,
2025-01-14T13:17:21.2812333Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2812405Z         iteration=0,
2025-01-14T13:17:21.2812475Z     ):
2025-01-14T13:17:21.2812598Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2812703Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2812852Z         else:
2025-01-14T13:17:21.2812933Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2812998Z     
2025-01-14T13:17:21.2813135Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2813232Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2813303Z         )
2025-01-14T13:17:21.2813372Z     
2025-01-14T13:17:21.2813501Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2813637Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2813809Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2813879Z         else:
2025-01-14T13:17:21.2813960Z             continuum_state = None
2025-01-14T13:17:21.2814062Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2814168Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2814269Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2814377Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2814476Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2814567Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2814664Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2814734Z         ).to_numba(
2025-01-14T13:17:21.2814818Z             macro_atom_state,
2025-01-14T13:17:21.2814910Z             self.line_interaction_type,
2025-01-14T13:17:21.2814978Z         )
2025-01-14T13:17:21.2815083Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2815346Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2815416Z         ]
2025-01-14T13:17:21.2815714Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2815719Z 
2025-01-14T13:17:21.2815942Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2816120Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[1] _________
2025-01-14T13:17:21.2816124Z 
2025-01-14T13:17:21.2816786Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2817138Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2817143Z 
2025-01-14T13:17:21.2817229Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2817382Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2817478Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2817650Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2817739Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2817817Z >       sim.run_final()
2025-01-14T13:17:21.2817821Z 
2025-01-14T13:17:21.2817900Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2818011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2818176Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2818314Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2818456Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2818606Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2818711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2818715Z 
2025-01-14T13:17:21.2818987Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2819207Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2819429Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2819748Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2819913Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2820047Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2820055Z 
2025-01-14T13:17:21.2820144Z     def initialize_transport_state(
2025-01-14T13:17:21.2820212Z         self,
2025-01-14T13:17:21.2820290Z         simulation_state,
2025-01-14T13:17:21.2820362Z         opacity_state,
2025-01-14T13:17:21.2820440Z         macro_atom_state,
2025-01-14T13:17:21.2820507Z         plasma,
2025-01-14T13:17:21.2820582Z         no_of_packets,
2025-01-14T13:17:21.2820660Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2820735Z         iteration=0,
2025-01-14T13:17:21.2820801Z     ):
2025-01-14T13:17:21.2820931Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2821028Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2821100Z         else:
2025-01-14T13:17:21.2821181Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2821250Z     
2025-01-14T13:17:21.2821388Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2821486Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2821650Z         )
2025-01-14T13:17:21.2821719Z     
2025-01-14T13:17:21.2821849Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2821959Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2822111Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2822178Z         else:
2025-01-14T13:17:21.2822263Z             continuum_state = None
2025-01-14T13:17:21.2822359Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2822467Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2822627Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2822737Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2822836Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2822930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2823022Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2823092Z         ).to_numba(
2025-01-14T13:17:21.2823174Z             macro_atom_state,
2025-01-14T13:17:21.2823259Z             self.line_interaction_type,
2025-01-14T13:17:21.2823329Z         )
2025-01-14T13:17:21.2823428Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2823698Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2823764Z         ]
2025-01-14T13:17:21.2824062Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2824072Z 
2025-01-14T13:17:21.2824215Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2824394Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[20] ________
2025-01-14T13:17:21.2824463Z 
2025-01-14T13:17:21.2825124Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2825521Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2825526Z 
2025-01-14T13:17:21.2825617Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2825767Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2825868Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2826041Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2826188Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2826268Z >       sim.run_final()
2025-01-14T13:17:21.2826272Z 
2025-01-14T13:17:21.2826350Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2826468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2826566Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2826711Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2826803Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2826957Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2827058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2827062Z 
2025-01-14T13:17:21.2827326Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2827528Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2827752Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2828025Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2828182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2828320Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2828326Z 
2025-01-14T13:17:21.2828411Z     def initialize_transport_state(
2025-01-14T13:17:21.2828483Z         self,
2025-01-14T13:17:21.2828559Z         simulation_state,
2025-01-14T13:17:21.2828636Z         opacity_state,
2025-01-14T13:17:21.2828710Z         macro_atom_state,
2025-01-14T13:17:21.2828784Z         plasma,
2025-01-14T13:17:21.2828854Z         no_of_packets,
2025-01-14T13:17:21.2828939Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2829014Z         iteration=0,
2025-01-14T13:17:21.2829125Z     ):
2025-01-14T13:17:21.2829253Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2829345Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2829415Z         else:
2025-01-14T13:17:21.2829494Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2829564Z     
2025-01-14T13:17:21.2829694Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2829795Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2829864Z         )
2025-01-14T13:17:21.2829934Z     
2025-01-14T13:17:21.2830058Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2830171Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2830321Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2830392Z         else:
2025-01-14T13:17:21.2830471Z             continuum_state = None
2025-01-14T13:17:21.2830574Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2830685Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2830775Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2830885Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2831032Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2831129Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2831218Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2831340Z         ).to_numba(
2025-01-14T13:17:21.2831416Z             macro_atom_state,
2025-01-14T13:17:21.2831505Z             self.line_interaction_type,
2025-01-14T13:17:21.2831721Z         )
2025-01-14T13:17:21.2831876Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2832146Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2832219Z         ]
2025-01-14T13:17:21.2832513Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2832597Z 
2025-01-14T13:17:21.2832748Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2832926Z _________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:17:21.2832934Z 
2025-01-14T13:17:21.2833592Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2833941Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2833945Z 
2025-01-14T13:17:21.2834038Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2834186Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2834284Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2834459Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2834548Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2834620Z >       sim.run_final()
2025-01-14T13:17:21.2834627Z 
2025-01-14T13:17:21.2834710Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2834813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2834917Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2835054Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2835152Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2835302Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2835410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2835414Z 
2025-01-14T13:17:21.2835681Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2835948Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2836170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2836441Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2836598Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2836737Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2836742Z 
2025-01-14T13:17:21.2836833Z     def initialize_transport_state(
2025-01-14T13:17:21.2836902Z         self,
2025-01-14T13:17:21.2836981Z         simulation_state,
2025-01-14T13:17:21.2837059Z         opacity_state,
2025-01-14T13:17:21.2837132Z         macro_atom_state,
2025-01-14T13:17:21.2837205Z         plasma,
2025-01-14T13:17:21.2837275Z         no_of_packets,
2025-01-14T13:17:21.2837358Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2837431Z         iteration=0,
2025-01-14T13:17:21.2837505Z     ):
2025-01-14T13:17:21.2837623Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2837719Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2837847Z         else:
2025-01-14T13:17:21.2837927Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2837992Z     
2025-01-14T13:17:21.2838128Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2838294Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2838365Z         )
2025-01-14T13:17:21.2838429Z     
2025-01-14T13:17:21.2838559Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2838676Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2838822Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2838894Z         else:
2025-01-14T13:17:21.2838973Z             continuum_state = None
2025-01-14T13:17:21.2839078Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2839226Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2839320Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2839420Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2839522Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2839612Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2839710Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2839778Z         ).to_numba(
2025-01-14T13:17:21.2839858Z             macro_atom_state,
2025-01-14T13:17:21.2839942Z             self.line_interaction_type,
2025-01-14T13:17:21.2840012Z         )
2025-01-14T13:17:21.2840119Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2840382Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2840452Z         ]
2025-01-14T13:17:21.2840750Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2840758Z 
2025-01-14T13:17:21.2840908Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2841086Z ________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[20-20] _________
2025-01-14T13:17:21.2841091Z 
2025-01-14T13:17:21.2841982Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2842343Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2842349Z 
2025-01-14T13:17:21.2842436Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2842591Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2842765Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2842944Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2843030Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2843109Z >       sim.run_final()
2025-01-14T13:17:21.2843114Z 
2025-01-14T13:17:21.2843195Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2843304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2843403Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2843545Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2843640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2843790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2843896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2843900Z 
2025-01-14T13:17:21.2844159Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2844368Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2844586Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2844995Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2845149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2845343Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2845347Z 
2025-01-14T13:17:21.2845436Z     def initialize_transport_state(
2025-01-14T13:17:21.2845502Z         self,
2025-01-14T13:17:21.2845582Z         simulation_state,
2025-01-14T13:17:21.2845653Z         opacity_state,
2025-01-14T13:17:21.2845731Z         macro_atom_state,
2025-01-14T13:17:21.2845799Z         plasma,
2025-01-14T13:17:21.2845874Z         no_of_packets,
2025-01-14T13:17:21.2845954Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2846087Z         iteration=0,
2025-01-14T13:17:21.2846152Z     ):
2025-01-14T13:17:21.2846278Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2846373Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2846444Z         else:
2025-01-14T13:17:21.2846519Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2846588Z     
2025-01-14T13:17:21.2846720Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2846818Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2846887Z         )
2025-01-14T13:17:21.2846953Z     
2025-01-14T13:17:21.2847083Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2847194Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2847346Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2847414Z         else:
2025-01-14T13:17:21.2847501Z             continuum_state = None
2025-01-14T13:17:21.2847601Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2847716Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2847804Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2847915Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2848010Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2848107Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2848201Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2848270Z         ).to_numba(
2025-01-14T13:17:21.2848349Z             macro_atom_state,
2025-01-14T13:17:21.2848434Z             self.line_interaction_type,
2025-01-14T13:17:21.2848504Z         )
2025-01-14T13:17:21.2848602Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2848870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2848989Z         ]
2025-01-14T13:17:21.2849292Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2849297Z 
2025-01-14T13:17:21.2849440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2849622Z _______ ERROR at setup of TestHDFShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:17:21.2849626Z 
2025-01-14T13:17:21.2850289Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2850630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2850634Z 
2025-01-14T13:17:21.2850724Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2850875Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2850976Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2851145Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2851278Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2851351Z >       sim.run_final()
2025-01-14T13:17:21.2851360Z 
2025-01-14T13:17:21.2851439Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2851707Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2851809Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2851954Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2852046Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2852200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2852302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2852309Z 
2025-01-14T13:17:21.2852642Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2852841Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2853066Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2853344Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2853501Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2853639Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2853643Z 
2025-01-14T13:17:21.2853729Z     def initialize_transport_state(
2025-01-14T13:17:21.2853801Z         self,
2025-01-14T13:17:21.2853876Z         simulation_state,
2025-01-14T13:17:21.2853953Z         opacity_state,
2025-01-14T13:17:21.2854027Z         macro_atom_state,
2025-01-14T13:17:21.2854100Z         plasma,
2025-01-14T13:17:21.2854175Z         no_of_packets,
2025-01-14T13:17:21.2854262Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2854332Z         iteration=0,
2025-01-14T13:17:21.2854403Z     ):
2025-01-14T13:17:21.2854525Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2854633Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2854707Z         else:
2025-01-14T13:17:21.2854787Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2854861Z     
2025-01-14T13:17:21.2854994Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2855096Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2855163Z         )
2025-01-14T13:17:21.2855232Z     
2025-01-14T13:17:21.2855356Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2855474Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2855620Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2855764Z         else:
2025-01-14T13:17:21.2855851Z             continuum_state = None
2025-01-14T13:17:21.2855957Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2856065Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2856163Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2856274Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2856368Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2856470Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2856559Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2856634Z         ).to_numba(
2025-01-14T13:17:21.2856710Z             macro_atom_state,
2025-01-14T13:17:21.2856799Z             self.line_interaction_type,
2025-01-14T13:17:21.2856864Z         )
2025-01-14T13:17:21.2856966Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2857230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2857306Z         ]
2025-01-14T13:17:21.2857603Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2857675Z 
2025-01-14T13:17:21.2857820Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2858006Z ______ ERROR at setup of TestHDFShellInfo.test_level_count_data[3-20-20] _______
2025-01-14T13:17:21.2858066Z 
2025-01-14T13:17:21.2858724Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2859068Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2859073Z 
2025-01-14T13:17:21.2859162Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2859360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2859459Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2859631Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2859727Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2859800Z >       sim.run_final()
2025-01-14T13:17:21.2859804Z 
2025-01-14T13:17:21.2859891Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2859995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2860095Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2860230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2860327Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2860477Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2860583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2860593Z 
2025-01-14T13:17:21.2860857Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2861054Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2861280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2861647Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2861811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2861948Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2861952Z 
2025-01-14T13:17:21.2862042Z     def initialize_transport_state(
2025-01-14T13:17:21.2862110Z         self,
2025-01-14T13:17:21.2862192Z         simulation_state,
2025-01-14T13:17:21.2862266Z         opacity_state,
2025-01-14T13:17:21.2862424Z         macro_atom_state,
2025-01-14T13:17:21.2862503Z         plasma,
2025-01-14T13:17:21.2862574Z         no_of_packets,
2025-01-14T13:17:21.2862659Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2862730Z         iteration=0,
2025-01-14T13:17:21.2862802Z     ):
2025-01-14T13:17:21.2862929Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2863027Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2863096Z         else:
2025-01-14T13:17:21.2863180Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2863245Z     
2025-01-14T13:17:21.2863382Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2863474Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2863554Z         )
2025-01-14T13:17:21.2863620Z     
2025-01-14T13:17:21.2863750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2863859Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2864014Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2864092Z         else:
2025-01-14T13:17:21.2864172Z             continuum_state = None
2025-01-14T13:17:21.2864275Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2864464Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2864561Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2864664Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2864823Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2864915Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2865012Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2865083Z         ).to_numba(
2025-01-14T13:17:21.2865166Z             macro_atom_state,
2025-01-14T13:17:21.2865253Z             self.line_interaction_type,
2025-01-14T13:17:21.2865327Z         )
2025-01-14T13:17:21.2865429Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2865704Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2865837Z         ]
2025-01-14T13:17:21.2866132Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2866140Z 
2025-01-14T13:17:21.2866290Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2866476Z _____ ERROR at setup of TestShellInfoWidget.test_selection_on_shells_table _____
2025-01-14T13:17:21.2866483Z 
2025-01-14T13:17:21.2867140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2867482Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2867495Z 
2025-01-14T13:17:21.2867587Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2867742Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2867836Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2868019Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2868105Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2868185Z >       sim.run_final()
2025-01-14T13:17:21.2868191Z 
2025-01-14T13:17:21.2868271Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2868384Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2868484Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2868634Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2868733Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2868884Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2869040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2869048Z 
2025-01-14T13:17:21.2869311Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2869518Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2869740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2870019Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2870176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2870316Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2870320Z 
2025-01-14T13:17:21.2870412Z     def initialize_transport_state(
2025-01-14T13:17:21.2870479Z         self,
2025-01-14T13:17:21.2870560Z         simulation_state,
2025-01-14T13:17:21.2870637Z         opacity_state,
2025-01-14T13:17:21.2870720Z         macro_atom_state,
2025-01-14T13:17:21.2870790Z         plasma,
2025-01-14T13:17:21.2870869Z         no_of_packets,
2025-01-14T13:17:21.2870948Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2871072Z         iteration=0,
2025-01-14T13:17:21.2871140Z     ):
2025-01-14T13:17:21.2871275Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2871368Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2871479Z         else:
2025-01-14T13:17:21.2871693Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2871820Z     
2025-01-14T13:17:21.2871960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2872061Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2872134Z         )
2025-01-14T13:17:21.2872221Z     
2025-01-14T13:17:21.2872354Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2872464Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2872703Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2872772Z         else:
2025-01-14T13:17:21.2872862Z             continuum_state = None
2025-01-14T13:17:21.2872961Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2873078Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2873168Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2873281Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2873376Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2873474Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2873562Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2873637Z         ).to_numba(
2025-01-14T13:17:21.2873719Z             macro_atom_state,
2025-01-14T13:17:21.2873804Z             self.line_interaction_type,
2025-01-14T13:17:21.2873876Z         )
2025-01-14T13:17:21.2873976Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2874254Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2874321Z         ]
2025-01-14T13:17:21.2874621Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2874629Z 
2025-01-14T13:17:21.2874773Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2874980Z _ ERROR at setup of TestShellInfoWidget.test_selection_on_element_count_table __
2025-01-14T13:17:21.2874985Z 
2025-01-14T13:17:21.2875643Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2875993Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2876062Z 
2025-01-14T13:17:21.2876158Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2876308Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2876411Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2876579Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2876671Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2876747Z >       sim.run_final()
2025-01-14T13:17:21.2876752Z 
2025-01-14T13:17:21.2876837Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2876949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2877044Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2877187Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2877280Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2877440Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2877548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2877552Z 
2025-01-14T13:17:21.2877820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2878085Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2878311Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2878636Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2878798Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2878941Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2878945Z 
2025-01-14T13:17:21.2879030Z     def initialize_transport_state(
2025-01-14T13:17:21.2879103Z         self,
2025-01-14T13:17:21.2879182Z         simulation_state,
2025-01-14T13:17:21.2879304Z         opacity_state,
2025-01-14T13:17:21.2879379Z         macro_atom_state,
2025-01-14T13:17:21.2879453Z         plasma,
2025-01-14T13:17:21.2879527Z         no_of_packets,
2025-01-14T13:17:21.2879617Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2879689Z         iteration=0,
2025-01-14T13:17:21.2879761Z     ):
2025-01-14T13:17:21.2879884Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2879984Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2880056Z         else:
2025-01-14T13:17:21.2880132Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2880203Z     
2025-01-14T13:17:21.2880337Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2880433Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2880500Z         )
2025-01-14T13:17:21.2880569Z     
2025-01-14T13:17:21.2880694Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2880812Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2880963Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2881035Z         else:
2025-01-14T13:17:21.2881114Z             continuum_state = None
2025-01-14T13:17:21.2881219Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2881323Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2881421Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2881528Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2881726Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2881827Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2881916Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2881991Z         ).to_numba(
2025-01-14T13:17:21.2882066Z             macro_atom_state,
2025-01-14T13:17:21.2882159Z             self.line_interaction_type,
2025-01-14T13:17:21.2882294Z         )
2025-01-14T13:17:21.2882401Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2882667Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2882741Z         ]
2025-01-14T13:17:21.2883036Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2883040Z 
2025-01-14T13:17:21.2883191Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2883389Z ___ ERROR at setup of TestShellInfoWidget.test_selection_on_ion_count_table ____
2025-01-14T13:17:21.2883393Z 
2025-01-14T13:17:21.2884047Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2884393Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2884403Z 
2025-01-14T13:17:21.2884489Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2884643Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2884803Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2884975Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2885120Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2885193Z >       sim.run_final()
2025-01-14T13:17:21.2885197Z 
2025-01-14T13:17:21.2885283Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2885387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2885488Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2885623Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2885724Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2885934Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2886043Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2886047Z 
2025-01-14T13:17:21.2886313Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2886517Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2886744Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2887017Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2887177Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2887309Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2887313Z 
2025-01-14T13:17:21.2887405Z     def initialize_transport_state(
2025-01-14T13:17:21.2887476Z         self,
2025-01-14T13:17:21.2887560Z         simulation_state,
2025-01-14T13:17:21.2887634Z         opacity_state,
2025-01-14T13:17:21.2887714Z         macro_atom_state,
2025-01-14T13:17:21.2887783Z         plasma,
2025-01-14T13:17:21.2887865Z         no_of_packets,
2025-01-14T13:17:21.2887949Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2888021Z         iteration=0,
2025-01-14T13:17:21.2888094Z     ):
2025-01-14T13:17:21.2888216Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2888319Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2888388Z         else:
2025-01-14T13:17:21.2888470Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2888537Z     
2025-01-14T13:17:21.2888675Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2888769Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2888844Z         )
2025-01-14T13:17:21.2888911Z     
2025-01-14T13:17:21.2889045Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2889224Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2889380Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2889452Z         else:
2025-01-14T13:17:21.2889543Z             continuum_state = None
2025-01-14T13:17:21.2889646Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2889753Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2889854Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2889958Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2890060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2890152Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2890248Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2890319Z         ).to_numba(
2025-01-14T13:17:21.2890400Z             macro_atom_state,
2025-01-14T13:17:21.2890487Z             self.line_interaction_type,
2025-01-14T13:17:21.2890560Z         )
2025-01-14T13:17:21.2890660Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2890929Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2891041Z         ]
2025-01-14T13:17:21.2891346Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2891389Z 
2025-01-14T13:17:21.2891539Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2891733Z =================================== FAILURES ===================================
2025-01-14T13:17:21.2891887Z _______________________ test_run_tardis_from_config_obj ________________________
2025-01-14T13:17:21.2891892Z 
2025-01-14T13:17:21.2892254Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.2892454Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:21.2892521Z 
2025-01-14T13:17:21.2892610Z     def test_run_tardis_from_config_obj(
2025-01-14T13:17:21.2892738Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:17:21.2892812Z     ):
2025-01-14T13:17:21.2892878Z         """
2025-01-14T13:17:21.2893065Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:17:21.2893140Z         as arguments
2025-01-14T13:17:21.2893210Z         """
2025-01-14T13:17:21.2893300Z         config = Configuration.from_yaml(
2025-01-14T13:17:21.2893460Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:17:21.2893527Z         )
2025-01-14T13:17:21.2893626Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:21.2893691Z     
2025-01-14T13:17:21.2893766Z         try:
2025-01-14T13:17:21.2893845Z >           sim = run_tardis(config)
2025-01-14T13:17:21.2893852Z 
2025-01-14T13:17:21.2893946Z tardis/tests/test_tardis_full.py:28: 
2025-01-14T13:17:21.2894053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2894146Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2894240Z     simulation.run_convergence()
2025-01-14T13:17:21.2894354Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2894495Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2894589Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2894746Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2894850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2894854Z 
2025-01-14T13:17:21.2895119Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37960dc080>
2025-01-14T13:17:21.2895316Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d3b2240>
2025-01-14T13:17:21.2895609Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fd5880>
2025-01-14T13:17:21.2895887Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3795fd6630>
2025-01-14T13:17:21.2896047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379d3eca70>
2025-01-14T13:17:21.2896192Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2896196Z 
2025-01-14T13:17:21.2896285Z     def initialize_transport_state(
2025-01-14T13:17:21.2896358Z         self,
2025-01-14T13:17:21.2896437Z         simulation_state,
2025-01-14T13:17:21.2896517Z         opacity_state,
2025-01-14T13:17:21.2896592Z         macro_atom_state,
2025-01-14T13:17:21.2896668Z         plasma,
2025-01-14T13:17:21.2896740Z         no_of_packets,
2025-01-14T13:17:21.2896827Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2896898Z         iteration=0,
2025-01-14T13:17:21.2896973Z     ):
2025-01-14T13:17:21.2897098Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2897201Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2897274Z         else:
2025-01-14T13:17:21.2897350Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2897420Z     
2025-01-14T13:17:21.2897620Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2897720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2897787Z         )
2025-01-14T13:17:21.2897917Z     
2025-01-14T13:17:21.2898045Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2898167Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2898317Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2898388Z         else:
2025-01-14T13:17:21.2898468Z             continuum_state = None
2025-01-14T13:17:21.2898573Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2898678Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2898776Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2898929Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2899027Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2899129Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2899216Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2899289Z         ).to_numba(
2025-01-14T13:17:21.2899367Z             macro_atom_state,
2025-01-14T13:17:21.2899458Z             self.line_interaction_type,
2025-01-14T13:17:21.2899524Z         )
2025-01-14T13:17:21.2899628Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2899892Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2899962Z         ]
2025-01-14T13:17:21.2900256Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2900263Z 
2025-01-14T13:17:21.2900413Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2900418Z 
2025-01-14T13:17:21.2900586Z During handling of the above exception, another exception occurred:
2025-01-14T13:17:21.2900593Z 
2025-01-14T13:17:21.2900952Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.2901148Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:21.2901154Z 
2025-01-14T13:17:21.2901246Z     def test_run_tardis_from_config_obj(
2025-01-14T13:17:21.2901367Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:17:21.2901433Z     ):
2025-01-14T13:17:21.2901506Z         """
2025-01-14T13:17:21.2901785Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:17:21.2901864Z         as arguments
2025-01-14T13:17:21.2901933Z         """
2025-01-14T13:17:21.2902096Z         config = Configuration.from_yaml(
2025-01-14T13:17:21.2902259Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:17:21.2902325Z         )
2025-01-14T13:17:21.2902423Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:21.2902490Z     
2025-01-14T13:17:21.2902562Z         try:
2025-01-14T13:17:21.2902641Z             sim = run_tardis(config)
2025-01-14T13:17:21.2902726Z         except Exception as e:
2025-01-14T13:17:21.2902813Z >           pytest.fail(str(e.args[0]))
2025-01-14T13:17:21.2903072Z E           Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2903077Z 
2025-01-14T13:17:21.2903171Z tardis/tests/test_tardis_full.py:30: Failed
2025-01-14T13:17:21.2903328Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2903717Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2903789Z 	
2025-01-14T13:17:21.2904341Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.2904511Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2905005Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.2905168Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2905704Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.2905941Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2906374Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2906551Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2906757Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2906983Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2907051Z 	
2025-01-14T13:17:21.2907203Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2907354Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2907507Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.2907843Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.2908210Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.2908626Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.2909126Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2909350Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2909456Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2909545Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.2909690Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-14T13:17:21.2909696Z 
2025-01-14T13:17:21.2910367Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.2910639Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f379dbb1220>
2025-01-14T13:17:21.2911027Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.2911035Z 
2025-01-14T13:17:21.2911126Z     def test_montecarlo_main_loop(
2025-01-14T13:17:21.2911212Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.2911292Z         regression_data,
2025-01-14T13:17:21.2911366Z         atomic_dataset,
2025-01-14T13:17:21.2911436Z     ):
2025-01-14T13:17:21.2911543Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2911882Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:17:21.2911977Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.2912064Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.2912151Z             virtual_packet_logging=False,
2025-01-14T13:17:21.2912238Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.2912314Z         )
2025-01-14T13:17:21.2912437Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:17:21.2912552Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:17:21.2912559Z 
2025-01-14T13:17:21.2912737Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:27: 
2025-01-14T13:17:21.2912854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2913026Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2913171Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2913317Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2913473Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2913576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2913586Z 
2025-01-14T13:17:21.2913847Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787f75550>
2025-01-14T13:17:21.2914055Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc7cfb0>
2025-01-14T13:17:21.2914276Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dc8c890>
2025-01-14T13:17:21.2914628Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc8dbb0>
2025-01-14T13:17:21.2914787Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379dc8eab0>
2025-01-14T13:17:21.2914930Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2914934Z 
2025-01-14T13:17:21.2915022Z     def initialize_transport_state(
2025-01-14T13:17:21.2915094Z         self,
2025-01-14T13:17:21.2915173Z         simulation_state,
2025-01-14T13:17:21.2915251Z         opacity_state,
2025-01-14T13:17:21.2915324Z         macro_atom_state,
2025-01-14T13:17:21.2915397Z         plasma,
2025-01-14T13:17:21.2915474Z         no_of_packets,
2025-01-14T13:17:21.2915555Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2915630Z         iteration=0,
2025-01-14T13:17:21.2915695Z     ):
2025-01-14T13:17:21.2915824Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2915924Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2915996Z         else:
2025-01-14T13:17:21.2916071Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2916140Z     
2025-01-14T13:17:21.2916276Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2916376Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2916442Z         )
2025-01-14T13:17:21.2916517Z     
2025-01-14T13:17:21.2916643Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2916759Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2916908Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2916979Z         else:
2025-01-14T13:17:21.2917065Z             continuum_state = None
2025-01-14T13:17:21.2917163Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2917273Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2917432Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2917540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2917637Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2917735Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2917823Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2917896Z         ).to_numba(
2025-01-14T13:17:21.2917974Z             macro_atom_state,
2025-01-14T13:17:21.2918064Z             self.line_interaction_type,
2025-01-14T13:17:21.2918128Z         )
2025-01-14T13:17:21.2918231Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2918500Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2918571Z         ]
2025-01-14T13:17:21.2918871Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2918879Z 
2025-01-14T13:17:21.2919025Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2919177Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2919476Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2919912Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2920136Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2920344Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2920507Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2920579Z 	
2025-01-14T13:17:21.2920677Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2920754Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2920862Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.2921025Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2921143Z 	
2025-01-14T13:17:21.2921294Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2921444Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2922048Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2922276Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2922379Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.2922473Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2922554Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2922558Z 
2025-01-14T13:17:21.2922656Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2922741Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.2922896Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-14T13:17:21.2922902Z 
2025-01-14T13:17:21.2923580Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.2923849Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f379dcf9400>
2025-01-14T13:17:21.2924195Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.2924200Z 
2025-01-14T13:17:21.2924303Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-14T13:17:21.2924386Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.2924465Z         regression_data,
2025-01-14T13:17:21.2924539Z         atomic_dataset,
2025-01-14T13:17:21.2924608Z     ):
2025-01-14T13:17:21.2924709Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2924950Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-14T13:17:21.2925018Z     
2025-01-14T13:17:21.2925166Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:17:21.2925254Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.2925347Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.2925431Z             virtual_packet_logging=True,
2025-01-14T13:17:21.2925517Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.2925587Z         )
2025-01-14T13:17:21.2925713Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:17:21.2925821Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:17:21.2925826Z 
2025-01-14T13:17:21.2926006Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:80: 
2025-01-14T13:17:21.2926122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2926220Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2926367Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2926459Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2926613Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2926783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2926788Z 
2025-01-14T13:17:21.2927054Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37a38f59a0>
2025-01-14T13:17:21.2927313Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a30effe0>
2025-01-14T13:17:21.2927532Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889ac7d0>
2025-01-14T13:17:21.2927811Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889af4a0>
2025-01-14T13:17:21.2927969Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a3a4a7e0>
2025-01-14T13:17:21.2928111Z no_of_packets = 100000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2928172Z 
2025-01-14T13:17:21.2928260Z     def initialize_transport_state(
2025-01-14T13:17:21.2928332Z         self,
2025-01-14T13:17:21.2928408Z         simulation_state,
2025-01-14T13:17:21.2928489Z         opacity_state,
2025-01-14T13:17:21.2928563Z         macro_atom_state,
2025-01-14T13:17:21.2928637Z         plasma,
2025-01-14T13:17:21.2928708Z         no_of_packets,
2025-01-14T13:17:21.2928795Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2928877Z         iteration=0,
2025-01-14T13:17:21.2928941Z     ):
2025-01-14T13:17:21.2929072Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2929165Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2929237Z         else:
2025-01-14T13:17:21.2929312Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2929381Z     
2025-01-14T13:17:21.2929516Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2929615Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2929686Z         )
2025-01-14T13:17:21.2929755Z     
2025-01-14T13:17:21.2929884Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2929998Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2930152Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2930224Z         else:
2025-01-14T13:17:21.2930306Z             continuum_state = None
2025-01-14T13:17:21.2930413Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2930524Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2930615Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2930725Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2930824Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2930922Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2931012Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2931142Z         ).to_numba(
2025-01-14T13:17:21.2931220Z             macro_atom_state,
2025-01-14T13:17:21.2931310Z             self.line_interaction_type,
2025-01-14T13:17:21.2931375Z         )
2025-01-14T13:17:21.2931480Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2931849Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2931924Z         ]
2025-01-14T13:17:21.2932222Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2932232Z 
2025-01-14T13:17:21.2932377Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2932527Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2932771Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2933209Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2933385Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2933589Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2933829Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2933901Z 	
2025-01-14T13:17:21.2933991Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2934131Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2934239Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.2934393Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2934463Z 	
2025-01-14T13:17:21.2934609Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2934757Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2935248Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2935537Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2935641Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.2935738Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2935814Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2935818Z 
2025-01-14T13:17:21.2935923Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2936011Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.2936235Z _ test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] _
2025-01-14T13:17:21.2936240Z 
2025-01-14T13:17:21.2936426Z expected = 'interaction_type_in_use', obtained = 'interaction_type_to_check'
2025-01-14T13:17:21.2936766Z request = <FixtureRequest for <Function test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check]>>
2025-01-14T13:17:21.2936771Z 
2025-01-14T13:17:21.2936862Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.2936946Z         "expected,obtained",
2025-01-14T13:17:21.2937019Z         [
2025-01-14T13:17:21.2937083Z             (
2025-01-14T13:17:21.2937176Z                 "interaction_type_in_use",
2025-01-14T13:17:21.2937263Z                 "interaction_type_to_check",
2025-01-14T13:17:21.2937337Z             ),
2025-01-14T13:17:21.2937409Z             (
2025-01-14T13:17:21.2937486Z                 "shell_id_in_use",
2025-01-14T13:17:21.2937571Z                 "shell_id_to_check",
2025-01-14T13:17:21.2937639Z             ),
2025-01-14T13:17:21.2937708Z             (
2025-01-14T13:17:21.2937779Z                 "r_in_use",
2025-01-14T13:17:21.2937856Z                 "r_to_check",
2025-01-14T13:17:21.2937921Z             ),
2025-01-14T13:17:21.2938027Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.2938092Z         ],
2025-01-14T13:17:21.2938162Z     )
2025-01-14T13:17:21.2938326Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.2938515Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.2938526Z 
2025-01-14T13:17:21.2938743Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.2938854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2939137Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2939256Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2939549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2939646Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2939894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2940020Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2940310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2940412Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2940652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2940766Z     raise exc
2025-01-14T13:17:21.2941004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2941153Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2941386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2941640Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2941875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2942071Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2942311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2942548Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2942882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2943001Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2943384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2943455Z     yield
2025-01-14T13:17:21.2943740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2943840Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2944093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2944160Z     yield
2025-01-14T13:17:21.2944443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2944519Z     return (yield)
2025-01-14T13:17:21.2944830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2944932Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2945277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2945351Z     yield
2025-01-14T13:17:21.2945622Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2945721Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2945948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2946021Z     raise exc
2025-01-14T13:17:21.2946242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2946384Z     col.setup()
2025-01-14T13:17:21.2946612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2946706Z     self._request._fillfixtures()
2025-01-14T13:17:21.2946965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2947103Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2947375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2947491Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2947784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2947881Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2948128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2948256Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2948543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2948698Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2948939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2949067Z     raise exc
2025-01-14T13:17:21.2949300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2949394Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2949625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2950200Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2955999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2956252Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2956663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2956851Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2957198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2957324Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2957718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2957795Z     yield
2025-01-14T13:17:21.2958083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2958192Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2958449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2958522Z     yield
2025-01-14T13:17:21.2958795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2958876Z     return (yield)
2025-01-14T13:17:21.2959189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2959293Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2959633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2959701Z     yield
2025-01-14T13:17:21.2959977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2960072Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2960307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2960451Z     raise exc
2025-01-14T13:17:21.2960675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2960755Z     col.setup()
2025-01-14T13:17:21.2960982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2961074Z     self._request._fillfixtures()
2025-01-14T13:17:21.2961329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2961473Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2961881Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2962014Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2962304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2962412Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2962656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2962788Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2963159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2963259Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2963560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2963629Z     raise exc
2025-01-14T13:17:21.2963869Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2963956Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2964192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2964360Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2964670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2964863Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2965120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2965294Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2965647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2965767Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2966146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2966220Z     yield
2025-01-14T13:17:21.2966500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2966615Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2966866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2966943Z     yield
2025-01-14T13:17:21.2967221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2967297Z     return (yield)
2025-01-14T13:17:21.2967611Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2967710Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2968052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2968118Z     yield
2025-01-14T13:17:21.2968404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2968566Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2968802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2968871Z     raise exc
2025-01-14T13:17:21.2969102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2969179Z     col.setup()
2025-01-14T13:17:21.2969404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2969500Z     self._request._fillfixtures()
2025-01-14T13:17:21.2969754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2969893Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2970157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2970279Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2970570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2970672Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2970963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2971091Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2971432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2971528Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2971867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2971938Z     raise exc
2025-01-14T13:17:21.2972175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2972291Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2972530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2972792Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2973033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2973228Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2973466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2973631Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2973955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2974070Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2974441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2974519Z     yield
2025-01-14T13:17:21.2974792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2974899Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2975152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2975219Z     yield
2025-01-14T13:17:21.2975497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2975569Z     return (yield)
2025-01-14T13:17:21.2975877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2975976Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2976318Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2976450Z     yield
2025-01-14T13:17:21.2976728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2976822Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2977054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2977126Z     raise exc
2025-01-14T13:17:21.2977345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2977422Z     col.setup()
2025-01-14T13:17:21.2977648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2977736Z     self._request._fillfixtures()
2025-01-14T13:17:21.2977993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2978129Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2978393Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2978515Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2978797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2978958Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2979197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2979371Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2979658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2979750Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2979988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2980055Z     raise exc
2025-01-14T13:17:21.2980295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2980427Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2980658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2980822Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2981054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2981249Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2981484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2981741Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2982066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2982183Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2982552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2982630Z     yield
2025-01-14T13:17:21.2982906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2983009Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2983266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2983332Z     yield
2025-01-14T13:17:21.2983607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2983678Z     return (yield)
2025-01-14T13:17:21.2983989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2984154Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2984500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2984566Z     yield
2025-01-14T13:17:21.2984844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2984942Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2985173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2985246Z     raise exc
2025-01-14T13:17:21.2985464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2985539Z     col.setup()
2025-01-14T13:17:21.2985762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2985852Z     self._request._fillfixtures()
2025-01-14T13:17:21.2986102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2986241Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2986501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2986681Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2986963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2987113Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2987353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2987473Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2987758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2987851Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2988094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2988220Z     raise exc
2025-01-14T13:17:21.2988457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2988545Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2988776Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2988942Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2989168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2989365Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2989608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2989778Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2990110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2990227Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2990599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2990672Z     yield
2025-01-14T13:17:21.2990959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2991060Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2991314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2991380Z     yield
2025-01-14T13:17:21.2991891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2992031Z     return (yield)
2025-01-14T13:17:21.2992449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2992558Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2992906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2992977Z     yield
2025-01-14T13:17:21.2993256Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2993360Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2993587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2993661Z     raise exc
2025-01-14T13:17:21.2993884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2993960Z     col.setup()
2025-01-14T13:17:21.2994186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2994284Z     self._request._fillfixtures()
2025-01-14T13:17:21.2994538Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2994744Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2995006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2995184Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2995474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2995572Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2995819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2995943Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2996242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2996398Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2996642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2996715Z     raise exc
2025-01-14T13:17:21.2996955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2997045Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2997280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2997452Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2997684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2997876Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2998114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2998283Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2998610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2998730Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2999103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2999180Z     yield
2025-01-14T13:17:21.2999463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2999564Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2999817Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2999883Z     yield
2025-01-14T13:17:21.3000210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3000285Z     return (yield)
2025-01-14T13:17:21.3000595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3000698Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3001042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3001116Z     yield
2025-01-14T13:17:21.3001387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3001487Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3001932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3002013Z     raise exc
2025-01-14T13:17:21.3002237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3002318Z     col.setup()
2025-01-14T13:17:21.3002543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3002633Z     self._request._fillfixtures()
2025-01-14T13:17:21.3002968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3003107Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3003445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3003568Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3003860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3003956Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3004196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3004383Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3004670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3004767Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3005011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3005080Z     raise exc
2025-01-14T13:17:21.3005319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3005412Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3005639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3005803Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3006032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3006232Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3006465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3006634Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3006957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3007075Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3007448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3007516Z     yield
2025-01-14T13:17:21.3007794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3007893Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3008211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3008281Z     yield
2025-01-14T13:17:21.3008559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3008633Z     return (yield)
2025-01-14T13:17:21.3008941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3009043Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3009385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3009456Z     yield
2025-01-14T13:17:21.3009728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3009826Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3010048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3010125Z     raise exc
2025-01-14T13:17:21.3010345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3010421Z     col.setup()
2025-01-14T13:17:21.3010694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3010783Z     self._request._fillfixtures()
2025-01-14T13:17:21.3011075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3011212Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3011474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3011686Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3011974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3012072Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3012377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3012499Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3012789Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3012881Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3013120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3013192Z     raise exc
2025-01-14T13:17:21.3013425Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3013516Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3013742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3013911Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3014140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3014331Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3014566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3014731Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3015053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3015164Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3015538Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3015605Z     yield
2025-01-14T13:17:21.3015884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3016048Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3016301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3016370Z     yield
2025-01-14T13:17:21.3016643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3016719Z     return (yield)
2025-01-14T13:17:21.3017025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3017129Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3017465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3017540Z     yield
2025-01-14T13:17:21.3017810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3017911Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3018132Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3018280Z     raise exc
2025-01-14T13:17:21.3018502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3018575Z     col.setup()
2025-01-14T13:17:21.3018853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3018941Z     self._request._fillfixtures()
2025-01-14T13:17:21.3019192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3019328Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3019594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3019710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3020040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3020132Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3020374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3020507Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3020793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3020885Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3021124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3021192Z     raise exc
2025-01-14T13:17:21.3021427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3021514Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3021848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3022014Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3022250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3022440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3022681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3022847Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3023169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3023282Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3023649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3023791Z     yield
2025-01-14T13:17:21.3024064Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3024169Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3024414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3024489Z     yield
2025-01-14T13:17:21.3024763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3024835Z     return (yield)
2025-01-14T13:17:21.3025142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3025242Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3025586Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3025659Z     yield
2025-01-14T13:17:21.3025934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3026025Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3026315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3026383Z     raise exc
2025-01-14T13:17:21.3026665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3026740Z     col.setup()
2025-01-14T13:17:21.3026964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3027055Z     self._request._fillfixtures()
2025-01-14T13:17:21.3027306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3027438Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3027698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3027880Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3028162Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3028267Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3028501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3028630Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3028916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3029007Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3029244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3029312Z     raise exc
2025-01-14T13:17:21.3029552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3029641Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3029871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3030032Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3030264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3030456Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3030689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3030852Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3031172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3031333Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3031902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3031988Z     yield
2025-01-14T13:17:21.3032272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3032374Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3032623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3032695Z     yield
2025-01-14T13:17:21.3032969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3033040Z     return (yield)
2025-01-14T13:17:21.3033346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3033447Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3033792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3033859Z     yield
2025-01-14T13:17:21.3034228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3034321Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3034606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3034679Z     raise exc
2025-01-14T13:17:21.3034896Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3034972Z     col.setup()
2025-01-14T13:17:21.3035195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3035283Z     self._request._fillfixtures()
2025-01-14T13:17:21.3035536Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3035733Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3035991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3036110Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3036390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3036494Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3036736Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3036856Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3037143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3037235Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3037477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3037547Z     raise exc
2025-01-14T13:17:21.3037781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3037870Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3038101Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3038257Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3038487Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3038675Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3038909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3039074Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3039462Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3039575Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3039945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3040017Z     yield
2025-01-14T13:17:21.3040290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3040390Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3040641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3040708Z     yield
2025-01-14T13:17:21.3040987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3041060Z     return (yield)
2025-01-14T13:17:21.3041368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3041467Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3042041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3042113Z     yield
2025-01-14T13:17:21.3042388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3042556Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3042785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3042857Z     raise exc
2025-01-14T13:17:21.3043077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3043153Z     col.setup()
2025-01-14T13:17:21.3043375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3043525Z     self._request._fillfixtures()
2025-01-14T13:17:21.3043779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3043920Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3044179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3044299Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3044581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3044683Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3044925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3045047Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3045335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3045430Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3045671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3045741Z     raise exc
2025-01-14T13:17:21.3045976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3046065Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3046296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3046456Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3046683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3046873Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3047174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3047344Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3047665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3047777Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3048150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3048225Z     yield
2025-01-14T13:17:21.3048508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3048614Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3048864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3048929Z     yield
2025-01-14T13:17:21.3049208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3049281Z     return (yield)
2025-01-14T13:17:21.3049587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3049754Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3050099Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3050205Z     yield
2025-01-14T13:17:21.3050477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3050575Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3050798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3050870Z     raise exc
2025-01-14T13:17:21.3051091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3051212Z     col.setup()
2025-01-14T13:17:21.3051436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3051528Z     self._request._fillfixtures()
2025-01-14T13:17:21.3051876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3052013Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3052278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3052396Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3052683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3052778Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3053020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3053151Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3053438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3053537Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3053775Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3053847Z     raise exc
2025-01-14T13:17:21.3054084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3054170Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3054401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3054563Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3054792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3055052Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3055289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3055456Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3055776Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3055892Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3056261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3056334Z     yield
2025-01-14T13:17:21.3056612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3056710Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3056963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3057033Z     yield
2025-01-14T13:17:21.3057311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3057447Z     return (yield)
2025-01-14T13:17:21.3057754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3057909Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3058259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3058326Z     yield
2025-01-14T13:17:21.3058600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3058698Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3058925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3059058Z     raise exc
2025-01-14T13:17:21.3059278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3059356Z     col.setup()
2025-01-14T13:17:21.3059578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3059666Z     self._request._fillfixtures()
2025-01-14T13:17:21.3059931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3060074Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3060343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3060464Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3060757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3060858Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3061098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3061223Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3061513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3061700Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3061942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3062009Z     raise exc
2025-01-14T13:17:21.3062245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3062337Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3062568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3062817Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3063049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3063242Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3063479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3063647Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3063971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3064087Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3064456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3064532Z     yield
2025-01-14T13:17:21.3064812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3064913Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3065164Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3065293Z     yield
2025-01-14T13:17:21.3065571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3065697Z     return (yield)
2025-01-14T13:17:21.3066007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3066110Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3066452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3066523Z     yield
2025-01-14T13:17:21.3066792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3066952Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3067175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3067251Z     raise exc
2025-01-14T13:17:21.3067475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3067550Z     col.setup()
2025-01-14T13:17:21.3067775Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3067866Z     self._request._fillfixtures()
2025-01-14T13:17:21.3068117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3068254Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3068519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3068637Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3068925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3069018Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3069261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3069382Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3069671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3069762Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3069998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3070065Z     raise exc
2025-01-14T13:17:21.3070302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3070460Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3070691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3070853Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3071081Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3071270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3071507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3071867Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3072197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3072339Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3072716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3072790Z     yield
2025-01-14T13:17:21.3073067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3073242Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3073497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3073624Z     yield
2025-01-14T13:17:21.3073906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3073977Z     return (yield)
2025-01-14T13:17:21.3074282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3074380Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3074724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3074858Z     yield
2025-01-14T13:17:21.3075126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3075223Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3075449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3075522Z     raise exc
2025-01-14T13:17:21.3075749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3075825Z     col.setup()
2025-01-14T13:17:21.3076052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3076141Z     self._request._fillfixtures()
2025-01-14T13:17:21.3076392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3076528Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3076795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3076913Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3077202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3077299Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3077541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3077613Z     raise exc
2025-01-14T13:17:21.3077849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3077935Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3078169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3078334Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3078627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3078821Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3079059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3079228Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3079550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3079661Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3080029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3080101Z     yield
2025-01-14T13:17:21.3080372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3080479Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3080730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3080797Z     yield
2025-01-14T13:17:21.3081121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3081194Z     return (yield)
2025-01-14T13:17:21.3081541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3081822Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3082169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3082235Z     yield
2025-01-14T13:17:21.3082511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3082614Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3082908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3082983Z     raise exc
2025-01-14T13:17:21.3083201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3083279Z     col.setup()
2025-01-14T13:17:21.3083503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3083594Z     self._request._fillfixtures()
2025-01-14T13:17:21.3083843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3083985Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3084246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3084365Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3084664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3084764Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3085009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3085081Z     raise exc
2025-01-14T13:17:21.3085318Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3085407Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3085640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3085799Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3086030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3086214Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3086527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3086704Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3087026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3087148Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3087524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3087598Z     yield
2025-01-14T13:17:21.3087874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3087976Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3088226Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3088304Z     yield
2025-01-14T13:17:21.3088580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3088653Z     return (yield)
2025-01-14T13:17:21.3088959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3089122Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3089466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3089586Z     yield
2025-01-14T13:17:21.3089861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3089954Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3090182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3090253Z     raise exc
2025-01-14T13:17:21.3090478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3090626Z     col.setup()
2025-01-14T13:17:21.3090851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3090943Z     self._request._fillfixtures()
2025-01-14T13:17:21.3091197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3091331Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3091686Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3091810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3092102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3092206Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3092443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3092522Z     raise exc
2025-01-14T13:17:21.3092761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3092849Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3093085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3093241Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3093476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3093663Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3093905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3094064Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3094463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3094581Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3094950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3095028Z     yield
2025-01-14T13:17:21.3095305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3095414Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3095662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3095738Z     yield
2025-01-14T13:17:21.3096011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3096089Z     return (yield)
2025-01-14T13:17:21.3096393Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3096500Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3096844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3096976Z     yield
2025-01-14T13:17:21.3097252Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3097400Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3097629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3097697Z     raise exc
2025-01-14T13:17:21.3097927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3098002Z     col.setup()
2025-01-14T13:17:21.3098232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3098321Z     self._request._fillfixtures()
2025-01-14T13:17:21.3098640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3098775Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3099036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3099156Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3099443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3099544Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3099785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3099858Z     raise exc
2025-01-14T13:17:21.3100088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3100183Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3100423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3100589Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3100827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3101011Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3101257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3101419Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3101843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3101954Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3102330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3102472Z     yield
2025-01-14T13:17:21.3102748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3102860Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3103107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3103183Z     yield
2025-01-14T13:17:21.3103456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3103535Z     return (yield)
2025-01-14T13:17:21.3103838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3103946Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3104283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3104362Z     yield
2025-01-14T13:17:21.3104638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3104793Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3105021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3105090Z     raise exc
2025-01-14T13:17:21.3105368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3105441Z     col.setup()
2025-01-14T13:17:21.3105669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3105752Z     self._request._fillfixtures()
2025-01-14T13:17:21.3106009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3106139Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3106461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3106579Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3106864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3106964Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3107205Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3107278Z     raise exc
2025-01-14T13:17:21.3107507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3107598Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3107828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3107991Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3108220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3108410Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3108653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3108812Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3109139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3109247Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3109623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3109691Z     yield
2025-01-14T13:17:21.3109969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3110115Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3110367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3110441Z     yield
2025-01-14T13:17:21.3110713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3110791Z     return (yield)
2025-01-14T13:17:21.3111096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3111204Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3111685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3111801Z     yield
2025-01-14T13:17:21.3112083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3112187Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3112414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3112489Z     raise exc
2025-01-14T13:17:21.3112717Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3112861Z     col.setup()
2025-01-14T13:17:21.3113093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3113234Z     self._request._fillfixtures()
2025-01-14T13:17:21.3113504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3113635Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3113905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3114018Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3114314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3114469Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3114712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3114846Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3115130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3115232Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3115468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3115543Z     raise exc
2025-01-14T13:17:21.3115775Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3115868Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3116100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3116266Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3116497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3116689Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3116932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3117100Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3117433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3117542Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3117919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3118052Z     yield
2025-01-14T13:17:21.3118335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3118434Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3118692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3118767Z     yield
2025-01-14T13:17:21.3119043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3119120Z     return (yield)
2025-01-14T13:17:21.3119422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3119526Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3119865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3119942Z     yield
2025-01-14T13:17:21.3120212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3120311Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3120589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3120658Z     raise exc
2025-01-14T13:17:21.3120882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3121012Z     col.setup()
2025-01-14T13:17:21.3121240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3121323Z     self._request._fillfixtures()
2025-01-14T13:17:21.3121745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3121896Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3122166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3122372Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3122668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3122775Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3123018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3123149Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3123431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3123531Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3123766Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3123841Z     raise exc
2025-01-14T13:17:21.3124073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3124170Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3124397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3124562Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3124795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3124984Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3125223Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3125385Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3125711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3125824Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3126267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3126335Z     yield
2025-01-14T13:17:21.3126615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3126717Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3126967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3127040Z     yield
2025-01-14T13:17:21.3127312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3127389Z     return (yield)
2025-01-14T13:17:21.3127690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3127798Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3128141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3128219Z     yield
2025-01-14T13:17:21.3128489Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3128652Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3128887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3129012Z     raise exc
2025-01-14T13:17:21.3129241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3129313Z     col.setup()
2025-01-14T13:17:21.3129544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3129629Z     self._request._fillfixtures()
2025-01-14T13:17:21.3129887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3130063Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3130328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3130456Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3130750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3130856Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3131089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3131219Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3131499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3131699Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3131939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3132018Z     raise exc
2025-01-14T13:17:21.3132249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3132345Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3132574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3132737Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3132975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3133165Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3133408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3133570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3133971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3134086Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3134463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3134538Z     yield
2025-01-14T13:17:21.3134812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3134922Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3135171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3135244Z     yield
2025-01-14T13:17:21.3135518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3135598Z     return (yield)
2025-01-14T13:17:21.3135906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3136020Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3136361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3136498Z     yield
2025-01-14T13:17:21.3136774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3136921Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3137153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3137221Z     raise exc
2025-01-14T13:17:21.3137448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3137520Z     col.setup()
2025-01-14T13:17:21.3137748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3137836Z     self._request._fillfixtures()
2025-01-14T13:17:21.3138149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3138278Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3138546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3138668Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3138952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3139052Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3139288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3139416Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3139696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3139803Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3140037Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3140115Z     raise exc
2025-01-14T13:17:21.3140347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3140440Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3140681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3140839Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3141074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3141260Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3141503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3141826Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3142154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3142268Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3142639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3142713Z     yield
2025-01-14T13:17:21.3142988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3143090Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3143338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3143413Z     yield
2025-01-14T13:17:21.3143684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3143767Z     return (yield)
2025-01-14T13:17:21.3144069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3144241Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3144579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3144709Z     yield
2025-01-14T13:17:21.3144984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3145077Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3145310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3145379Z     raise exc
2025-01-14T13:17:21.3145608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3145685Z     col.setup()
2025-01-14T13:17:21.3145976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3146061Z     self._request._fillfixtures()
2025-01-14T13:17:21.3146322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3146454Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3146723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3146843Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3147125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3147226Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3147465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3147595Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3147878Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3147978Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3148215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3148289Z     raise exc
2025-01-14T13:17:21.3148532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3148618Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3148851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3149008Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3149240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3149489Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3149732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3149893Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3150220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3150338Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3150705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3150776Z     yield
2025-01-14T13:17:21.3151052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3151155Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3151400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3151475Z     yield
2025-01-14T13:17:21.3151934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3152114Z     return (yield)
2025-01-14T13:17:21.3152419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3152584Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3152925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3152993Z     yield
2025-01-14T13:17:21.3153266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3153357Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3153591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3153721Z     raise exc
2025-01-14T13:17:21.3153945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3154015Z     col.setup()
2025-01-14T13:17:21.3154245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3154328Z     self._request._fillfixtures()
2025-01-14T13:17:21.3154586Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3154726Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3154986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3155105Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3155387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3155489Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3155727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3155855Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3156140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3156242Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3156481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3156558Z     raise exc
2025-01-14T13:17:21.3156794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3156881Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3157115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3157274Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3157582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3157769Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3158011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3158170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3158501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3158615Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3158981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3159053Z     yield
2025-01-14T13:17:21.3159325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3159434Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3159683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3159812Z     yield
2025-01-14T13:17:21.3160083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3160162Z     return (yield)
2025-01-14T13:17:21.3160508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3160612Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3160956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3161022Z     yield
2025-01-14T13:17:21.3161297Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3161392Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3161855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3161930Z     raise exc
2025-01-14T13:17:21.3162171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3162241Z     col.setup()
2025-01-14T13:17:21.3162469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3162555Z     self._request._fillfixtures()
2025-01-14T13:17:21.3162813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3162951Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3163211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3163330Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3163616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3163722Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3163959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3164093Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3164375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3164476Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3164713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3164781Z     raise exc
2025-01-14T13:17:21.3165018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3165104Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3165418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3165577Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3165812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3166002Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3166246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3166407Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3166737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3166852Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3167221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3167297Z     yield
2025-01-14T13:17:21.3167572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3167678Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3167986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3168057Z     yield
2025-01-14T13:17:21.3168384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3168463Z     return (yield)
2025-01-14T13:17:21.3168771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3168871Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3169212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3169281Z     yield
2025-01-14T13:17:21.3169669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3169762Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3169999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3170067Z     raise exc
2025-01-14T13:17:21.3170290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3170362Z     col.setup()
2025-01-14T13:17:21.3170591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3170681Z     self._request._fillfixtures()
2025-01-14T13:17:21.3170933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3171068Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3171326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3171448Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3171829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3171933Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3172169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3172324Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3172612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3172711Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3172957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3173025Z     raise exc
2025-01-14T13:17:21.3173349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3173439Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3173682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3173844Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3174081Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3174271Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3174511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3174676Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3175001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3175115Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3175488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3175561Z     yield
2025-01-14T13:17:21.3175899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3176002Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3176305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3176376Z     yield
2025-01-14T13:17:21.3176650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3176726Z     return (yield)
2025-01-14T13:17:21.3177032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3177131Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3177540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3177607Z     yield
2025-01-14T13:17:21.3177882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3177977Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3178205Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3178275Z     raise exc
2025-01-14T13:17:21.3178503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3178580Z     col.setup()
2025-01-14T13:17:21.3178802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3178892Z     self._request._fillfixtures()
2025-01-14T13:17:21.3179146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3179289Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3179548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3179671Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3179954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3180057Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3180293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3180421Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3180705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3180800Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3181107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3181179Z     raise exc
2025-01-14T13:17:21.3181414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3181504Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3181831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3181991Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3182222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3182409Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3182651Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3182819Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3183146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3183263Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3183632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3183771Z     yield
2025-01-14T13:17:21.3184047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3184203Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3184453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3184525Z     yield
2025-01-14T13:17:21.3184799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3184871Z     return (yield)
2025-01-14T13:17:21.3185182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3185336Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3185680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3185750Z     yield
2025-01-14T13:17:21.3186024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3186122Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3186350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3186418Z     raise exc
2025-01-14T13:17:21.3186641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3186717Z     col.setup()
2025-01-14T13:17:21.3186939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3187034Z     self._request._fillfixtures()
2025-01-14T13:17:21.3187289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3187425Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3187689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3187811Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3188094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3188193Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3188427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3188553Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3188838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3189002Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3189243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3189315Z     raise exc
2025-01-14T13:17:21.3189550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3189636Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3189870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3190030Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3190261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3190450Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3190684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3190854Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3191174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3191338Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3191894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3192044Z     yield
2025-01-14T13:17:21.3192320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3192432Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3192685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3192750Z     yield
2025-01-14T13:17:21.3193026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3193165Z     return (yield)
2025-01-14T13:17:21.3193473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3193575Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3193916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3193984Z     yield
2025-01-14T13:17:21.3194257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3194349Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3194575Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3194647Z     raise exc
2025-01-14T13:17:21.3194866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3194947Z     col.setup()
2025-01-14T13:17:21.3195175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3195264Z     self._request._fillfixtures()
2025-01-14T13:17:21.3195520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3195653Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3195912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3196030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3196311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3196412Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3196653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3196843Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3197133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3197228Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3197467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3197636Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3197872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3198057Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3198439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3198652Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3198943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3199022Z     return (yield)
2025-01-14T13:17:21.3199302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3199517Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3199785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3199922Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3200137Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3200215Z     sim.iterate(10)
2025-01-14T13:17:21.3200308Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3200468Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3200581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3200589Z 
2025-01-14T13:17:21.3200912Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3201118Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3201341Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3201797Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3201973Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3202110Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3202115Z 
2025-01-14T13:17:21.3202203Z     def initialize_transport_state(
2025-01-14T13:17:21.3202275Z         self,
2025-01-14T13:17:21.3202358Z         simulation_state,
2025-01-14T13:17:21.3202432Z         opacity_state,
2025-01-14T13:17:21.3202512Z         macro_atom_state,
2025-01-14T13:17:21.3202583Z         plasma,
2025-01-14T13:17:21.3202661Z         no_of_packets,
2025-01-14T13:17:21.3202742Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3202817Z         iteration=0,
2025-01-14T13:17:21.3202884Z     ):
2025-01-14T13:17:21.3203019Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3203118Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3203188Z         else:
2025-01-14T13:17:21.3203265Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3203336Z     
2025-01-14T13:17:21.3203471Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3203572Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3203640Z         )
2025-01-14T13:17:21.3203710Z     
2025-01-14T13:17:21.3203836Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3203955Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3204111Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3204506Z         else:
2025-01-14T13:17:21.3204592Z             continuum_state = None
2025-01-14T13:17:21.3204691Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3204800Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3204893Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3205003Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3205102Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3205199Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3205287Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3205360Z         ).to_numba(
2025-01-14T13:17:21.3205438Z             macro_atom_state,
2025-01-14T13:17:21.3205527Z             self.line_interaction_type,
2025-01-14T13:17:21.3205600Z         )
2025-01-14T13:17:21.3205699Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3205973Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3206043Z         ]
2025-01-14T13:17:21.3206351Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3206424Z 
2025-01-14T13:17:21.3206574Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3206768Z _____ test_last_interaction_properties[shell_id_in_use-shell_id_to_check] ______
2025-01-14T13:17:21.3206829Z 
2025-01-14T13:17:21.3206967Z expected = 'shell_id_in_use', obtained = 'shell_id_to_check'
2025-01-14T13:17:21.3207256Z request = <FixtureRequest for <Function test_last_interaction_properties[shell_id_in_use-shell_id_to_check]>>
2025-01-14T13:17:21.3207260Z 
2025-01-14T13:17:21.3207351Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3207433Z         "expected,obtained",
2025-01-14T13:17:21.3207503Z         [
2025-01-14T13:17:21.3207569Z             (
2025-01-14T13:17:21.3207666Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3207834Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3207905Z             ),
2025-01-14T13:17:21.3207970Z             (
2025-01-14T13:17:21.3208052Z                 "shell_id_in_use",
2025-01-14T13:17:21.3208133Z                 "shell_id_to_check",
2025-01-14T13:17:21.3208205Z             ),
2025-01-14T13:17:21.3208270Z             (
2025-01-14T13:17:21.3208346Z                 "r_in_use",
2025-01-14T13:17:21.3208422Z                 "r_to_check",
2025-01-14T13:17:21.3208492Z             ),
2025-01-14T13:17:21.3208592Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3208766Z         ],
2025-01-14T13:17:21.3213760Z     )
2025-01-14T13:17:21.3213993Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3214126Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3214132Z 
2025-01-14T13:17:21.3214378Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3214498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3214800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3214931Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3215256Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3215361Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3215619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3215748Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3216046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3216152Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3216518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3216601Z     raise exc
2025-01-14T13:17:21.3216844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3216943Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3217178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3217353Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3217587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3217786Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3218029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3218200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3218516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3218621Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3218970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3219109Z     yield
2025-01-14T13:17:21.3219436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3219606Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3219986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3220053Z     yield
2025-01-14T13:17:21.3220335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3220446Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3220758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3220831Z     yield
2025-01-14T13:17:21.3221102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3221186Z     return (yield)
2025-01-14T13:17:21.3221463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3221543Z     return (yield)
2025-01-14T13:17:21.3221941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3222016Z     raise e
2025-01-14T13:17:21.3222282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3222361Z     item.runtest()
2025-01-14T13:17:21.3222595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3222722Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3222960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3223157Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3223404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3223572Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3223842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3223934Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3224275Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3224388Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3224730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3224860Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3225148Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3225253Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3225492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3225626Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3225909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3226010Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3226246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3226322Z     raise exc
2025-01-14T13:17:21.3226565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3226660Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3226895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3227122Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3227361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3227608Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3227856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3228017Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3228347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3228467Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3228898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3228976Z     yield
2025-01-14T13:17:21.3229257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3229363Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3229619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3229695Z     yield
2025-01-14T13:17:21.3229970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3230049Z     return (yield)
2025-01-14T13:17:21.3230352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3230461Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3230808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3230877Z     yield
2025-01-14T13:17:21.3231967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3232069Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3232311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3232381Z     raise exc
2025-01-14T13:17:21.3232608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3232680Z     col.setup()
2025-01-14T13:17:21.3232913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3232998Z     self._request._fillfixtures()
2025-01-14T13:17:21.3233265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3233489Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3233753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3233879Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3234168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3234274Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3234511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3234643Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3234927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3235029Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3235271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3235342Z     raise exc
2025-01-14T13:17:21.3235581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3235734Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3235969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3236184Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3236416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3236604Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3236844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3237006Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3237420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3237536Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3237911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3237983Z     yield
2025-01-14T13:17:21.3238261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3238367Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3238615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3238692Z     yield
2025-01-14T13:17:21.3238968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3239046Z     return (yield)
2025-01-14T13:17:21.3239367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3239470Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3239819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3239890Z     yield
2025-01-14T13:17:21.3240166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3240263Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3240492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3240562Z     raise exc
2025-01-14T13:17:21.3240789Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3240862Z     col.setup()
2025-01-14T13:17:21.3241098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3241241Z     self._request._fillfixtures()
2025-01-14T13:17:21.3241502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3241816Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3242086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3242214Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3242500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3242602Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3242841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3242971Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3243255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3243362Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3243603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3243747Z     raise exc
2025-01-14T13:17:21.3243987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3244130Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3244366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3244524Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3244758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3244946Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3245192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3245419Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3245742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3245866Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3246236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3246312Z     yield
2025-01-14T13:17:21.3246588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3246693Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3246940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3247016Z     yield
2025-01-14T13:17:21.3247293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3247374Z     return (yield)
2025-01-14T13:17:21.3247682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3247785Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3248132Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3248202Z     yield
2025-01-14T13:17:21.3248477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3248571Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3248798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3248868Z     raise exc
2025-01-14T13:17:21.3249094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3249235Z     col.setup()
2025-01-14T13:17:21.3249466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3249556Z     self._request._fillfixtures()
2025-01-14T13:17:21.3249831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3249973Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3250245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3250371Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3250663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3250766Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3251006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3251141Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3251431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3251664Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3251911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3252042Z     raise exc
2025-01-14T13:17:21.3252286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3252378Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3252613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3252775Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3253009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3253258Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3253503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3253676Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3254001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3254121Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3254494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3254569Z     yield
2025-01-14T13:17:21.3254845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3254951Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3255203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3255279Z     yield
2025-01-14T13:17:21.3255559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3255635Z     return (yield)
2025-01-14T13:17:21.3255949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3256049Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3256394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3256462Z     yield
2025-01-14T13:17:21.3256739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3256833Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3257066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3257205Z     raise exc
2025-01-14T13:17:21.3257431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3257510Z     col.setup()
2025-01-14T13:17:21.3257740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3257831Z     self._request._fillfixtures()
2025-01-14T13:17:21.3258089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3258226Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3258486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3258609Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3258895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3259002Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3259243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3259372Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3259724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3259818Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3260117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3260187Z     raise exc
2025-01-14T13:17:21.3260423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3260512Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3260745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3260907Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3261184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3261380Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3261716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3261886Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3262213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3262327Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3262698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3262772Z     yield
2025-01-14T13:17:21.3263046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3263161Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3263409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3263485Z     yield
2025-01-14T13:17:21.3263764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3263840Z     return (yield)
2025-01-14T13:17:21.3264149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3264254Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3264597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3264665Z     yield
2025-01-14T13:17:21.3264940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3265107Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3265334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3265412Z     raise exc
2025-01-14T13:17:21.3265633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3265709Z     col.setup()
2025-01-14T13:17:21.3265940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3266031Z     self._request._fillfixtures()
2025-01-14T13:17:21.3266284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3266421Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3266683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3266806Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3267093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3267193Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3267501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3267626Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3267996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3268093Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3268333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3268402Z     raise exc
2025-01-14T13:17:21.3268638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3268726Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3269021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3269178Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3269416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3269607Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3269843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3270010Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3270329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3270443Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3270814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3270896Z     yield
2025-01-14T13:17:21.3271172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3271279Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3271531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3271777Z     yield
2025-01-14T13:17:21.3272083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3272158Z     return (yield)
2025-01-14T13:17:21.3272506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3272607Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3272955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3273103Z     yield
2025-01-14T13:17:21.3273380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3273474Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3273709Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3273783Z     raise exc
2025-01-14T13:17:21.3274008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3274084Z     col.setup()
2025-01-14T13:17:21.3274309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3274398Z     self._request._fillfixtures()
2025-01-14T13:17:21.3274650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3274788Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3275052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3275174Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3275457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3275621Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3275863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3276040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3276329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3276424Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3276664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3276737Z     raise exc
2025-01-14T13:17:21.3276976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3277120Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3277366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3277527Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3277760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3277947Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3278190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3278352Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3278677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3278792Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3279167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3279244Z     yield
2025-01-14T13:17:21.3279517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3279622Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3279875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3279948Z     yield
2025-01-14T13:17:21.3280218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3280296Z     return (yield)
2025-01-14T13:17:21.3280600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3280760Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3281100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3281175Z     yield
2025-01-14T13:17:21.3281453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3281690Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3281978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3282051Z     raise exc
2025-01-14T13:17:21.3282278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3282350Z     col.setup()
2025-01-14T13:17:21.3282577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3282663Z     self._request._fillfixtures()
2025-01-14T13:17:21.3282924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3283061Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3283327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3283528Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3283814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3283977Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3284214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3284342Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3284624Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3284726Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3284968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3285109Z     raise exc
2025-01-14T13:17:21.3285343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3285438Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3285669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3285829Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3286060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3286247Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3286488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3286653Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3286987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3287096Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3287475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3287547Z     yield
2025-01-14T13:17:21.3287824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3287929Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3288173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3288246Z     yield
2025-01-14T13:17:21.3288519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3288662Z     return (yield)
2025-01-14T13:17:21.3288966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3289074Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3289419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3289486Z     yield
2025-01-14T13:17:21.3289764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3289861Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3290091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3290159Z     raise exc
2025-01-14T13:17:21.3290386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3290457Z     col.setup()
2025-01-14T13:17:21.3290685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3290775Z     self._request._fillfixtures()
2025-01-14T13:17:21.3291032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3291221Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3291483Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3291760Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3292047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3292146Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3292384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3292510Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3292794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3292964Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3293199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3293280Z     raise exc
2025-01-14T13:17:21.3293528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3293639Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3293875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3294037Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3294270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3294457Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3294701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3294866Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3295192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3295311Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3295681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3295756Z     yield
2025-01-14T13:17:21.3296034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3296138Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3296386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3296523Z     yield
2025-01-14T13:17:21.3296797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3296878Z     return (yield)
2025-01-14T13:17:21.3297186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3297292Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3297634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3297707Z     yield
2025-01-14T13:17:21.3297981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3298074Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3298303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3298373Z     raise exc
2025-01-14T13:17:21.3298600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3298675Z     col.setup()
2025-01-14T13:17:21.3298906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3299079Z     self._request._fillfixtures()
2025-01-14T13:17:21.3299344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3299482Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3299801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3299922Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3300209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3300313Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3300550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3300722Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3301005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3301110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3301355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3301427Z     raise exc
2025-01-14T13:17:21.3301781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3301871Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3302116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3302275Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3302510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3302702Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3302945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3303110Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3303436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3303555Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3303925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3303998Z     yield
2025-01-14T13:17:21.3304274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3304378Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3304697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3304774Z     yield
2025-01-14T13:17:21.3305046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3305128Z     return (yield)
2025-01-14T13:17:21.3305432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3305539Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3305884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3305952Z     yield
2025-01-14T13:17:21.3306227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3306320Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3306549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3306623Z     raise exc
2025-01-14T13:17:21.3306849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3306986Z     col.setup()
2025-01-14T13:17:21.3307218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3307309Z     self._request._fillfixtures()
2025-01-14T13:17:21.3307616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3307752Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3308016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3308134Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3308419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3308578Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3308816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3308946Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3309231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3309333Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3309576Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3309645Z     raise exc
2025-01-14T13:17:21.3309881Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3309968Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3310202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3310364Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3310600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3310787Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3311031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3311198Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3311522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3311832Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3312213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3312286Z     yield
2025-01-14T13:17:21.3312651Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3312761Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3313010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3313087Z     yield
2025-01-14T13:17:21.3313360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3313442Z     return (yield)
2025-01-14T13:17:21.3313749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3313847Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3314191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3314260Z     yield
2025-01-14T13:17:21.3314535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3314633Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3314864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3314998Z     raise exc
2025-01-14T13:17:21.3315224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3315295Z     col.setup()
2025-01-14T13:17:21.3315607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3315698Z     self._request._fillfixtures()
2025-01-14T13:17:21.3315952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3316089Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3316350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3316474Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3316816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3316916Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3317156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3317284Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3317573Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3317667Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3317910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3317978Z     raise exc
2025-01-14T13:17:21.3318219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3318308Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3318545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3318703Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3318938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3319123Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3319365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3319531Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3319853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3319969Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3320340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3320463Z     yield
2025-01-14T13:17:21.3320740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3320845Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3321091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3321168Z     yield
2025-01-14T13:17:21.3321450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3321523Z     return (yield)
2025-01-14T13:17:21.3322024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3322128Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3322473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3322547Z     yield
2025-01-14T13:17:21.3322824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3322992Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3323228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3323297Z     raise exc
2025-01-14T13:17:21.3323579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3323657Z     col.setup()
2025-01-14T13:17:21.3323884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3323975Z     self._request._fillfixtures()
2025-01-14T13:17:21.3324228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3324366Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3324689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3324810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3325100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3325201Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3325440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3325566Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3325858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3325954Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3326195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3326269Z     raise exc
2025-01-14T13:17:21.3326511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3326597Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3326829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3326989Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3327220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3327419Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3327655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3327824Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3328145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3328345Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3328717Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3328794Z     yield
2025-01-14T13:17:21.3329068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3329181Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3329432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3329505Z     yield
2025-01-14T13:17:21.3329782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3329855Z     return (yield)
2025-01-14T13:17:21.3330167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3330269Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3330616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3330684Z     yield
2025-01-14T13:17:21.3331007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3331099Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3331370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3331444Z     raise exc
2025-01-14T13:17:21.3331761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3331838Z     col.setup()
2025-01-14T13:17:21.3332063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3332153Z     self._request._fillfixtures()
2025-01-14T13:17:21.3332410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3332615Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3332881Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3333005Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3333290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3333393Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3333637Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3333758Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3334044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3334139Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3334384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3334453Z     raise exc
2025-01-14T13:17:21.3334690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3334781Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3335014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3335174Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3335409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3335598Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3335833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3336000Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3336397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3336510Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3336882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3336961Z     yield
2025-01-14T13:17:21.3337237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3337341Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3337593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3337662Z     yield
2025-01-14T13:17:21.3337940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3338015Z     return (yield)
2025-01-14T13:17:21.3338327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3338426Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3338834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3338903Z     yield
2025-01-14T13:17:21.3339178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3339325Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3339555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3339630Z     raise exc
2025-01-14T13:17:21.3339851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3339927Z     col.setup()
2025-01-14T13:17:21.3340153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3340286Z     self._request._fillfixtures()
2025-01-14T13:17:21.3340540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3340678Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3340938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3341059Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3341343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3341443Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3341777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3341902Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3342209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3342308Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3342554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3342628Z     raise exc
2025-01-14T13:17:21.3342878Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3342973Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3343207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3343369Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3343596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3343793Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3344106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3344283Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3344606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3344726Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3345100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3345175Z     yield
2025-01-14T13:17:21.3345448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3345553Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3345810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3345882Z     yield
2025-01-14T13:17:21.3346164Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3346243Z     return (yield)
2025-01-14T13:17:21.3346550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3346713Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3347058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3347182Z     yield
2025-01-14T13:17:21.3347456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3347555Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3347782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3347856Z     raise exc
2025-01-14T13:17:21.3348079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3348211Z     col.setup()
2025-01-14T13:17:21.3348438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3348539Z     self._request._fillfixtures()
2025-01-14T13:17:21.3348798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3348939Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3349201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3349322Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3349613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3349708Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3349952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3350078Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3350368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3350468Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3350705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3350777Z     raise exc
2025-01-14T13:17:21.3351016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3351104Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3351339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3351505Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3351930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3352210Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3352448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3352618Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3352941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3353062Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3353432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3353507Z     yield
2025-01-14T13:17:21.3353790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3353890Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3354152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3354222Z     yield
2025-01-14T13:17:21.3354502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3354639Z     return (yield)
2025-01-14T13:17:21.3354950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3355103Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3355446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3355515Z     yield
2025-01-14T13:17:21.3355793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3355893Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3356121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3356276Z     raise exc
2025-01-14T13:17:21.3356499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3356581Z     col.setup()
2025-01-14T13:17:21.3356807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3356899Z     self._request._fillfixtures()
2025-01-14T13:17:21.3357154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3357293Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3357554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3357674Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3357965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3358071Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3358321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3358396Z     raise exc
2025-01-14T13:17:21.3358638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3358730Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3358971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3359128Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3359367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3359559Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3359796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3360020Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3360344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3360465Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3360838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3360917Z     yield
2025-01-14T13:17:21.3361192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3361298Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3361679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3361800Z     yield
2025-01-14T13:17:21.3362086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3362166Z     return (yield)
2025-01-14T13:17:21.3362477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3362657Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3363004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3363131Z     yield
2025-01-14T13:17:21.3363407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3363500Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3363730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3363804Z     raise exc
2025-01-14T13:17:21.3364027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3364107Z     col.setup()
2025-01-14T13:17:21.3364392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3364482Z     self._request._fillfixtures()
2025-01-14T13:17:21.3364739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3364876Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3365143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3365263Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3365547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3365651Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3365891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3365963Z     raise exc
2025-01-14T13:17:21.3366201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3366289Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3366523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3366685Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3366918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3367105Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3367350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3367511Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3367844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3368028Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3368399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3368476Z     yield
2025-01-14T13:17:21.3368749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3368856Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3369103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3369176Z     yield
2025-01-14T13:17:21.3369449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3369528Z     return (yield)
2025-01-14T13:17:21.3369838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3369940Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3370286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3370400Z     yield
2025-01-14T13:17:21.3370678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3370772Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3371040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3371109Z     raise exc
2025-01-14T13:17:21.3371339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3371411Z     col.setup()
2025-01-14T13:17:21.3371736Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3371830Z     self._request._fillfixtures()
2025-01-14T13:17:21.3372085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3372328Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3372594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3372723Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3373006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3373111Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3373349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3373426Z     raise exc
2025-01-14T13:17:21.3373658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3373751Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3373988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3374150Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3374386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3374577Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3374823Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3374989Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3375320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3375434Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3375812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3375955Z     yield
2025-01-14T13:17:21.3376232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3376338Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3376591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3376667Z     yield
2025-01-14T13:17:21.3376945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3377027Z     return (yield)
2025-01-14T13:17:21.3377335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3377443Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3377782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3377861Z     yield
2025-01-14T13:17:21.3378140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3378235Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3378533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3378602Z     raise exc
2025-01-14T13:17:21.3378826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3378951Z     col.setup()
2025-01-14T13:17:21.3379184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3379269Z     self._request._fillfixtures()
2025-01-14T13:17:21.3379527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3379659Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3379927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3380093Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3380378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3380483Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3380720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3380797Z     raise exc
2025-01-14T13:17:21.3381028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3381119Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3381346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3381508Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3381831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3382031Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3382277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3382443Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3382778Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3382890Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3383266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3383335Z     yield
2025-01-14T13:17:21.3383615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3383716Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3384047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3384122Z     yield
2025-01-14T13:17:21.3384395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3384476Z     return (yield)
2025-01-14T13:17:21.3384779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3384886Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3385222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3385298Z     yield
2025-01-14T13:17:21.3385568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3385668Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3385893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3385973Z     raise exc
2025-01-14T13:17:21.3386201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3386336Z     col.setup()
2025-01-14T13:17:21.3386568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3386655Z     self._request._fillfixtures()
2025-01-14T13:17:21.3386984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3387118Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3387388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3387508Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3387803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3387965Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3388200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3388279Z     raise exc
2025-01-14T13:17:21.3388517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3388612Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3388840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3389003Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3389231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3389423Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3389659Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3389831Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3390157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3390269Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3390645Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3390719Z     yield
2025-01-14T13:17:21.3390998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3391100Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3391357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3391426Z     yield
2025-01-14T13:17:21.3391895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3392058Z     return (yield)
2025-01-14T13:17:21.3392363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3392471Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3392819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3392898Z     yield
2025-01-14T13:17:21.3393171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3393274Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3393498Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3393574Z     raise exc
2025-01-14T13:17:21.3393800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3393883Z     col.setup()
2025-01-14T13:17:21.3394116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3394203Z     self._request._fillfixtures()
2025-01-14T13:17:21.3394529Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3394662Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3394981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3395096Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3395384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3395478Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3395720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3395850Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3396197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3396299Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3396540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3396614Z     raise exc
2025-01-14T13:17:21.3396848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3396941Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3397166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3397328Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3397554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3397748Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3398002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3398164Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3398500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3398611Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3398985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3399054Z     yield
2025-01-14T13:17:21.3399334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3399431Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3399684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3399800Z     yield
2025-01-14T13:17:21.3400079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3400158Z     return (yield)
2025-01-14T13:17:21.3400461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3400567Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3400908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3400982Z     yield
2025-01-14T13:17:21.3401252Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3401352Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3401742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3401847Z     raise exc
2025-01-14T13:17:21.3402072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3402151Z     col.setup()
2025-01-14T13:17:21.3402458Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3402545Z     self._request._fillfixtures()
2025-01-14T13:17:21.3402808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3402995Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3403266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3403381Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3403676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3403776Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3404075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3404205Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3404489Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3404592Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3404831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3404908Z     raise exc
2025-01-14T13:17:21.3405143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3405238Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3405466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3405630Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3405898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3406091Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3406335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3406497Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3406828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3406944Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3407322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3407390Z     yield
2025-01-14T13:17:21.3407669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3407833Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3408085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3408161Z     yield
2025-01-14T13:17:21.3408434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3408512Z     return (yield)
2025-01-14T13:17:21.3408820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3408927Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3409270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3409367Z     yield
2025-01-14T13:17:21.3409648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3409749Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3409978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3410052Z     raise exc
2025-01-14T13:17:21.3410336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3410408Z     col.setup()
2025-01-14T13:17:21.3410636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3410762Z     self._request._fillfixtures()
2025-01-14T13:17:21.3411019Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3411149Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3411414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3411530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3411917Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3412082Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3412324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3412455Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3412737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3412838Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3413074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3413151Z     raise exc
2025-01-14T13:17:21.3413384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3413479Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3413710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3413875Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3414105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3414299Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3414541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3414702Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3415026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3415135Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3415505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3415642Z     yield
2025-01-14T13:17:21.3415921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3416024Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3416275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3416348Z     yield
2025-01-14T13:17:21.3416627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3416705Z     return (yield)
2025-01-14T13:17:21.3417009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3417114Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3417455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3417531Z     yield
2025-01-14T13:17:21.3417803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3417901Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3418209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3418283Z     raise exc
2025-01-14T13:17:21.3418509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3418637Z     col.setup()
2025-01-14T13:17:21.3418867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3418951Z     self._request._fillfixtures()
2025-01-14T13:17:21.3419210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3419343Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3419610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3419767Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3420057Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3420162Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3420399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3420529Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3420811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3420910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3421145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3421219Z     raise exc
2025-01-14T13:17:21.3421456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3421639Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3421868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3422036Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3422266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3422456Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3422698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3422865Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3423198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3423375Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3423753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3423822Z     yield
2025-01-14T13:17:21.3424102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3424205Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3424455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3424530Z     yield
2025-01-14T13:17:21.3424802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3424878Z     return (yield)
2025-01-14T13:17:21.3425183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3425288Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3425636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3425710Z     yield
2025-01-14T13:17:21.3425980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3426150Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3426378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3426502Z     raise exc
2025-01-14T13:17:21.3426733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3426804Z     col.setup()
2025-01-14T13:17:21.3427038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3427122Z     self._request._fillfixtures()
2025-01-14T13:17:21.3427381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3427577Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3427846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3427970Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3428261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3428365Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3428601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3428728Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3429006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3429111Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3429349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3429427Z     raise exc
2025-01-14T13:17:21.3429662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3429758Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3429987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3430149Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3430383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3430568Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3430808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3430971Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3431350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3431462Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3432030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3432113Z     yield
2025-01-14T13:17:21.3432389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3432497Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3432746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3432820Z     yield
2025-01-14T13:17:21.3433090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3433171Z     return (yield)
2025-01-14T13:17:21.3433476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3433583Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3433924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3434087Z     yield
2025-01-14T13:17:21.3434363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3434513Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3434744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3434813Z     raise exc
2025-01-14T13:17:21.3435046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3435118Z     col.setup()
2025-01-14T13:17:21.3435351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3435496Z     self._request._fillfixtures()
2025-01-14T13:17:21.3435756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3435888Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3436159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3436279Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3436565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3436667Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3436904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3437036Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3437320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3437426Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3437661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3437740Z     raise exc
2025-01-14T13:17:21.3437973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3438068Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3438305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3438461Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3438697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3438883Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3439126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3439362Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3439691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3439805Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3440180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3440258Z     yield
2025-01-14T13:17:21.3440532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3440635Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3440885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3440962Z     yield
2025-01-14T13:17:21.3441239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3441326Z     return (yield)
2025-01-14T13:17:21.3441814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3441999Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3442339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3442470Z     yield
2025-01-14T13:17:21.3442749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3442843Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3443074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3443143Z     raise exc
2025-01-14T13:17:21.3443371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3443512Z     col.setup()
2025-01-14T13:17:21.3443744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3443828Z     self._request._fillfixtures()
2025-01-14T13:17:21.3444089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3444219Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3444486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3444608Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3444893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3444995Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3445232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3445362Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3445647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3445749Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3445984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3446058Z     raise exc
2025-01-14T13:17:21.3446296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3446383Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3446614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3446772Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3447006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3447278Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3447524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3447687Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3448017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3448133Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3448501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3448577Z     yield
2025-01-14T13:17:21.3448852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3448955Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3449207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3449287Z     yield
2025-01-14T13:17:21.3449563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3449690Z     return (yield)
2025-01-14T13:17:21.3449994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3450137Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3450480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3450549Z     yield
2025-01-14T13:17:21.3450826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3450919Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3451147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3451264Z     raise exc
2025-01-14T13:17:21.3451490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3451659Z     col.setup()
2025-01-14T13:17:21.3451895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3451981Z     self._request._fillfixtures()
2025-01-14T13:17:21.3452236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3452376Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3452635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3452759Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3453040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3453145Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3453384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3453511Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3453796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3453897Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3454133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3454207Z     raise exc
2025-01-14T13:17:21.3454447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3454534Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3454767Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3454924Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3455229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3455414Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3455656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3455817Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3456146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3456259Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3456629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3456703Z     yield
2025-01-14T13:17:21.3456979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3457087Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3457338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3457473Z     yield
2025-01-14T13:17:21.3457744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3457823Z     return (yield)
2025-01-14T13:17:21.3458182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3458285Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3458628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3458696Z     yield
2025-01-14T13:17:21.3458970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3459130Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3459362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3459432Z     raise exc
2025-01-14T13:17:21.3459661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3459734Z     col.setup()
2025-01-14T13:17:21.3459963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3460052Z     self._request._fillfixtures()
2025-01-14T13:17:21.3460310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3460446Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3460705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3460829Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3461118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3461218Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3461461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3461682Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3461968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3462067Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3462307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3462377Z     raise exc
2025-01-14T13:17:21.3462614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3462702Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3463006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3463167Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3463398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3463590Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3463832Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3463995Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3464320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3464435Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3464803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3464882Z     yield
2025-01-14T13:17:21.3465157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3465331Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3465581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3465654Z     yield
2025-01-14T13:17:21.3465984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3466064Z     return (yield)
2025-01-14T13:17:21.3466374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3466473Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3466817Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3466943Z     yield
2025-01-14T13:17:21.3467222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3467316Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3467553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3467622Z     raise exc
2025-01-14T13:17:21.3467847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3467921Z     col.setup()
2025-01-14T13:17:21.3468152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3468245Z     self._request._fillfixtures()
2025-01-14T13:17:21.3468500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3468641Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3468909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3469030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3469314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3469416Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3469652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3469781Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3470060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3470158Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3470403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3470472Z     raise exc
2025-01-14T13:17:21.3470760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3470850Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3471093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3471256Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3476578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3476852Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3477133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3477318Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3477670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3477800Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3478236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3478312Z     yield
2025-01-14T13:17:21.3478751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3478864Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3479206Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3479275Z     yield
2025-01-14T13:17:21.3479565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3479641Z     return (yield)
2025-01-14T13:17:21.3479960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3480073Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3480506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3480581Z     yield
2025-01-14T13:17:21.3480876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3480984Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3481227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3481305Z     raise exc
2025-01-14T13:17:21.3481542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3481843Z     col.setup()
2025-01-14T13:17:21.3482083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3482180Z     self._request._fillfixtures()
2025-01-14T13:17:21.3482441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3482593Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3482866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3482988Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3483286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3483388Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3483634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3483759Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3484056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3484156Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3484488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3484669Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3484904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3485107Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3485354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3485524Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3485811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3485890Z     return (yield)
2025-01-14T13:17:21.3486173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3486312Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3486588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3486680Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3486968Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3487044Z     sim.iterate(10)
2025-01-14T13:17:21.3487143Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3487356Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3487473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3487478Z 
2025-01-14T13:17:21.3487746Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3487953Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3488173Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3488510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3488680Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3488819Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3488824Z 
2025-01-14T13:17:21.3488916Z     def initialize_transport_state(
2025-01-14T13:17:21.3488989Z         self,
2025-01-14T13:17:21.3489073Z         simulation_state,
2025-01-14T13:17:21.3489150Z         opacity_state,
2025-01-14T13:17:21.3489230Z         macro_atom_state,
2025-01-14T13:17:21.3489301Z         plasma,
2025-01-14T13:17:21.3489381Z         no_of_packets,
2025-01-14T13:17:21.3489464Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3489546Z         iteration=0,
2025-01-14T13:17:21.3489612Z     ):
2025-01-14T13:17:21.3489747Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3489851Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3489924Z         else:
2025-01-14T13:17:21.3490006Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3490073Z     
2025-01-14T13:17:21.3490216Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3490319Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3490392Z         )
2025-01-14T13:17:21.3490460Z     
2025-01-14T13:17:21.3490599Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3490717Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3490875Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3490943Z         else:
2025-01-14T13:17:21.3491033Z             continuum_state = None
2025-01-14T13:17:21.3491132Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3491240Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3491384Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3491494Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3491707Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3491802Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3491896Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3491966Z         ).to_numba(
2025-01-14T13:17:21.3492050Z             macro_atom_state,
2025-01-14T13:17:21.3492141Z             self.line_interaction_type,
2025-01-14T13:17:21.3492212Z         )
2025-01-14T13:17:21.3492313Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3492592Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3492659Z         ]
2025-01-14T13:17:21.3492968Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3492973Z 
2025-01-14T13:17:21.3493130Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3493313Z ____________ test_last_interaction_properties[r_in_use-r_to_check] _____________
2025-01-14T13:17:21.3493318Z 
2025-01-14T13:17:21.3493428Z expected = 'r_in_use', obtained = 'r_to_check'
2025-01-14T13:17:21.3493744Z request = <FixtureRequest for <Function test_last_interaction_properties[r_in_use-r_to_check]>>
2025-01-14T13:17:21.3493750Z 
2025-01-14T13:17:21.3493845Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3493994Z         "expected,obtained",
2025-01-14T13:17:21.3494065Z         [
2025-01-14T13:17:21.3494137Z             (
2025-01-14T13:17:21.3494233Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3494320Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3494393Z             ),
2025-01-14T13:17:21.3494463Z             (
2025-01-14T13:17:21.3494542Z                 "shell_id_in_use",
2025-01-14T13:17:21.3494627Z                 "shell_id_to_check",
2025-01-14T13:17:21.3494697Z             ),
2025-01-14T13:17:21.3494832Z             (
2025-01-14T13:17:21.3494907Z                 "r_in_use",
2025-01-14T13:17:21.3494985Z                 "r_to_check",
2025-01-14T13:17:21.3495053Z             ),
2025-01-14T13:17:21.3495158Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3495228Z         ],
2025-01-14T13:17:21.3495300Z     )
2025-01-14T13:17:21.3495466Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3495587Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3495591Z 
2025-01-14T13:17:21.3495813Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3495925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3496208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3496329Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3496631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3496733Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3496982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3497112Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3497401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3497497Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3497742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3497814Z     raise exc
2025-01-14T13:17:21.3498054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3498150Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3498449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3498620Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3498851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3499050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3499288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3499458Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3499761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3499869Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3500218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3500293Z     yield
2025-01-14T13:17:21.3500618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3500731Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3501154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3501261Z     yield
2025-01-14T13:17:21.3501543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3501735Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3501992Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3502060Z     yield
2025-01-14T13:17:21.3502337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3502418Z     return (yield)
2025-01-14T13:17:21.3502760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3502838Z     return (yield)
2025-01-14T13:17:21.3503105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3503183Z     raise e
2025-01-14T13:17:21.3503447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3503529Z     item.runtest()
2025-01-14T13:17:21.3503760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3503879Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3504105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3504300Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3504545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3504712Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3504983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3505077Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3505418Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3505531Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3505800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3505922Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3506220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3506385Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3506623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3506779Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3507064Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3507163Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3507401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3507476Z     raise exc
2025-01-14T13:17:21.3507710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3507802Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3508033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3508199Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3508437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3508624Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3508927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3509090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3509472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3509573Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3509918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3509987Z     yield
2025-01-14T13:17:21.3510309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3510469Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3510839Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3510916Z     yield
2025-01-14T13:17:21.3511188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3511291Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3511541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3511814Z     yield
2025-01-14T13:17:21.3512087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3512167Z     return (yield)
2025-01-14T13:17:21.3512443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3512528Z     return (yield)
2025-01-14T13:17:21.3512801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3512869Z     raise e
2025-01-14T13:17:21.3513144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3513216Z     item.runtest()
2025-01-14T13:17:21.3513450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3513565Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3513800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3513986Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3514228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3514472Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3514742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3514838Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3515176Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3515293Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3515561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3515681Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3515965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3516068Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3516305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3516438Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3516731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3516892Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3517146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3517335Z     raise exc
2025-01-14T13:17:21.3517573Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3517660Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3517893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3518053Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3518284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3518538Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3518774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3518945Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3519277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3519391Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3519763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3519836Z     yield
2025-01-14T13:17:21.3520114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3520219Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3520477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3520547Z     yield
2025-01-14T13:17:21.3520828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3520903Z     return (yield)
2025-01-14T13:17:21.3521213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3521314Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3521849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3521924Z     yield
2025-01-14T13:17:21.3522204Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3522301Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3522535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3522686Z     raise exc
2025-01-14T13:17:21.3522910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3522987Z     col.setup()
2025-01-14T13:17:21.3523218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3523311Z     self._request._fillfixtures()
2025-01-14T13:17:21.3523572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3523713Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3523974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3524094Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3524379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3524484Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3524730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3524853Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3525207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3525305Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3525604Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3525674Z     raise exc
2025-01-14T13:17:21.3525916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3526004Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3526239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3526401Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3526694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3526886Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3527124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3527292Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3527619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3527733Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3528103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3528176Z     yield
2025-01-14T13:17:21.3528451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3528565Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3528820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3528891Z     yield
2025-01-14T13:17:21.3529170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3529244Z     return (yield)
2025-01-14T13:17:21.3529554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3529653Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3529995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3530064Z     yield
2025-01-14T13:17:21.3530339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3530490Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3530718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3530792Z     raise exc
2025-01-14T13:17:21.3531015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3531093Z     col.setup()
2025-01-14T13:17:21.3531320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3531414Z     self._request._fillfixtures()
2025-01-14T13:17:21.3531771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3531911Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3532174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3532295Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3532582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3532685Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3533011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3533133Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3533476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3533572Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3533812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3533881Z     raise exc
2025-01-14T13:17:21.3534123Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3534211Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3534449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3534671Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3534901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3535094Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3535330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3535500Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3535825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3535948Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3536327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3536406Z     yield
2025-01-14T13:17:21.3536681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3536787Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3537036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3537111Z     yield
2025-01-14T13:17:21.3537384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3537463Z     return (yield)
2025-01-14T13:17:21.3537767Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3537871Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3538213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3538354Z     yield
2025-01-14T13:17:21.3538628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3538725Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3538957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3539025Z     raise exc
2025-01-14T13:17:21.3539250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3539324Z     col.setup()
2025-01-14T13:17:21.3539554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3539639Z     self._request._fillfixtures()
2025-01-14T13:17:21.3539897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3540034Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3540298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3540424Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3540709Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3540879Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3541115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3541284Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3541661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3541767Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3542005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3542080Z     raise exc
2025-01-14T13:17:21.3542321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3542474Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3542708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3542872Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3543102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3543292Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3543534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3543697Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3544024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3544143Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3544514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3544589Z     yield
2025-01-14T13:17:21.3544862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3544965Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3545217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3545290Z     yield
2025-01-14T13:17:21.3545563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3545641Z     return (yield)
2025-01-14T13:17:21.3545946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3546116Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3546461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3546529Z     yield
2025-01-14T13:17:21.3546808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3546902Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3547138Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3547208Z     raise exc
2025-01-14T13:17:21.3547436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3547507Z     col.setup()
2025-01-14T13:17:21.3547738Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3547823Z     self._request._fillfixtures()
2025-01-14T13:17:21.3548083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3548225Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3548484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3548671Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3548956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3549111Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3549350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3549477Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3549762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3549861Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3550109Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3550226Z     raise exc
2025-01-14T13:17:21.3550463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3550553Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3550787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3550947Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3551180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3551367Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3551789Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3551967Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3552302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3552418Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3552790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3552867Z     yield
2025-01-14T13:17:21.3553146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3553249Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3553496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3553569Z     yield
2025-01-14T13:17:21.3553843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3553921Z     return (yield)
2025-01-14T13:17:21.3554309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3554413Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3554755Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3554826Z     yield
2025-01-14T13:17:21.3555100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3555197Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3555425Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3555494Z     raise exc
2025-01-14T13:17:21.3555720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3555792Z     col.setup()
2025-01-14T13:17:21.3556024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3556118Z     self._request._fillfixtures()
2025-01-14T13:17:21.3556374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3556572Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3556834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3557012Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3557295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3557395Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3557631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3557757Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3558039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3558198Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3558440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3558512Z     raise exc
2025-01-14T13:17:21.3558752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3558842Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3559074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3559233Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3559467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3559653Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3559897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3560067Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3560388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3560505Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3560871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3560945Z     yield
2025-01-14T13:17:21.3561220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3561322Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3561728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3561834Z     yield
2025-01-14T13:17:21.3562184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3562267Z     return (yield)
2025-01-14T13:17:21.3562577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3562677Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3563019Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3563089Z     yield
2025-01-14T13:17:21.3563363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3563456Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3563683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3563757Z     raise exc
2025-01-14T13:17:21.3563982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3564058Z     col.setup()
2025-01-14T13:17:21.3564289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3564379Z     self._request._fillfixtures()
2025-01-14T13:17:21.3564696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3564833Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3565151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3565269Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3565553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3565653Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3565889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3566076Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3566366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3566463Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3566704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3566776Z     raise exc
2025-01-14T13:17:21.3567011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3567098Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3567333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3567492Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3567729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3567919Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3568161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3568332Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3568656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3568771Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3569136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3569210Z     yield
2025-01-14T13:17:21.3569484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3569590Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3569916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3569992Z     yield
2025-01-14T13:17:21.3570276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3570353Z     return (yield)
2025-01-14T13:17:21.3570664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3570768Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3571113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3571181Z     yield
2025-01-14T13:17:21.3571456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3571643Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3571875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3571949Z     raise exc
2025-01-14T13:17:21.3572176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3572252Z     col.setup()
2025-01-14T13:17:21.3572578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3572671Z     self._request._fillfixtures()
2025-01-14T13:17:21.3572983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3573121Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3573382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3573499Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3573781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3573946Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3574186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3574314Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3574605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3574700Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3574943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3575012Z     raise exc
2025-01-14T13:17:21.3575250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3575337Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3575568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3575731Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3575968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3576162Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3576400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3576568Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3576891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3577004Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3577371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3577445Z     yield
2025-01-14T13:17:21.3577725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3577898Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3578148Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3578225Z     yield
2025-01-14T13:17:21.3578508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3578583Z     return (yield)
2025-01-14T13:17:21.3578893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3578992Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3579333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3579400Z     yield
2025-01-14T13:17:21.3579675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3579773Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3580000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3580121Z     raise exc
2025-01-14T13:17:21.3580342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3580419Z     col.setup()
2025-01-14T13:17:21.3580687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3580781Z     self._request._fillfixtures()
2025-01-14T13:17:21.3581032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3581167Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3581426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3581637Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3581993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3582097Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3582346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3582469Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3582760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3582854Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3583095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3583164Z     raise exc
2025-01-14T13:17:21.3583404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3583492Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3583729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3583889Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3584125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3584319Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3584555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3584721Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3585043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3585157Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3585525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3585670Z     yield
2025-01-14T13:17:21.3585948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3586054Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3586308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3586378Z     yield
2025-01-14T13:17:21.3586657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3586729Z     return (yield)
2025-01-14T13:17:21.3587038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3587136Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3587478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3587552Z     yield
2025-01-14T13:17:21.3587824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3587916Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3588206Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3588281Z     raise exc
2025-01-14T13:17:21.3588553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3588630Z     col.setup()
2025-01-14T13:17:21.3588855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3588944Z     self._request._fillfixtures()
2025-01-14T13:17:21.3589198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3589334Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3589596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3589759Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3590042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3590150Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3590393Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3590518Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3590809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3590903Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3591143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3591214Z     raise exc
2025-01-14T13:17:21.3591452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3591542Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3591965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3592136Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3592364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3592558Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3592793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3592960Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3593284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3593478Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3593868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3593943Z     yield
2025-01-14T13:17:21.3594224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3594328Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3594588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3594656Z     yield
2025-01-14T13:17:21.3594935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3595009Z     return (yield)
2025-01-14T13:17:21.3595320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3595423Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3595769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3595837Z     yield
2025-01-14T13:17:21.3596177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3596278Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3596559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3596633Z     raise exc
2025-01-14T13:17:21.3596865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3596942Z     col.setup()
2025-01-14T13:17:21.3597182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3597273Z     self._request._fillfixtures()
2025-01-14T13:17:21.3597533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3597751Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3598015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3598138Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3598429Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3598529Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3598771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3598894Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3599181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3599278Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3599520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3599593Z     raise exc
2025-01-14T13:17:21.3599833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3599924Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3600162Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3600331Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3600564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3600758Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3600996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3601165Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3601542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3601841Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3602224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3602300Z     yield
2025-01-14T13:17:21.3602589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3602690Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3602945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3603015Z     yield
2025-01-14T13:17:21.3603296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3603373Z     return (yield)
2025-01-14T13:17:21.3603685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3603788Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3604211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3604282Z     yield
2025-01-14T13:17:21.3604562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3604719Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3604945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3605019Z     raise exc
2025-01-14T13:17:21.3605239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3605318Z     col.setup()
2025-01-14T13:17:21.3605546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3605699Z     self._request._fillfixtures()
2025-01-14T13:17:21.3605953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3606095Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3606357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3606479Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3606769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3606864Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3607106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3607227Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3607520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3607618Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3607858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3607932Z     raise exc
2025-01-14T13:17:21.3608169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3608265Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3608490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3608655Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3608887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3609081Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3609387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3609556Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3609879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3610001Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3610377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3610449Z     yield
2025-01-14T13:17:21.3610732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3610833Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3611087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3611159Z     yield
2025-01-14T13:17:21.3611437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3611512Z     return (yield)
2025-01-14T13:17:21.3611927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3612099Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3612448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3612578Z     yield
2025-01-14T13:17:21.3612850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3612951Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3613176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3613252Z     raise exc
2025-01-14T13:17:21.3613473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3613611Z     col.setup()
2025-01-14T13:17:21.3613841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3613936Z     self._request._fillfixtures()
2025-01-14T13:17:21.3614191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3614329Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3614599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3614715Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3615009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3615105Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3615349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3615478Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3615770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3615867Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3616109Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3616181Z     raise exc
2025-01-14T13:17:21.3616424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3616520Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3616749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3616917Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3617144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3617405Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3617642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3617823Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3618147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3618265Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3618644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3618713Z     yield
2025-01-14T13:17:21.3619001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3619106Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3619368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3619439Z     yield
2025-01-14T13:17:21.3619722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3619844Z     return (yield)
2025-01-14T13:17:21.3620157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3620304Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3620653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3620727Z     yield
2025-01-14T13:17:21.3621002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3621102Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3621329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3621452Z     raise exc
2025-01-14T13:17:21.3621771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3621854Z     col.setup()
2025-01-14T13:17:21.3622082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3622174Z     self._request._fillfixtures()
2025-01-14T13:17:21.3622433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3622576Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3622846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3622964Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3623255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3623360Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3623608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3623736Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3624031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3624128Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3624371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3624446Z     raise exc
2025-01-14T13:17:21.3624683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3624778Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3625009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3625247Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3625482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3625679Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3625919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3626093Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3626420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3626542Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3626921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3626990Z     yield
2025-01-14T13:17:21.3627275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3627378Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3627633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3627764Z     yield
2025-01-14T13:17:21.3628043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3628188Z     return (yield)
2025-01-14T13:17:21.3628499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3628608Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3628949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3629024Z     yield
2025-01-14T13:17:21.3629295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3629459Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3629685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3629763Z     raise exc
2025-01-14T13:17:21.3629984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3630063Z     col.setup()
2025-01-14T13:17:21.3630290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3630386Z     self._request._fillfixtures()
2025-01-14T13:17:21.3630645Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3630780Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3631049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3631175Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3631467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3631747Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3632024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3632152Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3632445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3632548Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3632785Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3632863Z     raise exc
2025-01-14T13:17:21.3633098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3633270Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3633505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3633671Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3633905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3634106Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3634346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3634522Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3634855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3634967Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3635348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3635421Z     yield
2025-01-14T13:17:21.3635703Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3635869Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3636129Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3636252Z     yield
2025-01-14T13:17:21.3636533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3636614Z     return (yield)
2025-01-14T13:17:21.3636919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3637027Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3637363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3637496Z     yield
2025-01-14T13:17:21.3637766Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3637870Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3638097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3638170Z     raise exc
2025-01-14T13:17:21.3638395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3638474Z     col.setup()
2025-01-14T13:17:21.3638700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3638792Z     self._request._fillfixtures()
2025-01-14T13:17:21.3639056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3639192Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3639465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3639581Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3639873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3639972Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3640219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3640344Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3640633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3640739Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3640978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3641118Z     raise exc
2025-01-14T13:17:21.3641359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3641458Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3641952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3642142Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3642373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3642582Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3642818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3642991Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3643324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3643447Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3643826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3644005Z     yield
2025-01-14T13:17:21.3644294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3644453Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3644707Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3644776Z     yield
2025-01-14T13:17:21.3645056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3645138Z     return (yield)
2025-01-14T13:17:21.3645444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3645560Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3645968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3646044Z     yield
2025-01-14T13:17:21.3646323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3646426Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3646654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3646736Z     raise exc
2025-01-14T13:17:21.3646957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3647035Z     col.setup()
2025-01-14T13:17:21.3647269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3647355Z     self._request._fillfixtures()
2025-01-14T13:17:21.3647625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3647763Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3648034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3648158Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3648452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3648552Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3648798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3648868Z     raise exc
2025-01-14T13:17:21.3649110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3649213Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3649445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3649682Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3649916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3650117Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3650357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3650534Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3650862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3650983Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3651366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3651443Z     yield
2025-01-14T13:17:21.3651861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3651965Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3652306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3652377Z     yield
2025-01-14T13:17:21.3652662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3652797Z     return (yield)
2025-01-14T13:17:21.3653113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3653214Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3653566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3653652Z     yield
2025-01-14T13:17:21.3653989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3654094Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3654317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3654402Z     raise exc
2025-01-14T13:17:21.3654625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3654711Z     col.setup()
2025-01-14T13:17:21.3654940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3655033Z     self._request._fillfixtures()
2025-01-14T13:17:21.3655286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3655431Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3655700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3655824Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3656116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3656220Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3656462Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3656537Z     raise exc
2025-01-14T13:17:21.3656793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3656887Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3657137Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3657309Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3657546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3657821Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3658069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3658254Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3658589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3658715Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3659093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3659173Z     yield
2025-01-14T13:17:21.3659456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3659567Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3659837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3659909Z     yield
2025-01-14T13:17:21.3660196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3660356Z     return (yield)
2025-01-14T13:17:21.3660672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3660836Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3661194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3661265Z     yield
2025-01-14T13:17:21.3661653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3661765Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3661999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3662148Z     raise exc
2025-01-14T13:17:21.3662374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3662460Z     col.setup()
2025-01-14T13:17:21.3662693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3662794Z     self._request._fillfixtures()
2025-01-14T13:17:21.3663056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3663205Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3663473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3663604Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3663905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3664013Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3664264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3664343Z     raise exc
2025-01-14T13:17:21.3664594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3664685Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3664930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3665097Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3665342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3665538Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3665788Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3666051Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3666382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3666508Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3666883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3666965Z     yield
2025-01-14T13:17:21.3667242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3667349Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3667598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3667672Z     yield
2025-01-14T13:17:21.3667957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3668036Z     return (yield)
2025-01-14T13:17:21.3668351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3668520Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3668872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3668999Z     yield
2025-01-14T13:17:21.3669279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3669375Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3669608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3669681Z     raise exc
2025-01-14T13:17:21.3669910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3669992Z     col.setup()
2025-01-14T13:17:21.3670263Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3670359Z     self._request._fillfixtures()
2025-01-14T13:17:21.3670620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3670762Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3671029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3671154Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3671444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3671692Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3672020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3672104Z     raise exc
2025-01-14T13:17:21.3672377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3672466Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3672705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3672871Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3673113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3673304Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3673551Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3673715Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3674051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3674252Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3674628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3674706Z     yield
2025-01-14T13:17:21.3674981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3675094Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3675344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3675419Z     yield
2025-01-14T13:17:21.3675693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3675774Z     return (yield)
2025-01-14T13:17:21.3676078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3676189Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3676535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3676669Z     yield
2025-01-14T13:17:21.3676952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3677049Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3677341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3677416Z     raise exc
2025-01-14T13:17:21.3677647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3677720Z     col.setup()
2025-01-14T13:17:21.3677956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3678045Z     self._request._fillfixtures()
2025-01-14T13:17:21.3678308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3678510Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3678770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3678895Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3679186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3679292Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3679533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3679610Z     raise exc
2025-01-14T13:17:21.3679848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3679945Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3680183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3680345Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3680579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3680772Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3681021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3681186Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3681516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3681819Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3682207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3682373Z     yield
2025-01-14T13:17:21.3682649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3682755Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3683007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3683082Z     yield
2025-01-14T13:17:21.3683370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3683448Z     return (yield)
2025-01-14T13:17:21.3683755Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3683862Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3684200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3684276Z     yield
2025-01-14T13:17:21.3684552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3684646Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3684948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3685018Z     raise exc
2025-01-14T13:17:21.3685246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3685377Z     col.setup()
2025-01-14T13:17:21.3685612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3685698Z     self._request._fillfixtures()
2025-01-14T13:17:21.3685962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3686096Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3686363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3686551Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3686839Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3686947Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3687187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3687321Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3687608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3687708Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3687944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3688019Z     raise exc
2025-01-14T13:17:21.3688254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3688361Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3688597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3688760Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3688995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3689191Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3689434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3689600Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3689933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3690045Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3690493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3690574Z     yield
2025-01-14T13:17:21.3690854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3690960Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3691212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3691285Z     yield
2025-01-14T13:17:21.3691647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3691728Z     return (yield)
2025-01-14T13:17:21.3692034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3692140Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3692482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3692558Z     yield
2025-01-14T13:17:21.3692834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3692999Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3693228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3693361Z     raise exc
2025-01-14T13:17:21.3693587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3693660Z     col.setup()
2025-01-14T13:17:21.3693892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3693977Z     self._request._fillfixtures()
2025-01-14T13:17:21.3694236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3694429Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3694698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3694823Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3695107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3695211Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3695449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3695579Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3695859Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3695960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3696195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3696279Z     raise exc
2025-01-14T13:17:21.3696521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3696611Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3696846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3697005Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3697242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3697432Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3697671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3697837Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3698233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3698351Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3698724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3698800Z     yield
2025-01-14T13:17:21.3699075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3699183Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3699431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3699507Z     yield
2025-01-14T13:17:21.3699781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3699860Z     return (yield)
2025-01-14T13:17:21.3700164Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3700275Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3700618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3700733Z     yield
2025-01-14T13:17:21.3701008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3701142Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3701372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3701441Z     raise exc
2025-01-14T13:17:21.3701758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3701832Z     col.setup()
2025-01-14T13:17:21.3702064Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3702152Z     self._request._fillfixtures()
2025-01-14T13:17:21.3702477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3702613Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3702881Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3703001Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3703298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3703398Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3703636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3703768Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3704052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3704159Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3704397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3704476Z     raise exc
2025-01-14T13:17:21.3704713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3704801Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3705038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3705196Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3705430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3705616Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3705858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3706086Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3706411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3706531Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3706901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3706976Z     yield
2025-01-14T13:17:21.3707251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3707353Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3707600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3707677Z     yield
2025-01-14T13:17:21.3707950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3708033Z     return (yield)
2025-01-14T13:17:21.3708337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3708955Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3709298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3709424Z     yield
2025-01-14T13:17:21.3709701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3709796Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3710028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3710098Z     raise exc
2025-01-14T13:17:21.3710326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3710444Z     col.setup()
2025-01-14T13:17:21.3710677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3710763Z     self._request._fillfixtures()
2025-01-14T13:17:21.3711028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3711167Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3711430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3711687Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3712030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3712137Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3712375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3712509Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3712794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3712896Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3713142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3713212Z     raise exc
2025-01-14T13:17:21.3713458Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3713547Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3713781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3713939Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3714173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3714443Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3714692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3714854Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3715187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3715306Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3715676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3715751Z     yield
2025-01-14T13:17:21.3716030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3716137Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3716386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3716464Z     yield
2025-01-14T13:17:21.3716742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3716884Z     return (yield)
2025-01-14T13:17:21.3717196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3717352Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3717702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3717770Z     yield
2025-01-14T13:17:21.3718046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3718141Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3718372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3718533Z     raise exc
2025-01-14T13:17:21.3718760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3718833Z     col.setup()
2025-01-14T13:17:21.3719068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3719159Z     self._request._fillfixtures()
2025-01-14T13:17:21.3719414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3719555Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3719816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3719935Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3720219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3720321Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3720559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3720687Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3720974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3721074Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3721318Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3721388Z     raise exc
2025-01-14T13:17:21.3721811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3721907Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3722143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3722305Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3722622Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3722812Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3723058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3723224Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3723548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3723664Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3724034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3724108Z     yield
2025-01-14T13:17:21.3724381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3724490Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3724737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3724874Z     yield
2025-01-14T13:17:21.3725147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3725226Z     return (yield)
2025-01-14T13:17:21.3725592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3725693Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3726034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3726105Z     yield
2025-01-14T13:17:21.3726381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3726478Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3726766Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3726835Z     raise exc
2025-01-14T13:17:21.3727065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3727143Z     col.setup()
2025-01-14T13:17:21.3727368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3727462Z     self._request._fillfixtures()
2025-01-14T13:17:21.3727718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3727856Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3728117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3728237Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3728522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3728627Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3728865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3728997Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3729285Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3729386Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3729625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3729694Z     raise exc
2025-01-14T13:17:21.3729933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3730022Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3730312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3730473Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3730710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3730897Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3731141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3731307Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3731740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3731874Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3732332Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3732483Z     yield
2025-01-14T13:17:21.3732793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3732989Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3733546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3733674Z     yield
2025-01-14T13:17:21.3738856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3738956Z     return (yield)
2025-01-14T13:17:21.3739309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3739425Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3739788Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3739868Z     yield
2025-01-14T13:17:21.3740275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3740380Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3740630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3740705Z     raise exc
2025-01-14T13:17:21.3740940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3741019Z     col.setup()
2025-01-14T13:17:21.3741248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3741341Z     self._request._fillfixtures()
2025-01-14T13:17:21.3741892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3742128Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3742441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3742565Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3742861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3742968Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3743211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3743340Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3743644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3743749Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3743996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3744073Z     raise exc
2025-01-14T13:17:21.3744469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3744584Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3744818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3744999Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3745229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3745430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3745668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3745839Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3746171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3746290Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3746674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3746742Z     yield
2025-01-14T13:17:21.3747125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3747227Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3747547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3747615Z     yield
2025-01-14T13:17:21.3747901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3747980Z     return (yield)
2025-01-14T13:17:21.3748285Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3748394Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3748800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3748871Z     yield
2025-01-14T13:17:21.3749150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3749253Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3749482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3749559Z     raise exc
2025-01-14T13:17:21.3749779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3749856Z     col.setup()
2025-01-14T13:17:21.3750088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3750175Z     self._request._fillfixtures()
2025-01-14T13:17:21.3750436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3750582Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3750852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3750973Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3751266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3751364Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3751786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3751945Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3752237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3752338Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3752653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3752732Z     raise exc
2025-01-14T13:17:21.3752971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3753069Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3753302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3753474Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3753702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3753899Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3754139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3754305Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3754640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3754752Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3755131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3755295Z     yield
2025-01-14T13:17:21.3755577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3755733Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3755987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3756053Z     yield
2025-01-14T13:17:21.3756336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3756411Z     return (yield)
2025-01-14T13:17:21.3756721Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3756884Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3757224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3757302Z     yield
2025-01-14T13:17:21.3757570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3757671Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3757895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3757967Z     raise exc
2025-01-14T13:17:21.3758187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3758262Z     col.setup()
2025-01-14T13:17:21.3758492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3758582Z     self._request._fillfixtures()
2025-01-14T13:17:21.3758842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3758976Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3759254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3759370Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3759663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3759757Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3759997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3760125Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3760408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3760572Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3760808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3760885Z     raise exc
2025-01-14T13:17:21.3761115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3761206Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3761438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3761833Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3762094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3762291Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3762535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3762710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3763044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3763261Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3763640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3763769Z     yield
2025-01-14T13:17:21.3764051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3764150Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3764402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3764478Z     yield
2025-01-14T13:17:21.3764752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3764887Z     return (yield)
2025-01-14T13:17:21.3765192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3765300Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3765638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3765711Z     yield
2025-01-14T13:17:21.3765979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3766077Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3766299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3766373Z     raise exc
2025-01-14T13:17:21.3766598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3766674Z     col.setup()
2025-01-14T13:17:21.3766902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3766985Z     self._request._fillfixtures()
2025-01-14T13:17:21.3767246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3767375Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3767643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3767757Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3768044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3768139Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3768379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3768580Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3768862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3768962Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3769196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3769271Z     raise exc
2025-01-14T13:17:21.3769512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3769606Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3769838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3770009Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3770240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3770436Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3770687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3770911Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3771246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3771400Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3771927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3771997Z     yield
2025-01-14T13:17:21.3772284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3772413Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3772710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3772879Z     yield
2025-01-14T13:17:21.3773183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3773271Z     return (yield)
2025-01-14T13:17:21.3773582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3773695Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3774035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3774105Z     yield
2025-01-14T13:17:21.3774375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3774474Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3774702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3774781Z     raise exc
2025-01-14T13:17:21.3775005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3775076Z     col.setup()
2025-01-14T13:17:21.3775310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3775395Z     self._request._fillfixtures()
2025-01-14T13:17:21.3775658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3775794Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3776061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3776180Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3776474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3776643Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3776887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3777015Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3777298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3777400Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3777639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3777816Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3778045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3778239Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3778475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3778645Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3778933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3779069Z     return (yield)
2025-01-14T13:17:21.3779362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3779558Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3779832Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3779924Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3780144Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3780216Z     sim.iterate(10)
2025-01-14T13:17:21.3780314Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3780475Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3780628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3780633Z 
2025-01-14T13:17:21.3780897Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3781102Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3781330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3781807Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3782069Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3782216Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3782221Z 
2025-01-14T13:17:21.3782318Z     def initialize_transport_state(
2025-01-14T13:17:21.3782391Z         self,
2025-01-14T13:17:21.3782476Z         simulation_state,
2025-01-14T13:17:21.3782561Z         opacity_state,
2025-01-14T13:17:21.3782634Z         macro_atom_state,
2025-01-14T13:17:21.3782711Z         plasma,
2025-01-14T13:17:21.3782783Z         no_of_packets,
2025-01-14T13:17:21.3782872Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3782943Z         iteration=0,
2025-01-14T13:17:21.3783014Z     ):
2025-01-14T13:17:21.3783141Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3783246Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3783313Z         else:
2025-01-14T13:17:21.3783395Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3783460Z     
2025-01-14T13:17:21.3783601Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3783697Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3783769Z         )
2025-01-14T13:17:21.3783835Z     
2025-01-14T13:17:21.3783970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3784229Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3784387Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3784457Z         else:
2025-01-14T13:17:21.3784543Z             continuum_state = None
2025-01-14T13:17:21.3784647Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3784753Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3784849Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3784954Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3785054Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3785146Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3785242Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3785309Z         ).to_numba(
2025-01-14T13:17:21.3785390Z             macro_atom_state,
2025-01-14T13:17:21.3785480Z             self.line_interaction_type,
2025-01-14T13:17:21.3785548Z         )
2025-01-14T13:17:21.3785655Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3785925Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3786067Z         ]
2025-01-14T13:17:21.3786370Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3786428Z 
2025-01-14T13:17:21.3786583Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3786774Z ______ test_last_interaction_properties[nu_packet_collection-nu_to_check] ______
2025-01-14T13:17:21.3786779Z 
2025-01-14T13:17:21.3786920Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.3787205Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.3787215Z 
2025-01-14T13:17:21.3787301Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3787390Z         "expected,obtained",
2025-01-14T13:17:21.3787515Z         [
2025-01-14T13:17:21.3787586Z             (
2025-01-14T13:17:21.3787674Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3787767Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3787838Z             ),
2025-01-14T13:17:21.3787907Z             (
2025-01-14T13:17:21.3787986Z                 "shell_id_in_use",
2025-01-14T13:17:21.3788069Z                 "shell_id_to_check",
2025-01-14T13:17:21.3788136Z             ),
2025-01-14T13:17:21.3788208Z             (
2025-01-14T13:17:21.3788281Z                 "r_in_use",
2025-01-14T13:17:21.3788358Z                 "r_to_check",
2025-01-14T13:17:21.3788423Z             ),
2025-01-14T13:17:21.3788529Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3788599Z         ],
2025-01-14T13:17:21.3788664Z     )
2025-01-14T13:17:21.3788832Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3788946Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3788953Z 
2025-01-14T13:17:21.3789178Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3789283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3789568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3789685Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3789980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3790076Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3790324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3790457Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3790740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3790892Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3791126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3791201Z     raise exc
2025-01-14T13:17:21.3791436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3791531Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3792022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3792199Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3792433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3792627Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3792870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3793039Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3793348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3793529Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3793879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3794012Z     yield
2025-01-14T13:17:21.3794338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3794450Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3794825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3794899Z     yield
2025-01-14T13:17:21.3795176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3795337Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3795588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3795664Z     yield
2025-01-14T13:17:21.3795937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3796018Z     return (yield)
2025-01-14T13:17:21.3796294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3796369Z     return (yield)
2025-01-14T13:17:21.3796634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3796706Z     raise e
2025-01-14T13:17:21.3796975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3797051Z     item.runtest()
2025-01-14T13:17:21.3797287Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3797399Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3797635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3797824Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3798064Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3798242Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3798515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3798604Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3798946Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3799124Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3799391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3799510Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3799799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3799898Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3800139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3800266Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3800549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3800649Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3800884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3800960Z     raise exc
2025-01-14T13:17:21.3801193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3801334Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3801733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3802068Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3802309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3802500Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3802741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3802901Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3803276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3803378Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3803727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3803794Z     yield
2025-01-14T13:17:21.3804113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3804222Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3804597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3804668Z     yield
2025-01-14T13:17:21.3804939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3805041Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3805292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3805363Z     yield
2025-01-14T13:17:21.3805631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3805711Z     return (yield)
2025-01-14T13:17:21.3805987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3806065Z     return (yield)
2025-01-14T13:17:21.3806328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3806401Z     raise e
2025-01-14T13:17:21.3806667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3806739Z     item.runtest()
2025-01-14T13:17:21.3806970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3807146Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3807377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3807563Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3807803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3807966Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3808234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3808327Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3808658Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3808774Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3809039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3809159Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3809443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3809609Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3809843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3810013Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3810299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3810393Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3810632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3810703Z     raise exc
2025-01-14T13:17:21.3810938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3811094Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3811325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3811489Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3811833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3812020Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3812262Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3812429Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3812730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3812836Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3813179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3813254Z     yield
2025-01-14T13:17:21.3813570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3813683Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3814055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3814127Z     yield
2025-01-14T13:17:21.3814403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3814498Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3814752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3814891Z     yield
2025-01-14T13:17:21.3815165Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3815235Z     return (yield)
2025-01-14T13:17:21.3815517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3815588Z     return (yield)
2025-01-14T13:17:21.3815858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3815928Z     raise e
2025-01-14T13:17:21.3816194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3816272Z     item.runtest()
2025-01-14T13:17:21.3816500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3816613Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3816840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3817029Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3817265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3817492Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3817756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3817902Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3818231Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3818344Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3818610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3818727Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3819072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3819166Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3819407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3819528Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3819818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3819910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3820149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3820222Z     raise exc
2025-01-14T13:17:21.3820454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3820549Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3820777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3820941Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3821172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3821361Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3821702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3821870Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3822199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3822307Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3822685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3822833Z     yield
2025-01-14T13:17:21.3823114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3823217Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3823469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3823539Z     yield
2025-01-14T13:17:21.3823816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3823886Z     return (yield)
2025-01-14T13:17:21.3824196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3824298Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3824637Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3824712Z     yield
2025-01-14T13:17:21.3824982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3825148Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3825378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3825453Z     raise exc
2025-01-14T13:17:21.3825733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3825810Z     col.setup()
2025-01-14T13:17:21.3826035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3826125Z     self._request._fillfixtures()
2025-01-14T13:17:21.3826385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3826520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3826848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3826963Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3827255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3827351Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3827593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3827713Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3827999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3828098Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3828331Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3828407Z     raise exc
2025-01-14T13:17:21.3828640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3828731Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3828956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3829121Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3829345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3829543Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3829779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3829944Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3830271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3830429Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3830805Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3830874Z     yield
2025-01-14T13:17:21.3831153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3831256Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3831509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3831728Z     yield
2025-01-14T13:17:21.3832039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3832116Z     return (yield)
2025-01-14T13:17:21.3832421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3832527Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3832866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3832937Z     yield
2025-01-14T13:17:21.3833282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3833380Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3833663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3833740Z     raise exc
2025-01-14T13:17:21.3833959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3834036Z     col.setup()
2025-01-14T13:17:21.3834261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3834352Z     self._request._fillfixtures()
2025-01-14T13:17:21.3834614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3834804Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3835071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3835188Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3835476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3835572Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3835813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3835933Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3836217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3836316Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3836556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3836628Z     raise exc
2025-01-14T13:17:21.3836858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3836954Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3837179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3837344Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3837570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3837760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3837995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3838162Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3838553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3838662Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3839038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3839104Z     yield
2025-01-14T13:17:21.3839387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3839484Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3839737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3839803Z     yield
2025-01-14T13:17:21.3840080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3840157Z     return (yield)
2025-01-14T13:17:21.3840468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3840572Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3840954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3841025Z     yield
2025-01-14T13:17:21.3841293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3841456Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3841862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3841940Z     raise exc
2025-01-14T13:17:21.3842160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3842237Z     col.setup()
2025-01-14T13:17:21.3842466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3842625Z     self._request._fillfixtures()
2025-01-14T13:17:21.3842884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3843019Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3843283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3843399Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3843693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3843789Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3844030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3844155Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3844442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3844542Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3844777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3844853Z     raise exc
2025-01-14T13:17:21.3845086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3845180Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3845408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3845569Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3845800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3845989Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3846294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3846458Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3846791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3846901Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3847282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3847347Z     yield
2025-01-14T13:17:21.3847627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3847724Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3847975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3848047Z     yield
2025-01-14T13:17:21.3848319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3848398Z     return (yield)
2025-01-14T13:17:21.3848702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3848867Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3849207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3849332Z     yield
2025-01-14T13:17:21.3849602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3849701Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3849924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3849996Z     raise exc
2025-01-14T13:17:21.3850225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3850338Z     col.setup()
2025-01-14T13:17:21.3850566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3850652Z     self._request._fillfixtures()
2025-01-14T13:17:21.3850906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3851041Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3851308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3851420Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3851803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3851899Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3852140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3852271Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3852551Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3852652Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3852885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3852960Z     raise exc
2025-01-14T13:17:21.3853192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3853284Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3853522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3853687Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3853916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3854177Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3854418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3854580Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3854906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3855018Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3855392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3855459Z     yield
2025-01-14T13:17:21.3855736Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3855833Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3856090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3856160Z     yield
2025-01-14T13:17:21.3856429Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3856570Z     return (yield)
2025-01-14T13:17:21.3856871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3857027Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3857363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3857435Z     yield
2025-01-14T13:17:21.3857702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3857800Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3858025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3858154Z     raise exc
2025-01-14T13:17:21.3858379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3858452Z     col.setup()
2025-01-14T13:17:21.3858682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3858764Z     self._request._fillfixtures()
2025-01-14T13:17:21.3859021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3859150Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3859414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3859528Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3859813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3859921Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3860154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3860282Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3860563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3860663Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3860897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3860970Z     raise exc
2025-01-14T13:17:21.3861207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3861300Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3861526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3861836Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3862072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3862257Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3862501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3862663Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3863003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3863112Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3863499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3863566Z     yield
2025-01-14T13:17:21.3863848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3863955Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3864201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3864341Z     yield
2025-01-14T13:17:21.3864615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3864746Z     return (yield)
2025-01-14T13:17:21.3865054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3865160Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3865499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3865574Z     yield
2025-01-14T13:17:21.3865842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3866002Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3866232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3866303Z     raise exc
2025-01-14T13:17:21.3866530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3866599Z     col.setup()
2025-01-14T13:17:21.3866831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3866914Z     self._request._fillfixtures()
2025-01-14T13:17:21.3867170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3867299Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3867563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3867679Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3867971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3868073Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3868311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3868436Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3868718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3868820Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3869056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3869132Z     raise exc
2025-01-14T13:17:21.3869366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3869527Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3869758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3869923Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3870160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3870345Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3870595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3870755Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3871085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3871194Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3871714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3871834Z     yield
2025-01-14T13:17:21.3872111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3872311Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3872588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3872722Z     yield
2025-01-14T13:17:21.3872994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3873075Z     return (yield)
2025-01-14T13:17:21.3873379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3873482Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3873826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3873969Z     yield
2025-01-14T13:17:21.3874243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3874343Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3874578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3874648Z     raise exc
2025-01-14T13:17:21.3874879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3874952Z     col.setup()
2025-01-14T13:17:21.3875183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3875269Z     self._request._fillfixtures()
2025-01-14T13:17:21.3875528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3875661Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3875934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3876054Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3876342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3876444Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3876683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3876813Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3877096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3877200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3877436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3877576Z     raise exc
2025-01-14T13:17:21.3877813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3877907Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3878139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3878303Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3878541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3878726Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3878969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3879130Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3879461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3879576Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3879952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3880075Z     yield
2025-01-14T13:17:21.3880349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3880497Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3880747Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3880821Z     yield
2025-01-14T13:17:21.3881097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3881174Z     return (yield)
2025-01-14T13:17:21.3881477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3881758Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3882215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3882297Z     yield
2025-01-14T13:17:21.3882579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3882676Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3882912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3882979Z     raise exc
2025-01-14T13:17:21.3883207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3883276Z     col.setup()
2025-01-14T13:17:21.3883513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3883599Z     self._request._fillfixtures()
2025-01-14T13:17:21.3883862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3883998Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3884265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3884389Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3884671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3884774Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3885011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3885138Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3885420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3885591Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3885831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3885906Z     raise exc
2025-01-14T13:17:21.3886139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3886235Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3886469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3886629Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3886866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3887054Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3887299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3887464Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3887796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3887906Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3888350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3888477Z     yield
2025-01-14T13:17:21.3888757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3888863Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3889113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3889186Z     yield
2025-01-14T13:17:21.3889458Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3889537Z     return (yield)
2025-01-14T13:17:21.3889887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3889993Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3890339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3890406Z     yield
2025-01-14T13:17:21.3890687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3890780Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3891010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3891077Z     raise exc
2025-01-14T13:17:21.3891302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3891376Z     col.setup()
2025-01-14T13:17:21.3891717Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3891807Z     self._request._fillfixtures()
2025-01-14T13:17:21.3892072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3892218Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3892481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3892604Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3892889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3892993Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3893230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3893358Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3893717Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3893823Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3894059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3894133Z     raise exc
2025-01-14T13:17:21.3894372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3894460Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3894694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3894851Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3895085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3895273Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3895521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3895688Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3896092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3896209Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3896636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3896712Z     yield
2025-01-14T13:17:21.3896989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3897096Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3897346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3897423Z     yield
2025-01-14T13:17:21.3897757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3897836Z     return (yield)
2025-01-14T13:17:21.3898142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3898255Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3898598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3898668Z     yield
2025-01-14T13:17:21.3898946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3899039Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3899272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3899340Z     raise exc
2025-01-14T13:17:21.3899570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3899644Z     col.setup()
2025-01-14T13:17:21.3899874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3899962Z     self._request._fillfixtures()
2025-01-14T13:17:21.3900220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3900359Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3900619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3900738Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3901021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3901121Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3901357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3901643Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3901925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3902028Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3902267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3902338Z     raise exc
2025-01-14T13:17:21.3902575Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3902661Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3902895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3903052Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3903286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3903476Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3903724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3903952Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3904281Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3904450Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3904821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3904893Z     yield
2025-01-14T13:17:21.3905167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3905272Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3905578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3905651Z     yield
2025-01-14T13:17:21.3905924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3906004Z     return (yield)
2025-01-14T13:17:21.3906311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3906411Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3906755Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3906825Z     yield
2025-01-14T13:17:21.3907100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3907192Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3907423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3907496Z     raise exc
2025-01-14T13:17:21.3907723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3907796Z     col.setup()
2025-01-14T13:17:21.3908025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3908116Z     self._request._fillfixtures()
2025-01-14T13:17:21.3908372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3908510Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3908771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3908891Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3909177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3909347Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3909582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3909709Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3909992Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3910097Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3910340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3910408Z     raise exc
2025-01-14T13:17:21.3910647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3910732Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3910968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3911133Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3911367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3911780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3912044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3912288Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3912612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3912730Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3913098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3913171Z     yield
2025-01-14T13:17:21.3913447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3913612Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3913861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3913938Z     yield
2025-01-14T13:17:21.3914211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3914298Z     return (yield)
2025-01-14T13:17:21.3914609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3914708Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3915053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3915122Z     yield
2025-01-14T13:17:21.3915400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3915499Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3915733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3915805Z     raise exc
2025-01-14T13:17:21.3916029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3916099Z     col.setup()
2025-01-14T13:17:21.3916332Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3916421Z     self._request._fillfixtures()
2025-01-14T13:17:21.3916674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3916809Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3917071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3917254Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3917541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3917641Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3917875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3918001Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3918290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3918384Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3918624Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3918692Z     raise exc
2025-01-14T13:17:21.3918930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3919019Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3919256Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3919412Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3919711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3919896Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3920180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3920345Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3920670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3920783Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3921155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3921270Z     yield
2025-01-14T13:17:21.3921543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3921837Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3922090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3922164Z     yield
2025-01-14T13:17:21.3922447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3922518Z     return (yield)
2025-01-14T13:17:21.3922827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3922925Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3923267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3923339Z     yield
2025-01-14T13:17:21.3923616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3923713Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3923945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3924016Z     raise exc
2025-01-14T13:17:21.3924244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3924324Z     col.setup()
2025-01-14T13:17:21.3924547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3924639Z     self._request._fillfixtures()
2025-01-14T13:17:21.3924898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3925037Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3925394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3925515Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3925801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3925905Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3926142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3926268Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3926556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3926652Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3926893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3926967Z     raise exc
2025-01-14T13:17:21.3927211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3927308Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3927610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3927767Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3928052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3928242Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3928476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3928641Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3928962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3929151Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3929521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3929595Z     yield
2025-01-14T13:17:21.3929867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3929969Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3930214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3930286Z     yield
2025-01-14T13:17:21.3930563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3930634Z     return (yield)
2025-01-14T13:17:21.3930942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3931044Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3931386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3931455Z     yield
2025-01-14T13:17:21.3931843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3931936Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3932167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3932240Z     raise exc
2025-01-14T13:17:21.3932459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3932533Z     col.setup()
2025-01-14T13:17:21.3932753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3932844Z     self._request._fillfixtures()
2025-01-14T13:17:21.3933165Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3933304Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3933561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3933682Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3933964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3934068Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3934307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3934427Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3934712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3934807Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3935046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3935113Z     raise exc
2025-01-14T13:17:21.3935351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3935499Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3935731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3935945Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3936179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3936369Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3936604Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3936773Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3937153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3937266Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3937636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3937708Z     yield
2025-01-14T13:17:21.3937985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3938087Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3938337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3938403Z     yield
2025-01-14T13:17:21.3938682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3938769Z     return (yield)
2025-01-14T13:17:21.3939083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3939181Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3939525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3939590Z     yield
2025-01-14T13:17:21.3939865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3939956Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3940182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3940254Z     raise exc
2025-01-14T13:17:21.3940479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3940553Z     col.setup()
2025-01-14T13:17:21.3940825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3940917Z     self._request._fillfixtures()
2025-01-14T13:17:21.3941167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3941301Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3941648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3941773Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3942053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3942153Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3942395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3942515Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3942807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3942905Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3943142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3943277Z     raise exc
2025-01-14T13:17:21.3943514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3943661Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3943897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3944060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3944288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3944480Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3944772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3944944Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3945269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3945381Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3945754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3945826Z     yield
2025-01-14T13:17:21.3946100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3946201Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3946452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3946520Z     yield
2025-01-14T13:17:21.3946797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3946869Z     return (yield)
2025-01-14T13:17:21.3947179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3947281Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3947625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3947694Z     yield
2025-01-14T13:17:21.3947967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3948064Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3948287Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3948360Z     raise exc
2025-01-14T13:17:21.3948644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3948723Z     col.setup()
2025-01-14T13:17:21.3948945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3949034Z     self._request._fillfixtures()
2025-01-14T13:17:21.3949286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3949421Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3949680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3949799Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3950087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3950184Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3950423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3950492Z     raise exc
2025-01-14T13:17:21.3950727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3950859Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3951091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3951284Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3951514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3951897Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3952146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3952312Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3952639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3952828Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3953200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3953277Z     yield
2025-01-14T13:17:21.3953549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3953651Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3953900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3953971Z     yield
2025-01-14T13:17:21.3954246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3954317Z     return (yield)
2025-01-14T13:17:21.3954629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3954732Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3955075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3955147Z     yield
2025-01-14T13:17:21.3955421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3955512Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3955743Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3955810Z     raise exc
2025-01-14T13:17:21.3956034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3956108Z     col.setup()
2025-01-14T13:17:21.3956332Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3956491Z     self._request._fillfixtures()
2025-01-14T13:17:21.3956744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3956878Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3957141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3957259Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3957546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3957646Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3957882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3957954Z     raise exc
2025-01-14T13:17:21.3958192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3958280Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3958512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3958669Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3958963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3959147Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3959459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3959618Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3959943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3960054Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3960422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3960541Z     yield
2025-01-14T13:17:21.3960814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3960919Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3961163Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3961236Z     yield
2025-01-14T13:17:21.3961511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3961756Z     return (yield)
2025-01-14T13:17:21.3962080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3962185Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3962526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3962598Z     yield
2025-01-14T13:17:21.3962874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3962970Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3963195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3963264Z     raise exc
2025-01-14T13:17:21.3963488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3963557Z     col.setup()
2025-01-14T13:17:21.3963786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3963870Z     self._request._fillfixtures()
2025-01-14T13:17:21.3964124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3964335Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3964600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3964718Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3965004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3965105Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3965345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3965419Z     raise exc
2025-01-14T13:17:21.3965650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3965741Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3965970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3966130Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3966368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3966553Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3966859Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3967019Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3967407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3967515Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3967887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3967959Z     yield
2025-01-14T13:17:21.3968231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3968388Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3968636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3968711Z     yield
2025-01-14T13:17:21.3968983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3969062Z     return (yield)
2025-01-14T13:17:21.3969366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3969468Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3969805Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3969876Z     yield
2025-01-14T13:17:21.3970150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3970247Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3970475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3970543Z     raise exc
2025-01-14T13:17:21.3970771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3970840Z     col.setup()
2025-01-14T13:17:21.3971067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3971152Z     self._request._fillfixtures()
2025-01-14T13:17:21.3971410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3971539Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3971900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3972019Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3972404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3972506Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3972743Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3972815Z     raise exc
2025-01-14T13:17:21.3973046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3973138Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3973363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3973524Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3973749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3973941Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3974186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3974345Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3974737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3974844Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3975272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3975338Z     yield
2025-01-14T13:17:21.3975616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3975712Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3975966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3976039Z     yield
2025-01-14T13:17:21.3976368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3976443Z     return (yield)
2025-01-14T13:17:21.3976749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3976855Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3977194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3977265Z     yield
2025-01-14T13:17:21.3977533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3977629Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3977850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3977922Z     raise exc
2025-01-14T13:17:21.3978150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3978222Z     col.setup()
2025-01-14T13:17:21.3978452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3978538Z     self._request._fillfixtures()
2025-01-14T13:17:21.3978796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3978926Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3979189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3979300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3979588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3979682Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3979973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3980050Z     raise exc
2025-01-14T13:17:21.3980280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3980371Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3980596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3980759Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3980985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3981172Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3981409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3981661Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3981993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3982102Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3982546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3982613Z     yield
2025-01-14T13:17:21.3982891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3983045Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3983296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3983361Z     yield
2025-01-14T13:17:21.3983639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3983709Z     return (yield)
2025-01-14T13:17:21.3984020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3984179Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3984516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3984591Z     yield
2025-01-14T13:17:21.3984859Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3984959Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3985183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3985258Z     raise exc
2025-01-14T13:17:21.3985480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3985555Z     col.setup()
2025-01-14T13:17:21.3985778Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3985876Z     self._request._fillfixtures()
2025-01-14T13:17:21.3986134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3986266Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3986528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3986642Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3986930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3987024Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3987264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3987389Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3987674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3987838Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3988071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3988146Z     raise exc
2025-01-14T13:17:21.3988378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3988471Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3988697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3988858Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3989084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3989273Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3989508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3989677Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3990005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3990182Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3990557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3990665Z     yield
2025-01-14T13:17:21.3990945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3991041Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3991304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3991373Z     yield
2025-01-14T13:17:21.3991848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3992005Z     return (yield)
2025-01-14T13:17:21.3992319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3992429Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3992770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3997975Z     yield
2025-01-14T13:17:21.3998341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3998446Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3998698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3998771Z     raise exc
2025-01-14T13:17:21.3999008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3999094Z     col.setup()
2025-01-14T13:17:21.3999329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3999418Z     self._request._fillfixtures()
2025-01-14T13:17:21.3999695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3999840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4000120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4000245Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4000538Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4000643Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4000889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4001133Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4001428Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4001534Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4002152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4002245Z     raise exc
2025-01-14T13:17:21.4002491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4002583Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4002819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4002986Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4003222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4003418Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4003662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4003923Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4004260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4004440Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4004816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4004890Z     yield
2025-01-14T13:17:21.4005172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4005281Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4005535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4005671Z     yield
2025-01-14T13:17:21.4005943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4006025Z     return (yield)
2025-01-14T13:17:21.4006335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4006445Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4006791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4006858Z     yield
2025-01-14T13:17:21.4007137Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4007232Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4007464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4007539Z     raise exc
2025-01-14T13:17:21.4007763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4007838Z     col.setup()
2025-01-14T13:17:21.4008073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4008160Z     self._request._fillfixtures()
2025-01-14T13:17:21.4008424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4008567Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4008835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4008959Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4009249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4009418Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4009663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4009794Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4010080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4010181Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4010424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4010495Z     raise exc
2025-01-14T13:17:21.4010736Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4010825Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4011060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4011225Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4011465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4011777Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4012098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4012263Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4012652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4012767Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4013142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4013216Z     yield
2025-01-14T13:17:21.4013493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4013663Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4013909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4013986Z     yield
2025-01-14T13:17:21.4014258Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4014339Z     return (yield)
2025-01-14T13:17:21.4014647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4014747Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4015090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4015157Z     yield
2025-01-14T13:17:21.4015432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4015530Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4015760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4015828Z     raise exc
2025-01-14T13:17:21.4016056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4016127Z     col.setup()
2025-01-14T13:17:21.4016359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4016453Z     self._request._fillfixtures()
2025-01-14T13:17:21.4016706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4016844Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4017104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4017225Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4017577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4017680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4017919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4018049Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4018338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4018435Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4018676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4018745Z     raise exc
2025-01-14T13:17:21.4018981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4019070Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4019309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4019473Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4019756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4019943Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4020231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4020401Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4020732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4020846Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4021223Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4021342Z     yield
2025-01-14T13:17:21.4021727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4021836Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4022084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4022158Z     yield
2025-01-14T13:17:21.4022431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4022511Z     return (yield)
2025-01-14T13:17:21.4022820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4022920Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4023265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4023340Z     yield
2025-01-14T13:17:21.4023613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4023707Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4023937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4024006Z     raise exc
2025-01-14T13:17:21.4024236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4024313Z     col.setup()
2025-01-14T13:17:21.4024537Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4024627Z     self._request._fillfixtures()
2025-01-14T13:17:21.4024885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4025023Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4025358Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4025481Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4025766Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4025868Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4026107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4026239Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4026526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4026619Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4026859Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4026926Z     raise exc
2025-01-14T13:17:21.4027165Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4027254Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4027488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4027722Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4027958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4028219Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4028461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4028629Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4028951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4029068Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4029494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4029571Z     yield
2025-01-14T13:17:21.4029843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4029946Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4030193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4030266Z     yield
2025-01-14T13:17:21.4030546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4030617Z     return (yield)
2025-01-14T13:17:21.4030945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4031049Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4031399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4031467Z     yield
2025-01-14T13:17:21.4031999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4032104Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4032349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4032418Z     raise exc
2025-01-14T13:17:21.4032648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4032724Z     col.setup()
2025-01-14T13:17:21.4032953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4033046Z     self._request._fillfixtures()
2025-01-14T13:17:21.4033308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4033530Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4033806Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4033935Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4034227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4034333Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4034573Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4034704Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4034999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4035098Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4035343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4035415Z     raise exc
2025-01-14T13:17:21.4035655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4035809Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4036046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4036266Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4036502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4036697Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4036934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4037104Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4037491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4037608Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4037983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4038058Z     yield
2025-01-14T13:17:21.4038339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4038445Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4038704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4038773Z     yield
2025-01-14T13:17:21.4039054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4039127Z     return (yield)
2025-01-14T13:17:21.4039441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4039545Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4039891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4039962Z     yield
2025-01-14T13:17:21.4040240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4040337Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4040569Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4040642Z     raise exc
2025-01-14T13:17:21.4040865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4040942Z     col.setup()
2025-01-14T13:17:21.4041170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4041313Z     self._request._fillfixtures()
2025-01-14T13:17:21.4041745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4041987Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4042289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4042420Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4042706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4042807Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4043050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4043176Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4043467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4043566Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4043809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4043972Z     raise exc
2025-01-14T13:17:21.4044211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4044357Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4044592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4044756Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4044990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4045183Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4045423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4045661Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4045989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4046111Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4046482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4046562Z     yield
2025-01-14T13:17:21.4046838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4046942Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4047196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4047264Z     yield
2025-01-14T13:17:21.4047544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4047620Z     return (yield)
2025-01-14T13:17:21.4047930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4048034Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4048377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4048446Z     yield
2025-01-14T13:17:21.4048723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4048819Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4049049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4049124Z     raise exc
2025-01-14T13:17:21.4049344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4049488Z     col.setup()
2025-01-14T13:17:21.4049714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4049805Z     self._request._fillfixtures()
2025-01-14T13:17:21.4050065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4050204Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4050469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4050594Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4050878Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4050978Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4051215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4051342Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4051798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4051981Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4052228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4052353Z     raise exc
2025-01-14T13:17:21.4052592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4052681Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4052913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4053079Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4053306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4053558Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4053796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4053967Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4054292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4054410Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4054784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4054858Z     yield
2025-01-14T13:17:21.4055141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4055242Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4055499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4055572Z     yield
2025-01-14T13:17:21.4055852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4055927Z     return (yield)
2025-01-14T13:17:21.4056236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4056338Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4056682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4056750Z     yield
2025-01-14T13:17:21.4057027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4057125Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4057349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4057491Z     raise exc
2025-01-14T13:17:21.4057713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4057790Z     col.setup()
2025-01-14T13:17:21.4058017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4058108Z     self._request._fillfixtures()
2025-01-14T13:17:21.4058366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4058506Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4058770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4058892Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4059187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4059290Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4059539Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4059662Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4060031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4060126Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4060406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4060475Z     raise exc
2025-01-14T13:17:21.4060714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4060802Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4061038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4061209Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4061480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4061800Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4062043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4062209Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4062557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4062677Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4063046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4063120Z     yield
2025-01-14T13:17:21.4063399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4063509Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4063760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4063840Z     yield
2025-01-14T13:17:21.4064112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4064195Z     return (yield)
2025-01-14T13:17:21.4064505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4064614Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4064966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4065035Z     yield
2025-01-14T13:17:21.4065315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4065482Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4065716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4065788Z     raise exc
2025-01-14T13:17:21.4066015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4066087Z     col.setup()
2025-01-14T13:17:21.4066321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4066408Z     self._request._fillfixtures()
2025-01-14T13:17:21.4066669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4066809Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4067070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4067196Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4067487Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4067588Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4067891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4068021Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4068361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4068463Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4068702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4068771Z     raise exc
2025-01-14T13:17:21.4069010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4069099Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4069395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4069560Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4069797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4069987Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4070231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4070392Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4070718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4070832Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4071201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4071279Z     yield
2025-01-14T13:17:21.4071661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4071774Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4072022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4072097Z     yield
2025-01-14T13:17:21.4072368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4072479Z     return (yield)
2025-01-14T13:17:21.4072782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4072888Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4073230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4073369Z     yield
2025-01-14T13:17:21.4073647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4073745Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4073980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4074050Z     raise exc
2025-01-14T13:17:21.4074279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4074350Z     col.setup()
2025-01-14T13:17:21.4074579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4074670Z     self._request._fillfixtures()
2025-01-14T13:17:21.4074927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4075066Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4075329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4075451Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4075736Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4075902Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4076140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4076326Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4076606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4076706Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4076945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4077120Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4077412Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4077599Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4077843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4078008Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4078298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4078371Z     return (yield)
2025-01-14T13:17:21.4078656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4078793Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4079062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4079160Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4079371Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.4079452Z     sim.iterate(10)
2025-01-14T13:17:21.4079546Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4079705Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4079821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4079826Z 
2025-01-14T13:17:21.4080091Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.4080299Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.4080520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.4080794Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.4081007Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.4081144Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4081150Z 
2025-01-14T13:17:21.4081239Z     def initialize_transport_state(
2025-01-14T13:17:21.4081314Z         self,
2025-01-14T13:17:21.4081393Z         simulation_state,
2025-01-14T13:17:21.4081472Z         opacity_state,
2025-01-14T13:17:21.4081703Z         macro_atom_state,
2025-01-14T13:17:21.4081830Z         plasma,
2025-01-14T13:17:21.4081908Z         no_of_packets,
2025-01-14T13:17:21.4081995Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4082072Z         iteration=0,
2025-01-14T13:17:21.4082141Z     ):
2025-01-14T13:17:21.4082274Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4082370Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4082446Z         else:
2025-01-14T13:17:21.4082524Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4082599Z     
2025-01-14T13:17:21.4082738Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4082839Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4082906Z         )
2025-01-14T13:17:21.4083055Z     
2025-01-14T13:17:21.4083185Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4083308Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4083518Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4083595Z         else:
2025-01-14T13:17:21.4083691Z             continuum_state = None
2025-01-14T13:17:21.4083873Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4084046Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4084196Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4084381Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4084550Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4084810Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4084963Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4085095Z         ).to_numba(
2025-01-14T13:17:21.4085191Z             macro_atom_state,
2025-01-14T13:17:21.4085286Z             self.line_interaction_type,
2025-01-14T13:17:21.4085355Z         )
2025-01-14T13:17:21.4085463Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4085743Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4085820Z         ]
2025-01-14T13:17:21.4086130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4086141Z 
2025-01-14T13:17:21.4086297Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4086616Z _ test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] _
2025-01-14T13:17:21.4086627Z 
2025-01-14T13:17:21.4086752Z expected = 'interaction_type_last_interaction_class'
2025-01-14T13:17:21.4086873Z obtained = 'last_interaction_type_rpacket_tracker'
2025-01-14T13:17:21.4087308Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker]>>
2025-01-14T13:17:21.4087314Z 
2025-01-14T13:17:21.4087410Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4087497Z         "expected,obtained",
2025-01-14T13:17:21.4087569Z         [
2025-01-14T13:17:21.4087641Z             (
2025-01-14T13:17:21.4087751Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4087861Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4087930Z             ),
2025-01-14T13:17:21.4088089Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4088310Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4088388Z         ],
2025-01-14T13:17:21.4088455Z     )
2025-01-14T13:17:21.4088626Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4088744Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4088749Z 
2025-01-14T13:17:21.4088923Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4089036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4089325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4089448Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4089737Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4089843Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4090086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4090219Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4090505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4090653Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4090892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4091111Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4091348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4091540Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4091907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4092074Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4092437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4092512Z     return (yield)
2025-01-14T13:17:21.4092805Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4092938Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4093213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4093311Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4093442Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4093523Z     sim = run_tardis(
2025-01-14T13:17:21.4093610Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4093699Z     simulation.run_convergence()
2025-01-14T13:17:21.4093823Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4093976Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4094074Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4094233Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4094347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4094352Z 
2025-01-14T13:17:21.4094620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4094827Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4095050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4095328Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4095489Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4095634Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4095704Z 
2025-01-14T13:17:21.4095796Z     def initialize_transport_state(
2025-01-14T13:17:21.4095873Z         self,
2025-01-14T13:17:21.4095951Z         simulation_state,
2025-01-14T13:17:21.4096032Z         opacity_state,
2025-01-14T13:17:21.4096109Z         macro_atom_state,
2025-01-14T13:17:21.4096183Z         plasma,
2025-01-14T13:17:21.4096255Z         no_of_packets,
2025-01-14T13:17:21.4096342Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4096422Z         iteration=0,
2025-01-14T13:17:21.4096488Z     ):
2025-01-14T13:17:21.4096619Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4096716Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4096788Z         else:
2025-01-14T13:17:21.4096867Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4096940Z     
2025-01-14T13:17:21.4097077Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4097180Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4097256Z         )
2025-01-14T13:17:21.4097327Z     
2025-01-14T13:17:21.4097460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4097580Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4097809Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4097883Z         else:
2025-01-14T13:17:21.4097965Z             continuum_state = None
2025-01-14T13:17:21.4098136Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4098251Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4098345Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4098456Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4098554Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4098653Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4098745Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4098825Z         ).to_numba(
2025-01-14T13:17:21.4098961Z             macro_atom_state,
2025-01-14T13:17:21.4099054Z             self.line_interaction_type,
2025-01-14T13:17:21.4099122Z         )
2025-01-14T13:17:21.4099227Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4099497Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4099574Z         ]
2025-01-14T13:17:21.4099876Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4099886Z 
2025-01-14T13:17:21.4100035Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4100194Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.4100630Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.4101074Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.4101263Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4101477Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.4101759Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4101835Z 	
2025-01-14T13:17:21.4101985Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:17:21.4102146Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.4102642Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.4102858Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.4102967Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.4103051Z 	Starting iteration 1 of 3
2025-01-14T13:17:21.4103395Z _ test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] _
2025-01-14T13:17:21.4103401Z 
2025-01-14T13:17:21.4103502Z expected = 'shell_id_last_interaction_class'
2025-01-14T13:17:21.4103602Z obtained = 'shell_id_rpacket_tracker'
2025-01-14T13:17:21.4103963Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker]>>
2025-01-14T13:17:21.4103976Z 
2025-01-14T13:17:21.4104064Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4104152Z         "expected,obtained",
2025-01-14T13:17:21.4104220Z         [
2025-01-14T13:17:21.4104294Z             (
2025-01-14T13:17:21.4104403Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4104512Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4104581Z             ),
2025-01-14T13:17:21.4104736Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4104857Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4104933Z         ],
2025-01-14T13:17:21.4105000Z     )
2025-01-14T13:17:21.4105168Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4105350Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4105360Z 
2025-01-14T13:17:21.4105529Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4105699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4105977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4106097Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4106392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4106498Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4106747Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4106936Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4107226Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4107331Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4107580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4107654Z     raise exc
2025-01-14T13:17:21.4107897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4107988Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4108227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4108391Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4108634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4108828Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4109073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4109238Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4109553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4109659Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4110005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4110082Z     yield
2025-01-14T13:17:21.4110400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4110570Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4110945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4111021Z     yield
2025-01-14T13:17:21.4111298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4111402Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4111858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4111931Z     yield
2025-01-14T13:17:21.4112214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4112288Z     return (yield)
2025-01-14T13:17:21.4112572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4112645Z     return (yield)
2025-01-14T13:17:21.4112921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4112993Z     raise e
2025-01-14T13:17:21.4113262Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4113411Z     item.runtest()
2025-01-14T13:17:21.4113650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4113835Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4114067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4114264Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4114505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4114674Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4114941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4115130Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4115401Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4115525Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4115796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4115916Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4116207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4116303Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4116545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4116667Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4116965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4117059Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4117308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4117475Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4117713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4117911Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4118147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4118319Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4118603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4118753Z     return (yield)
2025-01-14T13:17:21.4119039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4119183Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4119464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4119565Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4119707Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4119783Z     sim = run_tardis(
2025-01-14T13:17:21.4119878Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4119965Z     simulation.run_convergence()
2025-01-14T13:17:21.4120084Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4120229Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4120335Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4120491Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4120614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4120618Z 
2025-01-14T13:17:21.4120929Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4121141Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4121407Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4121858Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4122036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4122181Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4122186Z 
2025-01-14T13:17:21.4122283Z     def initialize_transport_state(
2025-01-14T13:17:21.4122359Z         self,
2025-01-14T13:17:21.4122517Z         simulation_state,
2025-01-14T13:17:21.4122593Z         opacity_state,
2025-01-14T13:17:21.4122677Z         macro_atom_state,
2025-01-14T13:17:21.4122749Z         plasma,
2025-01-14T13:17:21.4122831Z         no_of_packets,
2025-01-14T13:17:21.4122912Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4122990Z         iteration=0,
2025-01-14T13:17:21.4123062Z     ):
2025-01-14T13:17:21.4123189Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4123294Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4123361Z         else:
2025-01-14T13:17:21.4123443Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4123510Z     
2025-01-14T13:17:21.4123651Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4123747Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4123820Z         )
2025-01-14T13:17:21.4123886Z     
2025-01-14T13:17:21.4124023Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4124149Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4124306Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4124377Z         else:
2025-01-14T13:17:21.4124468Z             continuum_state = None
2025-01-14T13:17:21.4124568Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4124682Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4124781Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4124887Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4124991Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4125085Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4125182Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4125255Z         ).to_numba(
2025-01-14T13:17:21.4125341Z             macro_atom_state,
2025-01-14T13:17:21.4125496Z             self.line_interaction_type,
2025-01-14T13:17:21.4125574Z         )
2025-01-14T13:17:21.4125677Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4125953Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4126023Z         ]
2025-01-14T13:17:21.4126331Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4126338Z 
2025-01-14T13:17:21.4126494Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4126698Z _ test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] _
2025-01-14T13:17:21.4126703Z 
2025-01-14T13:17:21.4126870Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.4127193Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.4127201Z 
2025-01-14T13:17:21.4127295Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4127383Z         "expected,obtained",
2025-01-14T13:17:21.4127458Z         [
2025-01-14T13:17:21.4127526Z             (
2025-01-14T13:17:21.4127639Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4127813Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4127882Z             ),
2025-01-14T13:17:21.4128039Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4128214Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4128292Z         ],
2025-01-14T13:17:21.4128360Z     )
2025-01-14T13:17:21.4128528Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4128645Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4128649Z 
2025-01-14T13:17:21.4128824Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4128938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4129269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4129391Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4129684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4129788Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4130032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4130161Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4130448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4130550Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4130788Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4130870Z     raise exc
2025-01-14T13:17:21.4131107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4131208Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4131451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4131711Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4131953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4132141Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4132385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4132548Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4132867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4133041Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4133394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4133475Z     yield
2025-01-14T13:17:21.4133794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4133916Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4134288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4134363Z     yield
2025-01-14T13:17:21.4134641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4134746Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4135003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4135078Z     yield
2025-01-14T13:17:21.4135348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4135491Z     return (yield)
2025-01-14T13:17:21.4135775Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4135901Z     return (yield)
2025-01-14T13:17:21.4136179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4136248Z     raise e
2025-01-14T13:17:21.4136520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4136595Z     item.runtest()
2025-01-14T13:17:21.4136830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4136948Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4137249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4137439Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4137691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4137861Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4138128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4138222Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4138492Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4138609Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4138872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4138998Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4139284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4139387Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4139629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4139754Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4140044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4140141Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4140382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4140453Z     raise exc
2025-01-14T13:17:21.4140692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4140833Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4141068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4141226Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4141464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4141758Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4141997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4142166Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4142469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4142580Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4142928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4143005Z     yield
2025-01-14T13:17:21.4143324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4143507Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4143890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4144034Z     yield
2025-01-14T13:17:21.4144315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4144412Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4144668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4144737Z     yield
2025-01-14T13:17:21.4145022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4145153Z     return (yield)
2025-01-14T13:17:21.4145438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4145513Z     return (yield)
2025-01-14T13:17:21.4145786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4145863Z     raise e
2025-01-14T13:17:21.4146126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4146205Z     item.runtest()
2025-01-14T13:17:21.4146435Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4146551Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4146780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4146977Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4147220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4147393Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4147667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4147757Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4148035Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4148146Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4148417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4148533Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4148824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4148988Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4149233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4149361Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4149652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4149755Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4149993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4150169Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4150395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4150590Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4150832Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4150999Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4151339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4151415Z     return (yield)
2025-01-14T13:17:21.4151802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4151997Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4152277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4152369Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4152506Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4152580Z     sim = run_tardis(
2025-01-14T13:17:21.4152674Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4152818Z     simulation.run_convergence()
2025-01-14T13:17:21.4152937Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4153078Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4153182Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4153340Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4153453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4153458Z 
2025-01-14T13:17:21.4153723Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4153923Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4154150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4154418Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4154587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4154724Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4154728Z 
2025-01-14T13:17:21.4154824Z     def initialize_transport_state(
2025-01-14T13:17:21.4154898Z         self,
2025-01-14T13:17:21.4154977Z         simulation_state,
2025-01-14T13:17:21.4155057Z         opacity_state,
2025-01-14T13:17:21.4155135Z         macro_atom_state,
2025-01-14T13:17:21.4155212Z         plasma,
2025-01-14T13:17:21.4155286Z         no_of_packets,
2025-01-14T13:17:21.4155373Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4155446Z         iteration=0,
2025-01-14T13:17:21.4155522Z     ):
2025-01-14T13:17:21.4155647Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4155749Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4155819Z         else:
2025-01-14T13:17:21.4155904Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4156042Z     
2025-01-14T13:17:21.4156184Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4156277Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4156350Z         )
2025-01-14T13:17:21.4156420Z     
2025-01-14T13:17:21.4156553Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4156676Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4156830Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4156909Z         else:
2025-01-14T13:17:21.4156993Z             continuum_state = None
2025-01-14T13:17:21.4157098Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4157207Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4157307Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4157412Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4157519Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4157615Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4157719Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4157790Z         ).to_numba(
2025-01-14T13:17:21.4157937Z             macro_atom_state,
2025-01-14T13:17:21.4158032Z             self.line_interaction_type,
2025-01-14T13:17:21.4158100Z         )
2025-01-14T13:17:21.4158208Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4158528Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4158605Z         ]
2025-01-14T13:17:21.4158907Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4158912Z 
2025-01-14T13:17:21.4159063Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4159223Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-14T13:17:21.4159270Z 
2025-01-14T13:17:21.4159954Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.4160233Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f37a44387a0>
2025-01-14T13:17:21.4160581Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.4160979Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f378870b980>
2025-01-14T13:17:21.4160984Z 
2025-01-14T13:17:21.4161083Z     def test_montecarlo_main_loop_weighted(
2025-01-14T13:17:21.4161182Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.4161261Z         regression_data,
2025-01-14T13:17:21.4161349Z         atomic_dataset,
2025-01-14T13:17:21.4161442Z         simple_weighted_packet_source,
2025-01-14T13:17:21.4161518Z     ):
2025-01-14T13:17:21.4161856Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.4162048Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-14T13:17:21.4162147Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.4162234Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.4162335Z             virtual_packet_logging=False,
2025-01-14T13:17:21.4162420Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.4162496Z         )
2025-01-14T13:17:21.4162646Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-14T13:17:21.4162742Z             simple_weighted_packet_source
2025-01-14T13:17:21.4162812Z         )
2025-01-14T13:17:21.4162963Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-14T13:17:21.4163098Z >       montecarlo_main_loop_simulation_weighted.run_final()
2025-01-14T13:17:21.4163182Z 
2025-01-14T13:17:21.4163423Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:26: 
2025-01-14T13:17:21.4163543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4163645Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.4163791Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4163885Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4164043Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4164147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4164151Z 
2025-01-14T13:17:21.4164418Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3777028710>
2025-01-14T13:17:21.4164618Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3788795ac0>
2025-01-14T13:17:21.4164845Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2a91bb0>
2025-01-14T13:17:21.4165126Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a92900>
2025-01-14T13:17:21.4165285Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3781641790>
2025-01-14T13:17:21.4165494Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4165499Z 
2025-01-14T13:17:21.4165588Z     def initialize_transport_state(
2025-01-14T13:17:21.4165714Z         self,
2025-01-14T13:17:21.4165793Z         simulation_state,
2025-01-14T13:17:21.4165874Z         opacity_state,
2025-01-14T13:17:21.4165949Z         macro_atom_state,
2025-01-14T13:17:21.4166026Z         plasma,
2025-01-14T13:17:21.4166102Z         no_of_packets,
2025-01-14T13:17:21.4166191Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4166263Z         iteration=0,
2025-01-14T13:17:21.4166337Z     ):
2025-01-14T13:17:21.4166467Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4166573Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4166709Z         else:
2025-01-14T13:17:21.4166791Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4166866Z     
2025-01-14T13:17:21.4167003Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4167111Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4167180Z         )
2025-01-14T13:17:21.4167252Z     
2025-01-14T13:17:21.4167381Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4167501Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4167654Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4167728Z         else:
2025-01-14T13:17:21.4167813Z             continuum_state = None
2025-01-14T13:17:21.4167919Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4168027Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4168128Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4168237Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4168345Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4168445Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4168538Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4168618Z         ).to_numba(
2025-01-14T13:17:21.4168697Z             macro_atom_state,
2025-01-14T13:17:21.4168793Z             self.line_interaction_type,
2025-01-14T13:17:21.4168865Z         )
2025-01-14T13:17:21.4168974Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4169246Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4169326Z         ]
2025-01-14T13:17:21.4169631Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4169693Z 
2025-01-14T13:17:21.4169850Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4170012Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.4170346Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.4170798Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.4170984Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4171198Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.4171360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4171438Z 	
2025-01-14T13:17:21.4171532Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.4171739Z 	Simulation took 0.00 s
2025-01-14T13:17:21.4171850Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.4172018Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4172088Z 	
2025-01-14T13:17:21.4172248Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.4172403Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.4172930Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.4173262Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.4173428Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.4173525Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.4173604Z 	Simulation took 0.00 s
2025-01-14T13:17:21.4173608Z 
2025-01-14T13:17:21.4173714Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.4173797Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.4173913Z =============================== warnings summary ===============================
2025-01-14T13:17:21.4174030Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:17:21.4174207Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:17:21.4174517Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-14T13:17:21.4174588Z   
2025-01-14T13:17:21.4175702Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-14T13:17:21.4175711Z 
2025-01-14T13:17:21.4175944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-14T13:17:21.4176298Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-14T13:17:21.4176374Z   
2025-01-14T13:17:21.4176520Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-14T13:17:21.4176677Z   given by the platformdirs library.  To remove this warning and
2025-01-14T13:17:21.4176838Z   see the appropriate new directories, set the environment variable
2025-01-14T13:17:21.4176988Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-14T13:17:21.4177138Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-14T13:17:21.4177146Z 
2025-01-14T13:17:21.4181931Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-14T13:17:21.4182181Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-14T13:17:21.4182257Z   
2025-01-14T13:17:21.4182323Z   
2025-01-14T13:17:21.4182551Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-14T13:17:21.4182808Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-14T13:17:21.4182946Z 
2025-01-14T13:17:21.4183159Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-14T13:17:21.4183390Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4183624Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4183818Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4184130Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-14T13:17:21.4184206Z   
2025-01-14T13:17:21.4184319Z   The current CMFGEN model parser is deprecated
2025-01-14T13:17:21.4184324Z 
2025-01-14T13:17:21.4184437Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-14T13:17:21.4184609Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-14T13:17:21.4184924Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-14T13:17:21.4184998Z   
2025-01-14T13:17:21.4185109Z   The current CMFGEN model parser is deprecated
2025-01-14T13:17:21.4185113Z 
2025-01-14T13:17:21.4185302Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:17:21.4185476Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:17:21.4185767Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4185991Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4186222Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4186492Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-14T13:17:21.4186564Z   
2025-01-14T13:17:21.4186674Z   v_inner_boundary < 0, assuming default value
2025-01-14T13:17:21.4186678Z 
2025-01-14T13:17:21.4186862Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:17:21.4187049Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:17:21.4187317Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4187547Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4187719Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4187984Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-14T13:17:21.4188053Z   
2025-01-14T13:17:21.4188158Z   v_outer_boundary < 0, assuming default value
2025-01-14T13:17:21.4188162Z 
2025-01-14T13:17:21.4188609Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-14T13:17:21.4188907Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-14T13:17:21.4188977Z   
2025-01-14T13:17:21.4189246Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-14T13:17:21.4189688Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-14T13:17:21.4189757Z   
2025-01-14T13:17:21.4190280Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-14T13:17:21.4190288Z 
2025-01-14T13:17:21.4190434Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-14T13:17:21.4190719Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4190788Z   
2025-01-14T13:17:21.4190876Z   Property "atomic_mass" not found
2025-01-14T13:17:21.4190881Z 
2025-01-14T13:17:21.4191307Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-14T13:17:21.4191975Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-14T13:17:21.4192264Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4192329Z   
2025-01-14T13:17:21.4192430Z   Property "j_blues_norm_factor" not found
2025-01-14T13:17:21.4192437Z 
2025-01-14T13:17:21.4192840Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-14T13:17:21.4193201Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-14T13:17:21.4193468Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4193535Z   
2025-01-14T13:17:21.4193630Z   Property "j_blue_estimator" not found
2025-01-14T13:17:21.4193637Z 
2025-01-14T13:17:21.4194011Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-14T13:17:21.4194451Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-14T13:17:21.4194712Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4194840Z   
2025-01-14T13:17:21.4194930Z   Property "volume" not found
2025-01-14T13:17:21.4194934Z 
2025-01-14T13:17:21.4195311Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-14T13:17:21.4195644Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-14T13:17:21.4195905Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4196035Z   
2025-01-14T13:17:21.4196119Z   Property "r_inner" not found
2025-01-14T13:17:21.4196123Z 
2025-01-14T13:17:21.4196332Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-14T13:17:21.4196530Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-14T13:17:21.4196728Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-14T13:17:21.4196963Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-14T13:17:21.4197029Z   
2025-01-14T13:17:21.4197223Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-14T13:17:21.4197228Z 
2025-01-14T13:17:21.4197570Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4197908Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198240Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198573Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198904Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4199239Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4199586Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4199651Z   
2025-01-14T13:17:21.4199840Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-14T13:17:21.4200010Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4200332Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4200338Z 
2025-01-14T13:17:21.4200669Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4201008Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4201354Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4201419Z   
2025-01-14T13:17:21.4201769Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-14T13:17:21.4201982Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4202215Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4202220Z 
2025-01-14T13:17:21.4202563Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4202907Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4203047Z   
2025-01-14T13:17:21.4203228Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-14T13:17:21.4203402Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4203687Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4203691Z 
2025-01-14T13:17:21.4203895Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-14T13:17:21.4203899Z 
2025-01-14T13:17:21.4204062Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-14T13:17:21.4204186Z Coverage HTML written to dir coverage_html_report
2025-01-14T13:17:21.4204283Z Coverage XML written to file coverage.xml
2025-01-14T13:17:21.4204345Z 
2025-01-14T13:17:21.4204474Z =========================== short test summary info ============================
2025-01-14T13:17:21.4204986Z FAILED tardis/tests/test_tardis_full.py::test_run_tardis_from_config_obj - Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4205598Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4206243Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4207066Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4207827Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[shell_id_in_use-shell_id_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4208546Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[r_in_use-r_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4209306Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[nu_packet_collection-nu_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4210255Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4211052Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4211898Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4212589Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4213156Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4213784Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4214397Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4214967Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_time_explosion - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4215532Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4216144Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4216700Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4217260Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4217861Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4218466Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4219098Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4219724Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4220283Z ERROR tardis/model/tests/test_base.py::TestModelFromUniformDensity::test_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4220930Z ERROR tardis/model/tests/test_base.py::TestModelFromInitialTinner::test_initial_temperature - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4221688Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4222336Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4222968Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4223458Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_power_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4223971Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_exponential_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4224584Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[0-1.00977478e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4225185Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[10-1.98154804e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4225720Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[19-3.13361319e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4226323Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index0-539428198] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4226977Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index1-409675383] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4227566Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index2-314387928] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4228158Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index3-56066111] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4228744Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index4-42580098] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4229338Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index5-32676283] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4229930Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index6-841032262] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4230519Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index7-638732300] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4231116Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index8-490167906] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4231850Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index9-269136275] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4232447Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index10-204398856] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4233049Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index11-156857199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4233636Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index12-45482957] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4234232Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index13-34542591] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4234893Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index14-26508241] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4235536Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index15-34001569] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4236128Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index16-25822910] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4236716Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index17-19816693] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4237327Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index0-1.4471412e+31] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4237879Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index1-2.6820129e+30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4238419Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index2-1.3464444e+29] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4238987Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index0-1.67378172e-24] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4239556Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index1-9.51707707e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4240119Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index2-9.54725917e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4240740Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_atomic_mass - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4241394Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_elemental_number_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4242181Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_scalars[t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4242758Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4243288Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4243817Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_outer] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4244297Z ERROR tardis/model/tests/test_density.py::test_hdf_density_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4244766Z ERROR tardis/model/tests/test_density.py::test_hdf_time_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4245409Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4246041Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4246610Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4247187Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4247855Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4248459Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4249057Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4249656Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4250267Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4250874Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4251437Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4252066Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4252660Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4253164Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4253731Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[general_level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4254286Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4254843Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4255355Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_electrons] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4255934Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[wavelength_cm] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4256532Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4257058Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ionization_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4257610Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4258121Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[atomic_mass] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4258659Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4259197Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4259681Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4260192Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4260759Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[transition_probabilities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4261249Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[phi] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4261905Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4262460Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4262982Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[selected_atoms] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4263517Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ion_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4264062Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[partition_function] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4264569Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[abundance] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4265081Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4265615Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4266166Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4266649Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4267155Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4267706Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[j_blues] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4268227Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[metastability] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4268706Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4269237Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[excitation_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4269710Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_levels - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4270238Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[time_explosion] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4270774Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[link_t_rad_t_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4271279Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_helium_treatment - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4271961Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_atomic_data_uuid - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4272491Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4273058Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4273647Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4274237Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4274882Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4275481Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4276124Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4276737Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4277285Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4277856Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4278456Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4279026Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4279623Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_initialization - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4280233Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4280885Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4281444Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4282186Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4282723Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4283345Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4284044Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4284764Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4285442Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4286160Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4286902Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4287678Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4288361Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4289126Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4289811Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4290514Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4291187Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4291995Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4292684Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4293400Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4294083Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4294883Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4295458Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4296045Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4296630Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4297213Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4297871Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[emitted_packet_mask] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4298532Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4299140Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4299740Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4300422Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4301046Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4301757Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4302347Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4302950Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4303554Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_rs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4304166Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_mus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4304804Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4305511Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4306156Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4306811Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4307474Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4308137Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4308763Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_thomson_scatter - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4309371Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4309920Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4310533Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4311161Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet0-expected0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4311880Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet1-expected1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4312506Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet2-expected2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4313068Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1963-10015] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4313616Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4314185Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[2111963-17296] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4314745Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[10000-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4315395Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4316118Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4316768Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4317431Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4318078Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4318703Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_VPacketCollection_add_packet - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4319402Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-11-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4320108Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-1-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4320746Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-2-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4321465Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4322319Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4323017Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4323660Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132--1-199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4324333Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-0-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4324986Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-20-154] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4325594Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4326222Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_trackers_to_dataframe - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4326872Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_within_shell - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4327417Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4333753Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_bad_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4334513Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4335182Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4336017Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4336799Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4337534Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4338339Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4339053Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4339770Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4340488Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4341194Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4342052Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4342766Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4343470Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4344258Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4344979Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4345689Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4346414Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4347184Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4347944Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4348662Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4349431Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4350138Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4350854Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4351741Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4352499Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4353218Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4353940Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4354709Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4355388Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4356067Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4356739Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4357416Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4358153Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4358874Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4359550Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4360258Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4360907Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4361683Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4362393Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4363042Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4363697Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4364344Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4364994Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4365741Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4366415Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4367090Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4367759Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4368434Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4369171Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4369902Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4370582Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4371309Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_with_theta_init - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4372237Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4372963Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4373651Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4374286Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4374925Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4375554Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4376187Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4376919Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4377546Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4378172Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4378792Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4379414Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4380102Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4380775Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4381401Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[50] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4382230Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4382869Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4383512Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4384143Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4384782Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4385422Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4386086Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4386734Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4387449Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4388176Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4388909Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4389633Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4390361Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4391141Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4392013Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4392743Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4393527Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4394253Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4394989Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4395722Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4396450Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4397182Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4397905Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4398693Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4399423Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4400105Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4400789Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4401473Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4402444Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4403129Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4403816Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4404561Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4405249Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4405924Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4406605Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4407296Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4407975Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4408656Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4409402Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4410086Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4410772Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4411427Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4412191Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4412912Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4413627Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4414289Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4415023Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4415680Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4416340Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4416990Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4417653Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4418323Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4418977Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4419640Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4420360Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4421018Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4421764Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4422543Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4423304Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4424179Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4424899Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4425659Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4426470Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4427218Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4427928Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4428696Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4429450Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4430210Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4430983Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4431929Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4432692Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4433444Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4434158Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4434935Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4435698Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4436411Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4437226Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4437933Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4438641Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4439350Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4440049Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4440757Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4441462Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4442469Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4443188Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4443892Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4444616Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4445292Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4446035Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4446760Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4447470Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4448201Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4448866Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4449529Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4450139Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4450774Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4451406Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4452114Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4452730Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4453429Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4454065Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4454703Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4455359Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4456016Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4456711Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4457426Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4458073Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4458787Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4459399Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4460021Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4460648Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4461265Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4461966Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4462593Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4463212Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4463936Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_shells_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4464621Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_element_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4465277Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_ion_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4465573Z = 11 failed, 1052 passed, 329 skipped, 2 deselected, 23 xfailed, 4 xpassed, 69 warnings, 375 errors in 528.20s (0:08:48) =
2025-01-14T13:17:22.8604933Z ##[error]Process completed with exit code 1.
