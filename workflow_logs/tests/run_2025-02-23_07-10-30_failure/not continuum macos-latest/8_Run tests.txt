2025-02-25T14:08:16.0130230Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-25T14:08:16.0131350Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-25T14:08:16.0222440Z shell: /bin/bash -l {0}
2025-02-25T14:08:16.0222760Z env:
2025-02-25T14:08:16.0222970Z   CACHE_NUMBER: 0
2025-02-25T14:08:16.0223610Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:08:16.0224340Z   CODECOV_TOKEN: 
2025-02-25T14:08:16.0224640Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-25T14:08:16.0225010Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-25T14:08:16.0225360Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:08:16.0225840Z ##[endgroup]
2025-02-25T14:08:36.0954540Z ============================= test session starts ==============================
2025-02-25T14:08:36.0955910Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-25T14:08:36.0956390Z rootdir: /Users/runner/work/tardis/tardis
2025-02-25T14:08:36.0956770Z configfile: pyproject.toml
2025-02-25T14:08:36.0957190Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-02-25T14:08:36.0957630Z collected 1796 items / 2 deselected / 1794 selected
2025-02-25T14:08:36.0957880Z 
2025-02-25T14:08:41.1307200Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-25T14:08:44.1551790Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-25T14:08:46.0996940Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-25T14:08:48.0782140Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-25T14:08:48.1073750Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-25T14:08:49.6104870Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-25T14:08:50.0334090Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-25T14:08:50.0402820Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-25T14:08:54.8650870Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-25T14:08:54.8753600Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-25T14:08:54.9295740Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-25T14:09:32.7242970Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-25T14:09:32.7940660Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-25T14:09:32.8129130Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-25T14:09:32.8459830Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-25T14:09:32.8695190Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-25T14:09:33.1851820Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-25T14:09:33.8171070Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-25T14:09:33.8384460Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-25T14:09:34.0565160Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-25T14:09:34.0627060Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-25T14:10:10.9476250Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-25T14:10:11.8904700Z ............                                                             [ 10%]
2025-02-25T14:10:15.0721790Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-25T14:10:15.1260800Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-25T14:10:17.0873050Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-25T14:10:18.8692500Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-25T14:10:21.5210030Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-25T14:10:24.8254270Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-25T14:11:14.2316340Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-25T14:11:26.3751130Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-25T14:11:28.1470190Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-25T14:11:34.2485900Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-25T14:11:37.3846900Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-25T14:11:40.6988180Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-25T14:11:44.4867680Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-25T14:11:46.0267350Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-25T14:11:51.6752840Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-25T14:11:57.5580160Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-25T14:12:02.9570430Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-25T14:12:06.5582170Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-25T14:12:11.1155610Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-25T14:12:15.4649220Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-25T14:12:16.4850690Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-25T14:12:17.2896790Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-25T14:12:17.3328140Z ......                                                                   [ 62%]
2025-02-25T14:12:17.9320400Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-25T14:14:55.0318780Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-25T14:14:55.0394150Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-25T14:15:18.0922020Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-25T14:15:29.4210550Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-25T14:15:30.0785450Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-25T14:15:40.9840650Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-25T14:15:41.0264340Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-25T14:15:41.5130200Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-25T14:15:41.5215590Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-25T14:15:42.9617010Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-25T14:15:42.9896570Z ..........                                                               [ 69%]
2025-02-25T14:15:43.2402740Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-25T14:15:43.2657650Z .........                                                                [ 72%]
2025-02-25T14:16:06.7846880Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-25T14:17:14.7364260Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-25T14:18:57.9120860Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-25T14:18:57.9681410Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-25T14:19:00.1431660Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-25T14:19:05.0230640Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-25T14:19:05.1681910Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-25T14:19:05.1786270Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-25T14:19:05.2130800Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-25T14:19:13.2075940Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-25T14:19:13.2154530Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-25T14:19:17.6693310Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-25T14:19:18.1069290Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-25T14:19:19.0672180Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-25T14:19:19.1731790Z XX.........                                                              [ 84%]
2025-02-25T14:19:19.2018750Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-25T14:19:19.4511350Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-25T14:19:19.8053590Z .....                                                                    [ 85%]
2025-02-25T14:19:32.3606030Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-25T14:19:32.3920050Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-25T14:19:32.3960170Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-25T14:19:33.8620590Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-25T14:19:33.8804940Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-25T14:19:37.3378180Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-25T14:19:37.3378850Z                                                                          [ 86%]
2025-02-25T14:19:38.0328460Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-25T14:19:40.6002230Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-25T14:19:42.3375560Z ......                                                                   [ 88%]
2025-02-25T14:19:46.8953280Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-25T14:19:52.1767560Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-25T14:19:55.5664280Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-25T14:20:04.7421480Z ....                                                                     [ 92%]
2025-02-25T14:20:10.6660980Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-25T14:20:18.9427310Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-25T14:20:19.3257670Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-25T14:20:19.3884380Z ....                                                                     [ 96%]
2025-02-25T14:20:20.4284360Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-25T14:20:21.3079270Z ..................                                                       [ 98%]
2025-02-25T14:23:35.3996570Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-25T14:23:42.8533070Z ......                                                                   [100%]
2025-02-25T14:23:42.8533660Z 
2025-02-25T14:23:42.8534040Z =================================== FAILURES ===================================
2025-02-25T14:23:42.8534530Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-25T14:23:42.8534880Z 
2025-02-25T14:23:42.8535210Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-25T14:23:42.8535660Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-25T14:23:42.8549490Z 
2025-02-25T14:23:42.8556080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8556480Z         if err_msg is None:
2025-02-25T14:23:42.8556810Z             if left.shape != right.shape:
2025-02-25T14:23:42.8557040Z                 raise_assert_detail(
2025-02-25T14:23:42.8557330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8557580Z                 )
2025-02-25T14:23:42.8557740Z     
2025-02-25T14:23:42.8591980Z             diff = 0
2025-02-25T14:23:42.8592430Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8592820Z                 # count up differences
2025-02-25T14:23:42.8593250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8593600Z                     diff += 1
2025-02-25T14:23:42.8593990Z     
2025-02-25T14:23:42.8594390Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8594840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8595350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8595850Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.8596150Z E           
2025-02-25T14:23:42.8596420Z E           numpy array values are different (0.09581 %)
2025-02-25T14:23:42.8597010Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:23:42.8597870Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:23:42.8598350Z 
2025-02-25T14:23:42.8598660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8599080Z 
2025-02-25T14:23:42.8599250Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.8599520Z 
2025-02-25T14:23:42.8599800Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x141b3a240>
2025-02-25T14:23:42.8600330Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x141b3bec0>
2025-02-25T14:23:42.8600670Z 
2025-02-25T14:23:42.8600760Z     def test_calculate_sobolev_line_opacity(
2025-02-25T14:23:42.8603630Z         nb_simulation_verysimple, regression_data
2025-02-25T14:23:42.8603980Z     ):
2025-02-25T14:23:42.8604250Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:23:42.8604540Z     
2025-02-25T14:23:42.8604780Z         actual = calculate_sobolev_line_opacity(
2025-02-25T14:23:42.8605040Z             legacy_plasma.lines,
2025-02-25T14:23:42.8605350Z             legacy_plasma.level_number_density,
2025-02-25T14:23:42.8619200Z             legacy_plasma.time_explosion,
2025-02-25T14:23:42.8619910Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:23:42.8620600Z         )
2025-02-25T14:23:42.8621250Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:42.8622090Z >       pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.8622520Z 
2025-02-25T14:23:42.8622780Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-25T14:23:42.8623540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8624310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.8625420Z     ???
2025-02-25T14:23:42.8625880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8626590Z 
2025-02-25T14:23:42.8626820Z >   ???
2025-02-25T14:23:42.8627310Z E   AssertionError: MultiIndex level [0] are different
2025-02-25T14:23:42.8627920Z E   
2025-02-25T14:23:42.8628400Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:23:42.8629120Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:23:42.8629830Z E          ...
2025-02-25T14:23:42.8630250Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:23:42.8630960Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:23:42.8631970Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:23:42.8632620Z E          ...
2025-02-25T14:23:42.8633060Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:23:42.8633830Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:23:42.8634630Z E   At positional index 54, first diff: 14 != 12
2025-02-25T14:23:42.8635070Z 
2025-02-25T14:23:42.8635270Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.8635970Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:42.8642380Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:42.8643960Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:42.8645600Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:23:42.8646260Z 
2025-02-25T14:23:42.8647130Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:14<00:03,  3.30s/it]
2025-02-25T14:23:42.8647720Z 
2025-02-25T14:23:42.8648270Z Packets:                                                                                   4030/? [00:14<00:00, 34629.62it/s][A
2025-02-25T14:23:42.8649280Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:42.8651020Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:42.8652850Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-25T14:23:42.8653480Z 
2025-02-25T14:23:42.8654050Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x141b3a240>
2025-02-25T14:23:42.8655400Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x141b38890>
2025-02-25T14:23:42.8656270Z 
2025-02-25T14:23:42.8656770Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-25T14:23:42.8657800Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:23:42.8658470Z     
2025-02-25T14:23:42.8659050Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-25T14:23:42.8659750Z             legacy_plasma.lines,
2025-02-25T14:23:42.8660460Z             legacy_plasma.level_number_density,
2025-02-25T14:23:42.8661130Z             legacy_plasma.time_explosion,
2025-02-25T14:23:42.8661910Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:23:42.8663730Z         )
2025-02-25T14:23:42.8664350Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-25T14:23:42.8665210Z         expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:42.8665970Z >       npt.assert_allclose(actual, expected)
2025-02-25T14:23:42.8666430Z 
2025-02-25T14:23:42.8666670Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-25T14:23:42.8667480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8667990Z 
2025-02-25T14:23:42.8668550Z args = (<function assert_allclose.<locals>.compare at 0x31082d800>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8669660Z        [1., 1., 1.,.....,
2025-02-25T14:23:42.8671230Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8671830Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8672830Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:23:42.8673260Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:42.8673620Z 
2025-02-25T14:23:42.8673730Z     @wraps(func)
2025-02-25T14:23:42.8673950Z     def inner(*args, **kwds):
2025-02-25T14:23:42.8674190Z         with self._recreate_cm():
2025-02-25T14:23:42.8674380Z >           return func(*args, **kwds)
2025-02-25T14:23:42.8674690Z E           AssertionError: 
2025-02-25T14:23:42.8674960Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:42.8675270Z E           
2025-02-25T14:23:42.8675480Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:23:42.8675820Z E           Max absolute difference: 0.99984222
2025-02-25T14:23:42.8676110Z E           Max relative difference: 6337.12154973
2025-02-25T14:23:42.8676400Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8676670Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8676980Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:42.8677230Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8677450Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:42.8677660Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:42.8677800Z 
2025-02-25T14:23:42.8677970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:42.8678370Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-25T14:23:42.8678600Z 
2025-02-25T14:23:42.8678780Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-25T14:23:42.8679690Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x163425fa0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x3049aa0f0>, 'electron')]
2025-02-25T14:23:42.8680590Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x11dc523c0>
2025-02-25T14:23:42.8681070Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x16343f830>
2025-02-25T14:23:42.8681350Z 
2025-02-25T14:23:42.8681420Z     def test_rate_matrix_solver(
2025-02-25T14:23:42.8681610Z         new_chianti_atomic_dataset_si,
2025-02-25T14:23:42.8681880Z         rate_solver_list,
2025-02-25T14:23:42.8682060Z         collisional_simulation_state,
2025-02-25T14:23:42.8682250Z         regression_data,
2025-02-25T14:23:42.8682400Z     ):
2025-02-25T14:23:42.8682540Z         rate_matrix_solver = RateMatrix(
2025-02-25T14:23:42.8682900Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-25T14:23:42.8683180Z         )
2025-02-25T14:23:42.8683340Z     
2025-02-25T14:23:42.8683560Z         rad_field = DilutePlanckianRadiationField(
2025-02-25T14:23:42.8683900Z             collisional_simulation_state.t_radiative,
2025-02-25T14:23:42.8684250Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-25T14:23:42.8684620Z         )
2025-02-25T14:23:42.8684860Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-25T14:23:42.8685670Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-25T14:23:42.8685960Z         )
2025-02-25T14:23:42.8686160Z     
2025-02-25T14:23:42.8686380Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-25T14:23:42.8686670Z     
2025-02-25T14:23:42.8686890Z >       expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:42.8687100Z 
2025-02-25T14:23:42.8687270Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-25T14:23:42.8687550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8688130Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-25T14:23:42.8688410Z     return pd.read_hdf(self.fpath, key=key)
2025-02-25T14:23:42.8688770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-25T14:23:42.8689110Z     return store.select(
2025-02-25T14:23:42.8689480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-25T14:23:42.8689860Z     return it.get_result()
2025-02-25T14:23:42.8690190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-25T14:23:42.8690580Z     results = self.func(self.start, self.stop, where)
2025-02-25T14:23:42.8690950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-25T14:23:42.8691400Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-25T14:23:42.8691880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-25T14:23:42.8692290Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-25T14:23:42.8692720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-25T14:23:42.8693060Z     ret = node[0][start:stop]
2025-02-25T14:23:42.8693450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-25T14:23:42.8693800Z     return self.read(start, stop, step)[0]
2025-02-25T14:23:42.8694180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-25T14:23:42.8694550Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-25T14:23:42.8694830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8695050Z 
2025-02-25T14:23:42.8695100Z self = ObjectAtom()
2025-02-25T14:23:42.8695420Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-25T14:23:42.8695610Z 
2025-02-25T14:23:42.8695680Z     def fromarray(self, array):
2025-02-25T14:23:42.8696010Z         # We have to check for an empty array because of a possible
2025-02-25T14:23:42.8696340Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-25T14:23:42.8696710Z         # record when in fact it is empty.
2025-02-25T14:23:42.8697040Z         if array.size == 0:
2025-02-25T14:23:42.8697260Z             return None
2025-02-25T14:23:42.8697560Z >       return pickle.loads(array.tobytes())
2025-02-25T14:23:42.8697930Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:23:42.8698180Z 
2025-02-25T14:23:42.8698540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-25T14:23:42.8699050Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:42.8699600Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:42.8700200Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:42.8700700Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:42.8701300Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:42.8702230Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-25T14:23:42.8702470Z 
2025-02-25T14:23:42.8702650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8702960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8703220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8703490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8703950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8704220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8704550Z err_msg = None
2025-02-25T14:23:42.8704650Z 
2025-02-25T14:23:42.8704740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8704960Z         if err_msg is None:
2025-02-25T14:23:42.8705150Z             if left.shape != right.shape:
2025-02-25T14:23:42.8705400Z                 raise_assert_detail(
2025-02-25T14:23:42.8705670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8705910Z                 )
2025-02-25T14:23:42.8706050Z     
2025-02-25T14:23:42.8706170Z             diff = 0
2025-02-25T14:23:42.8706420Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8706770Z                 # count up differences
2025-02-25T14:23:42.8707180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8707510Z                     diff += 1
2025-02-25T14:23:42.8707850Z     
2025-02-25T14:23:42.8708040Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8708430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8708830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8709220Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.8709480Z E           
2025-02-25T14:23:42.8709730Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.8710170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8710750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8711090Z 
2025-02-25T14:23:42.8711390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8711700Z 
2025-02-25T14:23:42.8711880Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.8712090Z 
2025-02-25T14:23:42.8712270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98f650>
2025-02-25T14:23:42.8712680Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>, attr = 'lines'
2025-02-25T14:23:42.8712910Z 
2025-02-25T14:23:42.8713020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8713300Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8713520Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8713680Z         try:
2025-02-25T14:23:42.8713870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8714410Z         except KeyError:
2025-02-25T14:23:42.8714630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8714860Z     
2025-02-25T14:23:42.8715000Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8715190Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8715400Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8715680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8715930Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8716120Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8716350Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8716680Z             else:
2025-02-25T14:23:42.8716880Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.8717120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.8717270Z 
2025-02-25T14:23:42.8717370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.8717800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8718160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.8718400Z     ???
2025-02-25T14:23:42.8718570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8718730Z 
2025-02-25T14:23:42.8718790Z >   ???
2025-02-25T14:23:42.8718960Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.8719180Z E   
2025-02-25T14:23:42.8719350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.8719610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8719830Z E          ...
2025-02-25T14:23:42.8719980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8720220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8720490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8720700Z E          ...
2025-02-25T14:23:42.8720850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8721100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8721360Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.8721510Z 
2025-02-25T14:23:42.8721580Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.8721880Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-25T14:23:42.8722200Z 
2025-02-25T14:23:42.8731740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98f530>
2025-02-25T14:23:42.8732200Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>
2025-02-25T14:23:42.8732480Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.8732610Z 
2025-02-25T14:23:42.8732720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8733000Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8733230Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8733410Z         try:
2025-02-25T14:23:42.8733620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8733870Z         except KeyError:
2025-02-25T14:23:42.8734100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8734330Z     
2025-02-25T14:23:42.8734460Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8734660Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8734880Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8735130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8735390Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8735590Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8735830Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8735990Z 
2025-02-25T14:23:42.8736090Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.8736360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8736950Z 
2025-02-25T14:23:42.8737070Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.8737330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.8737570Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8737800Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.8738050Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.8738320Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.8738540Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8739030Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.8739480Z err_msg = None
2025-02-25T14:23:42.8739570Z 
2025-02-25T14:23:42.8739660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8739870Z         if err_msg is None:
2025-02-25T14:23:42.8740050Z             if left.shape != right.shape:
2025-02-25T14:23:42.8740260Z                 raise_assert_detail(
2025-02-25T14:23:42.8740500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8740740Z                 )
2025-02-25T14:23:42.8740870Z     
2025-02-25T14:23:42.8740990Z             diff = 0
2025-02-25T14:23:42.8741170Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8741390Z                 # count up differences
2025-02-25T14:23:42.8741660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8741930Z                     diff += 1
2025-02-25T14:23:42.8742100Z     
2025-02-25T14:23:42.8742240Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8742490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8742820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8743120Z E           AssertionError: Series are different
2025-02-25T14:23:42.8743320Z E           
2025-02-25T14:23:42.8743480Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.8743940Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.8744600Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8745230Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8745580Z 
2025-02-25T14:23:42.8745840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8746330Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-25T14:23:42.8746590Z 
2025-02-25T14:23:42.8746760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98de20>
2025-02-25T14:23:42.8747140Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>
2025-02-25T14:23:42.8747410Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.8747670Z 
2025-02-25T14:23:42.8747790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8748080Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8748310Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8748480Z         try:
2025-02-25T14:23:42.8748690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8748940Z         except KeyError:
2025-02-25T14:23:42.8749170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8749400Z     
2025-02-25T14:23:42.8749540Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8749750Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8750020Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8750280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8750530Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8750730Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8750970Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8751130Z 
2025-02-25T14:23:42.8751230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.8751510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8751700Z 
2025-02-25T14:23:42.8751810Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.8752080Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.8752310Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.8752540Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.8752790Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.8753060Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.8753280Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.8753510Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.8753700Z err_msg = None
2025-02-25T14:23:42.8753790Z 
2025-02-25T14:23:42.8753870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8754090Z         if err_msg is None:
2025-02-25T14:23:42.8754270Z             if left.shape != right.shape:
2025-02-25T14:23:42.8754470Z                 raise_assert_detail(
2025-02-25T14:23:42.8754720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8754960Z                 )
2025-02-25T14:23:42.8755090Z     
2025-02-25T14:23:42.8755210Z             diff = 0
2025-02-25T14:23:42.8755390Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8755630Z                 # count up differences
2025-02-25T14:23:42.8755900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8756170Z                     diff += 1
2025-02-25T14:23:42.8756330Z     
2025-02-25T14:23:42.8756460Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8756720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8757040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8757330Z E           AssertionError: Series are different
2025-02-25T14:23:42.8757530Z E           
2025-02-25T14:23:42.8757680Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.8758240Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.8758930Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.8759800Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.8760260Z 
2025-02-25T14:23:42.8760510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8760990Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-25T14:23:42.8761230Z 
2025-02-25T14:23:42.8761340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8761630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8761900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8762160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8762460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8762710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8762920Z err_msg = None
2025-02-25T14:23:42.8763000Z 
2025-02-25T14:23:42.8763090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8763300Z         if err_msg is None:
2025-02-25T14:23:42.8763480Z             if left.shape != right.shape:
2025-02-25T14:23:42.8763680Z                 raise_assert_detail(
2025-02-25T14:23:42.8763930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8764170Z                 )
2025-02-25T14:23:42.8764300Z     
2025-02-25T14:23:42.8764420Z             diff = 0
2025-02-25T14:23:42.8764600Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8764830Z                 # count up differences
2025-02-25T14:23:42.8765100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8765370Z                     diff += 1
2025-02-25T14:23:42.8765540Z     
2025-02-25T14:23:42.8765680Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8765940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8766260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8766570Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.8766780Z E           
2025-02-25T14:23:42.8766950Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.8767320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8767810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8768100Z 
2025-02-25T14:23:42.8768350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8768660Z 
2025-02-25T14:23:42.8768940Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.8769140Z 
2025-02-25T14:23:42.8769320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98d4c0>
2025-02-25T14:23:42.8769730Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>, attr = 'nu'
2025-02-25T14:23:42.8769950Z 
2025-02-25T14:23:42.8770070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8770340Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8770570Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8770730Z         try:
2025-02-25T14:23:42.8770920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8771230Z         except KeyError:
2025-02-25T14:23:42.8771450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8771680Z     
2025-02-25T14:23:42.8771810Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8772010Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8772210Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8772460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8772710Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8772910Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8773140Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8773290Z 
2025-02-25T14:23:42.8773400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.8773670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8773960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.8774200Z     ???
2025-02-25T14:23:42.8774370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8774530Z 
2025-02-25T14:23:42.8774580Z >   ???
2025-02-25T14:23:42.8774760Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.8774980Z E   
2025-02-25T14:23:42.8775150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.8775420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8775630Z E          ...
2025-02-25T14:23:42.8775780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8776030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8776310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8776520Z E          ...
2025-02-25T14:23:42.8776680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8776920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8777180Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.8777330Z 
2025-02-25T14:23:42.8777400Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.8777680Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-25T14:23:42.8777920Z 
2025-02-25T14:23:42.8778030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8778320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8778580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8778830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8779130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8779390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8779590Z err_msg = None
2025-02-25T14:23:42.8779670Z 
2025-02-25T14:23:42.8779760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8779970Z         if err_msg is None:
2025-02-25T14:23:42.8780150Z             if left.shape != right.shape:
2025-02-25T14:23:42.8780350Z                 raise_assert_detail(
2025-02-25T14:23:42.8780800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8781030Z                 )
2025-02-25T14:23:42.8781180Z     
2025-02-25T14:23:42.8781300Z             diff = 0
2025-02-25T14:23:42.8781490Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8781720Z                 # count up differences
2025-02-25T14:23:42.8781990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8782320Z                     diff += 1
2025-02-25T14:23:42.8782510Z     
2025-02-25T14:23:42.8782640Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8783110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8783440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8783740Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.8783950Z E           
2025-02-25T14:23:42.8784130Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.8784540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8785080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8785380Z 
2025-02-25T14:23:42.8785620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8785940Z 
2025-02-25T14:23:42.8786080Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.8786290Z 
2025-02-25T14:23:42.8786460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98d220>
2025-02-25T14:23:42.8786830Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>
2025-02-25T14:23:42.8787090Z attr = 'wavelength_cm'
2025-02-25T14:23:42.8787190Z 
2025-02-25T14:23:42.8787300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8787570Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8787790Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8787960Z         try:
2025-02-25T14:23:42.8788160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8788410Z         except KeyError:
2025-02-25T14:23:42.8788630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8788860Z     
2025-02-25T14:23:42.8788990Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8789190Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8789400Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8789640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8789890Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8790080Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8790310Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8790460Z 
2025-02-25T14:23:42.8790560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.8790820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8791100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.8791350Z     ???
2025-02-25T14:23:42.8791610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8791780Z 
2025-02-25T14:23:42.8791850Z >   ???
2025-02-25T14:23:42.8792120Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.8792620Z E   
2025-02-25T14:23:42.8792820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.8793130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8793350Z E          ...
2025-02-25T14:23:42.8793540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8793810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8794110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8794350Z E          ...
2025-02-25T14:23:42.8794540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8794810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8805190Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.8805390Z 
2025-02-25T14:23:42.8805470Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.8805780Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-25T14:23:42.8806040Z 
2025-02-25T14:23:42.8806160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8806470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8806730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8807010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8807310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8807570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8807790Z err_msg = None
2025-02-25T14:23:42.8807890Z 
2025-02-25T14:23:42.8808000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8808230Z         if err_msg is None:
2025-02-25T14:23:42.8808450Z             if left.shape != right.shape:
2025-02-25T14:23:42.8808660Z                 raise_assert_detail(
2025-02-25T14:23:42.8808930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8809180Z                 )
2025-02-25T14:23:42.8809320Z     
2025-02-25T14:23:42.8809450Z             diff = 0
2025-02-25T14:23:42.8809650Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8809910Z                 # count up differences
2025-02-25T14:23:42.8810210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8810500Z                     diff += 1
2025-02-25T14:23:42.8810670Z     
2025-02-25T14:23:42.8810840Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.8811120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.8811490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.8811810Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.8812030Z E           
2025-02-25T14:23:42.8812210Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.8812610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8813160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.8813470Z 
2025-02-25T14:23:42.8813740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.8814070Z 
2025-02-25T14:23:42.8814820Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.8815060Z 
2025-02-25T14:23:42.8815250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98d670>
2025-02-25T14:23:42.8815690Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>, attr = 'f_lu'
2025-02-25T14:23:42.8815940Z 
2025-02-25T14:23:42.8816060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.8816340Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.8816580Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.8816760Z         try:
2025-02-25T14:23:42.8816960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.8831560Z         except KeyError:
2025-02-25T14:23:42.8831820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.8969410Z     
2025-02-25T14:23:42.8970170Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.8970740Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.8971340Z             if attr == "selected_atoms":
2025-02-25T14:23:42.8972000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.8972670Z             elif actual.ndim == 1:
2025-02-25T14:23:42.8973200Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.8973810Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.8974260Z 
2025-02-25T14:23:42.8974530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.8975220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8976000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.8976670Z     ???
2025-02-25T14:23:42.8977130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.8977570Z 
2025-02-25T14:23:42.8977730Z >   ???
2025-02-25T14:23:42.8978200Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.8978820Z E   
2025-02-25T14:23:42.8979300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.8980030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8980640Z E          ...
2025-02-25T14:23:42.8981070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8981750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8982490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.8983110Z E          ...
2025-02-25T14:23:42.8983560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.8984250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.8984990Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.8985430Z 
2025-02-25T14:23:42.8985630Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.8986450Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-25T14:23:42.8987140Z 
2025-02-25T14:23:42.8987430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8988240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8988970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8989720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.8990520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.8991220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.8991780Z err_msg = None
2025-02-25T14:23:42.8992030Z 
2025-02-25T14:23:42.8992280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.8992890Z         if err_msg is None:
2025-02-25T14:23:42.8993390Z             if left.shape != right.shape:
2025-02-25T14:23:42.8993950Z                 raise_assert_detail(
2025-02-25T14:23:42.8995630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.8996320Z                 )
2025-02-25T14:23:42.8996720Z     
2025-02-25T14:23:42.8997100Z             diff = 0
2025-02-25T14:23:42.8997610Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.8998260Z                 # count up differences
2025-02-25T14:23:42.8999050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.8999800Z                     diff += 1
2025-02-25T14:23:42.9000270Z     
2025-02-25T14:23:42.9000660Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9001570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9002420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9003240Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9003820Z E           
2025-02-25T14:23:42.9004330Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9005370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9006780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9007620Z 
2025-02-25T14:23:42.9008300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9009190Z 
2025-02-25T14:23:42.9009690Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9010270Z 
2025-02-25T14:23:42.9010760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98e810>
2025-02-25T14:23:42.9011780Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>
2025-02-25T14:23:42.9012490Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9012780Z 
2025-02-25T14:23:42.9013090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9013850Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9014490Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9015030Z         try:
2025-02-25T14:23:42.9015600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9016330Z         except KeyError:
2025-02-25T14:23:42.9016950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9017630Z     
2025-02-25T14:23:42.9018020Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9018590Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9019180Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9019860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9020550Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9021110Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9021760Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9022370Z             else:
2025-02-25T14:23:42.9022820Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9023450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9023880Z 
2025-02-25T14:23:42.9024150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9024870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9025620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9026300Z     ???
2025-02-25T14:23:42.9026740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9027790Z 
2025-02-25T14:23:42.9027950Z >   ???
2025-02-25T14:23:42.9028430Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9029060Z E   
2025-02-25T14:23:42.9029540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9030250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9030840Z E          ...
2025-02-25T14:23:42.9031260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9031940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9032650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9033540Z E          ...
2025-02-25T14:23:42.9033970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9034620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9035320Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9035740Z 
2025-02-25T14:23:42.9035930Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9036700Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-25T14:23:42.9037350Z 
2025-02-25T14:23:42.9037630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9038520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9039260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9039580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9039900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9040170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9040370Z err_msg = None
2025-02-25T14:23:42.9040450Z 
2025-02-25T14:23:42.9040550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9040780Z         if err_msg is None:
2025-02-25T14:23:42.9040970Z             if left.shape != right.shape:
2025-02-25T14:23:42.9041180Z                 raise_assert_detail(
2025-02-25T14:23:42.9041430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9041660Z                 )
2025-02-25T14:23:42.9041800Z     
2025-02-25T14:23:42.9041920Z             diff = 0
2025-02-25T14:23:42.9042100Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9042330Z                 # count up differences
2025-02-25T14:23:42.9042610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9042890Z                     diff += 1
2025-02-25T14:23:42.9043050Z     
2025-02-25T14:23:42.9043190Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9043440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9043790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9044110Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9044330Z E           
2025-02-25T14:23:42.9044510Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9044890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9045420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9046050Z 
2025-02-25T14:23:42.9046320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9046640Z 
2025-02-25T14:23:42.9046790Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9047010Z 
2025-02-25T14:23:42.9047190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98e7b0>
2025-02-25T14:23:42.9047580Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>
2025-02-25T14:23:42.9048000Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9048110Z 
2025-02-25T14:23:42.9048230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9048690Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9048930Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9049110Z         try:
2025-02-25T14:23:42.9049310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9049630Z         except KeyError:
2025-02-25T14:23:42.9049870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9050100Z     
2025-02-25T14:23:42.9050230Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9050430Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9050640Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9050890Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9051140Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9051340Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9051580Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9051790Z             else:
2025-02-25T14:23:42.9051960Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9052200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9052360Z 
2025-02-25T14:23:42.9052470Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9052740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9053040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9053290Z     ???
2025-02-25T14:23:42.9053460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9053630Z 
2025-02-25T14:23:42.9053680Z >   ???
2025-02-25T14:23:42.9053860Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9054100Z E   
2025-02-25T14:23:42.9054270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9054550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9054760Z E          ...
2025-02-25T14:23:42.9054930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9055190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9055470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9055680Z E          ...
2025-02-25T14:23:42.9055830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9056090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9056360Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9056510Z 
2025-02-25T14:23:42.9056590Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9056890Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-25T14:23:42.9057130Z 
2025-02-25T14:23:42.9057240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9057540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9057820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9058090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9058390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9058830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9059040Z err_msg = None
2025-02-25T14:23:42.9059130Z 
2025-02-25T14:23:42.9059220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9059660Z         if err_msg is None:
2025-02-25T14:23:42.9059870Z             if left.shape != right.shape:
2025-02-25T14:23:42.9060110Z                 raise_assert_detail(
2025-02-25T14:23:42.9060380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9072100Z                 )
2025-02-25T14:23:42.9072280Z     
2025-02-25T14:23:42.9072400Z             diff = 0
2025-02-25T14:23:42.9072970Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9073210Z                 # count up differences
2025-02-25T14:23:42.9073490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9073780Z                     diff += 1
2025-02-25T14:23:42.9073980Z     
2025-02-25T14:23:42.9074120Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9074380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9074710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9075030Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9075260Z E           
2025-02-25T14:23:42.9075450Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9075840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9076380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9076670Z 
2025-02-25T14:23:42.9076930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9077260Z 
2025-02-25T14:23:42.9077390Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9077610Z 
2025-02-25T14:23:42.9077790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98d280>
2025-02-25T14:23:42.9078210Z plasma = <tardis.plasma.base.BasePlasma object at 0x305936b10>, attr = 'j_blues'
2025-02-25T14:23:42.9078450Z 
2025-02-25T14:23:42.9078570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9078840Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9079060Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9079230Z         try:
2025-02-25T14:23:42.9079430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9079670Z         except KeyError:
2025-02-25T14:23:42.9079900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9080120Z     
2025-02-25T14:23:42.9080260Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9080450Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9080650Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9080890Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9081140Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9081340Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9081570Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9081770Z             else:
2025-02-25T14:23:42.9081930Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9082160Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9082490Z 
2025-02-25T14:23:42.9082590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9082860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9083140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9083380Z     ???
2025-02-25T14:23:42.9083550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9083710Z 
2025-02-25T14:23:42.9083760Z >   ???
2025-02-25T14:23:42.9083930Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9084150Z E   
2025-02-25T14:23:42.9084410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9084680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9084900Z E          ...
2025-02-25T14:23:42.9085050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9085300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9085570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9085790Z E          ...
2025-02-25T14:23:42.9085940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9086190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9086440Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9086590Z 
2025-02-25T14:23:42.9086660Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9086940Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-25T14:23:42.9087160Z 
2025-02-25T14:23:42.9087270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9087560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9087820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9088080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9088360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9088670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9088870Z err_msg = None
2025-02-25T14:23:42.9088950Z 
2025-02-25T14:23:42.9089040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9089250Z         if err_msg is None:
2025-02-25T14:23:42.9089580Z             if left.shape != right.shape:
2025-02-25T14:23:42.9089810Z                 raise_assert_detail(
2025-02-25T14:23:42.9090060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9090300Z                 )
2025-02-25T14:23:42.9090430Z     
2025-02-25T14:23:42.9090550Z             diff = 0
2025-02-25T14:23:42.9090730Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9090950Z                 # count up differences
2025-02-25T14:23:42.9091230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9091490Z                     diff += 1
2025-02-25T14:23:42.9091650Z     
2025-02-25T14:23:42.9091780Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9092030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9092340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9092640Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9092840Z E           
2025-02-25T14:23:42.9093010Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9093390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9094230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9094540Z 
2025-02-25T14:23:42.9094790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9095100Z 
2025-02-25T14:23:42.9095240Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9095540Z 
2025-02-25T14:23:42.9095720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98f170>
2025-02-25T14:23:42.9096130Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>, attr = 'lines'
2025-02-25T14:23:42.9096370Z 
2025-02-25T14:23:42.9096490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9096760Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9096980Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9097150Z         try:
2025-02-25T14:23:42.9097340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9097580Z         except KeyError:
2025-02-25T14:23:42.9097800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9098020Z     
2025-02-25T14:23:42.9098150Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9098350Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9098550Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9098790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9099040Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9099230Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9099470Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9099680Z             else:
2025-02-25T14:23:42.9099840Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9100070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9100230Z 
2025-02-25T14:23:42.9100330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9100600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9100890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9101130Z     ???
2025-02-25T14:23:42.9101290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9101460Z 
2025-02-25T14:23:42.9101510Z >   ???
2025-02-25T14:23:42.9101680Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9101900Z E   
2025-02-25T14:23:42.9102080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9102350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9102570Z E          ...
2025-02-25T14:23:42.9102720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9102970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9103240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9103450Z E          ...
2025-02-25T14:23:42.9103600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9103850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9104100Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9104260Z 
2025-02-25T14:23:42.9104330Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9104630Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-25T14:23:42.9104870Z 
2025-02-25T14:23:42.9105050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98f7a0>
2025-02-25T14:23:42.9105430Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>
2025-02-25T14:23:42.9105800Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9105920Z 
2025-02-25T14:23:42.9106040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9106310Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9106540Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9106710Z         try:
2025-02-25T14:23:42.9106910Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9107150Z         except KeyError:
2025-02-25T14:23:42.9107370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9107600Z     
2025-02-25T14:23:42.9107800Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9107990Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9108200Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9108450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9108700Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9108900Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9109140Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9109300Z 
2025-02-25T14:23:42.9109400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9109660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9109830Z 
2025-02-25T14:23:42.9109940Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9110200Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9110420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9110650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9110910Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9111160Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9111390Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9111620Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9111800Z err_msg = None
2025-02-25T14:23:42.9111890Z 
2025-02-25T14:23:42.9111980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9112190Z         if err_msg is None:
2025-02-25T14:23:42.9112380Z             if left.shape != right.shape:
2025-02-25T14:23:42.9112580Z                 raise_assert_detail(
2025-02-25T14:23:42.9112830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9113070Z                 )
2025-02-25T14:23:42.9113200Z     
2025-02-25T14:23:42.9113330Z             diff = 0
2025-02-25T14:23:42.9113510Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9113750Z                 # count up differences
2025-02-25T14:23:42.9114030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9114300Z                     diff += 1
2025-02-25T14:23:42.9114470Z     
2025-02-25T14:23:42.9114610Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9114870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9115210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9115510Z E           AssertionError: Series are different
2025-02-25T14:23:42.9115710Z E           
2025-02-25T14:23:42.9115880Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9116360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9117050Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9117840Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9118280Z 
2025-02-25T14:23:42.9118530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9119180Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-25T14:23:42.9119450Z 
2025-02-25T14:23:42.9119630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98e4b0>
2025-02-25T14:23:42.9120020Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>
2025-02-25T14:23:42.9120290Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9120420Z 
2025-02-25T14:23:42.9120530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9120810Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9121030Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9121190Z         try:
2025-02-25T14:23:42.9121380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9121630Z         except KeyError:
2025-02-25T14:23:42.9121840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9122070Z     
2025-02-25T14:23:42.9122200Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9122400Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9122600Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9122850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9123090Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9123280Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9123520Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9123670Z 
2025-02-25T14:23:42.9123770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9124020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9124190Z 
2025-02-25T14:23:42.9124300Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9124560Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9124790Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9125030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9125290Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9125550Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9125780Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9126010Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9126200Z err_msg = None
2025-02-25T14:23:42.9126290Z 
2025-02-25T14:23:42.9126370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9126590Z         if err_msg is None:
2025-02-25T14:23:42.9126770Z             if left.shape != right.shape:
2025-02-25T14:23:42.9126980Z                 raise_assert_detail(
2025-02-25T14:23:42.9127240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9127480Z                 )
2025-02-25T14:23:42.9127610Z     
2025-02-25T14:23:42.9127730Z             diff = 0
2025-02-25T14:23:42.9127920Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9128350Z                 # count up differences
2025-02-25T14:23:42.9128650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9128950Z                     diff += 1
2025-02-25T14:23:42.9129130Z     
2025-02-25T14:23:42.9129280Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9130440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9130940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9131250Z E           AssertionError: Series are different
2025-02-25T14:23:42.9131460Z E           
2025-02-25T14:23:42.9131890Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9132360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9133070Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9133760Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9134140Z 
2025-02-25T14:23:42.9134400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9134870Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-25T14:23:42.9135090Z 
2025-02-25T14:23:42.9135200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9135490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9135750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9136020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9136310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9136560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9136770Z err_msg = None
2025-02-25T14:23:42.9144610Z 
2025-02-25T14:23:42.9144720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9144950Z         if err_msg is None:
2025-02-25T14:23:42.9145140Z             if left.shape != right.shape:
2025-02-25T14:23:42.9145360Z                 raise_assert_detail(
2025-02-25T14:23:42.9145620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9145860Z                 )
2025-02-25T14:23:42.9146000Z     
2025-02-25T14:23:42.9146130Z             diff = 0
2025-02-25T14:23:42.9146320Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9146570Z                 # count up differences
2025-02-25T14:23:42.9146840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9147110Z                     diff += 1
2025-02-25T14:23:42.9147280Z     
2025-02-25T14:23:42.9147420Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9147950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9148270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9148590Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9148800Z E           
2025-02-25T14:23:42.9148980Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9149360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9150170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9150470Z 
2025-02-25T14:23:42.9150720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9151050Z 
2025-02-25T14:23:42.9151190Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9151420Z 
2025-02-25T14:23:42.9151610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98cce0>
2025-02-25T14:23:42.9152050Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>, attr = 'nu'
2025-02-25T14:23:42.9152310Z 
2025-02-25T14:23:42.9152440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9152720Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9152960Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9153140Z         try:
2025-02-25T14:23:42.9153340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9153610Z         except KeyError:
2025-02-25T14:23:42.9153840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9154080Z     
2025-02-25T14:23:42.9154220Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9154420Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9154640Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9154900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9155150Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9155360Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9155610Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9155780Z 
2025-02-25T14:23:42.9155890Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9156170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9156480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9156720Z     ???
2025-02-25T14:23:42.9156900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9157070Z 
2025-02-25T14:23:42.9157130Z >   ???
2025-02-25T14:23:42.9157310Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9157540Z E   
2025-02-25T14:23:42.9157720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9158000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9158220Z E          ...
2025-02-25T14:23:42.9158380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9158650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9158920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9159140Z E          ...
2025-02-25T14:23:42.9159290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9159700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9159960Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9160120Z 
2025-02-25T14:23:42.9160200Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9160500Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-25T14:23:42.9160740Z 
2025-02-25T14:23:42.9160860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9161160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9161440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9161800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9162100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9162370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9162580Z err_msg = None
2025-02-25T14:23:42.9162670Z 
2025-02-25T14:23:42.9162760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9162980Z         if err_msg is None:
2025-02-25T14:23:42.9163170Z             if left.shape != right.shape:
2025-02-25T14:23:42.9163390Z                 raise_assert_detail(
2025-02-25T14:23:42.9163640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9163880Z                 )
2025-02-25T14:23:42.9164020Z     
2025-02-25T14:23:42.9164130Z             diff = 0
2025-02-25T14:23:42.9164320Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9164550Z                 # count up differences
2025-02-25T14:23:42.9164840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9164890Z                     diff += 1
2025-02-25T14:23:42.9164950Z     
2025-02-25T14:23:42.9165020Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9165140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9165280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9165380Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9165430Z E           
2025-02-25T14:23:42.9165520Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9165750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9165970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9165980Z 
2025-02-25T14:23:42.9166240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9166240Z 
2025-02-25T14:23:42.9166390Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9166390Z 
2025-02-25T14:23:42.9166580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98cda0>
2025-02-25T14:23:42.9166710Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>
2025-02-25T14:23:42.9166770Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9166770Z 
2025-02-25T14:23:42.9166890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9166990Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9167050Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9167110Z         try:
2025-02-25T14:23:42.9167320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9167380Z         except KeyError:
2025-02-25T14:23:42.9167510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9167560Z     
2025-02-25T14:23:42.9167620Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9167690Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9167760Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9167880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9167950Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9168030Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9168200Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9168200Z 
2025-02-25T14:23:42.9168300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9168410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9168540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9168590Z     ???
2025-02-25T14:23:42.9168680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9168680Z 
2025-02-25T14:23:42.9168740Z >   ???
2025-02-25T14:23:42.9168840Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9168890Z E   
2025-02-25T14:23:42.9169000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9169090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9169140Z E          ...
2025-02-25T14:23:42.9169210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9169320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9169410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9169460Z E          ...
2025-02-25T14:23:42.9169530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9169640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9169720Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9169720Z 
2025-02-25T14:23:42.9169800Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9169960Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-25T14:23:42.9169960Z 
2025-02-25T14:23:42.9170200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9170330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9170410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9170530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9170630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9170710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9170770Z err_msg = None
2025-02-25T14:23:42.9170770Z 
2025-02-25T14:23:42.9170860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9170920Z         if err_msg is None:
2025-02-25T14:23:42.9170990Z             if left.shape != right.shape:
2025-02-25T14:23:42.9171050Z                 raise_assert_detail(
2025-02-25T14:23:42.9171170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9171220Z                 )
2025-02-25T14:23:42.9171270Z     
2025-02-25T14:23:42.9171330Z             diff = 0
2025-02-25T14:23:42.9171420Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9171490Z                 # count up differences
2025-02-25T14:23:42.9171630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9171700Z                     diff += 1
2025-02-25T14:23:42.9171750Z     
2025-02-25T14:23:42.9171820Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9172020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9172160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9172250Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9172290Z E           
2025-02-25T14:23:42.9172390Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9172610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9172870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9172870Z 
2025-02-25T14:23:42.9173120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9173130Z 
2025-02-25T14:23:42.9173260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9173270Z 
2025-02-25T14:23:42.9173440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98d8b0>
2025-02-25T14:23:42.9173670Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>, attr = 'f_lu'
2025-02-25T14:23:42.9173700Z 
2025-02-25T14:23:42.9173820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9173910Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9173990Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9174050Z         try:
2025-02-25T14:23:42.9174160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9174230Z         except KeyError:
2025-02-25T14:23:42.9174340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9174390Z     
2025-02-25T14:23:42.9174460Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9174530Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9174600Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9174710Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9174780Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9174850Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9174940Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9174950Z 
2025-02-25T14:23:42.9175060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9175170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9175290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9175350Z     ???
2025-02-25T14:23:42.9175450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9175450Z 
2025-02-25T14:23:42.9175500Z >   ???
2025-02-25T14:23:42.9175610Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9175670Z E   
2025-02-25T14:23:42.9175770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9175860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9175920Z E          ...
2025-02-25T14:23:42.9175990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9176440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9176600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9176650Z E          ...
2025-02-25T14:23:42.9176730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9177190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9177280Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9177280Z 
2025-02-25T14:23:42.9177360Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9177530Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-25T14:23:42.9177530Z 
2025-02-25T14:23:42.9177640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9177760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9177840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9178100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9178220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9178300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9178370Z err_msg = None
2025-02-25T14:23:42.9178370Z 
2025-02-25T14:23:42.9178460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9178530Z         if err_msg is None:
2025-02-25T14:23:42.9178610Z             if left.shape != right.shape:
2025-02-25T14:23:42.9178680Z                 raise_assert_detail(
2025-02-25T14:23:42.9178800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9178860Z                 )
2025-02-25T14:23:42.9178910Z     
2025-02-25T14:23:42.9178960Z             diff = 0
2025-02-25T14:23:42.9179050Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9179120Z                 # count up differences
2025-02-25T14:23:42.9179270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9179330Z                     diff += 1
2025-02-25T14:23:42.9179380Z     
2025-02-25T14:23:42.9179440Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9179560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9179710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9179800Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9179850Z E           
2025-02-25T14:23:42.9179950Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9180180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9180400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9180420Z 
2025-02-25T14:23:42.9180680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9180680Z 
2025-02-25T14:23:42.9180820Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9180820Z 
2025-02-25T14:23:42.9181000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98edb0>
2025-02-25T14:23:42.9181140Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>
2025-02-25T14:23:42.9181190Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9181200Z 
2025-02-25T14:23:42.9181310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9181400Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9181470Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9181530Z         try:
2025-02-25T14:23:42.9181700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9181770Z         except KeyError:
2025-02-25T14:23:42.9181890Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9181940Z     
2025-02-25T14:23:42.9182010Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9182080Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9182150Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9182260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9182320Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9182400Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9182550Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9182610Z             else:
2025-02-25T14:23:42.9182690Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9182780Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9182790Z 
2025-02-25T14:23:42.9182890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9182980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9183110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9183160Z     ???
2025-02-25T14:23:42.9183270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9183270Z 
2025-02-25T14:23:42.9183320Z >   ???
2025-02-25T14:23:42.9183420Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9183480Z E   
2025-02-25T14:23:42.9183580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9183680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9183730Z E          ...
2025-02-25T14:23:42.9183810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9183910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9184010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9184060Z E          ...
2025-02-25T14:23:42.9184130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9184240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9184320Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9184320Z 
2025-02-25T14:23:42.9184400Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9184560Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-25T14:23:42.9184560Z 
2025-02-25T14:23:42.9184670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9184790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9184880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9184990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9185100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9185180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9185230Z err_msg = None
2025-02-25T14:23:42.9185240Z 
2025-02-25T14:23:42.9185320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9185380Z         if err_msg is None:
2025-02-25T14:23:42.9185450Z             if left.shape != right.shape:
2025-02-25T14:23:42.9185520Z                 raise_assert_detail(
2025-02-25T14:23:42.9185640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9185690Z                 )
2025-02-25T14:23:42.9185750Z     
2025-02-25T14:23:42.9185800Z             diff = 0
2025-02-25T14:23:42.9185890Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9185960Z                 # count up differences
2025-02-25T14:23:42.9186170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9186240Z                     diff += 1
2025-02-25T14:23:42.9186290Z     
2025-02-25T14:23:42.9186360Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9186470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9186620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9186710Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9186760Z E           
2025-02-25T14:23:42.9186850Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9187140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9187370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9187370Z 
2025-02-25T14:23:42.9187630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9187630Z 
2025-02-25T14:23:42.9187770Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9187780Z 
2025-02-25T14:23:42.9187960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98ecf0>
2025-02-25T14:23:42.9188090Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>
2025-02-25T14:23:42.9188150Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9188150Z 
2025-02-25T14:23:42.9188260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9188360Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9188420Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9188470Z         try:
2025-02-25T14:23:42.9188590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9188650Z         except KeyError:
2025-02-25T14:23:42.9188760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9188810Z     
2025-02-25T14:23:42.9188880Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9188950Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9189020Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9189130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9189200Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9189270Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9189360Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9189410Z             else:
2025-02-25T14:23:42.9189490Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9189580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9189590Z 
2025-02-25T14:23:42.9189690Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9189780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9189900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9189950Z     ???
2025-02-25T14:23:42.9190050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9190050Z 
2025-02-25T14:23:42.9190100Z >   ???
2025-02-25T14:23:42.9190200Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9190250Z E   
2025-02-25T14:23:42.9190350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9190450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9190560Z E          ...
2025-02-25T14:23:42.9190640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9190740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9190840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9190890Z E          ...
2025-02-25T14:23:42.9190960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9191060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9191140Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9191150Z 
2025-02-25T14:23:42.9191210Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9191430Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-25T14:23:42.9191440Z 
2025-02-25T14:23:42.9191540Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9191660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9191740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9191850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9191960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9192040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9192100Z err_msg = None
2025-02-25T14:23:42.9192100Z 
2025-02-25T14:23:42.9192190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9192250Z         if err_msg is None:
2025-02-25T14:23:42.9192320Z             if left.shape != right.shape:
2025-02-25T14:23:42.9192390Z                 raise_assert_detail(
2025-02-25T14:23:42.9192510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9192560Z                 )
2025-02-25T14:23:42.9192600Z     
2025-02-25T14:23:42.9192660Z             diff = 0
2025-02-25T14:23:42.9192750Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9192820Z                 # count up differences
2025-02-25T14:23:42.9192950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9193010Z                     diff += 1
2025-02-25T14:23:42.9193060Z     
2025-02-25T14:23:42.9193130Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9193240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9193380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9193470Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9193530Z E           
2025-02-25T14:23:42.9193620Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9193830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9194060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9194060Z 
2025-02-25T14:23:42.9194310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9194320Z 
2025-02-25T14:23:42.9194460Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9194460Z 
2025-02-25T14:23:42.9194640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b98eb10>
2025-02-25T14:23:42.9195290Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1975f0>, attr = 'j_blues'
2025-02-25T14:23:42.9195300Z 
2025-02-25T14:23:42.9195410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9195500Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9195570Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9195620Z         try:
2025-02-25T14:23:42.9195740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9195800Z         except KeyError:
2025-02-25T14:23:42.9195910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9195960Z     
2025-02-25T14:23:42.9196180Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9196250Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9196320Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9196430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9196500Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9196570Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9196660Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9196710Z             else:
2025-02-25T14:23:42.9196780Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9196870Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9196870Z 
2025-02-25T14:23:42.9196970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9197070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9197180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9197230Z     ???
2025-02-25T14:23:42.9197330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9197330Z 
2025-02-25T14:23:42.9197370Z >   ???
2025-02-25T14:23:42.9197470Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9197530Z E   
2025-02-25T14:23:42.9197630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9197720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9197770Z E          ...
2025-02-25T14:23:42.9197840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9197940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9198030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9198080Z E          ...
2025-02-25T14:23:42.9198270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9198390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9198490Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9198500Z 
2025-02-25T14:23:42.9198580Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9205100Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-25T14:23:42.9205130Z 
2025-02-25T14:23:42.9205270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9205380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9205460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9205580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9205690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9205780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9205830Z err_msg = None
2025-02-25T14:23:42.9205840Z 
2025-02-25T14:23:42.9205930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9205990Z         if err_msg is None:
2025-02-25T14:23:42.9206060Z             if left.shape != right.shape:
2025-02-25T14:23:42.9206130Z                 raise_assert_detail(
2025-02-25T14:23:42.9206440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9206490Z                 )
2025-02-25T14:23:42.9206540Z     
2025-02-25T14:23:42.9206590Z             diff = 0
2025-02-25T14:23:42.9206680Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9206750Z                 # count up differences
2025-02-25T14:23:42.9206890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9206950Z                     diff += 1
2025-02-25T14:23:42.9207000Z     
2025-02-25T14:23:42.9207070Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9207240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9207380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9207480Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9207520Z E           
2025-02-25T14:23:42.9207620Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9207830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9208050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9208060Z 
2025-02-25T14:23:42.9208310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9208310Z 
2025-02-25T14:23:42.9208450Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9208450Z 
2025-02-25T14:23:42.9208630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e7740>
2025-02-25T14:23:42.9208790Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>, attr = 'lines'
2025-02-25T14:23:42.9208790Z 
2025-02-25T14:23:42.9208910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9209000Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9209070Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9209120Z         try:
2025-02-25T14:23:42.9209230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9209290Z         except KeyError:
2025-02-25T14:23:42.9209410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9209450Z     
2025-02-25T14:23:42.9209520Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9209590Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9209660Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9209770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9209830Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9209900Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9209990Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9210040Z             else:
2025-02-25T14:23:42.9210120Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9210200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9210210Z 
2025-02-25T14:23:42.9210300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9210400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9210520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9210570Z     ???
2025-02-25T14:23:42.9210670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9210710Z 
2025-02-25T14:23:42.9210770Z >   ???
2025-02-25T14:23:42.9210870Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9210920Z E   
2025-02-25T14:23:42.9211020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9211110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9211160Z E          ...
2025-02-25T14:23:42.9211230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9211340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9211430Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9211520Z E          ...
2025-02-25T14:23:42.9211600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9211700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9211780Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9211780Z 
2025-02-25T14:23:42.9211860Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9212030Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-25T14:23:42.9212030Z 
2025-02-25T14:23:42.9212210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e6390>
2025-02-25T14:23:42.9212340Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>
2025-02-25T14:23:42.9212410Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9212410Z 
2025-02-25T14:23:42.9212520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9212610Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9212680Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9212730Z         try:
2025-02-25T14:23:42.9212850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9212910Z         except KeyError:
2025-02-25T14:23:42.9213030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9213080Z     
2025-02-25T14:23:42.9213150Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9213220Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9213290Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9213400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9213470Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9213540Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9213630Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9213630Z 
2025-02-25T14:23:42.9213730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9213820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9213830Z 
2025-02-25T14:23:42.9213940Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9214010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9214110Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9214170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9214290Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9214350Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9214440Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9214500Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9214560Z err_msg = None
2025-02-25T14:23:42.9214560Z 
2025-02-25T14:23:42.9214650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9214710Z         if err_msg is None:
2025-02-25T14:23:42.9214780Z             if left.shape != right.shape:
2025-02-25T14:23:42.9214850Z                 raise_assert_detail(
2025-02-25T14:23:42.9214970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9215010Z                 )
2025-02-25T14:23:42.9215110Z     
2025-02-25T14:23:42.9215160Z             diff = 0
2025-02-25T14:23:42.9215250Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9215320Z                 # count up differences
2025-02-25T14:23:42.9215460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9215520Z                     diff += 1
2025-02-25T14:23:42.9215560Z     
2025-02-25T14:23:42.9215630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9215740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9215880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9216000Z E           AssertionError: Series are different
2025-02-25T14:23:42.9216060Z E           
2025-02-25T14:23:42.9216140Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9216600Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9216890Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9217160Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9217170Z 
2025-02-25T14:23:42.9217420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9217590Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-25T14:23:42.9217590Z 
2025-02-25T14:23:42.9217770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e7860>
2025-02-25T14:23:42.9217900Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>
2025-02-25T14:23:42.9217970Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9217980Z 
2025-02-25T14:23:42.9218090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9218180Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9218250Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9218300Z         try:
2025-02-25T14:23:42.9218420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9218480Z         except KeyError:
2025-02-25T14:23:42.9218600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9218650Z     
2025-02-25T14:23:42.9218710Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9218790Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9218850Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9218970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9219030Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9219100Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9219200Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9219200Z 
2025-02-25T14:23:42.9219300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9219400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9219490Z 
2025-02-25T14:23:42.9219610Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9219680Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9219780Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9219840Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9219960Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9220030Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9220120Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9220190Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9220320Z err_msg = None
2025-02-25T14:23:42.9220320Z 
2025-02-25T14:23:42.9220410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9220470Z         if err_msg is None:
2025-02-25T14:23:42.9220550Z             if left.shape != right.shape:
2025-02-25T14:23:42.9220620Z                 raise_assert_detail(
2025-02-25T14:23:42.9220740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9220790Z                 )
2025-02-25T14:23:42.9220840Z     
2025-02-25T14:23:42.9220890Z             diff = 0
2025-02-25T14:23:42.9220980Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9221050Z                 # count up differences
2025-02-25T14:23:42.9221190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9221260Z                     diff += 1
2025-02-25T14:23:42.9221310Z     
2025-02-25T14:23:42.9221380Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9221500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9221640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9221730Z E           AssertionError: Series are different
2025-02-25T14:23:42.9221780Z E           
2025-02-25T14:23:42.9221870Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9222180Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9222510Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9222850Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9222850Z 
2025-02-25T14:23:42.9223110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9223270Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-25T14:23:42.9223280Z 
2025-02-25T14:23:42.9223400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9223520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9223660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9223780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9223890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9223980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9224030Z err_msg = None
2025-02-25T14:23:42.9224040Z 
2025-02-25T14:23:42.9224130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9224190Z         if err_msg is None:
2025-02-25T14:23:42.9224260Z             if left.shape != right.shape:
2025-02-25T14:23:42.9224380Z                 raise_assert_detail(
2025-02-25T14:23:42.9224500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9224550Z                 )
2025-02-25T14:23:42.9224600Z     
2025-02-25T14:23:42.9224650Z             diff = 0
2025-02-25T14:23:42.9224750Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9224820Z                 # count up differences
2025-02-25T14:23:42.9224970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9225030Z                     diff += 1
2025-02-25T14:23:42.9225080Z     
2025-02-25T14:23:42.9225150Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9225260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9225410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9225500Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9225550Z E           
2025-02-25T14:23:42.9225650Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9225870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9226110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9226120Z 
2025-02-25T14:23:42.9226380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9226380Z 
2025-02-25T14:23:42.9226530Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9226530Z 
2025-02-25T14:23:42.9226720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e7620>
2025-02-25T14:23:42.9226890Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>, attr = 'nu'
2025-02-25T14:23:42.9226890Z 
2025-02-25T14:23:42.9227010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9227110Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9227180Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9227240Z         try:
2025-02-25T14:23:42.9227360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9227430Z         except KeyError:
2025-02-25T14:23:42.9227550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9227600Z     
2025-02-25T14:23:42.9227670Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9227750Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9227820Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9227940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9228020Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9228090Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9228240Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9228250Z 
2025-02-25T14:23:42.9228350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9228460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9228590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9228640Z     ???
2025-02-25T14:23:42.9228740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9228740Z 
2025-02-25T14:23:42.9228790Z >   ???
2025-02-25T14:23:42.9228970Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9229250Z E   
2025-02-25T14:23:42.9229380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9229480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9229530Z E          ...
2025-02-25T14:23:42.9229610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9229730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9229830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9229880Z E          ...
2025-02-25T14:23:42.9229950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9230060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9230150Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9230150Z 
2025-02-25T14:23:42.9230220Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9230390Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-25T14:23:42.9230390Z 
2025-02-25T14:23:42.9230510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9230630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9230710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9230830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9230940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9231020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9231070Z err_msg = None
2025-02-25T14:23:42.9231080Z 
2025-02-25T14:23:42.9231170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9231230Z         if err_msg is None:
2025-02-25T14:23:42.9231310Z             if left.shape != right.shape:
2025-02-25T14:23:42.9231380Z                 raise_assert_detail(
2025-02-25T14:23:42.9231510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9231570Z                 )
2025-02-25T14:23:42.9231620Z     
2025-02-25T14:23:42.9231690Z             diff = 0
2025-02-25T14:23:42.9231780Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9231860Z                 # count up differences
2025-02-25T14:23:42.9232020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9232080Z                     diff += 1
2025-02-25T14:23:42.9232140Z     
2025-02-25T14:23:42.9232210Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9232330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9232480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9232590Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9232650Z E           
2025-02-25T14:23:42.9232750Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9232980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9233330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9233330Z 
2025-02-25T14:23:42.9233590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9233600Z 
2025-02-25T14:23:42.9233810Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9233810Z 
2025-02-25T14:23:42.9234000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e76e0>
2025-02-25T14:23:42.9234140Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>
2025-02-25T14:23:42.9234200Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9234200Z 
2025-02-25T14:23:42.9234330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9234420Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9234490Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9234540Z         try:
2025-02-25T14:23:42.9234660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9234730Z         except KeyError:
2025-02-25T14:23:42.9234840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9234900Z     
2025-02-25T14:23:42.9234970Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9235050Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9235120Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9235240Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9235320Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9235400Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9235490Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9235500Z 
2025-02-25T14:23:42.9235610Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9235710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9235830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9235880Z     ???
2025-02-25T14:23:42.9235970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9235980Z 
2025-02-25T14:23:42.9236030Z >   ???
2025-02-25T14:23:42.9236130Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9236190Z E   
2025-02-25T14:23:42.9236290Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9236380Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9236440Z E          ...
2025-02-25T14:23:42.9236510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9236620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9236710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9236760Z E          ...
2025-02-25T14:23:42.9236840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9236940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9237020Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9237030Z 
2025-02-25T14:23:42.9237100Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9237260Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-25T14:23:42.9237270Z 
2025-02-25T14:23:42.9237390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9237500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9237730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9237850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9237950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9238040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9238090Z err_msg = None
2025-02-25T14:23:42.9238090Z 
2025-02-25T14:23:42.9238180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9238250Z         if err_msg is None:
2025-02-25T14:23:42.9238320Z             if left.shape != right.shape:
2025-02-25T14:23:42.9238730Z                 raise_assert_detail(
2025-02-25T14:23:42.9238850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9238910Z                 )
2025-02-25T14:23:42.9238960Z     
2025-02-25T14:23:42.9239010Z             diff = 0
2025-02-25T14:23:42.9239100Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9239170Z                 # count up differences
2025-02-25T14:23:42.9239310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9239370Z                     diff += 1
2025-02-25T14:23:42.9239420Z     
2025-02-25T14:23:42.9239490Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9239610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9239750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9239850Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9239900Z E           
2025-02-25T14:23:42.9240000Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9240220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9240460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9240460Z 
2025-02-25T14:23:42.9240710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9240720Z 
2025-02-25T14:23:42.9240860Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9240860Z 
2025-02-25T14:23:42.9241040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b7e7d70>
2025-02-25T14:23:42.9241210Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>, attr = 'f_lu'
2025-02-25T14:23:42.9241220Z 
2025-02-25T14:23:42.9241330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9241430Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9241500Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9241550Z         try:
2025-02-25T14:23:42.9241670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9241730Z         except KeyError:
2025-02-25T14:23:42.9241850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9241890Z     
2025-02-25T14:23:42.9241960Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9242040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9242100Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9242210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9242280Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9242350Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9242520Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9242520Z 
2025-02-25T14:23:42.9242620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9242720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9242830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9242890Z     ???
2025-02-25T14:23:42.9242990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9242990Z 
2025-02-25T14:23:42.9243040Z >   ???
2025-02-25T14:23:42.9243150Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9243250Z E   
2025-02-25T14:23:42.9243360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9243450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9243500Z E          ...
2025-02-25T14:23:42.9243580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9243700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9243790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9243840Z E          ...
2025-02-25T14:23:42.9243920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9244020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9244100Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9244110Z 
2025-02-25T14:23:42.9244170Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9244340Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-25T14:23:42.9244350Z 
2025-02-25T14:23:42.9244450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9244570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9244660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9244770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9244880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9244960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9245100Z err_msg = None
2025-02-25T14:23:42.9245100Z 
2025-02-25T14:23:42.9245200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9245260Z         if err_msg is None:
2025-02-25T14:23:42.9245330Z             if left.shape != right.shape:
2025-02-25T14:23:42.9245400Z                 raise_assert_detail(
2025-02-25T14:23:42.9245520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9245570Z                 )
2025-02-25T14:23:42.9245620Z     
2025-02-25T14:23:42.9245670Z             diff = 0
2025-02-25T14:23:42.9245770Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9245840Z                 # count up differences
2025-02-25T14:23:42.9245980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9246040Z                     diff += 1
2025-02-25T14:23:42.9246090Z     
2025-02-25T14:23:42.9246160Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9246270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9246410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9246510Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9246560Z E           
2025-02-25T14:23:42.9246660Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9246880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9247190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9247200Z 
2025-02-25T14:23:42.9247450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9247500Z 
2025-02-25T14:23:42.9247660Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9247660Z 
2025-02-25T14:23:42.9247840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba17680>
2025-02-25T14:23:42.9247970Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>
2025-02-25T14:23:42.9248030Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9248030Z 
2025-02-25T14:23:42.9248150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9248240Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9248300Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9248350Z         try:
2025-02-25T14:23:42.9248470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9248520Z         except KeyError:
2025-02-25T14:23:42.9248640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9248690Z     
2025-02-25T14:23:42.9248750Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9248830Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9248900Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9249000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9249070Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9249140Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9249230Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9249290Z             else:
2025-02-25T14:23:42.9249360Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9249450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9249450Z 
2025-02-25T14:23:42.9249550Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9249650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9249770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9249820Z     ???
2025-02-25T14:23:42.9249920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9249920Z 
2025-02-25T14:23:42.9249970Z >   ???
2025-02-25T14:23:42.9250070Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9250110Z E   
2025-02-25T14:23:42.9250230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9250320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9250380Z E          ...
2025-02-25T14:23:42.9250450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9250560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9250650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9250700Z E          ...
2025-02-25T14:23:42.9250770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9250870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9250950Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9250950Z 
2025-02-25T14:23:42.9251020Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9251180Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-25T14:23:42.9251180Z 
2025-02-25T14:23:42.9251290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9251450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9251540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9251650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9251760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9251840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9251900Z err_msg = None
2025-02-25T14:23:42.9251900Z 
2025-02-25T14:23:42.9252030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9252090Z         if err_msg is None:
2025-02-25T14:23:42.9252160Z             if left.shape != right.shape:
2025-02-25T14:23:42.9252230Z                 raise_assert_detail(
2025-02-25T14:23:42.9252340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9252400Z                 )
2025-02-25T14:23:42.9252450Z     
2025-02-25T14:23:42.9252500Z             diff = 0
2025-02-25T14:23:42.9252590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9252650Z                 # count up differences
2025-02-25T14:23:42.9252800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9252860Z                     diff += 1
2025-02-25T14:23:42.9252900Z     
2025-02-25T14:23:42.9252970Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9253080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9253230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9253320Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9253380Z E           
2025-02-25T14:23:42.9253470Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9253700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9253910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9253920Z 
2025-02-25T14:23:42.9254160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9254160Z 
2025-02-25T14:23:42.9254310Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9254320Z 
2025-02-25T14:23:42.9254500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba17740>
2025-02-25T14:23:42.9254760Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>
2025-02-25T14:23:42.9254850Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9254850Z 
2025-02-25T14:23:42.9254970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9255090Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9255150Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9261100Z         try:
2025-02-25T14:23:42.9261260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9261330Z         except KeyError:
2025-02-25T14:23:42.9261450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9261500Z     
2025-02-25T14:23:42.9261560Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9261640Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9261910Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9262020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9262090Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9262160Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9262250Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9262300Z             else:
2025-02-25T14:23:42.9262380Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9262470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9262470Z 
2025-02-25T14:23:42.9262570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9262750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9262870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9262920Z     ???
2025-02-25T14:23:42.9263020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9263020Z 
2025-02-25T14:23:42.9263070Z >   ???
2025-02-25T14:23:42.9263170Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9263220Z E   
2025-02-25T14:23:42.9263320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9263410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9263460Z E          ...
2025-02-25T14:23:42.9263540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9263650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9263740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9263800Z E          ...
2025-02-25T14:23:42.9263870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9263980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9264060Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9264060Z 
2025-02-25T14:23:42.9264140Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9264300Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-25T14:23:42.9264300Z 
2025-02-25T14:23:42.9264410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9264520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9264600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9264710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9264820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9264910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9264960Z err_msg = None
2025-02-25T14:23:42.9264960Z 
2025-02-25T14:23:42.9265050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9265120Z         if err_msg is None:
2025-02-25T14:23:42.9265190Z             if left.shape != right.shape:
2025-02-25T14:23:42.9265250Z                 raise_assert_detail(
2025-02-25T14:23:42.9265370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9265420Z                 )
2025-02-25T14:23:42.9265470Z     
2025-02-25T14:23:42.9265520Z             diff = 0
2025-02-25T14:23:42.9265610Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9265680Z                 # count up differences
2025-02-25T14:23:42.9265830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9265890Z                     diff += 1
2025-02-25T14:23:42.9265930Z     
2025-02-25T14:23:42.9266010Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9266120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9266260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9266410Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9266460Z E           
2025-02-25T14:23:42.9266560Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9268410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9268660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9268780Z 
2025-02-25T14:23:42.9269050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9269050Z 
2025-02-25T14:23:42.9269200Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9269200Z 
2025-02-25T14:23:42.9269400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba17950>
2025-02-25T14:23:42.9269580Z plasma = <tardis.plasma.base.BasePlasma object at 0x311831250>, attr = 'j_blues'
2025-02-25T14:23:42.9269590Z 
2025-02-25T14:23:42.9269700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9269810Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9269880Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9269940Z         try:
2025-02-25T14:23:42.9270060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9270120Z         except KeyError:
2025-02-25T14:23:42.9270240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9270300Z     
2025-02-25T14:23:42.9270370Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9270450Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9270520Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9270640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9270710Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9270790Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9270890Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9270940Z             else:
2025-02-25T14:23:42.9271030Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9271120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9271120Z 
2025-02-25T14:23:42.9271230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9271330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9271450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9271510Z     ???
2025-02-25T14:23:42.9271610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9271610Z 
2025-02-25T14:23:42.9271660Z >   ???
2025-02-25T14:23:42.9271760Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9271810Z E   
2025-02-25T14:23:42.9271920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9272010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9272060Z E          ...
2025-02-25T14:23:42.9272140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9272250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9272350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9272400Z E          ...
2025-02-25T14:23:42.9272470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9272670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9272750Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9272760Z 
2025-02-25T14:23:42.9272830Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9272990Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-25T14:23:42.9272990Z 
2025-02-25T14:23:42.9273110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9273220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9273300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9273470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9273580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9273660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9273720Z err_msg = None
2025-02-25T14:23:42.9273720Z 
2025-02-25T14:23:42.9273810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9273870Z         if err_msg is None:
2025-02-25T14:23:42.9273950Z             if left.shape != right.shape:
2025-02-25T14:23:42.9274020Z                 raise_assert_detail(
2025-02-25T14:23:42.9274140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9274200Z                 )
2025-02-25T14:23:42.9274250Z     
2025-02-25T14:23:42.9274310Z             diff = 0
2025-02-25T14:23:42.9274400Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9274470Z                 # count up differences
2025-02-25T14:23:42.9274610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9274670Z                     diff += 1
2025-02-25T14:23:42.9274710Z     
2025-02-25T14:23:42.9274790Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9274910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9275060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9275150Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9275200Z E           
2025-02-25T14:23:42.9275300Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9275510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9275740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9275740Z 
2025-02-25T14:23:42.9275990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9276000Z 
2025-02-25T14:23:42.9276130Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9276140Z 
2025-02-25T14:23:42.9276320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa8710>
2025-02-25T14:23:42.9276560Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>, attr = 'lines'
2025-02-25T14:23:42.9276570Z 
2025-02-25T14:23:42.9276690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9276780Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9276890Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9276970Z         try:
2025-02-25T14:23:42.9277090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9277270Z         except KeyError:
2025-02-25T14:23:42.9277390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9277440Z     
2025-02-25T14:23:42.9277510Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9277590Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9277660Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9277770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9277830Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9277900Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9278050Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9278110Z             else:
2025-02-25T14:23:42.9278180Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9278270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9278270Z 
2025-02-25T14:23:42.9278370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9278470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9278580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9278630Z     ???
2025-02-25T14:23:42.9278730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9278730Z 
2025-02-25T14:23:42.9278770Z >   ???
2025-02-25T14:23:42.9278880Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9278930Z E   
2025-02-25T14:23:42.9279030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9279120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9279170Z E          ...
2025-02-25T14:23:42.9279240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9279340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9279440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9279490Z E          ...
2025-02-25T14:23:42.9279560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9279670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9279750Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9279750Z 
2025-02-25T14:23:42.9279820Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9280000Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-25T14:23:42.9280000Z 
2025-02-25T14:23:42.9280180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa87d0>
2025-02-25T14:23:42.9280310Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>
2025-02-25T14:23:42.9280380Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9280380Z 
2025-02-25T14:23:42.9280490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9280590Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9280660Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9280710Z         try:
2025-02-25T14:23:42.9280820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9280880Z         except KeyError:
2025-02-25T14:23:42.9281000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9281040Z     
2025-02-25T14:23:42.9281110Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9281180Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9281250Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9281360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9281430Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9281500Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9281590Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9281590Z 
2025-02-25T14:23:42.9282170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9284750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9284780Z 
2025-02-25T14:23:42.9284940Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9285010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9285120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9285180Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9285310Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9285380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9285750Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9285810Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9285870Z err_msg = None
2025-02-25T14:23:42.9285870Z 
2025-02-25T14:23:42.9285970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9286030Z         if err_msg is None:
2025-02-25T14:23:42.9286120Z             if left.shape != right.shape:
2025-02-25T14:23:42.9286180Z                 raise_assert_detail(
2025-02-25T14:23:42.9286310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9286370Z                 )
2025-02-25T14:23:42.9286410Z     
2025-02-25T14:23:42.9286470Z             diff = 0
2025-02-25T14:23:42.9286570Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9286640Z                 # count up differences
2025-02-25T14:23:42.9286790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9286860Z                     diff += 1
2025-02-25T14:23:42.9286900Z     
2025-02-25T14:23:42.9286970Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9287080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9287220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9287310Z E           AssertionError: Series are different
2025-02-25T14:23:42.9287360Z E           
2025-02-25T14:23:42.9287440Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9287750Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9288040Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9288320Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9288320Z 
2025-02-25T14:23:42.9288580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9288770Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-25T14:23:42.9288770Z 
2025-02-25T14:23:42.9288950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa8890>
2025-02-25T14:23:42.9289080Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>
2025-02-25T14:23:42.9289250Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9289250Z 
2025-02-25T14:23:42.9289370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9289460Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9289530Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9289580Z         try:
2025-02-25T14:23:42.9289690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9289750Z         except KeyError:
2025-02-25T14:23:42.9289870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9289920Z     
2025-02-25T14:23:42.9289980Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9290110Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9290180Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9290300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9290360Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9290440Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9290530Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9290530Z 
2025-02-25T14:23:42.9290630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9290730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9290730Z 
2025-02-25T14:23:42.9290840Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9290910Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9291000Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9291070Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9291180Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9291250Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9291340Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9291400Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9291460Z err_msg = None
2025-02-25T14:23:42.9291460Z 
2025-02-25T14:23:42.9291540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9291600Z         if err_msg is None:
2025-02-25T14:23:42.9291670Z             if left.shape != right.shape:
2025-02-25T14:23:42.9291740Z                 raise_assert_detail(
2025-02-25T14:23:42.9291860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9291910Z                 )
2025-02-25T14:23:42.9291960Z     
2025-02-25T14:23:42.9292010Z             diff = 0
2025-02-25T14:23:42.9292100Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9292170Z                 # count up differences
2025-02-25T14:23:42.9292310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9292370Z                     diff += 1
2025-02-25T14:23:42.9292420Z     
2025-02-25T14:23:42.9292480Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9292590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9292730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9292810Z E           AssertionError: Series are different
2025-02-25T14:23:42.9292860Z E           
2025-02-25T14:23:42.9292940Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9293260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9293570Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9293930Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9293980Z 
2025-02-25T14:23:42.9294240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9294410Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-25T14:23:42.9294410Z 
2025-02-25T14:23:42.9294520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9294630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9294710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9294830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9294940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9295020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9295070Z err_msg = None
2025-02-25T14:23:42.9295080Z 
2025-02-25T14:23:42.9295160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9295230Z         if err_msg is None:
2025-02-25T14:23:42.9295300Z             if left.shape != right.shape:
2025-02-25T14:23:42.9295370Z                 raise_assert_detail(
2025-02-25T14:23:42.9295480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9295540Z                 )
2025-02-25T14:23:42.9295580Z     
2025-02-25T14:23:42.9295640Z             diff = 0
2025-02-25T14:23:42.9295730Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9295790Z                 # count up differences
2025-02-25T14:23:42.9295930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9295990Z                     diff += 1
2025-02-25T14:23:42.9296040Z     
2025-02-25T14:23:42.9296110Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9296220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9296350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9296450Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9296500Z E           
2025-02-25T14:23:42.9296700Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9296920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9297140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9297150Z 
2025-02-25T14:23:42.9297400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9297440Z 
2025-02-25T14:23:42.9297590Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9297590Z 
2025-02-25T14:23:42.9297770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa8ad0>
2025-02-25T14:23:42.9297930Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>, attr = 'nu'
2025-02-25T14:23:42.9297940Z 
2025-02-25T14:23:42.9298050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9298150Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9298220Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9298270Z         try:
2025-02-25T14:23:42.9298430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9298490Z         except KeyError:
2025-02-25T14:23:42.9298610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9298660Z     
2025-02-25T14:23:42.9298730Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9298810Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9298880Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9298990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9299060Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9299130Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9299230Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9299230Z 
2025-02-25T14:23:42.9299330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9299430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9299560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9299620Z     ???
2025-02-25T14:23:42.9299710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9299720Z 
2025-02-25T14:23:42.9299770Z >   ???
2025-02-25T14:23:42.9299880Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9299930Z E   
2025-02-25T14:23:42.9300030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9300130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9300180Z E          ...
2025-02-25T14:23:42.9300250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9300360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9300460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9300510Z E          ...
2025-02-25T14:23:42.9300580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9300690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9300780Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9300780Z 
2025-02-25T14:23:42.9300850Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9301030Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-25T14:23:42.9301030Z 
2025-02-25T14:23:42.9301150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9301270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9301350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9301460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9301570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9301660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9301710Z err_msg = None
2025-02-25T14:23:42.9301720Z 
2025-02-25T14:23:42.9301800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9301860Z         if err_msg is None:
2025-02-25T14:23:42.9301940Z             if left.shape != right.shape:
2025-02-25T14:23:42.9302100Z                 raise_assert_detail(
2025-02-25T14:23:42.9302220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9302270Z                 )
2025-02-25T14:23:42.9302320Z     
2025-02-25T14:23:42.9302370Z             diff = 0
2025-02-25T14:23:42.9302460Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9302530Z                 # count up differences
2025-02-25T14:23:42.9302680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9302740Z                     diff += 1
2025-02-25T14:23:42.9302800Z     
2025-02-25T14:23:42.9302950Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9303070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9303210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9303300Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9303360Z E           
2025-02-25T14:23:42.9303460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9303680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9303900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9303910Z 
2025-02-25T14:23:42.9304170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9304170Z 
2025-02-25T14:23:42.9304310Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9304320Z 
2025-02-25T14:23:42.9304490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa8b90>
2025-02-25T14:23:42.9304630Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>
2025-02-25T14:23:42.9304680Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9304690Z 
2025-02-25T14:23:42.9304800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9304900Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9304960Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9305020Z         try:
2025-02-25T14:23:42.9305140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9305200Z         except KeyError:
2025-02-25T14:23:42.9305310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9305370Z     
2025-02-25T14:23:42.9305430Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9305510Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9305570Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9305690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9305750Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9305830Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9305930Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9305930Z 
2025-02-25T14:23:42.9306030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9306140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9306260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9306310Z     ???
2025-02-25T14:23:42.9306410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9306410Z 
2025-02-25T14:23:42.9306510Z >   ???
2025-02-25T14:23:42.9306620Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9306670Z E   
2025-02-25T14:23:42.9306780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9306870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9306930Z E          ...
2025-02-25T14:23:42.9307000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9307100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9307200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9307250Z E          ...
2025-02-25T14:23:42.9307320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9307470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9307550Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9307550Z 
2025-02-25T14:23:42.9307620Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9307790Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-25T14:23:42.9307790Z 
2025-02-25T14:23:42.9307900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9308010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9308100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9308200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9308310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9308390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9308450Z err_msg = None
2025-02-25T14:23:42.9308450Z 
2025-02-25T14:23:42.9308540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9308600Z         if err_msg is None:
2025-02-25T14:23:42.9308670Z             if left.shape != right.shape:
2025-02-25T14:23:42.9308740Z                 raise_assert_detail(
2025-02-25T14:23:42.9308860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9308900Z                 )
2025-02-25T14:23:42.9308950Z     
2025-02-25T14:23:42.9309010Z             diff = 0
2025-02-25T14:23:42.9309100Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9309170Z                 # count up differences
2025-02-25T14:23:42.9309310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9309370Z                     diff += 1
2025-02-25T14:23:42.9309420Z     
2025-02-25T14:23:42.9309490Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9309600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9309740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9309830Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9309880Z E           
2025-02-25T14:23:42.9309980Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9310200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9310420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9310430Z 
2025-02-25T14:23:42.9310670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9310720Z 
2025-02-25T14:23:42.9310860Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9310860Z 
2025-02-25T14:23:42.9311040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa8c50>
2025-02-25T14:23:42.9311200Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>, attr = 'f_lu'
2025-02-25T14:23:42.9311200Z 
2025-02-25T14:23:42.9311320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9311420Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9311480Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9311580Z         try:
2025-02-25T14:23:42.9311700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9311760Z         except KeyError:
2025-02-25T14:23:42.9311880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9311930Z     
2025-02-25T14:23:42.9312010Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9312090Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9312160Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9312280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9312340Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9312420Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9312520Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9312520Z 
2025-02-25T14:23:42.9312630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9312730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9312860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9312910Z     ???
2025-02-25T14:23:42.9313010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9313010Z 
2025-02-25T14:23:42.9313060Z >   ???
2025-02-25T14:23:42.9313170Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9313220Z E   
2025-02-25T14:23:42.9313330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9313430Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9313490Z E          ...
2025-02-25T14:23:42.9313570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9313680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9313780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9313840Z E          ...
2025-02-25T14:23:42.9313920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9314140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9314230Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9314230Z 
2025-02-25T14:23:42.9314390Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9321500Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-25T14:23:42.9321540Z 
2025-02-25T14:23:42.9321690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9321830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9321910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9322030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9322140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9322240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9322310Z err_msg = None
2025-02-25T14:23:42.9322310Z 
2025-02-25T14:23:42.9322400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9322470Z         if err_msg is None:
2025-02-25T14:23:42.9322550Z             if left.shape != right.shape:
2025-02-25T14:23:42.9322820Z                 raise_assert_detail(
2025-02-25T14:23:42.9322950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9323000Z                 )
2025-02-25T14:23:42.9323050Z     
2025-02-25T14:23:42.9323100Z             diff = 0
2025-02-25T14:23:42.9323190Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9323270Z                 # count up differences
2025-02-25T14:23:42.9323410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9323470Z                     diff += 1
2025-02-25T14:23:42.9323530Z     
2025-02-25T14:23:42.9323670Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9323790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9323930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9324030Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9324080Z E           
2025-02-25T14:23:42.9324180Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9324400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9324630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9324630Z 
2025-02-25T14:23:42.9324900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9324910Z 
2025-02-25T14:23:42.9325050Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9325060Z 
2025-02-25T14:23:42.9325240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa93d0>
2025-02-25T14:23:42.9325370Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>
2025-02-25T14:23:42.9325430Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9325430Z 
2025-02-25T14:23:42.9325550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9325640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9325710Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9325760Z         try:
2025-02-25T14:23:42.9325880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9325940Z         except KeyError:
2025-02-25T14:23:42.9326050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9326100Z     
2025-02-25T14:23:42.9326170Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9326250Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9326320Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9326440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9326500Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9326580Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9326660Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9326720Z             else:
2025-02-25T14:23:42.9326790Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9326880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9326880Z 
2025-02-25T14:23:42.9326980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9327080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9327200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9327380Z     ???
2025-02-25T14:23:42.9327470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9327480Z 
2025-02-25T14:23:42.9327520Z >   ???
2025-02-25T14:23:42.9327630Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9327680Z E   
2025-02-25T14:23:42.9327780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9327870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9327930Z E          ...
2025-02-25T14:23:42.9328000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9328110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9328470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9328530Z E          ...
2025-02-25T14:23:42.9328600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9328710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9328800Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9328800Z 
2025-02-25T14:23:42.9328870Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9329050Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-25T14:23:42.9329060Z 
2025-02-25T14:23:42.9329170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9329280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9329370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9329490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9329610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9329700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9329760Z err_msg = None
2025-02-25T14:23:42.9329760Z 
2025-02-25T14:23:42.9329860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9329930Z         if err_msg is None:
2025-02-25T14:23:42.9330010Z             if left.shape != right.shape:
2025-02-25T14:23:42.9330080Z                 raise_assert_detail(
2025-02-25T14:23:42.9330210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9330260Z                 )
2025-02-25T14:23:42.9330320Z     
2025-02-25T14:23:42.9330370Z             diff = 0
2025-02-25T14:23:42.9330470Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9330540Z                 # count up differences
2025-02-25T14:23:42.9330700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9330770Z                     diff += 1
2025-02-25T14:23:42.9330820Z     
2025-02-25T14:23:42.9330890Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9331010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9331160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9331250Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9331310Z E           
2025-02-25T14:23:42.9331400Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9331630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9331870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9331940Z 
2025-02-25T14:23:42.9332220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9332220Z 
2025-02-25T14:23:42.9332380Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9332380Z 
2025-02-25T14:23:42.9332570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa9490>
2025-02-25T14:23:42.9332710Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>
2025-02-25T14:23:42.9332770Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9332770Z 
2025-02-25T14:23:42.9332950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9333040Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9333110Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9333160Z         try:
2025-02-25T14:23:42.9333280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9333350Z         except KeyError:
2025-02-25T14:23:42.9333460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9333510Z     
2025-02-25T14:23:42.9333580Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9333650Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9333720Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9333830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9333900Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9333980Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9334070Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9334130Z             else:
2025-02-25T14:23:42.9334210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9334300Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9334310Z 
2025-02-25T14:23:42.9334410Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9334510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9334630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9334680Z     ???
2025-02-25T14:23:42.9334790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9334790Z 
2025-02-25T14:23:42.9334840Z >   ???
2025-02-25T14:23:42.9334940Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9334990Z E   
2025-02-25T14:23:42.9335090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9335180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9335240Z E          ...
2025-02-25T14:23:42.9335310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9335410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9335510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9335560Z E          ...
2025-02-25T14:23:42.9335640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9335740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9335820Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9335820Z 
2025-02-25T14:23:42.9335890Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9336060Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-25T14:23:42.9336060Z 
2025-02-25T14:23:42.9336170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9336280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9336370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9336480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9336740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9336830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9336880Z err_msg = None
2025-02-25T14:23:42.9336890Z 
2025-02-25T14:23:42.9336980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9337040Z         if err_msg is None:
2025-02-25T14:23:42.9337120Z             if left.shape != right.shape:
2025-02-25T14:23:42.9337180Z                 raise_assert_detail(
2025-02-25T14:23:42.9337300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9337350Z                 )
2025-02-25T14:23:42.9337470Z     
2025-02-25T14:23:42.9337530Z             diff = 0
2025-02-25T14:23:42.9337620Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9337690Z                 # count up differences
2025-02-25T14:23:42.9337830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9337890Z                     diff += 1
2025-02-25T14:23:42.9337940Z     
2025-02-25T14:23:42.9338000Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9338120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9338260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9338340Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9338400Z E           
2025-02-25T14:23:42.9338490Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9338700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9338920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9338930Z 
2025-02-25T14:23:42.9339180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9339180Z 
2025-02-25T14:23:42.9339320Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9339320Z 
2025-02-25T14:23:42.9339500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baa9610>
2025-02-25T14:23:42.9339670Z plasma = <tardis.plasma.base.BasePlasma object at 0x1634a5ac0>, attr = 'j_blues'
2025-02-25T14:23:42.9339670Z 
2025-02-25T14:23:42.9339790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9339880Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9339950Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9340000Z         try:
2025-02-25T14:23:42.9340110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9340180Z         except KeyError:
2025-02-25T14:23:42.9340290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9340340Z     
2025-02-25T14:23:42.9340400Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9340480Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9340550Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9340660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9340730Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9340800Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9340890Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9340940Z             else:
2025-02-25T14:23:42.9341010Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9341160Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9341160Z 
2025-02-25T14:23:42.9341260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9341350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9341470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9341520Z     ???
2025-02-25T14:23:42.9341610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9341610Z 
2025-02-25T14:23:42.9341660Z >   ???
2025-02-25T14:23:42.9341770Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9341850Z E   
2025-02-25T14:23:42.9341960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9342050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9342100Z E          ...
2025-02-25T14:23:42.9342180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9342280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9342380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9342480Z E          ...
2025-02-25T14:23:42.9342590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9342700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9342780Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9342780Z 
2025-02-25T14:23:42.9342850Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9343060Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-25T14:23:42.9343070Z 
2025-02-25T14:23:42.9343180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9343290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9343380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9343490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9343600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9343680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9343740Z err_msg = None
2025-02-25T14:23:42.9343750Z 
2025-02-25T14:23:42.9343840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9343910Z         if err_msg is None:
2025-02-25T14:23:42.9343980Z             if left.shape != right.shape:
2025-02-25T14:23:42.9344050Z                 raise_assert_detail(
2025-02-25T14:23:42.9344190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9344240Z                 )
2025-02-25T14:23:42.9344290Z     
2025-02-25T14:23:42.9344340Z             diff = 0
2025-02-25T14:23:42.9344430Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9344500Z                 # count up differences
2025-02-25T14:23:42.9344650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9344710Z                     diff += 1
2025-02-25T14:23:42.9344760Z     
2025-02-25T14:23:42.9344840Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9344950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9345090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9345180Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9345230Z E           
2025-02-25T14:23:42.9345320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9345550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9345950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9345960Z 
2025-02-25T14:23:42.9346210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9346320Z 
2025-02-25T14:23:42.9346470Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9346470Z 
2025-02-25T14:23:42.9346650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa390>
2025-02-25T14:23:42.9346810Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>, attr = 'lines'
2025-02-25T14:23:42.9346820Z 
2025-02-25T14:23:42.9346930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9347030Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9347100Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9347140Z         try:
2025-02-25T14:23:42.9347270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9347330Z         except KeyError:
2025-02-25T14:23:42.9347450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9347500Z     
2025-02-25T14:23:42.9347560Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9347630Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9347700Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9347810Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9347880Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9347950Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9348040Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9348090Z             else:
2025-02-25T14:23:42.9348160Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9348260Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9348260Z 
2025-02-25T14:23:42.9348360Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9348460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9348580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9348630Z     ???
2025-02-25T14:23:42.9348730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9348740Z 
2025-02-25T14:23:42.9348790Z >   ???
2025-02-25T14:23:42.9348890Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9348940Z E   
2025-02-25T14:23:42.9349040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9349130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9349190Z E          ...
2025-02-25T14:23:42.9349260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9349360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9349450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9349500Z E          ...
2025-02-25T14:23:42.9349570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9349680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9349760Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9349770Z 
2025-02-25T14:23:42.9349840Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9350090Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-25T14:23:42.9350090Z 
2025-02-25T14:23:42.9350270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa450>
2025-02-25T14:23:42.9350460Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>
2025-02-25T14:23:42.9350540Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9350540Z 
2025-02-25T14:23:42.9350650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9350740Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9350800Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9350850Z         try:
2025-02-25T14:23:42.9350960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9351020Z         except KeyError:
2025-02-25T14:23:42.9351180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9351230Z     
2025-02-25T14:23:42.9351290Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9351370Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9351440Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9351550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9351620Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9351690Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9351780Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9351790Z 
2025-02-25T14:23:42.9351890Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9351980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9351990Z 
2025-02-25T14:23:42.9352110Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9352180Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9352270Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9352340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9352460Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9352530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9352630Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9352690Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9352740Z err_msg = None
2025-02-25T14:23:42.9352750Z 
2025-02-25T14:23:42.9352830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9352890Z         if err_msg is None:
2025-02-25T14:23:42.9352970Z             if left.shape != right.shape:
2025-02-25T14:23:42.9353040Z                 raise_assert_detail(
2025-02-25T14:23:42.9353160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9353210Z                 )
2025-02-25T14:23:42.9353260Z     
2025-02-25T14:23:42.9353310Z             diff = 0
2025-02-25T14:23:42.9353410Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9353470Z                 # count up differences
2025-02-25T14:23:42.9353620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9353680Z                     diff += 1
2025-02-25T14:23:42.9353730Z     
2025-02-25T14:23:42.9353800Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9353920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9354060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9354140Z E           AssertionError: Series are different
2025-02-25T14:23:42.9354190Z E           
2025-02-25T14:23:42.9354270Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9354590Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9354930Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9355220Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9355270Z 
2025-02-25T14:23:42.9355530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9355780Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-25T14:23:42.9355790Z 
2025-02-25T14:23:42.9355970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa510>
2025-02-25T14:23:42.9356110Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>
2025-02-25T14:23:42.9356180Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9356180Z 
2025-02-25T14:23:42.9356290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9356380Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9356460Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9356510Z         try:
2025-02-25T14:23:42.9356620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9356680Z         except KeyError:
2025-02-25T14:23:42.9356800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9356860Z     
2025-02-25T14:23:42.9356920Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9357000Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9357070Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9357180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9357240Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9357320Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9357410Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9357420Z 
2025-02-25T14:23:42.9357520Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9357610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9357620Z 
2025-02-25T14:23:42.9357730Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9357800Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9357890Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9357960Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9358070Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9358140Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9358230Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9358290Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9358350Z err_msg = None
2025-02-25T14:23:42.9358350Z 
2025-02-25T14:23:42.9358430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9358500Z         if err_msg is None:
2025-02-25T14:23:42.9358570Z             if left.shape != right.shape:
2025-02-25T14:23:42.9358640Z                 raise_assert_detail(
2025-02-25T14:23:42.9358750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9358800Z                 )
2025-02-25T14:23:42.9358910Z     
2025-02-25T14:23:42.9358960Z             diff = 0
2025-02-25T14:23:42.9359050Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9359120Z                 # count up differences
2025-02-25T14:23:42.9359260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9359320Z                     diff += 1
2025-02-25T14:23:42.9359370Z     
2025-02-25T14:23:42.9359440Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9359560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9359700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9359830Z E           AssertionError: Series are different
2025-02-25T14:23:42.9359890Z E           
2025-02-25T14:23:42.9359970Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9360280Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9360610Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9360930Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9360940Z 
2025-02-25T14:23:42.9361180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9361370Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-25T14:23:42.9361380Z 
2025-02-25T14:23:42.9361490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9361600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9361700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9361810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9361920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9362010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9362060Z err_msg = None
2025-02-25T14:23:42.9362060Z 
2025-02-25T14:23:42.9362150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9362220Z         if err_msg is None:
2025-02-25T14:23:42.9362300Z             if left.shape != right.shape:
2025-02-25T14:23:42.9362360Z                 raise_assert_detail(
2025-02-25T14:23:42.9362480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9362540Z                 )
2025-02-25T14:23:42.9362590Z     
2025-02-25T14:23:42.9362640Z             diff = 0
2025-02-25T14:23:42.9362740Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9362810Z                 # count up differences
2025-02-25T14:23:42.9362950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9363530Z                     diff += 1
2025-02-25T14:23:42.9363570Z     
2025-02-25T14:23:42.9363640Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9363750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9363890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9363980Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9364040Z E           
2025-02-25T14:23:42.9364130Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9364350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9364670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9364680Z 
2025-02-25T14:23:42.9364920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9364930Z 
2025-02-25T14:23:42.9365070Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9365080Z 
2025-02-25T14:23:42.9365260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa750>
2025-02-25T14:23:42.9365420Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>, attr = 'nu'
2025-02-25T14:23:42.9365420Z 
2025-02-25T14:23:42.9365550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9365640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9365710Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9365760Z         try:
2025-02-25T14:23:42.9365880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9365940Z         except KeyError:
2025-02-25T14:23:42.9366060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9366110Z     
2025-02-25T14:23:42.9366170Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9366250Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9366320Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9366430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9366500Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9366570Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9366670Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9366670Z 
2025-02-25T14:23:42.9366770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9366870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9367000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9367060Z     ???
2025-02-25T14:23:42.9367150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9367160Z 
2025-02-25T14:23:42.9367210Z >   ???
2025-02-25T14:23:42.9367320Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9367380Z E   
2025-02-25T14:23:42.9367480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9367580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9367630Z E          ...
2025-02-25T14:23:42.9367710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9367820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9367910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9368030Z E          ...
2025-02-25T14:23:42.9368100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9368210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9368290Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9368300Z 
2025-02-25T14:23:42.9368380Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9368620Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-25T14:23:42.9368620Z 
2025-02-25T14:23:42.9368740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9368850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9368990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9369100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9369210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9369300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9369350Z err_msg = None
2025-02-25T14:23:42.9369350Z 
2025-02-25T14:23:42.9369440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9369500Z         if err_msg is None:
2025-02-25T14:23:42.9369580Z             if left.shape != right.shape:
2025-02-25T14:23:42.9369640Z                 raise_assert_detail(
2025-02-25T14:23:42.9369770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9369820Z                 )
2025-02-25T14:23:42.9369870Z     
2025-02-25T14:23:42.9369920Z             diff = 0
2025-02-25T14:23:42.9370010Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9370120Z                 # count up differences
2025-02-25T14:23:42.9370270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9370340Z                     diff += 1
2025-02-25T14:23:42.9370390Z     
2025-02-25T14:23:42.9370460Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9370580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9370860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9370950Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9371020Z E           
2025-02-25T14:23:42.9371120Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9379250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9379540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9379550Z 
2025-02-25T14:23:42.9379800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9379810Z 
2025-02-25T14:23:42.9379940Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9379950Z 
2025-02-25T14:23:42.9380130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa810>
2025-02-25T14:23:42.9380260Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>
2025-02-25T14:23:42.9380320Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9380320Z 
2025-02-25T14:23:42.9380440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9380750Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9380820Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9380860Z         try:
2025-02-25T14:23:42.9380980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9381040Z         except KeyError:
2025-02-25T14:23:42.9381150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9381200Z     
2025-02-25T14:23:42.9381270Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9381340Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9381410Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9381520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9381670Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9381740Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9381840Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9381840Z 
2025-02-25T14:23:42.9381940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9382040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9382160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9382210Z     ???
2025-02-25T14:23:42.9382310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9382310Z 
2025-02-25T14:23:42.9382360Z >   ???
2025-02-25T14:23:42.9382460Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9382510Z E   
2025-02-25T14:23:42.9382650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9382750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9382810Z E          ...
2025-02-25T14:23:42.9382880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9382980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9383080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9383130Z E          ...
2025-02-25T14:23:42.9383200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9383300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9383380Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9383390Z 
2025-02-25T14:23:42.9383450Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9383650Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-25T14:23:42.9383660Z 
2025-02-25T14:23:42.9383770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9383890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9383970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9384080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9384190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9384270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9384320Z err_msg = None
2025-02-25T14:23:42.9384330Z 
2025-02-25T14:23:42.9384410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9384470Z         if err_msg is None:
2025-02-25T14:23:42.9384550Z             if left.shape != right.shape:
2025-02-25T14:23:42.9384610Z                 raise_assert_detail(
2025-02-25T14:23:42.9384730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9384780Z                 )
2025-02-25T14:23:42.9384830Z     
2025-02-25T14:23:42.9384880Z             diff = 0
2025-02-25T14:23:42.9384970Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9385040Z                 # count up differences
2025-02-25T14:23:42.9385170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9385310Z                     diff += 1
2025-02-25T14:23:42.9385350Z     
2025-02-25T14:23:42.9385430Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9385540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9385680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9385770Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9385820Z E           
2025-02-25T14:23:42.9385910Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9386120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9386400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9386410Z 
2025-02-25T14:23:42.9386660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9386660Z 
2025-02-25T14:23:42.9386800Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9386800Z 
2025-02-25T14:23:42.9386970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baaa8d0>
2025-02-25T14:23:42.9387140Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>, attr = 'f_lu'
2025-02-25T14:23:42.9387140Z 
2025-02-25T14:23:42.9387260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9387360Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9387420Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9387470Z         try:
2025-02-25T14:23:42.9387590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9387650Z         except KeyError:
2025-02-25T14:23:42.9387760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9387810Z     
2025-02-25T14:23:42.9387880Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9387960Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9388030Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9388150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9388220Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9388300Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9388400Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9388410Z 
2025-02-25T14:23:42.9388510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9388610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9388730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9388780Z     ???
2025-02-25T14:23:42.9388870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9388880Z 
2025-02-25T14:23:42.9388930Z >   ???
2025-02-25T14:23:42.9389030Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9389080Z E   
2025-02-25T14:23:42.9389190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9389280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9389340Z E          ...
2025-02-25T14:23:42.9389410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9389510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9389600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9389750Z E          ...
2025-02-25T14:23:42.9389830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9389930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9390010Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9390010Z 
2025-02-25T14:23:42.9390090Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9390310Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-25T14:23:42.9390310Z 
2025-02-25T14:23:42.9390420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9390610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9390690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9390810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9390910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9391000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9391050Z err_msg = None
2025-02-25T14:23:42.9391050Z 
2025-02-25T14:23:42.9391140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9391200Z         if err_msg is None:
2025-02-25T14:23:42.9391280Z             if left.shape != right.shape:
2025-02-25T14:23:42.9391340Z                 raise_assert_detail(
2025-02-25T14:23:42.9391460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9391520Z                 )
2025-02-25T14:23:42.9391580Z     
2025-02-25T14:23:42.9391630Z             diff = 0
2025-02-25T14:23:42.9391720Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9391800Z                 # count up differences
2025-02-25T14:23:42.9391940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9392010Z                     diff += 1
2025-02-25T14:23:42.9392060Z     
2025-02-25T14:23:42.9392130Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9392240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9392380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9392480Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9392520Z E           
2025-02-25T14:23:42.9392610Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9392830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9393050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9393060Z 
2025-02-25T14:23:42.9393300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9393310Z 
2025-02-25T14:23:42.9393440Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9393440Z 
2025-02-25T14:23:42.9393620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baab050>
2025-02-25T14:23:42.9393750Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>
2025-02-25T14:23:42.9393810Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9393810Z 
2025-02-25T14:23:42.9393920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9394070Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9394140Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9394190Z         try:
2025-02-25T14:23:42.9394300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9394360Z         except KeyError:
2025-02-25T14:23:42.9394480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9394530Z     
2025-02-25T14:23:42.9394600Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9394670Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9394740Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9394900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9394970Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9395040Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9395130Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9395180Z             else:
2025-02-25T14:23:42.9395260Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9395340Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9395350Z 
2025-02-25T14:23:42.9395440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9395540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9395660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9395710Z     ???
2025-02-25T14:23:42.9395800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9395810Z 
2025-02-25T14:23:42.9395860Z >   ???
2025-02-25T14:23:42.9395970Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9396010Z E   
2025-02-25T14:23:42.9396120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9396210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9396260Z E          ...
2025-02-25T14:23:42.9396330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9396440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9396540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9396590Z E          ...
2025-02-25T14:23:42.9396660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9396760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9396840Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9396840Z 
2025-02-25T14:23:42.9396910Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9397130Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-25T14:23:42.9397130Z 
2025-02-25T14:23:42.9397240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9397350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9397440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9397550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9397650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9397730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9397790Z err_msg = None
2025-02-25T14:23:42.9397790Z 
2025-02-25T14:23:42.9397880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9397940Z         if err_msg is None:
2025-02-25T14:23:42.9398010Z             if left.shape != right.shape:
2025-02-25T14:23:42.9398080Z                 raise_assert_detail(
2025-02-25T14:23:42.9398200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9398250Z                 )
2025-02-25T14:23:42.9398300Z     
2025-02-25T14:23:42.9398410Z             diff = 0
2025-02-25T14:23:42.9398510Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9398580Z                 # count up differences
2025-02-25T14:23:42.9398720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9398780Z                     diff += 1
2025-02-25T14:23:42.9398830Z     
2025-02-25T14:23:42.9398900Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9399020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9399170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9399310Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9399370Z E           
2025-02-25T14:23:42.9399460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9399680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9399910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9399920Z 
2025-02-25T14:23:42.9400170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9400180Z 
2025-02-25T14:23:42.9400330Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9400330Z 
2025-02-25T14:23:42.9400510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baab110>
2025-02-25T14:23:42.9400650Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>
2025-02-25T14:23:42.9400710Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9400720Z 
2025-02-25T14:23:42.9400830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9400930Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9400990Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9401050Z         try:
2025-02-25T14:23:42.9401170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9401230Z         except KeyError:
2025-02-25T14:23:42.9401350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9401400Z     
2025-02-25T14:23:42.9401470Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9401550Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9401610Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9401730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9401800Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9401880Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9401970Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9402030Z             else:
2025-02-25T14:23:42.9402100Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9402190Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9402200Z 
2025-02-25T14:23:42.9402300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9402400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9402520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9402580Z     ???
2025-02-25T14:23:42.9402670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9402680Z 
2025-02-25T14:23:42.9402730Z >   ???
2025-02-25T14:23:42.9402830Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9402960Z E   
2025-02-25T14:23:42.9403070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9403160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9403220Z E          ...
2025-02-25T14:23:42.9403290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9403400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9403500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9403550Z E          ...
2025-02-25T14:23:42.9403630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9403740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9403870Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9403880Z 
2025-02-25T14:23:42.9403950Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9404160Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-25T14:23:42.9404170Z 
2025-02-25T14:23:42.9404280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9404390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9404480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9404600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9404710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9404790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9404850Z err_msg = None
2025-02-25T14:23:42.9404850Z 
2025-02-25T14:23:42.9404950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9405010Z         if err_msg is None:
2025-02-25T14:23:42.9405080Z             if left.shape != right.shape:
2025-02-25T14:23:42.9405150Z                 raise_assert_detail(
2025-02-25T14:23:42.9405280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9405330Z                 )
2025-02-25T14:23:42.9405380Z     
2025-02-25T14:23:42.9405430Z             diff = 0
2025-02-25T14:23:42.9405520Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9405600Z                 # count up differences
2025-02-25T14:23:42.9405740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9405810Z                     diff += 1
2025-02-25T14:23:42.9405860Z     
2025-02-25T14:23:42.9405930Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9406040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9406190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9406290Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9406340Z E           
2025-02-25T14:23:42.9406440Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9406660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9406890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9406900Z 
2025-02-25T14:23:42.9407150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9407160Z 
2025-02-25T14:23:42.9407400Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9407400Z 
2025-02-25T14:23:42.9407590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baab290>
2025-02-25T14:23:42.9407760Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e052000>, attr = 'j_blues'
2025-02-25T14:23:42.9407760Z 
2025-02-25T14:23:42.9407880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9407970Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9408040Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9408090Z         try:
2025-02-25T14:23:42.9408210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9408690Z         except KeyError:
2025-02-25T14:23:42.9408810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9408860Z     
2025-02-25T14:23:42.9408920Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9409000Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9409070Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9409180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9409250Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9409320Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9409410Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9409460Z             else:
2025-02-25T14:23:42.9409540Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9409630Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9409630Z 
2025-02-25T14:23:42.9409730Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9409830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9409960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9410010Z     ???
2025-02-25T14:23:42.9410110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9410110Z 
2025-02-25T14:23:42.9410160Z >   ???
2025-02-25T14:23:42.9410270Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9410320Z E   
2025-02-25T14:23:42.9410420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9410520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9410570Z E          ...
2025-02-25T14:23:42.9410640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9410740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9410830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9410880Z E          ...
2025-02-25T14:23:42.9410960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9411060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9411140Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9411150Z 
2025-02-25T14:23:42.9411210Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9411380Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-25T14:23:42.9411390Z 
2025-02-25T14:23:42.9411500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9411610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9411690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9411810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9411920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9412000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9412060Z err_msg = None
2025-02-25T14:23:42.9412060Z 
2025-02-25T14:23:42.9412160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9412300Z         if err_msg is None:
2025-02-25T14:23:42.9412370Z             if left.shape != right.shape:
2025-02-25T14:23:42.9412440Z                 raise_assert_detail(
2025-02-25T14:23:42.9412570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9412620Z                 )
2025-02-25T14:23:42.9412670Z     
2025-02-25T14:23:42.9412730Z             diff = 0
2025-02-25T14:23:42.9412830Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9412890Z                 # count up differences
2025-02-25T14:23:42.9413040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9413170Z                     diff += 1
2025-02-25T14:23:42.9413210Z     
2025-02-25T14:23:42.9413280Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9413400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9413540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9413640Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9413690Z E           
2025-02-25T14:23:42.9413780Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9414000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9414220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9414230Z 
2025-02-25T14:23:42.9414490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9414490Z 
2025-02-25T14:23:42.9414650Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9414650Z 
2025-02-25T14:23:42.9414840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4050>
2025-02-25T14:23:42.9415010Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>, attr = 'lines'
2025-02-25T14:23:42.9415010Z 
2025-02-25T14:23:42.9415130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9415220Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9415290Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9415340Z         try:
2025-02-25T14:23:42.9415460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9415520Z         except KeyError:
2025-02-25T14:23:42.9415640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9415700Z     
2025-02-25T14:23:42.9415760Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9415840Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9415900Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9416020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9416080Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9416160Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9416250Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9416300Z             else:
2025-02-25T14:23:42.9416370Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9416470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9416470Z 
2025-02-25T14:23:42.9416570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9416670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9416990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9417040Z     ???
2025-02-25T14:23:42.9417140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9417140Z 
2025-02-25T14:23:42.9417190Z >   ???
2025-02-25T14:23:42.9417300Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9417350Z E   
2025-02-25T14:23:42.9417460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9417550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9417600Z E          ...
2025-02-25T14:23:42.9417680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9417880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9417980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9418030Z E          ...
2025-02-25T14:23:42.9418110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9418220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9418320Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9418320Z 
2025-02-25T14:23:42.9418390Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9418620Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-25T14:23:42.9418620Z 
2025-02-25T14:23:42.9418810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4110>
2025-02-25T14:23:42.9418930Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>
2025-02-25T14:23:42.9419000Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9419010Z 
2025-02-25T14:23:42.9419120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9419220Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9419290Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9419340Z         try:
2025-02-25T14:23:42.9419460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9419520Z         except KeyError:
2025-02-25T14:23:42.9419630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9419680Z     
2025-02-25T14:23:42.9419750Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9419820Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9419890Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9419990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9420070Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9420140Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9420230Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9420230Z 
2025-02-25T14:23:42.9420340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9420440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9420440Z 
2025-02-25T14:23:42.9420560Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9420630Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9420730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9420800Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9420920Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9420980Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9421070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9421140Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9421190Z err_msg = None
2025-02-25T14:23:42.9421190Z 
2025-02-25T14:23:42.9421280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9421340Z         if err_msg is None:
2025-02-25T14:23:42.9421410Z             if left.shape != right.shape:
2025-02-25T14:23:42.9421540Z                 raise_assert_detail(
2025-02-25T14:23:42.9421660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9421710Z                 )
2025-02-25T14:23:42.9421770Z     
2025-02-25T14:23:42.9421820Z             diff = 0
2025-02-25T14:23:42.9421910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9421990Z                 # count up differences
2025-02-25T14:23:42.9422130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9422180Z                     diff += 1
2025-02-25T14:23:42.9422230Z     
2025-02-25T14:23:42.9422350Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9422470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9422610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9422690Z E           AssertionError: Series are different
2025-02-25T14:23:42.9422750Z E           
2025-02-25T14:23:42.9422830Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9423150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9423430Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9423710Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9423720Z 
2025-02-25T14:23:42.9423970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9424190Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-25T14:23:42.9424190Z 
2025-02-25T14:23:42.9424370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad41d0>
2025-02-25T14:23:42.9424510Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>
2025-02-25T14:23:42.9424580Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9424580Z 
2025-02-25T14:23:42.9424690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9424790Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9424850Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9424900Z         try:
2025-02-25T14:23:42.9425020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9425070Z         except KeyError:
2025-02-25T14:23:42.9425190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9425230Z     
2025-02-25T14:23:42.9425300Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9425370Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9425440Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9425550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9425610Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9425680Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9425770Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9425850Z 
2025-02-25T14:23:42.9425950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9426040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9426050Z 
2025-02-25T14:23:42.9426160Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9426230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9426320Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9426380Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9426490Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9426630Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9426730Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9426790Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9426840Z err_msg = None
2025-02-25T14:23:42.9426850Z 
2025-02-25T14:23:42.9426930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9426990Z         if err_msg is None:
2025-02-25T14:23:42.9427060Z             if left.shape != right.shape:
2025-02-25T14:23:42.9427130Z                 raise_assert_detail(
2025-02-25T14:23:42.9427240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9427290Z                 )
2025-02-25T14:23:42.9427340Z     
2025-02-25T14:23:42.9427390Z             diff = 0
2025-02-25T14:23:42.9427480Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9435200Z                 # count up differences
2025-02-25T14:23:42.9435440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9435500Z                     diff += 1
2025-02-25T14:23:42.9435560Z     
2025-02-25T14:23:42.9435630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9435770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9435920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9436010Z E           AssertionError: Series are different
2025-02-25T14:23:42.9436050Z E           
2025-02-25T14:23:42.9436150Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9436530Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9436860Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9437180Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9437190Z 
2025-02-25T14:23:42.9437440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9437620Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-25T14:23:42.9437620Z 
2025-02-25T14:23:42.9438020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9438140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9438220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9438340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9438450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9438530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9438580Z err_msg = None
2025-02-25T14:23:42.9438690Z 
2025-02-25T14:23:42.9438790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9438860Z         if err_msg is None:
2025-02-25T14:23:42.9438940Z             if left.shape != right.shape:
2025-02-25T14:23:42.9439000Z                 raise_assert_detail(
2025-02-25T14:23:42.9439130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9439180Z                 )
2025-02-25T14:23:42.9439230Z     
2025-02-25T14:23:42.9439290Z             diff = 0
2025-02-25T14:23:42.9439380Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9439450Z                 # count up differences
2025-02-25T14:23:42.9439600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9439660Z                     diff += 1
2025-02-25T14:23:42.9439700Z     
2025-02-25T14:23:42.9439770Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9439880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9440030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9440130Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9440180Z E           
2025-02-25T14:23:42.9440280Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9440510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9440740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9440750Z 
2025-02-25T14:23:42.9441000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9441000Z 
2025-02-25T14:23:42.9441140Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9441140Z 
2025-02-25T14:23:42.9441330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4410>
2025-02-25T14:23:42.9441480Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>, attr = 'nu'
2025-02-25T14:23:42.9441480Z 
2025-02-25T14:23:42.9441600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9441690Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9441750Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9441800Z         try:
2025-02-25T14:23:42.9441920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9441980Z         except KeyError:
2025-02-25T14:23:42.9442090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9442140Z     
2025-02-25T14:23:42.9442210Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9442280Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9442410Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9442530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9442600Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9442680Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9442770Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9442780Z 
2025-02-25T14:23:42.9442880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9442980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9443090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9443200Z     ???
2025-02-25T14:23:42.9443300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9443300Z 
2025-02-25T14:23:42.9443350Z >   ???
2025-02-25T14:23:42.9443450Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9443500Z E   
2025-02-25T14:23:42.9443610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9443710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9443760Z E          ...
2025-02-25T14:23:42.9443830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9443940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9444030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9444080Z E          ...
2025-02-25T14:23:42.9444160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9444270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9444350Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9444360Z 
2025-02-25T14:23:42.9444430Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9444620Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-25T14:23:42.9444620Z 
2025-02-25T14:23:42.9444740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9444850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9444930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9445050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9445160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9445240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9445290Z err_msg = None
2025-02-25T14:23:42.9445300Z 
2025-02-25T14:23:42.9445390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9445460Z         if err_msg is None:
2025-02-25T14:23:42.9445530Z             if left.shape != right.shape:
2025-02-25T14:23:42.9445600Z                 raise_assert_detail(
2025-02-25T14:23:42.9445720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9445770Z                 )
2025-02-25T14:23:42.9445820Z     
2025-02-25T14:23:42.9445880Z             diff = 0
2025-02-25T14:23:42.9445970Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9446040Z                 # count up differences
2025-02-25T14:23:42.9446180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9446240Z                     diff += 1
2025-02-25T14:23:42.9446290Z     
2025-02-25T14:23:42.9446360Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9446480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9446630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9446720Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9446770Z E           
2025-02-25T14:23:42.9446860Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9447150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9447370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9447430Z 
2025-02-25T14:23:42.9447690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9447690Z 
2025-02-25T14:23:42.9447840Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9447840Z 
2025-02-25T14:23:42.9448020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad44d0>
2025-02-25T14:23:42.9448150Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>
2025-02-25T14:23:42.9448210Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9448220Z 
2025-02-25T14:23:42.9448330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9448420Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9448490Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9448540Z         try:
2025-02-25T14:23:42.9448660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9448730Z         except KeyError:
2025-02-25T14:23:42.9448850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9448900Z     
2025-02-25T14:23:42.9448970Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9449040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9449110Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9449230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9449300Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9449370Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9449460Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9449460Z 
2025-02-25T14:23:42.9449560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9449650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9449770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9449830Z     ???
2025-02-25T14:23:42.9449930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9449930Z 
2025-02-25T14:23:42.9449980Z >   ???
2025-02-25T14:23:42.9450080Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9450130Z E   
2025-02-25T14:23:42.9450240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9450330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9450390Z E          ...
2025-02-25T14:23:42.9450460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9450570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9450670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9450720Z E          ...
2025-02-25T14:23:42.9450800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9450900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9450980Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9450990Z 
2025-02-25T14:23:42.9451060Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9451230Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-25T14:23:42.9451230Z 
2025-02-25T14:23:42.9451630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9451740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9451830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9451950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9452060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9452140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9452200Z err_msg = None
2025-02-25T14:23:42.9452280Z 
2025-02-25T14:23:42.9452370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9452430Z         if err_msg is None:
2025-02-25T14:23:42.9452510Z             if left.shape != right.shape:
2025-02-25T14:23:42.9452580Z                 raise_assert_detail(
2025-02-25T14:23:42.9452710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9452760Z                 )
2025-02-25T14:23:42.9452810Z     
2025-02-25T14:23:42.9452870Z             diff = 0
2025-02-25T14:23:42.9452960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9453030Z                 # count up differences
2025-02-25T14:23:42.9453170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9453230Z                     diff += 1
2025-02-25T14:23:42.9453280Z     
2025-02-25T14:23:42.9453350Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9453460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9453610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9453700Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9453750Z E           
2025-02-25T14:23:42.9453850Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9454080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9454310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9454320Z 
2025-02-25T14:23:42.9454610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9454630Z 
2025-02-25T14:23:42.9454780Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9454790Z 
2025-02-25T14:23:42.9454970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4590>
2025-02-25T14:23:42.9455130Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>, attr = 'f_lu'
2025-02-25T14:23:42.9455140Z 
2025-02-25T14:23:42.9455250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9455340Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9455420Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9455470Z         try:
2025-02-25T14:23:42.9455590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9455680Z         except KeyError:
2025-02-25T14:23:42.9455810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9455870Z     
2025-02-25T14:23:42.9455940Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9456010Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9456180Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9456300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9456360Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9456440Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9456530Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9456540Z 
2025-02-25T14:23:42.9456630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9456730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9456850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9456980Z     ???
2025-02-25T14:23:42.9457070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9457070Z 
2025-02-25T14:23:42.9457120Z >   ???
2025-02-25T14:23:42.9457220Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9457270Z E   
2025-02-25T14:23:42.9457380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9457480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9457530Z E          ...
2025-02-25T14:23:42.9457600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9457700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9457790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9457850Z E          ...
2025-02-25T14:23:42.9457920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9458020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9458110Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9458110Z 
2025-02-25T14:23:42.9458180Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9458360Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-25T14:23:42.9458360Z 
2025-02-25T14:23:42.9458470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9458590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9458660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9458780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9458880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9458960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9459010Z err_msg = None
2025-02-25T14:23:42.9459020Z 
2025-02-25T14:23:42.9459110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9459170Z         if err_msg is None:
2025-02-25T14:23:42.9459250Z             if left.shape != right.shape:
2025-02-25T14:23:42.9459310Z                 raise_assert_detail(
2025-02-25T14:23:42.9459430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9459480Z                 )
2025-02-25T14:23:42.9459530Z     
2025-02-25T14:23:42.9459580Z             diff = 0
2025-02-25T14:23:42.9459670Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9459740Z                 # count up differences
2025-02-25T14:23:42.9459880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9459940Z                     diff += 1
2025-02-25T14:23:42.9459980Z     
2025-02-25T14:23:42.9460060Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9460180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9460320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9460420Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9460470Z E           
2025-02-25T14:23:42.9460560Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9460850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9461080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9461130Z 
2025-02-25T14:23:42.9461390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9461400Z 
2025-02-25T14:23:42.9461550Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9461550Z 
2025-02-25T14:23:42.9461730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4d10>
2025-02-25T14:23:42.9461880Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>
2025-02-25T14:23:42.9461950Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9461950Z 
2025-02-25T14:23:42.9462070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9462170Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9462240Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9462290Z         try:
2025-02-25T14:23:42.9462400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9462460Z         except KeyError:
2025-02-25T14:23:42.9462580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9462630Z     
2025-02-25T14:23:42.9462700Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9462780Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9462860Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9462970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9463040Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9463120Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9463210Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9463260Z             else:
2025-02-25T14:23:42.9463330Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9463450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9463450Z 
2025-02-25T14:23:42.9463550Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9463650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9463760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9463820Z     ???
2025-02-25T14:23:42.9463910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9463920Z 
2025-02-25T14:23:42.9463960Z >   ???
2025-02-25T14:23:42.9464070Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9464110Z E   
2025-02-25T14:23:42.9464220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9464310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9464370Z E          ...
2025-02-25T14:23:42.9464440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9464540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9464630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9464690Z E          ...
2025-02-25T14:23:42.9464770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9464870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9464960Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9465070Z 
2025-02-25T14:23:42.9465140Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9465320Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-25T14:23:42.9465320Z 
2025-02-25T14:23:42.9465430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9465540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9465620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9465730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9465840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9465980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9466040Z err_msg = None
2025-02-25T14:23:42.9466040Z 
2025-02-25T14:23:42.9466120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9466190Z         if err_msg is None:
2025-02-25T14:23:42.9466260Z             if left.shape != right.shape:
2025-02-25T14:23:42.9466330Z                 raise_assert_detail(
2025-02-25T14:23:42.9466440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9466490Z                 )
2025-02-25T14:23:42.9466540Z     
2025-02-25T14:23:42.9466590Z             diff = 0
2025-02-25T14:23:42.9466680Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9466750Z                 # count up differences
2025-02-25T14:23:42.9466890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9466950Z                     diff += 1
2025-02-25T14:23:42.9467000Z     
2025-02-25T14:23:42.9467070Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9467180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9467320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9467410Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9467470Z E           
2025-02-25T14:23:42.9467550Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9467770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9467980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9467990Z 
2025-02-25T14:23:42.9468240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9468240Z 
2025-02-25T14:23:42.9468380Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9468380Z 
2025-02-25T14:23:42.9468560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4dd0>
2025-02-25T14:23:42.9468690Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>
2025-02-25T14:23:42.9468740Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9468740Z 
2025-02-25T14:23:42.9468850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9468940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9469010Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9469060Z         try:
2025-02-25T14:23:42.9469170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9469230Z         except KeyError:
2025-02-25T14:23:42.9469430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9469480Z     
2025-02-25T14:23:42.9469540Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9469620Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9469680Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9469790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9469850Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9469930Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9470020Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9470070Z             else:
2025-02-25T14:23:42.9470210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9470300Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9470300Z 
2025-02-25T14:23:42.9470400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9470490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9470610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9470660Z     ???
2025-02-25T14:23:42.9470760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9470760Z 
2025-02-25T14:23:42.9470810Z >   ???
2025-02-25T14:23:42.9470920Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9470980Z E   
2025-02-25T14:23:42.9471080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9471170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9471220Z E          ...
2025-02-25T14:23:42.9471290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9471400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9471490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9471540Z E          ...
2025-02-25T14:23:42.9471610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9471710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9471800Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9471800Z 
2025-02-25T14:23:42.9471860Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9472030Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-25T14:23:42.9472030Z 
2025-02-25T14:23:42.9472140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9472250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9472340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9472450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9472560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9472640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9472690Z err_msg = None
2025-02-25T14:23:42.9472690Z 
2025-02-25T14:23:42.9472790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9472840Z         if err_msg is None:
2025-02-25T14:23:42.9472920Z             if left.shape != right.shape:
2025-02-25T14:23:42.9472980Z                 raise_assert_detail(
2025-02-25T14:23:42.9473100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9473150Z                 )
2025-02-25T14:23:42.9473200Z     
2025-02-25T14:23:42.9473250Z             diff = 0
2025-02-25T14:23:42.9473340Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9473410Z                 # count up differences
2025-02-25T14:23:42.9473550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9473610Z                     diff += 1
2025-02-25T14:23:42.9473730Z     
2025-02-25T14:23:42.9473810Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9473920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9474060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9474150Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9474200Z E           
2025-02-25T14:23:42.9474290Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9474590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9474900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9474910Z 
2025-02-25T14:23:42.9475150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9475150Z 
2025-02-25T14:23:42.9475290Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9475290Z 
2025-02-25T14:23:42.9475470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad4f50>
2025-02-25T14:23:42.9475640Z plasma = <tardis.plasma.base.BasePlasma object at 0x3019ab350>, attr = 'j_blues'
2025-02-25T14:23:42.9475650Z 
2025-02-25T14:23:42.9475760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9475850Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9475920Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9475970Z         try:
2025-02-25T14:23:42.9476080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9476140Z         except KeyError:
2025-02-25T14:23:42.9476250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9476300Z     
2025-02-25T14:23:42.9476360Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9476440Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9476510Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9476620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9476680Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9476750Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9476850Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9476920Z             else:
2025-02-25T14:23:42.9477000Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9477100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9477110Z 
2025-02-25T14:23:42.9477210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9477310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9477430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9477480Z     ???
2025-02-25T14:23:42.9477590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9477590Z 
2025-02-25T14:23:42.9477640Z >   ???
2025-02-25T14:23:42.9477750Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9477800Z E   
2025-02-25T14:23:42.9477910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9478000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9478050Z E          ...
2025-02-25T14:23:42.9478120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9478230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9478400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9478450Z E          ...
2025-02-25T14:23:42.9478520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9478630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9478710Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9478710Z 
2025-02-25T14:23:42.9478780Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9478950Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-25T14:23:42.9478950Z 
2025-02-25T14:23:42.9479060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9479220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9479310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9479420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9479530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9479610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9479660Z err_msg = None
2025-02-25T14:23:42.9479660Z 
2025-02-25T14:23:42.9479750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9479810Z         if err_msg is None:
2025-02-25T14:23:42.9479890Z             if left.shape != right.shape:
2025-02-25T14:23:42.9479950Z                 raise_assert_detail(
2025-02-25T14:23:42.9480070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9480120Z                 )
2025-02-25T14:23:42.9480170Z     
2025-02-25T14:23:42.9480220Z             diff = 0
2025-02-25T14:23:42.9480310Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9480370Z                 # count up differences
2025-02-25T14:23:42.9480520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9480580Z                     diff += 1
2025-02-25T14:23:42.9480630Z     
2025-02-25T14:23:42.9480690Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9480800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9480950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9481040Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9481090Z E           
2025-02-25T14:23:42.9481180Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9481430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9481670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9481690Z 
2025-02-25T14:23:42.9481940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9481940Z 
2025-02-25T14:23:42.9482080Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9482090Z 
2025-02-25T14:23:42.9482260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad5cd0>
2025-02-25T14:23:42.9482440Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>, attr = 'lines'
2025-02-25T14:23:42.9482440Z 
2025-02-25T14:23:42.9482550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9482740Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9482810Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9482860Z         try:
2025-02-25T14:23:42.9482980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9483040Z         except KeyError:
2025-02-25T14:23:42.9483150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9483200Z     
2025-02-25T14:23:42.9483270Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9483350Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9483410Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9483600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9483670Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9483740Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9483830Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9483890Z             else:
2025-02-25T14:23:42.9490290Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9490440Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9490440Z 
2025-02-25T14:23:42.9490540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9490650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9490770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9490820Z     ???
2025-02-25T14:23:42.9490920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9490920Z 
2025-02-25T14:23:42.9490970Z >   ???
2025-02-25T14:23:42.9491080Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9491130Z E   
2025-02-25T14:23:42.9491240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9491340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9491390Z E          ...
2025-02-25T14:23:42.9491470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9491570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9491670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9491720Z E          ...
2025-02-25T14:23:42.9491790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9491890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9491980Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9491980Z 
2025-02-25T14:23:42.9492050Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9492270Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-25T14:23:42.9492270Z 
2025-02-25T14:23:42.9492450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad5d90>
2025-02-25T14:23:42.9492590Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>
2025-02-25T14:23:42.9492660Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9492660Z 
2025-02-25T14:23:42.9492770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9492860Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9492930Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9492980Z         try:
2025-02-25T14:23:42.9493090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9493150Z         except KeyError:
2025-02-25T14:23:42.9493270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9493320Z     
2025-02-25T14:23:42.9493380Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9493460Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9493530Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9493650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9493710Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9494020Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9494120Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9494130Z 
2025-02-25T14:23:42.9494230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9494330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9494330Z 
2025-02-25T14:23:42.9494460Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9494520Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9494610Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9495010Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9495130Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9495210Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9495340Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9495420Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9495510Z err_msg = None
2025-02-25T14:23:42.9495510Z 
2025-02-25T14:23:42.9495600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9495660Z         if err_msg is None:
2025-02-25T14:23:42.9495740Z             if left.shape != right.shape:
2025-02-25T14:23:42.9495800Z                 raise_assert_detail(
2025-02-25T14:23:42.9495930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9495980Z                 )
2025-02-25T14:23:42.9496040Z     
2025-02-25T14:23:42.9496090Z             diff = 0
2025-02-25T14:23:42.9496190Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9496300Z                 # count up differences
2025-02-25T14:23:42.9496470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9496560Z                     diff += 1
2025-02-25T14:23:42.9496650Z     
2025-02-25T14:23:42.9496760Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9496920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9497090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9497190Z E           AssertionError: Series are different
2025-02-25T14:23:42.9497240Z E           
2025-02-25T14:23:42.9497350Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9497740Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9498090Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9498410Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9498430Z 
2025-02-25T14:23:42.9498720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9498950Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-25T14:23:42.9499030Z 
2025-02-25T14:23:42.9499220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad5e50>
2025-02-25T14:23:42.9499380Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>
2025-02-25T14:23:42.9499470Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9499480Z 
2025-02-25T14:23:42.9499620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9499730Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9499810Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9499860Z         try:
2025-02-25T14:23:42.9499970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9500160Z         except KeyError:
2025-02-25T14:23:42.9500280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9500330Z     
2025-02-25T14:23:42.9500390Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9500460Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9500530Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9500650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9500710Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9500800Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9500900Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9500900Z 
2025-02-25T14:23:42.9501000Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9501110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9501120Z 
2025-02-25T14:23:42.9501240Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9501310Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9501410Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9501470Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9501590Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9501660Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9501750Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9501820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9501870Z err_msg = None
2025-02-25T14:23:42.9501870Z 
2025-02-25T14:23:42.9501960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9502020Z         if err_msg is None:
2025-02-25T14:23:42.9502090Z             if left.shape != right.shape:
2025-02-25T14:23:42.9502150Z                 raise_assert_detail(
2025-02-25T14:23:42.9502270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9502330Z                 )
2025-02-25T14:23:42.9502380Z     
2025-02-25T14:23:42.9502430Z             diff = 0
2025-02-25T14:23:42.9502520Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9502590Z                 # count up differences
2025-02-25T14:23:42.9502730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9502790Z                     diff += 1
2025-02-25T14:23:42.9502840Z     
2025-02-25T14:23:42.9502910Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9503040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9503200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9503300Z E           AssertionError: Series are different
2025-02-25T14:23:42.9503350Z E           
2025-02-25T14:23:42.9503430Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9503780Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9504230Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9504550Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9504640Z 
2025-02-25T14:23:42.9504910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9505100Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-25T14:23:42.9505110Z 
2025-02-25T14:23:42.9505250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9505370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9505450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9505580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9505690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9505780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9505830Z err_msg = None
2025-02-25T14:23:42.9505830Z 
2025-02-25T14:23:42.9505930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9506000Z         if err_msg is None:
2025-02-25T14:23:42.9506090Z             if left.shape != right.shape:
2025-02-25T14:23:42.9506160Z                 raise_assert_detail(
2025-02-25T14:23:42.9506280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9506330Z                 )
2025-02-25T14:23:42.9506380Z     
2025-02-25T14:23:42.9506440Z             diff = 0
2025-02-25T14:23:42.9506520Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9506600Z                 # count up differences
2025-02-25T14:23:42.9506760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9506840Z                     diff += 1
2025-02-25T14:23:42.9506910Z     
2025-02-25T14:23:42.9506980Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9507090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9507240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9507330Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9507380Z E           
2025-02-25T14:23:42.9507480Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9507710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9507940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9508020Z 
2025-02-25T14:23:42.9508270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9508270Z 
2025-02-25T14:23:42.9508410Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9508410Z 
2025-02-25T14:23:42.9508590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6090>
2025-02-25T14:23:42.9508740Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>, attr = 'nu'
2025-02-25T14:23:42.9508800Z 
2025-02-25T14:23:42.9508920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9509010Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9509080Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9509130Z         try:
2025-02-25T14:23:42.9509260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9509350Z         except KeyError:
2025-02-25T14:23:42.9509470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9509520Z     
2025-02-25T14:23:42.9509580Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9509660Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9509720Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9509850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9509920Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9510030Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9510140Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9510150Z 
2025-02-25T14:23:42.9510250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9510350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9510470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9510520Z     ???
2025-02-25T14:23:42.9510620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9510620Z 
2025-02-25T14:23:42.9510670Z >   ???
2025-02-25T14:23:42.9510770Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9510820Z E   
2025-02-25T14:23:42.9510920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9511030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9511090Z E          ...
2025-02-25T14:23:42.9511160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9511270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9511370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9511430Z E          ...
2025-02-25T14:23:42.9511500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9511600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9511690Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9511690Z 
2025-02-25T14:23:42.9511780Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9511990Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-25T14:23:42.9512000Z 
2025-02-25T14:23:42.9512110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9512230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9512330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9512450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9512560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9512640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9512800Z err_msg = None
2025-02-25T14:23:42.9512810Z 
2025-02-25T14:23:42.9512890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9512950Z         if err_msg is None:
2025-02-25T14:23:42.9513020Z             if left.shape != right.shape:
2025-02-25T14:23:42.9513090Z                 raise_assert_detail(
2025-02-25T14:23:42.9513210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9513260Z                 )
2025-02-25T14:23:42.9513310Z     
2025-02-25T14:23:42.9513360Z             diff = 0
2025-02-25T14:23:42.9513460Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9513610Z                 # count up differences
2025-02-25T14:23:42.9513750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9513820Z                     diff += 1
2025-02-25T14:23:42.9513870Z     
2025-02-25T14:23:42.9513950Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9514070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9514220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9514330Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9514510Z E           
2025-02-25T14:23:42.9514600Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9514830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9515070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9515080Z 
2025-02-25T14:23:42.9515350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9515360Z 
2025-02-25T14:23:42.9515500Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9515500Z 
2025-02-25T14:23:42.9515680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6150>
2025-02-25T14:23:42.9515810Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>
2025-02-25T14:23:42.9515870Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9515870Z 
2025-02-25T14:23:42.9515990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9516090Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9516180Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9516230Z         try:
2025-02-25T14:23:42.9516350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9516410Z         except KeyError:
2025-02-25T14:23:42.9516530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9516580Z     
2025-02-25T14:23:42.9516650Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9516720Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9516790Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9516900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9516980Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9517060Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9517150Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9517150Z 
2025-02-25T14:23:42.9517260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9517360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9517610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9517660Z     ???
2025-02-25T14:23:42.9517750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9517760Z 
2025-02-25T14:23:42.9517800Z >   ???
2025-02-25T14:23:42.9517910Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9517970Z E   
2025-02-25T14:23:42.9518070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9518170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9518220Z E          ...
2025-02-25T14:23:42.9518290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9518520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9518620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9518670Z E          ...
2025-02-25T14:23:42.9518750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9518870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9518960Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9518960Z 
2025-02-25T14:23:42.9519030Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9519210Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-25T14:23:42.9519220Z 
2025-02-25T14:23:42.9519330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9519440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9519520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9519650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9519770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9519850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9519900Z err_msg = None
2025-02-25T14:23:42.9519910Z 
2025-02-25T14:23:42.9520010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9520070Z         if err_msg is None:
2025-02-25T14:23:42.9520150Z             if left.shape != right.shape:
2025-02-25T14:23:42.9520210Z                 raise_assert_detail(
2025-02-25T14:23:42.9520330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9520390Z                 )
2025-02-25T14:23:42.9520450Z     
2025-02-25T14:23:42.9520500Z             diff = 0
2025-02-25T14:23:42.9520590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9520670Z                 # count up differences
2025-02-25T14:23:42.9520810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9520860Z                     diff += 1
2025-02-25T14:23:42.9520910Z     
2025-02-25T14:23:42.9520980Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9521090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9521250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9521340Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9521390Z E           
2025-02-25T14:23:42.9521490Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9521720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9521950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9522030Z 
2025-02-25T14:23:42.9522290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9522300Z 
2025-02-25T14:23:42.9522440Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9522440Z 
2025-02-25T14:23:42.9522610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6210>
2025-02-25T14:23:42.9522780Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>, attr = 'f_lu'
2025-02-25T14:23:42.9522850Z 
2025-02-25T14:23:42.9522970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9523070Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9523130Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9523180Z         try:
2025-02-25T14:23:42.9523310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9523380Z         except KeyError:
2025-02-25T14:23:42.9523510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9523560Z     
2025-02-25T14:23:42.9523630Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9523700Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9523770Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9523880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9523940Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9524010Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9524110Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9524110Z 
2025-02-25T14:23:42.9524210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9524310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9524440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9524500Z     ???
2025-02-25T14:23:42.9524600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9524600Z 
2025-02-25T14:23:42.9524650Z >   ???
2025-02-25T14:23:42.9524750Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9524800Z E   
2025-02-25T14:23:42.9524910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9525010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9525060Z E          ...
2025-02-25T14:23:42.9525150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9525280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9525390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9525450Z E          ...
2025-02-25T14:23:42.9525520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9525630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9525710Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9525710Z 
2025-02-25T14:23:42.9525790Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9525970Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-25T14:23:42.9525970Z 
2025-02-25T14:23:42.9526090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9526210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9526290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9526420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9526530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9526610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9526740Z err_msg = None
2025-02-25T14:23:42.9526740Z 
2025-02-25T14:23:42.9526830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9526890Z         if err_msg is None:
2025-02-25T14:23:42.9526960Z             if left.shape != right.shape:
2025-02-25T14:23:42.9527030Z                 raise_assert_detail(
2025-02-25T14:23:42.9527140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9527200Z                 )
2025-02-25T14:23:42.9527260Z     
2025-02-25T14:23:42.9527320Z             diff = 0
2025-02-25T14:23:42.9527410Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9527550Z                 # count up differences
2025-02-25T14:23:42.9527690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9527750Z                     diff += 1
2025-02-25T14:23:42.9527800Z     
2025-02-25T14:23:42.9527870Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9527990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9528120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9528220Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9528260Z E           
2025-02-25T14:23:42.9528360Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9528580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9528820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9528830Z 
2025-02-25T14:23:42.9529080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9529080Z 
2025-02-25T14:23:42.9529220Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9529220Z 
2025-02-25T14:23:42.9529400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6990>
2025-02-25T14:23:42.9529540Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>
2025-02-25T14:23:42.9529600Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9529600Z 
2025-02-25T14:23:42.9529730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9529830Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9529910Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9529960Z         try:
2025-02-25T14:23:42.9530080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9530140Z         except KeyError:
2025-02-25T14:23:42.9530250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9530310Z     
2025-02-25T14:23:42.9530380Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9530450Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9530530Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9530650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9530710Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9530780Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9530890Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9530970Z             else:
2025-02-25T14:23:42.9531050Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9531130Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9531390Z 
2025-02-25T14:23:42.9531500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9531590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9531710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9531760Z     ???
2025-02-25T14:23:42.9531860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9531860Z 
2025-02-25T14:23:42.9531910Z >   ???
2025-02-25T14:23:42.9532010Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9532070Z E   
2025-02-25T14:23:42.9532180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9532410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9532470Z E          ...
2025-02-25T14:23:42.9532540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9532650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9532740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9532800Z E          ...
2025-02-25T14:23:42.9532870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9532970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9533050Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9533060Z 
2025-02-25T14:23:42.9533130Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9533330Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-25T14:23:42.9533340Z 
2025-02-25T14:23:42.9533460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9533580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9533730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9533840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9533950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9534040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9534110Z err_msg = None
2025-02-25T14:23:42.9534120Z 
2025-02-25T14:23:42.9534210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9534280Z         if err_msg is None:
2025-02-25T14:23:42.9534350Z             if left.shape != right.shape:
2025-02-25T14:23:42.9534410Z                 raise_assert_detail(
2025-02-25T14:23:42.9534550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9534610Z                 )
2025-02-25T14:23:42.9534660Z     
2025-02-25T14:23:42.9534710Z             diff = 0
2025-02-25T14:23:42.9534800Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9534860Z                 # count up differences
2025-02-25T14:23:42.9535010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9535070Z                     diff += 1
2025-02-25T14:23:42.9535120Z     
2025-02-25T14:23:42.9535190Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9535320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9535460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9535550Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9535600Z E           
2025-02-25T14:23:42.9535690Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9535950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9536330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9536330Z 
2025-02-25T14:23:42.9536580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9536580Z 
2025-02-25T14:23:42.9536720Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9536720Z 
2025-02-25T14:23:42.9536960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6a50>
2025-02-25T14:23:42.9537090Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>
2025-02-25T14:23:42.9537150Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9537150Z 
2025-02-25T14:23:42.9537280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9537390Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9537450Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9537500Z         try:
2025-02-25T14:23:42.9537620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9537680Z         except KeyError:
2025-02-25T14:23:42.9537790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9537840Z     
2025-02-25T14:23:42.9537900Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9537980Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9538040Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9538150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9538220Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9538290Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9538380Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9538430Z             else:
2025-02-25T14:23:42.9538510Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9538590Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9538600Z 
2025-02-25T14:23:42.9538700Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9538810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9538930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9538970Z     ???
2025-02-25T14:23:42.9539070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9539070Z 
2025-02-25T14:23:42.9539120Z >   ???
2025-02-25T14:23:42.9539220Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9539270Z E   
2025-02-25T14:23:42.9539370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9539460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9539510Z E          ...
2025-02-25T14:23:42.9539590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9539690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9539780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9539830Z E          ...
2025-02-25T14:23:42.9539900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9540000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9540080Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9540080Z 
2025-02-25T14:23:42.9540150Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9540320Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-25T14:23:42.9540320Z 
2025-02-25T14:23:42.9540430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9540540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9540690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9540810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9540910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9541000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9541050Z err_msg = None
2025-02-25T14:23:42.9541050Z 
2025-02-25T14:23:42.9541140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9541210Z         if err_msg is None:
2025-02-25T14:23:42.9541340Z             if left.shape != right.shape:
2025-02-25T14:23:42.9541410Z                 raise_assert_detail(
2025-02-25T14:23:42.9541530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9541580Z                 )
2025-02-25T14:23:42.9541650Z     
2025-02-25T14:23:42.9541710Z             diff = 0
2025-02-25T14:23:42.9541800Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9557620Z                 # count up differences
2025-02-25T14:23:42.9558480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9558710Z                     diff += 1
2025-02-25T14:23:42.9558870Z     
2025-02-25T14:23:42.9559130Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9559450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9559850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9560150Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9560330Z E           
2025-02-25T14:23:42.9560590Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9561230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9561880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9561890Z 
2025-02-25T14:23:42.9562580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9562610Z 
2025-02-25T14:23:42.9562980Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9562990Z 
2025-02-25T14:23:42.9563490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad6bd0>
2025-02-25T14:23:42.9563940Z plasma = <tardis.plasma.base.BasePlasma object at 0x300feca10>, attr = 'j_blues'
2025-02-25T14:23:42.9563950Z 
2025-02-25T14:23:42.9564260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9564510Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9564700Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9564860Z         try:
2025-02-25T14:23:42.9565180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9565370Z         except KeyError:
2025-02-25T14:23:42.9565690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9565850Z     
2025-02-25T14:23:42.9566040Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9566250Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9566450Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9566750Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9567550Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9567760Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9568000Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9568160Z             else:
2025-02-25T14:23:42.9568360Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9568600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9568610Z 
2025-02-25T14:23:42.9568890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9569130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9569450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9569820Z     ???
2025-02-25T14:23:42.9570070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9570080Z 
2025-02-25T14:23:42.9570220Z >   ???
2025-02-25T14:23:42.9570500Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9570660Z E   
2025-02-25T14:23:42.9570950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9571190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9571350Z E          ...
2025-02-25T14:23:42.9571550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9571830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9572080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9572240Z E          ...
2025-02-25T14:23:42.9572440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9572720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9572960Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9572970Z 
2025-02-25T14:23:42.9573160Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9573670Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-25T14:23:42.9573690Z 
2025-02-25T14:23:42.9574000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9574280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9574500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9574800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9575090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9575300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9575480Z err_msg = None
2025-02-25T14:23:42.9575490Z 
2025-02-25T14:23:42.9575730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9575910Z         if err_msg is None:
2025-02-25T14:23:42.9576130Z             if left.shape != right.shape:
2025-02-25T14:23:42.9576310Z                 raise_assert_detail(
2025-02-25T14:23:42.9576640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9576790Z                 )
2025-02-25T14:23:42.9576950Z     
2025-02-25T14:23:42.9577120Z             diff = 0
2025-02-25T14:23:42.9577360Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9577550Z                 # count up differences
2025-02-25T14:23:42.9577930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9578110Z                     diff += 1
2025-02-25T14:23:42.9578260Z     
2025-02-25T14:23:42.9578460Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9578780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9579170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9579420Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9579590Z E           
2025-02-25T14:23:42.9580170Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9580780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9581410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9581610Z 
2025-02-25T14:23:42.9582290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9582300Z 
2025-02-25T14:23:42.9582670Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9582690Z 
2025-02-25T14:23:42.9583140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7950>
2025-02-25T14:23:42.9583590Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>, attr = 'lines'
2025-02-25T14:23:42.9583590Z 
2025-02-25T14:23:42.9583890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9584140Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9584330Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9584480Z         try:
2025-02-25T14:23:42.9584790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9584970Z         except KeyError:
2025-02-25T14:23:42.9585270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9585410Z     
2025-02-25T14:23:42.9585600Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9585950Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9586150Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9586440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9586630Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9586830Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9587070Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9587230Z             else:
2025-02-25T14:23:42.9587420Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9587660Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9587670Z 
2025-02-25T14:23:42.9587940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9588190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9588510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9588670Z     ???
2025-02-25T14:23:42.9588920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9588930Z 
2025-02-25T14:23:42.9589090Z >   ???
2025-02-25T14:23:42.9589360Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9589540Z E   
2025-02-25T14:23:42.9589830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9590070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9590240Z E          ...
2025-02-25T14:23:42.9590660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9590950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9591060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9591130Z E          ...
2025-02-25T14:23:42.9591210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9591320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9591410Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9591740Z 
2025-02-25T14:23:42.9591820Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9592070Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-25T14:23:42.9592080Z 
2025-02-25T14:23:42.9592260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7a10>
2025-02-25T14:23:42.9592400Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>
2025-02-25T14:23:42.9592470Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9592470Z 
2025-02-25T14:23:42.9592590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9592690Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9592870Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9592930Z         try:
2025-02-25T14:23:42.9593050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9593120Z         except KeyError:
2025-02-25T14:23:42.9593240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9593290Z     
2025-02-25T14:23:42.9593360Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9593440Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9593500Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9593620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9593680Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9593750Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9593840Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9593850Z 
2025-02-25T14:23:42.9593950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9594050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9594050Z 
2025-02-25T14:23:42.9594170Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9594240Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9594340Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9594410Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9594530Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9594600Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9594700Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9594770Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9594830Z err_msg = None
2025-02-25T14:23:42.9594830Z 
2025-02-25T14:23:42.9594920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9594990Z         if err_msg is None:
2025-02-25T14:23:42.9595070Z             if left.shape != right.shape:
2025-02-25T14:23:42.9595130Z                 raise_assert_detail(
2025-02-25T14:23:42.9595260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9595310Z                 )
2025-02-25T14:23:42.9595360Z     
2025-02-25T14:23:42.9595410Z             diff = 0
2025-02-25T14:23:42.9595510Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9595580Z                 # count up differences
2025-02-25T14:23:42.9595740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9595800Z                     diff += 1
2025-02-25T14:23:42.9595850Z     
2025-02-25T14:23:42.9595920Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9596030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9596180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9596260Z E           AssertionError: Series are different
2025-02-25T14:23:42.9596310Z E           
2025-02-25T14:23:42.9596400Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9596720Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9597110Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9597460Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9597470Z 
2025-02-25T14:23:42.9597740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9597970Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-25T14:23:42.9597980Z 
2025-02-25T14:23:42.9598160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7ad0>
2025-02-25T14:23:42.9598290Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>
2025-02-25T14:23:42.9598360Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9598360Z 
2025-02-25T14:23:42.9598480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9598580Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9598640Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9598690Z         try:
2025-02-25T14:23:42.9598830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9598890Z         except KeyError:
2025-02-25T14:23:42.9599000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9599050Z     
2025-02-25T14:23:42.9599120Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9599190Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9599260Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9599370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9599440Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9599510Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9599600Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9599610Z 
2025-02-25T14:23:42.9599710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9599810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9599820Z 
2025-02-25T14:23:42.9599930Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9600000Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9600090Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9600160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9600280Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9600340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9600430Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9600500Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9600560Z err_msg = None
2025-02-25T14:23:42.9600560Z 
2025-02-25T14:23:42.9600640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9600710Z         if err_msg is None:
2025-02-25T14:23:42.9600850Z             if left.shape != right.shape:
2025-02-25T14:23:42.9600920Z                 raise_assert_detail(
2025-02-25T14:23:42.9601040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9601090Z                 )
2025-02-25T14:23:42.9601140Z     
2025-02-25T14:23:42.9601190Z             diff = 0
2025-02-25T14:23:42.9601280Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9601360Z                 # count up differences
2025-02-25T14:23:42.9601500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9601560Z                     diff += 1
2025-02-25T14:23:42.9601690Z     
2025-02-25T14:23:42.9601760Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9601870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9602010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9602100Z E           AssertionError: Series are different
2025-02-25T14:23:42.9602150Z E           
2025-02-25T14:23:42.9602240Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9602550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9602870Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9603190Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9603200Z 
2025-02-25T14:23:42.9603450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9603630Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-25T14:23:42.9603640Z 
2025-02-25T14:23:42.9603750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9603860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9603950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9604060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9604170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9604250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9604310Z err_msg = None
2025-02-25T14:23:42.9604310Z 
2025-02-25T14:23:42.9604400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9604460Z         if err_msg is None:
2025-02-25T14:23:42.9604530Z             if left.shape != right.shape:
2025-02-25T14:23:42.9604600Z                 raise_assert_detail(
2025-02-25T14:23:42.9604720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9604770Z                 )
2025-02-25T14:23:42.9604820Z     
2025-02-25T14:23:42.9604880Z             diff = 0
2025-02-25T14:23:42.9605160Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9605230Z                 # count up differences
2025-02-25T14:23:42.9605370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9605430Z                     diff += 1
2025-02-25T14:23:42.9605480Z     
2025-02-25T14:23:42.9605550Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9605660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9605800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9605890Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9606230Z E           
2025-02-25T14:23:42.9606330Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9606540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9606770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9606780Z 
2025-02-25T14:23:42.9607020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9607030Z 
2025-02-25T14:23:42.9607180Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9607180Z 
2025-02-25T14:23:42.9607360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7d10>
2025-02-25T14:23:42.9607520Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>, attr = 'nu'
2025-02-25T14:23:42.9607520Z 
2025-02-25T14:23:42.9607640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9607730Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9607790Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9607850Z         try:
2025-02-25T14:23:42.9607960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9608030Z         except KeyError:
2025-02-25T14:23:42.9608140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9608190Z     
2025-02-25T14:23:42.9608250Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9608330Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9608400Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9608510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9608570Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9608650Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9608740Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9608740Z 
2025-02-25T14:23:42.9608840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9608940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9609060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9609110Z     ???
2025-02-25T14:23:42.9609210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9609210Z 
2025-02-25T14:23:42.9609260Z >   ???
2025-02-25T14:23:42.9609360Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9609410Z E   
2025-02-25T14:23:42.9609520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9609610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9609660Z E          ...
2025-02-25T14:23:42.9609790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9609900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9609990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9610040Z E          ...
2025-02-25T14:23:42.9610110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9610220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9610300Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9610300Z 
2025-02-25T14:23:42.9610380Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9610580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-25T14:23:42.9610630Z 
2025-02-25T14:23:42.9610750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9610870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9610950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9611060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9611170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9611250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9611300Z err_msg = None
2025-02-25T14:23:42.9611310Z 
2025-02-25T14:23:42.9611390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9611460Z         if err_msg is None:
2025-02-25T14:23:42.9611530Z             if left.shape != right.shape:
2025-02-25T14:23:42.9611610Z                 raise_assert_detail(
2025-02-25T14:23:42.9611730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9611790Z                 )
2025-02-25T14:23:42.9611830Z     
2025-02-25T14:23:42.9611900Z             diff = 0
2025-02-25T14:23:42.9612000Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9612090Z                 # count up differences
2025-02-25T14:23:42.9612230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9612280Z                     diff += 1
2025-02-25T14:23:42.9612330Z     
2025-02-25T14:23:42.9612400Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9612510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9612650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9612740Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9612790Z E           
2025-02-25T14:23:42.9612880Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9613100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9613320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9613320Z 
2025-02-25T14:23:42.9613570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9613570Z 
2025-02-25T14:23:42.9613720Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9613720Z 
2025-02-25T14:23:42.9613900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7dd0>
2025-02-25T14:23:42.9614030Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>
2025-02-25T14:23:42.9614150Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9614150Z 
2025-02-25T14:23:42.9614270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9614360Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9614430Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9614480Z         try:
2025-02-25T14:23:42.9614590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9614650Z         except KeyError:
2025-02-25T14:23:42.9614770Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9614810Z     
2025-02-25T14:23:42.9614950Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9615020Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9615090Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9615200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9615270Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9615350Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9615440Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9615440Z 
2025-02-25T14:23:42.9615540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9615640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9615760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9615810Z     ???
2025-02-25T14:23:42.9615910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9615920Z 
2025-02-25T14:23:42.9615970Z >   ???
2025-02-25T14:23:42.9616070Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9616120Z E   
2025-02-25T14:23:42.9616220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9616320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9616370Z E          ...
2025-02-25T14:23:42.9616450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9616550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9616650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9616690Z E          ...
2025-02-25T14:23:42.9616770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9616870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9616950Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9616960Z 
2025-02-25T14:23:42.9617030Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9617210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-25T14:23:42.9617220Z 
2025-02-25T14:23:42.9617330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9617440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9617520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9617630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9617740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9617820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9617870Z err_msg = None
2025-02-25T14:23:42.9617880Z 
2025-02-25T14:23:42.9617970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9618030Z         if err_msg is None:
2025-02-25T14:23:42.9618110Z             if left.shape != right.shape:
2025-02-25T14:23:42.9618170Z                 raise_assert_detail(
2025-02-25T14:23:42.9618290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9618340Z                 )
2025-02-25T14:23:42.9618390Z     
2025-02-25T14:23:42.9618500Z             diff = 0
2025-02-25T14:23:42.9618600Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9618670Z                 # count up differences
2025-02-25T14:23:42.9618810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9618870Z                     diff += 1
2025-02-25T14:23:42.9618920Z     
2025-02-25T14:23:42.9618990Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9619100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9619240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9619390Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9619450Z E           
2025-02-25T14:23:42.9619530Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9619750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9619980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9619980Z 
2025-02-25T14:23:42.9620230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9620230Z 
2025-02-25T14:23:42.9620370Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9620370Z 
2025-02-25T14:23:42.9620550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bad7e90>
2025-02-25T14:23:42.9620720Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>, attr = 'f_lu'
2025-02-25T14:23:42.9620720Z 
2025-02-25T14:23:42.9620840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9620930Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9620990Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9621040Z         try:
2025-02-25T14:23:42.9621160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9621220Z         except KeyError:
2025-02-25T14:23:42.9621340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9621390Z     
2025-02-25T14:23:42.9621460Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9621540Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9621610Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9621720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9621780Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9621860Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9621950Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9621960Z 
2025-02-25T14:23:42.9622060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9622150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9622270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9622330Z     ???
2025-02-25T14:23:42.9622420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9622420Z 
2025-02-25T14:23:42.9622470Z >   ???
2025-02-25T14:23:42.9622580Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9622630Z E   
2025-02-25T14:23:42.9622730Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9622820Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9622970Z E          ...
2025-02-25T14:23:42.9623050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9623160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9623250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9623300Z E          ...
2025-02-25T14:23:42.9623370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9623480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9623560Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9623560Z 
2025-02-25T14:23:42.9623630Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9623830Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-25T14:23:42.9623910Z 
2025-02-25T14:23:42.9624020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9624130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9624210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9624330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9624440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9624520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9624570Z err_msg = None
2025-02-25T14:23:42.9624580Z 
2025-02-25T14:23:42.9624660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9624720Z         if err_msg is None:
2025-02-25T14:23:42.9624790Z             if left.shape != right.shape:
2025-02-25T14:23:42.9624860Z                 raise_assert_detail(
2025-02-25T14:23:42.9624980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9625030Z                 )
2025-02-25T14:23:42.9625080Z     
2025-02-25T14:23:42.9625130Z             diff = 0
2025-02-25T14:23:42.9625220Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9625290Z                 # count up differences
2025-02-25T14:23:42.9625430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9625490Z                     diff += 1
2025-02-25T14:23:42.9625530Z     
2025-02-25T14:23:42.9625600Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9625710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9625980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9626080Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9626140Z E           
2025-02-25T14:23:42.9626230Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9626450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9626670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9626670Z 
2025-02-25T14:23:42.9626930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9626930Z 
2025-02-25T14:23:42.9627070Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9627070Z 
2025-02-25T14:23:42.9627250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf4650>
2025-02-25T14:23:42.9627680Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>
2025-02-25T14:23:42.9627740Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9627740Z 
2025-02-25T14:23:42.9627870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9627990Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9636510Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9636610Z         try:
2025-02-25T14:23:42.9636740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9636800Z         except KeyError:
2025-02-25T14:23:42.9636920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9637220Z     
2025-02-25T14:23:42.9637290Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9637370Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9637430Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9637540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9637620Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9637690Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9637780Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9637830Z             else:
2025-02-25T14:23:42.9637900Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9637990Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9637990Z 
2025-02-25T14:23:42.9638090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9638190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9638310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9638370Z     ???
2025-02-25T14:23:42.9638460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9638470Z 
2025-02-25T14:23:42.9638510Z >   ???
2025-02-25T14:23:42.9638610Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9638660Z E   
2025-02-25T14:23:42.9638770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9638860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9638910Z E          ...
2025-02-25T14:23:42.9638980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9639080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9639180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9639230Z E          ...
2025-02-25T14:23:42.9639300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9639400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9639480Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9639490Z 
2025-02-25T14:23:42.9639550Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9639760Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-25T14:23:42.9639770Z 
2025-02-25T14:23:42.9639890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9640010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9640100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9640210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9640320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9640400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9640460Z err_msg = None
2025-02-25T14:23:42.9640460Z 
2025-02-25T14:23:42.9640550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9640620Z         if err_msg is None:
2025-02-25T14:23:42.9640690Z             if left.shape != right.shape:
2025-02-25T14:23:42.9640760Z                 raise_assert_detail(
2025-02-25T14:23:42.9640980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9641030Z                 )
2025-02-25T14:23:42.9641080Z     
2025-02-25T14:23:42.9641140Z             diff = 0
2025-02-25T14:23:42.9641230Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9641300Z                 # count up differences
2025-02-25T14:23:42.9641440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9641500Z                     diff += 1
2025-02-25T14:23:42.9641560Z     
2025-02-25T14:23:42.9641630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9641810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9641960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9642050Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9642100Z E           
2025-02-25T14:23:42.9642200Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9642420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9642640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9642640Z 
2025-02-25T14:23:42.9642900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9642910Z 
2025-02-25T14:23:42.9643050Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9643050Z 
2025-02-25T14:23:42.9643230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf4710>
2025-02-25T14:23:42.9643350Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>
2025-02-25T14:23:42.9643410Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9643410Z 
2025-02-25T14:23:42.9643530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9643620Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9643680Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9643730Z         try:
2025-02-25T14:23:42.9643850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9643910Z         except KeyError:
2025-02-25T14:23:42.9644030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9644070Z     
2025-02-25T14:23:42.9644140Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9644220Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9644280Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9644390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9644460Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9644530Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9644620Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9644670Z             else:
2025-02-25T14:23:42.9644740Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9644830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9644830Z 
2025-02-25T14:23:42.9644940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9645030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9645150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9645200Z     ???
2025-02-25T14:23:42.9645360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9645360Z 
2025-02-25T14:23:42.9645410Z >   ???
2025-02-25T14:23:42.9645510Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9645560Z E   
2025-02-25T14:23:42.9645660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9645750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9645800Z E          ...
2025-02-25T14:23:42.9645880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9645980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9646070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9646170Z E          ...
2025-02-25T14:23:42.9646250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9646350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9646430Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9646440Z 
2025-02-25T14:23:42.9646500Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9646690Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-25T14:23:42.9646700Z 
2025-02-25T14:23:42.9646800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9646910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9646990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9647100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9647220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9647290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9647350Z err_msg = None
2025-02-25T14:23:42.9647350Z 
2025-02-25T14:23:42.9647440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9647500Z         if err_msg is None:
2025-02-25T14:23:42.9647570Z             if left.shape != right.shape:
2025-02-25T14:23:42.9647630Z                 raise_assert_detail(
2025-02-25T14:23:42.9647750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9647800Z                 )
2025-02-25T14:23:42.9647860Z     
2025-02-25T14:23:42.9647910Z             diff = 0
2025-02-25T14:23:42.9648000Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9648070Z                 # count up differences
2025-02-25T14:23:42.9648200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9648270Z                     diff += 1
2025-02-25T14:23:42.9648320Z     
2025-02-25T14:23:42.9648390Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9648500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9648650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9648740Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9648790Z E           
2025-02-25T14:23:42.9648880Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9649100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9649330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9649590Z 
2025-02-25T14:23:42.9649840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9649850Z 
2025-02-25T14:23:42.9649990Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9649990Z 
2025-02-25T14:23:42.9650170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf4890>
2025-02-25T14:23:42.9650330Z plasma = <tardis.plasma.base.BasePlasma object at 0x175ff4e60>, attr = 'j_blues'
2025-02-25T14:23:42.9650340Z 
2025-02-25T14:23:42.9650450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9650620Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9650690Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9650740Z         try:
2025-02-25T14:23:42.9650860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9650910Z         except KeyError:
2025-02-25T14:23:42.9651030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9651080Z     
2025-02-25T14:23:42.9651150Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9651220Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9651290Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9651400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9651460Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9651530Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9651620Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9651670Z             else:
2025-02-25T14:23:42.9651740Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9651830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9651830Z 
2025-02-25T14:23:42.9651930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9652020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9652150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9652190Z     ???
2025-02-25T14:23:42.9652290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9652290Z 
2025-02-25T14:23:42.9652340Z >   ???
2025-02-25T14:23:42.9652440Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9652480Z E   
2025-02-25T14:23:42.9652590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9652680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9652730Z E          ...
2025-02-25T14:23:42.9652800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9652910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9653000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9653050Z E          ...
2025-02-25T14:23:42.9653120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9653220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9653300Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9653300Z 
2025-02-25T14:23:42.9653370Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9653540Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-25T14:23:42.9653540Z 
2025-02-25T14:23:42.9653650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9653760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9653840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9653950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9654060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9654180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9654240Z err_msg = None
2025-02-25T14:23:42.9654240Z 
2025-02-25T14:23:42.9654320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9654380Z         if err_msg is None:
2025-02-25T14:23:42.9654450Z             if left.shape != right.shape:
2025-02-25T14:23:42.9654520Z                 raise_assert_detail(
2025-02-25T14:23:42.9654630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9654680Z                 )
2025-02-25T14:23:42.9654730Z     
2025-02-25T14:23:42.9654780Z             diff = 0
2025-02-25T14:23:42.9654910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9654980Z                 # count up differences
2025-02-25T14:23:42.9655120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9655180Z                     diff += 1
2025-02-25T14:23:42.9655230Z     
2025-02-25T14:23:42.9655300Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9655410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9655550Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9655640Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9655690Z E           
2025-02-25T14:23:42.9655780Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9655990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9656210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9656220Z 
2025-02-25T14:23:42.9656460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9656460Z 
2025-02-25T14:23:42.9656600Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9656600Z 
2025-02-25T14:23:42.9656770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf5610>
2025-02-25T14:23:42.9656940Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>, attr = 'lines'
2025-02-25T14:23:42.9656950Z 
2025-02-25T14:23:42.9657060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9657150Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9657220Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9657270Z         try:
2025-02-25T14:23:42.9657380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9657440Z         except KeyError:
2025-02-25T14:23:42.9657560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9657610Z     
2025-02-25T14:23:42.9657670Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9657740Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9657810Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9657920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9657980Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9658060Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9658150Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9658200Z             else:
2025-02-25T14:23:42.9658270Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9658360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9658400Z 
2025-02-25T14:23:42.9658500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9658600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9658720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9658770Z     ???
2025-02-25T14:23:42.9658860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9658860Z 
2025-02-25T14:23:42.9658910Z >   ???
2025-02-25T14:23:42.9659010Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9659060Z E   
2025-02-25T14:23:42.9659160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9659290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9659350Z E          ...
2025-02-25T14:23:42.9659420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9659530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9659620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9659670Z E          ...
2025-02-25T14:23:42.9659740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9659840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9659920Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9659920Z 
2025-02-25T14:23:42.9659990Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9660190Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-25T14:23:42.9660200Z 
2025-02-25T14:23:42.9660370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf56d0>
2025-02-25T14:23:42.9660500Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>
2025-02-25T14:23:42.9660570Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9660570Z 
2025-02-25T14:23:42.9660680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9660780Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9660840Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9660890Z         try:
2025-02-25T14:23:42.9661000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9661060Z         except KeyError:
2025-02-25T14:23:42.9661170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9661220Z     
2025-02-25T14:23:42.9661280Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9661360Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9661420Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9661530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9661600Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9661670Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9661760Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9661770Z 
2025-02-25T14:23:42.9661860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9661960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9661960Z 
2025-02-25T14:23:42.9662070Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9662140Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9662230Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9662290Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9662410Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9662470Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9662560Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9662620Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9662680Z err_msg = None
2025-02-25T14:23:42.9662720Z 
2025-02-25T14:23:42.9662800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9662870Z         if err_msg is None:
2025-02-25T14:23:42.9662940Z             if left.shape != right.shape:
2025-02-25T14:23:42.9663010Z                 raise_assert_detail(
2025-02-25T14:23:42.9663120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9663170Z                 )
2025-02-25T14:23:42.9663220Z     
2025-02-25T14:23:42.9663270Z             diff = 0
2025-02-25T14:23:42.9663360Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9663420Z                 # count up differences
2025-02-25T14:23:42.9663600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9663660Z                     diff += 1
2025-02-25T14:23:42.9663710Z     
2025-02-25T14:23:42.9663780Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9663890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9664030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9664110Z E           AssertionError: Series are different
2025-02-25T14:23:42.9664160Z E           
2025-02-25T14:23:42.9664240Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9664550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9664830Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9665110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9665120Z 
2025-02-25T14:23:42.9665360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9665570Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-25T14:23:42.9665570Z 
2025-02-25T14:23:42.9665740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf5790>
2025-02-25T14:23:42.9665880Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>
2025-02-25T14:23:42.9666040Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9666040Z 
2025-02-25T14:23:42.9666160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9666250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9666310Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9666360Z         try:
2025-02-25T14:23:42.9666470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9666530Z         except KeyError:
2025-02-25T14:23:42.9666640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9666700Z     
2025-02-25T14:23:42.9666760Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9666830Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9666900Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9667010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9667170Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9667240Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9667330Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9667330Z 
2025-02-25T14:23:42.9667430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9667520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9667530Z 
2025-02-25T14:23:42.9667640Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9667710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9667800Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9667930Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9668050Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9668120Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9668210Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9668280Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9668330Z err_msg = None
2025-02-25T14:23:42.9668330Z 
2025-02-25T14:23:42.9668410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9668470Z         if err_msg is None:
2025-02-25T14:23:42.9668540Z             if left.shape != right.shape:
2025-02-25T14:23:42.9668610Z                 raise_assert_detail(
2025-02-25T14:23:42.9668720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9668770Z                 )
2025-02-25T14:23:42.9668820Z     
2025-02-25T14:23:42.9668880Z             diff = 0
2025-02-25T14:23:42.9668960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9669030Z                 # count up differences
2025-02-25T14:23:42.9669170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9669230Z                     diff += 1
2025-02-25T14:23:42.9669280Z     
2025-02-25T14:23:42.9669350Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9669460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9669600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9669680Z E           AssertionError: Series are different
2025-02-25T14:23:42.9669730Z E           
2025-02-25T14:23:42.9669810Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9670110Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9670430Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9670740Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9670750Z 
2025-02-25T14:23:42.9671000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9671210Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-25T14:23:42.9671220Z 
2025-02-25T14:23:42.9671320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9671430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9671510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9671620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9671730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9671860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9671910Z err_msg = None
2025-02-25T14:23:42.9671910Z 
2025-02-25T14:23:42.9672000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9672070Z         if err_msg is None:
2025-02-25T14:23:42.9672150Z             if left.shape != right.shape:
2025-02-25T14:23:42.9672210Z                 raise_assert_detail(
2025-02-25T14:23:42.9672320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9672370Z                 )
2025-02-25T14:23:42.9672420Z     
2025-02-25T14:23:42.9672470Z             diff = 0
2025-02-25T14:23:42.9672560Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9672630Z                 # count up differences
2025-02-25T14:23:42.9672770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9672830Z                     diff += 1
2025-02-25T14:23:42.9672870Z     
2025-02-25T14:23:42.9672940Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9673050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9673190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9673280Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9673340Z E           
2025-02-25T14:23:42.9673430Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9673650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9673870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9673870Z 
2025-02-25T14:23:42.9674120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9674120Z 
2025-02-25T14:23:42.9674260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9674260Z 
2025-02-25T14:23:42.9674440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf59d0>
2025-02-25T14:23:42.9674590Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>, attr = 'nu'
2025-02-25T14:23:42.9674590Z 
2025-02-25T14:23:42.9674700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9674790Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9674860Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9674920Z         try:
2025-02-25T14:23:42.9675030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9675100Z         except KeyError:
2025-02-25T14:23:42.9675210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9675300Z     
2025-02-25T14:23:42.9675370Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9675450Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9675510Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9675630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9675690Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9675760Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9675850Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9675850Z 
2025-02-25T14:23:42.9675950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9676090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9676210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9676260Z     ???
2025-02-25T14:23:42.9676350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9676360Z 
2025-02-25T14:23:42.9676410Z >   ???
2025-02-25T14:23:42.9676510Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9676560Z E   
2025-02-25T14:23:42.9676660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9676760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9676810Z E          ...
2025-02-25T14:23:42.9676880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9676980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9677070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9677130Z E          ...
2025-02-25T14:23:42.9677200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9677310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9677380Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9677390Z 
2025-02-25T14:23:42.9677460Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9677640Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-25T14:23:42.9677650Z 
2025-02-25T14:23:42.9677760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9677870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9677950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9678060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9678160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9678250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9678300Z err_msg = None
2025-02-25T14:23:42.9678310Z 
2025-02-25T14:23:42.9678390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9678450Z         if err_msg is None:
2025-02-25T14:23:42.9678520Z             if left.shape != right.shape:
2025-02-25T14:23:42.9678590Z                 raise_assert_detail(
2025-02-25T14:23:42.9678700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9678750Z                 )
2025-02-25T14:23:42.9678800Z     
2025-02-25T14:23:42.9678850Z             diff = 0
2025-02-25T14:23:42.9678940Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9679010Z                 # count up differences
2025-02-25T14:23:42.9679140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9679210Z                     diff += 1
2025-02-25T14:23:42.9679250Z     
2025-02-25T14:23:42.9679320Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9679430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9679570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9679700Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9679750Z E           
2025-02-25T14:23:42.9679850Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9680060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9680290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9680330Z 
2025-02-25T14:23:42.9680590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9680590Z 
2025-02-25T14:23:42.9680720Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9680730Z 
2025-02-25T14:23:42.9680900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf5a90>
2025-02-25T14:23:42.9681030Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>
2025-02-25T14:23:42.9681090Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9681090Z 
2025-02-25T14:23:42.9681200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9681290Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9681360Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9681410Z         try:
2025-02-25T14:23:42.9681530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9681580Z         except KeyError:
2025-02-25T14:23:42.9681700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9681750Z     
2025-02-25T14:23:42.9681820Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9681890Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9681950Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9682060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9682130Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9682200Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9682280Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9682290Z 
2025-02-25T14:23:42.9682380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9682480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9682600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9682660Z     ???
2025-02-25T14:23:42.9682840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9682850Z 
2025-02-25T14:23:42.9682910Z >   ???
2025-02-25T14:23:42.9683020Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9683080Z E   
2025-02-25T14:23:42.9683200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9683300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9683360Z E          ...
2025-02-25T14:23:42.9683440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9683560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9683660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9683720Z E          ...
2025-02-25T14:23:42.9683870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9683970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9684070Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9684150Z 
2025-02-25T14:23:42.9689470Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9689680Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-25T14:23:42.9689680Z 
2025-02-25T14:23:42.9689800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9689910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9689990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9690100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9690210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9690720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9690780Z err_msg = None
2025-02-25T14:23:42.9690780Z 
2025-02-25T14:23:42.9690870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9690930Z         if err_msg is None:
2025-02-25T14:23:42.9691010Z             if left.shape != right.shape:
2025-02-25T14:23:42.9691070Z                 raise_assert_detail(
2025-02-25T14:23:42.9691190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9691240Z                 )
2025-02-25T14:23:42.9691300Z     
2025-02-25T14:23:42.9691350Z             diff = 0
2025-02-25T14:23:42.9691440Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9691510Z                 # count up differences
2025-02-25T14:23:42.9691650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9691710Z                     diff += 1
2025-02-25T14:23:42.9691760Z     
2025-02-25T14:23:42.9691830Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9691940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9692080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9692180Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9692230Z E           
2025-02-25T14:23:42.9692320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9692540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9692760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9692770Z 
2025-02-25T14:23:42.9693020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9693020Z 
2025-02-25T14:23:42.9693160Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9693160Z 
2025-02-25T14:23:42.9693340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf5b50>
2025-02-25T14:23:42.9693500Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>, attr = 'f_lu'
2025-02-25T14:23:42.9693500Z 
2025-02-25T14:23:42.9693620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9693710Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9693770Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9693820Z         try:
2025-02-25T14:23:42.9693940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9693990Z         except KeyError:
2025-02-25T14:23:42.9694110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9694210Z     
2025-02-25T14:23:42.9694280Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9694360Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9694430Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9694540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9694600Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9694680Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9694770Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9694770Z 
2025-02-25T14:23:42.9694870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9695010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9695130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9695180Z     ???
2025-02-25T14:23:42.9695280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9695280Z 
2025-02-25T14:23:42.9695340Z >   ???
2025-02-25T14:23:42.9695440Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9695490Z E   
2025-02-25T14:23:42.9695590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9695690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9695740Z E          ...
2025-02-25T14:23:42.9695810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9695910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9696010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9696060Z E          ...
2025-02-25T14:23:42.9696130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9696230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9696310Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9696320Z 
2025-02-25T14:23:42.9696390Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9696570Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-25T14:23:42.9696570Z 
2025-02-25T14:23:42.9696680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9696780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9696870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9696980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9697090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9697170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9697230Z err_msg = None
2025-02-25T14:23:42.9697230Z 
2025-02-25T14:23:42.9697310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9697370Z         if err_msg is None:
2025-02-25T14:23:42.9697450Z             if left.shape != right.shape:
2025-02-25T14:23:42.9697510Z                 raise_assert_detail(
2025-02-25T14:23:42.9697630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9697680Z                 )
2025-02-25T14:23:42.9697730Z     
2025-02-25T14:23:42.9697780Z             diff = 0
2025-02-25T14:23:42.9697870Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9697930Z                 # count up differences
2025-02-25T14:23:42.9698070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9698140Z                     diff += 1
2025-02-25T14:23:42.9698180Z     
2025-02-25T14:23:42.9698250Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9698360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9698500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9698640Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9698690Z E           
2025-02-25T14:23:42.9698780Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9698990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9699220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9699260Z 
2025-02-25T14:23:42.9699520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9699520Z 
2025-02-25T14:23:42.9699660Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9699660Z 
2025-02-25T14:23:42.9699840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf62d0>
2025-02-25T14:23:42.9699970Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>
2025-02-25T14:23:42.9700030Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9700030Z 
2025-02-25T14:23:42.9700140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9700230Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9700300Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9700350Z         try:
2025-02-25T14:23:42.9700470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9700520Z         except KeyError:
2025-02-25T14:23:42.9700640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9700690Z     
2025-02-25T14:23:42.9700760Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9700830Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9700900Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9701000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9701070Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9701140Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9701230Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9701280Z             else:
2025-02-25T14:23:42.9701350Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9701450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9701450Z 
2025-02-25T14:23:42.9701540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9701640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9701760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9701810Z     ???
2025-02-25T14:23:42.9701910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9701910Z 
2025-02-25T14:23:42.9701960Z >   ???
2025-02-25T14:23:42.9702060Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9702110Z E   
2025-02-25T14:23:42.9702220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9702310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9702360Z E          ...
2025-02-25T14:23:42.9702430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9702530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9702620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9702680Z E          ...
2025-02-25T14:23:42.9702750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9702910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9702990Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9703000Z 
2025-02-25T14:23:42.9703060Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9703230Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-25T14:23:42.9703240Z 
2025-02-25T14:23:42.9703340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9703450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9703570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9703690Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9703790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9703880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9703930Z err_msg = None
2025-02-25T14:23:42.9703940Z 
2025-02-25T14:23:42.9704020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9704080Z         if err_msg is None:
2025-02-25T14:23:42.9704150Z             if left.shape != right.shape:
2025-02-25T14:23:42.9704220Z                 raise_assert_detail(
2025-02-25T14:23:42.9704330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9704380Z                 )
2025-02-25T14:23:42.9704430Z     
2025-02-25T14:23:42.9704480Z             diff = 0
2025-02-25T14:23:42.9704570Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9704640Z                 # count up differences
2025-02-25T14:23:42.9704780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9704840Z                     diff += 1
2025-02-25T14:23:42.9704880Z     
2025-02-25T14:23:42.9704950Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9705060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9705200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9705290Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9705340Z E           
2025-02-25T14:23:42.9705430Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9705650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9705880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9705880Z 
2025-02-25T14:23:42.9706640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9706670Z 
2025-02-25T14:23:42.9706810Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9706810Z 
2025-02-25T14:23:42.9706990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf6510>
2025-02-25T14:23:42.9707160Z plasma = <tardis.plasma.base.BasePlasma object at 0x162f93bf0>, attr = 'j_blues'
2025-02-25T14:23:42.9707170Z 
2025-02-25T14:23:42.9707280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9707370Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9707430Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9707480Z         try:
2025-02-25T14:23:42.9707880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9707960Z         except KeyError:
2025-02-25T14:23:42.9708080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9708130Z     
2025-02-25T14:23:42.9708200Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9708270Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9708350Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9708460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9708530Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9708590Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9708800Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9708850Z             else:
2025-02-25T14:23:42.9708930Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9709010Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9709020Z 
2025-02-25T14:23:42.9709120Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9709220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9709340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9709390Z     ???
2025-02-25T14:23:42.9709480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9709480Z 
2025-02-25T14:23:42.9709530Z >   ???
2025-02-25T14:23:42.9709630Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9709680Z E   
2025-02-25T14:23:42.9709780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9709880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9709930Z E          ...
2025-02-25T14:23:42.9710000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9710110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9710210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9710260Z E          ...
2025-02-25T14:23:42.9710320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9710430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9710510Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9710510Z 
2025-02-25T14:23:42.9710580Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9710750Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-25T14:23:42.9710760Z 
2025-02-25T14:23:42.9710870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9710980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9711060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9711170Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9711280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9711360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9711420Z err_msg = None
2025-02-25T14:23:42.9711420Z 
2025-02-25T14:23:42.9711500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9711570Z         if err_msg is None:
2025-02-25T14:23:42.9711640Z             if left.shape != right.shape:
2025-02-25T14:23:42.9711700Z                 raise_assert_detail(
2025-02-25T14:23:42.9711820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9711870Z                 )
2025-02-25T14:23:42.9711920Z     
2025-02-25T14:23:42.9711970Z             diff = 0
2025-02-25T14:23:42.9712060Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9712130Z                 # count up differences
2025-02-25T14:23:42.9712320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9712390Z                     diff += 1
2025-02-25T14:23:42.9712440Z     
2025-02-25T14:23:42.9712500Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9712620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9712760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9712850Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9712900Z E           
2025-02-25T14:23:42.9712990Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9713260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9713480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9713490Z 
2025-02-25T14:23:42.9713730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9713730Z 
2025-02-25T14:23:42.9713870Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9713870Z 
2025-02-25T14:23:42.9714060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7290>
2025-02-25T14:23:42.9714220Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>, attr = 'lines'
2025-02-25T14:23:42.9714220Z 
2025-02-25T14:23:42.9714330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9714440Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9714500Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9714550Z         try:
2025-02-25T14:23:42.9714660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9714720Z         except KeyError:
2025-02-25T14:23:42.9714830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9715240Z     
2025-02-25T14:23:42.9716170Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9716420Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9716630Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9716950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9717150Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9717350Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9717590Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9717760Z             else:
2025-02-25T14:23:42.9717970Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9718200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9718210Z 
2025-02-25T14:23:42.9718500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9718740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9719080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9719240Z     ???
2025-02-25T14:23:42.9719480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9719490Z 
2025-02-25T14:23:42.9719650Z >   ???
2025-02-25T14:23:42.9730460Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9730640Z E   
2025-02-25T14:23:42.9730930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9731190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9731920Z E          ...
2025-02-25T14:23:42.9732120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9732410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9732670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9732830Z E          ...
2025-02-25T14:23:42.9733020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9733320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9733550Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9733560Z 
2025-02-25T14:23:42.9733760Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9734340Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-25T14:23:42.9734540Z 
2025-02-25T14:23:42.9735040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7350>
2025-02-25T14:23:42.9735380Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>
2025-02-25T14:23:42.9735590Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9735600Z 
2025-02-25T14:23:42.9735920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9736170Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9736360Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9736510Z         try:
2025-02-25T14:23:42.9736840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9737020Z         except KeyError:
2025-02-25T14:23:42.9737330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9737480Z     
2025-02-25T14:23:42.9737680Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9737900Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9738090Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9738390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9738580Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9738790Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9739030Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9739040Z 
2025-02-25T14:23:42.9739320Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9739560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9739570Z 
2025-02-25T14:23:42.9739890Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9740070Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9740310Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9740500Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9740810Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9741010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9741240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9741430Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9741600Z err_msg = None
2025-02-25T14:23:42.9741610Z 
2025-02-25T14:23:42.9741860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9742050Z         if err_msg is None:
2025-02-25T14:23:42.9742260Z             if left.shape != right.shape:
2025-02-25T14:23:42.9742470Z                 raise_assert_detail(
2025-02-25T14:23:42.9742790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9742960Z                 )
2025-02-25T14:23:42.9743110Z     
2025-02-25T14:23:42.9743280Z             diff = 0
2025-02-25T14:23:42.9743540Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9743740Z                 # count up differences
2025-02-25T14:23:42.9744130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9744310Z                     diff += 1
2025-02-25T14:23:42.9744610Z     
2025-02-25T14:23:42.9744810Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9745110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9745540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9745790Z E           AssertionError: Series are different
2025-02-25T14:23:42.9745950Z E           
2025-02-25T14:23:42.9746190Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9748030Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9749100Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9749920Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9749940Z 
2025-02-25T14:23:42.9750650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9751380Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-25T14:23:42.9751390Z 
2025-02-25T14:23:42.9751880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7410>
2025-02-25T14:23:42.9752220Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>
2025-02-25T14:23:42.9752420Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9752430Z 
2025-02-25T14:23:42.9752730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9752990Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9753170Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9753330Z         try:
2025-02-25T14:23:42.9753640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9753830Z         except KeyError:
2025-02-25T14:23:42.9754140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9754290Z     
2025-02-25T14:23:42.9754480Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9754690Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9754890Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9755180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9755380Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9755570Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9755830Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9755840Z 
2025-02-25T14:23:42.9756120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9756380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9756390Z 
2025-02-25T14:23:42.9756700Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9756890Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9757140Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9757320Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9758500Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9758680Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9758930Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9759110Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9759290Z err_msg = None
2025-02-25T14:23:42.9759300Z 
2025-02-25T14:23:42.9759780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9759980Z         if err_msg is None:
2025-02-25T14:23:42.9760070Z             if left.shape != right.shape:
2025-02-25T14:23:42.9760140Z                 raise_assert_detail(
2025-02-25T14:23:42.9760680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9760740Z                 )
2025-02-25T14:23:42.9760790Z     
2025-02-25T14:23:42.9760840Z             diff = 0
2025-02-25T14:23:42.9760940Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9761010Z                 # count up differences
2025-02-25T14:23:42.9761170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9761240Z                     diff += 1
2025-02-25T14:23:42.9761280Z     
2025-02-25T14:23:42.9761360Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9761480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9761620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9761700Z E           AssertionError: Series are different
2025-02-25T14:23:42.9761750Z E           
2025-02-25T14:23:42.9761840Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9762170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9762490Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9762800Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9762820Z 
2025-02-25T14:23:42.9763090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9763270Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-25T14:23:42.9763270Z 
2025-02-25T14:23:42.9763380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9763500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9763580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9763700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9763810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9763920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9764100Z err_msg = None
2025-02-25T14:23:42.9764100Z 
2025-02-25T14:23:42.9764190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9764260Z         if err_msg is None:
2025-02-25T14:23:42.9764330Z             if left.shape != right.shape:
2025-02-25T14:23:42.9764400Z                 raise_assert_detail(
2025-02-25T14:23:42.9764550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9764610Z                 )
2025-02-25T14:23:42.9764650Z     
2025-02-25T14:23:42.9764710Z             diff = 0
2025-02-25T14:23:42.9764800Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9764920Z                 # count up differences
2025-02-25T14:23:42.9765070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9765130Z                     diff += 1
2025-02-25T14:23:42.9765190Z     
2025-02-25T14:23:42.9765260Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9765380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9765520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9765620Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9765670Z E           
2025-02-25T14:23:42.9765760Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9765980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9766210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9766220Z 
2025-02-25T14:23:42.9766480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9766480Z 
2025-02-25T14:23:42.9766620Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9766630Z 
2025-02-25T14:23:42.9766800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7650>
2025-02-25T14:23:42.9766970Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>, attr = 'nu'
2025-02-25T14:23:42.9766980Z 
2025-02-25T14:23:42.9767090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9767190Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9767250Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9767310Z         try:
2025-02-25T14:23:42.9767430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9767490Z         except KeyError:
2025-02-25T14:23:42.9767610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9767660Z     
2025-02-25T14:23:42.9767770Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9767840Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9767910Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9768020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9768090Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9768160Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9768250Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9768260Z 
2025-02-25T14:23:42.9768360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9768460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9768590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9768730Z     ???
2025-02-25T14:23:42.9768830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9768830Z 
2025-02-25T14:23:42.9768880Z >   ???
2025-02-25T14:23:42.9768990Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9769040Z E   
2025-02-25T14:23:42.9769150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9769240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9769300Z E          ...
2025-02-25T14:23:42.9769370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9769530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9769630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9769680Z E          ...
2025-02-25T14:23:42.9769750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9769860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9769960Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9769960Z 
2025-02-25T14:23:42.9770030Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9770230Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-25T14:23:42.9770230Z 
2025-02-25T14:23:42.9770350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9770470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9770550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9770660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9770770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9770850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9770910Z err_msg = None
2025-02-25T14:23:42.9770920Z 
2025-02-25T14:23:42.9771010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9771070Z         if err_msg is None:
2025-02-25T14:23:42.9771170Z             if left.shape != right.shape:
2025-02-25T14:23:42.9771240Z                 raise_assert_detail(
2025-02-25T14:23:42.9771360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9771410Z                 )
2025-02-25T14:23:42.9771470Z     
2025-02-25T14:23:42.9771520Z             diff = 0
2025-02-25T14:23:42.9771610Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9771680Z                 # count up differences
2025-02-25T14:23:42.9772050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9772120Z                     diff += 1
2025-02-25T14:23:42.9772170Z     
2025-02-25T14:23:42.9772240Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9772370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9772520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9772610Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9772660Z E           
2025-02-25T14:23:42.9772750Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9773090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9773340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9773420Z 
2025-02-25T14:23:42.9773680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9773700Z 
2025-02-25T14:23:42.9780030Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9780040Z 
2025-02-25T14:23:42.9780250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7710>
2025-02-25T14:23:42.9780390Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>
2025-02-25T14:23:42.9780440Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9780540Z 
2025-02-25T14:23:42.9780670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9780760Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9780830Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9780880Z         try:
2025-02-25T14:23:42.9781000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9781070Z         except KeyError:
2025-02-25T14:23:42.9781180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9781220Z     
2025-02-25T14:23:42.9781290Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9781370Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9781430Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9781550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9781610Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9781680Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9781780Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9781780Z 
2025-02-25T14:23:42.9781880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9781970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9782100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9782160Z     ???
2025-02-25T14:23:42.9782250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9782260Z 
2025-02-25T14:23:42.9782310Z >   ???
2025-02-25T14:23:42.9782420Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9782460Z E   
2025-02-25T14:23:42.9782570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9782660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9782710Z E          ...
2025-02-25T14:23:42.9782780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9782890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9782980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9783030Z E          ...
2025-02-25T14:23:42.9783100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9783210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9783290Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9783300Z 
2025-02-25T14:23:42.9783370Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9783550Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-25T14:23:42.9783550Z 
2025-02-25T14:23:42.9783660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9783780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9783860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9783980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9784100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9784180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9784350Z err_msg = None
2025-02-25T14:23:42.9784360Z 
2025-02-25T14:23:42.9784450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9784520Z         if err_msg is None:
2025-02-25T14:23:42.9784590Z             if left.shape != right.shape:
2025-02-25T14:23:42.9784660Z                 raise_assert_detail(
2025-02-25T14:23:42.9784780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9784830Z                 )
2025-02-25T14:23:42.9784880Z     
2025-02-25T14:23:42.9784940Z             diff = 0
2025-02-25T14:23:42.9785030Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9785310Z                 # count up differences
2025-02-25T14:23:42.9785470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9785530Z                     diff += 1
2025-02-25T14:23:42.9785580Z     
2025-02-25T14:23:42.9785650Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9785770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9785910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9786010Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9786060Z E           
2025-02-25T14:23:42.9786150Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9786370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9786600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9786610Z 
2025-02-25T14:23:42.9786860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9786860Z 
2025-02-25T14:23:42.9787000Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9787010Z 
2025-02-25T14:23:42.9789770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf77d0>
2025-02-25T14:23:42.9790310Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>, attr = 'f_lu'
2025-02-25T14:23:42.9790340Z 
2025-02-25T14:23:42.9790640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9790900Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9791090Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9791260Z         try:
2025-02-25T14:23:42.9791570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9791770Z         except KeyError:
2025-02-25T14:23:42.9792070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9792230Z     
2025-02-25T14:23:42.9792430Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9792630Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9792820Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9793120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9793320Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9793520Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9793790Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9793800Z 
2025-02-25T14:23:42.9794080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9794340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9794660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9795150Z     ???
2025-02-25T14:23:42.9795410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9795420Z 
2025-02-25T14:23:42.9795560Z >   ???
2025-02-25T14:23:42.9795850Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9796000Z E   
2025-02-25T14:23:42.9796300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9796550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9796710Z E          ...
2025-02-25T14:23:42.9796900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9797360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9797610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9797770Z E          ...
2025-02-25T14:23:42.9797970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9798250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9798490Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9798500Z 
2025-02-25T14:23:42.9798700Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9799200Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-25T14:23:42.9799210Z 
2025-02-25T14:23:42.9799500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9799790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9800010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9800310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9800600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9800800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9800990Z err_msg = None
2025-02-25T14:23:42.9801000Z 
2025-02-25T14:23:42.9801230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9801420Z         if err_msg is None:
2025-02-25T14:23:42.9801620Z             if left.shape != right.shape:
2025-02-25T14:23:42.9801810Z                 raise_assert_detail(
2025-02-25T14:23:42.9802130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9802290Z                 )
2025-02-25T14:23:42.9802450Z     
2025-02-25T14:23:42.9802610Z             diff = 0
2025-02-25T14:23:42.9802860Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9803060Z                 # count up differences
2025-02-25T14:23:42.9803450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9803630Z                     diff += 1
2025-02-25T14:23:42.9803790Z     
2025-02-25T14:23:42.9803980Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9804280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9804650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9804900Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9805070Z E           
2025-02-25T14:23:42.9805320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9805950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9806580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9806740Z 
2025-02-25T14:23:42.9807440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9807450Z 
2025-02-25T14:23:42.9807830Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9807840Z 
2025-02-25T14:23:42.9808330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11baf7f50>
2025-02-25T14:23:42.9808700Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>
2025-02-25T14:23:42.9808870Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9809000Z 
2025-02-25T14:23:42.9809320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9809590Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9809780Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9809950Z         try:
2025-02-25T14:23:42.9810270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9810450Z         except KeyError:
2025-02-25T14:23:42.9810760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9810920Z     
2025-02-25T14:23:42.9811100Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9811320Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9811510Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9811820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9812010Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9812220Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9812500Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9812660Z             else:
2025-02-25T14:23:42.9812880Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9813120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9813140Z 
2025-02-25T14:23:42.9813420Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9813670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9814000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9814160Z     ???
2025-02-25T14:23:42.9814430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9814440Z 
2025-02-25T14:23:42.9814610Z >   ???
2025-02-25T14:23:42.9814890Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9815060Z E   
2025-02-25T14:23:42.9815350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9815610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9815770Z E          ...
2025-02-25T14:23:42.9815970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9816250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9816510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9816660Z E          ...
2025-02-25T14:23:42.9816860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9817140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9817370Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9817380Z 
2025-02-25T14:23:42.9817580Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9818060Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-25T14:23:42.9818070Z 
2025-02-25T14:23:42.9818360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9818650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9818860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9819150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9819560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9819780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9819950Z err_msg = None
2025-02-25T14:23:42.9819950Z 
2025-02-25T14:23:42.9820200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9820370Z         if err_msg is None:
2025-02-25T14:23:42.9820580Z             if left.shape != right.shape:
2025-02-25T14:23:42.9820770Z                 raise_assert_detail(
2025-02-25T14:23:42.9821090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9821350Z                 )
2025-02-25T14:23:42.9821510Z     
2025-02-25T14:23:42.9821680Z             diff = 0
2025-02-25T14:23:42.9821920Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9822120Z                 # count up differences
2025-02-25T14:23:42.9822500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9822690Z                     diff += 1
2025-02-25T14:23:42.9822840Z     
2025-02-25T14:23:42.9823050Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9823340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9823720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9823950Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9824120Z E           
2025-02-25T14:23:42.9824360Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9824980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9825610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9825620Z 
2025-02-25T14:23:42.9826280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9826300Z 
2025-02-25T14:23:42.9826670Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9826680Z 
2025-02-25T14:23:42.9827160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb18050>
2025-02-25T14:23:42.9827500Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>
2025-02-25T14:23:42.9827680Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9827690Z 
2025-02-25T14:23:42.9827990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9828250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9828440Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9828600Z         try:
2025-02-25T14:23:42.9828900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9829080Z         except KeyError:
2025-02-25T14:23:42.9832610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9832800Z     
2025-02-25T14:23:42.9833010Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9833220Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9833430Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9833740Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9833940Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9834140Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9834410Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9834930Z             else:
2025-02-25T14:23:42.9835160Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9835410Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9835410Z 
2025-02-25T14:23:42.9835700Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9835960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9836300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9836460Z     ???
2025-02-25T14:23:42.9836720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9836720Z 
2025-02-25T14:23:42.9837590Z >   ???
2025-02-25T14:23:42.9837880Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9838050Z E   
2025-02-25T14:23:42.9838350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9838600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9838780Z E          ...
2025-02-25T14:23:42.9838970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9839260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9839520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9839690Z E          ...
2025-02-25T14:23:42.9839880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9840180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9840420Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9840430Z 
2025-02-25T14:23:42.9840640Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9841140Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-25T14:23:42.9841140Z 
2025-02-25T14:23:42.9841430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9841730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9841940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9842240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9842520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9842730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9842900Z err_msg = None
2025-02-25T14:23:42.9842910Z 
2025-02-25T14:23:42.9843150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9843330Z         if err_msg is None:
2025-02-25T14:23:42.9843550Z             if left.shape != right.shape:
2025-02-25T14:23:42.9843730Z                 raise_assert_detail(
2025-02-25T14:23:42.9844050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9844220Z                 )
2025-02-25T14:23:42.9844370Z     
2025-02-25T14:23:42.9844540Z             diff = 0
2025-02-25T14:23:42.9844780Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9844980Z                 # count up differences
2025-02-25T14:23:42.9845370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9845560Z                     diff += 1
2025-02-25T14:23:42.9845720Z     
2025-02-25T14:23:42.9845920Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9846230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9846610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9846870Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9847030Z E           
2025-02-25T14:23:42.9847290Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9847890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9848680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9848690Z 
2025-02-25T14:23:42.9849380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9849510Z 
2025-02-25T14:23:42.9849890Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9849900Z 
2025-02-25T14:23:42.9850370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb181d0>
2025-02-25T14:23:42.9850830Z plasma = <tardis.plasma.base.BasePlasma object at 0x164612f30>, attr = 'j_blues'
2025-02-25T14:23:42.9850840Z 
2025-02-25T14:23:42.9859960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9860160Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9860240Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9860290Z         try:
2025-02-25T14:23:42.9860420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9860480Z         except KeyError:
2025-02-25T14:23:42.9860600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9860650Z     
2025-02-25T14:23:42.9860740Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9860810Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9860890Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9861000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9861080Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9861150Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9861260Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9861310Z             else:
2025-02-25T14:23:42.9861390Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9861480Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9861480Z 
2025-02-25T14:23:42.9861590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9861690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9861810Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9861870Z     ???
2025-02-25T14:23:42.9861970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9861970Z 
2025-02-25T14:23:42.9862020Z >   ???
2025-02-25T14:23:42.9862130Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9862190Z E   
2025-02-25T14:23:42.9862300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9862390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9862450Z E          ...
2025-02-25T14:23:42.9862530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9862640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9862730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9862780Z E          ...
2025-02-25T14:23:42.9862850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9862960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9863040Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9863050Z 
2025-02-25T14:23:42.9863130Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9863310Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-25T14:23:42.9863310Z 
2025-02-25T14:23:42.9863760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9863880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9863960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9864090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9864200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9864280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9864330Z err_msg = None
2025-02-25T14:23:42.9864450Z 
2025-02-25T14:23:42.9864540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9864610Z         if err_msg is None:
2025-02-25T14:23:42.9864680Z             if left.shape != right.shape:
2025-02-25T14:23:42.9864750Z                 raise_assert_detail(
2025-02-25T14:23:42.9864880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9864930Z                 )
2025-02-25T14:23:42.9864970Z     
2025-02-25T14:23:42.9865020Z             diff = 0
2025-02-25T14:23:42.9865110Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9865180Z                 # count up differences
2025-02-25T14:23:42.9865320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9865380Z                     diff += 1
2025-02-25T14:23:42.9865430Z     
2025-02-25T14:23:42.9865500Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9865620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9865770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9865860Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9865910Z E           
2025-02-25T14:23:42.9866010Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9866230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9866460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9866460Z 
2025-02-25T14:23:42.9866720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9866720Z 
2025-02-25T14:23:42.9866870Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9866870Z 
2025-02-25T14:23:42.9867050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb18f50>
2025-02-25T14:23:42.9867220Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>, attr = 'lines'
2025-02-25T14:23:42.9867220Z 
2025-02-25T14:23:42.9867340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9867440Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9867500Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9867550Z         try:
2025-02-25T14:23:42.9867670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9867740Z         except KeyError:
2025-02-25T14:23:42.9867850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9867900Z     
2025-02-25T14:23:42.9867970Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9868040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9868170Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9868290Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9868360Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9868430Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9868520Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9868570Z             else:
2025-02-25T14:23:42.9868640Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9868730Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9868730Z 
2025-02-25T14:23:42.9868830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9868970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9869100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9869150Z     ???
2025-02-25T14:23:42.9869240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9869250Z 
2025-02-25T14:23:42.9869290Z >   ???
2025-02-25T14:23:42.9869400Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9869450Z E   
2025-02-25T14:23:42.9869550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9869640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9869690Z E          ...
2025-02-25T14:23:42.9869760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9869860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9869960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9870010Z E          ...
2025-02-25T14:23:42.9870080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9870180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9870270Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9870270Z 
2025-02-25T14:23:42.9870340Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9870560Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-25T14:23:42.9870570Z 
2025-02-25T14:23:42.9870750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19010>
2025-02-25T14:23:42.9870880Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>
2025-02-25T14:23:42.9870950Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9870950Z 
2025-02-25T14:23:42.9871060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9871150Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9871220Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9871270Z         try:
2025-02-25T14:23:42.9871390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9871450Z         except KeyError:
2025-02-25T14:23:42.9871560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9871610Z     
2025-02-25T14:23:42.9871680Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9871750Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9871820Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9871930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9872000Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9872070Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9872160Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9872170Z 
2025-02-25T14:23:42.9872350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9872450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9872460Z 
2025-02-25T14:23:42.9872570Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9872640Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9872730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9874170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9874590Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9874780Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9875030Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9875200Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9875380Z err_msg = None
2025-02-25T14:23:42.9875380Z 
2025-02-25T14:23:42.9875630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9875900Z         if err_msg is None:
2025-02-25T14:23:42.9876200Z             if left.shape != right.shape:
2025-02-25T14:23:42.9876270Z                 raise_assert_detail(
2025-02-25T14:23:42.9876390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9876450Z                 )
2025-02-25T14:23:42.9876510Z     
2025-02-25T14:23:42.9876560Z             diff = 0
2025-02-25T14:23:42.9876650Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9876710Z                 # count up differences
2025-02-25T14:23:42.9876850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9876910Z                     diff += 1
2025-02-25T14:23:42.9876960Z     
2025-02-25T14:23:42.9877030Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9877140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9877290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9877370Z E           AssertionError: Series are different
2025-02-25T14:23:42.9877430Z E           
2025-02-25T14:23:42.9877510Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9877840Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9878120Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9878400Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9878410Z 
2025-02-25T14:23:42.9878660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9878870Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-25T14:23:42.9878880Z 
2025-02-25T14:23:42.9879050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb190d0>
2025-02-25T14:23:42.9879190Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>
2025-02-25T14:23:42.9879250Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9879260Z 
2025-02-25T14:23:42.9879370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9879460Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9879530Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9879570Z         try:
2025-02-25T14:23:42.9879850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9879910Z         except KeyError:
2025-02-25T14:23:42.9880030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9880080Z     
2025-02-25T14:23:42.9880150Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9880220Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9880290Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9880400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9880460Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9880530Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9880660Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9880670Z 
2025-02-25T14:23:42.9880770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9880860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9880870Z 
2025-02-25T14:23:42.9880980Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9881060Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9881150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9881220Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9881340Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9881410Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9881500Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9881560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9881620Z err_msg = None
2025-02-25T14:23:42.9881620Z 
2025-02-25T14:23:42.9881710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9881770Z         if err_msg is None:
2025-02-25T14:23:42.9881990Z             if left.shape != right.shape:
2025-02-25T14:23:42.9882100Z                 raise_assert_detail(
2025-02-25T14:23:42.9882220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9882280Z                 )
2025-02-25T14:23:42.9882350Z     
2025-02-25T14:23:42.9882410Z             diff = 0
2025-02-25T14:23:42.9888740Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9888820Z                 # count up differences
2025-02-25T14:23:42.9888980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9889040Z                     diff += 1
2025-02-25T14:23:42.9889080Z     
2025-02-25T14:23:42.9889160Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9889280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9889450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9889540Z E           AssertionError: Series are different
2025-02-25T14:23:42.9889610Z E           
2025-02-25T14:23:42.9889690Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9890010Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9890330Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9890790Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9890790Z 
2025-02-25T14:23:42.9891060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9891230Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-25T14:23:42.9891310Z 
2025-02-25T14:23:42.9891430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9891540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9891630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9891750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9891860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9891940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9891990Z err_msg = None
2025-02-25T14:23:42.9892000Z 
2025-02-25T14:23:42.9892080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9892150Z         if err_msg is None:
2025-02-25T14:23:42.9892220Z             if left.shape != right.shape:
2025-02-25T14:23:42.9892290Z                 raise_assert_detail(
2025-02-25T14:23:42.9892410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9892470Z                 )
2025-02-25T14:23:42.9892510Z     
2025-02-25T14:23:42.9892570Z             diff = 0
2025-02-25T14:23:42.9892660Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9892740Z                 # count up differences
2025-02-25T14:23:42.9892890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9892960Z                     diff += 1
2025-02-25T14:23:42.9893020Z     
2025-02-25T14:23:42.9893090Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9893200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9893340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9893440Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9893500Z E           
2025-02-25T14:23:42.9893600Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9893820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9894040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9894050Z 
2025-02-25T14:23:42.9894300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9894310Z 
2025-02-25T14:23:42.9894450Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9894460Z 
2025-02-25T14:23:42.9894640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19310>
2025-02-25T14:23:42.9894800Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>, attr = 'nu'
2025-02-25T14:23:42.9894870Z 
2025-02-25T14:23:42.9894990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9895090Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9895160Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9895210Z         try:
2025-02-25T14:23:42.9895330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9895390Z         except KeyError:
2025-02-25T14:23:42.9895510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9895560Z     
2025-02-25T14:23:42.9895630Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9895760Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9895830Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9895940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9896010Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9896090Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9896180Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9896180Z 
2025-02-25T14:23:42.9896280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9896380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9896500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9896560Z     ???
2025-02-25T14:23:42.9896660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9896660Z 
2025-02-25T14:23:42.9896710Z >   ???
2025-02-25T14:23:42.9896810Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9896860Z E   
2025-02-25T14:23:42.9896970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9897060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9897120Z E          ...
2025-02-25T14:23:42.9897200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9897310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9897400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9897450Z E          ...
2025-02-25T14:23:42.9897530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9897630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9897720Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9897730Z 
2025-02-25T14:23:42.9897790Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9897990Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-25T14:23:42.9898000Z 
2025-02-25T14:23:42.9898110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9898230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9898320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9898430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9898540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9898620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9898680Z err_msg = None
2025-02-25T14:23:42.9898690Z 
2025-02-25T14:23:42.9898770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9898830Z         if err_msg is None:
2025-02-25T14:23:42.9898910Z             if left.shape != right.shape:
2025-02-25T14:23:42.9898980Z                 raise_assert_detail(
2025-02-25T14:23:42.9899100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9899160Z                 )
2025-02-25T14:23:42.9899210Z     
2025-02-25T14:23:42.9899260Z             diff = 0
2025-02-25T14:23:42.9899750Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9899820Z                 # count up differences
2025-02-25T14:23:42.9899970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9900030Z                     diff += 1
2025-02-25T14:23:42.9900080Z     
2025-02-25T14:23:42.9900150Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9900260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9900400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9900500Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9900680Z E           
2025-02-25T14:23:42.9900770Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9901000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9901230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9901240Z 
2025-02-25T14:23:42.9901490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9901500Z 
2025-02-25T14:23:42.9901640Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9901640Z 
2025-02-25T14:23:42.9901830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb193d0>
2025-02-25T14:23:42.9901970Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>
2025-02-25T14:23:42.9902030Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9902030Z 
2025-02-25T14:23:42.9902140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9902240Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9902300Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9902350Z         try:
2025-02-25T14:23:42.9902470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9902530Z         except KeyError:
2025-02-25T14:23:42.9902650Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9902690Z     
2025-02-25T14:23:42.9902760Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9902840Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9902900Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9903020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9903090Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9903160Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9903260Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9903260Z 
2025-02-25T14:23:42.9903360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9903460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9903580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9903630Z     ???
2025-02-25T14:23:42.9903720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9903720Z 
2025-02-25T14:23:42.9903770Z >   ???
2025-02-25T14:23:42.9903880Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9903930Z E   
2025-02-25T14:23:42.9904030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9904120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9904180Z E          ...
2025-02-25T14:23:42.9904320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9904430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9904530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9904580Z E          ...
2025-02-25T14:23:42.9904660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9904760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9904840Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9904840Z 
2025-02-25T14:23:42.9904920Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9905090Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-25T14:23:42.9905130Z 
2025-02-25T14:23:42.9905250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9905360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9905440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9905550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9905660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9905740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9905800Z err_msg = None
2025-02-25T14:23:42.9905800Z 
2025-02-25T14:23:42.9905890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9905960Z         if err_msg is None:
2025-02-25T14:23:42.9906030Z             if left.shape != right.shape:
2025-02-25T14:23:42.9906100Z                 raise_assert_detail(
2025-02-25T14:23:42.9906230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9906290Z                 )
2025-02-25T14:23:42.9906340Z     
2025-02-25T14:23:42.9906390Z             diff = 0
2025-02-25T14:23:42.9906490Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9906570Z                 # count up differences
2025-02-25T14:23:42.9906710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9906770Z                     diff += 1
2025-02-25T14:23:42.9906820Z     
2025-02-25T14:23:42.9906890Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9907010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9907150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9907250Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9907310Z E           
2025-02-25T14:23:42.9907400Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9907630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9907860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9907860Z 
2025-02-25T14:23:42.9908150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9908160Z 
2025-02-25T14:23:42.9908310Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9908310Z 
2025-02-25T14:23:42.9908500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19490>
2025-02-25T14:23:42.9908670Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>, attr = 'f_lu'
2025-02-25T14:23:42.9908760Z 
2025-02-25T14:23:42.9908890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9908990Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9909050Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9909110Z         try:
2025-02-25T14:23:42.9909230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9909290Z         except KeyError:
2025-02-25T14:23:42.9909410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9909460Z     
2025-02-25T14:23:42.9909530Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9909670Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9909750Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9909860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9909940Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9910010Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9910110Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9910120Z 
2025-02-25T14:23:42.9910220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9910320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9910450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9910500Z     ???
2025-02-25T14:23:42.9910610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9910610Z 
2025-02-25T14:23:42.9910670Z >   ???
2025-02-25T14:23:42.9910770Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9910820Z E   
2025-02-25T14:23:42.9910930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9911020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9911080Z E          ...
2025-02-25T14:23:42.9911160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9911270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9911370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9911420Z E          ...
2025-02-25T14:23:42.9911490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9911600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9911690Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9911700Z 
2025-02-25T14:23:42.9911770Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9911970Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-25T14:23:42.9911970Z 
2025-02-25T14:23:42.9912080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9912200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9912290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9912520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9912650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9912730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9912790Z err_msg = None
2025-02-25T14:23:42.9912790Z 
2025-02-25T14:23:42.9912880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9912960Z         if err_msg is None:
2025-02-25T14:23:42.9913040Z             if left.shape != right.shape:
2025-02-25T14:23:42.9913110Z                 raise_assert_detail(
2025-02-25T14:23:42.9913230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9913290Z                 )
2025-02-25T14:23:42.9913340Z     
2025-02-25T14:23:42.9913390Z             diff = 0
2025-02-25T14:23:42.9913590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9913670Z                 # count up differences
2025-02-25T14:23:42.9913820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9913890Z                     diff += 1
2025-02-25T14:23:42.9913940Z     
2025-02-25T14:23:42.9914010Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9914130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9914270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9914360Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9914450Z E           
2025-02-25T14:23:42.9914560Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9914790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9915020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9915030Z 
2025-02-25T14:23:42.9915280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9915290Z 
2025-02-25T14:23:42.9915440Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9915440Z 
2025-02-25T14:23:42.9915630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19c10>
2025-02-25T14:23:42.9915770Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>
2025-02-25T14:23:42.9915830Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9915830Z 
2025-02-25T14:23:42.9915940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9916030Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9916100Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9916150Z         try:
2025-02-25T14:23:42.9916260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9916320Z         except KeyError:
2025-02-25T14:23:42.9916430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9916480Z     
2025-02-25T14:23:42.9916550Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9916620Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9916690Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9916800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9916860Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9916930Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9917020Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9917070Z             else:
2025-02-25T14:23:42.9917150Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9917230Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9917240Z 
2025-02-25T14:23:42.9917340Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9917430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9917550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9917600Z     ???
2025-02-25T14:23:42.9917700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9917710Z 
2025-02-25T14:23:42.9917750Z >   ???
2025-02-25T14:23:42.9917860Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9917910Z E   
2025-02-25T14:23:42.9918130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9918230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9918280Z E          ...
2025-02-25T14:23:42.9918350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9918460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9918550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9918600Z E          ...
2025-02-25T14:23:42.9918670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9918770Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9918940Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9918940Z 
2025-02-25T14:23:42.9919010Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9919190Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-25T14:23:42.9919200Z 
2025-02-25T14:23:42.9919310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9919420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9919500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9919620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9919730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9919810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9919870Z err_msg = None
2025-02-25T14:23:42.9919870Z 
2025-02-25T14:23:42.9919960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9920020Z         if err_msg is None:
2025-02-25T14:23:42.9920100Z             if left.shape != right.shape:
2025-02-25T14:23:42.9920160Z                 raise_assert_detail(
2025-02-25T14:23:42.9920290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9920340Z                 )
2025-02-25T14:23:42.9920390Z     
2025-02-25T14:23:42.9920440Z             diff = 0
2025-02-25T14:23:42.9920540Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9920610Z                 # count up differences
2025-02-25T14:23:42.9920750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9920810Z                     diff += 1
2025-02-25T14:23:42.9920860Z     
2025-02-25T14:23:42.9920940Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9921060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9921210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9921300Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9921360Z E           
2025-02-25T14:23:42.9921460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9921680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9921900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9921910Z 
2025-02-25T14:23:42.9922160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9922160Z 
2025-02-25T14:23:42.9922310Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9922360Z 
2025-02-25T14:23:42.9922550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19cd0>
2025-02-25T14:23:42.9922680Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>
2025-02-25T14:23:42.9922740Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9922740Z 
2025-02-25T14:23:42.9922850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9922940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9923010Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9923060Z         try:
2025-02-25T14:23:42.9923180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9923280Z         except KeyError:
2025-02-25T14:23:42.9923400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9923450Z     
2025-02-25T14:23:42.9923520Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9923590Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9923670Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9923790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9923860Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9923930Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9924020Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9924070Z             else:
2025-02-25T14:23:42.9924150Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9924240Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9924250Z 
2025-02-25T14:23:42.9924350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9924450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9924570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9924620Z     ???
2025-02-25T14:23:42.9924710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9924710Z 
2025-02-25T14:23:42.9924760Z >   ???
2025-02-25T14:23:42.9924860Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9924910Z E   
2025-02-25T14:23:42.9925010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9925110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9925160Z E          ...
2025-02-25T14:23:42.9925230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9925330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9925420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9925480Z E          ...
2025-02-25T14:23:42.9925550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9925650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9925730Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9925740Z 
2025-02-25T14:23:42.9925800Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9925980Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-25T14:23:42.9925990Z 
2025-02-25T14:23:42.9926100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9926220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9926300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9926410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9926510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9926600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9926650Z err_msg = None
2025-02-25T14:23:42.9926650Z 
2025-02-25T14:23:42.9926740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9926870Z         if err_msg is None:
2025-02-25T14:23:42.9926940Z             if left.shape != right.shape:
2025-02-25T14:23:42.9927010Z                 raise_assert_detail(
2025-02-25T14:23:42.9927120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9927170Z                 )
2025-02-25T14:23:42.9927220Z     
2025-02-25T14:23:42.9927270Z             diff = 0
2025-02-25T14:23:42.9927360Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9927430Z                 # count up differences
2025-02-25T14:23:42.9927570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9927680Z                     diff += 1
2025-02-25T14:23:42.9927730Z     
2025-02-25T14:23:42.9927800Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9927910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9928050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9928140Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9928190Z E           
2025-02-25T14:23:42.9928280Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9928500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9928720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9928730Z 
2025-02-25T14:23:42.9928970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9928980Z 
2025-02-25T14:23:42.9929110Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9929110Z 
2025-02-25T14:23:42.9929290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb19e50>
2025-02-25T14:23:42.9929450Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fd91130>, attr = 'j_blues'
2025-02-25T14:23:42.9929460Z 
2025-02-25T14:23:42.9929570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9929660Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9929720Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9929780Z         try:
2025-02-25T14:23:42.9929890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9929950Z         except KeyError:
2025-02-25T14:23:42.9930060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9930110Z     
2025-02-25T14:23:42.9930180Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9930250Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9930320Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9930420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9930490Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9930560Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9930650Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9930700Z             else:
2025-02-25T14:23:42.9930770Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9930860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9930870Z 
2025-02-25T14:23:42.9930970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9931060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9931230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9931290Z     ???
2025-02-25T14:23:42.9931380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9931380Z 
2025-02-25T14:23:42.9931430Z >   ???
2025-02-25T14:23:42.9931540Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9931590Z E   
2025-02-25T14:23:42.9931690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9931780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9931830Z E          ...
2025-02-25T14:23:42.9931910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9932060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9932160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9932210Z E          ...
2025-02-25T14:23:42.9932280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9932400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9932480Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9932490Z 
2025-02-25T14:23:42.9932570Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9932740Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-25T14:23:42.9932740Z 
2025-02-25T14:23:42.9932860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9932980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9933060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9933190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9933310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9933400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9933450Z err_msg = None
2025-02-25T14:23:42.9933460Z 
2025-02-25T14:23:42.9933550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9933610Z         if err_msg is None:
2025-02-25T14:23:42.9933690Z             if left.shape != right.shape:
2025-02-25T14:23:42.9933750Z                 raise_assert_detail(
2025-02-25T14:23:42.9933870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9933930Z                 )
2025-02-25T14:23:42.9933980Z     
2025-02-25T14:23:42.9934030Z             diff = 0
2025-02-25T14:23:42.9934130Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9934200Z                 # count up differences
2025-02-25T14:23:42.9934360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9934420Z                     diff += 1
2025-02-25T14:23:42.9934470Z     
2025-02-25T14:23:42.9934550Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9934660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9934820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9934910Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9934960Z E           
2025-02-25T14:23:42.9935050Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9935270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9935500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9935790Z 
2025-02-25T14:23:42.9936100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9936100Z 
2025-02-25T14:23:42.9936250Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9936250Z 
2025-02-25T14:23:42.9936440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1abd0>
2025-02-25T14:23:42.9936610Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>, attr = 'lines'
2025-02-25T14:23:42.9936880Z 
2025-02-25T14:23:42.9937010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9937110Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9937180Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9937230Z         try:
2025-02-25T14:23:42.9937350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9937420Z         except KeyError:
2025-02-25T14:23:42.9937540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9937590Z     
2025-02-25T14:23:42.9937660Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9937740Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9937810Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9937930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9938000Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9938080Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9938170Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9938230Z             else:
2025-02-25T14:23:42.9938400Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9938520Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9938520Z 
2025-02-25T14:23:42.9938630Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9938750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9938890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9938970Z     ???
2025-02-25T14:23:42.9939070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9939070Z 
2025-02-25T14:23:42.9939200Z >   ???
2025-02-25T14:23:42.9939320Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9945650Z E   
2025-02-25T14:23:42.9945800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9945910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9945960Z E          ...
2025-02-25T14:23:42.9946030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9946140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9946240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9946290Z E          ...
2025-02-25T14:23:42.9946370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9946470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9946550Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9946560Z 
2025-02-25T14:23:42.9946620Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9946840Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-25T14:23:42.9946850Z 
2025-02-25T14:23:42.9947020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1ac90>
2025-02-25T14:23:42.9947150Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>
2025-02-25T14:23:42.9947230Z attr = 'lines_lower_level_index'
2025-02-25T14:23:42.9947230Z 
2025-02-25T14:23:42.9947340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9947660Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9947720Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9947780Z         try:
2025-02-25T14:23:42.9947900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9947970Z         except KeyError:
2025-02-25T14:23:42.9948080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9948130Z     
2025-02-25T14:23:42.9948200Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9948280Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9948350Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9948460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9948590Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9948670Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9948770Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9948770Z 
2025-02-25T14:23:42.9948880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9948980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9948980Z 
2025-02-25T14:23:42.9949100Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9949170Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9949270Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9949330Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9949460Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:42.9949520Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:42.9949620Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9949680Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:42.9949740Z err_msg = None
2025-02-25T14:23:42.9949740Z 
2025-02-25T14:23:42.9949840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9949900Z         if err_msg is None:
2025-02-25T14:23:42.9949970Z             if left.shape != right.shape:
2025-02-25T14:23:42.9950040Z                 raise_assert_detail(
2025-02-25T14:23:42.9950160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9950210Z                 )
2025-02-25T14:23:42.9950260Z     
2025-02-25T14:23:42.9950310Z             diff = 0
2025-02-25T14:23:42.9950400Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9950470Z                 # count up differences
2025-02-25T14:23:42.9950620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9950680Z                     diff += 1
2025-02-25T14:23:42.9950730Z     
2025-02-25T14:23:42.9950800Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9950910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9951060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9951140Z E           AssertionError: Series are different
2025-02-25T14:23:42.9951190Z E           
2025-02-25T14:23:42.9951270Z E           Series values are different (4.04858 %)
2025-02-25T14:23:42.9951600Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9951880Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9952220Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9952230Z 
2025-02-25T14:23:42.9952610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9952900Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-25T14:23:42.9952900Z 
2025-02-25T14:23:42.9953090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1ad50>
2025-02-25T14:23:42.9953220Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>
2025-02-25T14:23:42.9953290Z attr = 'lines_upper_level_index'
2025-02-25T14:23:42.9953300Z 
2025-02-25T14:23:42.9953410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9953500Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9953570Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9953620Z         try:
2025-02-25T14:23:42.9953730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9953800Z         except KeyError:
2025-02-25T14:23:42.9953910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9953960Z     
2025-02-25T14:23:42.9954030Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9954100Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9954170Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9954280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9954350Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9954420Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9954510Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9954520Z 
2025-02-25T14:23:42.9954620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9954710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9954720Z 
2025-02-25T14:23:42.9954830Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9954900Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9954990Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9955060Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9955180Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:42.9955250Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:42.9955350Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:42.9955410Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:42.9955470Z err_msg = None
2025-02-25T14:23:42.9955470Z 
2025-02-25T14:23:42.9955560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9955620Z         if err_msg is None:
2025-02-25T14:23:42.9955690Z             if left.shape != right.shape:
2025-02-25T14:23:42.9955760Z                 raise_assert_detail(
2025-02-25T14:23:42.9955880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9955930Z                 )
2025-02-25T14:23:42.9955980Z     
2025-02-25T14:23:42.9956040Z             diff = 0
2025-02-25T14:23:42.9956130Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9956200Z                 # count up differences
2025-02-25T14:23:42.9956340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9956470Z                     diff += 1
2025-02-25T14:23:42.9956520Z     
2025-02-25T14:23:42.9956590Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9956700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9956840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9956920Z E           AssertionError: Series are different
2025-02-25T14:23:42.9956970Z E           
2025-02-25T14:23:42.9957060Z E           Series values are different (6.47773 %)
2025-02-25T14:23:42.9957380Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:42.9958600Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9958940Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:42.9958940Z 
2025-02-25T14:23:42.9959210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9959390Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-25T14:23:42.9959390Z 
2025-02-25T14:23:42.9959500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9959620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9959700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9959820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9959930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9960020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9960070Z err_msg = None
2025-02-25T14:23:42.9960080Z 
2025-02-25T14:23:42.9960160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9960230Z         if err_msg is None:
2025-02-25T14:23:42.9960330Z             if left.shape != right.shape:
2025-02-25T14:23:42.9960410Z                 raise_assert_detail(
2025-02-25T14:23:42.9960530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9960580Z                 )
2025-02-25T14:23:42.9960620Z     
2025-02-25T14:23:42.9960670Z             diff = 0
2025-02-25T14:23:42.9960760Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9960850Z                 # count up differences
2025-02-25T14:23:42.9961000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9961060Z                     diff += 1
2025-02-25T14:23:42.9961110Z     
2025-02-25T14:23:42.9961170Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9961290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9961430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9961670Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9961720Z E           
2025-02-25T14:23:42.9961820Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9962040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9962280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9962350Z 
2025-02-25T14:23:42.9962610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9962620Z 
2025-02-25T14:23:42.9962760Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9962760Z 
2025-02-25T14:23:42.9962950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1af90>
2025-02-25T14:23:42.9963110Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>, attr = 'nu'
2025-02-25T14:23:42.9963110Z 
2025-02-25T14:23:42.9963220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9963320Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9963380Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9963440Z         try:
2025-02-25T14:23:42.9963550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9963610Z         except KeyError:
2025-02-25T14:23:42.9963720Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9963770Z     
2025-02-25T14:23:42.9963840Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9963910Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9963980Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9964090Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9964160Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9964230Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9964330Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9964330Z 
2025-02-25T14:23:42.9964430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9964530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9964650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9964700Z     ???
2025-02-25T14:23:42.9964800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9964810Z 
2025-02-25T14:23:42.9964850Z >   ???
2025-02-25T14:23:42.9964960Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9965010Z E   
2025-02-25T14:23:42.9965110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9965200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9965260Z E          ...
2025-02-25T14:23:42.9965330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9965440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9965530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9965580Z E          ...
2025-02-25T14:23:42.9965650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9965760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9965840Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9965850Z 
2025-02-25T14:23:42.9965910Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9966160Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-25T14:23:42.9966160Z 
2025-02-25T14:23:42.9966270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9966390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9966470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9966580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9966690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9966810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9966870Z err_msg = None
2025-02-25T14:23:42.9966880Z 
2025-02-25T14:23:42.9966970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9967030Z         if err_msg is None:
2025-02-25T14:23:42.9967100Z             if left.shape != right.shape:
2025-02-25T14:23:42.9967170Z                 raise_assert_detail(
2025-02-25T14:23:42.9967290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9967340Z                 )
2025-02-25T14:23:42.9967390Z     
2025-02-25T14:23:42.9967440Z             diff = 0
2025-02-25T14:23:42.9967540Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9967600Z                 # count up differences
2025-02-25T14:23:42.9967740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9967800Z                     diff += 1
2025-02-25T14:23:42.9967860Z     
2025-02-25T14:23:42.9967930Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9968040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9968190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9968290Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9968340Z E           
2025-02-25T14:23:42.9968430Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9968660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9968870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9968880Z 
2025-02-25T14:23:42.9969140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9969140Z 
2025-02-25T14:23:42.9969290Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9969290Z 
2025-02-25T14:23:42.9969470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1b050>
2025-02-25T14:23:42.9969600Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>
2025-02-25T14:23:42.9969660Z attr = 'wavelength_cm'
2025-02-25T14:23:42.9969660Z 
2025-02-25T14:23:42.9969770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9969870Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9969930Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9969980Z         try:
2025-02-25T14:23:42.9970100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9970160Z         except KeyError:
2025-02-25T14:23:42.9970270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9970370Z     
2025-02-25T14:23:42.9970440Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9970510Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9970580Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9970700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9970760Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9970840Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9970930Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9970930Z 
2025-02-25T14:23:42.9971030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9971180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9971310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9971360Z     ???
2025-02-25T14:23:42.9971460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9971460Z 
2025-02-25T14:23:42.9971510Z >   ???
2025-02-25T14:23:42.9971620Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9971670Z E   
2025-02-25T14:23:42.9971770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9971860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9971910Z E          ...
2025-02-25T14:23:42.9971980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9972090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9972180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9972230Z E          ...
2025-02-25T14:23:42.9972300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9972400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9972480Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9972490Z 
2025-02-25T14:23:42.9972560Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9972730Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-25T14:23:42.9972730Z 
2025-02-25T14:23:42.9972840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9972960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9973030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9973150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9973260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9973340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9973390Z err_msg = None
2025-02-25T14:23:42.9973390Z 
2025-02-25T14:23:42.9973480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9973550Z         if err_msg is None:
2025-02-25T14:23:42.9973620Z             if left.shape != right.shape:
2025-02-25T14:23:42.9973690Z                 raise_assert_detail(
2025-02-25T14:23:42.9973800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9973850Z                 )
2025-02-25T14:23:42.9973900Z     
2025-02-25T14:23:42.9973950Z             diff = 0
2025-02-25T14:23:42.9974050Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9974120Z                 # count up differences
2025-02-25T14:23:42.9974260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9974320Z                     diff += 1
2025-02-25T14:23:42.9974370Z     
2025-02-25T14:23:42.9974440Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9974550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9974700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9974840Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9974890Z E           
2025-02-25T14:23:42.9974990Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9975210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9975430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9975470Z 
2025-02-25T14:23:42.9975730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9975730Z 
2025-02-25T14:23:42.9975880Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9975880Z 
2025-02-25T14:23:42.9976070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1b110>
2025-02-25T14:23:42.9976240Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>, attr = 'f_lu'
2025-02-25T14:23:42.9976240Z 
2025-02-25T14:23:42.9976360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9976450Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9976510Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9976570Z         try:
2025-02-25T14:23:42.9976680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9976740Z         except KeyError:
2025-02-25T14:23:42.9976850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9976910Z     
2025-02-25T14:23:42.9976970Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9977050Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9977120Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9977230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9977300Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9977370Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9977460Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9977460Z 
2025-02-25T14:23:42.9977560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:42.9977650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9977770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9977820Z     ???
2025-02-25T14:23:42.9977920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9977920Z 
2025-02-25T14:23:42.9977970Z >   ???
2025-02-25T14:23:42.9978070Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9978120Z E   
2025-02-25T14:23:42.9978220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9978310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9978360Z E          ...
2025-02-25T14:23:42.9978430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9978540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9978630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9978680Z E          ...
2025-02-25T14:23:42.9978750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9978860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9978950Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9978950Z 
2025-02-25T14:23:42.9979020Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9979490Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-25T14:23:42.9979490Z 
2025-02-25T14:23:42.9979610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9979730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9979810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9979930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9980030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9980200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9980260Z err_msg = None
2025-02-25T14:23:42.9980260Z 
2025-02-25T14:23:42.9980350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9980410Z         if err_msg is None:
2025-02-25T14:23:42.9980490Z             if left.shape != right.shape:
2025-02-25T14:23:42.9980560Z                 raise_assert_detail(
2025-02-25T14:23:42.9980680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9980740Z                 )
2025-02-25T14:23:42.9980790Z     
2025-02-25T14:23:42.9980840Z             diff = 0
2025-02-25T14:23:42.9980930Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9981000Z                 # count up differences
2025-02-25T14:23:42.9981150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9981210Z                     diff += 1
2025-02-25T14:23:42.9981260Z     
2025-02-25T14:23:42.9981330Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9981450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9981590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9981700Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9981750Z E           
2025-02-25T14:23:42.9981860Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9982090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9983000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9983130Z 
2025-02-25T14:23:42.9983860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9983880Z 
2025-02-25T14:23:42.9984260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9984270Z 
2025-02-25T14:23:42.9984760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1b890>
2025-02-25T14:23:42.9985120Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>
2025-02-25T14:23:42.9985300Z attr = 'tau_sobolevs'
2025-02-25T14:23:42.9985310Z 
2025-02-25T14:23:42.9985620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9985880Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:42.9986090Z         key = f"plasma/{attr}"
2025-02-25T14:23:42.9986250Z         try:
2025-02-25T14:23:42.9986590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:42.9986760Z         except KeyError:
2025-02-25T14:23:42.9987080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:42.9987920Z     
2025-02-25T14:23:42.9988120Z         if hasattr(plasma, attr):
2025-02-25T14:23:42.9988330Z             actual = getattr(plasma, attr)
2025-02-25T14:23:42.9988540Z             if attr == "selected_atoms":
2025-02-25T14:23:42.9988850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:42.9989050Z             elif actual.ndim == 1:
2025-02-25T14:23:42.9989250Z                 actual = pd.Series(actual)
2025-02-25T14:23:42.9989510Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:42.9989690Z             else:
2025-02-25T14:23:42.9989900Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:42.9990360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:42.9990370Z 
2025-02-25T14:23:42.9990650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:42.9990920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9991260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:42.9991430Z     ???
2025-02-25T14:23:42.9991680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:42.9991690Z 
2025-02-25T14:23:42.9991850Z >   ???
2025-02-25T14:23:42.9992150Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:42.9992300Z E   
2025-02-25T14:23:42.9993260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:42.9993550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9993720Z E          ...
2025-02-25T14:23:42.9993910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9994220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9994470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:42.9994630Z E          ...
2025-02-25T14:23:42.9994820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:42.9995290Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:42.9995450Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:42.9995460Z 
2025-02-25T14:23:42.9995530Z testing.pyx:173: AssertionError
2025-02-25T14:23:42.9995730Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-25T14:23:42.9995730Z 
2025-02-25T14:23:42.9995840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9995960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9996040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9996180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:42.9996290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:42.9996370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:42.9996450Z err_msg = None
2025-02-25T14:23:42.9996460Z 
2025-02-25T14:23:42.9996550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:42.9996610Z         if err_msg is None:
2025-02-25T14:23:42.9996690Z             if left.shape != right.shape:
2025-02-25T14:23:42.9996750Z                 raise_assert_detail(
2025-02-25T14:23:42.9996880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:42.9996930Z                 )
2025-02-25T14:23:42.9996980Z     
2025-02-25T14:23:42.9997030Z             diff = 0
2025-02-25T14:23:42.9997130Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:42.9997200Z                 # count up differences
2025-02-25T14:23:42.9997350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:42.9997410Z                     diff += 1
2025-02-25T14:23:42.9997460Z     
2025-02-25T14:23:42.9997530Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:42.9997960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:42.9998110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:42.9998210Z E           AssertionError: numpy array are different
2025-02-25T14:23:42.9998260Z E           
2025-02-25T14:23:42.9998360Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:42.9998580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9998930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:42.9998930Z 
2025-02-25T14:23:42.9999200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:42.9999200Z 
2025-02-25T14:23:42.9999340Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:42.9999350Z 
2025-02-25T14:23:42.9999530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1b950>
2025-02-25T14:23:42.9999660Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>
2025-02-25T14:23:42.9999720Z attr = 'beta_sobolev'
2025-02-25T14:23:42.9999720Z 
2025-02-25T14:23:42.9999840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:42.9999930Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0000000Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0000050Z         try:
2025-02-25T14:23:43.0000170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0000230Z         except KeyError:
2025-02-25T14:23:43.0000350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0000400Z     
2025-02-25T14:23:43.0000460Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0000540Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0000600Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0000720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0000780Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0000860Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0000950Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0001000Z             else:
2025-02-25T14:23:43.0001080Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0001170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0001170Z 
2025-02-25T14:23:43.0001270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0001370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0001490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0001540Z     ???
2025-02-25T14:23:43.0001640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0001640Z 
2025-02-25T14:23:43.0001690Z >   ???
2025-02-25T14:23:43.0001790Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0001840Z E   
2025-02-25T14:23:43.0001940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0002040Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0002090Z E          ...
2025-02-25T14:23:43.0002160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0002270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0002430Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0002480Z E          ...
2025-02-25T14:23:43.0002560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0002660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0002740Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0002750Z 
2025-02-25T14:23:43.0002810Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0002990Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-25T14:23:43.0002990Z 
2025-02-25T14:23:43.0003100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0003300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0003390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0003500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0003610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0003690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0003750Z err_msg = None
2025-02-25T14:23:43.0003750Z 
2025-02-25T14:23:43.0003840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0003900Z         if err_msg is None:
2025-02-25T14:23:43.0003980Z             if left.shape != right.shape:
2025-02-25T14:23:43.0004170Z                 raise_assert_detail(
2025-02-25T14:23:43.0004290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0004370Z                 )
2025-02-25T14:23:43.0011400Z     
2025-02-25T14:23:43.0011510Z             diff = 0
2025-02-25T14:23:43.0011610Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0011680Z                 # count up differences
2025-02-25T14:23:43.0011830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0011900Z                     diff += 1
2025-02-25T14:23:43.0011960Z     
2025-02-25T14:23:43.0012030Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0012150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0012300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0012400Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0012450Z E           
2025-02-25T14:23:43.0012550Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0012780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0013010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0013020Z 
2025-02-25T14:23:43.0013280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0013280Z 
2025-02-25T14:23:43.0013430Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0013430Z 
2025-02-25T14:23:43.0013620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb1bad0>
2025-02-25T14:23:43.0013800Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e1d4fe0>, attr = 'j_blues'
2025-02-25T14:23:43.0013800Z 
2025-02-25T14:23:43.0013920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0014350Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0014420Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0014470Z         try:
2025-02-25T14:23:43.0014600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0014660Z         except KeyError:
2025-02-25T14:23:43.0014780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0014840Z     
2025-02-25T14:23:43.0014900Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0014980Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0015050Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0015300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0015370Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0015450Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0015540Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0015600Z             else:
2025-02-25T14:23:43.0015680Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0015770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0015780Z 
2025-02-25T14:23:43.0015880Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0015980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0016100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0016150Z     ???
2025-02-25T14:23:43.0016250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0016260Z 
2025-02-25T14:23:43.0016310Z >   ???
2025-02-25T14:23:43.0016420Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0016470Z E   
2025-02-25T14:23:43.0016570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0016670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0016720Z E          ...
2025-02-25T14:23:43.0016800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0016900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0017000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0017050Z E          ...
2025-02-25T14:23:43.0017120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0017220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0017300Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0017310Z 
2025-02-25T14:23:43.0017380Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0017550Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-25T14:23:43.0017560Z 
2025-02-25T14:23:43.0017670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0017790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0017870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0017980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0018100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0018180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0018230Z err_msg = None
2025-02-25T14:23:43.0018230Z 
2025-02-25T14:23:43.0018330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0018390Z         if err_msg is None:
2025-02-25T14:23:43.0018470Z             if left.shape != right.shape:
2025-02-25T14:23:43.0018540Z                 raise_assert_detail(
2025-02-25T14:23:43.0018660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0018710Z                 )
2025-02-25T14:23:43.0018770Z     
2025-02-25T14:23:43.0018890Z             diff = 0
2025-02-25T14:23:43.0018990Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0019060Z                 # count up differences
2025-02-25T14:23:43.0019200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0019260Z                     diff += 1
2025-02-25T14:23:43.0019320Z     
2025-02-25T14:23:43.0019410Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0019540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0019720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0019900Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0019970Z E           
2025-02-25T14:23:43.0020060Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0020280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0020520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0020520Z 
2025-02-25T14:23:43.0020780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0020790Z 
2025-02-25T14:23:43.0020940Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0020940Z 
2025-02-25T14:23:43.0021120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4c890>
2025-02-25T14:23:43.0021300Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>, attr = 'lines'
2025-02-25T14:23:43.0021310Z 
2025-02-25T14:23:43.0021420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0021520Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0021590Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0021650Z         try:
2025-02-25T14:23:43.0021770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0021840Z         except KeyError:
2025-02-25T14:23:43.0021950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0022000Z     
2025-02-25T14:23:43.0022070Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0022150Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0022220Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0022340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0022400Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0022480Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0022580Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0022630Z             else:
2025-02-25T14:23:43.0022710Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0022800Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0022810Z 
2025-02-25T14:23:43.0022910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0023010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0023140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0023190Z     ???
2025-02-25T14:23:43.0023290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0023290Z 
2025-02-25T14:23:43.0023340Z >   ???
2025-02-25T14:23:43.0023450Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0023500Z E   
2025-02-25T14:23:43.0023700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0023800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0023850Z E          ...
2025-02-25T14:23:43.0023930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0024040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0024130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0024180Z E          ...
2025-02-25T14:23:43.0024260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0024360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0024500Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0024510Z 
2025-02-25T14:23:43.0024580Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0024800Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-25T14:23:43.0024800Z 
2025-02-25T14:23:43.0024980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4c950>
2025-02-25T14:23:43.0025130Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>
2025-02-25T14:23:43.0025210Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0025220Z 
2025-02-25T14:23:43.0025330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0025430Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0025490Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0025550Z         try:
2025-02-25T14:23:43.0025670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0025730Z         except KeyError:
2025-02-25T14:23:43.0025860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0025910Z     
2025-02-25T14:23:43.0025970Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0026050Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0026130Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0026240Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0026310Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0026380Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0026480Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0026480Z 
2025-02-25T14:23:43.0026580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0026680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0026690Z 
2025-02-25T14:23:43.0026810Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0026880Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0026980Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0027050Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0027170Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0027230Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0027330Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0027390Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0027450Z err_msg = None
2025-02-25T14:23:43.0027450Z 
2025-02-25T14:23:43.0027540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0027600Z         if err_msg is None:
2025-02-25T14:23:43.0027680Z             if left.shape != right.shape:
2025-02-25T14:23:43.0027740Z                 raise_assert_detail(
2025-02-25T14:23:43.0027870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0027920Z                 )
2025-02-25T14:23:43.0027970Z     
2025-02-25T14:23:43.0028020Z             diff = 0
2025-02-25T14:23:43.0028120Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0028180Z                 # count up differences
2025-02-25T14:23:43.0028430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0028500Z                     diff += 1
2025-02-25T14:23:43.0028550Z     
2025-02-25T14:23:43.0028630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0028740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0028890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0028970Z E           AssertionError: Series are different
2025-02-25T14:23:43.0029030Z E           
2025-02-25T14:23:43.0029110Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0029500Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0029790Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0030070Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0030080Z 
2025-02-25T14:23:43.0030340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0030560Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-25T14:23:43.0030570Z 
2025-02-25T14:23:43.0030740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4ca10>
2025-02-25T14:23:43.0030880Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>
2025-02-25T14:23:43.0030940Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0030950Z 
2025-02-25T14:23:43.0031060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0031160Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0031230Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0031280Z         try:
2025-02-25T14:23:43.0031390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0031450Z         except KeyError:
2025-02-25T14:23:43.0031560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0031610Z     
2025-02-25T14:23:43.0031680Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0031750Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0031820Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0031930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0031990Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0032060Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0032150Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0032150Z 
2025-02-25T14:23:43.0032250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0032360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0032360Z 
2025-02-25T14:23:43.0032470Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0032540Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0032730Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0032800Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0032920Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0032980Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0033080Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0033260Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0033320Z err_msg = None
2025-02-25T14:23:43.0033320Z 
2025-02-25T14:23:43.0033410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0033760Z         if err_msg is None:
2025-02-25T14:23:43.0033830Z             if left.shape != right.shape:
2025-02-25T14:23:43.0033900Z                 raise_assert_detail(
2025-02-25T14:23:43.0034020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0034070Z                 )
2025-02-25T14:23:43.0034120Z     
2025-02-25T14:23:43.0034170Z             diff = 0
2025-02-25T14:23:43.0034260Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0034320Z                 # count up differences
2025-02-25T14:23:43.0034460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0034520Z                     diff += 1
2025-02-25T14:23:43.0034570Z     
2025-02-25T14:23:43.0034640Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0034750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0034890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0034980Z E           AssertionError: Series are different
2025-02-25T14:23:43.0035030Z E           
2025-02-25T14:23:43.0035120Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0035430Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0035750Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0036090Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0036090Z 
2025-02-25T14:23:43.0036360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0036530Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-25T14:23:43.0036530Z 
2025-02-25T14:23:43.0036650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0036770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0036840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0036960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0037130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0037210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0037270Z err_msg = None
2025-02-25T14:23:43.0037270Z 
2025-02-25T14:23:43.0037360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0037420Z         if err_msg is None:
2025-02-25T14:23:43.0037500Z             if left.shape != right.shape:
2025-02-25T14:23:43.0037560Z                 raise_assert_detail(
2025-02-25T14:23:43.0037680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0037780Z                 )
2025-02-25T14:23:43.0037830Z     
2025-02-25T14:23:43.0037890Z             diff = 0
2025-02-25T14:23:43.0037980Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0038060Z                 # count up differences
2025-02-25T14:23:43.0038200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0038270Z                     diff += 1
2025-02-25T14:23:43.0038320Z     
2025-02-25T14:23:43.0038390Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0038500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0038650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0038740Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0038790Z E           
2025-02-25T14:23:43.0038880Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0039100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0039330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0039340Z 
2025-02-25T14:23:43.0039590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0039590Z 
2025-02-25T14:23:43.0039730Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0039740Z 
2025-02-25T14:23:43.0039910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4cc50>
2025-02-25T14:23:43.0040070Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>, attr = 'nu'
2025-02-25T14:23:43.0040080Z 
2025-02-25T14:23:43.0040190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0040290Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0040360Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0040420Z         try:
2025-02-25T14:23:43.0040570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0040650Z         except KeyError:
2025-02-25T14:23:43.0041310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0041540Z     
2025-02-25T14:23:43.0041730Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0042040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0042180Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0042320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0042400Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0042470Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0042570Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0042580Z 
2025-02-25T14:23:43.0042680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0043040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0043170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0043220Z     ???
2025-02-25T14:23:43.0043310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0043320Z 
2025-02-25T14:23:43.0043370Z >   ???
2025-02-25T14:23:43.0043470Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0043520Z E   
2025-02-25T14:23:43.0043620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0043720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0043850Z E          ...
2025-02-25T14:23:43.0043920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0044030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0044130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0044180Z E          ...
2025-02-25T14:23:43.0044260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0044360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0044450Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0044450Z 
2025-02-25T14:23:43.0044520Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0044720Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-25T14:23:43.0044720Z 
2025-02-25T14:23:43.0044830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0044960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0045040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0045150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0045270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0045350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0045410Z err_msg = None
2025-02-25T14:23:43.0045420Z 
2025-02-25T14:23:43.0045510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0045570Z         if err_msg is None:
2025-02-25T14:23:43.0045650Z             if left.shape != right.shape:
2025-02-25T14:23:43.0045720Z                 raise_assert_detail(
2025-02-25T14:23:43.0045840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0045890Z                 )
2025-02-25T14:23:43.0045940Z     
2025-02-25T14:23:43.0046000Z             diff = 0
2025-02-25T14:23:43.0046090Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0046160Z                 # count up differences
2025-02-25T14:23:43.0046300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0046370Z                     diff += 1
2025-02-25T14:23:43.0046440Z     
2025-02-25T14:23:43.0046510Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0046640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0046790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0046900Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0046950Z E           
2025-02-25T14:23:43.0047050Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0047280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0047530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0047620Z 
2025-02-25T14:23:43.0047890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0047900Z 
2025-02-25T14:23:43.0048050Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0048050Z 
2025-02-25T14:23:43.0048240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4cd10>
2025-02-25T14:23:43.0048430Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>
2025-02-25T14:23:43.0048490Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0048490Z 
2025-02-25T14:23:43.0048600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0048700Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0048760Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0048810Z         try:
2025-02-25T14:23:43.0048930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0048990Z         except KeyError:
2025-02-25T14:23:43.0049110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0049160Z     
2025-02-25T14:23:43.0049220Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0049300Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0049360Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0049490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0049560Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0049630Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0049720Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0049720Z 
2025-02-25T14:23:43.0049820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0049920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0050040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0050090Z     ???
2025-02-25T14:23:43.0050190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0050190Z 
2025-02-25T14:23:43.0050240Z >   ???
2025-02-25T14:23:43.0050340Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0050390Z E   
2025-02-25T14:23:43.0050490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0050580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0050640Z E          ...
2025-02-25T14:23:43.0050710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0050810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0050910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0050960Z E          ...
2025-02-25T14:23:43.0051030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0051130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0051220Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0051220Z 
2025-02-25T14:23:43.0051290Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0051460Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-25T14:23:43.0051470Z 
2025-02-25T14:23:43.0051570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0051700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0051780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0051890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0052110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0052190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0052250Z err_msg = None
2025-02-25T14:23:43.0052250Z 
2025-02-25T14:23:43.0052340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0052410Z         if err_msg is None:
2025-02-25T14:23:43.0052490Z             if left.shape != right.shape:
2025-02-25T14:23:43.0052560Z                 raise_assert_detail(
2025-02-25T14:23:43.0052680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0052820Z                 )
2025-02-25T14:23:43.0052870Z     
2025-02-25T14:23:43.0052920Z             diff = 0
2025-02-25T14:23:43.0053010Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0053080Z                 # count up differences
2025-02-25T14:23:43.0053220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0053280Z                     diff += 1
2025-02-25T14:23:43.0053340Z     
2025-02-25T14:23:43.0053410Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0053520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0053670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0053760Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0053820Z E           
2025-02-25T14:23:43.0053910Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0054120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0054350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0054360Z 
2025-02-25T14:23:43.0054600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0054610Z 
2025-02-25T14:23:43.0054750Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0054750Z 
2025-02-25T14:23:43.0054920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4cdd0>
2025-02-25T14:23:43.0055080Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>, attr = 'f_lu'
2025-02-25T14:23:43.0055090Z 
2025-02-25T14:23:43.0055200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0055290Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0055360Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0055410Z         try:
2025-02-25T14:23:43.0055530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0055580Z         except KeyError:
2025-02-25T14:23:43.0055690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0055740Z     
2025-02-25T14:23:43.0055810Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0055880Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0055940Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0056050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0056120Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0056190Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0056280Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0056280Z 
2025-02-25T14:23:43.0056430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0056530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0056640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0056690Z     ???
2025-02-25T14:23:43.0056790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0056790Z 
2025-02-25T14:23:43.0056840Z >   ???
2025-02-25T14:23:43.0056940Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0056980Z E   
2025-02-25T14:23:43.0057090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0057230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0057280Z E          ...
2025-02-25T14:23:43.0057350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0057460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0057550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0057600Z E          ...
2025-02-25T14:23:43.0057680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0057780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0057860Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0057860Z 
2025-02-25T14:23:43.0057930Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0058120Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-25T14:23:43.0058120Z 
2025-02-25T14:23:43.0058230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0058340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0058420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0058530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0058640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0058720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0058770Z err_msg = None
2025-02-25T14:23:43.0058770Z 
2025-02-25T14:23:43.0058860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0058920Z         if err_msg is None:
2025-02-25T14:23:43.0058990Z             if left.shape != right.shape:
2025-02-25T14:23:43.0059050Z                 raise_assert_detail(
2025-02-25T14:23:43.0059170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0059220Z                 )
2025-02-25T14:23:43.0059270Z     
2025-02-25T14:23:43.0059320Z             diff = 0
2025-02-25T14:23:43.0059410Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0059480Z                 # count up differences
2025-02-25T14:23:43.0059620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0059680Z                     diff += 1
2025-02-25T14:23:43.0059730Z     
2025-02-25T14:23:43.0059800Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0059910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0060050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0060140Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0060190Z E           
2025-02-25T14:23:43.0060280Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0060500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0060760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0060770Z 
2025-02-25T14:23:43.0061010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0061010Z 
2025-02-25T14:23:43.0061150Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0061160Z 
2025-02-25T14:23:43.0061330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4d550>
2025-02-25T14:23:43.0061500Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>
2025-02-25T14:23:43.0061560Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0061560Z 
2025-02-25T14:23:43.0061670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0061770Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0061830Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0061890Z         try:
2025-02-25T14:23:43.0062000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0062060Z         except KeyError:
2025-02-25T14:23:43.0062280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0062330Z     
2025-02-25T14:23:43.0062410Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0062490Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0062570Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0062690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0062770Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0062850Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0062960Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0070260Z             else:
2025-02-25T14:23:43.0070370Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0070470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0070470Z 
2025-02-25T14:23:43.0070570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0070680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0070840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0070900Z     ???
2025-02-25T14:23:43.0071010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0071010Z 
2025-02-25T14:23:43.0071070Z >   ???
2025-02-25T14:23:43.0071190Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0071240Z E   
2025-02-25T14:23:43.0071360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0071450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0071520Z E          ...
2025-02-25T14:23:43.0071610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0071730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0071830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0071880Z E          ...
2025-02-25T14:23:43.0071960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0072060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0072150Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0072150Z 
2025-02-25T14:23:43.0072220Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0072440Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-25T14:23:43.0072450Z 
2025-02-25T14:23:43.0072570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0072700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0072990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0073100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0073310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0073390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0073440Z err_msg = None
2025-02-25T14:23:43.0073440Z 
2025-02-25T14:23:43.0073530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0073590Z         if err_msg is None:
2025-02-25T14:23:43.0073670Z             if left.shape != right.shape:
2025-02-25T14:23:43.0073810Z                 raise_assert_detail(
2025-02-25T14:23:43.0073930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0073980Z                 )
2025-02-25T14:23:43.0074030Z     
2025-02-25T14:23:43.0074090Z             diff = 0
2025-02-25T14:23:43.0074180Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0074250Z                 # count up differences
2025-02-25T14:23:43.0074390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0074440Z                     diff += 1
2025-02-25T14:23:43.0074490Z     
2025-02-25T14:23:43.0074560Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0074670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0074820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0074910Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0074960Z E           
2025-02-25T14:23:43.0075050Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0075270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0075490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0075500Z 
2025-02-25T14:23:43.0075740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0075750Z 
2025-02-25T14:23:43.0075890Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0075890Z 
2025-02-25T14:23:43.0076070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4d610>
2025-02-25T14:23:43.0076200Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>
2025-02-25T14:23:43.0076260Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0076260Z 
2025-02-25T14:23:43.0076370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0076460Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0076530Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0076580Z         try:
2025-02-25T14:23:43.0076690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0076750Z         except KeyError:
2025-02-25T14:23:43.0076860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0076910Z     
2025-02-25T14:23:43.0076980Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0077060Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0077120Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0077230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0077600Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0077670Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0077760Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0077810Z             else:
2025-02-25T14:23:43.0077890Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0077970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0077980Z 
2025-02-25T14:23:43.0078080Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0078170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0078290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0078420Z     ???
2025-02-25T14:23:43.0078520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0078520Z 
2025-02-25T14:23:43.0078570Z >   ???
2025-02-25T14:23:43.0078680Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0078730Z E   
2025-02-25T14:23:43.0078840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0078940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0078990Z E          ...
2025-02-25T14:23:43.0079060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0079160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0079260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0079310Z E          ...
2025-02-25T14:23:43.0079380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0079490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0079570Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0079570Z 
2025-02-25T14:23:43.0079650Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0079820Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-25T14:23:43.0079820Z 
2025-02-25T14:23:43.0079930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0080040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0080120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0080230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0080340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0080420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0080480Z err_msg = None
2025-02-25T14:23:43.0080480Z 
2025-02-25T14:23:43.0080570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0080630Z         if err_msg is None:
2025-02-25T14:23:43.0080700Z             if left.shape != right.shape:
2025-02-25T14:23:43.0080770Z                 raise_assert_detail(
2025-02-25T14:23:43.0080890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0080950Z                 )
2025-02-25T14:23:43.0081000Z     
2025-02-25T14:23:43.0081060Z             diff = 0
2025-02-25T14:23:43.0081150Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0081220Z                 # count up differences
2025-02-25T14:23:43.0081360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0081420Z                     diff += 1
2025-02-25T14:23:43.0081470Z     
2025-02-25T14:23:43.0081540Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0081650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0081800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0081890Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0081940Z E           
2025-02-25T14:23:43.0082100Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0082320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0082540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0082600Z 
2025-02-25T14:23:43.0082860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0082860Z 
2025-02-25T14:23:43.0083000Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0083010Z 
2025-02-25T14:23:43.0083190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4d790>
2025-02-25T14:23:43.0083360Z plasma = <tardis.plasma.base.BasePlasma object at 0x141c2b590>, attr = 'j_blues'
2025-02-25T14:23:43.0083360Z 
2025-02-25T14:23:43.0083480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0083580Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0083640Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0083690Z         try:
2025-02-25T14:23:43.0083810Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0083880Z         except KeyError:
2025-02-25T14:23:43.0083990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0084040Z     
2025-02-25T14:23:43.0084110Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0084180Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0084250Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0084370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0084430Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0084500Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0084600Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0084650Z             else:
2025-02-25T14:23:43.0084720Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0084810Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0084820Z 
2025-02-25T14:23:43.0084930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0085020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0085150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0085190Z     ???
2025-02-25T14:23:43.0085290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0085300Z 
2025-02-25T14:23:43.0085350Z >   ???
2025-02-25T14:23:43.0085450Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0085500Z E   
2025-02-25T14:23:43.0085600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0085700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0085750Z E          ...
2025-02-25T14:23:43.0085820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0085930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0086020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0086070Z E          ...
2025-02-25T14:23:43.0086150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0086250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0086340Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0086400Z 
2025-02-25T14:23:43.0086480Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0086700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-25T14:23:43.0086700Z 
2025-02-25T14:23:43.0086820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0086940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0087030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0087140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0087300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0087380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0087440Z err_msg = None
2025-02-25T14:23:43.0087440Z 
2025-02-25T14:23:43.0087530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0087600Z         if err_msg is None:
2025-02-25T14:23:43.0087670Z             if left.shape != right.shape:
2025-02-25T14:23:43.0087740Z                 raise_assert_detail(
2025-02-25T14:23:43.0087860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0087910Z                 )
2025-02-25T14:23:43.0087960Z     
2025-02-25T14:23:43.0088010Z             diff = 0
2025-02-25T14:23:43.0088100Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0088170Z                 # count up differences
2025-02-25T14:23:43.0088310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0088370Z                     diff += 1
2025-02-25T14:23:43.0088420Z     
2025-02-25T14:23:43.0088500Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0088610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0088760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0088850Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0088900Z E           
2025-02-25T14:23:43.0088990Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0089210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0089440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0089450Z 
2025-02-25T14:23:43.0089700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0089710Z 
2025-02-25T14:23:43.0089850Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0089850Z 
2025-02-25T14:23:43.0090030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4e510>
2025-02-25T14:23:43.0090200Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>, attr = 'lines'
2025-02-25T14:23:43.0090200Z 
2025-02-25T14:23:43.0090320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0090410Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0090480Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0090530Z         try:
2025-02-25T14:23:43.0090650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0090710Z         except KeyError:
2025-02-25T14:23:43.0090820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0090910Z     
2025-02-25T14:23:43.0090980Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0091100Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0091170Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0091290Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0091350Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0091420Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0091510Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0091560Z             else:
2025-02-25T14:23:43.0091630Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0091780Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0091780Z 
2025-02-25T14:23:43.0091960Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0092060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0092180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0092230Z     ???
2025-02-25T14:23:43.0092320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0092330Z 
2025-02-25T14:23:43.0092370Z >   ???
2025-02-25T14:23:43.0092470Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0092520Z E   
2025-02-25T14:23:43.0092620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0092710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0092760Z E          ...
2025-02-25T14:23:43.0092840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0092950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0093040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0093090Z E          ...
2025-02-25T14:23:43.0093160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0093260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0093350Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0093350Z 
2025-02-25T14:23:43.0093410Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0093670Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-25T14:23:43.0093670Z 
2025-02-25T14:23:43.0093850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4e5d0>
2025-02-25T14:23:43.0093970Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0094050Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0094050Z 
2025-02-25T14:23:43.0094160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0094250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0094310Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0094360Z         try:
2025-02-25T14:23:43.0094480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0094540Z         except KeyError:
2025-02-25T14:23:43.0094660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0094700Z     
2025-02-25T14:23:43.0094770Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0094850Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0094920Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0095020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0095090Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0095160Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0095250Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0095250Z 
2025-02-25T14:23:43.0095350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0095450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0095560Z 
2025-02-25T14:23:43.0095690Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0095750Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0095850Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0095910Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0096030Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0096090Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0096180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0096510Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0096570Z err_msg = None
2025-02-25T14:23:43.0096580Z 
2025-02-25T14:23:43.0096660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0096720Z         if err_msg is None:
2025-02-25T14:23:43.0096790Z             if left.shape != right.shape:
2025-02-25T14:23:43.0096860Z                 raise_assert_detail(
2025-02-25T14:23:43.0096980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0097030Z                 )
2025-02-25T14:23:43.0097080Z     
2025-02-25T14:23:43.0097130Z             diff = 0
2025-02-25T14:23:43.0097220Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0097280Z                 # count up differences
2025-02-25T14:23:43.0097420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0097480Z                     diff += 1
2025-02-25T14:23:43.0097520Z     
2025-02-25T14:23:43.0097600Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0097710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0097850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0097930Z E           AssertionError: Series are different
2025-02-25T14:23:43.0097980Z E           
2025-02-25T14:23:43.0098060Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0098370Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0098650Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0098930Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0098930Z 
2025-02-25T14:23:43.0099180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0099430Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-25T14:23:43.0099440Z 
2025-02-25T14:23:43.0099610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4e690>
2025-02-25T14:23:43.0099750Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0099810Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0099890Z 
2025-02-25T14:23:43.0100020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0100110Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0100170Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0100230Z         try:
2025-02-25T14:23:43.0100340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0100400Z         except KeyError:
2025-02-25T14:23:43.0100510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0100560Z     
2025-02-25T14:23:43.0100620Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0100700Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0100810Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0100920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0100990Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0101050Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0101150Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0101150Z 
2025-02-25T14:23:43.0101250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0101340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0101340Z 
2025-02-25T14:23:43.0101460Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0101520Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0101610Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0101680Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0101800Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0101860Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0101950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0102010Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0102070Z err_msg = None
2025-02-25T14:23:43.0102070Z 
2025-02-25T14:23:43.0102150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0102210Z         if err_msg is None:
2025-02-25T14:23:43.0102280Z             if left.shape != right.shape:
2025-02-25T14:23:43.0102350Z                 raise_assert_detail(
2025-02-25T14:23:43.0102470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0102520Z                 )
2025-02-25T14:23:43.0102570Z     
2025-02-25T14:23:43.0102620Z             diff = 0
2025-02-25T14:23:43.0102710Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0102780Z                 # count up differences
2025-02-25T14:23:43.0102920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0102980Z                     diff += 1
2025-02-25T14:23:43.0103040Z     
2025-02-25T14:23:43.0103110Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0103230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0103370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0103450Z E           AssertionError: Series are different
2025-02-25T14:23:43.0103510Z E           
2025-02-25T14:23:43.0103590Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0103900Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0104230Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0104590Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0104640Z 
2025-02-25T14:23:43.0104900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0105120Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-25T14:23:43.0105130Z 
2025-02-25T14:23:43.0105240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0105360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0105440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0105550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0105660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0105740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0105810Z err_msg = None
2025-02-25T14:23:43.0105810Z 
2025-02-25T14:23:43.0105900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0105960Z         if err_msg is None:
2025-02-25T14:23:43.0106030Z             if left.shape != right.shape:
2025-02-25T14:23:43.0106100Z                 raise_assert_detail(
2025-02-25T14:23:43.0106220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0106280Z                 )
2025-02-25T14:23:43.0106330Z     
2025-02-25T14:23:43.0106380Z             diff = 0
2025-02-25T14:23:43.0106480Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0106540Z                 # count up differences
2025-02-25T14:23:43.0106680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0106740Z                     diff += 1
2025-02-25T14:23:43.0106790Z     
2025-02-25T14:23:43.0106860Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0106970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0107110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0107200Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0107250Z E           
2025-02-25T14:23:43.0107350Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0107560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0107780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0107790Z 
2025-02-25T14:23:43.0108050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0108090Z 
2025-02-25T14:23:43.0108240Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0108240Z 
2025-02-25T14:23:43.0108420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4e8d0>
2025-02-25T14:23:43.0108580Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>, attr = 'nu'
2025-02-25T14:23:43.0108580Z 
2025-02-25T14:23:43.0108690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0108790Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0108850Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0108900Z         try:
2025-02-25T14:23:43.0109020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0109120Z         except KeyError:
2025-02-25T14:23:43.0109230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0109280Z     
2025-02-25T14:23:43.0109350Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0109420Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0109490Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0109590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0109660Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0109730Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0109820Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0109820Z 
2025-02-25T14:23:43.0109920Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0110010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0110130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0110180Z     ???
2025-02-25T14:23:43.0110280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0110280Z 
2025-02-25T14:23:43.0110320Z >   ???
2025-02-25T14:23:43.0110430Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0110470Z E   
2025-02-25T14:23:43.0110580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0110670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0110720Z E          ...
2025-02-25T14:23:43.0110790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0110900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0110990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0111040Z E          ...
2025-02-25T14:23:43.0111110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0111210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0111290Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0111300Z 
2025-02-25T14:23:43.0111360Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0111590Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-25T14:23:43.0111600Z 
2025-02-25T14:23:43.0111700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0111810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0111900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0112010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0112120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0112190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0112250Z err_msg = None
2025-02-25T14:23:43.0112250Z 
2025-02-25T14:23:43.0112330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0112390Z         if err_msg is None:
2025-02-25T14:23:43.0112470Z             if left.shape != right.shape:
2025-02-25T14:23:43.0112610Z                 raise_assert_detail(
2025-02-25T14:23:43.0112740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0112790Z                 )
2025-02-25T14:23:43.0112830Z     
2025-02-25T14:23:43.0112880Z             diff = 0
2025-02-25T14:23:43.0112970Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0113040Z                 # count up differences
2025-02-25T14:23:43.0113180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0113360Z                     diff += 1
2025-02-25T14:23:43.0113430Z     
2025-02-25T14:23:43.0113500Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0113910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0114060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0114150Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0114200Z E           
2025-02-25T14:23:43.0114290Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0114510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0114730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0114740Z 
2025-02-25T14:23:43.0114980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0114990Z 
2025-02-25T14:23:43.0115130Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0115130Z 
2025-02-25T14:23:43.0115310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4e990>
2025-02-25T14:23:43.0115440Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0115500Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0115510Z 
2025-02-25T14:23:43.0115620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0115710Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0115780Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0115830Z         try:
2025-02-25T14:23:43.0115940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0116010Z         except KeyError:
2025-02-25T14:23:43.0116120Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0116160Z     
2025-02-25T14:23:43.0116230Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0116300Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0116370Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0116480Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0116550Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0116620Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0116720Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0116720Z 
2025-02-25T14:23:43.0116820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0116920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0117040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0117090Z     ???
2025-02-25T14:23:43.0117190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0117190Z 
2025-02-25T14:23:43.0117240Z >   ???
2025-02-25T14:23:43.0117420Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0117470Z E   
2025-02-25T14:23:43.0117570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0117660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0117710Z E          ...
2025-02-25T14:23:43.0117910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0118010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0118130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0118210Z E          ...
2025-02-25T14:23:43.0118310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0118500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0118590Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0118590Z 
2025-02-25T14:23:43.0126220Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0126540Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-25T14:23:43.0126550Z 
2025-02-25T14:23:43.0126670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0126800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0126890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0127020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0127130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0127230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0127290Z err_msg = None
2025-02-25T14:23:43.0127300Z 
2025-02-25T14:23:43.0127390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0127450Z         if err_msg is None:
2025-02-25T14:23:43.0127530Z             if left.shape != right.shape:
2025-02-25T14:23:43.0127600Z                 raise_assert_detail(
2025-02-25T14:23:43.0127720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0127770Z                 )
2025-02-25T14:23:43.0127810Z     
2025-02-25T14:23:43.0127870Z             diff = 0
2025-02-25T14:23:43.0127960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0128020Z                 # count up differences
2025-02-25T14:23:43.0128160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0128220Z                     diff += 1
2025-02-25T14:23:43.0128270Z     
2025-02-25T14:23:43.0128340Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0128450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0128590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0128680Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0128730Z E           
2025-02-25T14:23:43.0128830Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0129040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0129260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0129270Z 
2025-02-25T14:23:43.0129520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0129820Z 
2025-02-25T14:23:43.0129970Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0129970Z 
2025-02-25T14:23:43.0130150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4ea50>
2025-02-25T14:23:43.0130320Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>, attr = 'f_lu'
2025-02-25T14:23:43.0130320Z 
2025-02-25T14:23:43.0130440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0130530Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0130600Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0130740Z         try:
2025-02-25T14:23:43.0130860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0130920Z         except KeyError:
2025-02-25T14:23:43.0131030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0131080Z     
2025-02-25T14:23:43.0131150Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0131230Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0131290Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0131400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0131470Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0131540Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0131640Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0131640Z 
2025-02-25T14:23:43.0131740Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0131840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0131960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0132020Z     ???
2025-02-25T14:23:43.0132110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0132110Z 
2025-02-25T14:23:43.0132160Z >   ???
2025-02-25T14:23:43.0132270Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0132320Z E   
2025-02-25T14:23:43.0132420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0132520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0132570Z E          ...
2025-02-25T14:23:43.0132650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0132750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0132850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0132900Z E          ...
2025-02-25T14:23:43.0132970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0133080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0133160Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0133170Z 
2025-02-25T14:23:43.0133240Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0133500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-25T14:23:43.0133510Z 
2025-02-25T14:23:43.0133690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4f050>
2025-02-25T14:23:43.0133820Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0133890Z attr = 'stimulated_emission_factor'
2025-02-25T14:23:43.0133890Z 
2025-02-25T14:23:43.0134000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0134100Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0134160Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0134220Z         try:
2025-02-25T14:23:43.0134340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0134400Z         except KeyError:
2025-02-25T14:23:43.0134520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0134570Z     
2025-02-25T14:23:43.0134630Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0134770Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0134840Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0134960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0135020Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0135100Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0135190Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0135240Z             else:
2025-02-25T14:23:43.0135320Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0135410Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0135460Z 
2025-02-25T14:23:43.0135570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0135660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0135780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0135830Z     ???
2025-02-25T14:23:43.0135930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0135930Z 
2025-02-25T14:23:43.0135980Z >   ???
2025-02-25T14:23:43.0136120Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.0136170Z E   
2025-02-25T14:23:43.0136300Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:23:43.0136610Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0140270Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-25T14:23:43.0144010Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:23:43.0144370Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:23:43.0144370Z 
2025-02-25T14:23:43.0144440Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0144700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-25T14:23:43.0144710Z 
2025-02-25T14:23:43.0144820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0144940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0145030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0145140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0145290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0145390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0145450Z err_msg = None
2025-02-25T14:23:43.0145460Z 
2025-02-25T14:23:43.0145550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0145610Z         if err_msg is None:
2025-02-25T14:23:43.0145690Z             if left.shape != right.shape:
2025-02-25T14:23:43.0145760Z                 raise_assert_detail(
2025-02-25T14:23:43.0145890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0145940Z                 )
2025-02-25T14:23:43.0145990Z     
2025-02-25T14:23:43.0146050Z             diff = 0
2025-02-25T14:23:43.0146170Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0146260Z                 # count up differences
2025-02-25T14:23:43.0146410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0146480Z                     diff += 1
2025-02-25T14:23:43.0146530Z     
2025-02-25T14:23:43.0146610Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0146740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0146890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0146980Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0147030Z E           
2025-02-25T14:23:43.0147130Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0147350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0147710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0147710Z 
2025-02-25T14:23:43.0147970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0148040Z 
2025-02-25T14:23:43.0148190Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0148190Z 
2025-02-25T14:23:43.0148380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4f110>
2025-02-25T14:23:43.0148510Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0148580Z attr = 'previous_beta_sobolev'
2025-02-25T14:23:43.0148580Z 
2025-02-25T14:23:43.0148700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0148800Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0148870Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0148920Z         try:
2025-02-25T14:23:43.0149040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0149100Z         except KeyError:
2025-02-25T14:23:43.0149230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0149280Z     
2025-02-25T14:23:43.0149350Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0149430Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0149510Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0149620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0149690Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0149760Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0149840Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0149900Z             else:
2025-02-25T14:23:43.0149970Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0150070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0150070Z 
2025-02-25T14:23:43.0150170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0150260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0150380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0150440Z     ???
2025-02-25T14:23:43.0150530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0150540Z 
2025-02-25T14:23:43.0150590Z >   ???
2025-02-25T14:23:43.0150690Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0150740Z E   
2025-02-25T14:23:43.0150850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0150960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0151020Z E          ...
2025-02-25T14:23:43.0151080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0151190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0151280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0151330Z E          ...
2025-02-25T14:23:43.0151400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0151500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0151590Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0151590Z 
2025-02-25T14:23:43.0151660Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0151900Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-25T14:23:43.0151970Z 
2025-02-25T14:23:43.0152080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0152200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0152270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0152390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0152490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0152570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0152680Z err_msg = None
2025-02-25T14:23:43.0152680Z 
2025-02-25T14:23:43.0152770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0152830Z         if err_msg is None:
2025-02-25T14:23:43.0152900Z             if left.shape != right.shape:
2025-02-25T14:23:43.0152970Z                 raise_assert_detail(
2025-02-25T14:23:43.0153090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0153140Z                 )
2025-02-25T14:23:43.0153180Z     
2025-02-25T14:23:43.0153230Z             diff = 0
2025-02-25T14:23:43.0153420Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0153500Z                 # count up differences
2025-02-25T14:23:43.0153640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0153700Z                     diff += 1
2025-02-25T14:23:43.0153750Z     
2025-02-25T14:23:43.0153820Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0153940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0154080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0154170Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0154230Z E           
2025-02-25T14:23:43.0154320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0154550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0154770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0154770Z 
2025-02-25T14:23:43.0155030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0155030Z 
2025-02-25T14:23:43.0155180Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0155180Z 
2025-02-25T14:23:43.0155360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4f1d0>
2025-02-25T14:23:43.0155490Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0155550Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0155550Z 
2025-02-25T14:23:43.0155660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0155750Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0155820Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0155870Z         try:
2025-02-25T14:23:43.0155980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0156050Z         except KeyError:
2025-02-25T14:23:43.0156160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0156210Z     
2025-02-25T14:23:43.0156270Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0156420Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0156630Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0156760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0156820Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0156890Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0156980Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0157030Z             else:
2025-02-25T14:23:43.0157110Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0157190Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0157280Z 
2025-02-25T14:23:43.0157380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0157480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0157600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0157640Z     ???
2025-02-25T14:23:43.0157740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0157740Z 
2025-02-25T14:23:43.0157790Z >   ???
2025-02-25T14:23:43.0157890Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0157940Z E   
2025-02-25T14:23:43.0158040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0158140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0158180Z E          ...
2025-02-25T14:23:43.0158260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0158360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0158460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0158510Z E          ...
2025-02-25T14:23:43.0158580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0158680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0158760Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0158770Z 
2025-02-25T14:23:43.0158840Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0159070Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-25T14:23:43.0159070Z 
2025-02-25T14:23:43.0159190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0159290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0159380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0159490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0159600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0159680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0159730Z err_msg = None
2025-02-25T14:23:43.0159740Z 
2025-02-25T14:23:43.0159830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0159890Z         if err_msg is None:
2025-02-25T14:23:43.0159970Z             if left.shape != right.shape:
2025-02-25T14:23:43.0160030Z                 raise_assert_detail(
2025-02-25T14:23:43.0160150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0160200Z                 )
2025-02-25T14:23:43.0160250Z     
2025-02-25T14:23:43.0160300Z             diff = 0
2025-02-25T14:23:43.0160400Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0160460Z                 # count up differences
2025-02-25T14:23:43.0160610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0160670Z                     diff += 1
2025-02-25T14:23:43.0160720Z     
2025-02-25T14:23:43.0160790Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0160900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0161430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0161530Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0161580Z E           
2025-02-25T14:23:43.0161670Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0161890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0162200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0162210Z 
2025-02-25T14:23:43.0162460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0162470Z 
2025-02-25T14:23:43.0162610Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0162610Z 
2025-02-25T14:23:43.0162800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4f290>
2025-02-25T14:23:43.0162930Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>
2025-02-25T14:23:43.0163000Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0163000Z 
2025-02-25T14:23:43.0163120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0163230Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0163290Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0163350Z         try:
2025-02-25T14:23:43.0163500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0163610Z         except KeyError:
2025-02-25T14:23:43.0163740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0163800Z     
2025-02-25T14:23:43.0163860Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0163930Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0164000Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0164110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0164190Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0164260Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0164350Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0164400Z             else:
2025-02-25T14:23:43.0164480Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0164570Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0164580Z 
2025-02-25T14:23:43.0164680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0164780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0164900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0164950Z     ???
2025-02-25T14:23:43.0165050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0165050Z 
2025-02-25T14:23:43.0165100Z >   ???
2025-02-25T14:23:43.0165200Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0165250Z E   
2025-02-25T14:23:43.0165360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0165450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0165510Z E          ...
2025-02-25T14:23:43.0165580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0165690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0165780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0165970Z E          ...
2025-02-25T14:23:43.0166040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0166150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0166240Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0166240Z 
2025-02-25T14:23:43.0166310Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0166530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-25T14:23:43.0166540Z 
2025-02-25T14:23:43.0166650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0166770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0166910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0167030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0167150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0167230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0167290Z err_msg = None
2025-02-25T14:23:43.0167290Z 
2025-02-25T14:23:43.0167380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0167440Z         if err_msg is None:
2025-02-25T14:23:43.0167510Z             if left.shape != right.shape:
2025-02-25T14:23:43.0167570Z                 raise_assert_detail(
2025-02-25T14:23:43.0167690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0167740Z                 )
2025-02-25T14:23:43.0167800Z     
2025-02-25T14:23:43.0167850Z             diff = 0
2025-02-25T14:23:43.0167950Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0168020Z                 # count up differences
2025-02-25T14:23:43.0168170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0168230Z                     diff += 1
2025-02-25T14:23:43.0168280Z     
2025-02-25T14:23:43.0168350Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0168470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0168610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0168700Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0168760Z E           
2025-02-25T14:23:43.0168850Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0169070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0169290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0169300Z 
2025-02-25T14:23:43.0169540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0169550Z 
2025-02-25T14:23:43.0169690Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0169690Z 
2025-02-25T14:23:43.0169860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb4f410>
2025-02-25T14:23:43.0170040Z plasma = <tardis.plasma.base.BasePlasma object at 0x11e0a1490>, attr = 'j_blues'
2025-02-25T14:23:43.0170040Z 
2025-02-25T14:23:43.0170150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0170240Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0170360Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0170410Z         try:
2025-02-25T14:23:43.0170520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0170580Z         except KeyError:
2025-02-25T14:23:43.0170700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0170740Z     
2025-02-25T14:23:43.0170810Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0170880Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0170950Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0171050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0171170Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0171240Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0171330Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0171380Z             else:
2025-02-25T14:23:43.0171460Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0171540Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0171550Z 
2025-02-25T14:23:43.0171660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0171770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0171880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0171930Z     ???
2025-02-25T14:23:43.0172020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0172030Z 
2025-02-25T14:23:43.0172070Z >   ???
2025-02-25T14:23:43.0172180Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0172230Z E   
2025-02-25T14:23:43.0172330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0172420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0172480Z E          ...
2025-02-25T14:23:43.0172540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0172650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0172740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0172790Z E          ...
2025-02-25T14:23:43.0172860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0172970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0173060Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0173060Z 
2025-02-25T14:23:43.0173130Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0173350Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-25T14:23:43.0173350Z 
2025-02-25T14:23:43.0173460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0173570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0173660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0173780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0173890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0173970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0174030Z err_msg = None
2025-02-25T14:23:43.0174030Z 
2025-02-25T14:23:43.0174120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0174190Z         if err_msg is None:
2025-02-25T14:23:43.0174260Z             if left.shape != right.shape:
2025-02-25T14:23:43.0174330Z                 raise_assert_detail(
2025-02-25T14:23:43.0174450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0174510Z                 )
2025-02-25T14:23:43.0174560Z     
2025-02-25T14:23:43.0174610Z             diff = 0
2025-02-25T14:23:43.0174790Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0174860Z                 # count up differences
2025-02-25T14:23:43.0175000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0175060Z                     diff += 1
2025-02-25T14:23:43.0175120Z     
2025-02-25T14:23:43.0175190Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0175310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0175450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0175550Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0175660Z E           
2025-02-25T14:23:43.0175760Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0175980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0176210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0176220Z 
2025-02-25T14:23:43.0176480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0176480Z 
2025-02-25T14:23:43.0176630Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0176640Z 
2025-02-25T14:23:43.0176820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb781d0>
2025-02-25T14:23:43.0176990Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>, attr = 'lines'
2025-02-25T14:23:43.0177000Z 
2025-02-25T14:23:43.0177110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0177210Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0177270Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0177320Z         try:
2025-02-25T14:23:43.0177440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0177500Z         except KeyError:
2025-02-25T14:23:43.0177620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0177660Z     
2025-02-25T14:23:43.0177730Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0177800Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0177880Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0177990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0178060Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0178130Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0178220Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0178280Z             else:
2025-02-25T14:23:43.0178350Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0178450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0178450Z 
2025-02-25T14:23:43.0178550Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0178640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0178770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0178820Z     ???
2025-02-25T14:23:43.0178920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0178920Z 
2025-02-25T14:23:43.0178970Z >   ???
2025-02-25T14:23:43.0179080Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0179130Z E   
2025-02-25T14:23:43.0179230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0179420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0179480Z E          ...
2025-02-25T14:23:43.0179550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0179650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0179750Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0179800Z E          ...
2025-02-25T14:23:43.0179870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0179970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0180060Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0180160Z 
2025-02-25T14:23:43.0180270Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0180510Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-25T14:23:43.0180520Z 
2025-02-25T14:23:43.0180690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78290>
2025-02-25T14:23:43.0180830Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0180910Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0180910Z 
2025-02-25T14:23:43.0181230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0181360Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0181440Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0181490Z         try:
2025-02-25T14:23:43.0181670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0181750Z         except KeyError:
2025-02-25T14:23:43.0181880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0181950Z     
2025-02-25T14:23:43.0182010Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0182100Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0182180Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0182300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0182370Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0182520Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0182640Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0182650Z 
2025-02-25T14:23:43.0182760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0189880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0189910Z 
2025-02-25T14:23:43.0190080Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0190160Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0190260Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0190330Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0190450Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0190520Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0190610Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0190670Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0190720Z err_msg = None
2025-02-25T14:23:43.0190730Z 
2025-02-25T14:23:43.0190820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0190880Z         if err_msg is None:
2025-02-25T14:23:43.0190950Z             if left.shape != right.shape:
2025-02-25T14:23:43.0191020Z                 raise_assert_detail(
2025-02-25T14:23:43.0191610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0191940Z                 )
2025-02-25T14:23:43.0192110Z     
2025-02-25T14:23:43.0192280Z             diff = 0
2025-02-25T14:23:43.0192560Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0192760Z                 # count up differences
2025-02-25T14:23:43.0194100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0194280Z                     diff += 1
2025-02-25T14:23:43.0194430Z     
2025-02-25T14:23:43.0194640Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0194940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0195340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0195570Z E           AssertionError: Series are different
2025-02-25T14:23:43.0195740Z E           
2025-02-25T14:23:43.0195980Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0197090Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0197880Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0198670Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0198700Z 
2025-02-25T14:23:43.0199400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0200080Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-25T14:23:43.0200090Z 
2025-02-25T14:23:43.0200560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78350>
2025-02-25T14:23:43.0200910Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0201120Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0201120Z 
2025-02-25T14:23:43.0201430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0201690Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0201880Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0202040Z         try:
2025-02-25T14:23:43.0202350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0202530Z         except KeyError:
2025-02-25T14:23:43.0202840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0203010Z     
2025-02-25T14:23:43.0203200Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0203400Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0203600Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0203900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0204100Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0204290Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0204530Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0204540Z 
2025-02-25T14:23:43.0204810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0205080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0205080Z 
2025-02-25T14:23:43.0205390Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0205580Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0205940Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0206110Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0206430Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0206610Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0206850Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0207020Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0207190Z err_msg = None
2025-02-25T14:23:43.0207200Z 
2025-02-25T14:23:43.0207440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0207750Z         if err_msg is None:
2025-02-25T14:23:43.0207960Z             if left.shape != right.shape:
2025-02-25T14:23:43.0208150Z                 raise_assert_detail(
2025-02-25T14:23:43.0208470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0208630Z                 )
2025-02-25T14:23:43.0208790Z     
2025-02-25T14:23:43.0208950Z             diff = 0
2025-02-25T14:23:43.0209210Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0209400Z                 # count up differences
2025-02-25T14:23:43.0209780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0209950Z                     diff += 1
2025-02-25T14:23:43.0210110Z     
2025-02-25T14:23:43.0210300Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0210610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0210990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0211220Z E           AssertionError: Series are different
2025-02-25T14:23:43.0211410Z E           
2025-02-25T14:23:43.0211660Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0212530Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0213420Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0214340Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0214350Z 
2025-02-25T14:23:43.0215060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0215730Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-25T14:23:43.0215740Z 
2025-02-25T14:23:43.0230170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0230500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0230710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0231030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0231540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0231750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0231920Z err_msg = None
2025-02-25T14:23:43.0231930Z 
2025-02-25T14:23:43.0232170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0232360Z         if err_msg is None:
2025-02-25T14:23:43.0232570Z             if left.shape != right.shape:
2025-02-25T14:23:43.0232760Z                 raise_assert_detail(
2025-02-25T14:23:43.0233070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0233350Z                 )
2025-02-25T14:23:43.0233630Z     
2025-02-25T14:23:43.0233800Z             diff = 0
2025-02-25T14:23:43.0234050Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0234240Z                 # count up differences
2025-02-25T14:23:43.0234620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0234800Z                     diff += 1
2025-02-25T14:23:43.0234950Z     
2025-02-25T14:23:43.0235140Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0235440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0235810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0236060Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0236210Z E           
2025-02-25T14:23:43.0236460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0237090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0237710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0237720Z 
2025-02-25T14:23:43.0238400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0238410Z 
2025-02-25T14:23:43.0238770Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0238790Z 
2025-02-25T14:23:43.0239250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78590>
2025-02-25T14:23:43.0239690Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>, attr = 'nu'
2025-02-25T14:23:43.0239700Z 
2025-02-25T14:23:43.0240000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0240280Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0240460Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0240640Z         try:
2025-02-25T14:23:43.0240960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0241150Z         except KeyError:
2025-02-25T14:23:43.0241460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0241620Z     
2025-02-25T14:23:43.0241830Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0242040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0242250Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0242550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0242760Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0242970Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0243230Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0243240Z 
2025-02-25T14:23:43.0243520Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0244030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0244370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0244540Z     ???
2025-02-25T14:23:43.0244800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0244810Z 
2025-02-25T14:23:43.0244960Z >   ???
2025-02-25T14:23:43.0245270Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0245450Z E   
2025-02-25T14:23:43.0245750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0246000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0246780Z E          ...
2025-02-25T14:23:43.0246980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0247280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0247540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0247720Z E          ...
2025-02-25T14:23:43.0247930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0248220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0248460Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0248470Z 
2025-02-25T14:23:43.0248670Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0249300Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-25T14:23:43.0249310Z 
2025-02-25T14:23:43.0249600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0249900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0250120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0250410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0250700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0250900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0251070Z err_msg = None
2025-02-25T14:23:43.0251080Z 
2025-02-25T14:23:43.0251320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0251500Z         if err_msg is None:
2025-02-25T14:23:43.0251700Z             if left.shape != right.shape:
2025-02-25T14:23:43.0251880Z                 raise_assert_detail(
2025-02-25T14:23:43.0252190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0252360Z                 )
2025-02-25T14:23:43.0252520Z     
2025-02-25T14:23:43.0252680Z             diff = 0
2025-02-25T14:23:43.0252920Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0253100Z                 # count up differences
2025-02-25T14:23:43.0253490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0253660Z                     diff += 1
2025-02-25T14:23:43.0253830Z     
2025-02-25T14:23:43.0254020Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0254330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0254710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0254960Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0255140Z E           
2025-02-25T14:23:43.0255390Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0256140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0256940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0256970Z 
2025-02-25T14:23:43.0257710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0257720Z 
2025-02-25T14:23:43.0258100Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0258110Z 
2025-02-25T14:23:43.0258720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78650>
2025-02-25T14:23:43.0259080Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0259270Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0259270Z 
2025-02-25T14:23:43.0259590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0259850Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0260040Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0260200Z         try:
2025-02-25T14:23:43.0260510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0260690Z         except KeyError:
2025-02-25T14:23:43.0260990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0261150Z     
2025-02-25T14:23:43.0261340Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0261560Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0261750Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0262050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0262240Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0262450Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0262700Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0262710Z 
2025-02-25T14:23:43.0262980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0263230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0263550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0263710Z     ???
2025-02-25T14:23:43.0263950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0263960Z 
2025-02-25T14:23:43.0264120Z >   ???
2025-02-25T14:23:43.0264380Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0264540Z E   
2025-02-25T14:23:43.0264810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0265070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0265240Z E          ...
2025-02-25T14:23:43.0265440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0265720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0265970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0266130Z E          ...
2025-02-25T14:23:43.0266320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0266600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0266830Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0266830Z 
2025-02-25T14:23:43.0267030Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0267590Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-25T14:23:43.0267600Z 
2025-02-25T14:23:43.0267870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0268160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0268370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0268660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0269080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0269300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0269470Z err_msg = None
2025-02-25T14:23:43.0269470Z 
2025-02-25T14:23:43.0269710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0269890Z         if err_msg is None:
2025-02-25T14:23:43.0270100Z             if left.shape != right.shape:
2025-02-25T14:23:43.0270290Z                 raise_assert_detail(
2025-02-25T14:23:43.0270590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0270880Z                 )
2025-02-25T14:23:43.0271040Z     
2025-02-25T14:23:43.0271200Z             diff = 0
2025-02-25T14:23:43.0271450Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0271640Z                 # count up differences
2025-02-25T14:23:43.0272020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0272200Z                     diff += 1
2025-02-25T14:23:43.0272350Z     
2025-02-25T14:23:43.0272540Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0272840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0273220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0273470Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0273760Z E           
2025-02-25T14:23:43.0274010Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0274620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0275240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0275260Z 
2025-02-25T14:23:43.0275940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0275950Z 
2025-02-25T14:23:43.0276320Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0276330Z 
2025-02-25T14:23:43.0276810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78710>
2025-02-25T14:23:43.0277260Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>, attr = 'f_lu'
2025-02-25T14:23:43.0277270Z 
2025-02-25T14:23:43.0277570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0277840Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0278020Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0278190Z         try:
2025-02-25T14:23:43.0278500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0278690Z         except KeyError:
2025-02-25T14:23:43.0278990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0279150Z     
2025-02-25T14:23:43.0279350Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0279560Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0279760Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0280060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0280250Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0280440Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0280690Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0280830Z 
2025-02-25T14:23:43.0281110Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0281370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0281690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0281860Z     ???
2025-02-25T14:23:43.0282110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0282120Z 
2025-02-25T14:23:43.0282270Z >   ???
2025-02-25T14:23:43.0282550Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0282700Z E   
2025-02-25T14:23:43.0282990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0283340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0283510Z E          ...
2025-02-25T14:23:43.0283700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0283990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0284240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0284410Z E          ...
2025-02-25T14:23:43.0284610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0284890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0285130Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0285130Z 
2025-02-25T14:23:43.0285330Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0286010Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-25T14:23:43.0286020Z 
2025-02-25T14:23:43.0286490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78d10>
2025-02-25T14:23:43.0286850Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0287060Z attr = 'stimulated_emission_factor'
2025-02-25T14:23:43.0287070Z 
2025-02-25T14:23:43.0287370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0287640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0287820Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0287980Z         try:
2025-02-25T14:23:43.0288280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0288480Z         except KeyError:
2025-02-25T14:23:43.0288790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0288960Z     
2025-02-25T14:23:43.0289150Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0289370Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0289560Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0289870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0290060Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0290270Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0290510Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0290670Z             else:
2025-02-25T14:23:43.0290880Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0291120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0291130Z 
2025-02-25T14:23:43.0291400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0291640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0291970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0292130Z     ???
2025-02-25T14:23:43.0292370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0292380Z 
2025-02-25T14:23:43.0292540Z >   ???
2025-02-25T14:23:43.0292930Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.0293100Z E   
2025-02-25T14:23:43.0293460Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:23:43.0294370Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0305900Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-25T14:23:43.0310390Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:23:43.0310680Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:23:43.0310690Z 
2025-02-25T14:23:43.0310770Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0311020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-25T14:23:43.0311030Z 
2025-02-25T14:23:43.0311140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0311270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0311420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0311530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0311640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0311730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0311780Z err_msg = None
2025-02-25T14:23:43.0311790Z 
2025-02-25T14:23:43.0311880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0311940Z         if err_msg is None:
2025-02-25T14:23:43.0312020Z             if left.shape != right.shape:
2025-02-25T14:23:43.0312080Z                 raise_assert_detail(
2025-02-25T14:23:43.0312210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0312260Z                 )
2025-02-25T14:23:43.0312310Z     
2025-02-25T14:23:43.0312360Z             diff = 0
2025-02-25T14:23:43.0312460Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0312530Z                 # count up differences
2025-02-25T14:23:43.0312680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0312740Z                     diff += 1
2025-02-25T14:23:43.0312800Z     
2025-02-25T14:23:43.0312870Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0312990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0313130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0313230Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0313280Z E           
2025-02-25T14:23:43.0313370Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0313600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0313930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0313930Z 
2025-02-25T14:23:43.0314200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0314200Z 
2025-02-25T14:23:43.0314340Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0314350Z 
2025-02-25T14:23:43.0314530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78dd0>
2025-02-25T14:23:43.0314670Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0314740Z attr = 'previous_beta_sobolev'
2025-02-25T14:23:43.0314740Z 
2025-02-25T14:23:43.0314870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0314960Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0315120Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0315180Z         try:
2025-02-25T14:23:43.0315300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0315360Z         except KeyError:
2025-02-25T14:23:43.0315480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0315530Z     
2025-02-25T14:23:43.0315600Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0315680Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0315750Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0315860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0315990Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0316070Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0316160Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0316220Z             else:
2025-02-25T14:23:43.0316300Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0316410Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0316410Z 
2025-02-25T14:23:43.0316520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0316620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0316750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0316810Z     ???
2025-02-25T14:23:43.0316910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0316910Z 
2025-02-25T14:23:43.0316960Z >   ???
2025-02-25T14:23:43.0317080Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0317130Z E   
2025-02-25T14:23:43.0317240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0317330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0317380Z E          ...
2025-02-25T14:23:43.0317460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0317570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0317660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0317710Z E          ...
2025-02-25T14:23:43.0317790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0317890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0317980Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0317980Z 
2025-02-25T14:23:43.0318050Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0318280Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-25T14:23:43.0318290Z 
2025-02-25T14:23:43.0318400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0318510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0318590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0318710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0318820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0318900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0318960Z err_msg = None
2025-02-25T14:23:43.0318960Z 
2025-02-25T14:23:43.0319050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0319110Z         if err_msg is None:
2025-02-25T14:23:43.0319190Z             if left.shape != right.shape:
2025-02-25T14:23:43.0319250Z                 raise_assert_detail(
2025-02-25T14:23:43.0319380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0319440Z                 )
2025-02-25T14:23:43.0319490Z     
2025-02-25T14:23:43.0319540Z             diff = 0
2025-02-25T14:23:43.0319640Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0319760Z                 # count up differences
2025-02-25T14:23:43.0319910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0319970Z                     diff += 1
2025-02-25T14:23:43.0320020Z     
2025-02-25T14:23:43.0320090Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0320210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0320360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0320460Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0320560Z E           
2025-02-25T14:23:43.0320660Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0320890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0321120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0321120Z 
2025-02-25T14:23:43.0321380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0321380Z 
2025-02-25T14:23:43.0321540Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0321540Z 
2025-02-25T14:23:43.0321730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78e90>
2025-02-25T14:23:43.0321870Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0321930Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0321940Z 
2025-02-25T14:23:43.0322060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0322160Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0322220Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0322280Z         try:
2025-02-25T14:23:43.0322390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0322460Z         except KeyError:
2025-02-25T14:23:43.0322570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0322630Z     
2025-02-25T14:23:43.0322700Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0322770Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0322840Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0322960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0323040Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0323110Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0323200Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0323250Z             else:
2025-02-25T14:23:43.0323330Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0323540Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0323550Z 
2025-02-25T14:23:43.0323650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0323780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0323990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0324060Z     ???
2025-02-25T14:23:43.0324180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0324180Z 
2025-02-25T14:23:43.0324250Z >   ???
2025-02-25T14:23:43.0324350Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0324410Z E   
2025-02-25T14:23:43.0324530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0324940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0324990Z E          ...
2025-02-25T14:23:43.0325080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0325190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0333280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0333370Z E          ...
2025-02-25T14:23:43.0333440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0333550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0333630Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0333900Z 
2025-02-25T14:23:43.0333990Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0334220Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-25T14:23:43.0334220Z 
2025-02-25T14:23:43.0334340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0334460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0334540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0334660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0334760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0334840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0334890Z err_msg = None
2025-02-25T14:23:43.0334900Z 
2025-02-25T14:23:43.0334990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0335050Z         if err_msg is None:
2025-02-25T14:23:43.0335120Z             if left.shape != right.shape:
2025-02-25T14:23:43.0335190Z                 raise_assert_detail(
2025-02-25T14:23:43.0335310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0335360Z                 )
2025-02-25T14:23:43.0335410Z     
2025-02-25T14:23:43.0335460Z             diff = 0
2025-02-25T14:23:43.0335550Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0335620Z                 # count up differences
2025-02-25T14:23:43.0335760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0335830Z                     diff += 1
2025-02-25T14:23:43.0335870Z     
2025-02-25T14:23:43.0335950Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0336060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0336210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0336300Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0336350Z E           
2025-02-25T14:23:43.0336440Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0336660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0336880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0336890Z 
2025-02-25T14:23:43.0337140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0337150Z 
2025-02-25T14:23:43.0337290Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0337380Z 
2025-02-25T14:23:43.0337570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb78f50>
2025-02-25T14:23:43.0337700Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>
2025-02-25T14:23:43.0337760Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0337760Z 
2025-02-25T14:23:43.0337870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0337970Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0338030Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0338080Z         try:
2025-02-25T14:23:43.0338190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0338300Z         except KeyError:
2025-02-25T14:23:43.0338420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0338470Z     
2025-02-25T14:23:43.0338530Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0338600Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0338680Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0338790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0338850Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0338920Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0339010Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0339060Z             else:
2025-02-25T14:23:43.0339140Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0339230Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0339230Z 
2025-02-25T14:23:43.0339330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0339430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0339550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0339600Z     ???
2025-02-25T14:23:43.0339690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0339700Z 
2025-02-25T14:23:43.0339750Z >   ???
2025-02-25T14:23:43.0339850Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0339900Z E   
2025-02-25T14:23:43.0340000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0340090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0340140Z E          ...
2025-02-25T14:23:43.0340210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0340320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0340410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0340460Z E          ...
2025-02-25T14:23:43.0340530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0340640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0340720Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0340720Z 
2025-02-25T14:23:43.0340790Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0341010Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-25T14:23:43.0341010Z 
2025-02-25T14:23:43.0341120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0341230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0341310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0341420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0341520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0341610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0341660Z err_msg = None
2025-02-25T14:23:43.0341660Z 
2025-02-25T14:23:43.0341750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0341860Z         if err_msg is None:
2025-02-25T14:23:43.0341940Z             if left.shape != right.shape:
2025-02-25T14:23:43.0342000Z                 raise_assert_detail(
2025-02-25T14:23:43.0342120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0342170Z                 )
2025-02-25T14:23:43.0342220Z     
2025-02-25T14:23:43.0342270Z             diff = 0
2025-02-25T14:23:43.0342360Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0342430Z                 # count up differences
2025-02-25T14:23:43.0342570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0342670Z                     diff += 1
2025-02-25T14:23:43.0342730Z     
2025-02-25T14:23:43.0342790Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0342910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0343050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0343150Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0343200Z E           
2025-02-25T14:23:43.0343290Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0343510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0343730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0343730Z 
2025-02-25T14:23:43.0343990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0343990Z 
2025-02-25T14:23:43.0344130Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0344130Z 
2025-02-25T14:23:43.0344310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb790d0>
2025-02-25T14:23:43.0344480Z plasma = <tardis.plasma.base.BasePlasma object at 0x310933bc0>, attr = 'j_blues'
2025-02-25T14:23:43.0344480Z 
2025-02-25T14:23:43.0344590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0344980Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0345310Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0345480Z         try:
2025-02-25T14:23:43.0346000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0346260Z         except KeyError:
2025-02-25T14:23:43.0347950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0348070Z     
2025-02-25T14:23:43.0348140Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0348210Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0348280Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0348390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0348460Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0348520Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0348610Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0348660Z             else:
2025-02-25T14:23:43.0348740Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0348840Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0348980Z 
2025-02-25T14:23:43.0349920Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0350050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0350400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0350460Z     ???
2025-02-25T14:23:43.0350560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0350560Z 
2025-02-25T14:23:43.0350610Z >   ???
2025-02-25T14:23:43.0350720Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0350770Z E   
2025-02-25T14:23:43.0350870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0350970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0351020Z E          ...
2025-02-25T14:23:43.0351090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0351280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0351380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0351430Z E          ...
2025-02-25T14:23:43.0351500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0351610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0351700Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0351700Z 
2025-02-25T14:23:43.0351770Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0351930Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-25T14:23:43.0351940Z 
2025-02-25T14:23:43.0352050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0352180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0352260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0352380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0352490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0352580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0352630Z err_msg = None
2025-02-25T14:23:43.0352640Z 
2025-02-25T14:23:43.0352730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0352790Z         if err_msg is None:
2025-02-25T14:23:43.0352860Z             if left.shape != right.shape:
2025-02-25T14:23:43.0352930Z                 raise_assert_detail(
2025-02-25T14:23:43.0353050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0353100Z                 )
2025-02-25T14:23:43.0353150Z     
2025-02-25T14:23:43.0353200Z             diff = 0
2025-02-25T14:23:43.0353290Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0353370Z                 # count up differences
2025-02-25T14:23:43.0353510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0353570Z                     diff += 1
2025-02-25T14:23:43.0353610Z     
2025-02-25T14:23:43.0353680Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0353890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0354040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0354130Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0354180Z E           
2025-02-25T14:23:43.0354270Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0354490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0354710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0354880Z 
2025-02-25T14:23:43.0355140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0355150Z 
2025-02-25T14:23:43.0355290Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0355290Z 
2025-02-25T14:23:43.0355470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb79e50>
2025-02-25T14:23:43.0355640Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>, attr = 'lines'
2025-02-25T14:23:43.0355720Z 
2025-02-25T14:23:43.0355830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0355930Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0355990Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0356040Z         try:
2025-02-25T14:23:43.0356160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0356220Z         except KeyError:
2025-02-25T14:23:43.0356340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0356390Z     
2025-02-25T14:23:43.0356450Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0356530Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0356600Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0356710Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0356770Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0356840Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0356940Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0356990Z             else:
2025-02-25T14:23:43.0357060Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0357150Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0357160Z 
2025-02-25T14:23:43.0357260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0357360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0357480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0357530Z     ???
2025-02-25T14:23:43.0357620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0357620Z 
2025-02-25T14:23:43.0357670Z >   ???
2025-02-25T14:23:43.0357770Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0357820Z E   
2025-02-25T14:23:43.0357930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0358030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0358080Z E          ...
2025-02-25T14:23:43.0358150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0358260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0358360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0358410Z E          ...
2025-02-25T14:23:43.0358480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0358590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0358670Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0358670Z 
2025-02-25T14:23:43.0358740Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0358930Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-25T14:23:43.0358930Z 
2025-02-25T14:23:43.0359110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb79f10>
2025-02-25T14:23:43.0359240Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0359310Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0359310Z 
2025-02-25T14:23:43.0359420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0359560Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0359630Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0359680Z         try:
2025-02-25T14:23:43.0359790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0359850Z         except KeyError:
2025-02-25T14:23:43.0359970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0360010Z     
2025-02-25T14:23:43.0360080Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0360160Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0360220Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0360340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0360460Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0360530Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0360620Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0360620Z 
2025-02-25T14:23:43.0360720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0360820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0360820Z 
2025-02-25T14:23:43.0360950Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0361020Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0361110Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0361180Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0361290Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0361360Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0361450Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0361520Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0361570Z err_msg = None
2025-02-25T14:23:43.0361580Z 
2025-02-25T14:23:43.0361660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0361730Z         if err_msg is None:
2025-02-25T14:23:43.0361800Z             if left.shape != right.shape:
2025-02-25T14:23:43.0361870Z                 raise_assert_detail(
2025-02-25T14:23:43.0361990Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0362040Z                 )
2025-02-25T14:23:43.0362090Z     
2025-02-25T14:23:43.0362150Z             diff = 0
2025-02-25T14:23:43.0362230Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0362300Z                 # count up differences
2025-02-25T14:23:43.0362450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0362510Z                     diff += 1
2025-02-25T14:23:43.0362560Z     
2025-02-25T14:23:43.0362630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0362750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0362890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0362980Z E           AssertionError: Series are different
2025-02-25T14:23:43.0363030Z E           
2025-02-25T14:23:43.0363120Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0363440Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0363740Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0364080Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0364090Z 
2025-02-25T14:23:43.0364340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0364600Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-25T14:23:43.0364600Z 
2025-02-25T14:23:43.0364790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb79fd0>
2025-02-25T14:23:43.0364920Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0365000Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0365000Z 
2025-02-25T14:23:43.0365110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0365210Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0365270Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0365330Z         try:
2025-02-25T14:23:43.0365450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0365510Z         except KeyError:
2025-02-25T14:23:43.0365630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0365680Z     
2025-02-25T14:23:43.0365750Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0365830Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0365890Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0366010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0366070Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0366150Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0366240Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0366250Z 
2025-02-25T14:23:43.0366350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0366440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0366450Z 
2025-02-25T14:23:43.0366570Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0366640Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0366730Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0366800Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0366920Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0366990Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0367090Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0367160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0367210Z err_msg = None
2025-02-25T14:23:43.0367210Z 
2025-02-25T14:23:43.0367300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0367360Z         if err_msg is None:
2025-02-25T14:23:43.0367430Z             if left.shape != right.shape:
2025-02-25T14:23:43.0367500Z                 raise_assert_detail(
2025-02-25T14:23:43.0367620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0367680Z                 )
2025-02-25T14:23:43.0367720Z     
2025-02-25T14:23:43.0367780Z             diff = 0
2025-02-25T14:23:43.0367870Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0367950Z                 # count up differences
2025-02-25T14:23:43.0368090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0368150Z                     diff += 1
2025-02-25T14:23:43.0368260Z     
2025-02-25T14:23:43.0368330Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0368450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0368590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0368680Z E           AssertionError: Series are different
2025-02-25T14:23:43.0368720Z E           
2025-02-25T14:23:43.0368810Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0369130Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0369500Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0369820Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0369830Z 
2025-02-25T14:23:43.0370090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0370250Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-25T14:23:43.0370250Z 
2025-02-25T14:23:43.0370360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0370470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0370550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0370660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0370770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0370850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0370900Z err_msg = None
2025-02-25T14:23:43.0370900Z 
2025-02-25T14:23:43.0371000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0371060Z         if err_msg is None:
2025-02-25T14:23:43.0371130Z             if left.shape != right.shape:
2025-02-25T14:23:43.0371200Z                 raise_assert_detail(
2025-02-25T14:23:43.0371320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0371360Z                 )
2025-02-25T14:23:43.0371420Z     
2025-02-25T14:23:43.0371470Z             diff = 0
2025-02-25T14:23:43.0371560Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0371630Z                 # count up differences
2025-02-25T14:23:43.0371770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0371830Z                     diff += 1
2025-02-25T14:23:43.0371880Z     
2025-02-25T14:23:43.0371960Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0372070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0372220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0372410Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0372460Z E           
2025-02-25T14:23:43.0372560Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0372790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0373020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0373300Z 
2025-02-25T14:23:43.0373560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0373570Z 
2025-02-25T14:23:43.0373720Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0373720Z 
2025-02-25T14:23:43.0373900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7a210>
2025-02-25T14:23:43.0374070Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>, attr = 'nu'
2025-02-25T14:23:43.0374080Z 
2025-02-25T14:23:43.0374200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0374290Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0374360Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0374410Z         try:
2025-02-25T14:23:43.0374540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0374600Z         except KeyError:
2025-02-25T14:23:43.0374720Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0374780Z     
2025-02-25T14:23:43.0374840Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0374920Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0374990Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0375110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0375180Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0375250Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0375340Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0375350Z 
2025-02-25T14:23:43.0375450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0375560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0375690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0375740Z     ???
2025-02-25T14:23:43.0375840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0375840Z 
2025-02-25T14:23:43.0375890Z >   ???
2025-02-25T14:23:43.0376000Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0376050Z E   
2025-02-25T14:23:43.0376150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0376250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0376300Z E          ...
2025-02-25T14:23:43.0376380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0376480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0376580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0376640Z E          ...
2025-02-25T14:23:43.0376710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0376830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0376910Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0376910Z 
2025-02-25T14:23:43.0376990Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0377240Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-25T14:23:43.0377240Z 
2025-02-25T14:23:43.0377370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0377500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0377600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0377720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0377830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0377970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0378030Z err_msg = None
2025-02-25T14:23:43.0378030Z 
2025-02-25T14:23:43.0378120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0378180Z         if err_msg is None:
2025-02-25T14:23:43.0378270Z             if left.shape != right.shape:
2025-02-25T14:23:43.0378330Z                 raise_assert_detail(
2025-02-25T14:23:43.0378460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0378510Z                 )
2025-02-25T14:23:43.0378560Z     
2025-02-25T14:23:43.0378610Z             diff = 0
2025-02-25T14:23:43.0378700Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0378780Z                 # count up differences
2025-02-25T14:23:43.0378920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0378990Z                     diff += 1
2025-02-25T14:23:43.0379040Z     
2025-02-25T14:23:43.0379110Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0379220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0379360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0379460Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0379510Z E           
2025-02-25T14:23:43.0379600Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0379820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0380050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0380050Z 
2025-02-25T14:23:43.0380310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0380310Z 
2025-02-25T14:23:43.0380450Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0380460Z 
2025-02-25T14:23:43.0380650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7a2d0>
2025-02-25T14:23:43.0380780Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0380840Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0380850Z 
2025-02-25T14:23:43.0380960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0381060Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0381140Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0381190Z         try:
2025-02-25T14:23:43.0381310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0381370Z         except KeyError:
2025-02-25T14:23:43.0381500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0381600Z     
2025-02-25T14:23:43.0381670Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0381750Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0381820Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0381930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0381990Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0382070Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0382160Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0382160Z 
2025-02-25T14:23:43.0382260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0382360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0382530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0382580Z     ???
2025-02-25T14:23:43.0382680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0382690Z 
2025-02-25T14:23:43.0382740Z >   ???
2025-02-25T14:23:43.0382840Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0382890Z E   
2025-02-25T14:23:43.0382990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0383080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0383130Z E          ...
2025-02-25T14:23:43.0383200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0383320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0383550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0383620Z E          ...
2025-02-25T14:23:43.0383710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0383810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0383910Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0383910Z 
2025-02-25T14:23:43.0384000Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0384180Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-25T14:23:43.0384190Z 
2025-02-25T14:23:43.0384320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0384430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0384580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0384710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0384830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0384930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0384980Z err_msg = None
2025-02-25T14:23:43.0384990Z 
2025-02-25T14:23:43.0385090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0385160Z         if err_msg is None:
2025-02-25T14:23:43.0385250Z             if left.shape != right.shape:
2025-02-25T14:23:43.0385330Z                 raise_assert_detail(
2025-02-25T14:23:43.0385450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0385510Z                 )
2025-02-25T14:23:43.0385570Z     
2025-02-25T14:23:43.0385640Z             diff = 0
2025-02-25T14:23:43.0385730Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0385820Z                 # count up differences
2025-02-25T14:23:43.0385970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0386040Z                     diff += 1
2025-02-25T14:23:43.0386090Z     
2025-02-25T14:23:43.0386170Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0386290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0393980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0394430Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0394490Z E           
2025-02-25T14:23:43.0394590Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0394810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0395040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0395110Z 
2025-02-25T14:23:43.0395380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0395380Z 
2025-02-25T14:23:43.0395530Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0395530Z 
2025-02-25T14:23:43.0395710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7a390>
2025-02-25T14:23:43.0395880Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>, attr = 'f_lu'
2025-02-25T14:23:43.0395880Z 
2025-02-25T14:23:43.0396000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0396100Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0396170Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0396220Z         try:
2025-02-25T14:23:43.0396340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0396410Z         except KeyError:
2025-02-25T14:23:43.0396520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0396580Z     
2025-02-25T14:23:43.0396650Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0396720Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0396790Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0396900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0396980Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0397050Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0397150Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0397160Z 
2025-02-25T14:23:43.0397260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0397360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0397480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0397530Z     ???
2025-02-25T14:23:43.0397630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0397640Z 
2025-02-25T14:23:43.0397690Z >   ???
2025-02-25T14:23:43.0397800Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0397850Z E   
2025-02-25T14:23:43.0397960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0398050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0398110Z E          ...
2025-02-25T14:23:43.0398190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0398300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0398390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0398440Z E          ...
2025-02-25T14:23:43.0398520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0398630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0398720Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0398720Z 
2025-02-25T14:23:43.0398790Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0399150Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-25T14:23:43.0399150Z 
2025-02-25T14:23:43.0399340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7a990>
2025-02-25T14:23:43.0399470Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0399540Z attr = 'stimulated_emission_factor'
2025-02-25T14:23:43.0399550Z 
2025-02-25T14:23:43.0399660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0399750Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0399820Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0400190Z         try:
2025-02-25T14:23:43.0400310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0400370Z         except KeyError:
2025-02-25T14:23:43.0400480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0400540Z     
2025-02-25T14:23:43.0400610Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0400680Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0400750Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0400860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0400920Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0400990Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0401080Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0401130Z             else:
2025-02-25T14:23:43.0401210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0401290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0401300Z 
2025-02-25T14:23:43.0401400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0401500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0401610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0401670Z     ???
2025-02-25T14:23:43.0401760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0401770Z 
2025-02-25T14:23:43.0401810Z >   ???
2025-02-25T14:23:43.0401960Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.0402010Z E   
2025-02-25T14:23:43.0402140Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:23:43.0402450Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0406340Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-25T14:23:43.0417740Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:23:43.0417940Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:23:43.0417950Z 
2025-02-25T14:23:43.0418020Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0418220Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-25T14:23:43.0418220Z 
2025-02-25T14:23:43.0418330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0418450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0418530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0418650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0418760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0418840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0418900Z err_msg = None
2025-02-25T14:23:43.0418900Z 
2025-02-25T14:23:43.0419000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0419070Z         if err_msg is None:
2025-02-25T14:23:43.0419140Z             if left.shape != right.shape:
2025-02-25T14:23:43.0419210Z                 raise_assert_detail(
2025-02-25T14:23:43.0419330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0419510Z                 )
2025-02-25T14:23:43.0419560Z     
2025-02-25T14:23:43.0419620Z             diff = 0
2025-02-25T14:23:43.0419710Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0419780Z                 # count up differences
2025-02-25T14:23:43.0419930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0419990Z                     diff += 1
2025-02-25T14:23:43.0420040Z     
2025-02-25T14:23:43.0420110Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0420220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0420430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0420530Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0420580Z E           
2025-02-25T14:23:43.0420670Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0420890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0421110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0421120Z 
2025-02-25T14:23:43.0421380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0421380Z 
2025-02-25T14:23:43.0421520Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0421530Z 
2025-02-25T14:23:43.0421700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7aa50>
2025-02-25T14:23:43.0421840Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0421900Z attr = 'previous_beta_sobolev'
2025-02-25T14:23:43.0421900Z 
2025-02-25T14:23:43.0422020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0422110Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0422180Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0422230Z         try:
2025-02-25T14:23:43.0422350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0422410Z         except KeyError:
2025-02-25T14:23:43.0422530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0422580Z     
2025-02-25T14:23:43.0422650Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0422720Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0422790Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0422910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0422970Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0423040Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0423130Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0423190Z             else:
2025-02-25T14:23:43.0423260Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0423350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0423350Z 
2025-02-25T14:23:43.0423450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0423550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0423680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0423730Z     ???
2025-02-25T14:23:43.0423820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0423880Z 
2025-02-25T14:23:43.0423930Z >   ???
2025-02-25T14:23:43.0424050Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0424100Z E   
2025-02-25T14:23:43.0424210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0424310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0424360Z E          ...
2025-02-25T14:23:43.0424440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0424550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0424640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0424730Z E          ...
2025-02-25T14:23:43.0424810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0424910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0425000Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0425000Z 
2025-02-25T14:23:43.0425070Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0425240Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-25T14:23:43.0425240Z 
2025-02-25T14:23:43.0425350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0425470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0425550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0425660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0425770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0425850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0425910Z err_msg = None
2025-02-25T14:23:43.0425910Z 
2025-02-25T14:23:43.0426000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0426060Z         if err_msg is None:
2025-02-25T14:23:43.0426140Z             if left.shape != right.shape:
2025-02-25T14:23:43.0426210Z                 raise_assert_detail(
2025-02-25T14:23:43.0426330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0426380Z                 )
2025-02-25T14:23:43.0426440Z     
2025-02-25T14:23:43.0426490Z             diff = 0
2025-02-25T14:23:43.0426580Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0426640Z                 # count up differences
2025-02-25T14:23:43.0426790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0426850Z                     diff += 1
2025-02-25T14:23:43.0426910Z     
2025-02-25T14:23:43.0426980Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0427100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0427240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0427340Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0427400Z E           
2025-02-25T14:23:43.0427490Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0427710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0427920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0427930Z 
2025-02-25T14:23:43.0428530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0428540Z 
2025-02-25T14:23:43.0428680Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0428680Z 
2025-02-25T14:23:43.0428860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7ab10>
2025-02-25T14:23:43.0428980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0429040Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0429040Z 
2025-02-25T14:23:43.0429150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0429250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0429390Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0429450Z         try:
2025-02-25T14:23:43.0429560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0429620Z         except KeyError:
2025-02-25T14:23:43.0429740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0429790Z     
2025-02-25T14:23:43.0429850Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0429920Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0429990Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0430100Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0430160Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0430230Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0430320Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0430370Z             else:
2025-02-25T14:23:43.0430450Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0430540Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0430540Z 
2025-02-25T14:23:43.0430640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0430730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0430850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0430900Z     ???
2025-02-25T14:23:43.0431000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0431000Z 
2025-02-25T14:23:43.0431050Z >   ???
2025-02-25T14:23:43.0431150Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0431200Z E   
2025-02-25T14:23:43.0431300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0431390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0431440Z E          ...
2025-02-25T14:23:43.0431510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0431620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0431710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0431760Z E          ...
2025-02-25T14:23:43.0431830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0431940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0432020Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0432020Z 
2025-02-25T14:23:43.0432080Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0432250Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-25T14:23:43.0432250Z 
2025-02-25T14:23:43.0432360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0432470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0432550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0432670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0432780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0432910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0432960Z err_msg = None
2025-02-25T14:23:43.0432960Z 
2025-02-25T14:23:43.0433050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0433110Z         if err_msg is None:
2025-02-25T14:23:43.0433190Z             if left.shape != right.shape:
2025-02-25T14:23:43.0433250Z                 raise_assert_detail(
2025-02-25T14:23:43.0433370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0433430Z                 )
2025-02-25T14:23:43.0433480Z     
2025-02-25T14:23:43.0433530Z             diff = 0
2025-02-25T14:23:43.0433620Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0433740Z                 # count up differences
2025-02-25T14:23:43.0433990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0434050Z                     diff += 1
2025-02-25T14:23:43.0434100Z     
2025-02-25T14:23:43.0434180Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0434290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0434430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0434520Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0434570Z E           
2025-02-25T14:23:43.0434660Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0434870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0435090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0435100Z 
2025-02-25T14:23:43.0435350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0435350Z 
2025-02-25T14:23:43.0435490Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0435490Z 
2025-02-25T14:23:43.0435670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7abd0>
2025-02-25T14:23:43.0435800Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>
2025-02-25T14:23:43.0435860Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0435860Z 
2025-02-25T14:23:43.0435970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0436070Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0436140Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0436190Z         try:
2025-02-25T14:23:43.0436320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0436380Z         except KeyError:
2025-02-25T14:23:43.0436510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0436550Z     
2025-02-25T14:23:43.0436640Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0436710Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0437330Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0437830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0437940Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0438030Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0438130Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0438180Z             else:
2025-02-25T14:23:43.0438260Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0438350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0438700Z 
2025-02-25T14:23:43.0438820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0438920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0439050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0439110Z     ???
2025-02-25T14:23:43.0439200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0439210Z 
2025-02-25T14:23:43.0439260Z >   ???
2025-02-25T14:23:43.0439360Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0439410Z E   
2025-02-25T14:23:43.0439520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0439690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0439740Z E          ...
2025-02-25T14:23:43.0439820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0439930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0440030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0440080Z E          ...
2025-02-25T14:23:43.0440160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0440260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0440340Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0440340Z 
2025-02-25T14:23:43.0440410Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0440580Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-25T14:23:43.0440580Z 
2025-02-25T14:23:43.0440700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0440810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0440900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0441020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0441130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0441220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0441270Z err_msg = None
2025-02-25T14:23:43.0441280Z 
2025-02-25T14:23:43.0441370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0441430Z         if err_msg is None:
2025-02-25T14:23:43.0441510Z             if left.shape != right.shape:
2025-02-25T14:23:43.0441580Z                 raise_assert_detail(
2025-02-25T14:23:43.0441710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0441760Z                 )
2025-02-25T14:23:43.0441810Z     
2025-02-25T14:23:43.0441870Z             diff = 0
2025-02-25T14:23:43.0441960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0442030Z                 # count up differences
2025-02-25T14:23:43.0442180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0442240Z                     diff += 1
2025-02-25T14:23:43.0442290Z     
2025-02-25T14:23:43.0442360Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0442470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0442620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0442720Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0442770Z E           
2025-02-25T14:23:43.0442860Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0443090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0443380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0443390Z 
2025-02-25T14:23:43.0443660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0443660Z 
2025-02-25T14:23:43.0443800Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0443840Z 
2025-02-25T14:23:43.0444030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7ad50>
2025-02-25T14:23:43.0444210Z plasma = <tardis.plasma.base.BasePlasma object at 0x14182ca10>, attr = 'j_blues'
2025-02-25T14:23:43.0444210Z 
2025-02-25T14:23:43.0444330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0444430Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0444500Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0444550Z         try:
2025-02-25T14:23:43.0444670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0444730Z         except KeyError:
2025-02-25T14:23:43.0444850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0444900Z     
2025-02-25T14:23:43.0444970Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0445050Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0445110Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0445240Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0445310Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0445380Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0445470Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0445520Z             else:
2025-02-25T14:23:43.0445600Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0445680Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0445690Z 
2025-02-25T14:23:43.0445790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0445880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0446010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0446050Z     ???
2025-02-25T14:23:43.0446150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0446160Z 
2025-02-25T14:23:43.0446210Z >   ???
2025-02-25T14:23:43.0446310Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0446360Z E   
2025-02-25T14:23:43.0446470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0446560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0446610Z E          ...
2025-02-25T14:23:43.0446690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0446800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0446890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0446940Z E          ...
2025-02-25T14:23:43.0447020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0447120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0447200Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0447210Z 
2025-02-25T14:23:43.0447270Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0447480Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-25T14:23:43.0447480Z 
2025-02-25T14:23:43.0447590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0447710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0447900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0448010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0448120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0448210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0448260Z err_msg = None
2025-02-25T14:23:43.0448260Z 
2025-02-25T14:23:43.0448350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0448410Z         if err_msg is None:
2025-02-25T14:23:43.0448570Z             if left.shape != right.shape:
2025-02-25T14:23:43.0448640Z                 raise_assert_detail(
2025-02-25T14:23:43.0448770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0448820Z                 )
2025-02-25T14:23:43.0448870Z     
2025-02-25T14:23:43.0448920Z             diff = 0
2025-02-25T14:23:43.0449020Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0449090Z                 # count up differences
2025-02-25T14:23:43.0449230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0449290Z                     diff += 1
2025-02-25T14:23:43.0449340Z     
2025-02-25T14:23:43.0449410Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0449520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0449670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0449760Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0449820Z E           
2025-02-25T14:23:43.0449910Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0450130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0450350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0450360Z 
2025-02-25T14:23:43.0450610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0450620Z 
2025-02-25T14:23:43.0450770Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0450770Z 
2025-02-25T14:23:43.0450950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7bad0>
2025-02-25T14:23:43.0451120Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>, attr = 'lines'
2025-02-25T14:23:43.0451120Z 
2025-02-25T14:23:43.0451250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0451340Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0451410Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0451460Z         try:
2025-02-25T14:23:43.0451580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0451640Z         except KeyError:
2025-02-25T14:23:43.0451760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0451810Z     
2025-02-25T14:23:43.0451880Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0451970Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0452030Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0452150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0452290Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0452360Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0452450Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0452510Z             else:
2025-02-25T14:23:43.0452580Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0452670Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0452670Z 
2025-02-25T14:23:43.0452770Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0452870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0452990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0453090Z     ???
2025-02-25T14:23:43.0453190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0453190Z 
2025-02-25T14:23:43.0453240Z >   ???
2025-02-25T14:23:43.0453350Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0453400Z E   
2025-02-25T14:23:43.0453510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0453600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0453650Z E          ...
2025-02-25T14:23:43.0453730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0453830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0453940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0453990Z E          ...
2025-02-25T14:23:43.0454070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0454170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0454260Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0454260Z 
2025-02-25T14:23:43.0454330Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0454520Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-25T14:23:43.0454530Z 
2025-02-25T14:23:43.0454710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7bb90>
2025-02-25T14:23:43.0454890Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>
2025-02-25T14:23:43.0454990Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0455000Z 
2025-02-25T14:23:43.0455140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0455250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0455330Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0455410Z         try:
2025-02-25T14:23:43.0455540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0455630Z         except KeyError:
2025-02-25T14:23:43.0455780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0455840Z     
2025-02-25T14:23:43.0455930Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0456020Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0456090Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0456210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0456270Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0456340Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0456440Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0456440Z 
2025-02-25T14:23:43.0456540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0456640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0456650Z 
2025-02-25T14:23:43.0456770Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0456840Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0456950Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0457020Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0457150Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0457370Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0457460Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0457520Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0457580Z err_msg = None
2025-02-25T14:23:43.0457580Z 
2025-02-25T14:23:43.0457670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0457730Z         if err_msg is None:
2025-02-25T14:23:43.0457800Z             if left.shape != right.shape:
2025-02-25T14:23:43.0457860Z                 raise_assert_detail(
2025-02-25T14:23:43.0457980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0458110Z                 )
2025-02-25T14:23:43.0458160Z     
2025-02-25T14:23:43.0458220Z             diff = 0
2025-02-25T14:23:43.0458430Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0458510Z                 # count up differences
2025-02-25T14:23:43.0458670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0458750Z                     diff += 1
2025-02-25T14:23:43.0458800Z     
2025-02-25T14:23:43.0458940Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0459080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0459230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0459330Z E           AssertionError: Series are different
2025-02-25T14:23:43.0493420Z E           
2025-02-25T14:23:43.0493630Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0493980Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0494270Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0494560Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0494560Z 
2025-02-25T14:23:43.0494830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0495030Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-25T14:23:43.0495040Z 
2025-02-25T14:23:43.0495220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7bc50>
2025-02-25T14:23:43.0495360Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>
2025-02-25T14:23:43.0495440Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0495450Z 
2025-02-25T14:23:43.0495570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0495660Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0495730Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0495790Z         try:
2025-02-25T14:23:43.0495910Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0495960Z         except KeyError:
2025-02-25T14:23:43.0496090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0497330Z     
2025-02-25T14:23:43.0497410Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0497500Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0497580Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0497690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0497760Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0497830Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0497920Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0497920Z 
2025-02-25T14:23:43.0498040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0498280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0498280Z 
2025-02-25T14:23:43.0498390Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0498460Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0498560Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0498630Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0498750Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0498810Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0498900Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0498960Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0499010Z err_msg = None
2025-02-25T14:23:43.0499010Z 
2025-02-25T14:23:43.0499100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0499160Z         if err_msg is None:
2025-02-25T14:23:43.0499250Z             if left.shape != right.shape:
2025-02-25T14:23:43.0499320Z                 raise_assert_detail(
2025-02-25T14:23:43.0499440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0499490Z                 )
2025-02-25T14:23:43.0499540Z     
2025-02-25T14:23:43.0499590Z             diff = 0
2025-02-25T14:23:43.0499690Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0499750Z                 # count up differences
2025-02-25T14:23:43.0499890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0499950Z                     diff += 1
2025-02-25T14:23:43.0500000Z     
2025-02-25T14:23:43.0500060Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0500190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0500340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0500420Z E           AssertionError: Series are different
2025-02-25T14:23:43.0500470Z E           
2025-02-25T14:23:43.0500550Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0500870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0501190Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0501520Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0501740Z 
2025-02-25T14:23:43.0502030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0502190Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-25T14:23:43.0502190Z 
2025-02-25T14:23:43.0502300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0502720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0502800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0502910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0503020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0503100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0503150Z err_msg = None
2025-02-25T14:23:43.0503150Z 
2025-02-25T14:23:43.0503240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0503300Z         if err_msg is None:
2025-02-25T14:23:43.0503360Z             if left.shape != right.shape:
2025-02-25T14:23:43.0503430Z                 raise_assert_detail(
2025-02-25T14:23:43.0503540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0503600Z                 )
2025-02-25T14:23:43.0503640Z     
2025-02-25T14:23:43.0503690Z             diff = 0
2025-02-25T14:23:43.0503780Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0503850Z                 # count up differences
2025-02-25T14:23:43.0503990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0504060Z                     diff += 1
2025-02-25T14:23:43.0504120Z     
2025-02-25T14:23:43.0504180Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0504290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0504430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0504520Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0504570Z E           
2025-02-25T14:23:43.0504670Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0504890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0505120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0505120Z 
2025-02-25T14:23:43.0505380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0505390Z 
2025-02-25T14:23:43.0505530Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0505530Z 
2025-02-25T14:23:43.0505700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7be90>
2025-02-25T14:23:43.0505860Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>, attr = 'nu'
2025-02-25T14:23:43.0505870Z 
2025-02-25T14:23:43.0505980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0506160Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0506220Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0506270Z         try:
2025-02-25T14:23:43.0506380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0506440Z         except KeyError:
2025-02-25T14:23:43.0506550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0506600Z     
2025-02-25T14:23:43.0506660Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0506730Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0506810Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0506930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0507080Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0507140Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0507230Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0507240Z 
2025-02-25T14:23:43.0507350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0507450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0507570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0507620Z     ???
2025-02-25T14:23:43.0507710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0507720Z 
2025-02-25T14:23:43.0507760Z >   ???
2025-02-25T14:23:43.0507860Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0507910Z E   
2025-02-25T14:23:43.0508010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0508100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0508150Z E          ...
2025-02-25T14:23:43.0508230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0508350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0508440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0508490Z E          ...
2025-02-25T14:23:43.0508560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0508670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0508750Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0508750Z 
2025-02-25T14:23:43.0508820Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0509000Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-25T14:23:43.0509010Z 
2025-02-25T14:23:43.0509110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0509230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0509300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0509410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0509540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0509620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0509680Z err_msg = None
2025-02-25T14:23:43.0509680Z 
2025-02-25T14:23:43.0509760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0509820Z         if err_msg is None:
2025-02-25T14:23:43.0509890Z             if left.shape != right.shape:
2025-02-25T14:23:43.0509960Z                 raise_assert_detail(
2025-02-25T14:23:43.0510090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0510140Z                 )
2025-02-25T14:23:43.0510200Z     
2025-02-25T14:23:43.0510240Z             diff = 0
2025-02-25T14:23:43.0510330Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0510400Z                 # count up differences
2025-02-25T14:23:43.0510550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0510700Z                     diff += 1
2025-02-25T14:23:43.0510750Z     
2025-02-25T14:23:43.0510820Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0510930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0511070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0511180Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0511230Z E           
2025-02-25T14:23:43.0511320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0511530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0511850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0511860Z 
2025-02-25T14:23:43.0512110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0512110Z 
2025-02-25T14:23:43.0512250Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0512260Z 
2025-02-25T14:23:43.0512430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb7bf50>
2025-02-25T14:23:43.0512560Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>
2025-02-25T14:23:43.0512610Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0512620Z 
2025-02-25T14:23:43.0512730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0512820Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0512890Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0512940Z         try:
2025-02-25T14:23:43.0513050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0513130Z         except KeyError:
2025-02-25T14:23:43.0513240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0513290Z     
2025-02-25T14:23:43.0513350Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0513420Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0513490Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0513600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0513670Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0513740Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0513830Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0513840Z 
2025-02-25T14:23:43.0513930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0514040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0514170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0514210Z     ???
2025-02-25T14:23:43.0514300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0514310Z 
2025-02-25T14:23:43.0514350Z >   ???
2025-02-25T14:23:43.0514450Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0514500Z E   
2025-02-25T14:23:43.0514600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0514700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0514750Z E          ...
2025-02-25T14:23:43.0514810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0514920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0515080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0515130Z E          ...
2025-02-25T14:23:43.0515200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0515300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0515380Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0515380Z 
2025-02-25T14:23:43.0515450Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0515610Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-25T14:23:43.0515610Z 
2025-02-25T14:23:43.0515710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0515890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0515970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0516080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0516190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0516270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0516320Z err_msg = None
2025-02-25T14:23:43.0516330Z 
2025-02-25T14:23:43.0516410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0516470Z         if err_msg is None:
2025-02-25T14:23:43.0516540Z             if left.shape != right.shape:
2025-02-25T14:23:43.0516600Z                 raise_assert_detail(
2025-02-25T14:23:43.0516720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0516770Z                 )
2025-02-25T14:23:43.0516810Z     
2025-02-25T14:23:43.0516860Z             diff = 0
2025-02-25T14:23:43.0516950Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0517020Z                 # count up differences
2025-02-25T14:23:43.0517170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0517330Z                     diff += 1
2025-02-25T14:23:43.0517390Z     
2025-02-25T14:23:43.0517450Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0517560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0517700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0517800Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0517850Z E           
2025-02-25T14:23:43.0517940Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0518150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0518370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0518380Z 
2025-02-25T14:23:43.0518620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0518630Z 
2025-02-25T14:23:43.0518760Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0518760Z 
2025-02-25T14:23:43.0518940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9c050>
2025-02-25T14:23:43.0519100Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>, attr = 'f_lu'
2025-02-25T14:23:43.0519110Z 
2025-02-25T14:23:43.0519210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0519430Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0519490Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0519540Z         try:
2025-02-25T14:23:43.0519650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0519710Z         except KeyError:
2025-02-25T14:23:43.0519820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0519870Z     
2025-02-25T14:23:43.0519930Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0520010Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0520070Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0520180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0520340Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0520410Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0520500Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0520500Z 
2025-02-25T14:23:43.0520600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0520690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0520810Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0520860Z     ???
2025-02-25T14:23:43.0521200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0521220Z 
2025-02-25T14:23:43.0521270Z >   ???
2025-02-25T14:23:43.0521370Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0521420Z E   
2025-02-25T14:23:43.0521520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0521610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0521660Z E          ...
2025-02-25T14:23:43.0521730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0521840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0521930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0521980Z E          ...
2025-02-25T14:23:43.0522050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0522150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0522240Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0522240Z 
2025-02-25T14:23:43.0522300Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0522480Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-25T14:23:43.0522490Z 
2025-02-25T14:23:43.0522590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0522720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0522790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0522900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0523020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0523090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0523150Z err_msg = None
2025-02-25T14:23:43.0523150Z 
2025-02-25T14:23:43.0523240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0523300Z         if err_msg is None:
2025-02-25T14:23:43.0523360Z             if left.shape != right.shape:
2025-02-25T14:23:43.0523430Z                 raise_assert_detail(
2025-02-25T14:23:43.0523540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0523590Z                 )
2025-02-25T14:23:43.0523640Z     
2025-02-25T14:23:43.0523690Z             diff = 0
2025-02-25T14:23:43.0523780Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0523840Z                 # count up differences
2025-02-25T14:23:43.0523990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0524260Z                     diff += 1
2025-02-25T14:23:43.0524310Z     
2025-02-25T14:23:43.0524370Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0524490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0524630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0524720Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0524770Z E           
2025-02-25T14:23:43.0524860Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0525070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0525350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0525350Z 
2025-02-25T14:23:43.0525610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0525610Z 
2025-02-25T14:23:43.0525750Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0525750Z 
2025-02-25T14:23:43.0525920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9c7d0>
2025-02-25T14:23:43.0526060Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>
2025-02-25T14:23:43.0526110Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0526110Z 
2025-02-25T14:23:43.0526220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0526310Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0526380Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0526420Z         try:
2025-02-25T14:23:43.0526540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0526600Z         except KeyError:
2025-02-25T14:23:43.0526710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0526760Z     
2025-02-25T14:23:43.0526820Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0526890Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0526950Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0527060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0527130Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0527200Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0527280Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0527330Z             else:
2025-02-25T14:23:43.0527410Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0527490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0527500Z 
2025-02-25T14:23:43.0527590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0527680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0527800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0527850Z     ???
2025-02-25T14:23:43.0527940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0527950Z 
2025-02-25T14:23:43.0527990Z >   ???
2025-02-25T14:23:43.0528100Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0528140Z E   
2025-02-25T14:23:43.0528250Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0528340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0528390Z E          ...
2025-02-25T14:23:43.0528500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0528610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0528700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0528750Z E          ...
2025-02-25T14:23:43.0528820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0528920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0529000Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0529000Z 
2025-02-25T14:23:43.0529070Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0529230Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-25T14:23:43.0529270Z 
2025-02-25T14:23:43.0529390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0529500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0529580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0529690Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0529800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0529870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0529920Z err_msg = None
2025-02-25T14:23:43.0529930Z 
2025-02-25T14:23:43.0530020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0530070Z         if err_msg is None:
2025-02-25T14:23:43.0530140Z             if left.shape != right.shape:
2025-02-25T14:23:43.0530210Z                 raise_assert_detail(
2025-02-25T14:23:43.0530330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0530380Z                 )
2025-02-25T14:23:43.0530420Z     
2025-02-25T14:23:43.0530470Z             diff = 0
2025-02-25T14:23:43.0530560Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0530630Z                 # count up differences
2025-02-25T14:23:43.0530770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0530820Z                     diff += 1
2025-02-25T14:23:43.0530870Z     
2025-02-25T14:23:43.0530940Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0531050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0531190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0531280Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0531330Z E           
2025-02-25T14:23:43.0531420Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0531640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0531860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0531860Z 
2025-02-25T14:23:43.0532110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0532120Z 
2025-02-25T14:23:43.0532260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0532260Z 
2025-02-25T14:23:43.0532440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9c890>
2025-02-25T14:23:43.0532570Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>
2025-02-25T14:23:43.0532680Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0532680Z 
2025-02-25T14:23:43.0532790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0532880Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0532950Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0533000Z         try:
2025-02-25T14:23:43.0533110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0533170Z         except KeyError:
2025-02-25T14:23:43.0533280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0533330Z     
2025-02-25T14:23:43.0533440Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0533520Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0533600Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0533710Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0533780Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0533850Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0533940Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0533990Z             else:
2025-02-25T14:23:43.0534070Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0534150Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0534160Z 
2025-02-25T14:23:43.0534270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0534370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0534490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0534540Z     ???
2025-02-25T14:23:43.0534640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0534640Z 
2025-02-25T14:23:43.0534690Z >   ???
2025-02-25T14:23:43.0534800Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0534860Z E   
2025-02-25T14:23:43.0534960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0535050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0535100Z E          ...
2025-02-25T14:23:43.0535170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0535280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0535370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0535430Z E          ...
2025-02-25T14:23:43.0535500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0535600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0535690Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0535690Z 
2025-02-25T14:23:43.0535760Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0535920Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-25T14:23:43.0535930Z 
2025-02-25T14:23:43.0536040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0536150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0536230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0536350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0536450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0536530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0536590Z err_msg = None
2025-02-25T14:23:43.0536590Z 
2025-02-25T14:23:43.0536680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0536740Z         if err_msg is None:
2025-02-25T14:23:43.0536820Z             if left.shape != right.shape:
2025-02-25T14:23:43.0536880Z                 raise_assert_detail(
2025-02-25T14:23:43.0537310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0537370Z                 )
2025-02-25T14:23:43.0537410Z     
2025-02-25T14:23:43.0537460Z             diff = 0
2025-02-25T14:23:43.0537550Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0537620Z                 # count up differences
2025-02-25T14:23:43.0537760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0537820Z                     diff += 1
2025-02-25T14:23:43.0537870Z     
2025-02-25T14:23:43.0537940Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0538070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0538320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0538420Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0538470Z E           
2025-02-25T14:23:43.0538580Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0538800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0539020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0539020Z 
2025-02-25T14:23:43.0539270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0539280Z 
2025-02-25T14:23:43.0539410Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0539420Z 
2025-02-25T14:23:43.0539600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9ca10>
2025-02-25T14:23:43.0539770Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b9a2150>, attr = 'j_blues'
2025-02-25T14:23:43.0539780Z 
2025-02-25T14:23:43.0539900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0539990Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0540060Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0540110Z         try:
2025-02-25T14:23:43.0540230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0540290Z         except KeyError:
2025-02-25T14:23:43.0540400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0540460Z     
2025-02-25T14:23:43.0540520Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0540600Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0540680Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0540800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0540870Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0540940Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0541030Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0541080Z             else:
2025-02-25T14:23:43.0541160Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0541250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0541250Z 
2025-02-25T14:23:43.0541350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0541450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0541580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0541640Z     ???
2025-02-25T14:23:43.0541730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0541810Z 
2025-02-25T14:23:43.0541860Z >   ???
2025-02-25T14:23:43.0541970Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0542020Z E   
2025-02-25T14:23:43.0542120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0542210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0542260Z E          ...
2025-02-25T14:23:43.0542340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0542450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0542540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0542660Z E          ...
2025-02-25T14:23:43.0542740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0542850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0542940Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0542950Z 
2025-02-25T14:23:43.0543020Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0543180Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-25T14:23:43.0543180Z 
2025-02-25T14:23:43.0543290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0543410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0543500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0543610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0543720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0543800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0543860Z err_msg = None
2025-02-25T14:23:43.0543860Z 
2025-02-25T14:23:43.0543950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0544010Z         if err_msg is None:
2025-02-25T14:23:43.0544080Z             if left.shape != right.shape:
2025-02-25T14:23:43.0544150Z                 raise_assert_detail(
2025-02-25T14:23:43.0544270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0549670Z                 )
2025-02-25T14:23:43.0549760Z     
2025-02-25T14:23:43.0549820Z             diff = 0
2025-02-25T14:23:43.0549910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0549990Z                 # count up differences
2025-02-25T14:23:43.0550140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0550200Z                     diff += 1
2025-02-25T14:23:43.0550250Z     
2025-02-25T14:23:43.0550320Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0550440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0550610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0550710Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0550770Z E           
2025-02-25T14:23:43.0550860Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0551090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0551320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0551330Z 
2025-02-25T14:23:43.0551850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0551850Z 
2025-02-25T14:23:43.0552000Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0552000Z 
2025-02-25T14:23:43.0552190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9d790>
2025-02-25T14:23:43.0552350Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>, attr = 'lines'
2025-02-25T14:23:43.0552360Z 
2025-02-25T14:23:43.0552480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0552580Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0552730Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0552790Z         try:
2025-02-25T14:23:43.0552920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0552980Z         except KeyError:
2025-02-25T14:23:43.0553090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0553150Z     
2025-02-25T14:23:43.0553240Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0553330Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0553400Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0553510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0553580Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0553660Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0553760Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0553810Z             else:
2025-02-25T14:23:43.0553890Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0553990Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0554000Z 
2025-02-25T14:23:43.0554120Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0554220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0554350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0554410Z     ???
2025-02-25T14:23:43.0554510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0554510Z 
2025-02-25T14:23:43.0554560Z >   ???
2025-02-25T14:23:43.0554670Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0554720Z E   
2025-02-25T14:23:43.0554830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0554920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0554980Z E          ...
2025-02-25T14:23:43.0555050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0555160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0555270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0555330Z E          ...
2025-02-25T14:23:43.0555400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0555510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0555590Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0555590Z 
2025-02-25T14:23:43.0555660Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0555840Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-25T14:23:43.0555850Z 
2025-02-25T14:23:43.0556020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9d850>
2025-02-25T14:23:43.0556150Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>
2025-02-25T14:23:43.0556220Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0556220Z 
2025-02-25T14:23:43.0556340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0556430Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0556490Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0556540Z         try:
2025-02-25T14:23:43.0556650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0556810Z         except KeyError:
2025-02-25T14:23:43.0556940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0556990Z     
2025-02-25T14:23:43.0557060Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0557130Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0557210Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0557430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0557520Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0557590Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0557680Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0557770Z 
2025-02-25T14:23:43.0557880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0557990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0558000Z 
2025-02-25T14:23:43.0558120Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0558190Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0558280Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0558340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0558470Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0558550Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0558640Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0558700Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0558760Z err_msg = None
2025-02-25T14:23:43.0558760Z 
2025-02-25T14:23:43.0558870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0558940Z         if err_msg is None:
2025-02-25T14:23:43.0559010Z             if left.shape != right.shape:
2025-02-25T14:23:43.0559080Z                 raise_assert_detail(
2025-02-25T14:23:43.0559210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0559260Z                 )
2025-02-25T14:23:43.0559320Z     
2025-02-25T14:23:43.0559390Z             diff = 0
2025-02-25T14:23:43.0559470Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0559540Z                 # count up differences
2025-02-25T14:23:43.0559680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0559740Z                     diff += 1
2025-02-25T14:23:43.0559790Z     
2025-02-25T14:23:43.0559860Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0559970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0560120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0560200Z E           AssertionError: Series are different
2025-02-25T14:23:43.0560250Z E           
2025-02-25T14:23:43.0560340Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0560660Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0560940Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0561240Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0561430Z 
2025-02-25T14:23:43.0561680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0561870Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-25T14:23:43.0561870Z 
2025-02-25T14:23:43.0562060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9d910>
2025-02-25T14:23:43.0562420Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>
2025-02-25T14:23:43.0562500Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0562500Z 
2025-02-25T14:23:43.0562610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0562720Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0562780Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0562830Z         try:
2025-02-25T14:23:43.0562940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0563000Z         except KeyError:
2025-02-25T14:23:43.0563110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0563160Z     
2025-02-25T14:23:43.0563220Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0563290Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0563360Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0563460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0563530Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0563600Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0563680Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0563690Z 
2025-02-25T14:23:43.0563780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0563880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0563890Z 
2025-02-25T14:23:43.0564000Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0564060Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0564150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0564210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0564330Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0564400Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0564490Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0564560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0564620Z err_msg = None
2025-02-25T14:23:43.0564620Z 
2025-02-25T14:23:43.0564710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0564760Z         if err_msg is None:
2025-02-25T14:23:43.0564830Z             if left.shape != right.shape:
2025-02-25T14:23:43.0564890Z                 raise_assert_detail(
2025-02-25T14:23:43.0565010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0565060Z                 )
2025-02-25T14:23:43.0565100Z     
2025-02-25T14:23:43.0565150Z             diff = 0
2025-02-25T14:23:43.0565240Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0565300Z                 # count up differences
2025-02-25T14:23:43.0565440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0565500Z                     diff += 1
2025-02-25T14:23:43.0565550Z     
2025-02-25T14:23:43.0565630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0565730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0565930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0566010Z E           AssertionError: Series are different
2025-02-25T14:23:43.0566070Z E           
2025-02-25T14:23:43.0566140Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0566450Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0566830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0567170Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0567180Z 
2025-02-25T14:23:43.0567430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0567590Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-25T14:23:43.0567590Z 
2025-02-25T14:23:43.0567700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0567810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0567890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0568020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0568140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0568220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0568280Z err_msg = None
2025-02-25T14:23:43.0568280Z 
2025-02-25T14:23:43.0568360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0568430Z         if err_msg is None:
2025-02-25T14:23:43.0568500Z             if left.shape != right.shape:
2025-02-25T14:23:43.0568560Z                 raise_assert_detail(
2025-02-25T14:23:43.0568680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0568730Z                 )
2025-02-25T14:23:43.0568780Z     
2025-02-25T14:23:43.0568830Z             diff = 0
2025-02-25T14:23:43.0568920Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0568990Z                 # count up differences
2025-02-25T14:23:43.0569130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0569190Z                     diff += 1
2025-02-25T14:23:43.0569240Z     
2025-02-25T14:23:43.0569310Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0569420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0569560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0569660Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0569710Z E           
2025-02-25T14:23:43.0569800Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0570100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0570320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0570380Z 
2025-02-25T14:23:43.0570630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0570640Z 
2025-02-25T14:23:43.0570780Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0570780Z 
2025-02-25T14:23:43.0570960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9db50>
2025-02-25T14:23:43.0571120Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>, attr = 'nu'
2025-02-25T14:23:43.0571120Z 
2025-02-25T14:23:43.0571230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0571330Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0571390Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0571440Z         try:
2025-02-25T14:23:43.0571550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0571610Z         except KeyError:
2025-02-25T14:23:43.0571730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0571780Z     
2025-02-25T14:23:43.0571850Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0571930Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0572000Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0572120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0572190Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0572260Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0572350Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0572350Z 
2025-02-25T14:23:43.0572450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0572540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0572660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0572710Z     ???
2025-02-25T14:23:43.0572800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0572810Z 
2025-02-25T14:23:43.0572860Z >   ???
2025-02-25T14:23:43.0572970Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0573010Z E   
2025-02-25T14:23:43.0573120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0573210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0573270Z E          ...
2025-02-25T14:23:43.0573340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0573460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0573550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0573600Z E          ...
2025-02-25T14:23:43.0573680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0573780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0573860Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0573860Z 
2025-02-25T14:23:43.0573930Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0574100Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-25T14:23:43.0574110Z 
2025-02-25T14:23:43.0574210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0574380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0574460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0574570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0574680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0574760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0574820Z err_msg = None
2025-02-25T14:23:43.0574820Z 
2025-02-25T14:23:43.0574910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0575020Z         if err_msg is None:
2025-02-25T14:23:43.0575090Z             if left.shape != right.shape:
2025-02-25T14:23:43.0575160Z                 raise_assert_detail(
2025-02-25T14:23:43.0575280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0575340Z                 )
2025-02-25T14:23:43.0575390Z     
2025-02-25T14:23:43.0575430Z             diff = 0
2025-02-25T14:23:43.0575520Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0575590Z                 # count up differences
2025-02-25T14:23:43.0575740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0575790Z                     diff += 1
2025-02-25T14:23:43.0575850Z     
2025-02-25T14:23:43.0575920Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0576030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0576180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0576280Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0576330Z E           
2025-02-25T14:23:43.0576420Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0576650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0576870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0576880Z 
2025-02-25T14:23:43.0577120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0577130Z 
2025-02-25T14:23:43.0577260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0577270Z 
2025-02-25T14:23:43.0577440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9dc10>
2025-02-25T14:23:43.0577580Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>
2025-02-25T14:23:43.0577640Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0577640Z 
2025-02-25T14:23:43.0577750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0577850Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0577920Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0577970Z         try:
2025-02-25T14:23:43.0578080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0578140Z         except KeyError:
2025-02-25T14:23:43.0578250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0578290Z     
2025-02-25T14:23:43.0578360Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0578430Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0578490Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0578690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0578750Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0578820Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0578920Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0578920Z 
2025-02-25T14:23:43.0579010Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0579110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0579230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0579280Z     ???
2025-02-25T14:23:43.0579610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0579610Z 
2025-02-25T14:23:43.0579660Z >   ???
2025-02-25T14:23:43.0579760Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0579810Z E   
2025-02-25T14:23:43.0579920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0580010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0580060Z E          ...
2025-02-25T14:23:43.0580130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0580230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0580320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0580370Z E          ...
2025-02-25T14:23:43.0580440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0580540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0580610Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0580620Z 
2025-02-25T14:23:43.0580690Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0580850Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-25T14:23:43.0580850Z 
2025-02-25T14:23:43.0580960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0581070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0581150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0581260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0581370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0581440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0581490Z err_msg = None
2025-02-25T14:23:43.0581500Z 
2025-02-25T14:23:43.0581580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0581640Z         if err_msg is None:
2025-02-25T14:23:43.0581720Z             if left.shape != right.shape:
2025-02-25T14:23:43.0581780Z                 raise_assert_detail(
2025-02-25T14:23:43.0581890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0581940Z                 )
2025-02-25T14:23:43.0581990Z     
2025-02-25T14:23:43.0582040Z             diff = 0
2025-02-25T14:23:43.0582130Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0582190Z                 # count up differences
2025-02-25T14:23:43.0582330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0582400Z                     diff += 1
2025-02-25T14:23:43.0582440Z     
2025-02-25T14:23:43.0582510Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0582620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0582760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0582850Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0582900Z E           
2025-02-25T14:23:43.0582990Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0583260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0583480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0583530Z 
2025-02-25T14:23:43.0583780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0583780Z 
2025-02-25T14:23:43.0583920Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0583920Z 
2025-02-25T14:23:43.0584100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9dcd0>
2025-02-25T14:23:43.0584260Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>, attr = 'f_lu'
2025-02-25T14:23:43.0584260Z 
2025-02-25T14:23:43.0584370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0584460Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0584520Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0584580Z         try:
2025-02-25T14:23:43.0584690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0584750Z         except KeyError:
2025-02-25T14:23:43.0584860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0584920Z     
2025-02-25T14:23:43.0584980Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0585060Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0585120Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0585230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0585300Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0585370Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0585450Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0585460Z 
2025-02-25T14:23:43.0585550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0585650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0585760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0585810Z     ???
2025-02-25T14:23:43.0585900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0585910Z 
2025-02-25T14:23:43.0585950Z >   ???
2025-02-25T14:23:43.0586050Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0586100Z E   
2025-02-25T14:23:43.0586200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0586290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0586340Z E          ...
2025-02-25T14:23:43.0586410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0586510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0586600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0586650Z E          ...
2025-02-25T14:23:43.0586720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0586820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0586900Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0586900Z 
2025-02-25T14:23:43.0586960Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0587130Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-25T14:23:43.0587130Z 
2025-02-25T14:23:43.0587270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0587470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0587550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0587660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0587770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0587840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0587900Z err_msg = None
2025-02-25T14:23:43.0587900Z 
2025-02-25T14:23:43.0587980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0588090Z         if err_msg is None:
2025-02-25T14:23:43.0588160Z             if left.shape != right.shape:
2025-02-25T14:23:43.0588230Z                 raise_assert_detail(
2025-02-25T14:23:43.0588350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0588400Z                 )
2025-02-25T14:23:43.0588450Z     
2025-02-25T14:23:43.0588500Z             diff = 0
2025-02-25T14:23:43.0588590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0588650Z                 # count up differences
2025-02-25T14:23:43.0588790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0588850Z                     diff += 1
2025-02-25T14:23:43.0588890Z     
2025-02-25T14:23:43.0588960Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0589070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0589210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0589300Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0589350Z E           
2025-02-25T14:23:43.0589440Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0589650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0589860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0589870Z 
2025-02-25T14:23:43.0590120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0590130Z 
2025-02-25T14:23:43.0590260Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0590260Z 
2025-02-25T14:23:43.0590440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9e450>
2025-02-25T14:23:43.0590570Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>
2025-02-25T14:23:43.0590620Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0590620Z 
2025-02-25T14:23:43.0590740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0590830Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0590900Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0590940Z         try:
2025-02-25T14:23:43.0591060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0591110Z         except KeyError:
2025-02-25T14:23:43.0591230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0591280Z     
2025-02-25T14:23:43.0591340Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0591410Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0591480Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0591650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0591710Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0591780Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0591860Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0591910Z             else:
2025-02-25T14:23:43.0591980Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0592070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0592070Z 
2025-02-25T14:23:43.0592170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0592260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0592420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0592470Z     ???
2025-02-25T14:23:43.0592560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0592570Z 
2025-02-25T14:23:43.0592610Z >   ???
2025-02-25T14:23:43.0592720Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0592760Z E   
2025-02-25T14:23:43.0592860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0592950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0593000Z E          ...
2025-02-25T14:23:43.0593070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0593170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0593260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0593310Z E          ...
2025-02-25T14:23:43.0593380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0593480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0593570Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0593570Z 
2025-02-25T14:23:43.0593640Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0593800Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-25T14:23:43.0593810Z 
2025-02-25T14:23:43.0593910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0594020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0594100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0594200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0594310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0594390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0594450Z err_msg = None
2025-02-25T14:23:43.0594450Z 
2025-02-25T14:23:43.0594530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0594590Z         if err_msg is None:
2025-02-25T14:23:43.0594660Z             if left.shape != right.shape:
2025-02-25T14:23:43.0594730Z                 raise_assert_detail(
2025-02-25T14:23:43.0594840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0594890Z                 )
2025-02-25T14:23:43.0594940Z     
2025-02-25T14:23:43.0594990Z             diff = 0
2025-02-25T14:23:43.0595080Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0595140Z                 # count up differences
2025-02-25T14:23:43.0595280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0595340Z                     diff += 1
2025-02-25T14:23:43.0595400Z     
2025-02-25T14:23:43.0595470Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0595590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0595740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0606800Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0606990Z E           
2025-02-25T14:23:43.0607110Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0607350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0607580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0607990Z 
2025-02-25T14:23:43.0608280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0608290Z 
2025-02-25T14:23:43.0608440Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0608450Z 
2025-02-25T14:23:43.0608630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9e510>
2025-02-25T14:23:43.0608770Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>
2025-02-25T14:23:43.0608830Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0608840Z 
2025-02-25T14:23:43.0608950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0609050Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0609110Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0609170Z         try:
2025-02-25T14:23:43.0609290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0609350Z         except KeyError:
2025-02-25T14:23:43.0609470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0609550Z     
2025-02-25T14:23:43.0609630Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0609700Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0609770Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0609880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0609950Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0610020Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0610110Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0610170Z             else:
2025-02-25T14:23:43.0610240Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0610340Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0610340Z 
2025-02-25T14:23:43.0610450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0610550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0610690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0610750Z     ???
2025-02-25T14:23:43.0610850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0610850Z 
2025-02-25T14:23:43.0610900Z >   ???
2025-02-25T14:23:43.0611010Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0611060Z E   
2025-02-25T14:23:43.0611160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0611370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0611440Z E          ...
2025-02-25T14:23:43.0611510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0611630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0611730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0611790Z E          ...
2025-02-25T14:23:43.0611870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0612160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0612250Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0612250Z 
2025-02-25T14:23:43.0612330Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0612490Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-25T14:23:43.0612500Z 
2025-02-25T14:23:43.0612610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0612730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0612820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0613040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0613160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0613240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0613300Z err_msg = None
2025-02-25T14:23:43.0613300Z 
2025-02-25T14:23:43.0613390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0613460Z         if err_msg is None:
2025-02-25T14:23:43.0613530Z             if left.shape != right.shape:
2025-02-25T14:23:43.0613600Z                 raise_assert_detail(
2025-02-25T14:23:43.0613740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0613800Z                 )
2025-02-25T14:23:43.0613850Z     
2025-02-25T14:23:43.0613900Z             diff = 0
2025-02-25T14:23:43.0614000Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0614070Z                 # count up differences
2025-02-25T14:23:43.0614240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0614320Z                     diff += 1
2025-02-25T14:23:43.0614380Z     
2025-02-25T14:23:43.0614460Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0614590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0614730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0614820Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0614880Z E           
2025-02-25T14:23:43.0614970Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0615190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0615430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0615440Z 
2025-02-25T14:23:43.0615710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0615710Z 
2025-02-25T14:23:43.0751980Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0752070Z 
2025-02-25T14:23:43.0753700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9e690>
2025-02-25T14:23:43.0753890Z plasma = <tardis.plasma.base.BasePlasma object at 0x127f2e660>, attr = 'j_blues'
2025-02-25T14:23:43.0753920Z 
2025-02-25T14:23:43.0754110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0754250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0754320Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0754370Z         try:
2025-02-25T14:23:43.0754500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0755020Z         except KeyError:
2025-02-25T14:23:43.0755440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0755880Z     
2025-02-25T14:23:43.0756500Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0756620Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0756690Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0756820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0756910Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0757010Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0757320Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0757400Z             else:
2025-02-25T14:23:43.0757510Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0757610Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0757620Z 
2025-02-25T14:23:43.0757740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0757870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0758010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0758070Z     ???
2025-02-25T14:23:43.0758200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0758210Z 
2025-02-25T14:23:43.0758270Z >   ???
2025-02-25T14:23:43.0758370Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0759290Z E   
2025-02-25T14:23:43.0759460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0759590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0759660Z E          ...
2025-02-25T14:23:43.0759760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0759890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0759990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0760040Z E          ...
2025-02-25T14:23:43.0760270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0760750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0763740Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0763750Z 
2025-02-25T14:23:43.0763870Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0764070Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-25T14:23:43.0764080Z 
2025-02-25T14:23:43.0764210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0764340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0764440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0764560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0764700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0764800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0764880Z err_msg = None
2025-02-25T14:23:43.0764890Z 
2025-02-25T14:23:43.0764980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0765040Z         if err_msg is None:
2025-02-25T14:23:43.0765140Z             if left.shape != right.shape:
2025-02-25T14:23:43.0765210Z                 raise_assert_detail(
2025-02-25T14:23:43.0765340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0765390Z                 )
2025-02-25T14:23:43.0765450Z     
2025-02-25T14:23:43.0765510Z             diff = 0
2025-02-25T14:23:43.0765610Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0765670Z                 # count up differences
2025-02-25T14:23:43.0765820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0766080Z                     diff += 1
2025-02-25T14:23:43.0766160Z     
2025-02-25T14:23:43.0766250Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0766360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0766500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0766610Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0766670Z E           
2025-02-25T14:23:43.0766760Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0767020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0767350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0767380Z 
2025-02-25T14:23:43.0767670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0767680Z 
2025-02-25T14:23:43.0767860Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0767870Z 
2025-02-25T14:23:43.0768050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f410>
2025-02-25T14:23:43.0768240Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>, attr = 'lines'
2025-02-25T14:23:43.0768250Z 
2025-02-25T14:23:43.0768360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0768470Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0768550Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0768610Z         try:
2025-02-25T14:23:43.0768740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0768810Z         except KeyError:
2025-02-25T14:23:43.0768940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0768980Z     
2025-02-25T14:23:43.0769070Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0769150Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0769220Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0769350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0769430Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0769500Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0769610Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0769680Z             else:
2025-02-25T14:23:43.0769760Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0769860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0769860Z 
2025-02-25T14:23:43.0769980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0770110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0770250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0770320Z     ???
2025-02-25T14:23:43.0770420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0770430Z 
2025-02-25T14:23:43.0770480Z >   ???
2025-02-25T14:23:43.0770600Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0770670Z E   
2025-02-25T14:23:43.0770810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0771050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0772120Z E          ...
2025-02-25T14:23:43.0772650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0772790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0772900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0772960Z E          ...
2025-02-25T14:23:43.0773030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0773130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0773230Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0773250Z 
2025-02-25T14:23:43.0773330Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0773540Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-25T14:23:43.0773660Z 
2025-02-25T14:23:43.0773840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f4d0>
2025-02-25T14:23:43.0773980Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>
2025-02-25T14:23:43.0774060Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0774060Z 
2025-02-25T14:23:43.0774190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0774280Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0774450Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0774540Z         try:
2025-02-25T14:23:43.0774660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0774730Z         except KeyError:
2025-02-25T14:23:43.0774840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0774890Z     
2025-02-25T14:23:43.0774960Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0775040Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0775110Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0775230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0775290Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0775380Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0775490Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0775490Z 
2025-02-25T14:23:43.0775600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0775710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0775720Z 
2025-02-25T14:23:43.0775840Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0775930Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0776040Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0776110Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0776230Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0776300Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0776420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0776500Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0776590Z err_msg = None
2025-02-25T14:23:43.0776590Z 
2025-02-25T14:23:43.0776690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0776750Z         if err_msg is None:
2025-02-25T14:23:43.0776840Z             if left.shape != right.shape:
2025-02-25T14:23:43.0776930Z                 raise_assert_detail(
2025-02-25T14:23:43.0777080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0777140Z                 )
2025-02-25T14:23:43.0777190Z     
2025-02-25T14:23:43.0777240Z             diff = 0
2025-02-25T14:23:43.0777330Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0777400Z                 # count up differences
2025-02-25T14:23:43.0777550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0777620Z                     diff += 1
2025-02-25T14:23:43.0777670Z     
2025-02-25T14:23:43.0777860Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0777980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0778130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0778230Z E           AssertionError: Series are different
2025-02-25T14:23:43.0778290Z E           
2025-02-25T14:23:43.0778380Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0778720Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0779100Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0779410Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0779420Z 
2025-02-25T14:23:43.0779690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0779910Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-25T14:23:43.0779910Z 
2025-02-25T14:23:43.0780100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f590>
2025-02-25T14:23:43.0780240Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>
2025-02-25T14:23:43.0780320Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0780330Z 
2025-02-25T14:23:43.0780450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0780540Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0780620Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0780670Z         try:
2025-02-25T14:23:43.0780800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0780860Z         except KeyError:
2025-02-25T14:23:43.0780990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0781040Z     
2025-02-25T14:23:43.0781120Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0781190Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0781260Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0781400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0781470Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0781540Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0781630Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0781640Z 
2025-02-25T14:23:43.0781750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0781850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0781850Z 
2025-02-25T14:23:43.0781970Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0782050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0782140Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0782210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0782330Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0782500Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0782600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0783260Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0783370Z err_msg = None
2025-02-25T14:23:43.0783370Z 
2025-02-25T14:23:43.0783470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0783530Z         if err_msg is None:
2025-02-25T14:23:43.0783620Z             if left.shape != right.shape:
2025-02-25T14:23:43.0783680Z                 raise_assert_detail(
2025-02-25T14:23:43.0783820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0784020Z                 )
2025-02-25T14:23:43.0784070Z     
2025-02-25T14:23:43.0784120Z             diff = 0
2025-02-25T14:23:43.0784210Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0784290Z                 # count up differences
2025-02-25T14:23:43.0784430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0784500Z                     diff += 1
2025-02-25T14:23:43.0784560Z     
2025-02-25T14:23:43.0784630Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0784740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0784900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0784990Z E           AssertionError: Series are different
2025-02-25T14:23:43.0785040Z E           
2025-02-25T14:23:43.0785120Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0785460Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0785830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0786440Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0786460Z 
2025-02-25T14:23:43.0786730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0786910Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-25T14:23:43.0786910Z 
2025-02-25T14:23:43.0787020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0787140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0787220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0787330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0787450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0787550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0787610Z err_msg = None
2025-02-25T14:23:43.0787730Z 
2025-02-25T14:23:43.0787820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0787880Z         if err_msg is None:
2025-02-25T14:23:43.0787960Z             if left.shape != right.shape:
2025-02-25T14:23:43.0788020Z                 raise_assert_detail(
2025-02-25T14:23:43.0788140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0788190Z                 )
2025-02-25T14:23:43.0788250Z     
2025-02-25T14:23:43.0788300Z             diff = 0
2025-02-25T14:23:43.0788770Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0788850Z                 # count up differences
2025-02-25T14:23:43.0789150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0789220Z                     diff += 1
2025-02-25T14:23:43.0789270Z     
2025-02-25T14:23:43.0789340Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0789470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0789630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0789720Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0789800Z E           
2025-02-25T14:23:43.0789910Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0790140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0790370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0790390Z 
2025-02-25T14:23:43.0790660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0790670Z 
2025-02-25T14:23:43.0790820Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0790820Z 
2025-02-25T14:23:43.0791370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f7d0>
2025-02-25T14:23:43.0792550Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>, attr = 'nu'
2025-02-25T14:23:43.0792580Z 
2025-02-25T14:23:43.0792750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0792870Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0792950Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0793000Z         try:
2025-02-25T14:23:43.0793140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0793220Z         except KeyError:
2025-02-25T14:23:43.0793350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0793400Z     
2025-02-25T14:23:43.0793480Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0793560Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0793640Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0793770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0793830Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0793910Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0794000Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0794010Z 
2025-02-25T14:23:43.0794120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0794220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0794360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0794680Z     ???
2025-02-25T14:23:43.0794800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0794800Z 
2025-02-25T14:23:43.0794850Z >   ???
2025-02-25T14:23:43.0794960Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0795000Z E   
2025-02-25T14:23:43.0795120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0795230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0795300Z E          ...
2025-02-25T14:23:43.0795370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0795500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0795760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0795820Z E          ...
2025-02-25T14:23:43.0795910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0796020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0796110Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0796120Z 
2025-02-25T14:23:43.0796190Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0796390Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-25T14:23:43.0796400Z 
2025-02-25T14:23:43.0796520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0796640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0796730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0796860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0796980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0797070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0797130Z err_msg = None
2025-02-25T14:23:43.0797130Z 
2025-02-25T14:23:43.0797230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0797300Z         if err_msg is None:
2025-02-25T14:23:43.0797380Z             if left.shape != right.shape:
2025-02-25T14:23:43.0797460Z                 raise_assert_detail(
2025-02-25T14:23:43.0797610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0797680Z                 )
2025-02-25T14:23:43.0797730Z     
2025-02-25T14:23:43.0797790Z             diff = 0
2025-02-25T14:23:43.0797910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0797980Z                 # count up differences
2025-02-25T14:23:43.0798140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0798210Z                     diff += 1
2025-02-25T14:23:43.0798260Z     
2025-02-25T14:23:43.0798330Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0798450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0798610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0798700Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0798760Z E           
2025-02-25T14:23:43.0798850Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0799090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0799530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0800160Z 
2025-02-25T14:23:43.0801050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0801070Z 
2025-02-25T14:23:43.0801250Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0801260Z 
2025-02-25T14:23:43.0801450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f890>
2025-02-25T14:23:43.0801590Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>
2025-02-25T14:23:43.0801660Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0801660Z 
2025-02-25T14:23:43.0801920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0802020Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0802080Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0802160Z         try:
2025-02-25T14:23:43.0802290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0802370Z         except KeyError:
2025-02-25T14:23:43.0802490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0802540Z     
2025-02-25T14:23:43.0802610Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0802690Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0802760Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0802880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0802950Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0803020Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0803120Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0803130Z 
2025-02-25T14:23:43.0803230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0803340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0803470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0803520Z     ???
2025-02-25T14:23:43.0803630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0803630Z 
2025-02-25T14:23:43.0803680Z >   ???
2025-02-25T14:23:43.0803800Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0803850Z E   
2025-02-25T14:23:43.0803970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0804060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0804120Z E          ...
2025-02-25T14:23:43.0804200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0804310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0804410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0804470Z E          ...
2025-02-25T14:23:43.0804550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0804660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0804750Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0804760Z 
2025-02-25T14:23:43.0804830Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0805200Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-25T14:23:43.0805230Z 
2025-02-25T14:23:43.0805410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0805560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0805670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0805790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0805920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0806010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0806280Z err_msg = None
2025-02-25T14:23:43.0806290Z 
2025-02-25T14:23:43.0806390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0806460Z         if err_msg is None:
2025-02-25T14:23:43.0806540Z             if left.shape != right.shape:
2025-02-25T14:23:43.0806610Z                 raise_assert_detail(
2025-02-25T14:23:43.0806750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0806810Z                 )
2025-02-25T14:23:43.0806860Z     
2025-02-25T14:23:43.0806910Z             diff = 0
2025-02-25T14:23:43.0807010Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0807100Z                 # count up differences
2025-02-25T14:23:43.0807320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0807390Z                     diff += 1
2025-02-25T14:23:43.0807440Z     
2025-02-25T14:23:43.0807520Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0808060Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0808250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0808360Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0808410Z E           
2025-02-25T14:23:43.0808510Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0808750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0809010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0809020Z 
2025-02-25T14:23:43.0809290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0809300Z 
2025-02-25T14:23:43.0809450Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0809450Z 
2025-02-25T14:23:43.0809640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb9f950>
2025-02-25T14:23:43.0809810Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>, attr = 'f_lu'
2025-02-25T14:23:43.0809820Z 
2025-02-25T14:23:43.0820470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0820640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0820710Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0820760Z         try:
2025-02-25T14:23:43.0820890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0820960Z         except KeyError:
2025-02-25T14:23:43.0821090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0821140Z     
2025-02-25T14:23:43.0821210Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0821300Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0821370Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0821490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0821560Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0821640Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0821730Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0821740Z 
2025-02-25T14:23:43.0821840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0821940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0822060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0822570Z     ???
2025-02-25T14:23:43.0822690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0822690Z 
2025-02-25T14:23:43.0822750Z >   ???
2025-02-25T14:23:43.0822860Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0822910Z E   
2025-02-25T14:23:43.0823010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0823120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0823180Z E          ...
2025-02-25T14:23:43.0823250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0823360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0823610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0823670Z E          ...
2025-02-25T14:23:43.0823740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0823840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0823930Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0823930Z 
2025-02-25T14:23:43.0824020Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0824220Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-25T14:23:43.0824230Z 
2025-02-25T14:23:43.0824340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0824480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0824590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0824710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0824830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0824930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0825000Z err_msg = None
2025-02-25T14:23:43.0825000Z 
2025-02-25T14:23:43.0825100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0825170Z         if err_msg is None:
2025-02-25T14:23:43.0825260Z             if left.shape != right.shape:
2025-02-25T14:23:43.0825350Z                 raise_assert_detail(
2025-02-25T14:23:43.0825490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0825540Z                 )
2025-02-25T14:23:43.0825590Z     
2025-02-25T14:23:43.0825650Z             diff = 0
2025-02-25T14:23:43.0825740Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0825820Z                 # count up differences
2025-02-25T14:23:43.0825990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0826050Z                     diff += 1
2025-02-25T14:23:43.0826100Z     
2025-02-25T14:23:43.0826180Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0826300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0826450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0826560Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0826610Z E           
2025-02-25T14:23:43.0826710Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0827490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0827930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0828120Z 
2025-02-25T14:23:43.0828410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0828410Z 
2025-02-25T14:23:43.0828560Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0828560Z 
2025-02-25T14:23:43.0828740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcc110>
2025-02-25T14:23:43.0828870Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>
2025-02-25T14:23:43.0828940Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0828950Z 
2025-02-25T14:23:43.0829180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0829280Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0829340Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0829390Z         try:
2025-02-25T14:23:43.0829530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0829610Z         except KeyError:
2025-02-25T14:23:43.0829740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0829790Z     
2025-02-25T14:23:43.0829860Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0829930Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0830000Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0830120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0830180Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0830250Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0830340Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0830400Z             else:
2025-02-25T14:23:43.0830470Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0830560Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0830560Z 
2025-02-25T14:23:43.0830660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0831040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0831330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0831390Z     ???
2025-02-25T14:23:43.0831500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0831510Z 
2025-02-25T14:23:43.0831560Z >   ???
2025-02-25T14:23:43.0831690Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0831750Z E   
2025-02-25T14:23:43.0831850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0831950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0832020Z E          ...
2025-02-25T14:23:43.0832090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0832200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0832300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0832440Z E          ...
2025-02-25T14:23:43.0832510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0832620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0832700Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0832700Z 
2025-02-25T14:23:43.0832770Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0832940Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-25T14:23:43.0832950Z 
2025-02-25T14:23:43.0833060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0833180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0833270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0833390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0833500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0833690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0833760Z err_msg = None
2025-02-25T14:23:43.0833760Z 
2025-02-25T14:23:43.0833850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0833920Z         if err_msg is None:
2025-02-25T14:23:43.0833990Z             if left.shape != right.shape:
2025-02-25T14:23:43.0834060Z                 raise_assert_detail(
2025-02-25T14:23:43.0834180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0834230Z                 )
2025-02-25T14:23:43.0835750Z     
2025-02-25T14:23:43.0835810Z             diff = 0
2025-02-25T14:23:43.0835940Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0836030Z                 # count up differences
2025-02-25T14:23:43.0836180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0836250Z                     diff += 1
2025-02-25T14:23:43.0836400Z     
2025-02-25T14:23:43.0836520Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0836660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0836810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0836920Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0836970Z E           
2025-02-25T14:23:43.0837060Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0837300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0837550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0837570Z 
2025-02-25T14:23:43.0837860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0837870Z 
2025-02-25T14:23:43.0838020Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0838020Z 
2025-02-25T14:23:43.0838200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcc1d0>
2025-02-25T14:23:43.0838360Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>
2025-02-25T14:23:43.0838420Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0838420Z 
2025-02-25T14:23:43.0838540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0838640Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0838720Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0838770Z         try:
2025-02-25T14:23:43.0840550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0840650Z         except KeyError:
2025-02-25T14:23:43.0840780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0840830Z     
2025-02-25T14:23:43.0840900Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0840970Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0841050Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0841320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0841430Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0841510Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0841600Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0841660Z             else:
2025-02-25T14:23:43.0841900Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0842000Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0842000Z 
2025-02-25T14:23:43.0842110Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0842210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0842350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0842400Z     ???
2025-02-25T14:23:43.0842500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0842500Z 
2025-02-25T14:23:43.0842550Z >   ???
2025-02-25T14:23:43.0842660Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0842790Z E   
2025-02-25T14:23:43.0842920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0843040Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0843100Z E          ...
2025-02-25T14:23:43.0843180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0843300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0843410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0843460Z E          ...
2025-02-25T14:23:43.0843550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0843660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0843740Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0843740Z 
2025-02-25T14:23:43.0843820Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0844010Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-25T14:23:43.0844020Z 
2025-02-25T14:23:43.0844140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0844270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0844370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0844490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0844620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0844730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0844790Z err_msg = None
2025-02-25T14:23:43.0844790Z 
2025-02-25T14:23:43.0844880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0844940Z         if err_msg is None:
2025-02-25T14:23:43.0845030Z             if left.shape != right.shape:
2025-02-25T14:23:43.0845120Z                 raise_assert_detail(
2025-02-25T14:23:43.0845250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0845300Z                 )
2025-02-25T14:23:43.0845350Z     
2025-02-25T14:23:43.0845400Z             diff = 0
2025-02-25T14:23:43.0845500Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0845590Z                 # count up differences
2025-02-25T14:23:43.0845730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0845800Z                     diff += 1
2025-02-25T14:23:43.0845850Z     
2025-02-25T14:23:43.0845920Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0846030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0846170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0846270Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0846330Z E           
2025-02-25T14:23:43.0846420Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0847400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0848430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0848450Z 
2025-02-25T14:23:43.0848730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0848820Z 
2025-02-25T14:23:43.0848980Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0848990Z 
2025-02-25T14:23:43.0849190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcc350>
2025-02-25T14:23:43.0849390Z plasma = <tardis.plasma.base.BasePlasma object at 0x129d5b080>, attr = 'j_blues'
2025-02-25T14:23:43.0849400Z 
2025-02-25T14:23:43.0849540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0849660Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0849750Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0849810Z         try:
2025-02-25T14:23:43.0849930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0850000Z         except KeyError:
2025-02-25T14:23:43.0850110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0850170Z     
2025-02-25T14:23:43.0850250Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0850340Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0850410Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0850700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0850780Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0850860Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0850950Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0851000Z             else:
2025-02-25T14:23:43.0851100Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0851200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0851210Z 
2025-02-25T14:23:43.0851320Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0851420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0851540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0851600Z     ???
2025-02-25T14:23:43.0851710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0851720Z 
2025-02-25T14:23:43.0851760Z >   ???
2025-02-25T14:23:43.0851890Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0851950Z E   
2025-02-25T14:23:43.0852060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0852160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0852210Z E          ...
2025-02-25T14:23:43.0852280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0852390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0852500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0853110Z E          ...
2025-02-25T14:23:43.0853620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0853790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0853900Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0853910Z 
2025-02-25T14:23:43.0853990Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0854240Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-25T14:23:43.0854250Z 
2025-02-25T14:23:43.0854370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0854660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0854770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0854900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0855040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0855130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0855200Z err_msg = None
2025-02-25T14:23:43.0855200Z 
2025-02-25T14:23:43.0855460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0855530Z         if err_msg is None:
2025-02-25T14:23:43.0855620Z             if left.shape != right.shape:
2025-02-25T14:23:43.0855700Z                 raise_assert_detail(
2025-02-25T14:23:43.0855830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0855880Z                 )
2025-02-25T14:23:43.0855930Z     
2025-02-25T14:23:43.0855980Z             diff = 0
2025-02-25T14:23:43.0856080Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0856150Z                 # count up differences
2025-02-25T14:23:43.0856310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0856370Z                     diff += 1
2025-02-25T14:23:43.0856420Z     
2025-02-25T14:23:43.0856490Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0856620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0856780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0856870Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0856920Z E           
2025-02-25T14:23:43.0857030Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0857270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0857520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0857540Z 
2025-02-25T14:23:43.0857820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0857830Z 
2025-02-25T14:23:43.0857980Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0857980Z 
2025-02-25T14:23:43.0858190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd0d0>
2025-02-25T14:23:43.0858370Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>, attr = 'lines'
2025-02-25T14:23:43.0858370Z 
2025-02-25T14:23:43.0858490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0858590Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0858660Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0858710Z         try:
2025-02-25T14:23:43.0858840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0858900Z         except KeyError:
2025-02-25T14:23:43.0859710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0859790Z     
2025-02-25T14:23:43.0859870Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0859950Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0860030Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0860260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0860350Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0860440Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0860530Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0860590Z             else:
2025-02-25T14:23:43.0860660Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0860770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0860780Z 
2025-02-25T14:23:43.0860900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0861010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0861220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0861270Z     ???
2025-02-25T14:23:43.0861370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0861380Z 
2025-02-25T14:23:43.0861430Z >   ???
2025-02-25T14:23:43.0861540Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0861590Z E   
2025-02-25T14:23:43.0861700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0861800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0861860Z E          ...
2025-02-25T14:23:43.0861930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0862050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0862140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0862190Z E          ...
2025-02-25T14:23:43.0862270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0862380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0862460Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0862460Z 
2025-02-25T14:23:43.0862530Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0862790Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-25T14:23:43.0862800Z 
2025-02-25T14:23:43.0862990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd190>
2025-02-25T14:23:43.0863150Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>
2025-02-25T14:23:43.0863230Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.0863230Z 
2025-02-25T14:23:43.0863340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0863440Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0863510Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0863570Z         try:
2025-02-25T14:23:43.0863690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0863770Z         except KeyError:
2025-02-25T14:23:43.0863900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0863950Z     
2025-02-25T14:23:43.0864020Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0864110Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0864190Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0864300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0864370Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0864440Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0864550Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0864550Z 
2025-02-25T14:23:43.0864660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0864760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0864770Z 
2025-02-25T14:23:43.0864880Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0865340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0866090Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0867360Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0867530Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:23:43.0867600Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:23:43.0867720Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0867780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:23:43.0867850Z err_msg = None
2025-02-25T14:23:43.0867860Z 
2025-02-25T14:23:43.0867950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0868020Z         if err_msg is None:
2025-02-25T14:23:43.0868250Z             if left.shape != right.shape:
2025-02-25T14:23:43.0868320Z                 raise_assert_detail(
2025-02-25T14:23:43.0868460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0868520Z                 )
2025-02-25T14:23:43.0868570Z     
2025-02-25T14:23:43.0868630Z             diff = 0
2025-02-25T14:23:43.0868720Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0868800Z                 # count up differences
2025-02-25T14:23:43.0869090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0869390Z                     diff += 1
2025-02-25T14:23:43.0869480Z     
2025-02-25T14:23:43.0869570Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0869710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0869870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0869970Z E           AssertionError: Series are different
2025-02-25T14:23:43.0870020Z E           
2025-02-25T14:23:43.0870120Z E           Series values are different (4.04858 %)
2025-02-25T14:23:43.0870470Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0870780Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0871070Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0871080Z 
2025-02-25T14:23:43.0871370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0871640Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-25T14:23:43.0871640Z 
2025-02-25T14:23:43.0871850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd250>
2025-02-25T14:23:43.0872010Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>
2025-02-25T14:23:43.0872090Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.0872090Z 
2025-02-25T14:23:43.0872210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0872310Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0872380Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0872530Z         try:
2025-02-25T14:23:43.0872770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0872840Z         except KeyError:
2025-02-25T14:23:43.0872950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0873000Z     
2025-02-25T14:23:43.0873070Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0873150Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0873220Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0873340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0873540Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0873920Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0874990Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0875020Z 
2025-02-25T14:23:43.0875310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0875570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0875730Z 
2025-02-25T14:23:43.0876070Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0876260Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0876510Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0876700Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0877480Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:23:43.0878230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:23:43.0878510Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:23:43.0878820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:23:43.0878930Z err_msg = None
2025-02-25T14:23:43.0878930Z 
2025-02-25T14:23:43.0879020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0879090Z         if err_msg is None:
2025-02-25T14:23:43.0879160Z             if left.shape != right.shape:
2025-02-25T14:23:43.0879240Z                 raise_assert_detail(
2025-02-25T14:23:43.0879380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0879440Z                 )
2025-02-25T14:23:43.0879490Z     
2025-02-25T14:23:43.0879540Z             diff = 0
2025-02-25T14:23:43.0879630Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0879700Z                 # count up differences
2025-02-25T14:23:43.0879890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0879960Z                     diff += 1
2025-02-25T14:23:43.0880010Z     
2025-02-25T14:23:43.0880080Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0880200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0880350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0880450Z E           AssertionError: Series are different
2025-02-25T14:23:43.0880510Z E           
2025-02-25T14:23:43.0880590Z E           Series values are different (6.47773 %)
2025-02-25T14:23:43.0881120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.0881510Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0883260Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.0883280Z 
2025-02-25T14:23:43.0883590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0883810Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-25T14:23:43.0884020Z 
2025-02-25T14:23:43.0884150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0884270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0884370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0884780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0885260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0885760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0885860Z err_msg = None
2025-02-25T14:23:43.0885870Z 
2025-02-25T14:23:43.0885970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0886030Z         if err_msg is None:
2025-02-25T14:23:43.0886110Z             if left.shape != right.shape:
2025-02-25T14:23:43.0886180Z                 raise_assert_detail(
2025-02-25T14:23:43.0886310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0886360Z                 )
2025-02-25T14:23:43.0886420Z     
2025-02-25T14:23:43.0886490Z             diff = 0
2025-02-25T14:23:43.0886590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0887090Z                 # count up differences
2025-02-25T14:23:43.0887270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0887340Z                     diff += 1
2025-02-25T14:23:43.0887390Z     
2025-02-25T14:23:43.0887460Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0887880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0888090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0888200Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0888280Z E           
2025-02-25T14:23:43.0888380Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0888610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0888870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0888880Z 
2025-02-25T14:23:43.0889170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0889180Z 
2025-02-25T14:23:43.0889320Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0889330Z 
2025-02-25T14:23:43.0889520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd490>
2025-02-25T14:23:43.0889700Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>, attr = 'nu'
2025-02-25T14:23:43.0889860Z 
2025-02-25T14:23:43.0889970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0890070Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0890140Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0890190Z         try:
2025-02-25T14:23:43.0890310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0890380Z         except KeyError:
2025-02-25T14:23:43.0890500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0890570Z     
2025-02-25T14:23:43.0890640Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0890860Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0890930Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0891040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0891120Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0891190Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0891280Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0891280Z 
2025-02-25T14:23:43.0891410Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0891510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0891630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0891690Z     ???
2025-02-25T14:23:43.0891790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0891790Z 
2025-02-25T14:23:43.0891840Z >   ???
2025-02-25T14:23:43.0891960Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0892020Z E   
2025-02-25T14:23:43.0892130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0892220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0892270Z E          ...
2025-02-25T14:23:43.0892340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0892470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0892560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0892610Z E          ...
2025-02-25T14:23:43.0892990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0893430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0893730Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0893750Z 
2025-02-25T14:23:43.0893960Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0895020Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-25T14:23:43.0895040Z 
2025-02-25T14:23:43.0895180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0906300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0906430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0906850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0907290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0907530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0907880Z err_msg = None
2025-02-25T14:23:43.0907910Z 
2025-02-25T14:23:43.0908200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0908380Z         if err_msg is None:
2025-02-25T14:23:43.0908770Z             if left.shape != right.shape:
2025-02-25T14:23:43.0909160Z                 raise_assert_detail(
2025-02-25T14:23:43.0909510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0909610Z                 )
2025-02-25T14:23:43.0909660Z     
2025-02-25T14:23:43.0909720Z             diff = 0
2025-02-25T14:23:43.0910130Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0910210Z                 # count up differences
2025-02-25T14:23:43.0910360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0910420Z                     diff += 1
2025-02-25T14:23:43.0910470Z     
2025-02-25T14:23:43.0910570Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0910690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0910840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0910930Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0911150Z E           
2025-02-25T14:23:43.0911250Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0911480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0911710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0911720Z 
2025-02-25T14:23:43.0911990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0912000Z 
2025-02-25T14:23:43.0912840Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0912870Z 
2025-02-25T14:23:43.0913420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd550>
2025-02-25T14:23:43.0914120Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>
2025-02-25T14:23:43.0914240Z attr = 'wavelength_cm'
2025-02-25T14:23:43.0914240Z 
2025-02-25T14:23:43.0914360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0914460Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0914530Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0914580Z         try:
2025-02-25T14:23:43.0914700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0914770Z         except KeyError:
2025-02-25T14:23:43.0914890Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0914940Z     
2025-02-25T14:23:43.0915010Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0915090Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0915180Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0915300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0915370Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0915460Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0915560Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0915570Z 
2025-02-25T14:23:43.0915670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0915780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0915930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0915980Z     ???
2025-02-25T14:23:43.0916080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0916080Z 
2025-02-25T14:23:43.0916140Z >   ???
2025-02-25T14:23:43.0916260Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0916310Z E   
2025-02-25T14:23:43.0916440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0916540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0916590Z E          ...
2025-02-25T14:23:43.0916790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0916900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0917000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0917050Z E          ...
2025-02-25T14:23:43.0917130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0917240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0917320Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0917330Z 
2025-02-25T14:23:43.0917400Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0917620Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-25T14:23:43.0917680Z 
2025-02-25T14:23:43.0917800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0917920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0918010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0918130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0918250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0918330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0918390Z err_msg = None
2025-02-25T14:23:43.0918390Z 
2025-02-25T14:23:43.0918490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0918550Z         if err_msg is None:
2025-02-25T14:23:43.0918630Z             if left.shape != right.shape:
2025-02-25T14:23:43.0918700Z                 raise_assert_detail(
2025-02-25T14:23:43.0918840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0918890Z                 )
2025-02-25T14:23:43.0918950Z     
2025-02-25T14:23:43.0919020Z             diff = 0
2025-02-25T14:23:43.0919110Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0919180Z                 # count up differences
2025-02-25T14:23:43.0919330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0919390Z                     diff += 1
2025-02-25T14:23:43.0919440Z     
2025-02-25T14:23:43.0919510Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0919640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0919800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0919890Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0919950Z E           
2025-02-25T14:23:43.0920040Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0920270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0930740Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0930760Z 
2025-02-25T14:23:43.0931380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-25T14:23:43.0931380Z 
2025-02-25T14:23:43.0931660Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0931680Z 
2025-02-25T14:23:43.0932240Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-25T14:23:43.0932590Z 
2025-02-25T14:23:43.0932900Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0932900Z 
2025-02-25T14:23:43.0933510Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-25T14:23:43.0933520Z 
2025-02-25T14:23:43.0933800Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0933800Z 
2025-02-25T14:23:43.0934390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-25T14:23:43.0934530Z 
2025-02-25T14:23:43.0934820Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0934830Z 
2025-02-25T14:23:43.0936940Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-25T14:23:43.0936950Z 
2025-02-25T14:23:43.0937220Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0937220Z 
2025-02-25T14:23:43.0937770Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-25T14:23:43.0937780Z 
2025-02-25T14:23:43.0938070Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0938080Z 
2025-02-25T14:23:43.0938650Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-25T14:23:43.0938660Z 
2025-02-25T14:23:43.0938950Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0938960Z 
2025-02-25T14:23:43.0939560Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-25T14:23:43.0939560Z 
2025-02-25T14:23:43.0939840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0939850Z 
2025-02-25T14:23:43.0940380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-25T14:23:43.0940390Z 
2025-02-25T14:23:43.0940680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0940690Z 
2025-02-25T14:23:43.0944100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-25T14:23:43.0944120Z 
2025-02-25T14:23:43.0949500Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0949520Z 
2025-02-25T14:23:43.0950100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-25T14:23:43.0950120Z 
2025-02-25T14:23:43.0950390Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0950660Z 
2025-02-25T14:23:43.0951240Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-25T14:23:43.0951240Z 
2025-02-25T14:23:43.0951520Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0951530Z 
2025-02-25T14:23:43.0952090Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-25T14:23:43.0952250Z 
2025-02-25T14:23:43.0954450Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0954460Z 
2025-02-25T14:23:43.0955020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-25T14:23:43.0955030Z 
2025-02-25T14:23:43.0955310Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0955320Z 
2025-02-25T14:23:43.0956630Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-25T14:23:43.0956640Z 
2025-02-25T14:23:43.0956930Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0956940Z 
2025-02-25T14:23:43.0957510Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-25T14:23:43.0957520Z 
2025-02-25T14:23:43.0957880Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0957880Z 
2025-02-25T14:23:43.0958400Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-25T14:23:43.0958410Z 
2025-02-25T14:23:43.0958680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0958680Z 
2025-02-25T14:23:43.0959230Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-25T14:23:43.0959250Z 
2025-02-25T14:23:43.0959520Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.0959530Z 
2025-02-25T14:23:43.0960100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-25T14:23:43.0960100Z 
2025-02-25T14:23:43.0960670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0960700Z 
2025-02-25T14:23:43.0960950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0960970Z 
2025-02-25T14:23:43.0961130Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0961290Z 
2025-02-25T14:23:43.0961490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcd610>
2025-02-25T14:23:43.0961680Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>, attr = 'f_lu'
2025-02-25T14:23:43.0961680Z 
2025-02-25T14:23:43.0961820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0961920Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0961980Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0962030Z         try:
2025-02-25T14:23:43.0962180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0962250Z         except KeyError:
2025-02-25T14:23:43.0962470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0966420Z     
2025-02-25T14:23:43.0966520Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0966590Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0966660Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0966770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0966840Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0966920Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0967030Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0967040Z 
2025-02-25T14:23:43.0967140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:23:43.0967260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0967390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0967450Z     ???
2025-02-25T14:23:43.0967540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0967550Z 
2025-02-25T14:23:43.0967600Z >   ???
2025-02-25T14:23:43.0967730Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0967780Z E   
2025-02-25T14:23:43.0967880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0967990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0968050Z E          ...
2025-02-25T14:23:43.0968130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0968250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0968340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0968390Z E          ...
2025-02-25T14:23:43.0968470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0968570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0968660Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0968660Z 
2025-02-25T14:23:43.0968740Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0968980Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-25T14:23:43.0968980Z 
2025-02-25T14:23:43.0969100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0969220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0969320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0969430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0969550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0969640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0969690Z err_msg = None
2025-02-25T14:23:43.0969690Z 
2025-02-25T14:23:43.0970220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0970300Z         if err_msg is None:
2025-02-25T14:23:43.0970370Z             if left.shape != right.shape:
2025-02-25T14:23:43.0970440Z                 raise_assert_detail(
2025-02-25T14:23:43.0970570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0970790Z                 )
2025-02-25T14:23:43.0970840Z     
2025-02-25T14:23:43.0970890Z             diff = 0
2025-02-25T14:23:43.0971000Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0971080Z                 # count up differences
2025-02-25T14:23:43.0971240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0971300Z                     diff += 1
2025-02-25T14:23:43.0971350Z     
2025-02-25T14:23:43.0971420Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0971540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0971790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0971910Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0971990Z E           
2025-02-25T14:23:43.0972140Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0972440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0972710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0972720Z 
2025-02-25T14:23:43.0973020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0973030Z 
2025-02-25T14:23:43.0973200Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0973220Z 
2025-02-25T14:23:43.0973440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcdd90>
2025-02-25T14:23:43.0973580Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>
2025-02-25T14:23:43.0973660Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.0973660Z 
2025-02-25T14:23:43.0974280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0974390Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0974450Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0974510Z         try:
2025-02-25T14:23:43.0974640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0974710Z         except KeyError:
2025-02-25T14:23:43.0974840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0974890Z     
2025-02-25T14:23:43.0974960Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0975030Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0975100Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0975220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0975300Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0975380Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0975510Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0975580Z             else:
2025-02-25T14:23:43.0975680Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0975820Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0975840Z 
2025-02-25T14:23:43.0975980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0976150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0976320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0976420Z     ???
2025-02-25T14:23:43.0976560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0976840Z 
2025-02-25T14:23:43.0976920Z >   ???
2025-02-25T14:23:43.0977030Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0977090Z E   
2025-02-25T14:23:43.0977200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0977350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0977440Z E          ...
2025-02-25T14:23:43.0977550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0977720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0977850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0977910Z E          ...
2025-02-25T14:23:43.0978150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0978290Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0978410Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0978420Z 
2025-02-25T14:23:43.0978500Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0978740Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-25T14:23:43.0978750Z 
2025-02-25T14:23:43.0978880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0979040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0979160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0979330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0979490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0979600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0979670Z err_msg = None
2025-02-25T14:23:43.0979670Z 
2025-02-25T14:23:43.0979780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.0979870Z         if err_msg is None:
2025-02-25T14:23:43.0979960Z             if left.shape != right.shape:
2025-02-25T14:23:43.0980030Z                 raise_assert_detail(
2025-02-25T14:23:43.0980170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.0980230Z                 )
2025-02-25T14:23:43.0980280Z     
2025-02-25T14:23:43.0980330Z             diff = 0
2025-02-25T14:23:43.0980960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.0981070Z                 # count up differences
2025-02-25T14:23:43.0981240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.0983270Z                     diff += 1
2025-02-25T14:23:43.0983360Z     
2025-02-25T14:23:43.0983470Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.0983630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.0983810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.0983930Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.0983990Z E           
2025-02-25T14:23:43.0984130Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.0984400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0984670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.0984690Z 
2025-02-25T14:23:43.0986410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.0986680Z 
2025-02-25T14:23:43.0986850Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.0986860Z 
2025-02-25T14:23:43.0987070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcde50>
2025-02-25T14:23:43.0988150Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>
2025-02-25T14:23:43.0988270Z attr = 'beta_sobolev'
2025-02-25T14:23:43.0988270Z 
2025-02-25T14:23:43.0988410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.0988520Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.0988730Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.0988780Z         try:
2025-02-25T14:23:43.0988930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.0989020Z         except KeyError:
2025-02-25T14:23:43.0989210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.0989310Z     
2025-02-25T14:23:43.0989440Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.0989520Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.0989610Z             if attr == "selected_atoms":
2025-02-25T14:23:43.0989780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.0989850Z             elif actual.ndim == 1:
2025-02-25T14:23:43.0989950Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.0990050Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.0990130Z             else:
2025-02-25T14:23:43.0990210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.0990310Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.0990310Z 
2025-02-25T14:23:43.0990430Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.0990550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0991430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.0994160Z     ???
2025-02-25T14:23:43.0994330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.0994340Z 
2025-02-25T14:23:43.0994510Z >   ???
2025-02-25T14:23:43.0994660Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.0994710Z E   
2025-02-25T14:23:43.0994820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.0994910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0994970Z E          ...
2025-02-25T14:23:43.0996220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0996350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0996450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.0996500Z E          ...
2025-02-25T14:23:43.0996590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.0996700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.0996800Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.0996820Z 
2025-02-25T14:23:43.0996900Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.0999460Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-25T14:23:43.0999480Z 
2025-02-25T14:23:43.0999600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.0999720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.0999810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.0999930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:23:43.1000070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:23:43.1000460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:23:43.1001240Z err_msg = None
2025-02-25T14:23:43.1001250Z 
2025-02-25T14:23:43.1001350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:23:43.1001420Z         if err_msg is None:
2025-02-25T14:23:43.1001490Z             if left.shape != right.shape:
2025-02-25T14:23:43.1001560Z                 raise_assert_detail(
2025-02-25T14:23:43.1001680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:23:43.1001750Z                 )
2025-02-25T14:23:43.1001820Z     
2025-02-25T14:23:43.1001910Z             diff = 0
2025-02-25T14:23:43.1002050Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:23:43.1003820Z                 # count up differences
2025-02-25T14:23:43.1003990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:23:43.1004050Z                     diff += 1
2025-02-25T14:23:43.1004100Z     
2025-02-25T14:23:43.1004180Z             diff = diff * 100.0 / left.size
2025-02-25T14:23:43.1004300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:23:43.1005330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:23:43.1005490Z E           AssertionError: numpy array are different
2025-02-25T14:23:43.1005580Z E           
2025-02-25T14:23:43.1005700Z E           numpy array values are different (4.04858 %)
2025-02-25T14:23:43.1005970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.1007200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.1007220Z 
2025-02-25T14:23:43.1007520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:23:43.1007530Z 
2025-02-25T14:23:43.1007680Z During handling of the above exception, another exception occurred:
2025-02-25T14:23:43.1007680Z 
2025-02-25T14:23:43.1007910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bbcdfd0>
2025-02-25T14:23:43.1008400Z plasma = <tardis.plasma.base.BasePlasma object at 0x12992c560>, attr = 'j_blues'
2025-02-25T14:23:43.1008430Z 
2025-02-25T14:23:43.1008550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:23:43.1009750Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:23:43.1009870Z         key = f"plasma/{attr}"
2025-02-25T14:23:43.1009940Z         try:
2025-02-25T14:23:43.1010090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:23:43.1010180Z         except KeyError:
2025-02-25T14:23:43.1010330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:23:43.1010380Z     
2025-02-25T14:23:43.1010450Z         if hasattr(plasma, attr):
2025-02-25T14:23:43.1010520Z             actual = getattr(plasma, attr)
2025-02-25T14:23:43.1010600Z             if attr == "selected_atoms":
2025-02-25T14:23:43.1010750Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:23:43.1010830Z             elif actual.ndim == 1:
2025-02-25T14:23:43.1010920Z                 actual = pd.Series(actual)
2025-02-25T14:23:43.1011050Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:23:43.1011110Z             else:
2025-02-25T14:23:43.1011220Z                 actual = pd.DataFrame(actual)
2025-02-25T14:23:43.1014070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:23:43.1024540Z 
2025-02-25T14:23:43.1025100Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:23:43.1025380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1025790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1026030Z     ???
2025-02-25T14:23:43.1026340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1026370Z 
2025-02-25T14:23:43.1026570Z >   ???
2025-02-25T14:23:43.1026910Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.1027110Z E   
2025-02-25T14:23:43.1028460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.1028850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.1028910Z E          ...
2025-02-25T14:23:43.1028980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.1029090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.1029200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.1029250Z E          ...
2025-02-25T14:23:43.1029320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.1029430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.1029510Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.1029510Z 
2025-02-25T14:23:43.1029580Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1029730Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-25T14:23:43.1029730Z 
2025-02-25T14:23:43.1029920Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1029990Z attr = 'stimulated_emission_factor'
2025-02-25T14:23:43.1030210Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x300ca46e0>
2025-02-25T14:23:43.1030220Z 
2025-02-25T14:23:43.1030340Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1030480Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1030580Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1030690Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1030780Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1030850Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1030920Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1031000Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1031010Z 
2025-02-25T14:23:43.1031090Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1031190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1031190Z 
2025-02-25T14:23:43.1031440Z args = (<function assert_allclose.<locals>.compare at 0x3037f40e0>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-02-25T14:23:43.1031510Z         0.01476858],
2025-02-25T14:23:43.1031620Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-25T14:23:43.1031670Z         0.01473787]]))
2025-02-25T14:23:43.1031880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1031880Z 
2025-02-25T14:23:43.1031940Z     @wraps(func)
2025-02-25T14:23:43.1032010Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1032080Z         with self._recreate_cm():
2025-02-25T14:23:43.1032150Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1032210Z E           AssertionError: 
2025-02-25T14:23:43.1032300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1032360Z E           
2025-02-25T14:23:43.1032450Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:23:43.1032520Z E           Max absolute difference: 1.
2025-02-25T14:23:43.1032590Z E           Max relative difference: 1.
2025-02-25T14:23:43.1032890Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.1032990Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.1033080Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:23:43.1033180Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.1033280Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.1033360Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:23:43.1033450Z 
2025-02-25T14:23:43.1033620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1033760Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-25T14:23:43.1033760Z 
2025-02-25T14:23:43.1033950Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1034030Z attr = 'lines_lower_level_index'
2025-02-25T14:23:43.1034240Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x301397260>
2025-02-25T14:23:43.1034250Z 
2025-02-25T14:23:43.1034370Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1034580Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1034690Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1034800Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1034900Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1034970Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1035040Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1035130Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1035130Z 
2025-02-25T14:23:43.1035210Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1035320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1035320Z 
2025-02-25T14:23:43.1035640Z args = (<function assert_allclose.<locals>.compare at 0x30372e520>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-25T14:23:43.1035840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1035850Z 
2025-02-25T14:23:43.1035900Z     @wraps(func)
2025-02-25T14:23:43.1035960Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1036020Z         with self._recreate_cm():
2025-02-25T14:23:43.1036090Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1036160Z E           AssertionError: 
2025-02-25T14:23:43.1036250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1036300Z E           
2025-02-25T14:23:43.1036390Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:23:43.1036460Z E           Max absolute difference: 4005
2025-02-25T14:23:43.1036540Z E           Max relative difference: 26.00649351
2025-02-25T14:23:43.1036630Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:23:43.1036710Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:23:43.1036720Z 
2025-02-25T14:23:43.1036880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1037020Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-25T14:23:43.1037020Z 
2025-02-25T14:23:43.1037200Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1037270Z attr = 'lines_upper_level_index'
2025-02-25T14:23:43.1037480Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12a2380e0>
2025-02-25T14:23:43.1037480Z 
2025-02-25T14:23:43.1037600Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1037800Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1037910Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1038010Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1038110Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1038180Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1038240Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1038320Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1038330Z 
2025-02-25T14:23:43.1038400Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1038550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1038560Z 
2025-02-25T14:23:43.1038870Z args = (<function assert_allclose.<locals>.compare at 0x30379e520>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-25T14:23:43.1039080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1039080Z 
2025-02-25T14:23:43.1039170Z     @wraps(func)
2025-02-25T14:23:43.1039250Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1039340Z         with self._recreate_cm():
2025-02-25T14:23:43.1039410Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1039480Z E           AssertionError: 
2025-02-25T14:23:43.1039560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1039610Z E           
2025-02-25T14:23:43.1039700Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:23:43.1039810Z E           Max absolute difference: 4046
2025-02-25T14:23:43.1039910Z E           Max relative difference: 24.82208589
2025-02-25T14:23:43.1040000Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:23:43.1040090Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:23:43.1040090Z 
2025-02-25T14:23:43.1040250Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1040390Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-25T14:23:43.1040400Z 
2025-02-25T14:23:43.1047360Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1047440Z attr = 'beta_sobolev'
2025-02-25T14:23:43.1047670Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x11bbcd6a0>
2025-02-25T14:23:43.1047670Z 
2025-02-25T14:23:43.1047790Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1047940Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1048030Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1048140Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1048240Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1048300Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1048380Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1048450Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1048460Z 
2025-02-25T14:23:43.1048540Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1048630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1048640Z 
2025-02-25T14:23:43.1048850Z args = (<function assert_allclose.<locals>.compare at 0x30372ec00>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1048900Z        [1., 1., 1.,.....,
2025-02-25T14:23:43.1048960Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1049020Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1049080Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:23:43.1049280Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1049470Z 
2025-02-25T14:23:43.1049520Z     @wraps(func)
2025-02-25T14:23:43.1049590Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1049660Z         with self._recreate_cm():
2025-02-25T14:23:43.1049730Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1049790Z E           AssertionError: 
2025-02-25T14:23:43.1049890Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1049940Z E           
2025-02-25T14:23:43.1050020Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:23:43.1050100Z E           Max absolute difference: 0.99984222
2025-02-25T14:23:43.1050170Z E           Max relative difference: 6337.12154973
2025-02-25T14:23:43.1050330Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1050390Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1050470Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.1050540Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1050610Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.1050680Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.1050690Z 
2025-02-25T14:23:43.1050880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1051010Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-25T14:23:43.1051010Z 
2025-02-25T14:23:43.1051190Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1051250Z attr = 'lines'
2025-02-25T14:23:43.1051460Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30133cb90>
2025-02-25T14:23:43.1051470Z 
2025-02-25T14:23:43.1051590Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1051720Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1051820Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1051930Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1052020Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1052090Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1052160Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1052240Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1052240Z 
2025-02-25T14:23:43.1052320Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1052420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1052420Z 
2025-02-25T14:23:43.1052780Z args = (<function assert_allclose.<locals>.compare at 0x3037f5d00>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-25T14:23:43.1052880Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-25T14:23:43.1053090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1053100Z 
2025-02-25T14:23:43.1053150Z     @wraps(func)
2025-02-25T14:23:43.1053220Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1053290Z         with self._recreate_cm():
2025-02-25T14:23:43.1053370Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1053440Z E           AssertionError: 
2025-02-25T14:23:43.1053550Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1053610Z E           
2025-02-25T14:23:43.1053710Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:23:43.1053790Z E           Max absolute difference: 4.25260542e+12
2025-02-25T14:23:43.1053870Z E           Max relative difference: 18196.0085861
2025-02-25T14:23:43.1053990Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:23:43.1054060Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:23:43.1054180Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:23:43.1054390Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:23:43.1054460Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:23:43.1054580Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:23:43.1054580Z 
2025-02-25T14:23:43.1054750Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1054870Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-25T14:23:43.1054880Z 
2025-02-25T14:23:43.1055050Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1055150Z attr = 'f_lu'
2025-02-25T14:23:43.1055370Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30133f380>
2025-02-25T14:23:43.1055370Z 
2025-02-25T14:23:43.1055490Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1055630Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1055730Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1055840Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1055930Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1056000Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1056070Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1056150Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1056150Z 
2025-02-25T14:23:43.1056230Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1056330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1056330Z 
2025-02-25T14:23:43.1056700Z args = (<function assert_allclose.<locals>.compare at 0x12a260f40>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-25T14:23:43.1056790Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-25T14:23:43.1056990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1056990Z 
2025-02-25T14:23:43.1057040Z     @wraps(func)
2025-02-25T14:23:43.1057110Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1057170Z         with self._recreate_cm():
2025-02-25T14:23:43.1057240Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1057300Z E           AssertionError: 
2025-02-25T14:23:43.1057390Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1057440Z E           
2025-02-25T14:23:43.1057520Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:23:43.1057600Z E           Max absolute difference: 2.92713618
2025-02-25T14:23:43.1057690Z E           Max relative difference: 18196.0085861
2025-02-25T14:23:43.1057820Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:23:43.1057890Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:23:43.1058010Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:23:43.1058080Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:23:43.1058080Z 
2025-02-25T14:23:43.1058240Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1058370Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-25T14:23:43.1058370Z 
2025-02-25T14:23:43.1058540Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x11e2815b0>
2025-02-25T14:23:43.1058610Z attr = 'tau_sobolevs'
2025-02-25T14:23:43.1058820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30133cda0>
2025-02-25T14:23:43.1058820Z 
2025-02-25T14:23:43.1058940Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:23:43.1059070Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:23:43.1059280Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:23:43.1059390Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:23:43.1059480Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:23:43.1059550Z             if hasattr(actual, "cgs"):
2025-02-25T14:23:43.1059620Z                 actual = actual.cgs.value
2025-02-25T14:23:43.1059700Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:23:43.1059700Z 
2025-02-25T14:23:43.1059780Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:23:43.1059870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1059960Z 
2025-02-25T14:23:43.1060320Z args = (<function assert_allclose.<locals>.compare at 0x3037f56c0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-25T14:23:43.1060430Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-25T14:23:43.1060640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1060640Z 
2025-02-25T14:23:43.1060690Z     @wraps(func)
2025-02-25T14:23:43.1060760Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1060830Z         with self._recreate_cm():
2025-02-25T14:23:43.1060910Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1060970Z E           AssertionError: 
2025-02-25T14:23:43.1061060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1061100Z E           
2025-02-25T14:23:43.1061200Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:23:43.1061280Z E           Max absolute difference: 282815.33818472
2025-02-25T14:23:43.1061370Z E           Max relative difference: 4.12352828e+47
2025-02-25T14:23:43.1061490Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:23:43.1061570Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:23:43.1061700Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:23:43.1061820Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:23:43.1061890Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:23:43.1062010Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:23:43.1062010Z 
2025-02-25T14:23:43.1062170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1062310Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-25T14:23:43.1062320Z 
2025-02-25T14:23:43.1062480Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1062540Z attr = 'iterations_w'
2025-02-25T14:23:43.1062750Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164915af0>
2025-02-25T14:23:43.1062750Z 
2025-02-25T14:23:43.1062820Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1062870Z         "attr",
2025-02-25T14:23:43.1062920Z         [
2025-02-25T14:23:43.1062980Z             "iterations_w",
2025-02-25T14:23:43.1063040Z             "iterations_t_rad",
2025-02-25T14:23:43.1063120Z             "iterations_electron_densities",
2025-02-25T14:23:43.1063180Z             "iterations_t_inner",
2025-02-25T14:23:43.1063230Z         ],
2025-02-25T14:23:43.1063280Z     )
2025-02-25T14:23:43.1063440Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1063530Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:23:43.1063600Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1063670Z             actual = actual.value
2025-02-25T14:23:43.1063740Z         actual = pd.DataFrame(actual)
2025-02-25T14:23:43.1063830Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1064080Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1064090Z 
2025-02-25T14:23:43.1064180Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:23:43.1064280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1064400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1064450Z     ???
2025-02-25T14:23:43.1064540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1064540Z 
2025-02-25T14:23:43.1064590Z >   ???
2025-02-25T14:23:43.1064730Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.1064830Z E   
2025-02-25T14:23:43.1064970Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.1065020Z E   [index]: [0, 1]
2025-02-25T14:23:43.1065100Z E   [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-25T14:23:43.1065190Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:23:43.1065340Z E   At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-25T14:23:43.1065340Z 
2025-02-25T14:23:43.1065410Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1065550Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1065970Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:43.1066330Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:43.1066460Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:23:43.1066470Z 
2025-02-25T14:23:43.1066470Z 
2025-02-25T14:23:43.1066650Z Packets:                                                                                   4031/? [05:26<00:00,  9.17it/s]   [A
2025-02-25T14:23:43.1066660Z 
2025-02-25T14:23:43.1066840Z Packets:                                                                                   14892/? [05:26<00:00, 56.70it/s][A
2025-02-25T14:23:43.1066850Z 
2025-02-25T14:23:43.1067020Z Packets:                                                                                   26699/? [05:26<00:00, 130.43it/s][A
2025-02-25T14:23:43.1067020Z 
2025-02-25T14:23:43.1067190Z Packets:                                                                                   36337/? [05:26<00:00, 216.21it/s][A
2025-02-25T14:23:43.1068820Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [05:26<00:00, 114.84s/it]
2025-02-25T14:23:43.1068840Z 
2025-02-25T14:23:43.1069050Z Packets:                                                                                   44030/? [05:26<00:00, 216.21it/s][A
2025-02-25T14:23:43.1069050Z 
2025-02-25T14:23:43.1069220Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-25T14:23:43.1069230Z 
2025-02-25T14:23:43.1069440Z Packets:   █████████████████▋                                                              8860/40000 [00:00<00:00, 38706.18it/s][A
2025-02-25T14:23:43.1069450Z 
2025-02-25T14:23:43.1069650Z Packets:   █████████████████████████▍                                                      12731/40000 [00:00<00:00, 30231.57it/s][A
2025-02-25T14:23:43.1069660Z 
2025-02-25T14:23:43.1069860Z Packets:   ████████████████████████████████▌                                               16304/40000 [00:00<00:00, 31881.02it/s][A
2025-02-25T14:23:43.1069870Z 
2025-02-25T14:23:43.1070080Z Packets:   █████████████████████████████████████████                                       20556/40000 [00:00<00:00, 35071.73it/s][A
2025-02-25T14:23:43.1070090Z 
2025-02-25T14:23:43.1070310Z Packets:   ████████████████████████████████████████████████▉                               24449/40000 [00:00<00:00, 36229.21it/s][A
2025-02-25T14:23:43.1070320Z 
2025-02-25T14:23:43.1070540Z Packets:   ████████████████████████████████████████████████████████▎                       28170/40000 [00:00<00:00, 35710.62it/s][A
2025-02-25T14:23:43.1070720Z 
2025-02-25T14:23:43.1070960Z Packets:   ████████████████████████████████████████████████████████████████▉               32485/40000 [00:00<00:00, 37905.41it/s][A
2025-02-25T14:23:43.1070970Z 
2025-02-25T14:23:43.1071200Z Packets:   █████████████████████████████████████████████████████████████████████████▏      36607/40000 [00:01<00:00, 38888.22it/s][A
2025-02-25T14:23:43.1071330Z Iterations:                                                                                6/? [05:28<00:00, 76.51s/it] 
2025-02-25T14:23:43.1071330Z 
2025-02-25T14:23:43.1071640Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 38888.22it/s][A
2025-02-25T14:23:43.1071780Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1072180Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:43.1072330Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-25T14:23:43.1072330Z 
2025-02-25T14:23:43.1072500Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1072560Z attr = 'iterations_t_rad'
2025-02-25T14:23:43.1072780Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b9fec0>
2025-02-25T14:23:43.1072780Z 
2025-02-25T14:23:43.1072850Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1072900Z         "attr",
2025-02-25T14:23:43.1072960Z         [
2025-02-25T14:23:43.1073020Z             "iterations_w",
2025-02-25T14:23:43.1073080Z             "iterations_t_rad",
2025-02-25T14:23:43.1073160Z             "iterations_electron_densities",
2025-02-25T14:23:43.1073220Z             "iterations_t_inner",
2025-02-25T14:23:43.1073270Z         ],
2025-02-25T14:23:43.1073320Z     )
2025-02-25T14:23:43.1073480Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1073570Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:23:43.1073630Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1073700Z             actual = actual.value
2025-02-25T14:23:43.1073760Z         actual = pd.DataFrame(actual)
2025-02-25T14:23:43.1073860Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1074010Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1074010Z 
2025-02-25T14:23:43.1074100Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:23:43.1074200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1074340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1074400Z     ???
2025-02-25T14:23:43.1074490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1074560Z 
2025-02-25T14:23:43.1074620Z >   ???
2025-02-25T14:23:43.1074790Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.1074850Z E   
2025-02-25T14:23:43.1074980Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.1075030Z E   [index]: [0, 1]
2025-02-25T14:23:43.1075120Z E   [left]:  [9967.488442185557, 10091.396322818851]
2025-02-25T14:23:43.1075190Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:23:43.1075340Z E   At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-25T14:23:43.1075420Z 
2025-02-25T14:23:43.1075490Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1075650Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-25T14:23:43.1075650Z 
2025-02-25T14:23:43.1075810Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1075900Z attr = 'iterations_electron_densities'
2025-02-25T14:23:43.1076110Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b2eed0>
2025-02-25T14:23:43.1076120Z 
2025-02-25T14:23:43.1076180Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1076230Z         "attr",
2025-02-25T14:23:43.1076280Z         [
2025-02-25T14:23:43.1076340Z             "iterations_w",
2025-02-25T14:23:43.1076400Z             "iterations_t_rad",
2025-02-25T14:23:43.1076480Z             "iterations_electron_densities",
2025-02-25T14:23:43.1076540Z             "iterations_t_inner",
2025-02-25T14:23:43.1076590Z         ],
2025-02-25T14:23:43.1076640Z     )
2025-02-25T14:23:43.1076800Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1076890Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:23:43.1076960Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1077020Z             actual = actual.value
2025-02-25T14:23:43.1077090Z         actual = pd.DataFrame(actual)
2025-02-25T14:23:43.1077190Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1077330Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1077340Z 
2025-02-25T14:23:43.1077430Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:23:43.1077520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1077640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1077680Z     ???
2025-02-25T14:23:43.1077780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1077780Z 
2025-02-25T14:23:43.1077830Z >   ???
2025-02-25T14:23:43.1077980Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.1078030Z E   
2025-02-25T14:23:43.1078160Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.1078210Z E   [index]: [0, 1]
2025-02-25T14:23:43.1078290Z E   [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-25T14:23:43.1078380Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:23:43.1078520Z E   At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-25T14:23:43.1078520Z 
2025-02-25T14:23:43.1078590Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1078720Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-25T14:23:43.1078730Z 
2025-02-25T14:23:43.1078890Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1078950Z attr = 'nu_bar_estimator'
2025-02-25T14:23:43.1079160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b68b60>
2025-02-25T14:23:43.1079160Z 
2025-02-25T14:23:43.1079240Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1079290Z         "attr",
2025-02-25T14:23:43.1079340Z         [
2025-02-25T14:23:43.1079560Z             "nu_bar_estimator",
2025-02-25T14:23:43.1079630Z             "j_estimator",
2025-02-25T14:23:43.1079690Z             "t_radiative",
2025-02-25T14:23:43.1079750Z             "dilution_factor",
2025-02-25T14:23:43.1079810Z             "output_nus",
2025-02-25T14:23:43.1079870Z             "output_energies",
2025-02-25T14:23:43.1079920Z         ],
2025-02-25T14:23:43.1079990Z     )
2025-02-25T14:23:43.1080170Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1080270Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1080340Z             actual = getattr(
2025-02-25T14:23:43.1080500Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1080710Z                 attr,
2025-02-25T14:23:43.1080760Z             )
2025-02-25T14:23:43.1080860Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1080980Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1081070Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1081160Z             actual = getattr(
2025-02-25T14:23:43.1081310Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1081360Z                 attr,
2025-02-25T14:23:43.1081410Z             )
2025-02-25T14:23:43.1081460Z         else:
2025-02-25T14:23:43.1081570Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1081620Z     
2025-02-25T14:23:43.1081680Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1081750Z             actual = actual.value
2025-02-25T14:23:43.1081820Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1081920Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1082070Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1082070Z 
2025-02-25T14:23:43.1082170Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1082270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1082380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1082440Z     ???
2025-02-25T14:23:43.1082530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1082530Z 
2025-02-25T14:23:43.1082580Z >   ???
2025-02-25T14:23:43.1082660Z E   AssertionError: Series are different
2025-02-25T14:23:43.1082700Z E   
2025-02-25T14:23:43.1082780Z E   Series values are different (100.0 %)
2025-02-25T14:23:43.1082880Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.1083860Z E   [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-25T14:23:43.1084830Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:23:43.1085030Z E   At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-25T14:23:43.1085040Z 
2025-02-25T14:23:43.1085110Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1085250Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-25T14:23:43.1085340Z 
2025-02-25T14:23:43.1085520Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1085580Z attr = 'j_estimator'
2025-02-25T14:23:43.1085790Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b69700>
2025-02-25T14:23:43.1085800Z 
2025-02-25T14:23:43.1085870Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1085910Z         "attr",
2025-02-25T14:23:43.1085960Z         [
2025-02-25T14:23:43.1086020Z             "nu_bar_estimator",
2025-02-25T14:23:43.1086090Z             "j_estimator",
2025-02-25T14:23:43.1086150Z             "t_radiative",
2025-02-25T14:23:43.1086210Z             "dilution_factor",
2025-02-25T14:23:43.1086340Z             "output_nus",
2025-02-25T14:23:43.1086400Z             "output_energies",
2025-02-25T14:23:43.1086450Z         ],
2025-02-25T14:23:43.1086500Z     )
2025-02-25T14:23:43.1086670Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1086790Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1086880Z             actual = getattr(
2025-02-25T14:23:43.1087160Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1087230Z                 attr,
2025-02-25T14:23:43.1087270Z             )
2025-02-25T14:23:43.1087370Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1087500Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1087590Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1087650Z             actual = getattr(
2025-02-25T14:23:43.1087820Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1087890Z                 attr,
2025-02-25T14:23:43.1087970Z             )
2025-02-25T14:23:43.1088030Z         else:
2025-02-25T14:23:43.1088170Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1088240Z     
2025-02-25T14:23:43.1088320Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1088400Z             actual = actual.value
2025-02-25T14:23:43.1088480Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1088600Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1088760Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1088760Z 
2025-02-25T14:23:43.1088880Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1089000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1089140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1089190Z     ???
2025-02-25T14:23:43.1089300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1089310Z 
2025-02-25T14:23:43.1089360Z >   ???
2025-02-25T14:23:43.1089440Z E   AssertionError: Series are different
2025-02-25T14:23:43.1089490Z E   
2025-02-25T14:23:43.1089580Z E   Series values are different (100.0 %)
2025-02-25T14:23:43.1089690Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.1090510Z E   [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-25T14:23:43.1091320Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:23:43.1091670Z E   At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-25T14:23:43.1091670Z 
2025-02-25T14:23:43.1091760Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1091920Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-25T14:23:43.1091930Z 
2025-02-25T14:23:43.1092090Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1092150Z attr = 't_radiative'
2025-02-25T14:23:43.1092370Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b7b350>
2025-02-25T14:23:43.1092380Z 
2025-02-25T14:23:43.1092460Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1092600Z         "attr",
2025-02-25T14:23:43.1092650Z         [
2025-02-25T14:23:43.1092720Z             "nu_bar_estimator",
2025-02-25T14:23:43.1092790Z             "j_estimator",
2025-02-25T14:23:43.1092840Z             "t_radiative",
2025-02-25T14:23:43.1092900Z             "dilution_factor",
2025-02-25T14:23:43.1092960Z             "output_nus",
2025-02-25T14:23:43.1093020Z             "output_energies",
2025-02-25T14:23:43.1093070Z         ],
2025-02-25T14:23:43.1093110Z     )
2025-02-25T14:23:43.1093260Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1093350Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1093410Z             actual = getattr(
2025-02-25T14:23:43.1093570Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1093620Z                 attr,
2025-02-25T14:23:43.1093670Z             )
2025-02-25T14:23:43.1093760Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1093890Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1094000Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1094080Z             actual = getattr(
2025-02-25T14:23:43.1094240Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1094300Z                 attr,
2025-02-25T14:23:43.1094350Z             )
2025-02-25T14:23:43.1094400Z         else:
2025-02-25T14:23:43.1094510Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1094560Z     
2025-02-25T14:23:43.1094620Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1094690Z             actual = actual.value
2025-02-25T14:23:43.1094750Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1094870Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1095020Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1095030Z 
2025-02-25T14:23:43.1095120Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1095220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1095340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1095400Z     ???
2025-02-25T14:23:43.1095490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1095490Z 
2025-02-25T14:23:43.1095540Z >   ???
2025-02-25T14:23:43.1095620Z E   AssertionError: Series are different
2025-02-25T14:23:43.1095670Z E   
2025-02-25T14:23:43.1095760Z E   Series values are different (90.0 %)
2025-02-25T14:23:43.1095890Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.1096720Z E   [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-25T14:23:43.1097560Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:23:43.1097820Z E   At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-25T14:23:43.1097820Z 
2025-02-25T14:23:43.1097900Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1098050Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-25T14:23:43.1098130Z 
2025-02-25T14:23:43.1098330Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1098400Z attr = 'dilution_factor'
2025-02-25T14:23:43.1098620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b78ec0>
2025-02-25T14:23:43.1098630Z 
2025-02-25T14:23:43.1098700Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1098750Z         "attr",
2025-02-25T14:23:43.1098800Z         [
2025-02-25T14:23:43.1098880Z             "nu_bar_estimator",
2025-02-25T14:23:43.1098940Z             "j_estimator",
2025-02-25T14:23:43.1099000Z             "t_radiative",
2025-02-25T14:23:43.1099070Z             "dilution_factor",
2025-02-25T14:23:43.1099130Z             "output_nus",
2025-02-25T14:23:43.1099190Z             "output_energies",
2025-02-25T14:23:43.1099230Z         ],
2025-02-25T14:23:43.1099280Z     )
2025-02-25T14:23:43.1099440Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1099560Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1099630Z             actual = getattr(
2025-02-25T14:23:43.1099790Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1099860Z                 attr,
2025-02-25T14:23:43.1099930Z             )
2025-02-25T14:23:43.1100040Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1100160Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1100260Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1100340Z             actual = getattr(
2025-02-25T14:23:43.1100510Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1100570Z                 attr,
2025-02-25T14:23:43.1100620Z             )
2025-02-25T14:23:43.1100670Z         else:
2025-02-25T14:23:43.1100800Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1100840Z     
2025-02-25T14:23:43.1100920Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1100980Z             actual = actual.value
2025-02-25T14:23:43.1101060Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1101170Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1101320Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1101320Z 
2025-02-25T14:23:43.1101430Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1101550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1101680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1101730Z     ???
2025-02-25T14:23:43.1101840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1101840Z 
2025-02-25T14:23:43.1101900Z >   ???
2025-02-25T14:23:43.1101980Z E   AssertionError: Series are different
2025-02-25T14:23:43.1102040Z E   
2025-02-25T14:23:43.1102120Z E   Series values are different (95.0 %)
2025-02-25T14:23:43.1102260Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.1103130Z E   [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-25T14:23:43.1104210Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:23:43.1104480Z E   At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-25T14:23:43.1104490Z 
2025-02-25T14:23:43.1104570Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1104710Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-25T14:23:43.1104710Z 
2025-02-25T14:23:43.1104880Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1104940Z attr = 'output_nus'
2025-02-25T14:23:43.1105150Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b3a420>
2025-02-25T14:23:43.1105160Z 
2025-02-25T14:23:43.1105220Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1105280Z         "attr",
2025-02-25T14:23:43.1105320Z         [
2025-02-25T14:23:43.1105380Z             "nu_bar_estimator",
2025-02-25T14:23:43.1105440Z             "j_estimator",
2025-02-25T14:23:43.1105490Z             "t_radiative",
2025-02-25T14:23:43.1105550Z             "dilution_factor",
2025-02-25T14:23:43.1105620Z             "output_nus",
2025-02-25T14:23:43.1105700Z             "output_energies",
2025-02-25T14:23:43.1105750Z         ],
2025-02-25T14:23:43.1105790Z     )
2025-02-25T14:23:43.1105940Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1106050Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1106130Z             actual = getattr(
2025-02-25T14:23:43.1106290Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1106340Z                 attr,
2025-02-25T14:23:43.1106400Z             )
2025-02-25T14:23:43.1106490Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1106630Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1106730Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1106800Z             actual = getattr(
2025-02-25T14:23:43.1106960Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1107030Z                 attr,
2025-02-25T14:23:43.1107090Z             )
2025-02-25T14:23:43.1107140Z         else:
2025-02-25T14:23:43.1107260Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1113200Z     
2025-02-25T14:23:43.1113340Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1113420Z             actual = actual.value
2025-02-25T14:23:43.1113500Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1113600Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1113750Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1113750Z 
2025-02-25T14:23:43.1113860Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1113950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1114080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1114140Z     ???
2025-02-25T14:23:43.1114250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1114260Z 
2025-02-25T14:23:43.1114310Z >   ???
2025-02-25T14:23:43.1114390Z E   AssertionError: Series are different
2025-02-25T14:23:43.1114710Z E   
2025-02-25T14:23:43.1114790Z E   Series values are different (5.1125 %)
2025-02-25T14:23:43.1115120Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.1119340Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:23:43.1123750Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:23:43.1124040Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:23:43.1124050Z 
2025-02-25T14:23:43.1124120Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1124260Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-25T14:23:43.1124360Z 
2025-02-25T14:23:43.1124540Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x164527d40>
2025-02-25T14:23:43.1124610Z attr = 'output_energies'
2025-02-25T14:23:43.1124840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b3b350>
2025-02-25T14:23:43.1124850Z 
2025-02-25T14:23:43.1124930Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1124970Z         "attr",
2025-02-25T14:23:43.1125020Z         [
2025-02-25T14:23:43.1125090Z             "nu_bar_estimator",
2025-02-25T14:23:43.1125150Z             "j_estimator",
2025-02-25T14:23:43.1125220Z             "t_radiative",
2025-02-25T14:23:43.1125290Z             "dilution_factor",
2025-02-25T14:23:43.1125340Z             "output_nus",
2025-02-25T14:23:43.1125400Z             "output_energies",
2025-02-25T14:23:43.1125450Z         ],
2025-02-25T14:23:43.1125500Z     )
2025-02-25T14:23:43.1125660Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:23:43.1125780Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:23:43.1125860Z             actual = getattr(
2025-02-25T14:23:43.1126020Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:23:43.1126090Z                 attr,
2025-02-25T14:23:43.1126150Z             )
2025-02-25T14:23:43.1126250Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:23:43.1126380Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:23:43.1126470Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:23:43.1126540Z             actual = getattr(
2025-02-25T14:23:43.1126680Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:23:43.1126740Z                 attr,
2025-02-25T14:23:43.1126790Z             )
2025-02-25T14:23:43.1126840Z         else:
2025-02-25T14:23:43.1126950Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:23:43.1127010Z     
2025-02-25T14:23:43.1127080Z         if hasattr(actual, "value"):
2025-02-25T14:23:43.1127160Z             actual = actual.value
2025-02-25T14:23:43.1127230Z         actual = pd.Series(actual)
2025-02-25T14:23:43.1127340Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:23:43.1127520Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:23:43.1127530Z 
2025-02-25T14:23:43.1127630Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:23:43.1127740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1127860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:23:43.1127920Z     ???
2025-02-25T14:23:43.1128010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1128020Z 
2025-02-25T14:23:43.1128070Z >   ???
2025-02-25T14:23:43.1128160Z E   AssertionError: Series are different
2025-02-25T14:23:43.1128210Z E   
2025-02-25T14:23:43.1128290Z E   Series values are different (1.3025 %)
2025-02-25T14:23:43.1128610Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.1249520Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:23:43.1297370Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:23:43.1305860Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:23:43.1305870Z 
2025-02-25T14:23:43.1305950Z testing.pyx:173: AssertionError
2025-02-25T14:23:43.1306110Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-25T14:23:43.1306120Z 
2025-02-25T14:23:43.1306350Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bcecd10>
2025-02-25T14:23:43.1306520Z simulation = <tardis.simulation.base.Simulation object at 0x11df6a5a0>
2025-02-25T14:23:43.1306520Z 
2025-02-25T14:23:43.1306620Z     def test_spectrum_real_packets(self, simulation):
2025-02-25T14:23:43.1306770Z         transport_state = simulation.transport.transport_state
2025-02-25T14:23:43.1306930Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:23:43.1307010Z     
2025-02-25T14:23:43.1307180Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:23:43.1307320Z         result = solver.spectrum_real_packets.luminosity
2025-02-25T14:23:43.1307490Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:23:43.1307590Z         expected = self.get_expected_data(key)
2025-02-25T14:23:43.1307650Z     
2025-02-25T14:23:43.1307760Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1307810Z     
2025-02-25T14:23:43.1307890Z >       assert_quantity_allclose(
2025-02-25T14:23:43.1307950Z             result,
2025-02-25T14:23:43.1308020Z             luminosity,
2025-02-25T14:23:43.1308080Z         )
2025-02-25T14:23:43.1308090Z 
2025-02-25T14:23:43.1308190Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-25T14:23:43.1308320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1308620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1308710Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1308830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1308840Z 
2025-02-25T14:23:43.1309220Z args = (<function assert_allclose.<locals>.compare at 0x161a2aca0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:23:43.1309320Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1309520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1309530Z 
2025-02-25T14:23:43.1309590Z     @wraps(func)
2025-02-25T14:23:43.1309650Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1309720Z         with self._recreate_cm():
2025-02-25T14:23:43.1309790Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1309860Z E           AssertionError: 
2025-02-25T14:23:43.1309970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1310140Z E           
2025-02-25T14:23:43.1310230Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:23:43.1310330Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:23:43.1310410Z E           Max relative difference: 1.
2025-02-25T14:23:43.1310550Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1310640Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1310780Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1310860Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1310950Z 
2025-02-25T14:23:43.1311140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1311320Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-25T14:23:43.1311330Z 
2025-02-25T14:23:43.1311560Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bcecce0>
2025-02-25T14:23:43.1311750Z simulation = <tardis.simulation.base.Simulation object at 0x11df6a5a0>
2025-02-25T14:23:43.1311750Z 
2025-02-25T14:23:43.1311890Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-25T14:23:43.1312010Z         transport_state = simulation.transport.transport_state
2025-02-25T14:23:43.1312190Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:23:43.1312240Z     
2025-02-25T14:23:43.1312400Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:23:43.1312540Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-25T14:23:43.1312730Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-25T14:23:43.1312830Z         expected = self.get_expected_data(key)
2025-02-25T14:23:43.1312890Z     
2025-02-25T14:23:43.1312980Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1313030Z     
2025-02-25T14:23:43.1313100Z >       assert_quantity_allclose(
2025-02-25T14:23:43.1313160Z             result,
2025-02-25T14:23:43.1313230Z             luminosity,
2025-02-25T14:23:43.1313280Z         )
2025-02-25T14:23:43.1313280Z 
2025-02-25T14:23:43.1313380Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-25T14:23:43.1313480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1313770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1313850Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1313970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1313980Z 
2025-02-25T14:23:43.1314370Z args = (<function assert_allclose.<locals>.compare at 0x129df9d00>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-25T14:23:43.1314500Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1314730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1314740Z 
2025-02-25T14:23:43.1314790Z     @wraps(func)
2025-02-25T14:23:43.1314860Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1314920Z         with self._recreate_cm():
2025-02-25T14:23:43.1314990Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1315060Z E           AssertionError: 
2025-02-25T14:23:43.1315160Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1315210Z E           
2025-02-25T14:23:43.1315290Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:23:43.1315370Z E           Max absolute difference: 4.15247374e+37
2025-02-25T14:23:43.1315440Z E           Max relative difference: 1.
2025-02-25T14:23:43.1315590Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1315760Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1315880Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1315950Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1315960Z 
2025-02-25T14:23:43.1316120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1316280Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-25T14:23:43.1316280Z 
2025-02-25T14:23:43.1316510Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bced1c0>
2025-02-25T14:23:43.1316780Z simulation = <tardis.simulation.base.Simulation object at 0x11df6a5a0>
2025-02-25T14:23:43.1316800Z 
2025-02-25T14:23:43.1316870Z     def test_solve(self, simulation):
2025-02-25T14:23:43.1316980Z         transport_state = simulation.transport.transport_state
2025-02-25T14:23:43.1317130Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:23:43.1317200Z     
2025-02-25T14:23:43.1317360Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:23:43.1317500Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-25T14:23:43.1317570Z             transport_state
2025-02-25T14:23:43.1317630Z         )
2025-02-25T14:23:43.1317790Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:23:43.1317900Z         expected_real = self.get_expected_data(key_real)
2025-02-25T14:23:43.1317950Z     
2025-02-25T14:23:43.1318070Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-25T14:23:43.1318160Z     
2025-02-25T14:23:43.1318230Z >       assert_quantity_allclose(
2025-02-25T14:23:43.1318300Z             result_real.luminosity,
2025-02-25T14:23:43.1318370Z             luminosity_real,
2025-02-25T14:23:43.1318430Z         )
2025-02-25T14:23:43.1318430Z 
2025-02-25T14:23:43.1318540Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-25T14:23:43.1318640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1318940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1319020Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1319110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1319120Z 
2025-02-25T14:23:43.1319520Z args = (<function assert_allclose.<locals>.compare at 0x129df8540>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:23:43.1319620Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1319830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1319840Z 
2025-02-25T14:23:43.1319900Z     @wraps(func)
2025-02-25T14:23:43.1319960Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1320030Z         with self._recreate_cm():
2025-02-25T14:23:43.1320120Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1320180Z E           AssertionError: 
2025-02-25T14:23:43.1320270Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1320320Z E           
2025-02-25T14:23:43.1320400Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:23:43.1320480Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:23:43.1320560Z E           Max relative difference: 1.
2025-02-25T14:23:43.1320690Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1320790Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1320930Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1321020Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1321140Z 
2025-02-25T14:23:43.1321340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1321520Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-25T14:23:43.1321530Z 
2025-02-25T14:23:43.1321740Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bcedeb0>
2025-02-25T14:23:43.1321910Z simulation = <tardis.simulation.base.Simulation object at 0x1614ce600>
2025-02-25T14:23:43.1321930Z 
2025-02-25T14:23:43.1322030Z     def test_j_blue_estimators(self, simulation):
2025-02-25T14:23:43.1322160Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-25T14:23:43.1322330Z         expected = self.get_expected_data(key)
2025-02-25T14:23:43.1322390Z     
2025-02-25T14:23:43.1322450Z >       npt.assert_allclose(
2025-02-25T14:23:43.1322640Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-25T14:23:43.1322700Z             expected.values,
2025-02-25T14:23:43.1322760Z         )
2025-02-25T14:23:43.1322760Z 
2025-02-25T14:23:43.1322830Z tardis/tests/test_tardis_full.py:70: 
2025-02-25T14:23:43.1322920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1322930Z 
2025-02-25T14:23:43.1323160Z args = (<function assert_allclose.<locals>.compare at 0x310925ee0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1323230Z        [0., 0., 0.,.....,
2025-02-25T14:23:43.1323290Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1323350Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1323410Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:23:43.1323630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1323640Z 
2025-02-25T14:23:43.1323690Z     @wraps(func)
2025-02-25T14:23:43.1323760Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1323830Z         with self._recreate_cm():
2025-02-25T14:23:43.1323900Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1323970Z E           AssertionError: 
2025-02-25T14:23:43.1324050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1324100Z E           
2025-02-25T14:23:43.1324190Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:23:43.1324270Z E           Max absolute difference: 5.32418652e-19
2025-02-25T14:23:43.1324350Z E           Max relative difference: 12.23359055
2025-02-25T14:23:43.1324430Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1324500Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1324580Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1324680Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1324760Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1324840Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1324850Z 
2025-02-25T14:23:43.1325030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1325180Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1325580Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1325750Z 	
2025-02-25T14:23:43.1326240Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-25T14:23:43.1326410Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1326800Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-25T14:23:43.1326950Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1327370Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-25T14:23:43.1327790Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:43.1328150Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:43.1328360Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1328570Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:23:43.1328750Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1328810Z 	
2025-02-25T14:23:43.1328950Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1329090Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1329270Z 	
2025-02-25T14:23:43.1329340Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:23:43.1329420Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:23:43.1329500Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1329580Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1329720Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1329770Z 	
2025-02-25T14:23:43.1329890Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:23:43.1330040Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1330110Z 	
2025-02-25T14:23:43.1330210Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:23:43.1330310Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:23:43.1330380Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:23:43.1330450Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:23:43.1330530Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:23:43.1330640Z  ([1mbase.py[0m:654)
2025-02-25T14:23:43.1330790Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1330840Z 	
2025-02-25T14:23:43.1330910Z 	Current t_inner = 9974.969 K
2025-02-25T14:23:43.1331010Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:23:43.1331130Z  ([1mbase.py[0m:656)
2025-02-25T14:23:43.1331290Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1331340Z 	
2025-02-25T14:23:43.1331480Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1331630Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1331680Z 	
2025-02-25T14:23:43.1331760Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:23:43.1331830Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:23:43.1331900Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1332010Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1332150Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1332210Z 	
2025-02-25T14:23:43.1332360Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:23:43.1332530Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1332610Z 	
2025-02-25T14:23:43.1332720Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1332790Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:23:43.1332870Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:23:43.1332940Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:23:43.1333020Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:23:43.1333130Z  ([1mbase.py[0m:654)
2025-02-25T14:23:43.1333270Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1333320Z 	
2025-02-25T14:23:43.1333400Z 	Current t_inner = 10736.790 K
2025-02-25T14:23:43.1333520Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:23:43.1333640Z  ([1mbase.py[0m:656)
2025-02-25T14:23:43.1333780Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1333860Z 	
2025-02-25T14:23:43.1334020Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1334180Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1334230Z 	
2025-02-25T14:23:43.1334320Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:23:43.1334510Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:23:43.1334590Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1334670Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1334820Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1335000Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:23:43.1335150Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1335200Z 	
2025-02-25T14:23:43.1335330Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:23:43.1335450Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1335510Z 	
2025-02-25T14:23:43.1335580Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1335780Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:23:43.1335850Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:23:43.1335910Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:23:43.1335980Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:23:43.1336070Z  ([1mbase.py[0m:654)
2025-02-25T14:23:43.1336210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1336270Z 	
2025-02-25T14:23:43.1336350Z 	Current t_inner = 10718.574 K
2025-02-25T14:23:43.1336440Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:23:43.1336530Z  ([1mbase.py[0m:656)
2025-02-25T14:23:43.1336660Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1336740Z 	
2025-02-25T14:23:43.1336870Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1337000Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1337050Z 	
2025-02-25T14:23:43.1337130Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:23:43.1337210Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:23:43.1337270Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1337350Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1337500Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1337690Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:23:43.1337820Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1337890Z 	
2025-02-25T14:23:43.1338010Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:23:43.1338170Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1338210Z 	
2025-02-25T14:23:43.1338300Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1338370Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:23:43.1338430Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:23:43.1338510Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:23:43.1338600Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:23:43.1338690Z  ([1mbase.py[0m:654)
2025-02-25T14:23:43.1338860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1338940Z 	
2025-02-25T14:23:43.1339010Z 	Current t_inner = 10696.150 K
2025-02-25T14:23:43.1339120Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:23:43.1339230Z  ([1mbase.py[0m:656)
2025-02-25T14:23:43.1339410Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1339470Z 	
2025-02-25T14:23:43.1339540Z 	Simulation finished in 4 iterations 
2025-02-25T14:23:43.1339610Z 	Simulation took 11.76 s
2025-02-25T14:23:43.1339700Z  ([1mbase.py[0m:546)
2025-02-25T14:23:43.1339850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1339900Z 	
2025-02-25T14:23:43.1340030Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1340150Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1340210Z 	
2025-02-25T14:23:43.1340270Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:23:43.1340360Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:23:43.1340450Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1340570Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1340820Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:23:43.1340830Z 
2025-02-25T14:23:43.1340830Z 
2025-02-25T14:23:43.1341070Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-25T14:23:43.1341080Z 
2025-02-25T14:23:43.1341310Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-25T14:23:43.1341320Z 
2025-02-25T14:23:43.1341540Z Packets:   ███▌                                                                            9060/200000 [00:00<00:02, 90595.55it/s][A
2025-02-25T14:23:43.1341650Z 
2025-02-25T14:23:43.1341910Z Packets:   ███████▎                                                                        18187/200000 [00:00<00:01, 90990.67it/s][A
2025-02-25T14:23:43.1341920Z 
2025-02-25T14:23:43.1342140Z Packets:   ███████████▊                                                                    29617/200000 [00:00<00:01, 101631.81it/s][A
2025-02-25T14:23:43.1342150Z 
2025-02-25T14:23:43.1342380Z Packets:   ████████████████▊                                                               42077/200000 [00:00<00:01, 110695.77it/s][A
2025-02-25T14:23:43.1342390Z 
2025-02-25T14:23:43.1342610Z Packets:   █████████████████████▎                                                          53147/200000 [00:00<00:01, 104974.63it/s][A
2025-02-25T14:23:43.1342620Z 
2025-02-25T14:23:43.1342850Z Packets:   █████████████████████████▋                                                      64219/200000 [00:00<00:01, 106858.87it/s][A
2025-02-25T14:23:43.1342870Z 
2025-02-25T14:23:43.1343100Z Packets:   ██████████████████████████████▍                                                 75946/200000 [00:00<00:01, 110179.05it/s][A
2025-02-25T14:23:43.1343110Z 
2025-02-25T14:23:43.1343360Z Packets:   ███████████████████████████████████▏                                            87970/200000 [00:00<00:00, 113329.55it/s][A
2025-02-25T14:23:43.1343380Z 
2025-02-25T14:23:43.1343620Z Packets:   ████████████████████████████████████████                                        100017/200000 [00:00<00:00, 115535.67it/s][A
2025-02-25T14:23:43.1343630Z 
2025-02-25T14:23:43.1343880Z Packets:   ████████████████████████████████████████████▋                                   111593/200000 [00:01<00:00, 96842.08it/s] [A
2025-02-25T14:23:43.1343890Z 
2025-02-25T14:23:43.1344160Z Packets:   ████████████████████████████████████████████████▊                               121916/200000 [00:01<00:00, 98554.21it/s][A
2025-02-25T14:23:43.1344170Z 
2025-02-25T14:23:43.1344420Z Packets:   ██████████████████████████████████████████████████████▎                         135767/200000 [00:01<00:00, 109623.05it/s][A
2025-02-25T14:23:43.1344440Z 
2025-02-25T14:23:43.1344690Z Packets:   ██████████████████████████████████████████████████████████▊                     147100/200000 [00:01<00:00, 110126.16it/s][A
2025-02-25T14:23:43.1344690Z 
2025-02-25T14:23:43.1345250Z Packets:   ████████████████████████████████████████████████████████████████▉               162194/200000 [00:01<00:00, 121850.80it/s][A
2025-02-25T14:23:43.1345280Z 
2025-02-25T14:23:43.1345590Z Packets:   ██████████████████████████████████████████████████████████████████████▊         177186/200000 [00:01<00:00, 130017.48it/s][A
2025-02-25T14:23:43.1345600Z 
2025-02-25T14:23:43.1345880Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   191548/200000 [00:01<00:00, 134010.33it/s][A
2025-02-25T14:23:43.1346010Z Iterations:                                                                                13/? [06:40<00:00, 14.09s/it]
2025-02-25T14:23:43.1346180Z 
2025-02-25T14:23:43.1346470Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 134010.33it/s][A
2025-02-25T14:23:43.1346480Z 
2025-02-25T14:23:43.1346720Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:23:43.1346840Z 
2025-02-25T14:23:43.1347090Z Packets:   █████▊                                                                          14407/200000 [00:00<00:01, 144058.80it/s][A
2025-02-25T14:23:43.1347100Z 
2025-02-25T14:23:43.1347340Z Packets:   ███████████▌                                                                    28813/200000 [00:00<00:01, 139501.77it/s][A
2025-02-25T14:23:43.1347350Z 
2025-02-25T14:23:43.1347600Z Packets:   █████████████████▌                                                              43834/200000 [00:00<00:01, 144304.82it/s][A
2025-02-25T14:23:43.1347610Z 
2025-02-25T14:23:43.1347860Z Packets:   ███████████████████████▎                                                        58279/200000 [00:00<00:01, 140543.60it/s][A
2025-02-25T14:23:43.1347890Z 
2025-02-25T14:23:43.1348180Z Packets:   ████████████████████████████▉                                                   72353/200000 [00:00<00:01, 101603.45it/s][A
2025-02-25T14:23:43.1348190Z 
2025-02-25T14:23:43.1348480Z Packets:   █████████████████████████████████▌                                              83828/200000 [00:00<00:01, 105105.52it/s][A
2025-02-25T14:23:43.1348490Z 
2025-02-25T14:23:43.1348770Z Packets:   ███████████████████████████████████████                                         97708/200000 [00:00<00:00, 114396.02it/s][A
2025-02-25T14:23:43.1348780Z 
2025-02-25T14:23:43.1349060Z Packets:   ████████████████████████████████████████████▍                                   111132/200000 [00:00<00:00, 120003.63it/s][A
2025-02-25T14:23:43.1349070Z 
2025-02-25T14:23:43.1349380Z Packets:   ██████████████████████████████████████████████████▍                             126101/200000 [00:01<00:00, 128540.78it/s][A
2025-02-25T14:23:43.1349400Z 
2025-02-25T14:23:43.1349710Z Packets:   ███████████████████████████████████████████████████████▊                        139453/200000 [00:01<00:00, 123277.09it/s][A
2025-02-25T14:23:43.1349720Z 
2025-02-25T14:23:43.1350180Z Packets:   ████████████████████████████████████████████████████████████▉                   152468/200000 [00:01<00:00, 125219.45it/s][A
2025-02-25T14:23:43.1350190Z 
2025-02-25T14:23:43.1350490Z Packets:   ██████████████████████████████████████████████████████████████████              165266/200000 [00:01<00:00, 106403.62it/s][A
2025-02-25T14:23:43.1350510Z 
2025-02-25T14:23:43.1350790Z Packets:   ██████████████████████████████████████████████████████████████████████▉         177226/200000 [00:01<00:00, 109804.50it/s][A
2025-02-25T14:23:43.1350800Z 
2025-02-25T14:23:43.1351030Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    188711/200000 [00:01<00:00, 110141.51it/s][A
2025-02-25T14:23:43.1351300Z Iterations:                                                                                14/? [06:43<00:00, 10.68s/it]
2025-02-25T14:23:43.1351300Z 
2025-02-25T14:23:43.1351570Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 110141.51it/s][A
2025-02-25T14:23:43.1351580Z 
2025-02-25T14:23:43.1351800Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:23:43.1351820Z 
2025-02-25T14:23:43.1352050Z Packets:   ████▌                                                                           11370/200000 [00:00<00:02, 78132.96it/s][A
2025-02-25T14:23:43.1352060Z 
2025-02-25T14:23:43.1352290Z Packets:   █████████▎                                                                      23141/200000 [00:00<00:01, 97737.11it/s][A
2025-02-25T14:23:43.1352300Z 
2025-02-25T14:23:43.1352520Z Packets:   ██████████████▋                                                                 36855/200000 [00:00<00:01, 114064.59it/s][A
2025-02-25T14:23:43.1352530Z 
2025-02-25T14:23:43.1352730Z Packets:   ████████████████████▉                                                           52249/200000 [00:00<00:01, 128891.73it/s][A
2025-02-25T14:23:43.1352740Z 
2025-02-25T14:23:43.1352950Z Packets:   ███████████████████████████                                                     67525/200000 [00:00<00:00, 137171.34it/s][A
2025-02-25T14:23:43.1352960Z 
2025-02-25T14:23:43.1353190Z Packets:   ████████████████████████████████▌                                               81475/200000 [00:00<00:00, 134548.10it/s][A
2025-02-25T14:23:43.1353190Z 
2025-02-25T14:23:43.1353410Z Packets:   ██████████████████████████████████████▎                                         95899/200000 [00:00<00:00, 137608.74it/s][A
2025-02-25T14:23:43.1353420Z 
2025-02-25T14:23:43.1353630Z Packets:   ███████████████████████████████████████████▉                                    109778/200000 [00:00<00:00, 125605.00it/s][A
2025-02-25T14:23:43.1353650Z 
2025-02-25T14:23:43.1353920Z Packets:   █████████████████████████████████████████████████                               122595/200000 [00:00<00:00, 123791.71it/s][A
2025-02-25T14:23:43.1353930Z 
2025-02-25T14:23:43.1354310Z Packets:   ██████████████████████████████████████████████████████▉                         137364/200000 [00:01<00:00, 130655.61it/s][A
2025-02-25T14:23:43.1354330Z 
2025-02-25T14:23:43.1354600Z Packets:   ████████████████████████████████████████████████████████████▏                   150598/200000 [00:01<00:00, 129056.86it/s][A
2025-02-25T14:23:43.1354610Z 
2025-02-25T14:23:43.1354890Z Packets:   ██████████████████████████████████████████████████████████████████▏             165598/200000 [00:01<00:00, 135134.71it/s][A
2025-02-25T14:23:43.1354900Z 
2025-02-25T14:23:43.1355150Z Packets:   ████████████████████████████████████████████████████████████████████████▏       180597/200000 [00:01<00:00, 139489.33it/s][A
2025-02-25T14:23:43.1355240Z 
2025-02-25T14:23:43.1355530Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  194723/200000 [00:01<00:00, 140009.84it/s][A
2025-02-25T14:23:43.1355680Z Iterations:                                                                                15/? [06:46<00:00,  8.31s/it]
2025-02-25T14:23:43.1355700Z 
2025-02-25T14:23:43.1356010Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 140009.84it/s][A
2025-02-25T14:23:43.1356020Z 
2025-02-25T14:23:43.1356220Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:23:43.1356230Z 
2025-02-25T14:23:43.1356470Z Packets:   █████▋                                                                          14066/200000 [00:00<00:01, 115797.25it/s][A
2025-02-25T14:23:43.1356480Z 
2025-02-25T14:23:43.1356730Z Packets:   ███████████▍                                                                    28526/200000 [00:00<00:01, 131361.68it/s][A
2025-02-25T14:23:43.1356730Z 
2025-02-25T14:23:43.1356980Z Packets:   █████████████████▍                                                              43661/200000 [00:00<00:01, 140067.47it/s][A
2025-02-25T14:23:43.1357010Z 
2025-02-25T14:23:43.1357250Z Packets:   ███████████████████████▌                                                        58943/200000 [00:00<00:00, 144959.22it/s][A
2025-02-25T14:23:43.1357260Z 
2025-02-25T14:23:43.1357510Z Packets:   █████████████████████████████▍                                                  73524/200000 [00:00<00:00, 144051.76it/s][A
2025-02-25T14:23:43.1357520Z 
2025-02-25T14:23:43.1357800Z Packets:   ███████████████████████████████████▏                                            87984/200000 [00:00<00:00, 122557.95it/s][A
2025-02-25T14:23:43.1357820Z 
2025-02-25T14:23:43.1358110Z Packets:   ████████████████████████████████████████▎                                       100742/200000 [00:00<00:00, 102724.41it/s][A
2025-02-25T14:23:43.1358120Z 
2025-02-25T14:23:43.1358370Z Packets:   ████████████████████████████████████████████▋                                   111757/200000 [00:00<00:00, 96059.49it/s] [A
2025-02-25T14:23:43.1358470Z 
2025-02-25T14:23:43.1358710Z Packets:   █████████████████████████████████████████████████▌                              123859/200000 [00:01<00:00, 102305.10it/s][A
2025-02-25T14:23:43.1358710Z 
2025-02-25T14:23:43.1358980Z Packets:   ██████████████████████████████████████████████████████▍                         136181/200000 [00:01<00:00, 107809.62it/s][A
2025-02-25T14:23:43.1358990Z 
2025-02-25T14:23:43.1359250Z Packets:   ███████████████████████████████████████████████████████████▍                    148610/200000 [00:01<00:00, 112314.45it/s][A
2025-02-25T14:23:43.1359270Z 
2025-02-25T14:23:43.1359520Z Packets:   ████████████████████████████████████████████████████████████████                160201/200000 [00:01<00:00, 105402.82it/s][A
2025-02-25T14:23:43.1359640Z 
2025-02-25T14:23:43.1359950Z Packets:   ████████████████████████████████████████████████████████████████████▍           171048/200000 [00:01<00:00, 82944.36it/s] [A
2025-02-25T14:23:43.1359960Z 
2025-02-25T14:23:43.1360250Z Packets:   ████████████████████████████████████████████████████████████████████████        180225/200000 [00:01<00:00, 67311.53it/s][A
2025-02-25T14:23:43.1360270Z 
2025-02-25T14:23:43.1360570Z Packets:   ████████████████████████████████████████████████████████████████████████████▏   190436/200000 [00:01<00:00, 74560.37it/s][A
2025-02-25T14:23:43.1360710Z Iterations:                                                                                16/? [06:49<00:00,  6.74s/it]
2025-02-25T14:23:43.1360710Z 
2025-02-25T14:23:43.1360990Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 74560.37it/s][A
2025-02-25T14:23:43.1361020Z 
2025-02-25T14:23:43.1361240Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                [A
2025-02-25T14:23:43.1361250Z 
2025-02-25T14:23:43.1361460Z Packets:   █▎                                                                              8462/500000 [00:00<00:12, 39799.64it/s][A
2025-02-25T14:23:43.1361480Z 
2025-02-25T14:23:43.1361670Z Packets:   ██▏                                                                             13349/500000 [00:00<00:11, 43258.46it/s][A
2025-02-25T14:23:43.1361680Z 
2025-02-25T14:23:43.1361900Z Packets:   ██▊                                                                             17833/500000 [00:00<00:12, 39468.85it/s][A
2025-02-25T14:23:43.1361910Z 
2025-02-25T14:23:43.1362120Z Packets:   ███▌                                                                            22137/500000 [00:00<00:11, 40606.60it/s][A
2025-02-25T14:23:43.1362130Z 
2025-02-25T14:23:43.1362320Z Packets:   ████▏                                                                           26445/500000 [00:00<00:11, 41380.11it/s][A
2025-02-25T14:23:43.1362330Z 
2025-02-25T14:23:43.1362530Z Packets:   ████▉                                                                           30821/500000 [00:00<00:11, 40993.57it/s][A
2025-02-25T14:23:43.1362620Z 
2025-02-25T14:23:43.1362820Z Packets:   █████▋                                                                          35336/500000 [00:00<00:11, 42241.67it/s][A
2025-02-25T14:23:43.1362820Z 
2025-02-25T14:23:43.1363030Z Packets:   ██████▎                                                                         39594/500000 [00:00<00:11, 40790.30it/s][A
2025-02-25T14:23:43.1363040Z 
2025-02-25T14:23:43.1363250Z Packets:   ███████                                                                         43966/500000 [00:01<00:11, 41096.82it/s][A
2025-02-25T14:23:43.1363260Z 
2025-02-25T14:23:43.1363450Z Packets:   ███████▋                                                                        48095/500000 [00:01<00:12, 37340.01it/s][A
2025-02-25T14:23:43.1363570Z 
2025-02-25T14:23:43.1363800Z Packets:   ████████▍                                                                       52386/500000 [00:01<00:11, 38868.99it/s][A
2025-02-25T14:23:43.1363810Z 
2025-02-25T14:23:43.1364050Z Packets:   █████████                                                                       56851/500000 [00:01<00:10, 40495.26it/s][A
2025-02-25T14:23:43.1364060Z 
2025-02-25T14:23:43.1364300Z Packets:   █████████▊                                                                      61625/500000 [00:01<00:10, 42572.06it/s][A
2025-02-25T14:23:43.1364310Z 
2025-02-25T14:23:43.1364560Z Packets:   ██████████▌                                                                     65998/500000 [00:01<00:10, 42908.06it/s][A
2025-02-25T14:23:43.1364570Z 
2025-02-25T14:23:43.1364820Z Packets:   ███████████▎                                                                    70703/500000 [00:01<00:09, 44121.91it/s][A
2025-02-25T14:23:43.1364840Z 
2025-02-25T14:23:43.1365070Z Packets:   ████████████▏                                                                   75845/500000 [00:01<00:09, 46277.27it/s][A
2025-02-25T14:23:43.1365070Z 
2025-02-25T14:23:43.1365290Z Packets:   ████████████▉                                                                   80498/500000 [00:02<00:12, 34251.35it/s][A
2025-02-25T14:23:43.1365300Z 
2025-02-25T14:23:43.1365550Z Packets:   █████████████▌                                                                  84524/500000 [00:02<00:11, 35684.44it/s][A
2025-02-25T14:23:43.1365560Z 
2025-02-25T14:23:43.1365810Z Packets:   ██████████████▏                                                                 88506/500000 [00:02<00:11, 36735.31it/s][A
2025-02-25T14:23:43.1365820Z 
2025-02-25T14:23:43.1366050Z Packets:   ██████████████▊                                                                 92917/500000 [00:02<00:10, 38698.19it/s][A
2025-02-25T14:23:43.1366060Z 
2025-02-25T14:23:43.1366270Z Packets:   ███████████████▌                                                                97446/500000 [00:02<00:09, 40512.07it/s][A
2025-02-25T14:23:43.1366270Z 
2025-02-25T14:23:43.1366520Z Packets:   ████████████████▎                                                               102134/500000 [00:02<00:09, 42310.04it/s][A
2025-02-25T14:23:43.1366540Z 
2025-02-25T14:23:43.1366780Z Packets:   █████████████████                                                               106937/500000 [00:02<00:08, 43953.51it/s][A
2025-02-25T14:23:43.1366790Z 
2025-02-25T14:23:43.1367050Z Packets:   █████████████████▊                                                              111430/500000 [00:02<00:11, 32872.63it/s][A
2025-02-25T14:23:43.1367060Z 
2025-02-25T14:23:43.1367320Z Packets:   ██████████████████▍                                                             115569/500000 [00:02<00:11, 34882.78it/s][A
2025-02-25T14:23:43.1367320Z 
2025-02-25T14:23:43.1367590Z Packets:   ███████████████████▏                                                            119831/500000 [00:03<00:10, 36832.97it/s][A
2025-02-25T14:23:43.1367760Z 
2025-02-25T14:23:43.1368030Z Packets:   ███████████████████▉                                                            124788/500000 [00:03<00:09, 40206.44it/s][A
2025-02-25T14:23:43.1368040Z 
2025-02-25T14:23:43.1368450Z Packets:   ████████████████████▋                                                           129632/500000 [00:03<00:08, 42463.21it/s][A
2025-02-25T14:23:43.1368460Z 
2025-02-25T14:23:43.1368700Z Packets:   █████████████████████▌                                                          134752/500000 [00:03<00:08, 44923.75it/s][A
2025-02-25T14:23:43.1368710Z 
2025-02-25T14:23:43.1368980Z Packets:   ██████████████████████▎                                                         139403/500000 [00:03<00:08, 44503.17it/s][A
2025-02-25T14:23:43.1368990Z 
2025-02-25T14:23:43.1369240Z Packets:   ███████████████████████                                                         143964/500000 [00:03<00:10, 33093.98it/s][A
2025-02-25T14:23:43.1369260Z 
2025-02-25T14:23:43.1369480Z Packets:   ███████████████████████▋                                                        147769/500000 [00:03<00:10, 33144.37it/s][A
2025-02-25T14:23:43.1369480Z 
2025-02-25T14:23:43.1369720Z Packets:   ████████████████████████▎                                                       151840/500000 [00:03<00:09, 34981.48it/s][A
2025-02-25T14:23:43.1369740Z 
2025-02-25T14:23:43.1369970Z Packets:   █████████████████████████                                                       156364/500000 [00:03<00:09, 37624.33it/s][A
2025-02-25T14:23:43.1369980Z 
2025-02-25T14:23:43.1370210Z Packets:   █████████████████████████▊                                                      161107/500000 [00:04<00:08, 40262.88it/s][A
2025-02-25T14:23:43.1370210Z 
2025-02-25T14:23:43.1370430Z Packets:   ██████████████████████████▌                                                     165920/500000 [00:04<00:07, 42446.53it/s][A
2025-02-25T14:23:43.1370450Z 
2025-02-25T14:23:43.1370690Z Packets:   ███████████████████████████▎                                                    170323/500000 [00:04<00:08, 39322.74it/s][A
2025-02-25T14:23:43.1370700Z 
2025-02-25T14:23:43.1370960Z Packets:   ███████████████████████████▉                                                    174406/500000 [00:04<00:09, 34965.33it/s][A
2025-02-25T14:23:43.1370980Z 
2025-02-25T14:23:43.1371210Z Packets:   ████████████████████████████▍                                                   178079/500000 [00:04<00:09, 33858.21it/s][A
2025-02-25T14:23:43.1371220Z 
2025-02-25T14:23:43.1371460Z Packets:   █████████████████████████████▏                                                  182711/500000 [00:04<00:08, 37068.25it/s][A
2025-02-25T14:23:43.1371460Z 
2025-02-25T14:23:43.1371710Z Packets:   ██████████████████████████████                                                  187895/500000 [00:04<00:07, 41038.84it/s][A
2025-02-25T14:23:43.1371720Z 
2025-02-25T14:23:43.1372080Z Packets:   ██████████████████████████████▉                                                 193111/500000 [00:04<00:06, 44118.61it/s][A
2025-02-25T14:23:43.1372090Z 
2025-02-25T14:23:43.1372320Z Packets:   ███████████████████████████████▋                                                198257/500000 [00:04<00:06, 46202.70it/s][A
2025-02-25T14:23:43.1372410Z 
2025-02-25T14:23:43.1372630Z Packets:   ████████████████████████████████▌                                               203133/500000 [00:05<00:06, 46932.99it/s][A
2025-02-25T14:23:43.1372640Z 
2025-02-25T14:23:43.1372850Z Packets:   █████████████████████████████████▎                                              207898/500000 [00:05<00:08, 35634.65it/s][A
2025-02-25T14:23:43.1372850Z 
2025-02-25T14:23:43.1373070Z Packets:   ██████████████████████████████████                                              212518/500000 [00:05<00:07, 38164.68it/s][A
2025-02-25T14:23:43.1373070Z 
2025-02-25T14:23:43.1373300Z Packets:   ██████████████████████████████████▊                                             217201/500000 [00:05<00:07, 40374.25it/s][A
2025-02-25T14:23:43.1373320Z 
2025-02-25T14:23:43.1373580Z Packets:   ███████████████████████████████████▍                                            221670/500000 [00:05<00:06, 41524.95it/s][A
2025-02-25T14:23:43.1373580Z 
2025-02-25T14:23:43.1382410Z Packets:   ████████████████████████████████████▎                                           226747/500000 [00:05<00:06, 44076.61it/s][A
2025-02-25T14:23:43.1382590Z 
2025-02-25T14:23:43.1383740Z Packets:   █████████████████████████████████████                                           231799/500000 [00:05<00:05, 45898.80it/s][A
2025-02-25T14:23:43.1383770Z 
2025-02-25T14:23:43.1384440Z Packets:   █████████████████████████████████████▉                                          236902/500000 [00:05<00:05, 47374.49it/s][A
2025-02-25T14:23:43.1384470Z 
2025-02-25T14:23:43.1385150Z Packets:   ██████████████████████████████████████▋                                         241743/500000 [00:06<00:05, 47135.11it/s][A
2025-02-25T14:23:43.1385430Z 
2025-02-25T14:23:43.1386150Z Packets:   ███████████████████████████████████████▍                                        246529/500000 [00:06<00:07, 34164.90it/s][A
2025-02-25T14:23:43.1386180Z 
2025-02-25T14:23:43.1386840Z Packets:   ████████████████████████████████████████                                        250497/500000 [00:06<00:07, 34551.25it/s][A
2025-02-25T14:23:43.1386890Z 
2025-02-25T14:23:43.1387550Z Packets:   ████████████████████████████████████████▊                                       255449/500000 [00:06<00:06, 38195.46it/s][A
2025-02-25T14:23:43.1387580Z 
2025-02-25T14:23:43.1389060Z Packets:   █████████████████████████████████████████▋                                      260620/500000 [00:06<00:05, 41682.44it/s][A
2025-02-25T14:23:43.1389090Z 
2025-02-25T14:23:43.1389340Z Packets:   ██████████████████████████████████████████▌                                     265713/500000 [00:06<00:05, 44171.90it/s][A
2025-02-25T14:23:43.1389650Z 
2025-02-25T14:23:43.1389890Z Packets:   ███████████████████████████████████████████▎                                    270590/500000 [00:06<00:05, 45446.64it/s][A
2025-02-25T14:23:43.1389890Z 
2025-02-25T14:23:43.1390120Z Packets:   ████████████████████████████████████████████                                    275316/500000 [00:06<00:05, 43865.58it/s][A
2025-02-25T14:23:43.1390230Z 
2025-02-25T14:23:43.1390460Z Packets:   ████████████████████████████████████████████▊                                   279838/500000 [00:07<00:05, 37083.87it/s][A
2025-02-25T14:23:43.1390460Z 
2025-02-25T14:23:43.1390680Z Packets:   █████████████████████████████████████████████▍                                  283806/500000 [00:07<00:06, 35456.20it/s][A
2025-02-25T14:23:43.1390680Z 
2025-02-25T14:23:43.1390910Z Packets:   ██████████████████████████████████████████████▏                                 288390/500000 [00:07<00:05, 38069.20it/s][A
2025-02-25T14:23:43.1390910Z 
2025-02-25T14:23:43.1391140Z Packets:   ██████████████████████████████████████████████▉                                 293282/500000 [00:07<00:05, 40938.65it/s][A
2025-02-25T14:23:43.1391150Z 
2025-02-25T14:23:43.1391970Z Packets:   ███████████████████████████████████████████████▊                                298575/500000 [00:07<00:04, 44226.25it/s][A
2025-02-25T14:23:43.1392080Z 
2025-02-25T14:23:43.1392810Z Packets:   ████████████████████████████████████████████████▌                               303877/500000 [00:07<00:04, 46700.36it/s][A
2025-02-25T14:23:43.1392830Z 
2025-02-25T14:23:43.1393480Z Packets:   █████████████████████████████████████████████████▍                              308665/500000 [00:07<00:04, 40724.40it/s][A
2025-02-25T14:23:43.1393510Z 
2025-02-25T14:23:43.1394210Z Packets:   ██████████████████████████████████████████████████                              312949/500000 [00:07<00:04, 39935.74it/s][A
2025-02-25T14:23:43.1394230Z 
2025-02-25T14:23:43.1395000Z Packets:   ██████████████████████████████████████████████████▋                             317087/500000 [00:07<00:04, 37507.60it/s][A
2025-02-25T14:23:43.1395060Z 
2025-02-25T14:23:43.1395790Z Packets:   ███████████████████████████████████████████████████▍                            321197/500000 [00:08<00:04, 38443.36it/s][A
2025-02-25T14:23:43.1395810Z 
2025-02-25T14:23:43.1397120Z Packets:   ████████████████████████████████████████████████████                            325135/500000 [00:08<00:04, 37950.43it/s][A
2025-02-25T14:23:43.1397150Z 
2025-02-25T14:23:43.1397800Z Packets:   ████████████████████████████████████████████████████▊                           330306/500000 [00:08<00:04, 41740.81it/s][A
2025-02-25T14:23:43.1397820Z 
2025-02-25T14:23:43.1398430Z Packets:   █████████████████████████████████████████████████████▋                          335412/500000 [00:08<00:03, 44371.30it/s][A
2025-02-25T14:23:43.1398440Z 
2025-02-25T14:23:43.1399060Z Packets:   ██████████████████████████████████████████████████████▍                         339920/500000 [00:08<00:03, 41816.00it/s][A
2025-02-25T14:23:43.1399380Z 
2025-02-25T14:23:43.1400010Z Packets:   ███████████████████████████████████████████████████████                         344176/500000 [00:08<00:03, 40427.14it/s][A
2025-02-25T14:23:43.1400020Z 
2025-02-25T14:23:43.1400860Z Packets:   ███████████████████████████████████████████████████████▋                        348273/500000 [00:08<00:04, 33624.51it/s][A
2025-02-25T14:23:43.1400920Z 
2025-02-25T14:23:43.1401590Z Packets:   ████████████████████████████████████████████████████████▍                       353027/500000 [00:08<00:03, 37055.67it/s][A
2025-02-25T14:23:43.1401610Z 
2025-02-25T14:23:43.1402240Z Packets:   █████████████████████████████████████████████████████████▎                      358004/500000 [00:08<00:03, 40367.32it/s][A
2025-02-25T14:23:43.1402260Z 
2025-02-25T14:23:43.1403010Z Packets:   █████████████████████████████████████████████████████████▉                      362246/500000 [00:09<00:03, 40448.11it/s][A
2025-02-25T14:23:43.1403070Z 
2025-02-25T14:23:43.1410180Z Packets:   ██████████████████████████████████████████████████████████▋                     366435/500000 [00:09<00:03, 36764.25it/s][A
2025-02-25T14:23:43.1410210Z 
2025-02-25T14:23:43.1410850Z Packets:   ███████████████████████████████████████████████████████████▎                    370671/500000 [00:09<00:03, 38231.88it/s][A
2025-02-25T14:23:43.1410890Z 
2025-02-25T14:23:43.1411500Z Packets:   ███████████████████████████████████████████████████████████▉                    374978/500000 [00:09<00:03, 39549.75it/s][A
2025-02-25T14:23:43.1411510Z 
2025-02-25T14:23:43.1412120Z Packets:   ████████████████████████████████████████████████████████████▋                   379036/500000 [00:09<00:03, 33213.23it/s][A
2025-02-25T14:23:43.1412130Z 
2025-02-25T14:23:43.1412730Z Packets:   █████████████████████████████████████████████████████████████▏                  382588/500000 [00:09<00:03, 33008.89it/s][A
2025-02-25T14:23:43.1412740Z 
2025-02-25T14:23:43.1413380Z Packets:   █████████████████████████████████████████████████████████████▉                  386940/500000 [00:09<00:03, 35729.30it/s][A
2025-02-25T14:23:43.1413390Z 
2025-02-25T14:23:43.1414230Z Packets:   ██████████████████████████████████████████████████████████████▌                 390947/500000 [00:09<00:02, 36900.39it/s][A
2025-02-25T14:23:43.1414750Z 
2025-02-25T14:23:43.1415430Z Packets:   ███████████████████████████████████████████████████████████████▏                394759/500000 [00:09<00:02, 37238.51it/s][A
2025-02-25T14:23:43.1415440Z 
2025-02-25T14:23:43.1416190Z Packets:   ███████████████████████████████████████████████████████████████▉                399737/500000 [00:10<00:02, 40805.25it/s][A
2025-02-25T14:23:43.1416200Z 
2025-02-25T14:23:43.1416810Z Packets:   ████████████████████████████████████████████████████████████████▋               404067/500000 [00:10<00:02, 41523.88it/s][A
2025-02-25T14:23:43.1416820Z 
2025-02-25T14:23:43.1417490Z Packets:   █████████████████████████████████████████████████████████████████▍              409207/500000 [00:10<00:02, 44409.12it/s][A
2025-02-25T14:23:43.1418100Z 
2025-02-25T14:23:43.1418780Z Packets:   ██████████████████████████████████████████████████████████████████▏             413697/500000 [00:10<00:02, 31214.12it/s][A
2025-02-25T14:23:43.1418800Z 
2025-02-25T14:23:43.1419450Z Packets:   ██████████████████████████████████████████████████████████████████▊             417423/500000 [00:10<00:02, 32589.74it/s][A
2025-02-25T14:23:43.1419460Z 
2025-02-25T14:23:43.1420080Z Packets:   ███████████████████████████████████████████████████████████████████▍            421624/500000 [00:10<00:02, 34898.77it/s][A
2025-02-25T14:23:43.1420090Z 
2025-02-25T14:23:43.1420710Z Packets:   ████████████████████████████████████████████████████████████████████▏           426390/500000 [00:10<00:01, 38209.78it/s][A
2025-02-25T14:23:43.1420720Z 
2025-02-25T14:23:43.1421610Z Packets:   █████████████████████████████████████████████████████████████████████           431436/500000 [00:10<00:01, 41521.85it/s][A
2025-02-25T14:23:43.1421690Z 
2025-02-25T14:23:43.1422380Z Packets:   █████████████████████████████████████████████████████████████████████▋          435838/500000 [00:11<00:01, 41072.71it/s][A
2025-02-25T14:23:43.1422420Z 
2025-02-25T14:23:43.1422680Z Packets:   ██████████████████████████████████████████████████████████████████████▌         440870/500000 [00:11<00:01, 43654.22it/s][A
2025-02-25T14:23:43.1422980Z 
2025-02-25T14:23:43.1429290Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445911/500000 [00:11<00:01, 45578.28it/s][A
2025-02-25T14:23:43.1429320Z 
2025-02-25T14:23:43.1430150Z Packets:   ████████████████████████████████████████████████████████████████████████        450578/500000 [00:11<00:01, 32363.23it/s][A
2025-02-25T14:23:43.1430180Z 
2025-02-25T14:23:43.1430860Z Packets:   ████████████████████████████████████████████████████████████████████████▊       455004/500000 [00:11<00:01, 35048.69it/s][A
2025-02-25T14:23:43.1431230Z 
2025-02-25T14:23:43.1431960Z Packets:   █████████████████████████████████████████████████████████████████████████▍      459235/500000 [00:11<00:01, 36819.09it/s][A
2025-02-25T14:23:43.1431990Z 
2025-02-25T14:23:43.1432680Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464245/500000 [00:11<00:00, 40249.99it/s][A
2025-02-25T14:23:43.1432740Z 
2025-02-25T14:23:43.1433430Z Packets:   ███████████████████████████████████████████████████████████████████████████     468832/500000 [00:11<00:00, 41764.81it/s][A
2025-02-25T14:23:43.1433450Z 
2025-02-25T14:23:43.1434130Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473531/500000 [00:11<00:00, 43213.78it/s][A
2025-02-25T14:23:43.1434150Z 
2025-02-25T14:23:43.1434820Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478476/500000 [00:12<00:00, 44985.88it/s][A
2025-02-25T14:23:43.1434840Z 
2025-02-25T14:23:43.1435600Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  483116/500000 [00:12<00:00, 39637.23it/s][A
2025-02-25T14:23:43.1435620Z 
2025-02-25T14:23:43.1436330Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  487290/500000 [00:12<00:00, 40159.99it/s][A
2025-02-25T14:23:43.1436400Z 
2025-02-25T14:23:43.1437110Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491578/500000 [00:12<00:00, 40905.01it/s][A
2025-02-25T14:23:43.1437120Z 
2025-02-25T14:23:43.1437860Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496712/500000 [00:12<00:00, 43839.38it/s][A
2025-02-25T14:23:43.1438210Z Iterations:                                                                                17/? [07:06<00:00,  9.94s/it]
2025-02-25T14:23:43.1438230Z 
2025-02-25T14:23:43.1438970Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 43839.38it/s][A
2025-02-25T14:23:43.1439650Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1440030Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-25T14:23:43.1440870Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-25T14:23:43.1442100Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-25T14:23:43.1443140Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-25T14:23:43.1444340Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:43.1444900Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:23:43.1445210Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1445440Z 	Starting iteration 1 of 5
2025-02-25T14:23:43.1445730Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1445990Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:23:43.1446230Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:23:43.1446460Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1446480Z 
2025-02-25T14:23:43.1446750Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:23:43.1446970Z 	Plasma stratification:
2025-02-25T14:23:43.1447250Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:23:43.1447490Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:23:43.1447700Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:23:43.1447950Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:23:43.1448180Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:23:43.1448440Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:23:43.1448470Z 
2025-02-25T14:23:43.1448740Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:23:43.1448990Z 	Current t_inner = 9974.969 K
2025-02-25T14:23:43.1449260Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:23:43.1449270Z 
2025-02-25T14:23:43.1449590Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1449840Z 	Starting iteration 2 of 5
2025-02-25T14:23:43.1450140Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1450430Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:23:43.1450700Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:23:43.1450980Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1451000Z 
2025-02-25T14:23:43.1451280Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:23:43.1451550Z 	Plasma stratification:
2025-02-25T14:23:43.1451870Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:23:43.1452250Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1452470Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:23:43.1452690Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:23:43.1452930Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:23:43.1453180Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:23:43.1453550Z 
2025-02-25T14:23:43.1453870Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:23:43.1454120Z 	Current t_inner = 10736.790 K
2025-02-25T14:23:43.1454450Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:23:43.1454470Z 
2025-02-25T14:23:43.1454770Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1455040Z 	Starting iteration 3 of 5
2025-02-25T14:23:43.1455320Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1455590Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:23:43.1455840Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:23:43.1456140Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1456450Z 
2025-02-25T14:23:43.1457020Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-25T14:23:43.1457300Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:23:43.1457540Z 	Plasma stratification:
2025-02-25T14:23:43.1457830Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:23:43.1458090Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1458300Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:23:43.1458510Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:23:43.1458700Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:23:43.1458930Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:23:43.1458940Z 
2025-02-25T14:23:43.1459230Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:23:43.1459440Z 	Current t_inner = 10718.574 K
2025-02-25T14:23:43.1459750Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:23:43.1459780Z 
2025-02-25T14:23:43.1460010Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1460210Z 	Starting iteration 4 of 5
2025-02-25T14:23:43.1460460Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1460690Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:23:43.1460920Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:23:43.1461180Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1461190Z 
2025-02-25T14:23:43.1461710Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-25T14:23:43.1462020Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:23:43.1462290Z 	Plasma stratification:
2025-02-25T14:23:43.1462590Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:23:43.1462900Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:23:43.1463100Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:23:43.1463300Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:23:43.1463500Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:23:43.1463700Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:23:43.1463710Z 
2025-02-25T14:23:43.1463970Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:23:43.1464170Z 	Current t_inner = 10696.150 K
2025-02-25T14:23:43.1464480Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:23:43.1464510Z 
2025-02-25T14:23:43.1464750Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:23:43.1464970Z 	Simulation finished in 4 iterations 
2025-02-25T14:23:43.1465150Z 	Simulation took 11.76 s
2025-02-25T14:23:43.1465160Z 
2025-02-25T14:23:43.1465420Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1465670Z 	Starting iteration 5 of 5
2025-02-25T14:23:43.1465970Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1466230Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:23:43.1466480Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:23:43.1466750Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1467200Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-25T14:23:43.1467220Z 
2025-02-25T14:23:43.1467740Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bcee270>
2025-02-25T14:23:43.1468790Z simulation = <tardis.simulation.base.Simulation object at 0x1614ce600>
2025-02-25T14:23:43.1468810Z 
2025-02-25T14:23:43.1469040Z     def test_spectrum(self, simulation):
2025-02-25T14:23:43.1469840Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:23:43.1470080Z         expected = self.get_expected_data(key)
2025-02-25T14:23:43.1470260Z     
2025-02-25T14:23:43.1470560Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1470780Z     
2025-02-25T14:23:43.1471060Z >       assert_quantity_allclose(
2025-02-25T14:23:43.1471500Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-25T14:23:43.1471740Z             luminosity,
2025-02-25T14:23:43.1472520Z         )
2025-02-25T14:23:43.1472540Z 
2025-02-25T14:23:43.1472810Z tardis/tests/test_tardis_full.py:81: 
2025-02-25T14:23:43.1473120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1473990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1474260Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1474560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1474570Z 
2025-02-25T14:23:43.1475720Z args = (<function assert_allclose.<locals>.compare at 0x1640b6840>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, .....), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-25T14:23:43.1476000Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1476590Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1476620Z 
2025-02-25T14:23:43.1476790Z     @wraps(func)
2025-02-25T14:23:43.1476980Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1477190Z         with self._recreate_cm():
2025-02-25T14:23:43.1477400Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1477610Z E           AssertionError: 
2025-02-25T14:23:43.1477870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1478060Z E           
2025-02-25T14:23:43.1478490Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:23:43.1478690Z E           Max absolute difference: 1.38672909e+39
2025-02-25T14:23:43.1478790Z E           Max relative difference: 5.25284451
2025-02-25T14:23:43.1478950Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1479050Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1479200Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1479310Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1479320Z 
2025-02-25T14:23:43.1479530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1479740Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-25T14:23:43.1479750Z 
2025-02-25T14:23:43.1479950Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bcee4e0>
2025-02-25T14:23:43.1480150Z simulation = <tardis.simulation.base.Simulation object at 0x1614ce600>
2025-02-25T14:23:43.1480160Z 
2025-02-25T14:23:43.1480280Z     def test_virtual_spectrum(self, simulation):
2025-02-25T14:23:43.1480470Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-25T14:23:43.1480590Z         expected = self.get_expected_data(key)
2025-02-25T14:23:43.1480660Z     
2025-02-25T14:23:43.1480770Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1480850Z     
2025-02-25T14:23:43.1480960Z >       assert_quantity_allclose(
2025-02-25T14:23:43.1481150Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-25T14:23:43.1481220Z             luminosity,
2025-02-25T14:23:43.1481290Z         )
2025-02-25T14:23:43.1481290Z 
2025-02-25T14:23:43.1481370Z tardis/tests/test_tardis_full.py:92: 
2025-02-25T14:23:43.1481960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1482320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1482410Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1482500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1482510Z 
2025-02-25T14:23:43.1482920Z args = (<function assert_allclose.<locals>.compare at 0x310925ee0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, .....), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-25T14:23:43.1483300Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1483540Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1483550Z 
2025-02-25T14:23:43.1483610Z     @wraps(func)
2025-02-25T14:23:43.1483710Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1483790Z         with self._recreate_cm():
2025-02-25T14:23:43.1483860Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1483950Z E           AssertionError: 
2025-02-25T14:23:43.1484070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1484150Z E           
2025-02-25T14:23:43.1484260Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:23:43.1484370Z E           Max absolute difference: 5.26760031e+38
2025-02-25T14:23:43.1484480Z E           Max relative difference: 35562.41947434
2025-02-25T14:23:43.1484640Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1484790Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1484940Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1485040Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1485050Z 
2025-02-25T14:23:43.1485260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1485560Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-25T14:23:43.1485580Z 
2025-02-25T14:23:43.1485880Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bceef30>
2025-02-25T14:23:43.1486080Z simulation = <tardis.simulation.base.Simulation object at 0x12b50fa10>
2025-02-25T14:23:43.1486270Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-25T14:23:43.1486280Z 
2025-02-25T14:23:43.1486430Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:23:43.1486550Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1486630Z         j_blue_estimator = (
2025-02-25T14:23:43.1486870Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:23:43.1486960Z         )
2025-02-25T14:23:43.1487120Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:23:43.1487240Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:23:43.1487260Z 
2025-02-25T14:23:43.1487400Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:23:43.1487520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1487530Z 
2025-02-25T14:23:43.1487780Z args = (<function assert_allclose.<locals>.compare at 0x31b212f20>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1487860Z        [0., 0., 0.,.....,
2025-02-25T14:23:43.1487940Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1488040Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1488140Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:23:43.1488400Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1488410Z 
2025-02-25T14:23:43.1488490Z     @wraps(func)
2025-02-25T14:23:43.1488690Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1488760Z         with self._recreate_cm():
2025-02-25T14:23:43.1488840Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1488910Z E           AssertionError: 
2025-02-25T14:23:43.1489010Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1489080Z E           
2025-02-25T14:23:43.1489200Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:23:43.1489320Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:23:43.1489420Z E           Max relative difference: 7.72237896
2025-02-25T14:23:43.1489520Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1489780Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1489880Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1489980Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1490090Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1490210Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1490230Z 
2025-02-25T14:23:43.1490420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1490650Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-25T14:23:43.1490660Z 
2025-02-25T14:23:43.1490970Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bcef590>
2025-02-25T14:23:43.1491160Z simulation = <tardis.simulation.base.Simulation object at 0x12b50fa10>
2025-02-25T14:23:43.1491340Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-25T14:23:43.1491350Z 
2025-02-25T14:23:43.1491460Z     def test_spectrum(self, simulation, request):
2025-02-25T14:23:43.1491570Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1491790Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:23:43.1491960Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1492070Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1492200Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1492210Z 
2025-02-25T14:23:43.1492340Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:23:43.1492470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1492800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1492900Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1493030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1493050Z 
2025-02-25T14:23:43.1493520Z args = (<function assert_allclose.<locals>.compare at 0x31082db20>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:23:43.1493660Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1493910Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1493930Z 
2025-02-25T14:23:43.1494000Z     @wraps(func)
2025-02-25T14:23:43.1494080Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1494150Z         with self._recreate_cm():
2025-02-25T14:23:43.1494230Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1494330Z E           AssertionError: 
2025-02-25T14:23:43.1494460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1494520Z E           
2025-02-25T14:23:43.1494640Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:23:43.1494760Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:23:43.1494840Z E           Max relative difference: 4.0036592
2025-02-25T14:23:43.1495000Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1495230Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1495380Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1495470Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1495470Z 
2025-02-25T14:23:43.1495660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1495870Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-25T14:23:43.1495880Z 
2025-02-25T14:23:43.1496170Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c290>
2025-02-25T14:23:43.1496410Z simulation = <tardis.simulation.base.Simulation object at 0x12b50fa10>
2025-02-25T14:23:43.1496590Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-25T14:23:43.1496590Z 
2025-02-25T14:23:43.1496710Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:23:43.1496830Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1497000Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:23:43.1497150Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1497250Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1497370Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1497380Z 
2025-02-25T14:23:43.1497510Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:23:43.1497630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1497960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1498070Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1498210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1498220Z 
2025-02-25T14:23:43.1498640Z args = (<function assert_allclose.<locals>.compare at 0x1319b5580>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, .....), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-25T14:23:43.1498750Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-25T14:23:43.1498980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1498980Z 
2025-02-25T14:23:43.1499060Z     @wraps(func)
2025-02-25T14:23:43.1499130Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1499230Z         with self._recreate_cm():
2025-02-25T14:23:43.1499320Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1499430Z E           AssertionError: 
2025-02-25T14:23:43.1499550Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1499630Z E           
2025-02-25T14:23:43.1499740Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.1499860Z E           Max absolute difference: 5.00661745e+37
2025-02-25T14:23:43.1499980Z E           Max relative difference: 17.51202125
2025-02-25T14:23:43.1500150Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:23:43.1500270Z E                  2.279436e+31, 2.243943e+31])
2025-02-25T14:23:43.1500420Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:23:43.1500530Z E                  2.292907e+31, 2.257206e+31])
2025-02-25T14:23:43.1500540Z 
2025-02-25T14:23:43.1500730Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1500920Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1500930Z 
2025-02-25T14:23:43.1500930Z 
2025-02-25T14:23:43.1501920Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 107344.80it/s][A
2025-02-25T14:23:43.1502150Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-25T14:23:43.1502460Z 
2025-02-25T14:23:43.1502790Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bcef740>
2025-02-25T14:23:43.1502990Z simulation = <tardis.simulation.base.Simulation object at 0x12969c740>
2025-02-25T14:23:43.1503190Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-25T14:23:43.1503200Z 
2025-02-25T14:23:43.1503330Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:23:43.1503450Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1503790Z         j_blue_estimator = (
2025-02-25T14:23:43.1520080Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:23:43.1520430Z         )
2025-02-25T14:23:43.1520870Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:23:43.1521030Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:23:43.1521050Z 
2025-02-25T14:23:43.1521170Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:23:43.1521270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1521270Z 
2025-02-25T14:23:43.1521490Z args = (<function assert_allclose.<locals>.compare at 0x1620e16c0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1521550Z        [0., 0., 0.,.....,
2025-02-25T14:23:43.1521620Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1521680Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1521760Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:23:43.1521970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1521980Z 
2025-02-25T14:23:43.1522030Z     @wraps(func)
2025-02-25T14:23:43.1522100Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1522160Z         with self._recreate_cm():
2025-02-25T14:23:43.1522230Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1522290Z E           AssertionError: 
2025-02-25T14:23:43.1522400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1522460Z E           
2025-02-25T14:23:43.1522550Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:23:43.1522640Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:23:43.1522710Z E           Max relative difference: 3.25828651
2025-02-25T14:23:43.1522790Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1522860Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1522930Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1523010Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1523070Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1523140Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1523140Z 
2025-02-25T14:23:43.1523320Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1523500Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-25T14:23:43.1523500Z 
2025-02-25T14:23:43.1523760Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bcefec0>
2025-02-25T14:23:43.1523910Z simulation = <tardis.simulation.base.Simulation object at 0x12969c740>
2025-02-25T14:23:43.1524060Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-25T14:23:43.1524060Z 
2025-02-25T14:23:43.1524150Z     def test_spectrum(self, simulation, request):
2025-02-25T14:23:43.1524240Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1524400Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:23:43.1524530Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1524620Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1525040Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1525050Z 
2025-02-25T14:23:43.1525200Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:23:43.1525300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1525570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1525640Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1525740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1525740Z 
2025-02-25T14:23:43.1526110Z args = (<function assert_allclose.<locals>.compare at 0x30e781d00>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:23:43.1526310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1526530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1526540Z 
2025-02-25T14:23:43.1526590Z     @wraps(func)
2025-02-25T14:23:43.1526660Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1526720Z         with self._recreate_cm():
2025-02-25T14:23:43.1526790Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1526850Z E           AssertionError: 
2025-02-25T14:23:43.1526940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1526990Z E           
2025-02-25T14:23:43.1527070Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:23:43.1527150Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:23:43.1527230Z E           Max relative difference: 1.86186015
2025-02-25T14:23:43.1527360Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1527430Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1527550Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1527620Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1527620Z 
2025-02-25T14:23:43.1527810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1528010Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-25T14:23:43.1528010Z 
2025-02-25T14:23:43.1528290Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c440>
2025-02-25T14:23:43.1528450Z simulation = <tardis.simulation.base.Simulation object at 0x12969c740>
2025-02-25T14:23:43.1528630Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-25T14:23:43.1528640Z 
2025-02-25T14:23:43.1528770Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:23:43.1528860Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1529020Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:23:43.1529150Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1529250Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1529360Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1529360Z 
2025-02-25T14:23:43.1529480Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:23:43.1529600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1529900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1529980Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1530080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1530080Z 
2025-02-25T14:23:43.1530470Z args = (<function assert_allclose.<locals>.compare at 0x31904aac0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, .....), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-25T14:23:43.1530660Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-25T14:23:43.1530860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1530860Z 
2025-02-25T14:23:43.1530910Z     @wraps(func)
2025-02-25T14:23:43.1530970Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1531060Z         with self._recreate_cm():
2025-02-25T14:23:43.1531140Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1531220Z E           AssertionError: 
2025-02-25T14:23:43.1531320Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1531500Z E           
2025-02-25T14:23:43.1531600Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.1531680Z E           Max absolute difference: 2.90101642e+37
2025-02-25T14:23:43.1531750Z E           Max relative difference: 0.98973757
2025-02-25T14:23:43.1531880Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:23:43.1531960Z E                  1.330497e+31, 1.294462e+31])
2025-02-25T14:23:43.1532080Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:23:43.1532150Z E                  1.375141e+31, 1.337928e+31])
2025-02-25T14:23:43.1532150Z 
2025-02-25T14:23:43.1532310Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1532490Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-25T14:23:43.1532490Z 
2025-02-25T14:23:43.1532750Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bcefa40>
2025-02-25T14:23:43.1532900Z simulation = <tardis.simulation.base.Simulation object at 0x127ff3740>
2025-02-25T14:23:43.1533070Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-25T14:23:43.1533070Z 
2025-02-25T14:23:43.1533170Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:23:43.1533260Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1533330Z         j_blue_estimator = (
2025-02-25T14:23:43.1533510Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:23:43.1533570Z         )
2025-02-25T14:23:43.1533680Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:23:43.1533780Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:23:43.1533790Z 
2025-02-25T14:23:43.1533890Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:23:43.1533990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1534000Z 
2025-02-25T14:23:43.1534200Z args = (<function assert_allclose.<locals>.compare at 0x30e781d00>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1534260Z        [0., 0., 0.,.....,
2025-02-25T14:23:43.1534320Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1534380Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1534440Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:23:43.1534640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1534640Z 
2025-02-25T14:23:43.1534690Z     @wraps(func)
2025-02-25T14:23:43.1534770Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1534830Z         with self._recreate_cm():
2025-02-25T14:23:43.1534900Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1534960Z E           AssertionError: 
2025-02-25T14:23:43.1535050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1535100Z E           
2025-02-25T14:23:43.1535190Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:23:43.1535260Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:23:43.1535340Z E           Max relative difference: 3.25828651
2025-02-25T14:23:43.1535410Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1535560Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1535640Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1535710Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1535780Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1535850Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1535850Z 
2025-02-25T14:23:43.1536010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1536190Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-25T14:23:43.1536260Z 
2025-02-25T14:23:43.1536520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c050>
2025-02-25T14:23:43.1536680Z simulation = <tardis.simulation.base.Simulation object at 0x127ff3740>
2025-02-25T14:23:43.1536820Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-25T14:23:43.1536820Z 
2025-02-25T14:23:43.1536910Z     def test_spectrum(self, simulation, request):
2025-02-25T14:23:43.1536990Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1537150Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:23:43.1537300Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1537400Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1537490Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1537490Z 
2025-02-25T14:23:43.1537590Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:23:43.1537690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1537950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1538020Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1538120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1538120Z 
2025-02-25T14:23:43.1538510Z args = (<function assert_allclose.<locals>.compare at 0x11df05b20>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:23:43.1538600Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1538810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1538810Z 
2025-02-25T14:23:43.1538870Z     @wraps(func)
2025-02-25T14:23:43.1538940Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1539020Z         with self._recreate_cm():
2025-02-25T14:23:43.1539090Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1539160Z E           AssertionError: 
2025-02-25T14:23:43.1539250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1539310Z E           
2025-02-25T14:23:43.1539390Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:23:43.1543950Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:23:43.1544080Z E           Max relative difference: 1.86186015
2025-02-25T14:23:43.1544210Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1544280Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1544400Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1544470Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1544470Z 
2025-02-25T14:23:43.1544640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1544840Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-25T14:23:43.1544840Z 
2025-02-25T14:23:43.1545100Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c650>
2025-02-25T14:23:43.1545510Z simulation = <tardis.simulation.base.Simulation object at 0x127ff3740>
2025-02-25T14:23:43.1545670Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-25T14:23:43.1545670Z 
2025-02-25T14:23:43.1545790Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:23:43.1545870Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1546020Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:23:43.1546160Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1546240Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1546450Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1546460Z 
2025-02-25T14:23:43.1546560Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:23:43.1546660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1546930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1547000Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1547100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1547100Z 
2025-02-25T14:23:43.1547460Z args = (<function assert_allclose.<locals>.compare at 0x30d10f100>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, .....), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-25T14:23:43.1547550Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-25T14:23:43.1547760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1547770Z 
2025-02-25T14:23:43.1547830Z     @wraps(func)
2025-02-25T14:23:43.1547890Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1547960Z         with self._recreate_cm():
2025-02-25T14:23:43.1548030Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1548090Z E           AssertionError: 
2025-02-25T14:23:43.1548200Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1548250Z E           
2025-02-25T14:23:43.1548340Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.1548420Z E           Max absolute difference: 2.99183385e+37
2025-02-25T14:23:43.1548500Z E           Max relative difference: 0.98992197
2025-02-25T14:23:43.1548620Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:23:43.1548690Z E                  1.260980e+31, 1.222587e+31])
2025-02-25T14:23:43.1548810Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:23:43.1548880Z E                  1.193005e+31, 1.164854e+31])
2025-02-25T14:23:43.1548880Z 
2025-02-25T14:23:43.1549050Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1549200Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1549200Z 
2025-02-25T14:23:43.1549200Z 
2025-02-25T14:23:43.1549770Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:14<00:00, 115829.95it/s][A
2025-02-25T14:23:43.1549960Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-25T14:23:43.1549970Z 
2025-02-25T14:23:43.1550220Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bcef950>
2025-02-25T14:23:43.1550380Z simulation = <tardis.simulation.base.Simulation object at 0x17788a090>
2025-02-25T14:23:43.1550540Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-25T14:23:43.1550550Z 
2025-02-25T14:23:43.1550650Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:23:43.1550740Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1550800Z         j_blue_estimator = (
2025-02-25T14:23:43.1551080Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:23:43.1551140Z         )
2025-02-25T14:23:43.1551250Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:23:43.1551350Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:23:43.1551350Z 
2025-02-25T14:23:43.1551470Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:23:43.1551560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1551560Z 
2025-02-25T14:23:43.1551770Z args = (<function assert_allclose.<locals>.compare at 0x11df04040>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1551890Z        [0., 0., 0.,.....,
2025-02-25T14:23:43.1551950Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1552010Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1552070Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:23:43.1552270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1552280Z 
2025-02-25T14:23:43.1552330Z     @wraps(func)
2025-02-25T14:23:43.1552390Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1552450Z         with self._recreate_cm():
2025-02-25T14:23:43.1552510Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1552570Z E           AssertionError: 
2025-02-25T14:23:43.1552660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1552710Z E           
2025-02-25T14:23:43.1552800Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:23:43.1552880Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:23:43.1552960Z E           Max relative difference: 7.72237896
2025-02-25T14:23:43.1553030Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1553100Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1553180Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1553250Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1553320Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.1553390Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.1553390Z 
2025-02-25T14:23:43.1553550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1553730Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-25T14:23:43.1553730Z 
2025-02-25T14:23:43.1553990Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c2c0>
2025-02-25T14:23:43.1554150Z simulation = <tardis.simulation.base.Simulation object at 0x17788a090>
2025-02-25T14:23:43.1554320Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-25T14:23:43.1554330Z 
2025-02-25T14:23:43.1554430Z     def test_spectrum(self, simulation, request):
2025-02-25T14:23:43.1554520Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1554680Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:23:43.1554810Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1554890Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1554990Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1554990Z 
2025-02-25T14:23:43.1555100Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:23:43.1555190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1555460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1555530Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1555630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1555630Z 
2025-02-25T14:23:43.1556110Z args = (<function assert_allclose.<locals>.compare at 0x30dc39440>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:23:43.1556200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1556410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1556410Z 
2025-02-25T14:23:43.1556460Z     @wraps(func)
2025-02-25T14:23:43.1556520Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1556590Z         with self._recreate_cm():
2025-02-25T14:23:43.1556660Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1556810Z E           AssertionError: 
2025-02-25T14:23:43.1556900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1556950Z E           
2025-02-25T14:23:43.1557030Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:23:43.1557110Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:23:43.1557190Z E           Max relative difference: 4.0036592
2025-02-25T14:23:43.1557310Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1557380Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1557500Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.1557570Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1557570Z 
2025-02-25T14:23:43.1557730Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1557940Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-25T14:23:43.1557950Z 
2025-02-25T14:23:43.1558200Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bd3c590>
2025-02-25T14:23:43.1558540Z simulation = <tardis.simulation.base.Simulation object at 0x17788a090>
2025-02-25T14:23:43.1558720Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-25T14:23:43.1558730Z 
2025-02-25T14:23:43.1558840Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:23:43.1558920Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1559080Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:23:43.1559210Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:23:43.1559290Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:23:43.1559380Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:23:43.1559390Z 
2025-02-25T14:23:43.1559500Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:23:43.1559600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1559870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:23:43.1559950Z     np.testing.assert_allclose(
2025-02-25T14:23:43.1560040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1560040Z 
2025-02-25T14:23:43.1560410Z args = (<function assert_allclose.<locals>.compare at 0x3117c3100>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, .....), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-25T14:23:43.1560500Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-25T14:23:43.1560720Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1560730Z 
2025-02-25T14:23:43.1560790Z     @wraps(func)
2025-02-25T14:23:43.1560850Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1560910Z         with self._recreate_cm():
2025-02-25T14:23:43.1560980Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1561040Z E           AssertionError: 
2025-02-25T14:23:43.1561130Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1561310Z E           
2025-02-25T14:23:43.1561400Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.1561480Z E           Max absolute difference: 5.0153284e+37
2025-02-25T14:23:43.1561550Z E           Max relative difference: 4.90769503
2025-02-25T14:23:43.1561680Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:23:43.1561740Z E                  2.088676e+31, 2.060278e+31])
2025-02-25T14:23:43.1561870Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:23:43.1561940Z E                  2.124305e+31, 2.101081e+31])
2025-02-25T14:23:43.1561990Z 
2025-02-25T14:23:43.1562170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1562300Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1562300Z 
2025-02-25T14:23:43.1562300Z 
2025-02-25T14:23:43.1562660Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 100549.97it/s][A
2025-02-25T14:23:43.1562790Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-25T14:23:43.1562790Z 
2025-02-25T14:23:43.1563370Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:23:43.1563620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x164b2f2c0>
2025-02-25T14:23:43.1563930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:23:43.1563950Z 
2025-02-25T14:23:43.1564020Z     def test_montecarlo_main_loop(
2025-02-25T14:23:43.1564110Z         montecarlo_main_loop_config,
2025-02-25T14:23:43.1564190Z         regression_data,
2025-02-25T14:23:43.1564260Z         atomic_dataset,
2025-02-25T14:23:43.1564310Z     ):
2025-02-25T14:23:43.1564390Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:23:43.1564530Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:23:43.1564610Z             montecarlo_main_loop_config,
2025-02-25T14:23:43.1564670Z             atom_data=atomic_dataset,
2025-02-25T14:23:43.1564770Z             virtual_packet_logging=False,
2025-02-25T14:23:43.1564860Z             legacy_mode_enabled=True,
2025-02-25T14:23:43.1564920Z         )
2025-02-25T14:23:43.1565030Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:23:43.1565110Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:23:43.1565170Z     
2025-02-25T14:23:43.1565270Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:23:43.1565340Z             montecarlo_main_loop_simulation
2025-02-25T14:23:43.1565390Z         )
2025-02-25T14:23:43.1565440Z     
2025-02-25T14:23:43.1565500Z         # Load compare data from refdata
2025-02-25T14:23:43.1565550Z     
2025-02-25T14:23:43.1565620Z         expected_nu = expected_hdf_store[
2025-02-25T14:23:43.1565720Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:23:43.1565770Z         ]
2025-02-25T14:23:43.1565840Z         expected_energy = expected_hdf_store[
2025-02-25T14:23:43.1565950Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:23:43.1566000Z         ]
2025-02-25T14:23:43.1566090Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:23:43.1566210Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:23:43.1566540Z         ]
2025-02-25T14:23:43.1566620Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:23:43.1566720Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:23:43.1566770Z         ]
2025-02-25T14:23:43.1567020Z         expected_hdf_store.close()
2025-02-25T14:23:43.1567190Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-25T14:23:43.1567330Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:23:43.1567450Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:23:43.1567510Z         actual_nu_bar_estimator = (
2025-02-25T14:23:43.1567630Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:23:43.1567680Z         )
2025-02-25T14:23:43.1567830Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:23:43.1567870Z     
2025-02-25T14:23:43.1567930Z         # Compare
2025-02-25T14:23:43.1567990Z >       npt.assert_allclose(
2025-02-25T14:23:43.1568120Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-25T14:23:43.1568170Z         )
2025-02-25T14:23:43.1568170Z 
2025-02-25T14:23:43.1568320Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-25T14:23:43.1568420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1568430Z 
2025-02-25T14:23:43.1568770Z args = (<function assert_allclose.<locals>.compare at 0x1765c87c0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28, 6.....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-25T14:23:43.1568890Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-25T14:23:43.1569080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-25T14:23:43.1569080Z 
2025-02-25T14:23:43.1569140Z     @wraps(func)
2025-02-25T14:23:43.1569220Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1569300Z         with self._recreate_cm():
2025-02-25T14:23:43.1569360Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1569430Z E           AssertionError: 
2025-02-25T14:23:43.1569520Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:23:43.1569570Z E           
2025-02-25T14:23:43.1569650Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:23:43.1569730Z E           Max absolute difference: 2.25821059e+25
2025-02-25T14:23:43.1569820Z E           Max relative difference: 0.00054426
2025-02-25T14:23:43.1569950Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:23:43.1570070Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:23:43.1570200Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:23:43.1570340Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:23:43.1570440Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:23:43.1570550Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:23:43.1570550Z 
2025-02-25T14:23:43.1570710Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1570840Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:23:43.1571110Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:43.1571470Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:43.1571640Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1571810Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:23:43.1571940Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1572120Z 	
2025-02-25T14:23:43.1572190Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1572250Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1572330Z  ([1mbase.py[0m:546)
2025-02-25T14:23:43.1572460Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1572510Z 	
2025-02-25T14:23:43.1572700Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1572820Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1572870Z 	
2025-02-25T14:23:43.1572940Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:23:43.1573010Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:23:43.1573080Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1573150Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1573280Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1573290Z 
2025-02-25T14:23:43.1573290Z 
2025-02-25T14:23:43.1573470Z Packets:                                                                                   4200/? [00:07<00:00, 444.36it/s] [A
2025-02-25T14:23:43.1573480Z 
2025-02-25T14:23:43.1573660Z Packets:                                                                                   15235/? [00:07<00:00, 2721.79it/s][A
2025-02-25T14:23:43.1573660Z 
2025-02-25T14:23:43.1573830Z Packets:                                                                                   28128/? [00:07<00:00, 6350.42it/s][A
2025-02-25T14:23:43.1573840Z 
2025-02-25T14:23:43.1574020Z Packets:                                                                                   37703/? [00:07<00:00, 9877.46it/s][A
2025-02-25T14:23:43.1574030Z 
2025-02-25T14:23:43.1574230Z Packets:                                                                                   50561/? [00:07<00:00, 16210.65it/s][A
2025-02-25T14:23:43.1574230Z 
2025-02-25T14:23:43.1574400Z Packets:                                                                                   64321/? [00:07<00:00, 24807.63it/s][A
2025-02-25T14:23:43.1574400Z 
2025-02-25T14:23:43.1574580Z Packets:                                                                                   77205/? [00:07<00:00, 34365.63it/s][A
2025-02-25T14:23:43.1574580Z 
2025-02-25T14:23:43.1574760Z Packets:                                                                                   89728/? [00:08<00:00, 44907.88it/s][A
2025-02-25T14:23:43.1574780Z 
2025-02-25T14:23:43.1574960Z Packets:                                                                                   102098/? [00:08<00:00, 56110.47it/s][A
2025-02-25T14:23:43.1575090Z Iterations:                                                                                40/? [09:01<00:00,  6.18s/it]
2025-02-25T14:23:43.1575090Z 
2025-02-25T14:23:43.1575260Z Packets:                                                                                   104009/? [00:08<00:00, 56110.47it/s][A
2025-02-25T14:23:43.1575400Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:23:43.1575850Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:43.1576070Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:23:43.1576170Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:23:43.1576240Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1576300Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1576300Z 
2025-02-25T14:23:43.1576390Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1576450Z 	Starting iteration 1 of 1
2025-02-25T14:23:43.1576530Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1576600Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:23:43.1576670Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:23:43.1576740Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1576880Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-25T14:23:43.1576970Z 
2025-02-25T14:23:43.1577550Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:23:43.1577890Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12956da60>
2025-02-25T14:23:43.1578180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:23:43.1578190Z 
2025-02-25T14:23:43.1578280Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-25T14:23:43.1578350Z         montecarlo_main_loop_config,
2025-02-25T14:23:43.1578400Z         regression_data,
2025-02-25T14:23:43.1578460Z         atomic_dataset,
2025-02-25T14:23:43.1578510Z     ):
2025-02-25T14:23:43.1578600Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:23:43.1578750Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-25T14:23:43.1578830Z     
2025-02-25T14:23:43.1578960Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:23:43.1579030Z             montecarlo_main_loop_config,
2025-02-25T14:23:43.1579100Z             atom_data=atomic_dataset,
2025-02-25T14:23:43.1579190Z             virtual_packet_logging=True,
2025-02-25T14:23:43.1579260Z             legacy_mode_enabled=True,
2025-02-25T14:23:43.1579310Z         )
2025-02-25T14:23:43.1579430Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:23:43.1579520Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:23:43.1579570Z     
2025-02-25T14:23:43.1579700Z         transport = montecarlo_main_loop_simulation.transport
2025-02-25T14:23:43.1579750Z     
2025-02-25T14:23:43.1579930Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-25T14:23:43.1579990Z     
2025-02-25T14:23:43.1580100Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:23:43.1580180Z             montecarlo_main_loop_simulation
2025-02-25T14:23:43.1580230Z         )
2025-02-25T14:23:43.1580280Z     
2025-02-25T14:23:43.1580350Z         expected_nu = expected_hdf_store[
2025-02-25T14:23:43.1580470Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:23:43.1580550Z         ]
2025-02-25T14:23:43.1580630Z         expected_energy = expected_hdf_store[
2025-02-25T14:23:43.1580760Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:23:43.1580810Z         ]
2025-02-25T14:23:43.1580920Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:23:43.1581040Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:23:43.1581110Z         ]
2025-02-25T14:23:43.1581190Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:23:43.1581300Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:23:43.1581350Z         ]
2025-02-25T14:23:43.1581450Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-25T14:23:43.1581560Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-25T14:23:43.1581610Z         ]
2025-02-25T14:23:43.1581710Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-25T14:23:43.1581840Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-25T14:23:43.1581890Z         ]
2025-02-25T14:23:43.1581940Z     
2025-02-25T14:23:43.1582030Z         transport_state = transport.transport_state
2025-02-25T14:23:43.1582080Z     
2025-02-25T14:23:43.1582220Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:23:43.1582330Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:23:43.1582450Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-25T14:23:43.1582550Z         actual_j_estimator = transport_state.j_estimator
2025-02-25T14:23:43.1582760Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-25T14:23:43.1582920Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-25T14:23:43.1582970Z     
2025-02-25T14:23:43.1583040Z         expected_hdf_store.close()
2025-02-25T14:23:43.1583140Z         # Compare
2025-02-25T14:23:43.1583220Z >       npt.assert_allclose(
2025-02-25T14:23:43.1583310Z             actual_nu_bar_estimator,
2025-02-25T14:23:43.1583400Z             expected_nu_bar_estimator,
2025-02-25T14:23:43.1583480Z             rtol=1e-12,
2025-02-25T14:23:43.1583550Z             atol=1e-15,
2025-02-25T14:23:43.1583620Z         )
2025-02-25T14:23:43.1583640Z 
2025-02-25T14:23:43.1583790Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-25T14:23:43.1583890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1583890Z 
2025-02-25T14:23:43.1584240Z args = (<function assert_allclose.<locals>.compare at 0x12999e480>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28, 6.....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-25T14:23:43.1584350Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-25T14:23:43.1584570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-25T14:23:43.1584570Z 
2025-02-25T14:23:43.1584630Z     @wraps(func)
2025-02-25T14:23:43.1584700Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1584760Z         with self._recreate_cm():
2025-02-25T14:23:43.1584820Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1584890Z E           AssertionError: 
2025-02-25T14:23:43.1584980Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:23:43.1585030Z E           
2025-02-25T14:23:43.1585110Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:23:43.1585190Z E           Max absolute difference: 1.93283629e+25
2025-02-25T14:23:43.1585270Z E           Max relative difference: 0.00029148
2025-02-25T14:23:43.1585390Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:23:43.1585500Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:23:43.1585620Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:23:43.1585740Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:23:43.1585850Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:23:43.1585950Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:23:43.1585950Z 
2025-02-25T14:23:43.1586120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1586250Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:23:43.1586520Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:43.1586880Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:43.1587070Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1587280Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:23:43.1587440Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1587500Z 	
2025-02-25T14:23:43.1587570Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1587630Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1587710Z  ([1mbase.py[0m:546)
2025-02-25T14:23:43.1587860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1587920Z 	
2025-02-25T14:23:43.1588050Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1588180Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1588230Z 	
2025-02-25T14:23:43.1588320Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:23:43.1588690Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:23:43.1588770Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1588870Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1589000Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1589140Z 
2025-02-25T14:23:43.1589140Z 
2025-02-25T14:23:43.1589340Z Packets:                                                                                   114230/? [00:10<00:00, 13481.14it/s][A
2025-02-25T14:23:43.1589340Z 
2025-02-25T14:23:43.1589520Z Packets:                                                                                   122801/? [00:10<00:00, 15262.24it/s][A
2025-02-25T14:23:43.1589530Z 
2025-02-25T14:23:43.1589700Z Packets:                                                                                   129578/? [00:11<00:00, 17323.14it/s][A
2025-02-25T14:23:43.1589710Z 
2025-02-25T14:23:43.1589880Z Packets:                                                                                   135368/? [00:11<00:00, 19343.86it/s][A
2025-02-25T14:23:43.1589890Z 
2025-02-25T14:23:43.1590070Z Packets:                                                                                   140481/? [00:11<00:00, 21530.28it/s][A
2025-02-25T14:23:43.1590070Z 
2025-02-25T14:23:43.1590260Z Packets:                                                                                   145210/? [00:11<00:00, 23399.58it/s][A
2025-02-25T14:23:43.1590270Z 
2025-02-25T14:23:43.1590440Z Packets:                                                                                   149553/? [00:11<00:00, 25753.10it/s][A
2025-02-25T14:23:43.1590440Z 
2025-02-25T14:23:43.1590620Z Packets:                                                                                   153800/? [00:11<00:00, 27821.19it/s][A
2025-02-25T14:23:43.1590630Z 
2025-02-25T14:23:43.1590820Z Packets:                                                                                   157906/? [00:11<00:00, 30096.72it/s][A
2025-02-25T14:23:43.1590830Z 
2025-02-25T14:23:43.1591060Z Packets:                                                                                   161989/? [00:12<00:00, 30916.28it/s][A
2025-02-25T14:23:43.1591060Z 
2025-02-25T14:23:43.1591240Z Packets:                                                                                   165854/? [00:12<00:00, 30648.19it/s][A
2025-02-25T14:23:43.1591250Z 
2025-02-25T14:23:43.1591420Z Packets:                                                                                   169661/? [00:12<00:00, 32299.03it/s][A
2025-02-25T14:23:43.1591420Z 
2025-02-25T14:23:43.1591600Z Packets:                                                                                   173859/? [00:12<00:00, 34662.62it/s][A
2025-02-25T14:23:43.1591600Z 
2025-02-25T14:23:43.1591780Z Packets:                                                                                   178157/? [00:12<00:00, 36811.78it/s][A
2025-02-25T14:23:43.1591780Z 
2025-02-25T14:23:43.1591960Z Packets:                                                                                   182518/? [00:12<00:00, 38645.24it/s][A
2025-02-25T14:23:43.1591960Z 
2025-02-25T14:23:43.1592140Z Packets:                                                                                   186601/? [00:12<00:00, 37841.20it/s][A
2025-02-25T14:23:43.1592140Z 
2025-02-25T14:23:43.1592320Z Packets:                                                                                   190540/? [00:12<00:00, 37401.13it/s][A
2025-02-25T14:23:43.1592320Z 
2025-02-25T14:23:43.1592500Z Packets:                                                                                   195006/? [00:12<00:00, 39425.17it/s][A
2025-02-25T14:23:43.1592510Z 
2025-02-25T14:23:43.1592680Z Packets:                                                                                   199039/? [00:12<00:00, 36316.84it/s][A
2025-02-25T14:23:43.1592690Z 
2025-02-25T14:23:43.1592860Z Packets:                                                                                   202785/? [00:13<00:00, 36623.10it/s][A
2025-02-25T14:23:43.1593080Z Iterations:                                                                                41/? [09:06<00:00,  5.86s/it]
2025-02-25T14:23:43.1593090Z 
2025-02-25T14:23:43.1593260Z Packets:                                                                                   204009/? [00:13<00:00, 36623.10it/s][A
2025-02-25T14:23:43.1593450Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:23:43.1593870Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:43.1594060Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:23:43.1594150Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:23:43.1594230Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1594280Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1594290Z 
2025-02-25T14:23:43.1594370Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1594440Z 	Starting iteration 1 of 1
2025-02-25T14:23:43.1594520Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1594600Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:23:43.1594680Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:23:43.1594750Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1594880Z __________________________ test_boundary_interactions __________________________
2025-02-25T14:23:43.1594880Z 
2025-02-25T14:23:43.1595520Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#119396ff0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x30591d960>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x130707af0>])
2025-02-25T14:23:43.1595750Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x127fa72c0>
2025-02-25T14:23:43.1595750Z 
2025-02-25T14:23:43.1595890Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-25T14:23:43.1595980Z         no_of_packets = len(rpacket_tracker)
2025-02-25T14:23:43.1596030Z     
2025-02-25T14:23:43.1596110Z         # Hard coding the number of columns
2025-02-25T14:23:43.1596240Z         # Based on the largest size of boundary_interaction array (60)
2025-02-25T14:23:43.1596320Z         obtained_boundary_interaction = np.full(
2025-02-25T14:23:43.1596390Z             (no_of_packets, 64),
2025-02-25T14:23:43.1596440Z             [-1],
2025-02-25T14:23:43.1596560Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-25T14:23:43.1596610Z         )
2025-02-25T14:23:43.1596660Z     
2025-02-25T14:23:43.1596750Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-25T14:23:43.1596830Z             obtained_boundary_interaction[
2025-02-25T14:23:43.1596910Z                 i, : tracker.boundary_interaction.size
2025-02-25T14:23:43.1596990Z             ] = tracker.boundary_interaction
2025-02-25T14:23:43.1597040Z     
2025-02-25T14:23:43.1597170Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-25T14:23:43.1597250Z             obtained_boundary_interaction
2025-02-25T14:23:43.1597300Z         )
2025-02-25T14:23:43.1597360Z >       npt.assert_array_equal(
2025-02-25T14:23:43.1597490Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-25T14:23:43.1597540Z         )
2025-02-25T14:23:43.1597540Z 
2025-02-25T14:23:43.1597670Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-25T14:23:43.1597780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1597780Z 
2025-02-25T14:23:43.1598010Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:23:43.1598090Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-25T14:23:43.1598240Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-25T14:23:43.1598660Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-25T14:23:43.1598670Z 
2025-02-25T14:23:43.1598730Z     @wraps(func)
2025-02-25T14:23:43.1598790Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1598970Z         with self._recreate_cm():
2025-02-25T14:23:43.1599040Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1599110Z E           AssertionError: 
2025-02-25T14:23:43.1599170Z E           Arrays are not equal
2025-02-25T14:23:43.1599220Z E           
2025-02-25T14:23:43.1599300Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:23:43.1599410Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:23:43.1599490Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:23:43.1599570Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:23:43.1599680Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:23:43.1599750Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:23:43.1599850Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:23:43.1599850Z 
2025-02-25T14:23:43.1600020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1600160Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-25T14:23:43.1600160Z 
2025-02-25T14:23:43.1600710Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:23:43.1600940Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12b55e840>
2025-02-25T14:23:43.1601250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:23:43.1601600Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x12a2efc20>
2025-02-25T14:23:43.1601610Z 
2025-02-25T14:23:43.1601710Z     def test_montecarlo_main_loop_weighted(
2025-02-25T14:23:43.1601780Z         montecarlo_main_loop_config,
2025-02-25T14:23:43.1601840Z         regression_data,
2025-02-25T14:23:43.1601890Z         atomic_dataset,
2025-02-25T14:23:43.1601970Z         simple_weighted_packet_source,
2025-02-25T14:23:43.1602010Z     ):
2025-02-25T14:23:43.1602100Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:23:43.1602240Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-25T14:23:43.1602310Z             montecarlo_main_loop_config,
2025-02-25T14:23:43.1602380Z             atom_data=atomic_dataset,
2025-02-25T14:23:43.1602450Z             virtual_packet_logging=False,
2025-02-25T14:23:43.1602520Z             legacy_mode_enabled=True,
2025-02-25T14:23:43.1602570Z         )
2025-02-25T14:23:43.1602700Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-25T14:23:43.1602780Z             simple_weighted_packet_source
2025-02-25T14:23:43.1602840Z         )
2025-02-25T14:23:43.1602970Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-25T14:23:43.1603070Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-25T14:23:43.1603130Z     
2025-02-25T14:23:43.1603210Z         # Get the montecarlo simple regression data
2025-02-25T14:23:43.1603280Z         regression_data_dir = (
2025-02-25T14:23:43.1603420Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-25T14:23:43.1603550Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-25T14:23:43.1603600Z         )
2025-02-25T14:23:43.1603740Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-25T14:23:43.1603890Z     
2025-02-25T14:23:43.1603970Z         # Load compare data from refdata
2025-02-25T14:23:43.1604020Z     
2025-02-25T14:23:43.1604090Z         expected_nu = expected_hdf_store[
2025-02-25T14:23:43.1604210Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:23:43.1604310Z         ]
2025-02-25T14:23:43.1604400Z         expected_energy = expected_hdf_store[
2025-02-25T14:23:43.1604500Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:23:43.1604560Z         ]
2025-02-25T14:23:43.1604650Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:23:43.1604770Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:23:43.1604820Z         ]
2025-02-25T14:23:43.1604900Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:23:43.1609560Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:23:43.1609680Z         ]
2025-02-25T14:23:43.1609770Z         expected_hdf_store.close()
2025-02-25T14:23:43.1609850Z         transport_state = (
2025-02-25T14:23:43.1610010Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-25T14:23:43.1610050Z         )
2025-02-25T14:23:43.1610190Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:23:43.1610310Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:23:43.1610380Z         actual_nu_bar_estimator = (
2025-02-25T14:23:43.1610500Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:23:43.1610550Z         )
2025-02-25T14:23:43.1610700Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:23:43.1610750Z     
2025-02-25T14:23:43.1610800Z         # Compare
2025-02-25T14:23:43.1610860Z         npt.assert_allclose(
2025-02-25T14:23:43.1610990Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-25T14:23:43.1611040Z         )
2025-02-25T14:23:43.1611190Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-25T14:23:43.1611320Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-25T14:23:43.1611320Z 
2025-02-25T14:23:43.1611520Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-25T14:23:43.1611620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1611620Z 
2025-02-25T14:23:43.1612020Z args = (<function assert_allclose.<locals>.compare at 0x162375580>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-25T14:23:43.1612120Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-25T14:23:43.1612320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-25T14:23:43.1612340Z 
2025-02-25T14:23:43.1612410Z     @wraps(func)
2025-02-25T14:23:43.1612480Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1612550Z         with self._recreate_cm():
2025-02-25T14:23:43.1612610Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1612680Z E           AssertionError: 
2025-02-25T14:23:43.1612770Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:23:43.1612820Z E           
2025-02-25T14:23:43.1612910Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:23:43.1612990Z E           Max absolute difference: 2.00640487e-05
2025-02-25T14:23:43.1613070Z E           Max relative difference: 2.06329455
2025-02-25T14:23:43.1613200Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:23:43.1613280Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:23:43.1613420Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:23:43.1613500Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:23:43.1613910Z 
2025-02-25T14:23:43.1614100Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1614250Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:23:43.1614610Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:23:43.1615080Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:23:43.1615230Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1615410Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:23:43.1615550Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1615610Z 	
2025-02-25T14:23:43.1615680Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1615740Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1615820Z  ([1mbase.py[0m:546)
2025-02-25T14:23:43.1615950Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1616000Z 	
2025-02-25T14:23:43.1616130Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:23:43.1616260Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1616320Z 	
2025-02-25T14:23:43.1616390Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:23:43.1616460Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:23:43.1616540Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1616620Z  ([1mbase.py[0m:661)
2025-02-25T14:23:43.1616760Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:23:43.1616760Z 
2025-02-25T14:23:43.1616760Z 
2025-02-25T14:23:43.1616950Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-25T14:23:43.1616950Z 
2025-02-25T14:23:43.1617140Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-25T14:23:43.1617150Z 
2025-02-25T14:23:43.1617350Z Packets:   █████▍                                                                          6809/100000 [00:00<00:01, 68060.69it/s][A
2025-02-25T14:23:43.1617360Z 
2025-02-25T14:23:43.1617560Z Packets:   █████████████▏                                                                  16482/100000 [00:00<00:00, 84920.98it/s][A
2025-02-25T14:23:43.1617580Z 
2025-02-25T14:23:43.1617790Z Packets:   ██████████████████████▌                                                         28205/100000 [00:00<00:00, 99664.67it/s][A
2025-02-25T14:23:43.1617790Z 
2025-02-25T14:23:43.1618090Z Packets:   █████████████████████████████████                                               41387/100000 [00:00<00:00, 112357.46it/s][A
2025-02-25T14:23:43.1618090Z 
2025-02-25T14:23:43.1618320Z Packets:   ██████████████████████████████████████████                                      52623/100000 [00:00<00:00, 106082.51it/s][A
2025-02-25T14:23:43.1618320Z 
2025-02-25T14:23:43.1618550Z Packets:   ███████████████████████████████████████████████████                             63756/100000 [00:00<00:00, 107796.62it/s][A
2025-02-25T14:23:43.1618560Z 
2025-02-25T14:23:43.1618790Z Packets:   ████████████████████████████████████████████████████████████                    75128/100000 [00:00<00:00, 109663.22it/s][A
2025-02-25T14:23:43.1618870Z 
2025-02-25T14:23:43.1619120Z Packets:   ███████████████████████████████████████████████████████████████████████         88808/100000 [00:00<00:00, 118146.96it/s][A
2025-02-25T14:23:43.1619250Z Iterations:                                                                                45/? [09:30<00:00,  5.13s/it]
2025-02-25T14:23:43.1619260Z 
2025-02-25T14:23:43.1619530Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 118146.96it/s][A
2025-02-25T14:23:43.1619660Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:23:43.1620060Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:23:43.1620320Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:23:43.1620410Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:23:43.1620500Z 	Simulation finished in 0 iterations 
2025-02-25T14:23:43.1620560Z 	Simulation took 0.00 s
2025-02-25T14:23:43.1620560Z 
2025-02-25T14:23:43.1620650Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:23:43.1620720Z 	Starting iteration 1 of 1
2025-02-25T14:23:43.1620800Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:23:43.1620880Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:23:43.1620960Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:23:43.1621040Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:23:43.1621220Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-25T14:23:43.1621230Z 
2025-02-25T14:23:43.1621440Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf74ce0>
2025-02-25T14:23:43.1621660Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1621890Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-25T14:23:43.1621950Z attribute = 'plot_data'
2025-02-25T14:23:43.1621950Z 
2025-02-25T14:23:43.1622020Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1622070Z         "attribute",
2025-02-25T14:23:43.1622120Z         [
2025-02-25T14:23:43.1622180Z             "plot_data",
2025-02-25T14:23:43.1622240Z             "plot_colors",
2025-02-25T14:23:43.1622290Z             "new_bin_edges",
2025-02-25T14:23:43.1622340Z         ],
2025-02-25T14:23:43.1622390Z     )
2025-02-25T14:23:43.1622450Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1622500Z         self,
2025-02-25T14:23:43.1622570Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1622620Z         request,
2025-02-25T14:23:43.1622670Z         attribute,
2025-02-25T14:23:43.1622720Z     ):
2025-02-25T14:23:43.1622770Z         """
2025-02-25T14:23:43.1622870Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1622930Z     
2025-02-25T14:23:43.1622980Z         Parameters:
2025-02-25T14:23:43.1623040Z         -----------
2025-02-25T14:23:43.1623180Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1623260Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1623390Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1623440Z         """
2025-02-25T14:23:43.1623520Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1623630Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1623760Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1623890Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1624020Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1624120Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1624270Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1624370Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1624380Z 
2025-02-25T14:23:43.1624490Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1624580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1624590Z 
2025-02-25T14:23:43.1624960Z args = (<function assert_allclose.<locals>.compare at 0x16402f560>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:23:43.1625060Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:23:43.1625310Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1625310Z 
2025-02-25T14:23:43.1625370Z     @wraps(func)
2025-02-25T14:23:43.1625430Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1625500Z         with self._recreate_cm():
2025-02-25T14:23:43.1625570Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1625630Z E           AssertionError: 
2025-02-25T14:23:43.1625720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1625760Z E           
2025-02-25T14:23:43.1625840Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:23:43.1625950Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.1626050Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.1626150Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.1626280Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.1626370Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.1626470Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.1626480Z 
2025-02-25T14:23:43.1626640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1626770Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1626960Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1627160Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1627290Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1627540Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1627730Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-25T14:23:43.1627730Z 
2025-02-25T14:23:43.1627940Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf75160>
2025-02-25T14:23:43.1628150Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1628380Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-25T14:23:43.1628440Z attribute = 'plot_data'
2025-02-25T14:23:43.1628440Z 
2025-02-25T14:23:43.1628520Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1628580Z         "attribute",
2025-02-25T14:23:43.1628630Z         [
2025-02-25T14:23:43.1628680Z             "plot_data",
2025-02-25T14:23:43.1628740Z             "plot_colors",
2025-02-25T14:23:43.1628850Z             "new_bin_edges",
2025-02-25T14:23:43.1628920Z         ],
2025-02-25T14:23:43.1628970Z     )
2025-02-25T14:23:43.1629040Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1629100Z         self,
2025-02-25T14:23:43.1629160Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1629220Z         request,
2025-02-25T14:23:43.1630340Z         attribute,
2025-02-25T14:23:43.1630480Z     ):
2025-02-25T14:23:43.1630530Z         """
2025-02-25T14:23:43.1630950Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1631000Z     
2025-02-25T14:23:43.1631050Z         Parameters:
2025-02-25T14:23:43.1631110Z         -----------
2025-02-25T14:23:43.1631260Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1631330Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1631460Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1631530Z         """
2025-02-25T14:23:43.1631620Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1631750Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1631970Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1632110Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1632220Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1632340Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1632430Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1632550Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1632560Z 
2025-02-25T14:23:43.1632680Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1632770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1632780Z 
2025-02-25T14:23:43.1633150Z args = (<function assert_allclose.<locals>.compare at 0x161a5fd80>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-25T14:23:43.1633270Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:23:43.1633500Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1633510Z 
2025-02-25T14:23:43.1633570Z     @wraps(func)
2025-02-25T14:23:43.1633630Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1633720Z         with self._recreate_cm():
2025-02-25T14:23:43.1633790Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1633860Z E           AssertionError: 
2025-02-25T14:23:43.1633940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1634010Z E           
2025-02-25T14:23:43.1634100Z E           (shapes (558,), (560,) mismatch)
2025-02-25T14:23:43.1634220Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.1634330Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.1634450Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.1634560Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.1634660Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.1634780Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.1634790Z 
2025-02-25T14:23:43.1634950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1635160Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-25T14:23:43.1635170Z 
2025-02-25T14:23:43.1635390Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf753a0>
2025-02-25T14:23:43.1635630Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1635880Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-25T14:23:43.1635970Z attribute = 'plot_data'
2025-02-25T14:23:43.1635980Z 
2025-02-25T14:23:43.1636070Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1636120Z         "attribute",
2025-02-25T14:23:43.1636170Z         [
2025-02-25T14:23:43.1636230Z             "plot_data",
2025-02-25T14:23:43.1636450Z             "plot_colors",
2025-02-25T14:23:43.1636510Z             "new_bin_edges",
2025-02-25T14:23:43.1636580Z         ],
2025-02-25T14:23:43.1636630Z     )
2025-02-25T14:23:43.1636700Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1636740Z         self,
2025-02-25T14:23:43.1636820Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1636870Z         request,
2025-02-25T14:23:43.1636930Z         attribute,
2025-02-25T14:23:43.1636990Z     ):
2025-02-25T14:23:43.1637050Z         """
2025-02-25T14:23:43.1637170Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1637220Z     
2025-02-25T14:23:43.1637270Z         Parameters:
2025-02-25T14:23:43.1637440Z         -----------
2025-02-25T14:23:43.1637600Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1637680Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1637830Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1637890Z         """
2025-02-25T14:23:43.1637990Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1638110Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1638230Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1638380Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1638510Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1638750Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1638850Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1638960Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1638960Z 
2025-02-25T14:23:43.1639070Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1639170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1639180Z 
2025-02-25T14:23:43.1639540Z args = (<function assert_allclose.<locals>.compare at 0x153363ec0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:23:43.1639660Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:23:43.1639860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1639860Z 
2025-02-25T14:23:43.1639910Z     @wraps(func)
2025-02-25T14:23:43.1639980Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1640040Z         with self._recreate_cm():
2025-02-25T14:23:43.1640110Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1640170Z E           AssertionError: 
2025-02-25T14:23:43.1640260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1640310Z E           
2025-02-25T14:23:43.1640390Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:23:43.1640530Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.1640630Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.1640740Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.1640840Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.1640940Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.1641040Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.1641050Z 
2025-02-25T14:23:43.1641200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1641340Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1641670Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1641880Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1642140Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1642390Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1642560Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-25T14:23:43.1642570Z 
2025-02-25T14:23:43.1642780Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf755e0>
2025-02-25T14:23:43.1643000Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1643280Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-25T14:23:43.1643350Z attribute = 'plot_data'
2025-02-25T14:23:43.1643350Z 
2025-02-25T14:23:43.1643420Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1643470Z         "attribute",
2025-02-25T14:23:43.1643520Z         [
2025-02-25T14:23:43.1643580Z             "plot_data",
2025-02-25T14:23:43.1643640Z             "plot_colors",
2025-02-25T14:23:43.1643720Z             "new_bin_edges",
2025-02-25T14:23:43.1643780Z         ],
2025-02-25T14:23:43.1643830Z     )
2025-02-25T14:23:43.1643900Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1643950Z         self,
2025-02-25T14:23:43.1644020Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1644070Z         request,
2025-02-25T14:23:43.1644130Z         attribute,
2025-02-25T14:23:43.1644180Z     ):
2025-02-25T14:23:43.1644250Z         """
2025-02-25T14:23:43.1644360Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1644430Z     
2025-02-25T14:23:43.1644480Z         Parameters:
2025-02-25T14:23:43.1644540Z         -----------
2025-02-25T14:23:43.1644690Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1644770Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1644910Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1644970Z         """
2025-02-25T14:23:43.1645060Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1645170Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1645300Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1645440Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1645580Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1645690Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1645790Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1645890Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1645900Z 
2025-02-25T14:23:43.1646030Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1646150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1646150Z 
2025-02-25T14:23:43.1646490Z args = (<function assert_allclose.<locals>.compare at 0x162362c00>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...210447, 12126.50399598,
2025-02-25T14:23:43.1646630Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:23:43.1646680Z        11042.97481792]))
2025-02-25T14:23:43.1646890Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1646900Z 
2025-02-25T14:23:43.1646970Z     @wraps(func)
2025-02-25T14:23:43.1647040Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1647100Z         with self._recreate_cm():
2025-02-25T14:23:43.1647170Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1647250Z E           AssertionError: 
2025-02-25T14:23:43.1647350Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1647530Z E           
2025-02-25T14:23:43.1647600Z E           (shapes (159,), (153,) mismatch)
2025-02-25T14:23:43.1647720Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.1647820Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.1647930Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.1648050Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.1648170Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.1648320Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.1648420Z 
2025-02-25T14:23:43.1648620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1648810Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-25T14:23:43.1648810Z 
2025-02-25T14:23:43.1649020Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf75850>
2025-02-25T14:23:43.1649270Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1649530Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-25T14:23:43.1649600Z attribute = 'plot_data'
2025-02-25T14:23:43.1649600Z 
2025-02-25T14:23:43.1649670Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1649720Z         "attribute",
2025-02-25T14:23:43.1649790Z         [
2025-02-25T14:23:43.1649850Z             "plot_data",
2025-02-25T14:23:43.1649920Z             "plot_colors",
2025-02-25T14:23:43.1650000Z             "new_bin_edges",
2025-02-25T14:23:43.1650060Z         ],
2025-02-25T14:23:43.1650130Z     )
2025-02-25T14:23:43.1650220Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1650290Z         self,
2025-02-25T14:23:43.1650380Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1650430Z         request,
2025-02-25T14:23:43.1650490Z         attribute,
2025-02-25T14:23:43.1650540Z     ):
2025-02-25T14:23:43.1650610Z         """
2025-02-25T14:23:43.1650750Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1650810Z     
2025-02-25T14:23:43.1650860Z         Parameters:
2025-02-25T14:23:43.1650930Z         -----------
2025-02-25T14:23:43.1651080Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1651160Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1651300Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1651360Z         """
2025-02-25T14:23:43.1651460Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1651580Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1651730Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1651900Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1652020Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1652130Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1652220Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1652320Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1652320Z 
2025-02-25T14:23:43.1652430Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1652530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1652540Z 
2025-02-25T14:23:43.1652950Z args = (<function assert_allclose.<locals>.compare at 0x161a5fd80>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:23:43.1653040Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:23:43.1653350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1653350Z 
2025-02-25T14:23:43.1653410Z     @wraps(func)
2025-02-25T14:23:43.1653480Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1653550Z         with self._recreate_cm():
2025-02-25T14:23:43.1653620Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1653680Z E           AssertionError: 
2025-02-25T14:23:43.1653770Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1653820Z E           
2025-02-25T14:23:43.1653890Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:23:43.1654000Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.1654210Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.1654340Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.1654470Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.1654600Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.1654710Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.1654710Z 
2025-02-25T14:23:43.1654880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1655020Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1655260Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1655470Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1655600Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1655850Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1656040Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-25T14:23:43.1656050Z 
2025-02-25T14:23:43.1656260Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf75a90>
2025-02-25T14:23:43.1656490Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1656710Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-25T14:23:43.1656770Z attribute = 'plot_data'
2025-02-25T14:23:43.1656770Z 
2025-02-25T14:23:43.1656840Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1656890Z         "attribute",
2025-02-25T14:23:43.1656940Z         [
2025-02-25T14:23:43.1657000Z             "plot_data",
2025-02-25T14:23:43.1657060Z             "plot_colors",
2025-02-25T14:23:43.1657120Z             "new_bin_edges",
2025-02-25T14:23:43.1657170Z         ],
2025-02-25T14:23:43.1657210Z     )
2025-02-25T14:23:43.1657280Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1657330Z         self,
2025-02-25T14:23:43.1657400Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1657450Z         request,
2025-02-25T14:23:43.1657500Z         attribute,
2025-02-25T14:23:43.1657550Z     ):
2025-02-25T14:23:43.1657600Z         """
2025-02-25T14:23:43.1657720Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1657760Z     
2025-02-25T14:23:43.1657820Z         Parameters:
2025-02-25T14:23:43.1657870Z         -----------
2025-02-25T14:23:43.1658010Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1658090Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1658220Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1658280Z         """
2025-02-25T14:23:43.1658360Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1658480Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1658770Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1658910Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1659030Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1659130Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1659220Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1659310Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1659320Z 
2025-02-25T14:23:43.1659430Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1659650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1659650Z 
2025-02-25T14:23:43.1660030Z args = (<function assert_allclose.<locals>.compare at 0x1533616c0>, array([13692.75973672, 11362.93720064, 12466.53861691, .....), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-25T14:23:43.1660120Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:23:43.1660320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1660320Z 
2025-02-25T14:23:43.1660380Z     @wraps(func)
2025-02-25T14:23:43.1660440Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1660500Z         with self._recreate_cm():
2025-02-25T14:23:43.1660560Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1660620Z E           AssertionError: 
2025-02-25T14:23:43.1660710Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1660760Z E           
2025-02-25T14:23:43.1660840Z E           (shapes (1466,), (1481,) mismatch)
2025-02-25T14:23:43.1660960Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:23:43.1661040Z E                  11152.962595, 11172.044815])
2025-02-25T14:23:43.1661150Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:23:43.1661220Z E                  11398.237865, 11111.204868])
2025-02-25T14:23:43.1661230Z 
2025-02-25T14:23:43.1661400Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1661540Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1661740Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1662000Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1662130Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1662420Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1662620Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-25T14:23:43.1662630Z 
2025-02-25T14:23:43.1662830Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf75cd0>
2025-02-25T14:23:43.1663060Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1663270Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-25T14:23:43.1663340Z attribute = 'plot_data'
2025-02-25T14:23:43.1663350Z 
2025-02-25T14:23:43.1663410Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1663460Z         "attribute",
2025-02-25T14:23:43.1663510Z         [
2025-02-25T14:23:43.1663560Z             "plot_data",
2025-02-25T14:23:43.1663640Z             "plot_colors",
2025-02-25T14:23:43.1663700Z             "new_bin_edges",
2025-02-25T14:23:43.1663750Z         ],
2025-02-25T14:23:43.1663790Z     )
2025-02-25T14:23:43.1663870Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1663910Z         self,
2025-02-25T14:23:43.1664120Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1664170Z         request,
2025-02-25T14:23:43.1664230Z         attribute,
2025-02-25T14:23:43.1664280Z     ):
2025-02-25T14:23:43.1664320Z         """
2025-02-25T14:23:43.1664430Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1664480Z     
2025-02-25T14:23:43.1664530Z         Parameters:
2025-02-25T14:23:43.1664580Z         -----------
2025-02-25T14:23:43.1664720Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1664800Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1664930Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1665030Z         """
2025-02-25T14:23:43.1665120Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1665240Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1665370Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1665500Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1665620Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1665730Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1665820Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1665910Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1665920Z 
2025-02-25T14:23:43.1666040Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1666170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1666190Z 
2025-02-25T14:23:43.1666560Z args = (<function assert_allclose.<locals>.compare at 0x161ac19e0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:23:43.1666680Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:23:43.1666880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1666890Z 
2025-02-25T14:23:43.1666940Z     @wraps(func)
2025-02-25T14:23:43.1667010Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1667080Z         with self._recreate_cm():
2025-02-25T14:23:43.1667150Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1667210Z E           AssertionError: 
2025-02-25T14:23:43.1667300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1667340Z E           
2025-02-25T14:23:43.1667410Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:23:43.1667530Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.1667630Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.1667730Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.1667840Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.1667940Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.1668040Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.1668050Z 
2025-02-25T14:23:43.1677880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1678510Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1679560Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1680200Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1680570Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1681280Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1682500Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-25T14:23:43.1682510Z 
2025-02-25T14:23:43.1683060Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf75eb0>
2025-02-25T14:23:43.1683680Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>
2025-02-25T14:23:43.1684300Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-25T14:23:43.1684500Z attribute = 'plot_data'
2025-02-25T14:23:43.1684510Z 
2025-02-25T14:23:43.1684710Z     @pytest.mark.parametrize(
2025-02-25T14:23:43.1685150Z         "attribute",
2025-02-25T14:23:43.1685310Z         [
2025-02-25T14:23:43.1685480Z             "plot_data",
2025-02-25T14:23:43.1685660Z             "plot_colors",
2025-02-25T14:23:43.1685840Z             "new_bin_edges",
2025-02-25T14:23:43.1686000Z         ],
2025-02-25T14:23:43.1686140Z     )
2025-02-25T14:23:43.1686350Z     def test_prepare_plot_data(
2025-02-25T14:23:43.1686500Z         self,
2025-02-25T14:23:43.1686710Z         plotter_prepare_plot_data,
2025-02-25T14:23:43.1686860Z         request,
2025-02-25T14:23:43.1687030Z         attribute,
2025-02-25T14:23:43.1687180Z     ):
2025-02-25T14:23:43.1687340Z         """
2025-02-25T14:23:43.1687630Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:23:43.1687780Z     
2025-02-25T14:23:43.1687950Z         Parameters:
2025-02-25T14:23:43.1688110Z         -----------
2025-02-25T14:23:43.1688510Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:23:43.1688720Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1689100Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:23:43.1689250Z         """
2025-02-25T14:23:43.1689480Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1689780Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:23:43.1690130Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:23:43.1690480Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:23:43.1690810Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:23:43.1691090Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:23:43.1691350Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:23:43.1691620Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:23:43.1691630Z 
2025-02-25T14:23:43.1691940Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:23:43.1692200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1692210Z 
2025-02-25T14:23:43.1693030Z args = (<function assert_allclose.<locals>.compare at 0x161ac2e80>, array([12466.53861691, 14269.7609746 , 11910.79400472, 11...210447, 12126.50399598,
2025-02-25T14:23:43.1693330Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:23:43.1693500Z        11042.97481792]))
2025-02-25T14:23:43.1694020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1694030Z 
2025-02-25T14:23:43.1694210Z     @wraps(func)
2025-02-25T14:23:43.1694390Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1694590Z         with self._recreate_cm():
2025-02-25T14:23:43.1694780Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1694970Z E           AssertionError: 
2025-02-25T14:23:43.1695300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1695520Z E           
2025-02-25T14:23:43.1697140Z E           (shapes (379,), (381,) mismatch)
2025-02-25T14:23:43.1697360Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:23:43.1697460Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:23:43.1698000Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:23:43.1698110Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:23:43.1698200Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:23:43.1698320Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:23:43.1698330Z 
2025-02-25T14:23:43.1698500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1698640Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1699170Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1699400Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1699530Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1699810Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1700000Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-25T14:23:43.1700010Z 
2025-02-25T14:23:43.1700220Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf74a10>
2025-02-25T14:23:43.1700470Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x11dcab050>
2025-02-25T14:23:43.1700900Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1701110Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-25T14:23:43.1701110Z 
2025-02-25T14:23:43.1701180Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1701310Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:23:43.1701360Z     ):
2025-02-25T14:23:43.1701410Z         """
2025-02-25T14:23:43.1701520Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1701560Z     
2025-02-25T14:23:43.1701660Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1701710Z     
2025-02-25T14:23:43.1701770Z         Parameters:
2025-02-25T14:23:43.1701820Z         -----------
2025-02-25T14:23:43.1701950Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:23:43.1702080Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:23:43.1702160Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1702210Z         """
2025-02-25T14:23:43.1702280Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:23:43.1702370Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1702500Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:23:43.1702630Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1702700Z             expected_values = expected.get(
2025-02-25T14:23:43.1702770Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1702840Z             ).values.flatten()
2025-02-25T14:23:43.1702950Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:23:43.1703000Z     
2025-02-25T14:23:43.1703100Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1703170Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1703240Z                     expected_values,
2025-02-25T14:23:43.1703300Z                     actual_values,
2025-02-25T14:23:43.1703360Z                     rtol=0.3,
2025-02-25T14:23:43.1703410Z                     atol=3,
2025-02-25T14:23:43.1703460Z                 )
2025-02-25T14:23:43.1703510Z             else:
2025-02-25T14:23:43.1703620Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1703910Z     
2025-02-25T14:23:43.1703990Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:23:43.1704090Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:23:43.1704170Z             if isinstance(data.get_label(), str):
2025-02-25T14:23:43.1704230Z                 assert (
2025-02-25T14:23:43.1704330Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:23:43.1704410Z                     == data.get_label()
2025-02-25T14:23:43.1704470Z                 )
2025-02-25T14:23:43.1704530Z             if isinstance(data, Line2D):
2025-02-25T14:23:43.1704610Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1704800Z                     data.get_xydata(),
2025-02-25T14:23:43.1704920Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:23:43.1704980Z                     rtol=0.3,
2025-02-25T14:23:43.1705050Z                     atol=3,
2025-02-25T14:23:43.1705110Z                 )
2025-02-25T14:23:43.1705110Z 
2025-02-25T14:23:43.1705220Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:23:43.1705320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1705330Z 
2025-02-25T14:23:43.1705520Z args = (<function assert_allclose.<locals>.compare at 0x30c26ae80>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.1705590Z        [1.19e+04, 1.67e+02],...,
2025-02-25T14:23:43.1705650Z        [1.82e+04, 0.00e+00],
2025-02-25T14:23:43.1705700Z        [1.91e+04, 0.00e+00],
2025-02-25T14:23:43.1705750Z        [1.91e+04, 0.00e+00],
2025-02-25T14:23:43.1705810Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:23:43.1706020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1706020Z 
2025-02-25T14:23:43.1706070Z     @wraps(func)
2025-02-25T14:23:43.1706150Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1706210Z         with self._recreate_cm():
2025-02-25T14:23:43.1706280Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1706340Z E           AssertionError: 
2025-02-25T14:23:43.1706430Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1706470Z E           
2025-02-25T14:23:43.1706550Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.1706620Z E           Max absolute difference: 22.
2025-02-25T14:23:43.1706690Z E           Max relative difference: 0.8
2025-02-25T14:23:43.1706760Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.1706820Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:23:43.1706880Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:23:43.1706950Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:23:43.1707020Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:23:43.1707080Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:23:43.1707080Z 
2025-02-25T14:23:43.1707240Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1707380Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1707580Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1707920Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-25T14:23:43.1708050Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1708410Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:23:43.1708590Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-25T14:23:43.1708590Z 
2025-02-25T14:23:43.1708810Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf763f0>
2025-02-25T14:23:43.1709050Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x303e65ac0>
2025-02-25T14:23:43.1709510Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1709720Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-25T14:23:43.1709720Z 
2025-02-25T14:23:43.1709790Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1709930Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:23:43.1709980Z     ):
2025-02-25T14:23:43.1710030Z         """
2025-02-25T14:23:43.1710130Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1710230Z     
2025-02-25T14:23:43.1710340Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1710390Z     
2025-02-25T14:23:43.1710440Z         Parameters:
2025-02-25T14:23:43.1710490Z         -----------
2025-02-25T14:23:43.1710630Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:23:43.1710750Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:23:43.1710830Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1710890Z         """
2025-02-25T14:23:43.1710960Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:23:43.1711050Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1711180Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:23:43.1711300Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1711380Z             expected_values = expected.get(
2025-02-25T14:23:43.1711450Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1711510Z             ).values.flatten()
2025-02-25T14:23:43.1711620Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:23:43.1711660Z     
2025-02-25T14:23:43.1711770Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1711850Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1711910Z                     expected_values,
2025-02-25T14:23:43.1711970Z                     actual_values,
2025-02-25T14:23:43.1712040Z                     rtol=0.3,
2025-02-25T14:23:43.1712090Z                     atol=3,
2025-02-25T14:23:43.1712140Z                 )
2025-02-25T14:23:43.1712190Z             else:
2025-02-25T14:23:43.1712310Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1712360Z     
2025-02-25T14:23:43.1712440Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:23:43.1712550Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:23:43.1712620Z             if isinstance(data.get_label(), str):
2025-02-25T14:23:43.1712680Z                 assert (
2025-02-25T14:23:43.1712780Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:23:43.1712840Z                     == data.get_label()
2025-02-25T14:23:43.1712890Z                 )
2025-02-25T14:23:43.1712970Z             if isinstance(data, Line2D):
2025-02-25T14:23:43.1713040Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1713110Z                     data.get_xydata(),
2025-02-25T14:23:43.1713220Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:23:43.1713280Z                     rtol=0.3,
2025-02-25T14:23:43.1713340Z                     atol=3,
2025-02-25T14:23:43.1713380Z                 )
2025-02-25T14:23:43.1713390Z 
2025-02-25T14:23:43.1713520Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:23:43.1713630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1713640Z 
2025-02-25T14:23:43.1713840Z args = (<function assert_allclose.<locals>.compare at 0x320647ec0>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.1713900Z        [1.19e+04, 1.67e+02],...,
2025-02-25T14:23:43.1714060Z        [1.82e+04, 0.00e+00],
2025-02-25T14:23:43.1714120Z        [1.91e+04, 0.00e+00],
2025-02-25T14:23:43.1714180Z        [1.91e+04, 0.00e+00],
2025-02-25T14:23:43.1714240Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:23:43.1714440Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1714440Z 
2025-02-25T14:23:43.1714500Z     @wraps(func)
2025-02-25T14:23:43.1714560Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1714630Z         with self._recreate_cm():
2025-02-25T14:23:43.1714700Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1714760Z E           AssertionError: 
2025-02-25T14:23:43.1714900Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1714960Z E           
2025-02-25T14:23:43.1715040Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.1715110Z E           Max absolute difference: 22.
2025-02-25T14:23:43.1715180Z E           Max relative difference: 0.8
2025-02-25T14:23:43.1715250Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.1715320Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:23:43.1715380Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:23:43.1715450Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:23:43.1715510Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:23:43.1715570Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:23:43.1715580Z 
2025-02-25T14:23:43.1715740Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1715920Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-25T14:23:43.1715920Z 
2025-02-25T14:23:43.1716130Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf767e0>
2025-02-25T14:23:43.1716390Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x11e12d9a0>
2025-02-25T14:23:43.1716790Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1716990Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-25T14:23:43.1716990Z 
2025-02-25T14:23:43.1717060Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1717190Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:23:43.1717250Z     ):
2025-02-25T14:23:43.1717300Z         """
2025-02-25T14:23:43.1717400Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1717460Z     
2025-02-25T14:23:43.1717560Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1717610Z     
2025-02-25T14:23:43.1717670Z         Parameters:
2025-02-25T14:23:43.1717720Z         -----------
2025-02-25T14:23:43.1717860Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:23:43.1717990Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:23:43.1718060Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1718110Z         """
2025-02-25T14:23:43.1718180Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:23:43.1718270Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1718400Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:23:43.1718530Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1718610Z             expected_values = expected.get(
2025-02-25T14:23:43.1718690Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1718960Z             ).values.flatten()
2025-02-25T14:23:43.1719080Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:23:43.1719130Z     
2025-02-25T14:23:43.1719240Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1719320Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1719490Z                     expected_values,
2025-02-25T14:23:43.1719560Z                     actual_values,
2025-02-25T14:23:43.1719630Z                     rtol=0.3,
2025-02-25T14:23:43.1719680Z                     atol=3,
2025-02-25T14:23:43.1719730Z                 )
2025-02-25T14:23:43.1719730Z 
2025-02-25T14:23:43.1719850Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-25T14:23:43.1719960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1719960Z 
2025-02-25T14:23:43.1720300Z args = (<function assert_allclose.<locals>.compare at 0x30b4047c0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.1720440Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:23:43.1720640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1720640Z 
2025-02-25T14:23:43.1720700Z     @wraps(func)
2025-02-25T14:23:43.1720770Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1720840Z         with self._recreate_cm():
2025-02-25T14:23:43.1720910Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1720970Z E           AssertionError: 
2025-02-25T14:23:43.1721060Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1721110Z E           
2025-02-25T14:23:43.1721180Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.1721260Z E           Max absolute difference: 34
2025-02-25T14:23:43.1721340Z E           Max relative difference: 0.71428571
2025-02-25T14:23:43.1721470Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.1721550Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1721670Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.1721740Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1721750Z 
2025-02-25T14:23:43.1721920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1722050Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1722340Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1722550Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1722680Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1722940Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1723120Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-25T14:23:43.1723120Z 
2025-02-25T14:23:43.1723340Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf768a0>
2025-02-25T14:23:43.1723590Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30fb2ba40>
2025-02-25T14:23:43.1724000Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1724200Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-25T14:23:43.1724200Z 
2025-02-25T14:23:43.1724270Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1724410Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:23:43.1724460Z     ):
2025-02-25T14:23:43.1724510Z         """
2025-02-25T14:23:43.1724620Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1724670Z     
2025-02-25T14:23:43.1724780Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1724830Z     
2025-02-25T14:23:43.1724880Z         Parameters:
2025-02-25T14:23:43.1724940Z         -----------
2025-02-25T14:23:43.1725240Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:23:43.1725360Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:23:43.1725430Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1725490Z         """
2025-02-25T14:23:43.1725570Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:23:43.1725650Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1725790Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:23:43.1725910Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1726100Z             expected_values = expected.get(
2025-02-25T14:23:43.1726160Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1726240Z             ).values.flatten()
2025-02-25T14:23:43.1726350Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:23:43.1726400Z     
2025-02-25T14:23:43.1726510Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1726590Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1726660Z                     expected_values,
2025-02-25T14:23:43.1726720Z                     actual_values,
2025-02-25T14:23:43.1726780Z                     rtol=0.3,
2025-02-25T14:23:43.1726830Z                     atol=3,
2025-02-25T14:23:43.1726890Z                 )
2025-02-25T14:23:43.1726940Z             else:
2025-02-25T14:23:43.1727050Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1727100Z     
2025-02-25T14:23:43.1727190Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:23:43.1727290Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:23:43.1727380Z             if isinstance(data.get_label(), str):
2025-02-25T14:23:43.1727430Z                 assert (
2025-02-25T14:23:43.1727530Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:23:43.1727610Z                     == data.get_label()
2025-02-25T14:23:43.1727660Z                 )
2025-02-25T14:23:43.1727730Z             if isinstance(data, Line2D):
2025-02-25T14:23:43.1727810Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1727870Z                     data.get_xydata(),
2025-02-25T14:23:43.1727990Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:23:43.1728060Z                     rtol=0.3,
2025-02-25T14:23:43.1728110Z                     atol=3,
2025-02-25T14:23:43.1728170Z                 )
2025-02-25T14:23:43.1728180Z 
2025-02-25T14:23:43.1728290Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:23:43.1728390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1728400Z 
2025-02-25T14:23:43.1728600Z args = (<function assert_allclose.<locals>.compare at 0x164002700>, array([[1.10e+04, 2.72e+02],
2025-02-25T14:23:43.1728660Z        [1.19e+04, 2.72e+02],...,
2025-02-25T14:23:43.1728730Z        [1.82e+04, 5.00e+00],
2025-02-25T14:23:43.1728780Z        [1.91e+04, 5.00e+00],
2025-02-25T14:23:43.1728840Z        [1.91e+04, 0.00e+00],
2025-02-25T14:23:43.1728900Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:23:43.1729100Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1729110Z 
2025-02-25T14:23:43.1729160Z     @wraps(func)
2025-02-25T14:23:43.1729220Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1729290Z         with self._recreate_cm():
2025-02-25T14:23:43.1729350Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1729420Z E           AssertionError: 
2025-02-25T14:23:43.1729510Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1729570Z E           
2025-02-25T14:23:43.1729640Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.1729720Z E           Max absolute difference: 34.
2025-02-25T14:23:43.1729790Z E           Max relative difference: 0.65
2025-02-25T14:23:43.1729940Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:23:43.1730010Z E                  [1.19e+04, 2.72e+02],
2025-02-25T14:23:43.1730080Z E                  [1.19e+04, 1.10e+02],...
2025-02-25T14:23:43.1730150Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:23:43.1730220Z E                  [1.19e+04, 3.06e+02],
2025-02-25T14:23:43.1730290Z E                  [1.19e+04, 1.18e+02],...
2025-02-25T14:23:43.1730290Z 
2025-02-25T14:23:43.1730460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1730610Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1730870Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1731150Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1731290Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1731600Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1731770Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-25T14:23:43.1731770Z 
2025-02-25T14:23:43.1731980Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf76d20>
2025-02-25T14:23:43.1732230Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x16207e480>
2025-02-25T14:23:43.1732360Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1732490Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:23:43.1732610Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:23:43.1732770Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1732970Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-25T14:23:43.1732970Z 
2025-02-25T14:23:43.1733050Z     def test_generate_plot_ply(
2025-02-25T14:23:43.1733180Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1733230Z     ):
2025-02-25T14:23:43.1733280Z         """
2025-02-25T14:23:43.1733380Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1733420Z     
2025-02-25T14:23:43.1733520Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1733570Z     
2025-02-25T14:23:43.1733620Z         Parameters:
2025-02-25T14:23:43.1733680Z         ----------
2025-02-25T14:23:43.1733810Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:23:43.1733920Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:23:43.1734000Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1734060Z         """
2025-02-25T14:23:43.1734130Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1734210Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1734360Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1734400Z     
2025-02-25T14:23:43.1734520Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1734590Z             expected_values = expected.get(
2025-02-25T14:23:43.1734670Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1734730Z             ).values.flatten()
2025-02-25T14:23:43.1734840Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:23:43.1734890Z     
2025-02-25T14:23:43.1735000Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1735070Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1735140Z                     expected_values,
2025-02-25T14:23:43.1735200Z                     actual_values,
2025-02-25T14:23:43.1735370Z                     rtol=0.3,
2025-02-25T14:23:43.1735430Z                     atol=3,
2025-02-25T14:23:43.1735480Z                 )
2025-02-25T14:23:43.1735530Z             else:
2025-02-25T14:23:43.1735640Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1735720Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1735810Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1735880Z             if data.stackgroup:
2025-02-25T14:23:43.1735940Z                 assert (
2025-02-25T14:23:43.1736010Z                     data.stackgroup
2025-02-25T14:23:43.1736070Z                     == getattr(
2025-02-25T14:23:43.1736210Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1736300Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1736360Z                     ).decode()
2025-02-25T14:23:43.1736410Z                 )
2025-02-25T14:23:43.1736480Z             if data.name:
2025-02-25T14:23:43.1736550Z                 assert (
2025-02-25T14:23:43.1736600Z                     data.name
2025-02-25T14:23:43.1736670Z                     == getattr(
2025-02-25T14:23:43.1736760Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1736840Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1736900Z                     ).decode()
2025-02-25T14:23:43.1736960Z                 )
2025-02-25T14:23:43.1737030Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1737080Z                 data.x,
2025-02-25T14:23:43.1737180Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:23:43.1737240Z                 rtol=0.3,
2025-02-25T14:23:43.1737300Z                 atol=3,
2025-02-25T14:23:43.1737350Z             )
2025-02-25T14:23:43.1737430Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1737480Z                 data.y,
2025-02-25T14:23:43.1737570Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:23:43.1737640Z                 rtol=0.3,
2025-02-25T14:23:43.1737700Z                 atol=3,
2025-02-25T14:23:43.1737750Z             )
2025-02-25T14:23:43.1737750Z 
2025-02-25T14:23:43.1737870Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:23:43.1737970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1737980Z 
2025-02-25T14:23:43.1738310Z args = (<function assert_allclose.<locals>.compare at 0x164227b00>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.1738380Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:23:43.1738580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1738580Z 
2025-02-25T14:23:43.1738640Z     @wraps(func)
2025-02-25T14:23:43.1738700Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1738770Z         with self._recreate_cm():
2025-02-25T14:23:43.1738840Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1738910Z E           AssertionError: 
2025-02-25T14:23:43.1739000Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1739050Z E           
2025-02-25T14:23:43.1739130Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.1739200Z E           Max absolute difference: 22
2025-02-25T14:23:43.1739270Z E           Max relative difference: 0.8
2025-02-25T14:23:43.1739390Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:23:43.1739460Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.1739580Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.1739660Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.1739660Z 
2025-02-25T14:23:43.1739840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1740040Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1740260Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1740620Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-25T14:23:43.1740750Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1741100Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:23:43.1741330Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-25T14:23:43.1741340Z 
2025-02-25T14:23:43.1741540Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf77800>
2025-02-25T14:23:43.1741790Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x1644fa8d0>
2025-02-25T14:23:43.1741870Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1742000Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:23:43.1742110Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:23:43.1742280Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1742490Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-25T14:23:43.1742490Z 
2025-02-25T14:23:43.1742560Z     def test_generate_plot_ply(
2025-02-25T14:23:43.1742710Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1742760Z     ):
2025-02-25T14:23:43.1742810Z         """
2025-02-25T14:23:43.1742910Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1742950Z     
2025-02-25T14:23:43.1743050Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1743100Z     
2025-02-25T14:23:43.1743160Z         Parameters:
2025-02-25T14:23:43.1743210Z         ----------
2025-02-25T14:23:43.1743340Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:23:43.1743440Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:23:43.1743520Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1743570Z         """
2025-02-25T14:23:43.1743640Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1743720Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1743860Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1743920Z     
2025-02-25T14:23:43.1748210Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1748340Z             expected_values = expected.get(
2025-02-25T14:23:43.1748410Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1748480Z             ).values.flatten()
2025-02-25T14:23:43.1748600Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:23:43.1748640Z     
2025-02-25T14:23:43.1748750Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1748830Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1748900Z                     expected_values,
2025-02-25T14:23:43.1748960Z                     actual_values,
2025-02-25T14:23:43.1749020Z                     rtol=0.3,
2025-02-25T14:23:43.1749070Z                     atol=3,
2025-02-25T14:23:43.1749120Z                 )
2025-02-25T14:23:43.1749170Z             else:
2025-02-25T14:23:43.1749280Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1749360Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1749440Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1749500Z             if data.stackgroup:
2025-02-25T14:23:43.1749810Z                 assert (
2025-02-25T14:23:43.1749870Z                     data.stackgroup
2025-02-25T14:23:43.1749930Z                     == getattr(
2025-02-25T14:23:43.1750020Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1750100Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1750160Z                     ).decode()
2025-02-25T14:23:43.1750210Z                 )
2025-02-25T14:23:43.1750270Z             if data.name:
2025-02-25T14:23:43.1750320Z                 assert (
2025-02-25T14:23:43.1750380Z                     data.name
2025-02-25T14:23:43.1750440Z                     == getattr(
2025-02-25T14:23:43.1750830Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1750920Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1750980Z                     ).decode()
2025-02-25T14:23:43.1751030Z                 )
2025-02-25T14:23:43.1751100Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1751160Z                 data.x,
2025-02-25T14:23:43.1751250Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:23:43.1751310Z                 rtol=0.3,
2025-02-25T14:23:43.1751360Z                 atol=3,
2025-02-25T14:23:43.1751410Z             )
2025-02-25T14:23:43.1751470Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1751530Z                 data.y,
2025-02-25T14:23:43.1751630Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:23:43.1751680Z                 rtol=0.3,
2025-02-25T14:23:43.1751740Z                 atol=3,
2025-02-25T14:23:43.1751790Z             )
2025-02-25T14:23:43.1751790Z 
2025-02-25T14:23:43.1751920Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:23:43.1752020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1752020Z 
2025-02-25T14:23:43.1752340Z args = (<function assert_allclose.<locals>.compare at 0x1642277e0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.1752410Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:23:43.1752610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1752620Z 
2025-02-25T14:23:43.1752690Z     @wraps(func)
2025-02-25T14:23:43.1752750Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1752820Z         with self._recreate_cm():
2025-02-25T14:23:43.1752880Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1752940Z E           AssertionError: 
2025-02-25T14:23:43.1753020Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1753070Z E           
2025-02-25T14:23:43.1753140Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.1753220Z E           Max absolute difference: 22
2025-02-25T14:23:43.1753290Z E           Max relative difference: 0.8
2025-02-25T14:23:43.1753410Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:23:43.1753480Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.1753590Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.1753660Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.1753670Z 
2025-02-25T14:23:43.1753840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1754010Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-25T14:23:43.1754010Z 
2025-02-25T14:23:43.1754210Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf77c50>
2025-02-25T14:23:43.1754480Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x1295f6ff0>
2025-02-25T14:23:43.1754560Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1754680Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:23:43.1754910Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:23:43.1755070Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1755280Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-25T14:23:43.1755280Z 
2025-02-25T14:23:43.1755350Z     def test_generate_plot_ply(
2025-02-25T14:23:43.1755480Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1755530Z     ):
2025-02-25T14:23:43.1755590Z         """
2025-02-25T14:23:43.1755760Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1755810Z     
2025-02-25T14:23:43.1755920Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1755960Z     
2025-02-25T14:23:43.1756020Z         Parameters:
2025-02-25T14:23:43.1756070Z         ----------
2025-02-25T14:23:43.1756210Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:23:43.1756310Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:23:43.1756400Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1756450Z         """
2025-02-25T14:23:43.1756520Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1756610Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1756750Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1756800Z     
2025-02-25T14:23:43.1756920Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1757010Z             expected_values = expected.get(
2025-02-25T14:23:43.1757070Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1757130Z             ).values.flatten()
2025-02-25T14:23:43.1757250Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:23:43.1757300Z     
2025-02-25T14:23:43.1757400Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1757480Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1757550Z                     expected_values,
2025-02-25T14:23:43.1757610Z                     actual_values,
2025-02-25T14:23:43.1757680Z                     rtol=0.3,
2025-02-25T14:23:43.1757740Z                     atol=3,
2025-02-25T14:23:43.1757800Z                 )
2025-02-25T14:23:43.1757810Z 
2025-02-25T14:23:43.1757930Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-25T14:23:43.1758030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1758040Z 
2025-02-25T14:23:43.1758360Z args = (<function assert_allclose.<locals>.compare at 0x164226fc0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.1758430Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:23:43.1758630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1758640Z 
2025-02-25T14:23:43.1758690Z     @wraps(func)
2025-02-25T14:23:43.1758750Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1758810Z         with self._recreate_cm():
2025-02-25T14:23:43.1758880Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1759080Z E           AssertionError: 
2025-02-25T14:23:43.1759160Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1759210Z E           
2025-02-25T14:23:43.1759280Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.1759350Z E           Max absolute difference: 34
2025-02-25T14:23:43.1759430Z E           Max relative difference: 0.71428571
2025-02-25T14:23:43.1759540Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.1759620Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1759830Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.1759910Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1759910Z 
2025-02-25T14:23:43.1760080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1760210Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1760560Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1760760Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1760890Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1761210Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1761390Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-25T14:23:43.1761400Z 
2025-02-25T14:23:43.1761610Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bf77d10>
2025-02-25T14:23:43.1761850Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x1765af3b0>
2025-02-25T14:23:43.1761930Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1762050Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:23:43.1762160Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:23:43.1762320Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x30599d4f0>)
2025-02-25T14:23:43.1762510Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-25T14:23:43.1762520Z 
2025-02-25T14:23:43.1762590Z     def test_generate_plot_ply(
2025-02-25T14:23:43.1762720Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1762780Z     ):
2025-02-25T14:23:43.1762830Z         """
2025-02-25T14:23:43.1762930Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:23:43.1762980Z     
2025-02-25T14:23:43.1763080Z         Compares generated plot data with regression data.
2025-02-25T14:23:43.1763120Z     
2025-02-25T14:23:43.1763180Z         Parameters:
2025-02-25T14:23:43.1763230Z         ----------
2025-02-25T14:23:43.1763360Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:23:43.1763460Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:23:43.1763540Z         request: Pytest's request fixture.
2025-02-25T14:23:43.1763590Z         """
2025-02-25T14:23:43.1763670Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1763750Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1763890Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1763940Z     
2025-02-25T14:23:43.1764050Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:23:43.1764130Z             expected_values = expected.get(
2025-02-25T14:23:43.1764190Z                 "plot_data_hdf/" + item
2025-02-25T14:23:43.1764250Z             ).values.flatten()
2025-02-25T14:23:43.1764370Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:23:43.1764410Z     
2025-02-25T14:23:43.1764520Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:23:43.1764590Z                 np.testing.assert_allclose(
2025-02-25T14:23:43.1764650Z                     expected_values,
2025-02-25T14:23:43.1764710Z                     actual_values,
2025-02-25T14:23:43.1764770Z                     rtol=0.3,
2025-02-25T14:23:43.1764830Z                     atol=3,
2025-02-25T14:23:43.1764880Z                 )
2025-02-25T14:23:43.1764930Z             else:
2025-02-25T14:23:43.1765040Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:23:43.1765120Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1765270Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1765340Z             if data.stackgroup:
2025-02-25T14:23:43.1765400Z                 assert (
2025-02-25T14:23:43.1765470Z                     data.stackgroup
2025-02-25T14:23:43.1765520Z                     == getattr(
2025-02-25T14:23:43.1765600Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1765680Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1765740Z                     ).decode()
2025-02-25T14:23:43.1765790Z                 )
2025-02-25T14:23:43.1765840Z             if data.name:
2025-02-25T14:23:43.1765940Z                 assert (
2025-02-25T14:23:43.1766010Z                     data.name
2025-02-25T14:23:43.1766060Z                     == getattr(
2025-02-25T14:23:43.1766140Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1766220Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1766270Z                     ).decode()
2025-02-25T14:23:43.1766330Z                 )
2025-02-25T14:23:43.1766400Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1766450Z                 data.x,
2025-02-25T14:23:43.1766540Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:23:43.1766590Z                 rtol=0.3,
2025-02-25T14:23:43.1766650Z                 atol=3,
2025-02-25T14:23:43.1766700Z             )
2025-02-25T14:23:43.1766770Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1766820Z                 data.y,
2025-02-25T14:23:43.1766910Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:23:43.1766970Z                 rtol=0.3,
2025-02-25T14:23:43.1767020Z                 atol=3,
2025-02-25T14:23:43.1767070Z             )
2025-02-25T14:23:43.1767070Z 
2025-02-25T14:23:43.1767180Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:23:43.1767280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1767280Z 
2025-02-25T14:23:43.1767610Z args = (<function assert_allclose.<locals>.compare at 0x1642265c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.1767670Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:23:43.1767870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:23:43.1767870Z 
2025-02-25T14:23:43.1767930Z     @wraps(func)
2025-02-25T14:23:43.1767990Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1768060Z         with self._recreate_cm():
2025-02-25T14:23:43.1768130Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1768200Z E           AssertionError: 
2025-02-25T14:23:43.1768270Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.1768330Z E           
2025-02-25T14:23:43.1768400Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.1768470Z E           Max absolute difference: 34
2025-02-25T14:23:43.1768540Z E           Max relative difference: 0.65
2025-02-25T14:23:43.1768660Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.1768730Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1768840Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.1768910Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.1768920Z 
2025-02-25T14:23:43.1769070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1769210Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:23:43.1769400Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:23:43.1769670Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:23:43.1769910Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:23:43.1770190Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:23:43.1770370Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-25T14:23:43.1770380Z 
2025-02-25T14:23:43.1770590Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf57620>
2025-02-25T14:23:43.1770830Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1771170Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31174e930>
2025-02-25T14:23:43.1771400Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-25T14:23:43.1771410Z 
2025-02-25T14:23:43.1771480Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1771530Z         self,
2025-02-25T14:23:43.1771600Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1771670Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1771720Z         request,
2025-02-25T14:23:43.1771760Z     ):
2025-02-25T14:23:43.1771850Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1771990Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1772060Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1772200Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1772270Z             plot_object = getattr(
2025-02-25T14:23:43.1772370Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1772420Z             )
2025-02-25T14:23:43.1772500Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1772630Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1772720Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1772790Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1772900Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1772940Z                 )
2025-02-25T14:23:43.1772950Z 
2025-02-25T14:23:43.1773060Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1773160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1773160Z 
2025-02-25T14:23:43.1773530Z args = (<function assert_allclose.<locals>.compare at 0x177340c20>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:23:43.1773610Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1773830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1773840Z 
2025-02-25T14:23:43.1773900Z     @wraps(func)
2025-02-25T14:23:43.1773960Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1774030Z         with self._recreate_cm():
2025-02-25T14:23:43.1774090Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1774150Z E           AssertionError: 
2025-02-25T14:23:43.1774240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1774290Z E           
2025-02-25T14:23:43.1774370Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1774440Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.1774520Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1774640Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1774710Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1774830Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1774980Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1774980Z 
2025-02-25T14:23:43.1775160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1775330Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-25T14:23:43.1775340Z 
2025-02-25T14:23:43.1775550Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf57d70>
2025-02-25T14:23:43.1775790Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1776050Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x301b80230>
2025-02-25T14:23:43.1776320Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-25T14:23:43.1776330Z 
2025-02-25T14:23:43.1776400Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1776450Z         self,
2025-02-25T14:23:43.1776520Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1776590Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1776640Z         request,
2025-02-25T14:23:43.1776680Z     ):
2025-02-25T14:23:43.1776760Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1776910Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1776970Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1777110Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1777180Z             plot_object = getattr(
2025-02-25T14:23:43.1777290Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1777340Z             )
2025-02-25T14:23:43.1777420Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1777560Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1777640Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1777720Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1777820Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1777870Z                 )
2025-02-25T14:23:43.1777870Z 
2025-02-25T14:23:43.1777980Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1778080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1778080Z 
2025-02-25T14:23:43.1778440Z args = (<function assert_allclose.<locals>.compare at 0x1773400e0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:23:43.1778530Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1778730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1778730Z 
2025-02-25T14:23:43.1778790Z     @wraps(func)
2025-02-25T14:23:43.1778850Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1778910Z         with self._recreate_cm():
2025-02-25T14:23:43.1778970Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1779030Z E           AssertionError: 
2025-02-25T14:23:43.1779120Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1779170Z E           
2025-02-25T14:23:43.1779240Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1779320Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.1779390Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1779520Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1779580Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1779710Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1779770Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1779820Z 
2025-02-25T14:23:43.1779990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1780170Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-25T14:23:43.1780170Z 
2025-02-25T14:23:43.1780380Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11beff710>
2025-02-25T14:23:43.1780620Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1780880Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x301b82e70>
2025-02-25T14:23:43.1781160Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-25T14:23:43.1781160Z 
2025-02-25T14:23:43.1781240Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1781290Z         self,
2025-02-25T14:23:43.1781360Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1781430Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1781480Z         request,
2025-02-25T14:23:43.1781520Z     ):
2025-02-25T14:23:43.1781610Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1781750Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1781820Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1781960Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1782030Z             plot_object = getattr(
2025-02-25T14:23:43.1782130Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1782180Z             )
2025-02-25T14:23:43.1782260Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1782390Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1782480Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1782550Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1782650Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1782700Z                 )
2025-02-25T14:23:43.1782700Z 
2025-02-25T14:23:43.1782820Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1782910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1782910Z 
2025-02-25T14:23:43.1783290Z args = (<function assert_allclose.<locals>.compare at 0x177340220>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:23:43.1783370Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1783570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1783570Z 
2025-02-25T14:23:43.1783620Z     @wraps(func)
2025-02-25T14:23:43.1783680Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1783750Z         with self._recreate_cm():
2025-02-25T14:23:43.1783820Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1783880Z E           AssertionError: 
2025-02-25T14:23:43.1783970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1784020Z E           
2025-02-25T14:23:43.1784090Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1784170Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.1784250Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1784370Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1784440Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1784560Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1784640Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1784640Z 
2025-02-25T14:23:43.1784800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1785030Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-25T14:23:43.1785030Z 
2025-02-25T14:23:43.1785240Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd6d0>
2025-02-25T14:23:43.1785480Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1785740Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1645719a0>
2025-02-25T14:23:43.1785960Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-25T14:23:43.1786000Z 
2025-02-25T14:23:43.1786080Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1786130Z         self,
2025-02-25T14:23:43.1786210Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1786270Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1786320Z         request,
2025-02-25T14:23:43.1786370Z     ):
2025-02-25T14:23:43.1786450Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1786600Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1786670Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1786890Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1787000Z             plot_object = getattr(
2025-02-25T14:23:43.1787110Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1787160Z             )
2025-02-25T14:23:43.1787240Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1787380Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1787460Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1787540Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1787640Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1787690Z                 )
2025-02-25T14:23:43.1787690Z 
2025-02-25T14:23:43.1787810Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1787900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1787900Z 
2025-02-25T14:23:43.1788260Z args = (<function assert_allclose.<locals>.compare at 0x177250400>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:23:43.1788340Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1788540Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1788540Z 
2025-02-25T14:23:43.1788590Z     @wraps(func)
2025-02-25T14:23:43.1788650Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1788720Z         with self._recreate_cm():
2025-02-25T14:23:43.1788780Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1788850Z E           AssertionError: 
2025-02-25T14:23:43.1788930Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1788980Z E           
2025-02-25T14:23:43.1789060Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1789130Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.1789210Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1789330Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1789400Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1789510Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1789590Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1789590Z 
2025-02-25T14:23:43.1789760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1789940Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-25T14:23:43.1790190Z 
2025-02-25T14:23:43.1790410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd670>
2025-02-25T14:23:43.1790650Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1790910Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12951d910>
2025-02-25T14:23:43.1791140Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-25T14:23:43.1791140Z 
2025-02-25T14:23:43.1791210Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1791400Z         self,
2025-02-25T14:23:43.1791480Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1791550Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1791600Z         request,
2025-02-25T14:23:43.1791640Z     ):
2025-02-25T14:23:43.1791720Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1791880Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1791940Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1792090Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1792150Z             plot_object = getattr(
2025-02-25T14:23:43.1792250Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1792300Z             )
2025-02-25T14:23:43.1792380Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1792510Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1792590Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1792670Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1792770Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1792820Z                 )
2025-02-25T14:23:43.1792820Z 
2025-02-25T14:23:43.1792940Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1793030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1793040Z 
2025-02-25T14:23:43.1793400Z args = (<function assert_allclose.<locals>.compare at 0x177253380>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:23:43.1793490Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1793690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1793690Z 
2025-02-25T14:23:43.1793740Z     @wraps(func)
2025-02-25T14:23:43.1793810Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1793870Z         with self._recreate_cm():
2025-02-25T14:23:43.1793930Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1793990Z E           AssertionError: 
2025-02-25T14:23:43.1794080Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1794130Z E           
2025-02-25T14:23:43.1794210Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1794290Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.1794360Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1794490Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1794560Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1794680Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1794750Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1794750Z 
2025-02-25T14:23:43.1794920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1795100Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-25T14:23:43.1795100Z 
2025-02-25T14:23:43.1795370Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc050>
2025-02-25T14:23:43.1795620Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1795880Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31106fa10>
2025-02-25T14:23:43.1796110Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-25T14:23:43.1796110Z 
2025-02-25T14:23:43.1796180Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1796230Z         self,
2025-02-25T14:23:43.1796310Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1796420Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1796470Z         request,
2025-02-25T14:23:43.1796510Z     ):
2025-02-25T14:23:43.1796600Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1796740Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1796810Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1796960Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1797030Z             plot_object = getattr(
2025-02-25T14:23:43.1797130Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1797180Z             )
2025-02-25T14:23:43.1797260Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1797390Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1797470Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1797550Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1797660Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1797700Z                 )
2025-02-25T14:23:43.1797710Z 
2025-02-25T14:23:43.1797820Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1797910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1797920Z 
2025-02-25T14:23:43.1798280Z args = (<function assert_allclose.<locals>.compare at 0x177253c40>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:23:43.1798360Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1798560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1798560Z 
2025-02-25T14:23:43.1798620Z     @wraps(func)
2025-02-25T14:23:43.1798680Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1798750Z         with self._recreate_cm():
2025-02-25T14:23:43.1798820Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1798880Z E           AssertionError: 
2025-02-25T14:23:43.1798960Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1799140Z E           
2025-02-25T14:23:43.1799240Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1799310Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.1799390Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1799510Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1799580Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1799700Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1799770Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1799770Z 
2025-02-25T14:23:43.1799960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1800160Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-25T14:23:43.1800160Z 
2025-02-25T14:23:43.1800370Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc110>
2025-02-25T14:23:43.1800780Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1801040Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x129691940>
2025-02-25T14:23:43.1805080Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-25T14:23:43.1805110Z 
2025-02-25T14:23:43.1805200Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1805250Z         self,
2025-02-25T14:23:43.1805320Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1805390Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1805650Z         request,
2025-02-25T14:23:43.1805700Z     ):
2025-02-25T14:23:43.1805780Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1805940Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1806000Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1806140Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1806210Z             plot_object = getattr(
2025-02-25T14:23:43.1806310Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1806360Z             )
2025-02-25T14:23:43.1806430Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1806570Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1806650Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1806730Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1806840Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1806890Z                 )
2025-02-25T14:23:43.1806890Z 
2025-02-25T14:23:43.1807010Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1807110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1807120Z 
2025-02-25T14:23:43.1807500Z args = (<function assert_allclose.<locals>.compare at 0x177253100>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:23:43.1807580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1807790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1807790Z 
2025-02-25T14:23:43.1807850Z     @wraps(func)
2025-02-25T14:23:43.1807920Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1807980Z         with self._recreate_cm():
2025-02-25T14:23:43.1808050Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1808120Z E           AssertionError: 
2025-02-25T14:23:43.1808210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1808260Z E           
2025-02-25T14:23:43.1808340Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1808420Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.1808500Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1808630Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1808700Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1808820Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1808890Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1808890Z 
2025-02-25T14:23:43.1809060Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1809250Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-25T14:23:43.1809260Z 
2025-02-25T14:23:43.1809480Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc1d0>
2025-02-25T14:23:43.1809740Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1810090Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11d27a690>
2025-02-25T14:23:43.1810350Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-25T14:23:43.1810350Z 
2025-02-25T14:23:43.1810430Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1810480Z         self,
2025-02-25T14:23:43.1810560Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1810620Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1810680Z         request,
2025-02-25T14:23:43.1810720Z     ):
2025-02-25T14:23:43.1810810Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1811060Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1811130Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1811280Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1811360Z             plot_object = getattr(
2025-02-25T14:23:43.1811470Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1811510Z             )
2025-02-25T14:23:43.1811600Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1811730Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1811820Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1811890Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1812000Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1812050Z                 )
2025-02-25T14:23:43.1812050Z 
2025-02-25T14:23:43.1812180Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1812270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1812280Z 
2025-02-25T14:23:43.1812660Z args = (<function assert_allclose.<locals>.compare at 0x177252f20>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:23:43.1812750Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1812980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1812990Z 
2025-02-25T14:23:43.1813050Z     @wraps(func)
2025-02-25T14:23:43.1813120Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1813190Z         with self._recreate_cm():
2025-02-25T14:23:43.1813260Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1813320Z E           AssertionError: 
2025-02-25T14:23:43.1813420Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1813470Z E           
2025-02-25T14:23:43.1813550Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1813630Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.1813710Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1813840Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1813910Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1814030Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.1814110Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1814110Z 
2025-02-25T14:23:43.1814280Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1814460Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-25T14:23:43.1814460Z 
2025-02-25T14:23:43.1814690Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc290>
2025-02-25T14:23:43.1814940Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1815200Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11d2790a0>
2025-02-25T14:23:43.1815620Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-25T14:23:43.1815620Z 
2025-02-25T14:23:43.1815710Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1815760Z         self,
2025-02-25T14:23:43.1815830Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1815900Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1815950Z         request,
2025-02-25T14:23:43.1816000Z     ):
2025-02-25T14:23:43.1816090Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1816250Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1816590Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1816740Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1816810Z             plot_object = getattr(
2025-02-25T14:23:43.1816920Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1816970Z             )
2025-02-25T14:23:43.1817050Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1817180Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1817270Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1817350Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1817450Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1817510Z                 )
2025-02-25T14:23:43.1817510Z 
2025-02-25T14:23:43.1817640Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1817750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1817750Z 
2025-02-25T14:23:43.1818130Z args = (<function assert_allclose.<locals>.compare at 0x177342160>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:23:43.1818220Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1818440Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1818440Z 
2025-02-25T14:23:43.1818490Z     @wraps(func)
2025-02-25T14:23:43.1818560Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1818630Z         with self._recreate_cm():
2025-02-25T14:23:43.1818700Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1818760Z E           AssertionError: 
2025-02-25T14:23:43.1818850Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1818900Z E           
2025-02-25T14:23:43.1818990Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1819070Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.1819140Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1819270Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1819340Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1819460Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1819530Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1819530Z 
2025-02-25T14:23:43.1819700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1819880Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-25T14:23:43.1819890Z 
2025-02-25T14:23:43.1820090Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc380>
2025-02-25T14:23:43.1820340Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1820610Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1295ba900>
2025-02-25T14:23:43.1820940Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-25T14:23:43.1820940Z 
2025-02-25T14:23:43.1821020Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1821070Z         self,
2025-02-25T14:23:43.1821150Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1821220Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1821270Z         request,
2025-02-25T14:23:43.1821320Z     ):
2025-02-25T14:23:43.1821400Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1821550Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1821620Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1821810Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1821880Z             plot_object = getattr(
2025-02-25T14:23:43.1821980Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1822030Z             )
2025-02-25T14:23:43.1822120Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1822250Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1822340Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1822410Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1822530Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1822580Z                 )
2025-02-25T14:23:43.1822580Z 
2025-02-25T14:23:43.1822700Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1822790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1822800Z 
2025-02-25T14:23:43.1823170Z args = (<function assert_allclose.<locals>.compare at 0x177250040>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:23:43.1823260Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1823460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1823470Z 
2025-02-25T14:23:43.1823520Z     @wraps(func)
2025-02-25T14:23:43.1823580Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1823650Z         with self._recreate_cm():
2025-02-25T14:23:43.1823710Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1823780Z E           AssertionError: 
2025-02-25T14:23:43.1823870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1823920Z E           
2025-02-25T14:23:43.1824000Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1824080Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.1824170Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1824300Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1824370Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1824490Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1824560Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1824570Z 
2025-02-25T14:23:43.1824720Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1824900Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-25T14:23:43.1824910Z 
2025-02-25T14:23:43.1825120Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc440>
2025-02-25T14:23:43.1825360Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1825620Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11d278140>
2025-02-25T14:23:43.1825850Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-25T14:23:43.1825900Z 
2025-02-25T14:23:43.1825980Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1826030Z         self,
2025-02-25T14:23:43.1826100Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1826170Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1826220Z         request,
2025-02-25T14:23:43.1826270Z     ):
2025-02-25T14:23:43.1826350Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1826500Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1826570Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1826720Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1826830Z             plot_object = getattr(
2025-02-25T14:23:43.1826940Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1826990Z             )
2025-02-25T14:23:43.1827070Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1827200Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1827290Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1827370Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1827470Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1827530Z                 )
2025-02-25T14:23:43.1827530Z 
2025-02-25T14:23:43.1827650Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1827750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1827750Z 
2025-02-25T14:23:43.1828120Z args = (<function assert_allclose.<locals>.compare at 0x177251a80>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:23:43.1828200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1828400Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1828410Z 
2025-02-25T14:23:43.1828460Z     @wraps(func)
2025-02-25T14:23:43.1828530Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1828590Z         with self._recreate_cm():
2025-02-25T14:23:43.1828670Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1828730Z E           AssertionError: 
2025-02-25T14:23:43.1828820Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1828870Z E           
2025-02-25T14:23:43.1828950Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1829030Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.1829110Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1829240Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1829310Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1829430Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1829500Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1829510Z 
2025-02-25T14:23:43.1829680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1829860Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-25T14:23:43.1829860Z 
2025-02-25T14:23:43.1830090Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc500>
2025-02-25T14:23:43.1830330Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1830600Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x14185ce30>
2025-02-25T14:23:43.1830830Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-25T14:23:43.1830840Z 
2025-02-25T14:23:43.1830910Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1831010Z         self,
2025-02-25T14:23:43.1831090Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1831160Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1831210Z         request,
2025-02-25T14:23:43.1831250Z     ):
2025-02-25T14:23:43.1831340Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1831490Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1831550Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1831690Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1831760Z             plot_object = getattr(
2025-02-25T14:23:43.1831910Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1831960Z             )
2025-02-25T14:23:43.1832040Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1832180Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1832270Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1832420Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1832530Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1832580Z                 )
2025-02-25T14:23:43.1832590Z 
2025-02-25T14:23:43.1832710Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1832800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1832800Z 
2025-02-25T14:23:43.1833170Z args = (<function assert_allclose.<locals>.compare at 0x177253880>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:23:43.1833260Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1833460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1833460Z 
2025-02-25T14:23:43.1833520Z     @wraps(func)
2025-02-25T14:23:43.1833580Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1833650Z         with self._recreate_cm():
2025-02-25T14:23:43.1833710Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1833770Z E           AssertionError: 
2025-02-25T14:23:43.1833860Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1833910Z E           
2025-02-25T14:23:43.1833990Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.1834070Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.1834140Z E           Max relative difference: 4.76021355
2025-02-25T14:23:43.1834270Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1834340Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1834460Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1834530Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1834540Z 
2025-02-25T14:23:43.1834700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1834890Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-25T14:23:43.1834890Z 
2025-02-25T14:23:43.1835100Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc5c0>
2025-02-25T14:23:43.1835350Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1835610Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30b8762a0>
2025-02-25T14:23:43.1835840Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-25T14:23:43.1835850Z 
2025-02-25T14:23:43.1835920Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1835970Z         self,
2025-02-25T14:23:43.1836040Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1836240Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1836300Z         request,
2025-02-25T14:23:43.1836350Z     ):
2025-02-25T14:23:43.1836430Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1836580Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1836660Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1836800Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1836870Z             plot_object = getattr(
2025-02-25T14:23:43.1836970Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1837020Z             )
2025-02-25T14:23:43.1837200Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1837330Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1837420Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1837490Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1837600Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1837650Z                 )
2025-02-25T14:23:43.1837660Z 
2025-02-25T14:23:43.1837780Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1837870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1837880Z 
2025-02-25T14:23:43.1838250Z args = (<function assert_allclose.<locals>.compare at 0x177340f40>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:23:43.1838330Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1838530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1838540Z 
2025-02-25T14:23:43.1838590Z     @wraps(func)
2025-02-25T14:23:43.1838650Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1838720Z         with self._recreate_cm():
2025-02-25T14:23:43.1838800Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1838860Z E           AssertionError: 
2025-02-25T14:23:43.1838950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1838990Z E           
2025-02-25T14:23:43.1839080Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1839290Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.1839380Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1839500Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1839570Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1839700Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1839770Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1839770Z 
2025-02-25T14:23:43.1839940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1840130Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-25T14:23:43.1840130Z 
2025-02-25T14:23:43.1840360Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc680>
2025-02-25T14:23:43.1840600Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1840870Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3190559d0>
2025-02-25T14:23:43.1841220Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-25T14:23:43.1841280Z 
2025-02-25T14:23:43.1841360Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1841430Z         self,
2025-02-25T14:23:43.1841510Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1841580Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1841920Z         request,
2025-02-25T14:23:43.1841980Z     ):
2025-02-25T14:23:43.1842060Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1842220Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1842290Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1842440Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1842500Z             plot_object = getattr(
2025-02-25T14:23:43.1842600Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1842650Z             )
2025-02-25T14:23:43.1842730Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1842970Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1843070Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1843160Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1843270Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1843330Z                 )
2025-02-25T14:23:43.1843330Z 
2025-02-25T14:23:43.1843450Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1843550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1843550Z 
2025-02-25T14:23:43.1843920Z args = (<function assert_allclose.<locals>.compare at 0x177342a20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:23:43.1844010Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1844210Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1844220Z 
2025-02-25T14:23:43.1844270Z     @wraps(func)
2025-02-25T14:23:43.1844340Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1844400Z         with self._recreate_cm():
2025-02-25T14:23:43.1844470Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1844530Z E           AssertionError: 
2025-02-25T14:23:43.1844620Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1844670Z E           
2025-02-25T14:23:43.1844740Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1844820Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.1844900Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1845020Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1845080Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1845210Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1845280Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1845290Z 
2025-02-25T14:23:43.1845450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1845630Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-25T14:23:43.1845630Z 
2025-02-25T14:23:43.1845840Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc7a0>
2025-02-25T14:23:43.1846090Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1846340Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1296cd1c0>
2025-02-25T14:23:43.1846570Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-25T14:23:43.1846570Z 
2025-02-25T14:23:43.1846640Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1846690Z         self,
2025-02-25T14:23:43.1846770Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1846830Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1846880Z         request,
2025-02-25T14:23:43.1846930Z     ):
2025-02-25T14:23:43.1847020Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1847250Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1847320Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1847450Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1847520Z             plot_object = getattr(
2025-02-25T14:23:43.1847620Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1847670Z             )
2025-02-25T14:23:43.1847750Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1847880Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1848030Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1848110Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1848220Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1848270Z                 )
2025-02-25T14:23:43.1848270Z 
2025-02-25T14:23:43.1848400Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1848490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1848500Z 
2025-02-25T14:23:43.1848870Z args = (<function assert_allclose.<locals>.compare at 0x177252f20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:23:43.1848950Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1849160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1849170Z 
2025-02-25T14:23:43.1849230Z     @wraps(func)
2025-02-25T14:23:43.1849290Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1849360Z         with self._recreate_cm():
2025-02-25T14:23:43.1849430Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1849500Z E           AssertionError: 
2025-02-25T14:23:43.1849580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1849630Z E           
2025-02-25T14:23:43.1849710Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1849790Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.1849870Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1850000Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1850060Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1850180Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1850260Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1850260Z 
2025-02-25T14:23:43.1850440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1850640Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-25T14:23:43.1850640Z 
2025-02-25T14:23:43.1850860Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befc8c0>
2025-02-25T14:23:43.1851110Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>
2025-02-25T14:23:43.1851360Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x175fc6930>
2025-02-25T14:23:43.1851600Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-25T14:23:43.1851610Z 
2025-02-25T14:23:43.1851680Z     def test_calculate_plotting_data(
2025-02-25T14:23:43.1851730Z         self,
2025-02-25T14:23:43.1851800Z         plotter_calculate_plotting_data,
2025-02-25T14:23:43.1851870Z         calculate_plotting_data_hdf,
2025-02-25T14:23:43.1851930Z         request,
2025-02-25T14:23:43.1851970Z     ):
2025-02-25T14:23:43.1852050Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1852200Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:23:43.1852350Z         group = "plot_data_hdf/"
2025-02-25T14:23:43.1852510Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:23:43.1852570Z             plot_object = getattr(
2025-02-25T14:23:43.1852680Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:23:43.1852720Z             )
2025-02-25T14:23:43.1852810Z             if attribute_type == "attributes_np":
2025-02-25T14:23:43.1852940Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:23:43.1853030Z                     plot_object = plot_object.cgs.value
2025-02-25T14:23:43.1853160Z >               np.testing.assert_allclose(
2025-02-25T14:23:43.1853270Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:23:43.1853320Z                 )
2025-02-25T14:23:43.1853320Z 
2025-02-25T14:23:43.1853430Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:23:43.1853540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1853540Z 
2025-02-25T14:23:43.1853910Z args = (<function assert_allclose.<locals>.compare at 0x177250f40>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:23:43.1854000Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1854200Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1854200Z 
2025-02-25T14:23:43.1854250Z     @wraps(func)
2025-02-25T14:23:43.1854320Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1854380Z         with self._recreate_cm():
2025-02-25T14:23:43.1854460Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1854520Z E           AssertionError: 
2025-02-25T14:23:43.1854600Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1854650Z E           
2025-02-25T14:23:43.1854750Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.1854830Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.1854910Z E           Max relative difference: 178.93768705
2025-02-25T14:23:43.1855030Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1855100Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1855220Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.1855290Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1855290Z 
2025-02-25T14:23:43.1855450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1855630Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-25T14:23:43.1855630Z 
2025-02-25T14:23:43.1855850Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befcc20>
2025-02-25T14:23:43.1856100Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x164ba2120>
2025-02-25T14:23:43.1856180Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1856250Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1856330Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1856610Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1856780Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1856990Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-25T14:23:43.1857000Z 
2025-02-25T14:23:43.1857070Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1857220Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1857260Z     ):
2025-02-25T14:23:43.1857340Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1857420Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1857750Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1857810Z     
2025-02-25T14:23:43.1857900Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1857980Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1858100Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1858200Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1858240Z             )
2025-02-25T14:23:43.1858290Z     
2025-02-25T14:23:43.1858370Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1858550Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1858620Z             if data.stackgroup:
2025-02-25T14:23:43.1858670Z                 assert (
2025-02-25T14:23:43.1858740Z                     data.stackgroup
2025-02-25T14:23:43.1858790Z                     == getattr(
2025-02-25T14:23:43.1858880Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1858960Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1859010Z                     ).decode()
2025-02-25T14:23:43.1859060Z                 )
2025-02-25T14:23:43.1859120Z             if data.name:
2025-02-25T14:23:43.1859170Z                 assert (
2025-02-25T14:23:43.1859230Z                     data.name
2025-02-25T14:23:43.1859280Z                     == getattr(
2025-02-25T14:23:43.1859370Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1859440Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1859500Z                     ).decode()
2025-02-25T14:23:43.1859550Z                 )
2025-02-25T14:23:43.1859620Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1859730Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1859770Z             )
2025-02-25T14:23:43.1859840Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1859950Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1860000Z             )
2025-02-25T14:23:43.1860000Z 
2025-02-25T14:23:43.1860120Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1860220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1860230Z 
2025-02-25T14:23:43.1860610Z args = (<function assert_allclose.<locals>.compare at 0x13093a2a0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:23:43.1860690Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1860900Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1860900Z 
2025-02-25T14:23:43.1860960Z     @wraps(func)
2025-02-25T14:23:43.1861030Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1861090Z         with self._recreate_cm():
2025-02-25T14:23:43.1861160Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1861230Z E           AssertionError: 
2025-02-25T14:23:43.1865510Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1865620Z E           
2025-02-25T14:23:43.1865720Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1865800Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.1865880Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1866000Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1866070Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1866210Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1866270Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1866280Z 
2025-02-25T14:23:43.1866450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1866890Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-25T14:23:43.1866900Z 
2025-02-25T14:23:43.1867110Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befcce0>
2025-02-25T14:23:43.1867370Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x163504a40>
2025-02-25T14:23:43.1867440Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1867510Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1867590Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1867670Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1867920Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1868120Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-25T14:23:43.1868120Z 
2025-02-25T14:23:43.1868190Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1868330Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1868380Z     ):
2025-02-25T14:23:43.1868450Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1868540Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1868680Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1868720Z     
2025-02-25T14:23:43.1868810Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1868880Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1868990Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1869080Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1869130Z             )
2025-02-25T14:23:43.1869180Z     
2025-02-25T14:23:43.1869250Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1869340Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1869400Z             if data.stackgroup:
2025-02-25T14:23:43.1869460Z                 assert (
2025-02-25T14:23:43.1869520Z                     data.stackgroup
2025-02-25T14:23:43.1869570Z                     == getattr(
2025-02-25T14:23:43.1869660Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1869740Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1869790Z                     ).decode()
2025-02-25T14:23:43.1869850Z                 )
2025-02-25T14:23:43.1869910Z             if data.name:
2025-02-25T14:23:43.1869960Z                 assert (
2025-02-25T14:23:43.1870010Z                     data.name
2025-02-25T14:23:43.1870070Z                     == getattr(
2025-02-25T14:23:43.1870150Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1870220Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1870280Z                     ).decode()
2025-02-25T14:23:43.1870330Z                 )
2025-02-25T14:23:43.1870410Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1870510Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1870560Z             )
2025-02-25T14:23:43.1870630Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1870730Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1870770Z             )
2025-02-25T14:23:43.1870770Z 
2025-02-25T14:23:43.1870900Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1870990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1870990Z 
2025-02-25T14:23:43.1871370Z args = (<function assert_allclose.<locals>.compare at 0x177251ee0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:23:43.1871450Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1871710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1871710Z 
2025-02-25T14:23:43.1871760Z     @wraps(func)
2025-02-25T14:23:43.1871820Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1871890Z         with self._recreate_cm():
2025-02-25T14:23:43.1871960Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1872020Z E           AssertionError: 
2025-02-25T14:23:43.1872660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1872970Z E           
2025-02-25T14:23:43.1873200Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1873420Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.1874360Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1874690Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1874880Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1875210Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1875410Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1875420Z 
2025-02-25T14:23:43.1875880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1876350Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-25T14:23:43.1876350Z 
2025-02-25T14:23:43.1876940Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd160>
2025-02-25T14:23:43.1877630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30db6b620>
2025-02-25T14:23:43.1877850Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1878050Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1878290Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1878520Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1879000Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1879810Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-25T14:23:43.1879830Z 
2025-02-25T14:23:43.1880020Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1880410Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1880560Z     ):
2025-02-25T14:23:43.1880780Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1881040Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1881430Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1881590Z     
2025-02-25T14:23:43.1881840Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1882040Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1882360Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1882600Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1882760Z             )
2025-02-25T14:23:43.1882920Z     
2025-02-25T14:23:43.1883140Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1883380Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1883560Z             if data.stackgroup:
2025-02-25T14:23:43.1883730Z                 assert (
2025-02-25T14:23:43.1883930Z                     data.stackgroup
2025-02-25T14:23:43.1884120Z                     == getattr(
2025-02-25T14:23:43.1884360Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1884570Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1884750Z                     ).decode()
2025-02-25T14:23:43.1884910Z                 )
2025-02-25T14:23:43.1885090Z             if data.name:
2025-02-25T14:23:43.1885270Z                 assert (
2025-02-25T14:23:43.1885490Z                     data.name
2025-02-25T14:23:43.1885660Z                     == getattr(
2025-02-25T14:23:43.1886260Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1886460Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1886630Z                     ).decode()
2025-02-25T14:23:43.1886790Z                 )
2025-02-25T14:23:43.1886990Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1887260Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1887420Z             )
2025-02-25T14:23:43.1887610Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1887890Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1888040Z             )
2025-02-25T14:23:43.1888230Z 
2025-02-25T14:23:43.1888560Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1888820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1888830Z 
2025-02-25T14:23:43.1889830Z args = (<function assert_allclose.<locals>.compare at 0x13093aa20>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:23:43.1890070Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1890600Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1890620Z 
2025-02-25T14:23:43.1890780Z     @wraps(func)
2025-02-25T14:23:43.1890970Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1891160Z         with self._recreate_cm():
2025-02-25T14:23:43.1891350Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1891520Z E           AssertionError: 
2025-02-25T14:23:43.1891760Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1891920Z E           
2025-02-25T14:23:43.1892140Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1892360Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.1892590Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1892910Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1893110Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1893430Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1893640Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1893660Z 
2025-02-25T14:23:43.1894140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1894590Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-25T14:23:43.1894610Z 
2025-02-25T14:23:43.1895200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd220>
2025-02-25T14:23:43.1895880Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x164b6e780>
2025-02-25T14:23:43.1896100Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1896310Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1896530Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1896760Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1897200Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1897750Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-25T14:23:43.1897760Z 
2025-02-25T14:23:43.1897950Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1898330Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1898500Z     ):
2025-02-25T14:23:43.1898730Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1898960Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1899360Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1899530Z     
2025-02-25T14:23:43.1900460Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1900690Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1901000Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1901240Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1901390Z             )
2025-02-25T14:23:43.1901550Z     
2025-02-25T14:23:43.1901760Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1901990Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1902170Z             if data.stackgroup:
2025-02-25T14:23:43.1902340Z                 assert (
2025-02-25T14:23:43.1902830Z                     data.stackgroup
2025-02-25T14:23:43.1903000Z                     == getattr(
2025-02-25T14:23:43.1903240Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1903450Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1903630Z                     ).decode()
2025-02-25T14:23:43.1903790Z                 )
2025-02-25T14:23:43.1903970Z             if data.name:
2025-02-25T14:23:43.1904130Z                 assert (
2025-02-25T14:23:43.1904310Z                     data.name
2025-02-25T14:23:43.1904470Z                     == getattr(
2025-02-25T14:23:43.1904700Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1904890Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1905070Z                     ).decode()
2025-02-25T14:23:43.1905230Z                 )
2025-02-25T14:23:43.1905420Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1905700Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1905860Z             )
2025-02-25T14:23:43.1906080Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1906340Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1906500Z             )
2025-02-25T14:23:43.1906510Z 
2025-02-25T14:23:43.1906840Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1907090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1907100Z 
2025-02-25T14:23:43.1908550Z args = (<function assert_allclose.<locals>.compare at 0x13095fec0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:23:43.1908810Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1909360Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1909370Z 
2025-02-25T14:23:43.1909550Z     @wraps(func)
2025-02-25T14:23:43.1909840Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1912930Z         with self._recreate_cm():
2025-02-25T14:23:43.1913170Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1913350Z E           AssertionError: 
2025-02-25T14:23:43.1913610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1913820Z E           
2025-02-25T14:23:43.1914030Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1914260Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.1914470Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1914820Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1915010Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1915330Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1915520Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1915540Z 
2025-02-25T14:23:43.1916000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1916460Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-25T14:23:43.1916470Z 
2025-02-25T14:23:43.1917030Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf57ad0>
2025-02-25T14:23:43.1918760Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1296bc9b0>
2025-02-25T14:23:43.1918970Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1919170Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1919620Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1919860Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1920310Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1920860Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-25T14:23:43.1921160Z 
2025-02-25T14:23:43.1921370Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1921750Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1921910Z     ):
2025-02-25T14:23:43.1922180Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1922440Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1922820Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1922980Z     
2025-02-25T14:23:43.1923220Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1923440Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1923750Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1924000Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1924160Z             )
2025-02-25T14:23:43.1924320Z     
2025-02-25T14:23:43.1924560Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1924780Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1924980Z             if data.stackgroup:
2025-02-25T14:23:43.1925140Z                 assert (
2025-02-25T14:23:43.1925330Z                     data.stackgroup
2025-02-25T14:23:43.1925510Z                     == getattr(
2025-02-25T14:23:43.1925750Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1925960Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1926140Z                     ).decode()
2025-02-25T14:23:43.1926300Z                 )
2025-02-25T14:23:43.1926470Z             if data.name:
2025-02-25T14:23:43.1926650Z                 assert (
2025-02-25T14:23:43.1926810Z                     data.name
2025-02-25T14:23:43.1927020Z                     == getattr(
2025-02-25T14:23:43.1927270Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1927470Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1927640Z                     ).decode()
2025-02-25T14:23:43.1927800Z                 )
2025-02-25T14:23:43.1928000Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1928290Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1928450Z             )
2025-02-25T14:23:43.1928660Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1928940Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1929100Z             )
2025-02-25T14:23:43.1929100Z 
2025-02-25T14:23:43.1929440Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1929690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1929700Z 
2025-02-25T14:23:43.1930750Z args = (<function assert_allclose.<locals>.compare at 0x13095cd60>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:23:43.1930980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1931530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1931540Z 
2025-02-25T14:23:43.1931720Z     @wraps(func)
2025-02-25T14:23:43.1932500Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1932700Z         with self._recreate_cm():
2025-02-25T14:23:43.1932890Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1933080Z E           AssertionError: 
2025-02-25T14:23:43.1933310Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1933480Z E           
2025-02-25T14:23:43.1933700Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.1933930Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.1934150Z E           Max relative difference: 15766.1580412
2025-02-25T14:23:43.1934480Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1934940Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1935270Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1935460Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1935470Z 
2025-02-25T14:23:43.1936000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1936480Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-25T14:23:43.1936490Z 
2025-02-25T14:23:43.1937060Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf56f30>
2025-02-25T14:23:43.1937750Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x129c0c3b0>
2025-02-25T14:23:43.1937980Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1938160Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1938400Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1938620Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1939070Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1939600Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-25T14:23:43.1939620Z 
2025-02-25T14:23:43.1939810Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1940180Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1940330Z     ):
2025-02-25T14:23:43.1940530Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1940770Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1941160Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1941310Z     
2025-02-25T14:23:43.1941550Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1941760Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1942080Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1942310Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1942470Z             )
2025-02-25T14:23:43.1942610Z     
2025-02-25T14:23:43.1942840Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1943070Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1943260Z             if data.stackgroup:
2025-02-25T14:23:43.1943430Z                 assert (
2025-02-25T14:23:43.1943600Z                     data.stackgroup
2025-02-25T14:23:43.1943770Z                     == getattr(
2025-02-25T14:23:43.1944010Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1944230Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1944390Z                     ).decode()
2025-02-25T14:23:43.1944550Z                 )
2025-02-25T14:23:43.1944720Z             if data.name:
2025-02-25T14:23:43.1944910Z                 assert (
2025-02-25T14:23:43.1945070Z                     data.name
2025-02-25T14:23:43.1945250Z                     == getattr(
2025-02-25T14:23:43.1945470Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1945670Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1946580Z                     ).decode()
2025-02-25T14:23:43.1946730Z                 )
2025-02-25T14:23:43.1946940Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1947210Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1947370Z             )
2025-02-25T14:23:43.1947570Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1947850Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1948000Z             )
2025-02-25T14:23:43.1948010Z 
2025-02-25T14:23:43.1948340Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1948580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1948870Z 
2025-02-25T14:23:43.1949920Z args = (<function assert_allclose.<locals>.compare at 0x13093b240>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:23:43.1950160Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1950700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1950710Z 
2025-02-25T14:23:43.1950880Z     @wraps(func)
2025-02-25T14:23:43.1951060Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1951320Z         with self._recreate_cm():
2025-02-25T14:23:43.1951620Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1951810Z E           AssertionError: 
2025-02-25T14:23:43.1952060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1952210Z E           
2025-02-25T14:23:43.1952440Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.1952680Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.1952900Z E           Max relative difference: 15766.1580412
2025-02-25T14:23:43.1953230Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1953440Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1953760Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1953960Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1953970Z 
2025-02-25T14:23:43.1954420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1954880Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-25T14:23:43.1954890Z 
2025-02-25T14:23:43.1955480Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd3a0>
2025-02-25T14:23:43.1956380Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x164ba3f80>
2025-02-25T14:23:43.1956630Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1956820Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1957050Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1957280Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1957770Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1958340Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-25T14:23:43.1958350Z 
2025-02-25T14:23:43.1958540Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1958920Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1959070Z     ):
2025-02-25T14:23:43.1959290Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1959790Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1960220Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1960370Z     
2025-02-25T14:23:43.1960620Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1960830Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1961190Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1962360Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1962520Z             )
2025-02-25T14:23:43.1962680Z     
2025-02-25T14:23:43.1962900Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1963140Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1963320Z             if data.stackgroup:
2025-02-25T14:23:43.1963500Z                 assert (
2025-02-25T14:23:43.1963680Z                     data.stackgroup
2025-02-25T14:23:43.1963860Z                     == getattr(
2025-02-25T14:23:43.1964090Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1964530Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1964700Z                     ).decode()
2025-02-25T14:23:43.1964890Z                 )
2025-02-25T14:23:43.1965090Z             if data.name:
2025-02-25T14:23:43.1965250Z                 assert (
2025-02-25T14:23:43.1965440Z                     data.name
2025-02-25T14:23:43.1965610Z                     == getattr(
2025-02-25T14:23:43.1965850Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1966060Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1966250Z                     ).decode()
2025-02-25T14:23:43.1966410Z                 )
2025-02-25T14:23:43.1966620Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1966890Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1967060Z             )
2025-02-25T14:23:43.1967260Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1967550Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1967710Z             )
2025-02-25T14:23:43.1967720Z 
2025-02-25T14:23:43.1968050Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1968300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1968320Z 
2025-02-25T14:23:43.1969360Z args = (<function assert_allclose.<locals>.compare at 0x13095f560>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:23:43.1969620Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1970150Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1970160Z 
2025-02-25T14:23:43.1970330Z     @wraps(func)
2025-02-25T14:23:43.1970510Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1970710Z         with self._recreate_cm():
2025-02-25T14:23:43.1970920Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1971100Z E           AssertionError: 
2025-02-25T14:23:43.1971340Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1971500Z E           
2025-02-25T14:23:43.1971730Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.1971960Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.1972590Z E           Max relative difference: 15766.1580412
2025-02-25T14:23:43.1972880Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1972960Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1973090Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1973160Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1973170Z 
2025-02-25T14:23:43.1973350Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1973520Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-25T14:23:43.1973550Z 
2025-02-25T14:23:43.1973770Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd460>
2025-02-25T14:23:43.1974040Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x161ab4bc0>
2025-02-25T14:23:43.1974520Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1974580Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1974670Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1974750Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:23:43.1974920Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1975130Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-25T14:23:43.1975130Z 
2025-02-25T14:23:43.1975190Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1975460Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1975510Z     ):
2025-02-25T14:23:43.1975590Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1975670Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1975820Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1975860Z     
2025-02-25T14:23:43.1975960Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1976040Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1976150Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1976240Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1976280Z             )
2025-02-25T14:23:43.1976340Z     
2025-02-25T14:23:43.1976420Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1976510Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1976570Z             if data.stackgroup:
2025-02-25T14:23:43.1976630Z                 assert (
2025-02-25T14:23:43.1976700Z                     data.stackgroup
2025-02-25T14:23:43.1976760Z                     == getattr(
2025-02-25T14:23:43.1976850Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1976930Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1976990Z                     ).decode()
2025-02-25T14:23:43.1977040Z                 )
2025-02-25T14:23:43.1977100Z             if data.name:
2025-02-25T14:23:43.1977150Z                 assert (
2025-02-25T14:23:43.1977210Z                     data.name
2025-02-25T14:23:43.1977260Z                     == getattr(
2025-02-25T14:23:43.1977350Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1977420Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1977480Z                     ).decode()
2025-02-25T14:23:43.1977530Z                 )
2025-02-25T14:23:43.1977600Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1977700Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1977760Z             )
2025-02-25T14:23:43.1977830Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1977930Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1977980Z             )
2025-02-25T14:23:43.1977990Z 
2025-02-25T14:23:43.1978110Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1978200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1978210Z 
2025-02-25T14:23:43.1978580Z args = (<function assert_allclose.<locals>.compare at 0x13095ea20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:23:43.1978670Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1978870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1978880Z 
2025-02-25T14:23:43.1978930Z     @wraps(func)
2025-02-25T14:23:43.1979000Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1979060Z         with self._recreate_cm():
2025-02-25T14:23:43.1979130Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1979250Z E           AssertionError: 
2025-02-25T14:23:43.1979340Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1979390Z E           
2025-02-25T14:23:43.1979470Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.1979550Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.1979630Z E           Max relative difference: 15766.1580412
2025-02-25T14:23:43.1979760Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1979830Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1979950Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.1980070Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1980070Z 
2025-02-25T14:23:43.1980240Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1980400Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-25T14:23:43.1980410Z 
2025-02-25T14:23:43.1980630Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd520>
2025-02-25T14:23:43.1980880Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1296bd880>
2025-02-25T14:23:43.1980950Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1981020Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1981110Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1981190Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.1981350Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1981560Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-25T14:23:43.1981560Z 
2025-02-25T14:23:43.1981620Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1981760Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1981810Z     ):
2025-02-25T14:23:43.1981880Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1981970Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1982110Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1982160Z     
2025-02-25T14:23:43.1982240Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1982320Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1982430Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1982520Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1982570Z             )
2025-02-25T14:23:43.1982620Z     
2025-02-25T14:23:43.1987470Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1987620Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1987690Z             if data.stackgroup:
2025-02-25T14:23:43.1987750Z                 assert (
2025-02-25T14:23:43.1987820Z                     data.stackgroup
2025-02-25T14:23:43.1987880Z                     == getattr(
2025-02-25T14:23:43.1987970Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1988050Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1988120Z                     ).decode()
2025-02-25T14:23:43.1988170Z                 )
2025-02-25T14:23:43.1988230Z             if data.name:
2025-02-25T14:23:43.1988280Z                 assert (
2025-02-25T14:23:43.1988340Z                     data.name
2025-02-25T14:23:43.1988400Z                     == getattr(
2025-02-25T14:23:43.1988490Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1988570Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1988630Z                     ).decode()
2025-02-25T14:23:43.1988680Z                 )
2025-02-25T14:23:43.1988750Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1989070Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1989120Z             )
2025-02-25T14:23:43.1989190Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1989300Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1989350Z             )
2025-02-25T14:23:43.1989350Z 
2025-02-25T14:23:43.1989480Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1989580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1989580Z 
2025-02-25T14:23:43.1989980Z args = (<function assert_allclose.<locals>.compare at 0x13095e200>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:23:43.1990130Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1990340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1990350Z 
2025-02-25T14:23:43.1990410Z     @wraps(func)
2025-02-25T14:23:43.1990470Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1990550Z         with self._recreate_cm():
2025-02-25T14:23:43.1990620Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1990680Z E           AssertionError: 
2025-02-25T14:23:43.1990770Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1990830Z E           
2025-02-25T14:23:43.1990910Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1990990Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.1991070Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1991200Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1991280Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1991410Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1991490Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1991490Z 
2025-02-25T14:23:43.1991660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1991840Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-25T14:23:43.1991850Z 
2025-02-25T14:23:43.1992070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd790>
2025-02-25T14:23:43.1992330Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x320652180>
2025-02-25T14:23:43.1992400Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1992470Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1992560Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1992650Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.1992820Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1993030Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-25T14:23:43.1993030Z 
2025-02-25T14:23:43.1993110Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1993240Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1993300Z     ):
2025-02-25T14:23:43.1993370Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.1993460Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.1993600Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.1993650Z     
2025-02-25T14:23:43.1993740Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.1993830Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.1993950Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.1994040Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.1994100Z             )
2025-02-25T14:23:43.1994310Z     
2025-02-25T14:23:43.1994400Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.1994480Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.1994550Z             if data.stackgroup:
2025-02-25T14:23:43.1994600Z                 assert (
2025-02-25T14:23:43.1994670Z                     data.stackgroup
2025-02-25T14:23:43.1994730Z                     == getattr(
2025-02-25T14:23:43.1994820Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1994900Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.1994960Z                     ).decode()
2025-02-25T14:23:43.1995120Z                 )
2025-02-25T14:23:43.1995180Z             if data.name:
2025-02-25T14:23:43.1995240Z                 assert (
2025-02-25T14:23:43.1995300Z                     data.name
2025-02-25T14:23:43.1995360Z                     == getattr(
2025-02-25T14:23:43.1995450Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.1995530Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.1995590Z                     ).decode()
2025-02-25T14:23:43.1995640Z                 )
2025-02-25T14:23:43.1995720Z             np.testing.assert_allclose(
2025-02-25T14:23:43.1995820Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.1995870Z             )
2025-02-25T14:23:43.1995940Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.1996040Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.1996090Z             )
2025-02-25T14:23:43.1996090Z 
2025-02-25T14:23:43.1996210Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.1996310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.1996320Z 
2025-02-25T14:23:43.1996700Z args = (<function assert_allclose.<locals>.compare at 0x177253880>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:23:43.1996790Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.1996990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.1997000Z 
2025-02-25T14:23:43.1997050Z     @wraps(func)
2025-02-25T14:23:43.1997110Z     def inner(*args, **kwds):
2025-02-25T14:23:43.1997180Z         with self._recreate_cm():
2025-02-25T14:23:43.1997250Z >           return func(*args, **kwds)
2025-02-25T14:23:43.1997310Z E           AssertionError: 
2025-02-25T14:23:43.1997400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.1997450Z E           
2025-02-25T14:23:43.1997540Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.1997620Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.1997700Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.1997820Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1997900Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1998020Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.1998090Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.1998090Z 
2025-02-25T14:23:43.1998260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.1998430Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-25T14:23:43.1998430Z 
2025-02-25T14:23:43.1998650Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd850>
2025-02-25T14:23:43.1998910Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x177888dd0>
2025-02-25T14:23:43.1998990Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.1999050Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.1999210Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.1999300Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.1999470Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.1999680Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-25T14:23:43.1999680Z 
2025-02-25T14:23:43.1999740Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.1999880Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.1999940Z     ):
2025-02-25T14:23:43.2000020Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2000160Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2000310Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2000360Z     
2025-02-25T14:23:43.2000450Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2000540Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2000650Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2000740Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2000790Z             )
2025-02-25T14:23:43.2000840Z     
2025-02-25T14:23:43.2000920Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2001010Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2001070Z             if data.stackgroup:
2025-02-25T14:23:43.2001130Z                 assert (
2025-02-25T14:23:43.2001190Z                     data.stackgroup
2025-02-25T14:23:43.2001250Z                     == getattr(
2025-02-25T14:23:43.2001340Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2001420Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2001480Z                     ).decode()
2025-02-25T14:23:43.2001530Z                 )
2025-02-25T14:23:43.2001590Z             if data.name:
2025-02-25T14:23:43.2001650Z                 assert (
2025-02-25T14:23:43.2001700Z                     data.name
2025-02-25T14:23:43.2001760Z                     == getattr(
2025-02-25T14:23:43.2001840Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2001910Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2001970Z                     ).decode()
2025-02-25T14:23:43.2002020Z                 )
2025-02-25T14:23:43.2002090Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2002200Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2002250Z             )
2025-02-25T14:23:43.2002330Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2002430Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2002480Z             )
2025-02-25T14:23:43.2002480Z 
2025-02-25T14:23:43.2002600Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2002700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2002710Z 
2025-02-25T14:23:43.2003080Z args = (<function assert_allclose.<locals>.compare at 0x13093a7a0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:23:43.2003170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2003380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2003380Z 
2025-02-25T14:23:43.2003440Z     @wraps(func)
2025-02-25T14:23:43.2003500Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2003570Z         with self._recreate_cm():
2025-02-25T14:23:43.2003640Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2003700Z E           AssertionError: 
2025-02-25T14:23:43.2003790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2003840Z E           
2025-02-25T14:23:43.2003990Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2004070Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2004150Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.2004280Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2004350Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2004480Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2004540Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2004550Z 
2025-02-25T14:23:43.2004720Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2004940Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-25T14:23:43.2004950Z 
2025-02-25T14:23:43.2005160Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd910>
2025-02-25T14:23:43.2005420Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x164753530>
2025-02-25T14:23:43.2005500Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.2005560Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.2005650Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.2005730Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.2005900Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.2006110Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-25T14:23:43.2006110Z 
2025-02-25T14:23:43.2006180Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.2006320Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.2006370Z     ):
2025-02-25T14:23:43.2006440Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2006530Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2006670Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2006720Z     
2025-02-25T14:23:43.2006810Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2006890Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2007010Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2007100Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2007150Z             )
2025-02-25T14:23:43.2007210Z     
2025-02-25T14:23:43.2007290Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2007370Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2007450Z             if data.stackgroup:
2025-02-25T14:23:43.2007500Z                 assert (
2025-02-25T14:23:43.2007560Z                     data.stackgroup
2025-02-25T14:23:43.2007620Z                     == getattr(
2025-02-25T14:23:43.2007710Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2007800Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2007860Z                     ).decode()
2025-02-25T14:23:43.2007910Z                 )
2025-02-25T14:23:43.2007970Z             if data.name:
2025-02-25T14:23:43.2008020Z                 assert (
2025-02-25T14:23:43.2008080Z                     data.name
2025-02-25T14:23:43.2008130Z                     == getattr(
2025-02-25T14:23:43.2008220Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2008290Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2008350Z                     ).decode()
2025-02-25T14:23:43.2008400Z                 )
2025-02-25T14:23:43.2008470Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2008570Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2008620Z             )
2025-02-25T14:23:43.2008690Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2008850Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2008900Z             )
2025-02-25T14:23:43.2008910Z 
2025-02-25T14:23:43.2009020Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2009120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2009120Z 
2025-02-25T14:23:43.2009500Z args = (<function assert_allclose.<locals>.compare at 0x13095c9a0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:23:43.2009580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2009850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2009850Z 
2025-02-25T14:23:43.2009900Z     @wraps(func)
2025-02-25T14:23:43.2009960Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2010030Z         with self._recreate_cm():
2025-02-25T14:23:43.2010100Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2010160Z E           AssertionError: 
2025-02-25T14:23:43.2010250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2010300Z E           
2025-02-25T14:23:43.2010380Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2010460Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2010540Z E           Max relative difference: 3.01858991
2025-02-25T14:23:43.2010670Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2010740Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2010880Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2010940Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2010950Z 
2025-02-25T14:23:43.2011120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2011290Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-25T14:23:43.2011290Z 
2025-02-25T14:23:43.2011500Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befd9d0>
2025-02-25T14:23:43.2011760Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1308e3a70>
2025-02-25T14:23:43.2011830Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.2011900Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.2011980Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.2012070Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.2012240Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.2012600Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-25T14:23:43.2012600Z 
2025-02-25T14:23:43.2012670Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.2012810Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.2012860Z     ):
2025-02-25T14:23:43.2012930Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2013020Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2014350Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2014700Z     
2025-02-25T14:23:43.2014960Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2015190Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2015520Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2015800Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2015970Z             )
2025-02-25T14:23:43.2016120Z     
2025-02-25T14:23:43.2016340Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2016560Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2017880Z             if data.stackgroup:
2025-02-25T14:23:43.2018090Z                 assert (
2025-02-25T14:23:43.2018280Z                     data.stackgroup
2025-02-25T14:23:43.2018440Z                     == getattr(
2025-02-25T14:23:43.2018680Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2018890Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2019050Z                     ).decode()
2025-02-25T14:23:43.2019210Z                 )
2025-02-25T14:23:43.2019380Z             if data.name:
2025-02-25T14:23:43.2019540Z                 assert (
2025-02-25T14:23:43.2019700Z                     data.name
2025-02-25T14:23:43.2020170Z                     == getattr(
2025-02-25T14:23:43.2020400Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2020590Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2020760Z                     ).decode()
2025-02-25T14:23:43.2020920Z                 )
2025-02-25T14:23:43.2021130Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2021420Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2021580Z             )
2025-02-25T14:23:43.2021780Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2022050Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2022200Z             )
2025-02-25T14:23:43.2022210Z 
2025-02-25T14:23:43.2022550Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2022820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2022840Z 
2025-02-25T14:23:43.2023880Z args = (<function assert_allclose.<locals>.compare at 0x13095c180>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:23:43.2024110Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2024650Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2024660Z 
2025-02-25T14:23:43.2024830Z     @wraps(func)
2025-02-25T14:23:43.2025010Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2025210Z         with self._recreate_cm():
2025-02-25T14:23:43.2025390Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2025580Z E           AssertionError: 
2025-02-25T14:23:43.2025810Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2025970Z E           
2025-02-25T14:23:43.2026180Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2026400Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2026630Z E           Max relative difference: 15766.15804934
2025-02-25T14:23:43.2026960Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2027160Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2027470Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2027670Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2027680Z 
2025-02-25T14:23:43.2028130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2028600Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-25T14:23:43.2028600Z 
2025-02-25T14:23:43.2029180Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befda90>
2025-02-25T14:23:43.2029880Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1299fe450>
2025-02-25T14:23:43.2030110Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.2030290Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.2030520Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.2030740Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.2031650Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.2032200Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-25T14:23:43.2032210Z 
2025-02-25T14:23:43.2032410Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.2032790Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.2032950Z     ):
2025-02-25T14:23:43.2033170Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2033400Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2033800Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2034200Z     
2025-02-25T14:23:43.2034460Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2034670Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2034990Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2035230Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2035410Z             )
2025-02-25T14:23:43.2035560Z     
2025-02-25T14:23:43.2035790Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2036030Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2036210Z             if data.stackgroup:
2025-02-25T14:23:43.2036380Z                 assert (
2025-02-25T14:23:43.2036570Z                     data.stackgroup
2025-02-25T14:23:43.2036740Z                     == getattr(
2025-02-25T14:23:43.2036980Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2037190Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2037370Z                     ).decode()
2025-02-25T14:23:43.2037530Z                 )
2025-02-25T14:23:43.2037700Z             if data.name:
2025-02-25T14:23:43.2037870Z                 assert (
2025-02-25T14:23:43.2038040Z                     data.name
2025-02-25T14:23:43.2038410Z                     == getattr(
2025-02-25T14:23:43.2038650Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2038840Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2039020Z                     ).decode()
2025-02-25T14:23:43.2039170Z                 )
2025-02-25T14:23:43.2039380Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2039640Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2039800Z             )
2025-02-25T14:23:43.2039990Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2040270Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2040420Z             )
2025-02-25T14:23:43.2040440Z 
2025-02-25T14:23:43.2040780Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2041030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2041040Z 
2025-02-25T14:23:43.2042060Z args = (<function assert_allclose.<locals>.compare at 0x13095ce00>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:23:43.2042300Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2042830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2042840Z 
2025-02-25T14:23:43.2043010Z     @wraps(func)
2025-02-25T14:23:43.2043190Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2043380Z         with self._recreate_cm():
2025-02-25T14:23:43.2043580Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2043750Z E           AssertionError: 
2025-02-25T14:23:43.2044000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2044150Z E           
2025-02-25T14:23:43.2044370Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2044580Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2045320Z E           Max relative difference: 15766.15804934
2025-02-25T14:23:43.2045640Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2045830Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2046280Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2046540Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2046540Z 
2025-02-25T14:23:43.2046990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2047430Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-25T14:23:43.2047770Z 
2025-02-25T14:23:43.2048340Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befdb50>
2025-02-25T14:23:43.2049020Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1296bd3d0>
2025-02-25T14:23:43.2049240Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.2049440Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.2049670Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.2049890Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.2050330Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.2050870Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-25T14:23:43.2050900Z 
2025-02-25T14:23:43.2051080Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.2051450Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.2051620Z     ):
2025-02-25T14:23:43.2051830Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2052060Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2052700Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2052880Z     
2025-02-25T14:23:43.2053140Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2053360Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2053680Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2053910Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2054080Z             )
2025-02-25T14:23:43.2054240Z     
2025-02-25T14:23:43.2054450Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2054680Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2054870Z             if data.stackgroup:
2025-02-25T14:23:43.2055040Z                 assert (
2025-02-25T14:23:43.2055220Z                     data.stackgroup
2025-02-25T14:23:43.2055400Z                     == getattr(
2025-02-25T14:23:43.2055620Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2055840Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2056010Z                     ).decode()
2025-02-25T14:23:43.2056170Z                 )
2025-02-25T14:23:43.2056340Z             if data.name:
2025-02-25T14:23:43.2056510Z                 assert (
2025-02-25T14:23:43.2056680Z                     data.name
2025-02-25T14:23:43.2056840Z                     == getattr(
2025-02-25T14:23:43.2057070Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2057270Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2057440Z                     ).decode()
2025-02-25T14:23:43.2057590Z                 )
2025-02-25T14:23:43.2057800Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2058070Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2058240Z             )
2025-02-25T14:23:43.2058440Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2058720Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2058890Z             )
2025-02-25T14:23:43.2058890Z 
2025-02-25T14:23:43.2059700Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2059950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2059960Z 
2025-02-25T14:23:43.2060970Z args = (<function assert_allclose.<locals>.compare at 0x13093a8e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:23:43.2061200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2061730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2061740Z 
2025-02-25T14:23:43.2062100Z     @wraps(func)
2025-02-25T14:23:43.2062300Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2062480Z         with self._recreate_cm():
2025-02-25T14:23:43.2062670Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2062850Z E           AssertionError: 
2025-02-25T14:23:43.2063100Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2063250Z E           
2025-02-25T14:23:43.2063470Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2063690Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2063910Z E           Max relative difference: 15766.15804934
2025-02-25T14:23:43.2064230Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2064430Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2064760Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2064950Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2064960Z 
2025-02-25T14:23:43.2065430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2065970Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-25T14:23:43.2066010Z 
2025-02-25T14:23:43.2066610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11befdc10>
2025-02-25T14:23:43.2067290Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17fd91250>
2025-02-25T14:23:43.2067510Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:23:43.2067710Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:23:43.2067920Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:23:43.2068160Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:23:43.2068610Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x301b81fd0>)
2025-02-25T14:23:43.2069180Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-25T14:23:43.2069200Z 
2025-02-25T14:23:43.2069390Z     def test_generate_plot_mpl(
2025-02-25T14:23:43.2069770Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:23:43.2069920Z     ):
2025-02-25T14:23:43.2070160Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:23:43.2070410Z         regression_data = RegressionData(request)
2025-02-25T14:23:43.2084440Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:23:43.2084720Z     
2025-02-25T14:23:43.2085010Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:23:43.2085230Z             np.testing.assert_array_equal(
2025-02-25T14:23:43.2085550Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:23:43.2085800Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:23:43.2085950Z             )
2025-02-25T14:23:43.2086110Z     
2025-02-25T14:23:43.2086360Z         for index, data in enumerate(fig.data):
2025-02-25T14:23:43.2086590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:23:43.2086770Z             if data.stackgroup:
2025-02-25T14:23:43.2086940Z                 assert (
2025-02-25T14:23:43.2087130Z                     data.stackgroup
2025-02-25T14:23:43.2088370Z                     == getattr(
2025-02-25T14:23:43.2088610Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2088830Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:23:43.2089010Z                     ).decode()
2025-02-25T14:23:43.2089160Z                 )
2025-02-25T14:23:43.2089340Z             if data.name:
2025-02-25T14:23:43.2089500Z                 assert (
2025-02-25T14:23:43.2089680Z                     data.name
2025-02-25T14:23:43.2089840Z                     == getattr(
2025-02-25T14:23:43.2090070Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:23:43.2090270Z                         "_" + str(index) + "name",
2025-02-25T14:23:43.2090750Z                     ).decode()
2025-02-25T14:23:43.2090920Z                 )
2025-02-25T14:23:43.2091120Z             np.testing.assert_allclose(
2025-02-25T14:23:43.2091400Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:23:43.2091570Z             )
2025-02-25T14:23:43.2091770Z >           np.testing.assert_allclose(
2025-02-25T14:23:43.2092040Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:23:43.2092210Z             )
2025-02-25T14:23:43.2092220Z 
2025-02-25T14:23:43.2092560Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:23:43.2093070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:23:43.2093080Z 
2025-02-25T14:23:43.2094150Z args = (<function assert_allclose.<locals>.compare at 0x13095f920>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:23:43.2094380Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:23:43.2094940Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:23:43.2094950Z 
2025-02-25T14:23:43.2095110Z     @wraps(func)
2025-02-25T14:23:43.2095300Z     def inner(*args, **kwds):
2025-02-25T14:23:43.2104910Z         with self._recreate_cm():
2025-02-25T14:23:43.2105250Z >           return func(*args, **kwds)
2025-02-25T14:23:43.2105450Z E           AssertionError: 
2025-02-25T14:23:43.2105690Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2105860Z E           
2025-02-25T14:23:43.2106070Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2106300Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2106510Z E           Max relative difference: 15766.15804934
2025-02-25T14:23:43.2106850Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2107060Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2107390Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2107580Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2107600Z 
2025-02-25T14:23:43.2108060Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:23:43.2108330Z =============================== warnings summary ===============================
2025-02-25T14:23:43.2108580Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:23:43.2108840Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:23:43.2109540Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-25T14:23:43.2109710Z   
2025-02-25T14:23:43.2112530Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-25T14:23:43.2112580Z 
2025-02-25T14:23:43.2113100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-25T14:23:43.2114720Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-25T14:23:43.2114880Z   
2025-02-25T14:23:43.2115220Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-25T14:23:43.2115550Z   given by the platformdirs library.  To remove this warning and
2025-02-25T14:23:43.2115910Z   see the appropriate new directories, set the environment variable
2025-02-25T14:23:43.2116220Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-25T14:23:43.2116570Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-25T14:23:43.2116870Z 
2025-02-25T14:23:43.2129450Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-25T14:23:43.2130160Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:23:43.2130640Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-25T14:23:43.2130840Z   
2025-02-25T14:23:43.2131000Z   
2025-02-25T14:23:43.2131450Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:23:43.2132040Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:23:43.2132050Z 
2025-02-25T14:23:43.2132500Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-25T14:23:43.2133220Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-25T14:23:43.2133760Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-25T14:23:43.2134180Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-25T14:23:43.2134890Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-25T14:23:43.2135040Z   
2025-02-25T14:23:43.2135290Z   The current CMFGEN model parser is deprecated
2025-02-25T14:23:43.2135310Z 
2025-02-25T14:23:43.2135550Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-25T14:23:43.2135950Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-25T14:23:43.2136650Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-25T14:23:43.2136800Z   
2025-02-25T14:23:43.2137050Z   The current CMFGEN model parser is deprecated
2025-02-25T14:23:43.2137050Z 
2025-02-25T14:23:43.2137500Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-25T14:23:43.2138320Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-25T14:23:43.2138480Z   
2025-02-25T14:23:43.2139580Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-25T14:23:43.2139630Z 
2025-02-25T14:23:43.2139850Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:23:43.2140130Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:23:43.2140520Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:23:43.2141120Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-25T14:23:43.2141290Z   
2025-02-25T14:23:43.2141520Z   v_inner_boundary < 0, assuming default value
2025-02-25T14:23:43.2141530Z 
2025-02-25T14:23:43.2141770Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:23:43.2142020Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:23:43.2142410Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:23:43.2143000Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-25T14:23:43.2143170Z   
2025-02-25T14:23:43.2143410Z   v_outer_boundary < 0, assuming default value
2025-02-25T14:23:43.2143410Z 
2025-02-25T14:23:43.2144450Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-25T14:23:43.2146210Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-25T14:23:43.2146360Z   
2025-02-25T14:23:43.2146980Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-25T14:23:43.2147970Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-25T14:23:43.2148140Z   
2025-02-25T14:23:43.2149300Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-25T14:23:43.2149660Z 
2025-02-25T14:23:43.2150180Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-25T14:23:43.2150640Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-25T14:23:43.2151730Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-25T14:23:43.2152320Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-25T14:23:43.2152470Z   
2025-02-25T14:23:43.2152900Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-25T14:23:43.2152910Z 
2025-02-25T14:23:43.2153680Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:23:43.2154010Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-25T14:23:43.2154090Z   
2025-02-25T14:23:43.2154370Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-25T14:23:43.2154370Z 
2025-02-25T14:23:43.2155090Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:23:43.2156240Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-25T14:23:43.2156440Z   
2025-02-25T14:23:43.2157390Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-25T14:23:43.2157410Z 
2025-02-25T14:23:43.2157920Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-25T14:23:43.2158180Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-25T14:23:43.2158340Z   
2025-02-25T14:23:43.2160910Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-25T14:23:43.2161110Z   Exception origin:
2025-02-25T14:23:43.2161700Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-25T14:23:43.2161910Z       raise TypeError(msg) from None
2025-02-25T14:23:43.2162120Z   [0m[0m
2025-02-25T14:23:43.2162120Z 
2025-02-25T14:23:43.2162860Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-25T14:23:43.2163480Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-25T14:23:43.2163630Z   
2025-02-25T14:23:43.2165490Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-25T14:23:43.2165510Z 
2025-02-25T14:23:43.2166290Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2167090Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2168820Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2169610Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2170390Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2171200Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2171980Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:23:43.2172380Z   
2025-02-25T14:23:43.2172810Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-25T14:23:43.2173370Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:23:43.2173910Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:23:43.2173920Z 
2025-02-25T14:23:43.2174710Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2175480Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2176270Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:23:43.2176430Z   
2025-02-25T14:23:43.2176830Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-25T14:23:43.2177220Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:23:43.2177750Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:23:43.2177760Z 
2025-02-25T14:23:43.2178540Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:23:43.2179350Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:23:43.2179490Z   
2025-02-25T14:23:43.2179900Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-25T14:23:43.2180290Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:23:43.2180820Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:23:43.2180830Z 
2025-02-25T14:23:43.2181800Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-25T14:23:43.2182550Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:820: DeprecationWarning:
2025-02-25T14:23:43.2182720Z   
2025-02-25T14:23:43.2183330Z   QgridWidget._precision_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-25T14:23:43.2183340Z 
2025-02-25T14:23:43.2183930Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:23:43.2184420Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-25T14:23:43.2184580Z   
2025-02-25T14:23:43.2184740Z   
2025-02-25T14:23:43.2191420Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:23:43.2192380Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:23:43.2192400Z 
2025-02-25T14:23:43.2193100Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:23:43.2193690Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-25T14:23:43.2194040Z   
2025-02-25T14:23:43.2220630Z   
2025-02-25T14:23:43.2220970Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:23:43.2221730Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-25T14:23:43.2221740Z 
2025-02-25T14:23:43.2221980Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:23:43.2222190Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-25T14:23:43.2222240Z   
2025-02-25T14:23:43.2222400Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-25T14:23:43.2222410Z 
2025-02-25T14:23:43.2222590Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-25T14:23:43.2222750Z 
2025-02-25T14:23:43.2222900Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-02-25T14:23:43.2223000Z Coverage HTML written to dir coverage_html_report
2025-02-25T14:23:43.2223080Z Coverage XML written to file coverage.xml
2025-02-25T14:23:43.2223090Z 
2025-02-25T14:23:43.2223200Z =========================== short test summary info ============================
2025-02-25T14:23:43.2223530Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-25T14:23:43.2223540Z 
2025-02-25T14:23:43.2223640Z MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:23:43.2223740Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:23:43.2223790Z        ...
2025-02-25T14:23:43.2223860Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:23:43.2223960Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:23:43.2224050Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:23:43.2224110Z        ...
2025-02-25T14:23:43.2224170Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:23:43.2224270Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:23:43.2224350Z At positional index 54, first diff: 14 != 12
2025-02-25T14:23:43.2224580Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-25T14:23:43.2224660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2224660Z 
2025-02-25T14:23:43.2224740Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:23:43.2224810Z Max absolute difference: 0.99984222
2025-02-25T14:23:43.2224880Z Max relative difference: 6337.12154973
2025-02-25T14:23:43.2224940Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2225000Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2225060Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.2225120Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2225180Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2225240Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.2225720Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:23:43.2227100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2227160Z 
2025-02-25T14:23:43.2227460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2227700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2227860Z        ...
2025-02-25T14:23:43.2228050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2228330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2228460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2228520Z        ...
2025-02-25T14:23:43.2228590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2228700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2228780Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2229340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2229350Z 
2025-02-25T14:23:43.2229420Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2229730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2230070Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2230620Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2231030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2231040Z 
2025-02-25T14:23:43.2231110Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2231410Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2231720Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2232280Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2232680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2232680Z 
2025-02-25T14:23:43.2232790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2232870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2232920Z        ...
2025-02-25T14:23:43.2232990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2233090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2233180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2233230Z        ...
2025-02-25T14:23:43.2233300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2233400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2233480Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2234110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2234130Z 
2025-02-25T14:23:43.2234250Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2234340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2234400Z        ...
2025-02-25T14:23:43.2234470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2234580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2234670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2234880Z        ...
2025-02-25T14:23:43.2234950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2235050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2235130Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2235540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2235540Z 
2025-02-25T14:23:43.2235900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2237160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2237230Z        ...
2025-02-25T14:23:43.2237300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2237400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2237500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2237540Z        ...
2025-02-25T14:23:43.2237610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2237720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2237810Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2238230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2238240Z 
2025-02-25T14:23:43.2238360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2238450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2238500Z        ...
2025-02-25T14:23:43.2238570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2238670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2238760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2238800Z        ...
2025-02-25T14:23:43.2238870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2238970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2239050Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2239480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2239490Z 
2025-02-25T14:23:43.2239600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2239690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2239740Z        ...
2025-02-25T14:23:43.2240040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2240460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2240570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2240610Z        ...
2025-02-25T14:23:43.2240680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2240780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2240870Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2241280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2241290Z 
2025-02-25T14:23:43.2241520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2241610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2241660Z        ...
2025-02-25T14:23:43.2241730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2241830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2241920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2241960Z        ...
2025-02-25T14:23:43.2242030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2242130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2242210Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2243570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2243580Z 
2025-02-25T14:23:43.2243710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2243810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2243860Z        ...
2025-02-25T14:23:43.2243920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2244020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2244110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2244160Z        ...
2025-02-25T14:23:43.2244230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2244330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2244400Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2244800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2244810Z 
2025-02-25T14:23:43.2244870Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2245180Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2245460Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2245740Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2247830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2247840Z 
2025-02-25T14:23:43.2247920Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2248230Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2248550Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2249110Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2249580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2249590Z 
2025-02-25T14:23:43.2249690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2249790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2249830Z        ...
2025-02-25T14:23:43.2249910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2250010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2250090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2250140Z        ...
2025-02-25T14:23:43.2250210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2250310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2250400Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2250800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2250810Z 
2025-02-25T14:23:43.2250910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2251010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2251050Z        ...
2025-02-25T14:23:43.2251120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2251220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2251310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2251360Z        ...
2025-02-25T14:23:43.2251420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2251520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2251600Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2251970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2251990Z 
2025-02-25T14:23:43.2252090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2252180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2252220Z        ...
2025-02-25T14:23:43.2252300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2252400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2252490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2252540Z        ...
2025-02-25T14:23:43.2252600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2252700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2252780Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2253440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2253450Z 
2025-02-25T14:23:43.2253560Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2253650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2253700Z        ...
2025-02-25T14:23:43.2253760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2253940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2254030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2254080Z        ...
2025-02-25T14:23:43.2254140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2254250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2254330Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2254720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2254730Z 
2025-02-25T14:23:43.2254870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2254960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2255010Z        ...
2025-02-25T14:23:43.2255080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2255180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2255270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2255320Z        ...
2025-02-25T14:23:43.2255390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2255490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2255570Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2255960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2255960Z 
2025-02-25T14:23:43.2256060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2256150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2256200Z        ...
2025-02-25T14:23:43.2256270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2256370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2256470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2256520Z        ...
2025-02-25T14:23:43.2256580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2256680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2256760Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2257150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2257150Z 
2025-02-25T14:23:43.2257250Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2257340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2257390Z        ...
2025-02-25T14:23:43.2257460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2257560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2257640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2257690Z        ...
2025-02-25T14:23:43.2257760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2257850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2257930Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2258320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2258320Z 
2025-02-25T14:23:43.2258390Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2258710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2259050Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2259330Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2259800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2259800Z 
2025-02-25T14:23:43.2259880Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2260180Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2260510Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2260930Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2261310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2261310Z 
2025-02-25T14:23:43.2261410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2261660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2261750Z        ...
2025-02-25T14:23:43.2261830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2261930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2262020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2262070Z        ...
2025-02-25T14:23:43.2262140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2262230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2262320Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2262740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2262740Z 
2025-02-25T14:23:43.2263580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2263960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2264110Z        ...
2025-02-25T14:23:43.2264340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2264620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2265090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2265190Z        ...
2025-02-25T14:23:43.2265490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2265600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2265680Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2266060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2266060Z 
2025-02-25T14:23:43.2266170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2266250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2266300Z        ...
2025-02-25T14:23:43.2266370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2266540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2266640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2266690Z        ...
2025-02-25T14:23:43.2266750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2266850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2266930Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2267330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2267330Z 
2025-02-25T14:23:43.2267540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2267650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2267690Z        ...
2025-02-25T14:23:43.2267760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2267850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2267950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2268000Z        ...
2025-02-25T14:23:43.2268060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2268160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2268240Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2269190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2269200Z 
2025-02-25T14:23:43.2269310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2269400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2269450Z        ...
2025-02-25T14:23:43.2269510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2269610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2269700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2269760Z        ...
2025-02-25T14:23:43.2269820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2269920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2270000Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2270380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2270380Z 
2025-02-25T14:23:43.2270480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2270570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2270620Z        ...
2025-02-25T14:23:43.2270690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2270780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2270870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2270920Z        ...
2025-02-25T14:23:43.2270980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2271080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2271160Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2271550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2271830Z 
2025-02-25T14:23:43.2271940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2272030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2272090Z        ...
2025-02-25T14:23:43.2272150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2272260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2272340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2272400Z        ...
2025-02-25T14:23:43.2272830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2272940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2273020Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2273450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2273460Z 
2025-02-25T14:23:43.2273600Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2273960Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2274230Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2274510Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2274950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2274960Z 
2025-02-25T14:23:43.2275030Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2275340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2277000Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2277340Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2277870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2277880Z 
2025-02-25T14:23:43.2277980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2278070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2278120Z        ...
2025-02-25T14:23:43.2278190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2278290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2278380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2278430Z        ...
2025-02-25T14:23:43.2278570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2278680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2278750Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2279170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2279180Z 
2025-02-25T14:23:43.2279280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2279380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2279420Z        ...
2025-02-25T14:23:43.2279490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2279590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2279680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2279730Z        ...
2025-02-25T14:23:43.2279790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2279890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2279970Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2280360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2280370Z 
2025-02-25T14:23:43.2280470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2280560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2280600Z        ...
2025-02-25T14:23:43.2280670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2280770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2280850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2280900Z        ...
2025-02-25T14:23:43.2280960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2281060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2281140Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2281560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2281570Z 
2025-02-25T14:23:43.2281670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2281760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2281810Z        ...
2025-02-25T14:23:43.2281980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2282100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2282190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2289330Z        ...
2025-02-25T14:23:43.2289460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2289580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2289670Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2290100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2290100Z 
2025-02-25T14:23:43.2290460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2290550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2290600Z        ...
2025-02-25T14:23:43.2290660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2290760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2290850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2290900Z        ...
2025-02-25T14:23:43.2290960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2291060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2291140Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2293350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2293370Z 
2025-02-25T14:23:43.2293480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2293570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2293620Z        ...
2025-02-25T14:23:43.2293690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2293780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2293870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2293920Z        ...
2025-02-25T14:23:43.2293980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2294080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2294160Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2294910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2294920Z 
2025-02-25T14:23:43.2295030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2295120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2295170Z        ...
2025-02-25T14:23:43.2295230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2295330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2295420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2295460Z        ...
2025-02-25T14:23:43.2295530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2295630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2295710Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2296170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2296180Z 
2025-02-25T14:23:43.2296260Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2298160Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2298470Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2298760Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2299580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2299590Z 
2025-02-25T14:23:43.2299680Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2299990Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2300430Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2300860Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2302650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2302670Z 
2025-02-25T14:23:43.2302790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2302880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2302930Z        ...
2025-02-25T14:23:43.2303000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2303100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2303180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2303230Z        ...
2025-02-25T14:23:43.2303300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2303400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2303480Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2303950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2303950Z 
2025-02-25T14:23:43.2304060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2304140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2304200Z        ...
2025-02-25T14:23:43.2304350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2304480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2304570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2304620Z        ...
2025-02-25T14:23:43.2304690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2304790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2304870Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2305320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2305330Z 
2025-02-25T14:23:43.2305430Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2305730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2305790Z        ...
2025-02-25T14:23:43.2306080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2307350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2307460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2307510Z        ...
2025-02-25T14:23:43.2307580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2307680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2307760Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2308240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2308380Z 
2025-02-25T14:23:43.2308490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2308580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2308630Z        ...
2025-02-25T14:23:43.2308700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2308800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2308890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2308930Z        ...
2025-02-25T14:23:43.2309000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2309100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2309170Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2309640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2309650Z 
2025-02-25T14:23:43.2309760Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2309850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2309900Z        ...
2025-02-25T14:23:43.2313190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2314850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2315240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2315750Z        ...
2025-02-25T14:23:43.2315900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2316010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2316090Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2316560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2316580Z 
2025-02-25T14:23:43.2316680Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2316770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2316820Z        ...
2025-02-25T14:23:43.2316890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2316990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2317080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2317120Z        ...
2025-02-25T14:23:43.2317190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2317280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2317360Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2319360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2319370Z 
2025-02-25T14:23:43.2319490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2319580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2319630Z        ...
2025-02-25T14:23:43.2320030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2320140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2320230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2320280Z        ...
2025-02-25T14:23:43.2320350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2320450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2320540Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2320990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2321110Z 
2025-02-25T14:23:43.2321190Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2321520Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2321810Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2322090Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2322540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2322540Z 
2025-02-25T14:23:43.2322620Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2322940Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2323270Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2323600Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2324040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2324050Z 
2025-02-25T14:23:43.2324150Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2324240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2324350Z        ...
2025-02-25T14:23:43.2324420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2324520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2324610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2324660Z        ...
2025-02-25T14:23:43.2324720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2324820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2324910Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2325340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2325400Z 
2025-02-25T14:23:43.2325510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2325600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2325640Z        ...
2025-02-25T14:23:43.2325710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2325810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2325920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2326310Z        ...
2025-02-25T14:23:43.2326410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2326510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2326590Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2327010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2327020Z 
2025-02-25T14:23:43.2327120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2327210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2327260Z        ...
2025-02-25T14:23:43.2327320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2327420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2327510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2327560Z        ...
2025-02-25T14:23:43.2327620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2327720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2327790Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2328230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2328230Z 
2025-02-25T14:23:43.2328330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2328430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2328470Z        ...
2025-02-25T14:23:43.2328540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2328630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2328730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2328780Z        ...
2025-02-25T14:23:43.2328850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2328940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2329020Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2329450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2329450Z 
2025-02-25T14:23:43.2329550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2329650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2329690Z        ...
2025-02-25T14:23:43.2329760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2329860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2330120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2330170Z        ...
2025-02-25T14:23:43.2330240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2330330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2330410Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2330820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2330830Z 
2025-02-25T14:23:43.2330930Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2331080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2331130Z        ...
2025-02-25T14:23:43.2331200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2331300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2331400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2331460Z        ...
2025-02-25T14:23:43.2331520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2331620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2331690Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2332120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2332120Z 
2025-02-25T14:23:43.2332220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2332310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2332360Z        ...
2025-02-25T14:23:43.2332440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2332540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2332620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2332670Z        ...
2025-02-25T14:23:43.2332740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2332830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2332910Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2333340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2333340Z 
2025-02-25T14:23:43.2333410Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2333710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2335630Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2336220Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2337840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2338230Z 
2025-02-25T14:23:43.2338330Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2338630Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2338950Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2339360Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2339800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2339810Z 
2025-02-25T14:23:43.2339920Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2340020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2340070Z        ...
2025-02-25T14:23:43.2340140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2340240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2340340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2340390Z        ...
2025-02-25T14:23:43.2340460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2340560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2340640Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2342410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2342450Z 
2025-02-25T14:23:43.2342750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2343010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2343460Z        ...
2025-02-25T14:23:43.2343550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2343650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2343740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2343790Z        ...
2025-02-25T14:23:43.2343860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2343960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2344040Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2344480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2344490Z 
2025-02-25T14:23:43.2344590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2344680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2344740Z        ...
2025-02-25T14:23:43.2344810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2346360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2346730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2346890Z        ...
2025-02-25T14:23:43.2348040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2348330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2348560Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2349800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2349830Z 
2025-02-25T14:23:43.2349950Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2350040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2350090Z        ...
2025-02-25T14:23:43.2350350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2350460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2350550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2350600Z        ...
2025-02-25T14:23:43.2350660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2350770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2352150Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2353810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2353830Z 
2025-02-25T14:23:43.2354160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2355680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2355760Z        ...
2025-02-25T14:23:43.2355830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2355940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2356050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2356100Z        ...
2025-02-25T14:23:43.2356160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2356270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2356340Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2356780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2356790Z 
2025-02-25T14:23:43.2356900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2356990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2357040Z        ...
2025-02-25T14:23:43.2357110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2357200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2357300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2357350Z        ...
2025-02-25T14:23:43.2357410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2357520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2357600Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2358550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2358580Z 
2025-02-25T14:23:43.2358900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2359130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2360530Z        ...
2025-02-25T14:23:43.2360740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2361220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2361500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2361650Z        ...
2025-02-25T14:23:43.2361830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2362110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2362600Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2364990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2365020Z 
2025-02-25T14:23:43.2365410Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2367550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2368740Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2369050Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2369540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2369550Z 
2025-02-25T14:23:43.2369620Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2369930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2370240Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2370550Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2371010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2371010Z 
2025-02-25T14:23:43.2371110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2371210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2371260Z        ...
2025-02-25T14:23:43.2371320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2371430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2371510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2371570Z        ...
2025-02-25T14:23:43.2371630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2371730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2371920Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2372390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2372390Z 
2025-02-25T14:23:43.2372490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2372580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2372630Z        ...
2025-02-25T14:23:43.2372700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2372800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2372940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2372990Z        ...
2025-02-25T14:23:43.2373060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2373160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2373240Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2375910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2375920Z 
2025-02-25T14:23:43.2376040Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2376120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2376170Z        ...
2025-02-25T14:23:43.2376240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2376340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2376430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2376480Z        ...
2025-02-25T14:23:43.2376540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2376640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2376720Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2377190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2377200Z 
2025-02-25T14:23:43.2377300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2377470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2377550Z        ...
2025-02-25T14:23:43.2377620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2377730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2377820Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2377880Z        ...
2025-02-25T14:23:43.2377940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2378040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2378120Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2378590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2378600Z 
2025-02-25T14:23:43.2378710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2378790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2378840Z        ...
2025-02-25T14:23:43.2378910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2379340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2380560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2380620Z        ...
2025-02-25T14:23:43.2380690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2380920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2381010Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2381470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2381730Z 
2025-02-25T14:23:43.2381850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2381940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2381990Z        ...
2025-02-25T14:23:43.2382050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2382150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2382240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2382290Z        ...
2025-02-25T14:23:43.2382510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2382610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2382690Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2383110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2383120Z 
2025-02-25T14:23:43.2383230Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2383310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2383370Z        ...
2025-02-25T14:23:43.2383450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2383560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2383640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2383700Z        ...
2025-02-25T14:23:43.2383760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2383860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2383950Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2384410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2384420Z 
2025-02-25T14:23:43.2384490Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2385930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2387310Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2388130Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2391270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2391310Z 
2025-02-25T14:23:43.2391600Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2392510Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2394120Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2395540Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2398700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2398750Z 
2025-02-25T14:23:43.2398890Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2398980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2399030Z        ...
2025-02-25T14:23:43.2399100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2399210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2399310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2399360Z        ...
2025-02-25T14:23:43.2399440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2399540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2399620Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2400090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2400090Z 
2025-02-25T14:23:43.2400200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2400290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2400350Z        ...
2025-02-25T14:23:43.2400410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2400510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2400600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2400660Z        ...
2025-02-25T14:23:43.2400720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2400830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2400900Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2401330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2401330Z 
2025-02-25T14:23:43.2401440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2401530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2401580Z        ...
2025-02-25T14:23:43.2401650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2401750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2401840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2401900Z        ...
2025-02-25T14:23:43.2401960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2402070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2402160Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2402600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2402890Z 
2025-02-25T14:23:43.2403020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2403110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2403160Z        ...
2025-02-25T14:23:43.2403230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2403620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2404230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2404420Z        ...
2025-02-25T14:23:43.2404620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2404900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2405790Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2406260Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2406280Z 
2025-02-25T14:23:43.2406380Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2406470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2406520Z        ...
2025-02-25T14:23:43.2406590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2406690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2406780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2406830Z        ...
2025-02-25T14:23:43.2406900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2407000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2407320Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2408570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2408580Z 
2025-02-25T14:23:43.2408870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2409120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2409290Z        ...
2025-02-25T14:23:43.2409480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2409750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2410060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2410210Z        ...
2025-02-25T14:23:43.2410400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2410960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2411240Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2412780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2412790Z 
2025-02-25T14:23:43.2413010Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2413900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2414660Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2415450Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2417180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2417190Z 
2025-02-25T14:23:43.2417520Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2417880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2418470Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2418780Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2419230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2419230Z 
2025-02-25T14:23:43.2419350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2419440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2419490Z        ...
2025-02-25T14:23:43.2419550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2419660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2419750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2419790Z        ...
2025-02-25T14:23:43.2419860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2419960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2420040Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2420490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2420490Z 
2025-02-25T14:23:43.2420590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2420680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2420730Z        ...
2025-02-25T14:23:43.2420800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2421030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2426040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2426140Z        ...
2025-02-25T14:23:43.2426210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2426300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2426390Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2426820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2426820Z 
2025-02-25T14:23:43.2426930Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2427250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2427290Z        ...
2025-02-25T14:23:43.2427360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2427460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2427550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2427590Z        ...
2025-02-25T14:23:43.2427670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2427760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2427850Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2428410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2428550Z 
2025-02-25T14:23:43.2429000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2429380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2429550Z        ...
2025-02-25T14:23:43.2429750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2430030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2430280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2430430Z        ...
2025-02-25T14:23:43.2430630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2431640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2432050Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2433080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2433110Z 
2025-02-25T14:23:43.2433220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2433310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2433370Z        ...
2025-02-25T14:23:43.2433440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2433540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2433630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2433680Z        ...
2025-02-25T14:23:43.2433740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2433840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2433920Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2434480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2434490Z 
2025-02-25T14:23:43.2434590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2434690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2434740Z        ...
2025-02-25T14:23:43.2434810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2434900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2434990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2435040Z        ...
2025-02-25T14:23:43.2435110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2435200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2435280Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2435720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2435730Z 
2025-02-25T14:23:43.2435840Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2435930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2435980Z        ...
2025-02-25T14:23:43.2436050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2436650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2436770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2436860Z        ...
2025-02-25T14:23:43.2436940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2437050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2437130Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2437580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2437680Z 
2025-02-25T14:23:43.2437750Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2438060Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2438470Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2438760Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2439250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2439270Z 
2025-02-25T14:23:43.2439350Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2439660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2439990Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2440330Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2440760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2440780Z 
2025-02-25T14:23:43.2440880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2440980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2441050Z        ...
2025-02-25T14:23:43.2441230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2441330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2441420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2441470Z        ...
2025-02-25T14:23:43.2441550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2441650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2441720Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2442170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2442260Z 
2025-02-25T14:23:43.2442360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2442450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2442490Z        ...
2025-02-25T14:23:43.2442560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2442660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2442760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2442800Z        ...
2025-02-25T14:23:43.2442870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2442970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2443060Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2443500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2443510Z 
2025-02-25T14:23:43.2443620Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2443710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2443750Z        ...
2025-02-25T14:23:43.2443820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2443920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2444020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2444080Z        ...
2025-02-25T14:23:43.2444150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2444240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2444340Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2444820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2444830Z 
2025-02-25T14:23:43.2444940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2445030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2445080Z        ...
2025-02-25T14:23:43.2445140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2445240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2445330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2445390Z        ...
2025-02-25T14:23:43.2445450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2445560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2445640Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2446100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2446110Z 
2025-02-25T14:23:43.2446220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2446330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2446380Z        ...
2025-02-25T14:23:43.2446460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2446580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2446770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2446830Z        ...
2025-02-25T14:23:43.2446890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2447010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2447090Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2447550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2447560Z 
2025-02-25T14:23:43.2447660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2447860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2447930Z        ...
2025-02-25T14:23:43.2448000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2448130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2448230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2448320Z        ...
2025-02-25T14:23:43.2448580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2448680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2448750Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2449190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2449200Z 
2025-02-25T14:23:43.2449330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2449420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2449490Z        ...
2025-02-25T14:23:43.2449550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2449650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2449750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2449810Z        ...
2025-02-25T14:23:43.2449870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2449970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2450040Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2450510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2450520Z 
2025-02-25T14:23:43.2450600Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2450940Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2451240Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2451510Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2451980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2451990Z 
2025-02-25T14:23:43.2452280Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2452720Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2453060Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2453560Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2454690Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2454720Z 
2025-02-25T14:23:43.2454860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2454950Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2455000Z        ...
2025-02-25T14:23:43.2455060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2455170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2455260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2455320Z        ...
2025-02-25T14:23:43.2455380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2455490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2455570Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2456060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2456070Z 
2025-02-25T14:23:43.2456170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2456280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2456340Z        ...
2025-02-25T14:23:43.2456410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2456530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2456640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2456700Z        ...
2025-02-25T14:23:43.2456760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2456860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2456930Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2457360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2457360Z 
2025-02-25T14:23:43.2457460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2457760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2458050Z        ...
2025-02-25T14:23:43.2458120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2458220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2458310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2458370Z        ...
2025-02-25T14:23:43.2458660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2458760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2458840Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2459290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2459300Z 
2025-02-25T14:23:43.2459400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2459480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2459540Z        ...
2025-02-25T14:23:43.2459600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2459780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2459870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2459920Z        ...
2025-02-25T14:23:43.2459980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2460080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2460160Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2460600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2460600Z 
2025-02-25T14:23:43.2460700Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2460790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2460840Z        ...
2025-02-25T14:23:43.2461040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2461140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2461230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2461280Z        ...
2025-02-25T14:23:43.2461340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2461440Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2461520Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2461950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2461950Z 
2025-02-25T14:23:43.2462070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2462160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2462210Z        ...
2025-02-25T14:23:43.2462270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2462370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2462460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2462510Z        ...
2025-02-25T14:23:43.2462580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2462670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2462760Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2463650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2463660Z 
2025-02-25T14:23:43.2463770Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2463850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2463900Z        ...
2025-02-25T14:23:43.2463970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2464070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2464160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2464210Z        ...
2025-02-25T14:23:43.2464280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2464370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2464470Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2465060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2465060Z 
2025-02-25T14:23:43.2465130Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2465440Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2465800Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2466110Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2467010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2467010Z 
2025-02-25T14:23:43.2467100Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2467410Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2467730Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2468070Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2468530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2468550Z 
2025-02-25T14:23:43.2468670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2468760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2468810Z        ...
2025-02-25T14:23:43.2468870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2469200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2469710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2469980Z        ...
2025-02-25T14:23:43.2470190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2470540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2470870Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2471360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2471370Z 
2025-02-25T14:23:43.2471480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2471570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2471620Z        ...
2025-02-25T14:23:43.2471690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2471790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2471960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2472030Z        ...
2025-02-25T14:23:43.2472100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2472210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2472290Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2472730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2472730Z 
2025-02-25T14:23:43.2472840Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2472930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2472980Z        ...
2025-02-25T14:23:43.2473050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2473150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2473230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2473290Z        ...
2025-02-25T14:23:43.2473360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2473460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2473540Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2474000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2474010Z 
2025-02-25T14:23:43.2474120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2474210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2474260Z        ...
2025-02-25T14:23:43.2474320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2474420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2474510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2474570Z        ...
2025-02-25T14:23:43.2474640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2474900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2475290Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2475780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2475790Z 
2025-02-25T14:23:43.2475900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2475980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2476040Z        ...
2025-02-25T14:23:43.2476110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2476200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2476290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2476340Z        ...
2025-02-25T14:23:43.2476410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2476510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2476600Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2477040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2477290Z 
2025-02-25T14:23:43.2477400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2477490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2477540Z        ...
2025-02-25T14:23:43.2477610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2477720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2477820Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2477860Z        ...
2025-02-25T14:23:43.2477930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2478220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2478300Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2478780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2478790Z 
2025-02-25T14:23:43.2478900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2478990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2479040Z        ...
2025-02-25T14:23:43.2479100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2479200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2479290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2479330Z        ...
2025-02-25T14:23:43.2479400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2479490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2479580Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2480040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2480050Z 
2025-02-25T14:23:43.2480120Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2480440Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2480710Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2481010Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2482610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2482630Z 
2025-02-25T14:23:43.2482770Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2483100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2483670Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2484010Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2484630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2484640Z 
2025-02-25T14:23:43.2484750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2484840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2484900Z        ...
2025-02-25T14:23:43.2484970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2485080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2485180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2485240Z        ...
2025-02-25T14:23:43.2485310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2485410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2485500Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2486000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2486010Z 
2025-02-25T14:23:43.2486110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2486200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2486240Z        ...
2025-02-25T14:23:43.2486310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2486410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2486490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2486540Z        ...
2025-02-25T14:23:43.2486610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2486700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2486780Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2488440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2488520Z 
2025-02-25T14:23:43.2488840Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2488960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2489020Z        ...
2025-02-25T14:23:43.2489120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2489250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2489360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2489440Z        ...
2025-02-25T14:23:43.2489540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2489660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2489740Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2490320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2490450Z 
2025-02-25T14:23:43.2490900Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:23:43.2492100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2496120Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-25T14:23:43.2500790Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:23:43.2501410Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:23:43.2502000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2502010Z 
2025-02-25T14:23:43.2502220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2502330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2502380Z        ...
2025-02-25T14:23:43.2502460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2502560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2502860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2503260Z        ...
2025-02-25T14:23:43.2503380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2503480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2503580Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2504110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2504120Z 
2025-02-25T14:23:43.2504240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2504330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2504380Z        ...
2025-02-25T14:23:43.2504440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2504550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2504660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2504730Z        ...
2025-02-25T14:23:43.2504810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2504940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2505040Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2505550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2505560Z 
2025-02-25T14:23:43.2505660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2505750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2505810Z        ...
2025-02-25T14:23:43.2505880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2505990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2506100Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2506180Z        ...
2025-02-25T14:23:43.2506250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2506380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2506490Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2507000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2507010Z 
2025-02-25T14:23:43.2507150Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2507280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2507360Z        ...
2025-02-25T14:23:43.2507430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2507940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2508390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2508460Z        ...
2025-02-25T14:23:43.2508550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2508820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2509350Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2509880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2509890Z 
2025-02-25T14:23:43.2510010Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2510330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2510390Z        ...
2025-02-25T14:23:43.2510460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2510560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2510650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2510710Z        ...
2025-02-25T14:23:43.2510770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2510890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2510980Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2511480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2511490Z 
2025-02-25T14:23:43.2511570Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2511880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2512170Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2514130Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2515190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2515220Z 
2025-02-25T14:23:43.2515320Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2515660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2516000Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2516480Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2516970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2517070Z 
2025-02-25T14:23:43.2517180Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2517270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2517340Z        ...
2025-02-25T14:23:43.2517420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2517540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2517630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2517700Z        ...
2025-02-25T14:23:43.2517780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2517880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2517960Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2518490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2518500Z 
2025-02-25T14:23:43.2518610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2518700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2518760Z        ...
2025-02-25T14:23:43.2518830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2518950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2519050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2519110Z        ...
2025-02-25T14:23:43.2519190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2519290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2519380Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2519860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2519870Z 
2025-02-25T14:23:43.2520020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2520120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2520170Z        ...
2025-02-25T14:23:43.2520230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2520340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2520430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2520480Z        ...
2025-02-25T14:23:43.2520550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2520660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2520740Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2521940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2521960Z 
2025-02-25T14:23:43.2522120Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:23:43.2522430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2530170Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-25T14:23:43.2534580Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:23:43.2534760Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:23:43.2536770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2536800Z 
2025-02-25T14:23:43.2536910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2537000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2537050Z        ...
2025-02-25T14:23:43.2537120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2537230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2537490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2537540Z        ...
2025-02-25T14:23:43.2537620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2537730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2537830Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2538340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2538350Z 
2025-02-25T14:23:43.2538490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2544590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2544670Z        ...
2025-02-25T14:23:43.2544740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2544840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2544940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2544990Z        ...
2025-02-25T14:23:43.2545060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2545160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2545240Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2545720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2545730Z 
2025-02-25T14:23:43.2545830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2545910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2545960Z        ...
2025-02-25T14:23:43.2546030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2546120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2546210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2546270Z        ...
2025-02-25T14:23:43.2546330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2546430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2546500Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2546950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2546960Z 
2025-02-25T14:23:43.2547060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2547140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2547190Z        ...
2025-02-25T14:23:43.2547260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2547360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2547440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2547490Z        ...
2025-02-25T14:23:43.2547550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2547650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2547720Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2548650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2549220Z 
2025-02-25T14:23:43.2549350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2549440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2549490Z        ...
2025-02-25T14:23:43.2549550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2549650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2549740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2549780Z        ...
2025-02-25T14:23:43.2549970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2550070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2550150Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2550560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2550560Z 
2025-02-25T14:23:43.2550640Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2550950Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2551230Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2551510Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2551920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2551920Z 
2025-02-25T14:23:43.2551990Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2552300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2552620Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2552940Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2553390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2553390Z 
2025-02-25T14:23:43.2553830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2554220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2554490Z        ...
2025-02-25T14:23:43.2554700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2555080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2555220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2555400Z        ...
2025-02-25T14:23:43.2555470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2555570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2555650Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2556080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2556080Z 
2025-02-25T14:23:43.2556190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2556280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2556330Z        ...
2025-02-25T14:23:43.2556400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2556510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2556600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2556650Z        ...
2025-02-25T14:23:43.2556720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2556820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2556890Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2557270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2557280Z 
2025-02-25T14:23:43.2557380Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2557470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2557520Z        ...
2025-02-25T14:23:43.2557580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2557680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2557760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2557820Z        ...
2025-02-25T14:23:43.2557880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2557980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2558060Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2559310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2559370Z 
2025-02-25T14:23:43.2559850Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:23:43.2560220Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2567540Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-25T14:23:43.2575270Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:23:43.2575530Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:23:43.2576020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2576030Z 
2025-02-25T14:23:43.2576140Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2576230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2576280Z        ...
2025-02-25T14:23:43.2576370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2576740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2576840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2576880Z        ...
2025-02-25T14:23:43.2576950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2577050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2577120Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2577540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2577550Z 
2025-02-25T14:23:43.2577740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2577830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2577880Z        ...
2025-02-25T14:23:43.2577950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2578050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2578140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2578190Z        ...
2025-02-25T14:23:43.2578260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2578350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2578430Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2578840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2578840Z 
2025-02-25T14:23:43.2578940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2579030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2579080Z        ...
2025-02-25T14:23:43.2579140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2579240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2579330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2579380Z        ...
2025-02-25T14:23:43.2579450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2579540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2579620Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2580010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2580020Z 
2025-02-25T14:23:43.2580120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2580210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2580260Z        ...
2025-02-25T14:23:43.2580330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2580430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2580510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2580570Z        ...
2025-02-25T14:23:43.2580630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2580730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2580810Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2581200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2581210Z 
2025-02-25T14:23:43.2581820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2581980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2582030Z        ...
2025-02-25T14:23:43.2582100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2582210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2582300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2582360Z        ...
2025-02-25T14:23:43.2582650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2582750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2582830Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2583260Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2583260Z 
2025-02-25T14:23:43.2583330Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2583640Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2584090Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2584370Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2584790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2584790Z 
2025-02-25T14:23:43.2584870Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2585180Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2585500Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2585810Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2586800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2586830Z 
2025-02-25T14:23:43.2586940Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2587030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2587080Z        ...
2025-02-25T14:23:43.2587160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2587260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2587350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2587550Z        ...
2025-02-25T14:23:43.2587620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2587720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2587810Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2588410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2588420Z 
2025-02-25T14:23:43.2588520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2588610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2588660Z        ...
2025-02-25T14:23:43.2588950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2589050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2589150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2589190Z        ...
2025-02-25T14:23:43.2589270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2589370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2589440Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2590170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2590180Z 
2025-02-25T14:23:43.2590280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2590370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2590420Z        ...
2025-02-25T14:23:43.2590490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2590590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2590690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2590730Z        ...
2025-02-25T14:23:43.2590890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2591010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2591090Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2591500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2591510Z 
2025-02-25T14:23:43.2591610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2591700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2591750Z        ...
2025-02-25T14:23:43.2591820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2591910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2592010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2592060Z        ...
2025-02-25T14:23:43.2592130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2592230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2592310Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2592720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2592720Z 
2025-02-25T14:23:43.2592820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2592910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2592960Z        ...
2025-02-25T14:23:43.2593020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2593120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2593210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2595880Z        ...
2025-02-25T14:23:43.2596040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2596150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2596530Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2596970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2596970Z 
2025-02-25T14:23:43.2597070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2597170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2597240Z        ...
2025-02-25T14:23:43.2597310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2597420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2597510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2597720Z        ...
2025-02-25T14:23:43.2597790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2597890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2597970Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2598380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2598390Z 
2025-02-25T14:23:43.2598500Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2599270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2599360Z        ...
2025-02-25T14:23:43.2599430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2599530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2599620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2599680Z        ...
2025-02-25T14:23:43.2599750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2599840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2599930Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2600500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2600510Z 
2025-02-25T14:23:43.2600590Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2600890Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2601170Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2601450Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2601860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2601860Z 
2025-02-25T14:23:43.2601940Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2603400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2604700Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2605040Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2605650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2605660Z 
2025-02-25T14:23:43.2605760Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2605860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2605900Z        ...
2025-02-25T14:23:43.2605970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2606080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2606160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2606220Z        ...
2025-02-25T14:23:43.2606280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2606390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2606460Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2606880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2606880Z 
2025-02-25T14:23:43.2606980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2607080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2607460Z        ...
2025-02-25T14:23:43.2607720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2608020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2608660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2608740Z        ...
2025-02-25T14:23:43.2608820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2608920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2609000Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2609390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2609390Z 
2025-02-25T14:23:43.2609490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2609580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2609640Z        ...
2025-02-25T14:23:43.2609720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2609820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2609910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2609960Z        ...
2025-02-25T14:23:43.2610030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2610130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2610210Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2610630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2610890Z 
2025-02-25T14:23:43.2611030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2611120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2611170Z        ...
2025-02-25T14:23:43.2611240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2611350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2611440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2611490Z        ...
2025-02-25T14:23:43.2611560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2611650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2611840Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2612250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2612260Z 
2025-02-25T14:23:43.2612360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2612440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2612490Z        ...
2025-02-25T14:23:43.2612560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2612660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2612750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2612800Z        ...
2025-02-25T14:23:43.2612870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2613270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2613370Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2613760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2613770Z 
2025-02-25T14:23:43.2613870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2613960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2614010Z        ...
2025-02-25T14:23:43.2614080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2614170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2614260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2614320Z        ...
2025-02-25T14:23:43.2614390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2614490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2614570Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2614980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2614990Z 
2025-02-25T14:23:43.2615090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2615180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2615230Z        ...
2025-02-25T14:23:43.2615300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2615400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2615480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2615530Z        ...
2025-02-25T14:23:43.2615600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2615690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2615770Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2616190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2616200Z 
2025-02-25T14:23:43.2616270Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2616570Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2616970Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2617310Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2617740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2617740Z 
2025-02-25T14:23:43.2617810Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2618470Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2618780Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2619100Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2619520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2619520Z 
2025-02-25T14:23:43.2619970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2620070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2620120Z        ...
2025-02-25T14:23:43.2620190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2620290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2620370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2620420Z        ...
2025-02-25T14:23:43.2620490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2620580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2620660Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2621110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2621110Z 
2025-02-25T14:23:43.2621220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2621390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2621440Z        ...
2025-02-25T14:23:43.2621500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2621730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2622380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2622440Z        ...
2025-02-25T14:23:43.2622510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2622610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2622680Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2623090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2623170Z 
2025-02-25T14:23:43.2623270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2623360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2623410Z        ...
2025-02-25T14:23:43.2623470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2623570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2623660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2623710Z        ...
2025-02-25T14:23:43.2623770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2623870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2623950Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2624380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2624390Z 
2025-02-25T14:23:43.2624500Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2624590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2624640Z        ...
2025-02-25T14:23:43.2624700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2624800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2624890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2624940Z        ...
2025-02-25T14:23:43.2625010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2625110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2625180Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2625620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2625620Z 
2025-02-25T14:23:43.2625780Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2625880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2625930Z        ...
2025-02-25T14:23:43.2626000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2626100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2626190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2626240Z        ...
2025-02-25T14:23:43.2626310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2626410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2626480Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2626920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2626930Z 
2025-02-25T14:23:43.2627030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2627120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2627170Z        ...
2025-02-25T14:23:43.2627230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2627480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2627570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2627620Z        ...
2025-02-25T14:23:43.2627680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2627780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2627860Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2628330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2628410Z 
2025-02-25T14:23:43.2628510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2628600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2628660Z        ...
2025-02-25T14:23:43.2628720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2628820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2628910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2628960Z        ...
2025-02-25T14:23:43.2629030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2629120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2629200Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2629680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2629690Z 
2025-02-25T14:23:43.2629760Z Series values are different (4.04858 %)
2025-02-25T14:23:43.2630450Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2630750Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2631370Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:23:43.2631880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:23:43.2631890Z 
2025-02-25T14:23:43.2631960Z Series values are different (6.47773 %)
2025-02-25T14:23:43.2632260Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2632570Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2633060Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:23:43.2633520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2633620Z 
2025-02-25T14:23:43.2633730Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2634210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2634270Z        ...
2025-02-25T14:23:43.2634340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2634440Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2634520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2634580Z        ...
2025-02-25T14:23:43.2634640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2634740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2634810Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2635560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2635870Z 
2025-02-25T14:23:43.2636020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2636110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2636160Z        ...
2025-02-25T14:23:43.2636230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2636340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2636430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2636470Z        ...
2025-02-25T14:23:43.2636540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2636640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2636720Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2637210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2637230Z 
2025-02-25T14:23:43.2637330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2637420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2637470Z        ...
2025-02-25T14:23:43.2637530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2637630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2637720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2637770Z        ...
2025-02-25T14:23:43.2637840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2637930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2638010Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2638490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2638500Z 
2025-02-25T14:23:43.2638600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2638690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2638730Z        ...
2025-02-25T14:23:43.2638800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2639080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2639170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2639220Z        ...
2025-02-25T14:23:43.2639280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2639380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2639460Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2639930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2639940Z 
2025-02-25T14:23:43.2640120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2640200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2640250Z        ...
2025-02-25T14:23:43.2640320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2640410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2640510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2640550Z        ...
2025-02-25T14:23:43.2640620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2640710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2640790Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2641270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:23:43.2641280Z 
2025-02-25T14:23:43.2641390Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:23:43.2641480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2641520Z        ...
2025-02-25T14:23:43.2641590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2641680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2641780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:23:43.2641830Z        ...
2025-02-25T14:23:43.2641900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:23:43.2641990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:23:43.2642070Z At positional index 75, first diff: 6 != 7
2025-02-25T14:23:43.2642320Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-25T14:23:43.2642390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2642400Z 
2025-02-25T14:23:43.2642470Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:23:43.2642530Z Max absolute difference: 1.
2025-02-25T14:23:43.2647240Z Max relative difference: 1.
2025-02-25T14:23:43.2647390Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.2647480Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.2647580Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:23:43.2647680Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.2647760Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:23:43.2647840Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:23:43.2648110Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-25T14:23:43.2648180Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2648180Z 
2025-02-25T14:23:43.2649230Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:23:43.2649310Z Max absolute difference: 4005
2025-02-25T14:23:43.2649370Z Max relative difference: 26.00649351
2025-02-25T14:23:43.2649460Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:23:43.2649540Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:23:43.2650000Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-25T14:23:43.2650080Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2650080Z 
2025-02-25T14:23:43.2650150Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:23:43.2650210Z Max absolute difference: 4046
2025-02-25T14:23:43.2650280Z Max relative difference: 24.82208589
2025-02-25T14:23:43.2650360Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:23:43.2650440Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:23:43.2650650Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-25T14:23:43.2650810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2650810Z 
2025-02-25T14:23:43.2650890Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:23:43.2650950Z Max absolute difference: 0.99984222
2025-02-25T14:23:43.2651020Z Max relative difference: 6337.12154973
2025-02-25T14:23:43.2651080Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2651140Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2651200Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.2651260Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2651320Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:23:43.2651370Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:23:43.2651570Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-25T14:23:43.2651640Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2651640Z 
2025-02-25T14:23:43.2651710Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:23:43.2651780Z Max absolute difference: 4.25260542e+12
2025-02-25T14:23:43.2651850Z Max relative difference: 18196.0085861
2025-02-25T14:23:43.2651970Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:23:43.2652030Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:23:43.2652140Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:23:43.2652530Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:23:43.2652600Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:23:43.2652710Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:23:43.2652900Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-25T14:23:43.2652970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2652970Z 
2025-02-25T14:23:43.2653050Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:23:43.2653110Z Max absolute difference: 2.92713618
2025-02-25T14:23:43.2653180Z Max relative difference: 18196.0085861
2025-02-25T14:23:43.2653300Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:23:43.2653360Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:23:43.2653470Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:23:43.2653530Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:23:43.2653740Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-25T14:23:43.2653810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2653810Z 
2025-02-25T14:23:43.2653880Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:23:43.2653950Z Max absolute difference: 282815.33818472
2025-02-25T14:23:43.2654020Z Max relative difference: 4.12352828e+47
2025-02-25T14:23:43.2654130Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:23:43.2654190Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:23:43.2654300Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:23:43.2654410Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:23:43.2654470Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:23:43.2654580Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:23:43.2655050Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2655050Z 
2025-02-25T14:23:43.2655180Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.2655230Z [index]: [0, 1]
2025-02-25T14:23:43.2655310Z [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-25T14:23:43.2655380Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:23:43.2655520Z At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-25T14:23:43.2655910Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2655950Z 
2025-02-25T14:23:43.2656090Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.2656150Z [index]: [0, 1]
2025-02-25T14:23:43.2656220Z [left]:  [9967.488442185557, 10091.396322818851]
2025-02-25T14:23:43.2656290Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:23:43.2656430Z At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-25T14:23:43.2656870Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:23:43.2656880Z 
2025-02-25T14:23:43.2657010Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:23:43.2657070Z [index]: [0, 1]
2025-02-25T14:23:43.2657140Z [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-25T14:23:43.2657220Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:23:43.2657350Z At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-25T14:23:43.2657670Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-25T14:23:43.2657670Z 
2025-02-25T14:23:43.2657740Z Series values are different (100.0 %)
2025-02-25T14:23:43.2657860Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.2658830Z [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-25T14:23:43.2659790Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:23:43.2659970Z At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-25T14:23:43.2660260Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-25T14:23:43.2660270Z 
2025-02-25T14:23:43.2660330Z Series values are different (100.0 %)
2025-02-25T14:23:43.2660440Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.2661230Z [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-25T14:23:43.2662310Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:23:43.2662460Z At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-25T14:23:43.2662770Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-25T14:23:43.2662940Z 
2025-02-25T14:23:43.2663030Z Series values are different (90.0 %)
2025-02-25T14:23:43.2663140Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.2663970Z [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-25T14:23:43.2664850Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:23:43.2665010Z At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-25T14:23:43.2665330Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-25T14:23:43.2665340Z 
2025-02-25T14:23:43.2665430Z Series values are different (95.0 %)
2025-02-25T14:23:43.2665540Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:23:43.2668830Z [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-25T14:23:43.2670400Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:23:43.2670590Z At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-25T14:23:43.2670880Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-25T14:23:43.2670890Z 
2025-02-25T14:23:43.2670960Z Series values are different (5.1125 %)
2025-02-25T14:23:43.2671260Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2675350Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:23:43.2679890Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:23:43.2680060Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:23:43.2680370Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-25T14:23:43.2680430Z 
2025-02-25T14:23:43.2680510Z Series values are different (1.3025 %)
2025-02-25T14:23:43.2680800Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:23:43.2685800Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:23:43.2691140Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:23:43.2691580Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:23:43.2691930Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-25T14:23:43.2692040Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2692050Z 
2025-02-25T14:23:43.2692150Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:23:43.2692230Z Max absolute difference: 4.30543741e+37
2025-02-25T14:23:43.2692300Z Max relative difference: 1.
2025-02-25T14:23:43.2692440Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2692510Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2692640Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2693950Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2694370Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-25T14:23:43.2694440Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2694450Z 
2025-02-25T14:23:43.2694510Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:23:43.2694580Z Max absolute difference: 4.15247374e+37
2025-02-25T14:23:43.2694640Z Max relative difference: 1.
2025-02-25T14:23:43.2694780Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2694830Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2694960Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2695030Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2695300Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-25T14:23:43.2695390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2695410Z 
2025-02-25T14:23:43.2695480Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:23:43.2695550Z Max absolute difference: 4.30543741e+37
2025-02-25T14:23:43.2695620Z Max relative difference: 1.
2025-02-25T14:23:43.2695750Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2695800Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2695930Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2696010Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2696320Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-25T14:23:43.2696420Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2696440Z 
2025-02-25T14:23:43.2696520Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:23:43.2697040Z Max absolute difference: 5.32418652e-19
2025-02-25T14:23:43.2697120Z Max relative difference: 12.23359055
2025-02-25T14:23:43.2697210Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2697920Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2698240Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2698440Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2698640Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2698820Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2699560Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-25T14:23:43.2700640Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2700660Z 
2025-02-25T14:23:43.2700940Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:23:43.2701170Z Max absolute difference: 1.38672909e+39
2025-02-25T14:23:43.2701380Z Max relative difference: 5.25284451
2025-02-25T14:23:43.2701920Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2702160Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2702570Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2702750Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2703380Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-25T14:23:43.2703490Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2703490Z 
2025-02-25T14:23:43.2703560Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:23:43.2703630Z Max absolute difference: 5.26760031e+38
2025-02-25T14:23:43.2703700Z Max relative difference: 35562.41947434
2025-02-25T14:23:43.2703830Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2703890Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2704010Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2704080Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2704770Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-25T14:23:43.2704850Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2704860Z 
2025-02-25T14:23:43.2704940Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:23:43.2705010Z Max absolute difference: 7.03072887e-19
2025-02-25T14:23:43.2705070Z Max relative difference: 7.72237896
2025-02-25T14:23:43.2705130Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2705190Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2705260Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2705320Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2705400Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2705450Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2705790Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-25T14:23:43.2705870Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2705880Z 
2025-02-25T14:23:43.2705940Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:23:43.2706010Z Max absolute difference: 2.09719426e+39
2025-02-25T14:23:43.2706080Z Max relative difference: 4.0036592
2025-02-25T14:23:43.2706190Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2706250Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2706370Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2706430Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2706810Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-25T14:23:43.2709660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2711120Z 
2025-02-25T14:23:43.2711240Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.2711320Z Max absolute difference: 5.00661745e+37
2025-02-25T14:23:43.2711380Z Max relative difference: 17.51202125
2025-02-25T14:23:43.2711500Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:23:43.2711580Z        2.279436e+31, 2.243943e+31])
2025-02-25T14:23:43.2711710Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:23:43.2711770Z        2.292907e+31, 2.257206e+31])
2025-02-25T14:23:43.2712140Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-25T14:23:43.2712330Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2712340Z 
2025-02-25T14:23:43.2712420Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:23:43.2712490Z Max absolute difference: 4.67863561e-19
2025-02-25T14:23:43.2712550Z Max relative difference: 3.25828651
2025-02-25T14:23:43.2712630Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2712690Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2712750Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2712810Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2716570Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2716680Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2717100Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-25T14:23:43.2717190Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2717200Z 
2025-02-25T14:23:43.2717280Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:23:43.2717400Z Max absolute difference: 8.5486318e+38
2025-02-25T14:23:43.2717510Z Max relative difference: 1.86186015
2025-02-25T14:23:43.2717650Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2717710Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2717860Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2717920Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2718290Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-25T14:23:43.2718370Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2718380Z 
2025-02-25T14:23:43.2718440Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.2718510Z Max absolute difference: 2.90101642e+37
2025-02-25T14:23:43.2718580Z Max relative difference: 0.98973757
2025-02-25T14:23:43.2718700Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:23:43.2718760Z        1.330497e+31, 1.294462e+31])
2025-02-25T14:23:43.2718870Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:23:43.2718930Z        1.375141e+31, 1.337928e+31])
2025-02-25T14:23:43.2720410Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-25T14:23:43.2720950Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2720980Z 
2025-02-25T14:23:43.2721100Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:23:43.2721180Z Max absolute difference: 4.67863561e-19
2025-02-25T14:23:43.2721250Z Max relative difference: 3.25828651
2025-02-25T14:23:43.2721310Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2721370Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2721430Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2721500Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2721560Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2721620Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2721980Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-25T14:23:43.2722250Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2722250Z 
2025-02-25T14:23:43.2722320Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:23:43.2722390Z Max absolute difference: 8.5486318e+38
2025-02-25T14:23:43.2722450Z Max relative difference: 1.86186015
2025-02-25T14:23:43.2722580Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2722630Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2722750Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2722810Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2723260Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-25T14:23:43.2723340Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2723340Z 
2025-02-25T14:23:43.2723410Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.2723480Z Max absolute difference: 2.99183385e+37
2025-02-25T14:23:43.2723550Z Max relative difference: 0.98992197
2025-02-25T14:23:43.2723660Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:23:43.2723720Z        1.260980e+31, 1.222587e+31])
2025-02-25T14:23:43.2723840Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:23:43.2723890Z        1.193005e+31, 1.164854e+31])
2025-02-25T14:23:43.2724250Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-25T14:23:43.2724330Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2724340Z 
2025-02-25T14:23:43.2724410Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:23:43.2724490Z Max absolute difference: 7.03072887e-19
2025-02-25T14:23:43.2724550Z Max relative difference: 7.72237896
2025-02-25T14:23:43.2724620Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2724680Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2724740Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2724800Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2724860Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:23:43.2724920Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:23:43.2725670Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-25T14:23:43.2725760Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2725760Z 
2025-02-25T14:23:43.2725830Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:23:43.2725910Z Max absolute difference: 2.09719426e+39
2025-02-25T14:23:43.2725980Z Max relative difference: 4.0036592
2025-02-25T14:23:43.2726110Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2726170Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2726290Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:23:43.2726350Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2726730Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-25T14:23:43.2726810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2726810Z 
2025-02-25T14:23:43.2726880Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:23:43.2726960Z Max absolute difference: 5.0153284e+37
2025-02-25T14:23:43.2727030Z Max relative difference: 4.90769503
2025-02-25T14:23:43.2727150Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:23:43.2727210Z        2.088676e+31, 2.060278e+31])
2025-02-25T14:23:43.2727330Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:23:43.2727390Z        2.124305e+31, 2.101081e+31])
2025-02-25T14:23:43.2727680Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-25T14:23:43.2727860Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:23:43.2727870Z 
2025-02-25T14:23:43.2727940Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:23:43.2728010Z Max absolute difference: 2.25821059e+25
2025-02-25T14:23:43.2728080Z Max relative difference: 0.00054426
2025-02-25T14:23:43.2728190Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:23:43.2728290Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:23:43.2728390Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:23:43.2728500Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:23:43.2728650Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:23:43.2728750Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:23:43.2729070Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-25T14:23:43.2729160Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:23:43.2729160Z 
2025-02-25T14:23:43.2729230Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:23:43.2729300Z Max absolute difference: 1.93283629e+25
2025-02-25T14:23:43.2729370Z Max relative difference: 0.00029148
2025-02-25T14:23:43.2729480Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:23:43.2729570Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:23:43.2729680Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:23:43.2729780Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:23:43.2729880Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:23:43.2729980Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:23:43.2730270Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-25T14:23:43.2730360Z Arrays are not equal
2025-02-25T14:23:43.2730370Z 
2025-02-25T14:23:43.2730430Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:23:43.2731000Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:23:43.2731230Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:23:43.2731500Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:23:43.2731810Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:23:43.2732020Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:23:43.2732270Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:23:43.2733370Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-25T14:23:43.2733610Z Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:23:43.2733630Z 
2025-02-25T14:23:43.2733850Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:23:43.2734080Z Max absolute difference: 2.00640487e-05
2025-02-25T14:23:43.2734280Z Max relative difference: 2.06329455
2025-02-25T14:23:43.2734660Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:23:43.2734860Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:23:43.2735210Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:23:43.2735400Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:23:43.2736250Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-25T14:23:43.2736410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2736410Z 
2025-02-25T14:23:43.2736480Z (shapes (508,), (515,) mismatch)
2025-02-25T14:23:43.2736610Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.2736700Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.2737290Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.2737400Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.2737490Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.2737600Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.2739690Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-25T14:23:43.2739990Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2740480Z 
2025-02-25T14:23:43.2740670Z (shapes (558,), (560,) mismatch)
2025-02-25T14:23:43.2740970Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.2741220Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.2741490Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.2741780Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.2742030Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.2742290Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.2743350Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-25T14:23:43.2743570Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2743580Z 
2025-02-25T14:23:43.2743760Z (shapes (147,), (136,) mismatch)
2025-02-25T14:23:43.2744280Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.2744380Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.2744480Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.2744590Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.2744690Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.2744790Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.2745190Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-25T14:23:43.2745270Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2745270Z 
2025-02-25T14:23:43.2745340Z (shapes (159,), (153,) mismatch)
2025-02-25T14:23:43.2745440Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.2745530Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.2745630Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.2745740Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.2745830Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.2745930Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.2746310Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-25T14:23:43.2746390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2746390Z 
2025-02-25T14:23:43.2746460Z (shapes (508,), (515,) mismatch)
2025-02-25T14:23:43.2746570Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:23:43.2746660Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:23:43.2746750Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:23:43.2746870Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:23:43.2746960Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:23:43.2747060Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:23:43.2749120Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-25T14:23:43.2749240Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2749240Z 
2025-02-25T14:23:43.2749300Z (shapes (1466,), (1481,) mismatch)
2025-02-25T14:23:43.2749440Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:23:43.2749500Z        11152.962595, 11172.044815])
2025-02-25T14:23:43.2749620Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:23:43.2749680Z        11398.237865, 11111.204868])
2025-02-25T14:23:43.2750070Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-25T14:23:43.2750410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2750420Z 
2025-02-25T14:23:43.2750480Z (shapes (147,), (136,) mismatch)
2025-02-25T14:23:43.2750600Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:23:43.2750690Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:23:43.2750790Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:23:43.2750900Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:23:43.2750990Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:23:43.2751080Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:23:43.2751440Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-25T14:23:43.2751530Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2751530Z 
2025-02-25T14:23:43.2751590Z (shapes (379,), (381,) mismatch)
2025-02-25T14:23:43.2751700Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:23:43.2751790Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:23:43.2751900Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:23:43.2752000Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:23:43.2752090Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:23:43.2752190Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:23:43.2752530Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-25T14:23:43.2752610Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2752610Z 
2025-02-25T14:23:43.2752690Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.2752770Z Max absolute difference: 22.
2025-02-25T14:23:43.2752830Z Max relative difference: 0.8
2025-02-25T14:23:43.2752890Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.2752950Z        [1.19e+04, 1.67e+02],
2025-02-25T14:23:43.2753010Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:23:43.2753070Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:23:43.2753120Z        [1.19e+04, 1.89e+02],
2025-02-25T14:23:43.2753180Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:23:43.2753870Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-25T14:23:43.2754170Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2754180Z 
2025-02-25T14:23:43.2754380Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.2754580Z Max absolute difference: 22.
2025-02-25T14:23:43.2754770Z Max relative difference: 0.8
2025-02-25T14:23:43.2754980Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:23:43.2755130Z        [1.19e+04, 1.67e+02],
2025-02-25T14:23:43.2755320Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:23:43.2755550Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:23:43.2755720Z        [1.19e+04, 1.89e+02],
2025-02-25T14:23:43.2756160Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:23:43.2756770Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-25T14:23:43.2756860Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2756860Z 
2025-02-25T14:23:43.2756940Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.2757010Z Max absolute difference: 34
2025-02-25T14:23:43.2757080Z Max relative difference: 0.71428571
2025-02-25T14:23:43.2757200Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.2757270Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2757380Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.2757570Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2757930Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-25T14:23:43.2758020Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2758020Z 
2025-02-25T14:23:43.2758080Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:23:43.2758160Z Max absolute difference: 34.
2025-02-25T14:23:43.2758240Z Max relative difference: 0.65
2025-02-25T14:23:43.2758310Z  x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:23:43.2758390Z        [1.19e+04, 2.72e+02],
2025-02-25T14:23:43.2758470Z        [1.19e+04, 1.10e+02],...
2025-02-25T14:23:43.2758540Z  y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:23:43.2758600Z        [1.19e+04, 3.06e+02],
2025-02-25T14:23:43.2758690Z        [1.19e+04, 1.18e+02],...
2025-02-25T14:23:43.2759460Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:23:43.2759780Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2759800Z 
2025-02-25T14:23:43.2759900Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.2759960Z Max absolute difference: 22
2025-02-25T14:23:43.2760030Z Max relative difference: 0.8
2025-02-25T14:23:43.2760150Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:23:43.2760220Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.2760340Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.2760400Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.2760760Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:23:43.2760840Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2760850Z 
2025-02-25T14:23:43.2760920Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.2760990Z Max absolute difference: 22
2025-02-25T14:23:43.2761050Z Max relative difference: 0.8
2025-02-25T14:23:43.2761160Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:23:43.2761220Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.2761330Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:23:43.2761390Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:23:43.2761750Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:23:43.2761820Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2761830Z 
2025-02-25T14:23:43.2761890Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.2761950Z Max absolute difference: 34
2025-02-25T14:23:43.2762020Z Max relative difference: 0.71428571
2025-02-25T14:23:43.2762120Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.2762190Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2762300Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.2762360Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2762870Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:23:43.2762950Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:23:43.2762950Z 
2025-02-25T14:23:43.2763010Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:23:43.2763070Z Max absolute difference: 34
2025-02-25T14:23:43.2763140Z Max relative difference: 0.65
2025-02-25T14:23:43.2763240Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:23:43.2763300Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2763410Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:23:43.2763540Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:23:43.2763930Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-25T14:23:43.2764010Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2764010Z 
2025-02-25T14:23:43.2764080Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2764140Z Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.2764210Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2764330Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2764380Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2764500Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2764560Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2764930Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-25T14:23:43.2765010Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2765020Z 
2025-02-25T14:23:43.2765090Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2773260Z Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.2773380Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2773500Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2773580Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2773700Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2773760Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2774180Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-25T14:23:43.2774260Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2774270Z 
2025-02-25T14:23:43.2774340Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2774420Z Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.2774480Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2774610Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2774660Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2774780Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2774840Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2775220Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-25T14:23:43.2775300Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2775300Z 
2025-02-25T14:23:43.2775370Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2775450Z Max absolute difference: 4.3299331e-05
2025-02-25T14:23:43.2775530Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2775640Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2775730Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2775840Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2775900Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2776290Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-25T14:23:43.2776740Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2776740Z 
2025-02-25T14:23:43.2776810Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2776880Z Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.2776950Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2777070Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2777130Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2777250Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2777440Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2777830Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-25T14:23:43.2777910Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2777910Z 
2025-02-25T14:23:43.2778660Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2778760Z Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.2778830Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2778950Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2779020Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2779130Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2779190Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2779580Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-25T14:23:43.2779660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2779660Z 
2025-02-25T14:23:43.2779730Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2779810Z Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.2779900Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2780030Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2780100Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2780210Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2780270Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2780670Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-25T14:23:43.2780770Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2780780Z 
2025-02-25T14:23:43.2780850Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2780920Z Max absolute difference: 3.16368526e-05
2025-02-25T14:23:43.2780990Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2781110Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2781190Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2781320Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:23:43.2781380Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2781770Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-25T14:23:43.2781870Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2781880Z 
2025-02-25T14:23:43.2781950Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2782010Z Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.2782080Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2782210Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2782300Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2782420Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2782480Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2782980Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-25T14:23:43.2783060Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2783060Z 
2025-02-25T14:23:43.2783130Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2783190Z Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.2783260Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2784240Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2784550Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2784890Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2785740Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2786220Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-25T14:23:43.2786320Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2786320Z 
2025-02-25T14:23:43.2786390Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2786460Z Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.2786530Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2786660Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2786720Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2786840Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2786900Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2787280Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-25T14:23:43.2787370Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2787380Z 
2025-02-25T14:23:43.2787440Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:23:43.2787520Z Max absolute difference: 5.1807441e+47
2025-02-25T14:23:43.2787580Z Max relative difference: 4.76021355
2025-02-25T14:23:43.2787710Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2787760Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2787880Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2787940Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2788320Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-25T14:23:43.2788400Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2788400Z 
2025-02-25T14:23:43.2788480Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2788570Z Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.2788640Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2788760Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2788810Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2788930Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2788990Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2789370Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-25T14:23:43.2789450Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2789450Z 
2025-02-25T14:23:43.2789520Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2789590Z Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.2789650Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2789770Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2789830Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2789940Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2790000Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2790580Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-25T14:23:43.2790660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2790660Z 
2025-02-25T14:23:43.2790730Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2790800Z Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.2790870Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2791000Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2791060Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2791300Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2791370Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2791750Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-25T14:23:43.2791830Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2791830Z 
2025-02-25T14:23:43.2791900Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:23:43.2791970Z Max absolute difference: 3.78533417e+47
2025-02-25T14:23:43.2792030Z Max relative difference: 178.93768705
2025-02-25T14:23:43.2792150Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2792200Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2792320Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:23:43.2792380Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2792720Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:23:43.2792810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2792810Z 
2025-02-25T14:23:43.2792880Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2792950Z Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.2793010Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2793140Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2793200Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2793330Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2793390Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2793730Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:23:43.2793810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2793820Z 
2025-02-25T14:23:43.2793880Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2793950Z Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.2794020Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2794140Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2794200Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2794310Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2794370Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2794710Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-25T14:23:43.2794790Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2794790Z 
2025-02-25T14:23:43.2794860Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2794920Z Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.2795310Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2795770Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2797010Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2797200Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2797270Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2797780Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-25T14:23:43.2797860Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2797860Z 
2025-02-25T14:23:43.2797930Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2798000Z Max absolute difference: 2.08771842e-13
2025-02-25T14:23:43.2798070Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2798190Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2798250Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2798360Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2798490Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2798840Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:23:43.2798920Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2798920Z 
2025-02-25T14:23:43.2798990Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2799060Z Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.2799130Z Max relative difference: 15766.1580412
2025-02-25T14:23:43.2799430Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2800250Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2800430Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2800500Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2800850Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:23:43.2800940Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2800940Z 
2025-02-25T14:23:43.2801010Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2801080Z Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.2801150Z Max relative difference: 15766.1580412
2025-02-25T14:23:43.2801270Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2801330Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2801450Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2801510Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2801850Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-25T14:23:43.2801920Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2801920Z 
2025-02-25T14:23:43.2801990Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2802070Z Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.2802150Z Max relative difference: 15766.1580412
2025-02-25T14:23:43.2802270Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2802340Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2802460Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2802520Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2802890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-25T14:23:43.2802970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2802970Z 
2025-02-25T14:23:43.2803040Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2803110Z Max absolute difference: 3.02728422e-13
2025-02-25T14:23:43.2803170Z Max relative difference: 15766.1580412
2025-02-25T14:23:43.2803290Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2803350Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2803480Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:23:43.2803530Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2804140Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-25T14:23:43.2804220Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2804220Z 
2025-02-25T14:23:43.2804280Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2804350Z Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2804410Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2804530Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2804580Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2804700Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2804860Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2805220Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-25T14:23:43.2805300Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2805310Z 
2025-02-25T14:23:43.2805370Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2805440Z Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2805500Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2805620Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2805680Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2805790Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2805850Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2806200Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-25T14:23:43.2806280Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2806280Z 
2025-02-25T14:23:43.2806350Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2806420Z Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2806480Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2806600Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2806650Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2806760Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2806820Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2807160Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-25T14:23:43.2807230Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2807240Z 
2025-02-25T14:23:43.2807300Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:23:43.2807370Z Max absolute difference: 2.49794504e+39
2025-02-25T14:23:43.2807440Z Max relative difference: 3.01858991
2025-02-25T14:23:43.2807550Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2807600Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2807720Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2807780Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2808120Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-25T14:23:43.2808200Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2808200Z 
2025-02-25T14:23:43.2808260Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2808330Z Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2808400Z Max relative difference: 15766.15804934
2025-02-25T14:23:43.2808510Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2808570Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2808690Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2808740Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2809080Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-25T14:23:43.2809250Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2809250Z 
2025-02-25T14:23:43.2809310Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2809380Z Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2809440Z Max relative difference: 15766.15804934
2025-02-25T14:23:43.2809560Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2809620Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2809740Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2809840Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2810190Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-25T14:23:43.2810270Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2810270Z 
2025-02-25T14:23:43.2810340Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2810410Z Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2810470Z Max relative difference: 15766.15804934
2025-02-25T14:23:43.2810590Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2810640Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2810760Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2810820Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2811170Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-25T14:23:43.2811240Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:23:43.2811250Z 
2025-02-25T14:23:43.2811320Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:23:43.2811400Z Max absolute difference: 3.62213099e+39
2025-02-25T14:23:43.2811470Z Max relative difference: 15766.15804934
2025-02-25T14:23:43.2811590Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2811650Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2811760Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:23:43.2811820Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:23:43.2812050Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 908.89s (0:15:08) =
2025-02-25T14:23:43.2812410Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2812420Z 
2025-02-25T14:23:43.2812970Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-25T14:23:43.2812990Z 
2025-02-25T14:23:43.2813260Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2813260Z 
2025-02-25T14:23:43.2813820Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-25T14:23:43.2813830Z 
2025-02-25T14:23:43.2814100Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2814110Z 
2025-02-25T14:23:43.2814650Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-25T14:23:43.2814660Z 
2025-02-25T14:23:43.2814920Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2814930Z 
2025-02-25T14:23:43.2815510Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-25T14:23:43.2815630Z 
2025-02-25T14:23:43.2815920Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2815920Z 
2025-02-25T14:23:43.2816490Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-25T14:23:43.2816490Z 
2025-02-25T14:23:43.2816750Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2816860Z 
2025-02-25T14:23:43.2817420Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-25T14:23:43.2817420Z 
2025-02-25T14:23:43.2817680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2817690Z 
2025-02-25T14:23:43.2818210Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-25T14:23:43.2818210Z 
2025-02-25T14:23:43.2818480Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2818480Z 
2025-02-25T14:23:43.2819020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-25T14:23:43.2819030Z 
2025-02-25T14:23:43.2819320Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2819320Z 
2025-02-25T14:23:43.2819890Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-25T14:23:43.2819900Z 
2025-02-25T14:23:43.2820160Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2820160Z 
2025-02-25T14:23:43.2820700Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-25T14:23:43.2820710Z 
2025-02-25T14:23:43.2820970Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2820970Z 
2025-02-25T14:23:43.2821500Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-25T14:23:43.2821510Z 
2025-02-25T14:23:43.2821780Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2821780Z 
2025-02-25T14:23:43.2822360Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-25T14:23:43.2822370Z 
2025-02-25T14:23:43.2822650Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2822660Z 
2025-02-25T14:23:43.2823230Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-25T14:23:43.2823240Z 
2025-02-25T14:23:43.2823650Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2823660Z 
2025-02-25T14:23:43.2824180Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-25T14:23:43.2824180Z 
2025-02-25T14:23:43.2824440Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2824440Z 
2025-02-25T14:23:43.2825010Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-25T14:23:43.2825080Z 
2025-02-25T14:23:43.2825360Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2825360Z 
2025-02-25T14:23:43.2825880Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-25T14:23:43.2825880Z 
2025-02-25T14:23:43.2826140Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2826140Z 
2025-02-25T14:23:43.2827710Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-25T14:23:43.2827850Z 
2025-02-25T14:23:43.2828680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2828690Z 
2025-02-25T14:23:43.2829450Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-25T14:23:43.2829480Z 
2025-02-25T14:23:43.2829790Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2829790Z 
2025-02-25T14:23:43.2830330Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-25T14:23:43.2830340Z 
2025-02-25T14:23:43.2830600Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2830620Z 
2025-02-25T14:23:43.2831150Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-25T14:23:43.2831150Z 
2025-02-25T14:23:43.2831430Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2831440Z 
2025-02-25T14:23:43.2832070Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-25T14:23:43.2832080Z 
2025-02-25T14:23:43.2832360Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:23:43.2832370Z 
2025-02-25T14:23:43.2832930Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-25T14:23:43.2832940Z 
2025-02-25T14:23:45.6048590Z ##[error]Process completed with exit code 1.
